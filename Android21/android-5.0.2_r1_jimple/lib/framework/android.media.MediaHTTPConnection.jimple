public class android.media.MediaHTTPConnection extends android.media.IMediaHTTPConnection$Stub
{
    private static final java.lang.String TAG;
    private static final boolean VERBOSE;
    private long mCurrentOffset;
    private java.net.URL mURL;
    private java.util.Map mHeaders;
    private java.net.HttpURLConnection mConnection;
    private long mTotalSize;
    private java.io.InputStream mInputStream;
    private boolean mAllowCrossDomainRedirect;
    private boolean mAllowCrossProtocolRedirect;
    private static final int HTTP_TEMP_REDIRECT;
    private static final int MAX_REDIRECTS;
    private long mNativeContext;

    public void <init>()
    {
        android.media.MediaHTTPConnection r0;
        java.net.CookieHandler $r1;
        java.net.CookieManager $r2;

        r0 := @this: android.media.MediaHTTPConnection;

        specialinvoke r0.<android.media.IMediaHTTPConnection$Stub: void <init>()>();

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = null;

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = null;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = null;

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = null;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = 1;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect> = 1;

        $r1 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();

        if $r1 != null goto label1;

        $r2 = new java.net.CookieManager;

        specialinvoke $r2.<java.net.CookieManager: void <init>()>();

        staticinvoke <java.net.CookieHandler: void setDefault(java.net.CookieHandler)>($r2);

     label1:
        specialinvoke r0.<android.media.MediaHTTPConnection: void native_setup()>();

        return;
    }

    public android.os.IBinder connect(java.lang.String, java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, r2;
        java.net.URL $r4;
        java.util.Map $r5;
        android.os.IBinder $r6;
        java.net.MalformedURLException $r7;

        r0 := @this: android.media.MediaHTTPConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r0.<android.media.MediaHTTPConnection: void disconnect()>();

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = 1;

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = $r4;

        $r5 = specialinvoke r0.<android.media.MediaHTTPConnection: java.util.Map convertHeaderStringToMap(java.lang.String)>(r2);

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        return null;

     label4:
        $r6 = specialinvoke r0.<android.media.MediaHTTPConnection: android.os.IBinder native_getIMemory()>();

        return $r6;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private boolean parseBoolean(java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, $r4, $r5;
        long $l0;
        byte $b1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.NumberFormatException $r3;

        r0 := @this: android.media.MediaHTTPConnection;

        r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        $r4 = "true";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 != 0 goto label5;

        $r5 = "yes";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z2 == 0 goto label6;

     label5:
        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private boolean filterOutInternalHeaders(java.lang.String, java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.media.MediaHTTPConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = "android-allow-cross-domain-redirect";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.media.MediaHTTPConnection: boolean parseBoolean(java.lang.String)>(r2);

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect> = $z1;

        $z2 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect> = $z2;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private java.util.Map convertHeaderStringToMap(java.lang.String)
    {
        android.media.MediaHTTPConnection r0;
        java.lang.String r1, r5, r6, r7;
        java.util.HashMap r2, $r8;
        java.lang.String[] r3, r4;
        int i0, i1, i2, $i3;
        boolean $z0;

        r0 := @this: android.media.MediaHTTPConnection;

        r1 := @parameter0: java.lang.String;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\r\n");

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        i2 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(":");

        if i2 < 0 goto label2;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i3 = i2 + 1;

        r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i3);

        $z0 = specialinvoke r0.<android.media.MediaHTTPConnection: boolean filterOutInternalHeaders(java.lang.String,java.lang.String)>(r6, r7);

        if $z0 != 0 goto label2;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    public void disconnect()
    {
        android.media.MediaHTTPConnection r0;

        r0 := @this: android.media.MediaHTTPConnection;

        specialinvoke r0.<android.media.MediaHTTPConnection: void teardownConnection()>();

        r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders> = null;

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = null;

        return;
    }

    private void teardownConnection()
    {
        android.media.MediaHTTPConnection r0;
        java.net.HttpURLConnection $r1, $r2;

        r0 := @this: android.media.MediaHTTPConnection;

        $r1 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        if $r1 == null goto label1;

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = null;

        $r2 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        virtualinvoke $r2.<java.net.HttpURLConnection: void disconnect()>();

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = null;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

     label1:
        return;
    }

    private static final boolean isLocalHost(java.net.URL)
    {
        java.net.URL r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.net.InetAddress $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: java.net.URL;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("localhost");

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        $r3 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r1);

        $z1 = virtualinvoke $r3.<java.net.InetAddress: boolean isLoopbackAddress()>();

        if $z1 == 0 goto label6;

     label5:
        return 1;

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

     label8:
        return 0;

        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
    }

    private void seekTo(long) throws java.io.IOException
    {
        android.media.MediaHTTPConnection r0;
        long l0, $l4, $l8;
        int i1, i2, $i5, $i7, i9;
        java.net.URL r1, $r11, $r12, $r15, $r19, $r39;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.net.URLConnection $r4, $r56;
        java.net.HttpURLConnection $r5, $r6, $r8, $r9, $r10, $r31, $r33, $r35, $r38, $r41, $r54, $r55;
        byte $b3, $b6;
        java.util.Map $r7, $r43;
        java.lang.String $r13, $r14, $r16, $r17, $r18, $r24, $r27, $r42, $r49, $r51, r59, r60, r61, r62;
        java.net.NoRouteToHostException $r20, $r21, $r22, $r23, $r25, $r26;
        java.lang.StringBuilder $r28, $r29, $r30, $r40, $r45, $r46, $r47;
        java.io.InputStream $r32;
        java.io.BufferedInputStream $r34;
        java.io.IOException $r36, $r37, $r57, r64;
        java.util.Set $r44;
        java.lang.Object $r48, $r52, $r53;
        java.net.Proxy $r50;
        java.lang.NumberFormatException $r58;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        specialinvoke r0.<android.media.MediaHTTPConnection: void teardownConnection()>();

     label01:
        i2 = 0;

        r1 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        z0 = staticinvoke <android.media.MediaHTTPConnection: boolean isLocalHost(java.net.URL)>(r1);

     label02:
        if z0 == 0 goto label03;

        $r50 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        $r56 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>($r50);

        $r55 = (java.net.HttpURLConnection) $r56;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = $r55;

        goto label04;

     label03:
        $r4 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r5 = (java.net.HttpURLConnection) $r4;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = $r5;

     label04:
        $r6 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $z3 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>($z3);

        $r7 = r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders>;

        if $r7 == null goto label06;

        $r43 = r0.<android.media.MediaHTTPConnection: java.util.Map mHeaders>;

        $r44 = interfaceinvoke $r43.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r44.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z11 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r52 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r52;

        $r54 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r53 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r49 = (java.lang.String) $r53;

        $r48 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r51 = (java.lang.String) $r48;

        virtualinvoke $r54.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r49, $r51);

        goto label05;

     label06:
        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label07;

        $r41 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r42 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Range", $r42);

     label07:
        $r8 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        i1 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

        if i1 == 300 goto label08;

        if i1 == 301 goto label08;

        if i1 == 302 goto label08;

        if i1 == 303 goto label08;

        if i1 == 307 goto label08;

        goto label16;

     label08:
        i2 = i2 + 1;

        if i2 <= 20 goto label09;

        $r26 = new java.net.NoRouteToHostException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many redirects: ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.net.NoRouteToHostException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label09:
        $r9 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r59 = virtualinvoke $r9.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        if i1 != 307 goto label10;

        $z8 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z8 != 0 goto label10;

        $z9 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z9 != 0 goto label10;

        $r25 = new java.net.NoRouteToHostException;

        specialinvoke $r25.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Invalid redirect");

        throw $r25;

     label10:
        $r10 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r60 = virtualinvoke $r10.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

        if r60 != null goto label11;

        $r23 = new java.net.NoRouteToHostException;

        specialinvoke $r23.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Invalid redirect");

        throw $r23;

     label11:
        $r12 = new java.net.URL;

        $r11 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        specialinvoke $r12.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r11, r60);

        r1 = $r12;

        $r13 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z4 != 0 goto label12;

        $r24 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z7 != 0 goto label12;

        $r22 = new java.net.NoRouteToHostException;

        specialinvoke $r22.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Unsupported protocol redirect");

        throw $r22;

     label12:
        $r15 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        $r14 = virtualinvoke $r15.<java.net.URL: java.lang.String getProtocol()>();

        $r16 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        $z5 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossProtocolRedirect>;

        if $z5 != 0 goto label13;

        if z1 != 0 goto label13;

        $r21 = new java.net.NoRouteToHostException;

        specialinvoke $r21.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Cross-protocol redirects are disallowed");

        throw $r21;

     label13:
        $r19 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        $r17 = virtualinvoke $r19.<java.net.URL: java.lang.String getHost()>();

        $r18 = virtualinvoke r1.<java.net.URL: java.lang.String getHost()>();

        z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        $z6 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        if $z6 != 0 goto label14;

        if z2 != 0 goto label14;

        $r20 = new java.net.NoRouteToHostException;

        specialinvoke $r20.<java.net.NoRouteToHostException: void <init>(java.lang.String)>("Cross-domain redirects are disallowed");

        throw $r20;

     label14:
        if i1 == 307 goto label15;

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = r1;

     label15:
        goto label02;

     label16:
        $z10 = r0.<android.media.MediaHTTPConnection: boolean mAllowCrossDomainRedirect>;

        if $z10 == 0 goto label17;

        $r38 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r39 = virtualinvoke $r38.<java.net.HttpURLConnection: java.net.URL getURL()>();

        r0.<android.media.MediaHTTPConnection: java.net.URL mURL> = $r39;

     label17:
        if i1 != 206 goto label22;

        $r35 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        r61 = virtualinvoke $r35.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Range");

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

        if r61 == null goto label21;

        i9 = virtualinvoke r61.<java.lang.String: int lastIndexOf(int)>(47);

        if i9 < 0 goto label21;

        $i7 = i9 + 1;

        r62 = virtualinvoke r61.<java.lang.String: java.lang.String substring(int)>($i7);

     label18:
        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r62);

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = $l8;

     label19:
        goto label21;

     label20:
        $r58 := @caughtexception;

     label21:
        goto label24;

     label22:
        if i1 == 200 goto label23;

        $r36 = new java.io.IOException;

        specialinvoke $r36.<java.io.IOException: void <init>()>();

        throw $r36;

     label23:
        $r31 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $i5 = virtualinvoke $r31.<java.net.HttpURLConnection: int getContentLength()>();

        $l4 = (long) $i5;

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = $l4;

     label24:
        $b6 = l0 cmp 0L;

        if $b6 <= 0 goto label25;

        if i1 == 206 goto label25;

        $r37 = new java.io.IOException;

        specialinvoke $r37.<java.io.IOException: void <init>()>();

        throw $r37;

     label25:
        $r34 = new java.io.BufferedInputStream;

        $r33 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r32 = virtualinvoke $r33.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r34.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r32);

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = $r34;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = l0;

     label26:
        goto label28;

     label27:
        $r57 := @caughtexception;

        r64 = $r57;

        r0.<android.media.MediaHTTPConnection: long mTotalSize> = -1L;

        r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream> = null;

        r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection> = null;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = -1L;

        throw r64;

     label28:
        return;

        catch java.lang.NumberFormatException from label18 to label19 with label20;
        catch java.io.IOException from label01 to label26 with label27;
    }

    public int readAt(long, int)
    {
        android.media.MediaHTTPConnection r0;
        long l0;
        int i1, $i2;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<android.media.MediaHTTPConnection: int native_readAt(long,int)>(l0, i1);

        return $i2;
    }

    private int readAt(long, byte[], int)
    {
        android.media.MediaHTTPConnection r0;
        long l0, $l3, $l5, $l6, $l7;
        byte[] r1;
        int i1, i2;
        android.os.StrictMode$ThreadPolicy r2;
        android.os.StrictMode$ThreadPolicy$Builder $r3, $r4;
        byte $b4;
        java.io.InputStream $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r13, $r15;
        java.net.NoRouteToHostException $r8, r17;
        java.lang.String $r14;
        java.lang.Exception $r16;

        r0 := @this: android.media.MediaHTTPConnection;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r3 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>();

        r2 = virtualinvoke $r4.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

     label1:
        $l3 = r0.<android.media.MediaHTTPConnection: long mCurrentOffset>;

        $b4 = l0 cmp $l3;

        if $b4 == 0 goto label2;

        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(l0);

     label2:
        $r5 = r0.<android.media.MediaHTTPConnection: java.io.InputStream mInputStream>;

        i2 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, i1);

        if i2 != -1 goto label3;

        i2 = 0;

     label3:
        $l6 = r0.<android.media.MediaHTTPConnection: long mCurrentOffset>;

        $l5 = (long) i2;

        $l7 = $l6 + $l5;

        r0.<android.media.MediaHTTPConnection: long mCurrentOffset> = $l7;

     label4:
        return i2;

     label5:
        $r8 := @caughtexception;

        r17 = $r8;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAt ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaHTTPConnection", $r14);

        return -1010;

     label6:
        $r6 := @caughtexception;

        return -1;

     label7:
        $r16 := @caughtexception;

        return -1;

        catch java.net.NoRouteToHostException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
        catch java.lang.Exception from label1 to label4 with label7;
    }

    public long getSize()
    {
        android.media.MediaHTTPConnection r0;
        java.net.HttpURLConnection $r2;
        long $l0;
        java.io.IOException $r3;

        r0 := @this: android.media.MediaHTTPConnection;

        $r2 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        if $r2 != null goto label4;

     label1:
        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(0L);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        return -1L;

     label4:
        $l0 = r0.<android.media.MediaHTTPConnection: long mTotalSize>;

        return $l0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getMIMEType()
    {
        android.media.MediaHTTPConnection r0;
        java.net.HttpURLConnection $r2, $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        r0 := @this: android.media.MediaHTTPConnection;

        $r2 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        if $r2 != null goto label4;

     label1:
        specialinvoke r0.<android.media.MediaHTTPConnection: void seekTo(long)>(0L);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return "application/octet-stream";

     label4:
        $r3 = r0.<android.media.MediaHTTPConnection: java.net.HttpURLConnection mConnection>;

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getUri()
    {
        android.media.MediaHTTPConnection r0;
        java.net.URL $r1;
        java.lang.String $r2;

        r0 := @this: android.media.MediaHTTPConnection;

        $r1 = r0.<android.media.MediaHTTPConnection: java.net.URL mURL>;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        return $r2;
    }

    protected void finalize()
    {
        android.media.MediaHTTPConnection r0;

        r0 := @this: android.media.MediaHTTPConnection;

        specialinvoke r0.<android.media.MediaHTTPConnection: void native_finalize()>();

        return;
    }

    private static final native void native_init();

    private final native void native_setup();

    private final native void native_finalize();

    private final native android.os.IBinder native_getIMemory();

    private final native int native_readAt(long, int);

    static void <clinit>()
    {
        <android.media.MediaHTTPConnection: int MAX_REDIRECTS> = 20;

        <android.media.MediaHTTPConnection: int HTTP_TEMP_REDIRECT> = 307;

        <android.media.MediaHTTPConnection: boolean VERBOSE> = 0;

        <android.media.MediaHTTPConnection: java.lang.String TAG> = "MediaHTTPConnection";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaHTTPConnection: void native_init()>();

        return;
    }
}
