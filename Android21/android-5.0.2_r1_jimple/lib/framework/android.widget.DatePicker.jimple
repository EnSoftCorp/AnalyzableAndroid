public class android.widget.DatePicker extends android.widget.FrameLayout
{
    private static final java.lang.String LOG_TAG;
    private static final int MODE_SPINNER;
    private static final int MODE_CALENDAR;
    private final android.widget.DatePicker$DatePickerDelegate mDelegate;

    public void <init>(android.content.Context)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843612);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3;
        android.content.res.TypedArray r3;
        int[] $r4;
        android.widget.DatePicker$DatePickerDelegate $r5, $r6;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r4 = <com.android.internal.R$styleable: int[] DatePicker>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, i0, i1);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(16, 1);

        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        lookupswitch(i2)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r5 = specialinvoke r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate createCalendarUIDelegate(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate> = $r5;

        goto label3;

     label2:
        $r6 = specialinvoke r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate createSpinnerUIDelegate(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate> = $r6;

     label3:
        if i3 == 0 goto label4;

        virtualinvoke r0.<android.widget.DatePicker: void setFirstDayOfWeek(int)>(i3);

     label4:
        return;
    }

    private android.widget.DatePicker$DatePickerDelegate createSpinnerUIDelegate(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.widget.DatePicker$DatePickerSpinnerDelegate $r3;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = new android.widget.DatePicker$DatePickerSpinnerDelegate;

        specialinvoke $r3.<android.widget.DatePicker$DatePickerSpinnerDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>(r0, r1, r2, i0, i1);

        return $r3;
    }

    private android.widget.DatePicker$DatePickerDelegate createCalendarUIDelegate(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.widget.DatePickerCalendarDelegate $r3;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = new android.widget.DatePickerCalendarDelegate;

        specialinvoke $r3.<android.widget.DatePickerCalendarDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>(r0, r1, r2, i0, i1);

        return $r3;
    }

    public void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)
    {
        android.widget.DatePicker r0;
        int i0, i1, i2;
        android.widget.DatePicker$OnDateChangedListener r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.widget.DatePicker$OnDateChangedListener;

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>(i0, i1, i2, r1);

        return;
    }

    public void updateDate(int, int, int)
    {
        android.widget.DatePicker r0;
        int i0, i1, i2;
        android.widget.DatePicker$DatePickerDelegate $r1;

        r0 := @this: android.widget.DatePicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: void updateDate(int,int,int)>(i0, i1, i2);

        return;
    }

    public int getYear()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $i0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: int getYear()>();

        return $i0;
    }

    public int getMonth()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $i0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: int getMonth()>();

        return $i0;
    }

    public int getDayOfMonth()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $i0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: int getDayOfMonth()>();

        return $i0;
    }

    public long getMinDate()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        java.util.Calendar $r2;
        long $l0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $r2 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: java.util.Calendar getMinDate()>();

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public void setMinDate(long)
    {
        android.widget.DatePicker r0;
        long l0;
        android.widget.DatePicker$DatePickerDelegate $r1;

        r0 := @this: android.widget.DatePicker;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: void setMinDate(long)>(l0);

        return;
    }

    public long getMaxDate()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        java.util.Calendar $r2;
        long $l0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $r2 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: java.util.Calendar getMaxDate()>();

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        return $l0;
    }

    public void setMaxDate(long)
    {
        android.widget.DatePicker r0;
        long l0;
        android.widget.DatePicker$DatePickerDelegate $r1;

        r0 := @this: android.widget.DatePicker;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: void setMaxDate(long)>(l0);

        return;
    }

    public void setValidationCallback(android.widget.DatePicker$ValidationCallback)
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$ValidationCallback r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.widget.DatePicker$ValidationCallback;

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void setValidationCallback(android.widget.DatePicker$ValidationCallback)>(r1);

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.DatePicker r0;
        boolean z0, $z1;
        android.widget.DatePicker$DatePickerDelegate $r1, $r2;

        r0 := @this: android.widget.DatePicker;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $z1 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: boolean isEnabled()>();

        if $z1 != z0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void setEnabled(boolean)>(z0);

        return;
    }

    public boolean isEnabled()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        boolean $z0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $z0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: boolean isEnabled()>();

        return $z0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.widget.DatePicker$DatePickerDelegate $r2;
        boolean $z0;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $z0 = interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.DatePicker r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.DatePicker r0;
        android.content.res.Configuration r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.FrameLayout: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.DatePicker r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 7 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("firstDayOfWeek must be between 1 and 7");

        throw $r1;

     label2:
        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $i0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: int getFirstDayOfWeek()>();

        return $i0;
    }

    public boolean getCalendarViewShown()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        boolean $z0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $z0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: boolean getCalendarViewShown()>();

        return $z0;
    }

    public android.widget.CalendarView getCalendarView()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        android.widget.CalendarView $r2;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $r2 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: android.widget.CalendarView getCalendarView()>();

        return $r2;
    }

    public void setCalendarViewShown(boolean)
    {
        android.widget.DatePicker r0;
        boolean z0;
        android.widget.DatePicker$DatePickerDelegate $r1;

        r0 := @this: android.widget.DatePicker;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: void setCalendarViewShown(boolean)>(z0);

        return;
    }

    public boolean getSpinnersShown()
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$DatePickerDelegate $r1;
        boolean $z0;

        r0 := @this: android.widget.DatePicker;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $z0 = interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: boolean getSpinnersShown()>();

        return $z0;
    }

    public void setSpinnersShown(boolean)
    {
        android.widget.DatePicker r0;
        boolean z0;
        android.widget.DatePicker$DatePickerDelegate $r1;

        r0 := @this: android.widget.DatePicker;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r1.<android.widget.DatePicker$DatePickerDelegate: void setSpinnersShown(boolean)>(z0);

        return;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.widget.DatePicker r0;
        android.util.SparseArray r1;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.widget.DatePicker: void dispatchThawSelfOnly(android.util.SparseArray)>(r1);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.DatePicker r0;
        android.os.Parcelable r1, $r3;
        android.widget.DatePicker$DatePickerDelegate $r2;

        r0 := @this: android.widget.DatePicker;

        r1 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        $r2 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        $r3 = interfaceinvoke $r2.<android.widget.DatePicker$DatePickerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>(r1);

        return $r3;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.DatePicker r0;
        android.os.Parcelable r1, $r3;
        android.view.View$BaseSavedState r2;
        android.widget.DatePicker$DatePickerDelegate $r4;

        r0 := @this: android.widget.DatePicker;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.view.View$BaseSavedState) r1;

        $r3 = virtualinvoke r2.<android.view.View$BaseSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $r4 = r0.<android.widget.DatePicker: android.widget.DatePicker$DatePickerDelegate mDelegate>;

        interfaceinvoke $r4.<android.widget.DatePicker$DatePickerDelegate: void onRestoreInstanceState(android.os.Parcelable)>(r2);

        return;
    }

    static java.lang.String access$1400()
    {
        java.lang.String $r0;

        $r0 = <android.widget.DatePicker: java.lang.String LOG_TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <android.widget.DatePicker: int MODE_CALENDAR> = 2;

        <android.widget.DatePicker: int MODE_SPINNER> = 1;

        $r0 = class "android/widget/DatePicker";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.DatePicker: java.lang.String LOG_TAG> = $r1;

        return;
    }
}
