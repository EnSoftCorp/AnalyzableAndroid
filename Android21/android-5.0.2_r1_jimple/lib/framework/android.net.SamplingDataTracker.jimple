public class android.net.SamplingDataTracker extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample;
    private android.net.SamplingDataTracker$SamplingSnapshot mEndingSample;
    private android.net.SamplingDataTracker$SamplingSnapshot mLastSample;
    public final java.lang.Object mSamplingDataLock;
    private final int MINIMUM_SAMPLING_INTERVAL;
    private final int MINIMUM_SAMPLED_PACKETS;

    public void <init>()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object $r1;

        r0 := @this: android.net.SamplingDataTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock> = $r1;

        r0.<android.net.SamplingDataTracker: int MINIMUM_SAMPLING_INTERVAL> = 15000;

        r0.<android.net.SamplingDataTracker: int MINIMUM_SAMPLED_PACKETS> = 30;

        return;
    }

    public static void getSamplingSnapshots(java.util.Map)
    {
        java.util.Map r0;
        java.io.BufferedReader r1, $r8;
        java.lang.String r2, r4, $r12, $r14, $r16, $r17, $r18, $r19, $r20, $r21, r31;
        java.lang.String[] r3, $r13;
        android.net.SamplingDataTracker$SamplingSnapshot r5, $r15;
        java.lang.Throwable r6, $r30;
        java.io.FileReader $r9;
        int $i0;
        boolean $z0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l8;
        java.io.IOException $r22, $r24, $r25, $r27, $r28;
        java.lang.NumberFormatException $r26;
        java.io.FileNotFoundException $r29;

        r0 := @parameter0: java.util.Map;

        r1 = null;

     label01:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.FileReader;

        specialinvoke $r9.<java.io.FileReader: void <init>(java.lang.String)>("/proc/net/dev");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        r1 = $r8;

        virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        $r12 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        r2 = $r12;

        if $r12 == null goto label08;

        r31 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r3 = virtualinvoke r31.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i0 = lengthof r3;

        if $i0 >= 17 goto label03;

        goto label02;

     label03:
        $r14 = r3[0];

        $r13 = virtualinvoke $r14.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r4 = $r13[0];

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label07;

     label04:
        $r15 = new android.net.SamplingDataTracker$SamplingSnapshot;

        specialinvoke $r15.<android.net.SamplingDataTracker$SamplingSnapshot: void <init>()>();

        r5 = $r15;

        $r16 = r3[1];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r16);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount> = $l1;

        $r17 = r3[2];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r17);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount> = $l2;

        $r18 = r3[3];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r18);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount> = $l3;

        $r19 = r3[9];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r19);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount> = $l4;

        $r20 = r3[10];

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r20);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount> = $l5;

        $r21 = r3[11];

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r21);

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount> = $l6;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp> = $l8;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label05:
        goto label07;

     label06:
        $r26 := @caughtexception;

     label07:
        goto label02;

     label08:
        if r1 == null goto label09;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label09:
        goto label24;

     label10:
        $r24 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        goto label24;

     label11:
        $r29 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not find /proc/net/dev");

     label12:
        if r1 == null goto label13;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label13:
        goto label24;

     label14:
        $r27 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        goto label24;

     label15:
        $r22 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not read /proc/net/dev");

     label16:
        if r1 == null goto label17;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label17:
        goto label24;

     label18:
        $r25 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        goto label24;

     label19:
        $r30 := @caughtexception;

        r6 = $r30;

     label20:
        if r1 == null goto label21;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label21:
        goto label23;

     label22:
        $r28 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

     label23:
        throw r6;

     label24:
        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.FileNotFoundException from label01 to label08 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label01 to label08 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label01 to label08 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public void startSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        $r4 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void stopSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1, $r5, $r6, $r7, $r8;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r9;
        long $l0, $l1, $l2, $l4;
        byte $b3, $b5;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        $r4 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        if $r5 == null goto label2;

        $l1 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        $l0 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $l2 = $l1 - $l0;

        $b3 = $l2 cmp 15000L;

        if $b3 <= 0 goto label2;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        $l4 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot,android.net.SamplingDataTracker$SamplingSnapshot)>($r7, r1);

        $b5 = $l4 cmp 30L;

        if $b5 <= 0 goto label2;

        $r8 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample> = $r8;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample> = r1;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = null;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void resetSamplingData()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = null;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getSampledTxByteCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampledTxPacketCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampledTxPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampledRxByteCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampledRxPacketCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampledPacketCount()
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot $r1, $r2;
        long $l0;

        r0 := @this: android.net.SamplingDataTracker;

        $r2 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $r1 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot,android.net.SamplingDataTracker$SamplingSnapshot)>($r2, $r1);

        return $l0;
    }

    public long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot, android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1, r2;
        long l0, l1, $l2, $l3, $l4, $l5, $l6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        r2 := @parameter1: android.net.SamplingDataTracker$SamplingSnapshot;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $l3 = r2.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $l2 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        l0 = $l3 - $l2;

        $l5 = r2.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $l4 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        l1 = $l5 - $l4;

        $l6 = l0 + l1;

        return $l6;

     label1:
        return 9223372036854775807L;
    }

    public long getSampledPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        long l0, l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r1, $r2;

        r0 := @this: android.net.SamplingDataTracker;

        $r1 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r1 == null goto label1;

        $r2 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r2 == null goto label1;

        l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledRxPacketErrorCount()>();

        l1 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledTxPacketErrorCount()>();

        $l2 = l0 + l1;

        return $l2;

     label1:
        return 9223372036854775807L;
    }

    public long getSampledRxPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount>;

        $l2 = $l1 - $l0;

        exitmonitor r1;

     label2:
        return $l2;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getSampleTimestamp()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5;
        long $l0;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l0 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        exitmonitor r1;

     label2:
        return $l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getSampleDuration()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.net.SamplingDataTracker$SamplingSnapshot $r4, $r5, $r6, $r7;
        long $l0, $l1, $l2;
        int $i3;

        r0 := @this: android.net.SamplingDataTracker;

        $r3 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r5 == null goto label3;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l0 = $r7.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $l2 = $l1 - $l0;

        $i3 = (int) $l2;

        exitmonitor r1;

     label2:
        return $i3;

     label3:
        exitmonitor r1;

     label4:
        return 2147483647;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo)
    {
        android.net.SamplingDataTracker r0;
        android.net.LinkQualityInfo r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.LinkQualityInfo;

        $r4 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampleTimestamp()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setLastDataSampleTime(long)>($l0);

        $i1 = virtualinvoke r0.<android.net.SamplingDataTracker: int getSampleDuration()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setDataSampleDuration(int)>($i1);

        $l2 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setPacketCount(long)>($l2);

        $l3 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketErrorCount()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setPacketErrorCount(long)>($l3);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <android.net.SamplingDataTracker: java.lang.String TAG> = "SamplingDataTracker";

        <android.net.SamplingDataTracker: boolean DBG> = 0;

        return;
    }
}
