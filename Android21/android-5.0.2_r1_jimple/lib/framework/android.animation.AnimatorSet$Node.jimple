class android.animation.AnimatorSet$Node extends java.lang.Object implements java.lang.Cloneable
{
    public android.animation.Animator animation;
    public java.util.ArrayList dependencies;
    public java.util.ArrayList tmpDependencies;
    public java.util.ArrayList nodeDependencies;
    public java.util.ArrayList nodeDependents;
    public boolean done;

    public void <init>(android.animation.Animator)
    {
        android.animation.AnimatorSet$Node r0;
        android.animation.Animator r1;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.Animator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList dependencies> = null;

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList tmpDependencies> = null;

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies> = null;

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents> = null;

        r0.<android.animation.AnimatorSet$Node: boolean done> = 0;

        r0.<android.animation.AnimatorSet$Node: android.animation.Animator animation> = r1;

        return;
    }

    public void addDependency(android.animation.AnimatorSet$Dependency)
    {
        android.animation.AnimatorSet$Node r0, r2, $r5, $r10;
        android.animation.AnimatorSet$Dependency r1;
        java.util.ArrayList $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        boolean $z1;

        r0 := @this: android.animation.AnimatorSet$Node;

        r1 := @parameter0: android.animation.AnimatorSet$Dependency;

        $r3 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList dependencies>;

        if $r3 != null goto label1;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList dependencies> = $r13;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies> = $r12;

     label1:
        $r4 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList dependencies>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies>;

        $r5 = r1.<android.animation.AnimatorSet$Dependency: android.animation.AnimatorSet$Node node>;

        $z1 = virtualinvoke $r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        $r11 = r0.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependencies>;

        $r10 = r1.<android.animation.AnimatorSet$Dependency: android.animation.AnimatorSet$Node node>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label2:
        r2 = r1.<android.animation.AnimatorSet$Dependency: android.animation.AnimatorSet$Node node>;

        $r7 = r2.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents>;

        if $r7 != null goto label3;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents> = $r9;

     label3:
        $r8 = r2.<android.animation.AnimatorSet$Node: java.util.ArrayList nodeDependents>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    public android.animation.AnimatorSet$Node clone()
    {
        android.animation.AnimatorSet$Node r0, r1;
        java.lang.Object $r2;
        android.animation.Animator $r3, $r4;
        java.lang.CloneNotSupportedException $r5;
        java.lang.AssertionError $r6;

        r0 := @this: android.animation.AnimatorSet$Node;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (android.animation.AnimatorSet$Node) $r2;

        $r3 = r0.<android.animation.AnimatorSet$Node: android.animation.Animator animation>;

        $r4 = virtualinvoke $r3.<android.animation.Animator: android.animation.Animator clone()>();

        r1.<android.animation.AnimatorSet$Node: android.animation.Animator animation> = $r4;

     label2:
        return r1;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.AnimatorSet$Node r0, $r1;

        r0 := @this: android.animation.AnimatorSet$Node;

        $r1 = virtualinvoke r0.<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()>();

        return $r1;
    }
}
