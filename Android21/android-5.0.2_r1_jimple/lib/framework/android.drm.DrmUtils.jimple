public class android.drm.DrmUtils extends java.lang.Object
{

    public void <init>()
    {
        android.drm.DrmUtils r0;

        r0 := @this: android.drm.DrmUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static byte[] readBytes(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.File r1, $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        $r3 = staticinvoke <android.drm.DrmUtils: byte[] readBytes(java.io.File)>(r1);

        return $r3;
    }

    static byte[] readBytes(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.io.FileInputStream r1, $r5;
        java.io.BufferedInputStream r2, $r6;
        byte[] r3;
        int i0;
        java.lang.Throwable r4, $r7;

        r0 := @parameter0: java.io.File;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r1 = $r5;

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r6;

        r3 = null;

     label1:
        i0 = virtualinvoke r2.<java.io.BufferedInputStream: int available()>();

        if i0 <= 0 goto label2;

        r3 = newarray (byte)[i0];

        virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[])>(r3);

     label2:
        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.InputStream)>(r2);

        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.InputStream)>(r1);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.InputStream)>(r2);

        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.InputStream)>(r1);

        throw r4;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void writeToFile(java.lang.String, byte[]) throws java.io.IOException
    {
        java.lang.String r0;
        byte[] r1;
        java.io.FileOutputStream r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = null;

        if null == r0 goto label5;

        if null == r1 goto label5;

     label1:
        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r0);

        r2 = $r4;

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>(r1);

     label2:
        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.OutputStream)>(r2);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        staticinvoke <android.drm.DrmUtils: void quietlyDispose(java.io.OutputStream)>(r2);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void removeFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.File r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;
    }

    private static void quietlyDispose(java.io.InputStream)
    {
        java.io.InputStream r0;
        java.io.IOException $r2;

        r0 := @parameter0: java.io.InputStream;

     label1:
        if null == r0 goto label2;

        virtualinvoke r0.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private static void quietlyDispose(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        java.io.IOException $r2;

        r0 := @parameter0: java.io.OutputStream;

     label1:
        if null == r0 goto label2;

        virtualinvoke r0.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])
    {
        byte[] r0;
        android.drm.DrmUtils$ExtendedMetadataParser $r1;

        r0 := @parameter0: byte[];

        $r1 = new android.drm.DrmUtils$ExtendedMetadataParser;

        specialinvoke $r1.<android.drm.DrmUtils$ExtendedMetadataParser: void <init>(byte[],android.drm.DrmUtils$1)>(r0, null);

        return $r1;
    }
}
