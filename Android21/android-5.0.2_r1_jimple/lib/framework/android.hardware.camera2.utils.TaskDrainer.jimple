public class android.hardware.camera2.utils.TaskDrainer extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final boolean VERBOSE;
    private final android.os.Handler mHandler;
    private final android.hardware.camera2.utils.TaskDrainer$DrainListener mListener;
    private final java.lang.String mName;
    private final java.util.Set mTaskSet;
    private final java.lang.Object mLock;
    private boolean mDraining;
    private boolean mDrainFinished;

    public void <init>(android.os.Handler, android.hardware.camera2.utils.TaskDrainer$DrainListener)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        android.os.Handler r1, $r6;
        android.hardware.camera2.utils.TaskDrainer$DrainListener r2, $r8;
        boolean $z0;
        java.util.HashSet $r3;
        java.lang.Object $r4, $r5, $r7;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.hardware.camera2.utils.TaskDrainer$DrainListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("TaskDrainer", 2);

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE> = $z0;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<android.hardware.camera2.utils.TaskDrainer: java.util.Set mTaskSet> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.Object mLock> = $r4;

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining> = 0;

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDrainFinished> = 0;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "handler must not be null");

        $r6 = (android.os.Handler) $r5;

        r0.<android.hardware.camera2.utils.TaskDrainer: android.os.Handler mHandler> = $r6;

        $r7 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "listener must not be null");

        $r8 = (android.hardware.camera2.utils.TaskDrainer$DrainListener) $r7;

        r0.<android.hardware.camera2.utils.TaskDrainer: android.hardware.camera2.utils.TaskDrainer$DrainListener mListener> = $r8;

        r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName> = null;

        return;
    }

    public void <init>(android.os.Handler, android.hardware.camera2.utils.TaskDrainer$DrainListener, java.lang.String)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        android.os.Handler r1, $r7;
        android.hardware.camera2.utils.TaskDrainer$DrainListener r2, $r9;
        java.lang.String r3;
        boolean $z0;
        java.util.HashSet $r4;
        java.lang.Object $r5, $r6, $r8;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.hardware.camera2.utils.TaskDrainer$DrainListener;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("TaskDrainer", 2);

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE> = $z0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<android.hardware.camera2.utils.TaskDrainer: java.util.Set mTaskSet> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.Object mLock> = $r5;

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining> = 0;

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDrainFinished> = 0;

        $r6 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "handler must not be null");

        $r7 = (android.os.Handler) $r6;

        r0.<android.hardware.camera2.utils.TaskDrainer: android.os.Handler mHandler> = $r7;

        $r8 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "listener must not be null");

        $r9 = (android.hardware.camera2.utils.TaskDrainer$DrainListener) $r8;

        r0.<android.hardware.camera2.utils.TaskDrainer: android.hardware.camera2.utils.TaskDrainer$DrainListener mListener> = $r9;

        r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName> = r3;

        return;
    }

    public void taskStarted(java.lang.Object)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r23;
        boolean $z0, $z1, $z2;
        java.util.Set $r5;
        java.lang.IllegalStateException $r6, $r13;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r15, $r16, $r17, $r18, $r20, $r21;
        java.lang.String $r11, $r14, $r19, $r22;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE>;

        if $z0 == 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDrainer[");

        $r14 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taskStarted ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r19, $r22);

     label2:
        $z1 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining>;

        if $z1 == 0 goto label3;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t start more tasks after draining has begun");

        throw $r13;

     label3:
        $r5 = r0.<android.hardware.camera2.utils.TaskDrainer: java.util.Set mTaskSet>;

        $z2 = interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z2 != 0 goto label4;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was already started");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r23 := @caughtexception;

        r3 = $r23;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void taskFinished(java.lang.Object)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r22;
        boolean $z0, $z1;
        java.util.Set $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r20;
        java.lang.String $r11, $r13, $r18, $r21;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE>;

        if $z0 == 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDrainer[");

        $r13 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taskFinished ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r18, $r21);

     label2:
        $r5 = r0.<android.hardware.camera2.utils.TaskDrainer: java.util.Set mTaskSet>;

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was already finished");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label3:
        specialinvoke r0.<android.hardware.camera2.utils.TaskDrainer: void checkIfDrainFinished()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r22 := @caughtexception;

        r3 = $r22;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void beginDrain()
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r16;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r14;
        java.lang.String $r6, $r9, $r11, $r15;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        $r3 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining>;

        if $z0 != 0 goto label3;

        $z2 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE>;

        if $z2 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDrainer[");

        $r11 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r15, "beginDrain started");

     label2:
        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining> = 1;

        specialinvoke r0.<android.hardware.camera2.utils.TaskDrainer: void checkIfDrainFinished()>();

        goto label4;

     label3:
        $z1 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE>;

        if $z1 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDrainer[");

        $r6 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r9, "beginDrain ignored");

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r16 := @caughtexception;

        r2 = $r16;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void checkIfDrainFinished()
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        java.util.Set $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        $r1 = r0.<android.hardware.camera2.utils.TaskDrainer: java.util.Set mTaskSet>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDraining>;

        if $z1 == 0 goto label1;

        $z2 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDrainFinished>;

        if $z2 != 0 goto label1;

        r0.<android.hardware.camera2.utils.TaskDrainer: boolean mDrainFinished> = 1;

        specialinvoke r0.<android.hardware.camera2.utils.TaskDrainer: void postDrained()>();

     label1:
        return;
    }

    private void postDrained()
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        android.hardware.camera2.utils.TaskDrainer$1 $r1;
        android.os.Handler $r2;

        r0 := @this: android.hardware.camera2.utils.TaskDrainer;

        $r2 = r0.<android.hardware.camera2.utils.TaskDrainer: android.os.Handler mHandler>;

        $r1 = new android.hardware.camera2.utils.TaskDrainer$1;

        specialinvoke $r1.<android.hardware.camera2.utils.TaskDrainer$1: void <init>(android.hardware.camera2.utils.TaskDrainer)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    static boolean access$000(android.hardware.camera2.utils.TaskDrainer)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.utils.TaskDrainer;

        $z0 = r0.<android.hardware.camera2.utils.TaskDrainer: boolean VERBOSE>;

        return $z0;
    }

    static java.lang.String access$100(android.hardware.camera2.utils.TaskDrainer)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        java.lang.String $r1;

        r0 := @parameter0: android.hardware.camera2.utils.TaskDrainer;

        $r1 = r0.<android.hardware.camera2.utils.TaskDrainer: java.lang.String mName>;

        return $r1;
    }

    static android.hardware.camera2.utils.TaskDrainer$DrainListener access$200(android.hardware.camera2.utils.TaskDrainer)
    {
        android.hardware.camera2.utils.TaskDrainer r0;
        android.hardware.camera2.utils.TaskDrainer$DrainListener $r1;

        r0 := @parameter0: android.hardware.camera2.utils.TaskDrainer;

        $r1 = r0.<android.hardware.camera2.utils.TaskDrainer: android.hardware.camera2.utils.TaskDrainer$DrainListener mListener>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.utils.TaskDrainer: java.lang.String TAG> = "TaskDrainer";

        return;
    }
}
