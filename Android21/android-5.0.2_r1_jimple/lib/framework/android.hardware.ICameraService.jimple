public interface  android.hardware.ICameraService extends java.lang.Object implements android.os.IInterface
{

    public abstract int getNumberOfCameras() throws android.os.RemoteException;

    public abstract int getCameraInfo(int, android.hardware.CameraInfo) throws android.os.RemoteException;

    public abstract int connect(android.hardware.ICameraClient, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException;

    public abstract int connectPro(android.hardware.IProCameraCallbacks, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException;

    public abstract int connectDevice(android.hardware.camera2.ICameraDeviceCallbacks, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException;

    public abstract int addListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException;

    public abstract int removeListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException;

    public abstract int getCameraCharacteristics(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException;

    public abstract int getCameraVendorTagDescriptor(android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException;

    public abstract int getLegacyParameters(int, java.lang.String[]) throws android.os.RemoteException;

    public abstract int supportsCameraApi(int, int) throws android.os.RemoteException;

    public abstract int connectLegacy(android.hardware.ICameraClient, int, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException;
}
