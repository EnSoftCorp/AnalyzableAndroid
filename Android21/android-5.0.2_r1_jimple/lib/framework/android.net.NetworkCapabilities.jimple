public final class android.net.NetworkCapabilities extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private long mNetworkCapabilities;
    public static final int NET_CAPABILITY_MMS;
    public static final int NET_CAPABILITY_SUPL;
    public static final int NET_CAPABILITY_DUN;
    public static final int NET_CAPABILITY_FOTA;
    public static final int NET_CAPABILITY_IMS;
    public static final int NET_CAPABILITY_CBS;
    public static final int NET_CAPABILITY_WIFI_P2P;
    public static final int NET_CAPABILITY_IA;
    public static final int NET_CAPABILITY_RCS;
    public static final int NET_CAPABILITY_XCAP;
    public static final int NET_CAPABILITY_EIMS;
    public static final int NET_CAPABILITY_NOT_METERED;
    public static final int NET_CAPABILITY_INTERNET;
    public static final int NET_CAPABILITY_NOT_RESTRICTED;
    public static final int NET_CAPABILITY_TRUSTED;
    public static final int NET_CAPABILITY_NOT_VPN;
    private static final int MIN_NET_CAPABILITY;
    private static final int MAX_NET_CAPABILITY;
    private long mTransportTypes;
    public static final int TRANSPORT_CELLULAR;
    public static final int TRANSPORT_WIFI;
    public static final int TRANSPORT_BLUETOOTH;
    public static final int TRANSPORT_ETHERNET;
    public static final int TRANSPORT_VPN;
    private static final int MIN_TRANSPORT;
    private static final int MAX_TRANSPORT;
    private int mLinkUpBandwidthKbps;
    private int mLinkDownBandwidthKbps;
    private java.lang.String mNetworkSpecifier;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.NetworkCapabilities r0;

        r0 := @this: android.net.NetworkCapabilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = 57344L;

        return;
    }

    public void <init>(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1;
        int $i2, $i3;
        java.lang.String $r2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = 57344L;

        if r1 == null goto label1;

        $l0 = r1.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = $l0;

        $l1 = r1.<android.net.NetworkCapabilities: long mTransportTypes>;

        r0.<android.net.NetworkCapabilities: long mTransportTypes> = $l1;

        $i2 = r1.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps> = $i2;

        $i3 = r1.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps> = $i3;

        $r2 = r1.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier> = $r2;

     label1:
        return;
    }

    public android.net.NetworkCapabilities addCapability(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        long $l2, $l3, $l4;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 15 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NetworkCapability out of range");

        throw $r1;

     label2:
        $l3 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $i1 = 1 << i0;

        $l2 = (long) $i1;

        $l4 = $l3 | $l2;

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = $l4;

        return r0;
    }

    public android.net.NetworkCapabilities removeCapability(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        long $l3, $l4, $l5;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 15 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NetworkCapability out of range");

        throw $r1;

     label2:
        $l4 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $i1 = 1 << i0;

        $i2 = $i1 ^ -1;

        $l3 = (long) $i2;

        $l5 = $l4 & $l3;

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = $l5;

        return r0;
    }

    public int[] getCapabilities()
    {
        android.net.NetworkCapabilities r0;
        long $l0;
        int[] $r1;

        r0 := @this: android.net.NetworkCapabilities;

        $l0 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $r1 = specialinvoke r0.<android.net.NetworkCapabilities: int[] enumerateBits(long)>($l0);

        return $r1;
    }

    public boolean hasCapability(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1;
        long $l2, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 15 goto label2;

     label1:
        return 0;

     label2:
        $l3 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $i1 = 1 << i0;

        $l2 = (long) $i1;

        $l4 = $l3 & $l2;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private int[] enumerateBits(long)
    {
        android.net.NetworkCapabilities r0;
        long l0, $l5;
        int i1, i2, i3, $i7;
        int[] r1;
        byte $b4, $b6;

        r0 := @this: android.net.NetworkCapabilities;

        l0 := @parameter0: long;

        i1 = staticinvoke <java.lang.Long: int bitCount(long)>(l0);

        r1 = newarray (int)[i1];

        i2 = 0;

        i3 = 0;

     label1:
        $b4 = l0 cmp 0L;

        if $b4 <= 0 goto label3;

        $l5 = l0 & 1L;

        $b6 = $l5 cmp 1L;

        if $b6 != 0 goto label2;

        $i7 = i2;

        i2 = i2 + 1;

        r1[$i7] = i3;

     label2:
        l0 = l0 >> 1;

        i3 = i3 + 1;

        goto label1;

     label3:
        return r1;
    }

    private void combineNetCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1, $l2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l1 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l0 = r1.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l2 = $l1 | $l0;

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = $l2;

        return;
    }

    private boolean satisfiedByNetCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1, $l2, $l3;
        byte $b4;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l1 = r1.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l0 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l3 = $l1 & $l0;

        $l2 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean equalsNetCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l1 = r1.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l0 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.net.NetworkCapabilities addTransportType(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        long $l2, $l3, $l4;
        java.lang.String $r2;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 4 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("TransportType out of range");

        throw $r1;

     label2:
        $l3 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $i1 = 1 << i0;

        $l2 = (long) $i1;

        $l4 = $l3 | $l2;

        r0.<android.net.NetworkCapabilities: long mTransportTypes> = $l4;

        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        virtualinvoke r0.<android.net.NetworkCapabilities: void setNetworkSpecifier(java.lang.String)>($r2);

        return r0;
    }

    public android.net.NetworkCapabilities removeTransportType(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        long $l3, $l4, $l5;
        java.lang.String $r2;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 4 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("TransportType out of range");

        throw $r1;

     label2:
        $l4 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $i1 = 1 << i0;

        $i2 = $i1 ^ -1;

        $l3 = (long) $i2;

        $l5 = $l4 & $l3;

        r0.<android.net.NetworkCapabilities: long mTransportTypes> = $l5;

        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        virtualinvoke r0.<android.net.NetworkCapabilities: void setNetworkSpecifier(java.lang.String)>($r2);

        return r0;
    }

    public int[] getTransportTypes()
    {
        android.net.NetworkCapabilities r0;
        long $l0;
        int[] $r1;

        r0 := @this: android.net.NetworkCapabilities;

        $l0 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $r1 = specialinvoke r0.<android.net.NetworkCapabilities: int[] enumerateBits(long)>($l0);

        return $r1;
    }

    public boolean hasTransport(int)
    {
        android.net.NetworkCapabilities r0;
        int i0, $i1;
        long $l2, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 4 goto label2;

     label1:
        return 0;

     label2:
        $l3 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $i1 = 1 << i0;

        $l2 = (long) $i1;

        $l4 = $l3 & $l2;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private void combineTransportTypes(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1, $l2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l1 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l0 = r1.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l2 = $l1 | $l0;

        r0.<android.net.NetworkCapabilities: long mTransportTypes> = $l2;

        return;
    }

    private boolean satisfiedByTransportTypes(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l2, $l3, $l4;
        byte $b1, $b5;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l0 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l3 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l2 = r1.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l4 = $l3 & $l2;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean equalsTransportTypes(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $l1 = r1.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l0 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setLinkUpstreamBandwidthKbps(int)
    {
        android.net.NetworkCapabilities r0;
        int i0;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps> = i0;

        return;
    }

    public int getLinkUpstreamBandwidthKbps()
    {
        android.net.NetworkCapabilities r0;
        int $i0;

        r0 := @this: android.net.NetworkCapabilities;

        $i0 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        return $i0;
    }

    public void setLinkDownstreamBandwidthKbps(int)
    {
        android.net.NetworkCapabilities r0;
        int i0;

        r0 := @this: android.net.NetworkCapabilities;

        i0 := @parameter0: int;

        r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps> = i0;

        return;
    }

    public int getLinkDownstreamBandwidthKbps()
    {
        android.net.NetworkCapabilities r0;
        int $i0;

        r0 := @this: android.net.NetworkCapabilities;

        $i0 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        return $i0;
    }

    private void combineLinkBandwidths(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $i1 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $i0 = r1.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);

        r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps> = $i2;

        $i4 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $i3 = r1.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps> = $i5;

        return;
    }

    private boolean satisfiedByLinkBandwidths(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $i1 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $i0 = r1.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        if $i1 > $i0 goto label1;

        $i3 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $i2 = r1.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        if $i3 > $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean equalsLinkBandwidths(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $i1 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $i0 = r1.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $i2 = r1.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setNetworkSpecifier(java.lang.String)
    {
        android.net.NetworkCapabilities r0;
        java.lang.String r1;
        boolean $z0;
        long $l0;
        int $i1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $l0 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $i1 = staticinvoke <java.lang.Long: int bitCount(long)>($l0);

        if $i1 == 1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must have a single transport specified to use setNetworkSpecifier");

        throw $r2;

     label1:
        r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier> = r1;

        return;
    }

    public java.lang.String getNetworkSpecifier()
    {
        android.net.NetworkCapabilities r0;
        java.lang.String $r1;

        r0 := @this: android.net.NetworkCapabilities;

        $r1 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        return $r1;
    }

    private void combineSpecifiers(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r2 = virtualinvoke r1.<android.net.NetworkCapabilities: java.lang.String getNetworkSpecifier()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t combine two networkSpecifiers");

        throw $r4;

     label2:
        virtualinvoke r0.<android.net.NetworkCapabilities: void setNetworkSpecifier(java.lang.String)>(r2);

        return;
    }

    private boolean satisfiedBySpecifier(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $r3 = r1.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean equalsSpecifier(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r1.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        return $z2;

     label1:
        $r4 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $r3 = r1.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public void combineCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        specialinvoke r0.<android.net.NetworkCapabilities: void combineNetCapabilities(android.net.NetworkCapabilities)>(r1);

        specialinvoke r0.<android.net.NetworkCapabilities: void combineTransportTypes(android.net.NetworkCapabilities)>(r1);

        specialinvoke r0.<android.net.NetworkCapabilities: void combineLinkBandwidths(android.net.NetworkCapabilities)>(r1);

        specialinvoke r0.<android.net.NetworkCapabilities: void combineSpecifiers(android.net.NetworkCapabilities)>(r1);

        return;
    }

    public boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)
    {
        android.net.NetworkCapabilities r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.net.NetworkCapabilities;

        if r1 == null goto label1;

        $z0 = specialinvoke r0.<android.net.NetworkCapabilities: boolean satisfiedByNetCapabilities(android.net.NetworkCapabilities)>(r1);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.net.NetworkCapabilities: boolean satisfiedByTransportTypes(android.net.NetworkCapabilities)>(r1);

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<android.net.NetworkCapabilities: boolean satisfiedByLinkBandwidths(android.net.NetworkCapabilities)>(r1);

        if $z2 == 0 goto label1;

        $z3 = specialinvoke r0.<android.net.NetworkCapabilities: boolean satisfiedBySpecifier(android.net.NetworkCapabilities)>(r1);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.NetworkCapabilities r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof android.net.NetworkCapabilities;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (android.net.NetworkCapabilities) r1;

        $z1 = specialinvoke r0.<android.net.NetworkCapabilities: boolean equalsNetCapabilities(android.net.NetworkCapabilities)>(r2);

        if $z1 == 0 goto label3;

        $z2 = specialinvoke r0.<android.net.NetworkCapabilities: boolean equalsTransportTypes(android.net.NetworkCapabilities)>(r2);

        if $z2 == 0 goto label3;

        $z3 = specialinvoke r0.<android.net.NetworkCapabilities: boolean equalsLinkBandwidths(android.net.NetworkCapabilities)>(r2);

        if $z3 == 0 goto label3;

        $z4 = specialinvoke r0.<android.net.NetworkCapabilities: boolean equalsSpecifier(android.net.NetworkCapabilities)>(r2);

        if $z4 == 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    public int hashCode()
    {
        android.net.NetworkCapabilities r0;
        long $l0, $l1, $l2, $l3, $l7, $l8, $l12, $l13;
        int $i4, $i5, $i6, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: android.net.NetworkCapabilities;

        $l0 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l1 = $l0 & -1L;

        $i6 = (int) $l1;

        $l2 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        $l3 = $l2 >> 32;

        $i4 = (int) $l3;

        $i5 = $i4 * 3;

        $i11 = $i6 + $i5;

        $l7 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l8 = $l7 & -1L;

        $i9 = (int) $l8;

        $i10 = $i9 * 5;

        $i15 = $i11 + $i10;

        $l12 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        $l13 = $l12 >> 32;

        $i14 = (int) $l13;

        $i16 = $i14 * 7;

        $i20 = $i15 + $i16;

        $i18 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $i17 = $i18 * 11;

        $i21 = $i20 + $i17;

        $i19 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $i22 = $i19 * 13;

        $i23 = $i21 + $i22;

        $r1 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $i24 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $i25 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i24 = $i25 * 17;

     label2:
        $i26 = $i23 + $i24;

        return $i26;
    }

    public int describeContents()
    {
        android.net.NetworkCapabilities r0;

        r0 := @this: android.net.NetworkCapabilities;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.NetworkCapabilities r0;
        android.os.Parcel r1;
        int i0, $i3, $i4;
        long $l1, $l2;
        java.lang.String $r2;

        r0 := @this: android.net.NetworkCapabilities;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<android.net.NetworkCapabilities: long mNetworkCapabilities>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = r0.<android.net.NetworkCapabilities: long mTransportTypes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $i3 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r2 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        android.net.NetworkCapabilities r0;
        int[] r1, r102;
        java.lang.String r2, r3, r4, $r5, $r9, $r10, $r21, $r26, $r28, $r85, $r95, r103, r104;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r96, $r97, $r98, $r99, $r100, $r101;

        r0 := @this: android.net.NetworkCapabilities;

        r1 = virtualinvoke r0.<android.net.NetworkCapabilities: int[] getTransportTypes()>();

        $i2 = lengthof r1;

        if $i2 <= 0 goto label01;

        $r95 = " Transports: ";

        goto label02;

     label01:
        $r95 = "";

     label02:
        r2 = $r95;

        i0 = 0;

     label03:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label10;

        $i13 = r1[i0];

        tableswitch($i13)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            default: goto label09;
        };

     label04:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CELLULAR");

        r2 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label05:
        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WIFI");

        r2 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label06:
        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLUETOOTH");

        r2 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label07:
        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ETHERNET");

        r2 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VPN");

        r2 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        i0 = i0 + 1;

        $i12 = lengthof r1;

        if i0 >= $i12 goto label03;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r2 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label10:
        r102 = virtualinvoke r0.<android.net.NetworkCapabilities: int[] getCapabilities()>();

        $i4 = lengthof r102;

        if $i4 <= 0 goto label11;

        $r85 = " Capabilities: ";

        goto label12;

     label11:
        $r85 = "";

     label12:
        r103 = $r85;

        i1 = 0;

     label13:
        $i5 = lengthof r102;

        if i1 >= $i5 goto label31;

        $i10 = r102[i1];

        tableswitch($i10)
        {
            case 0: goto label14;
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            case 4: goto label18;
            case 5: goto label19;
            case 6: goto label20;
            case 7: goto label21;
            case 8: goto label22;
            case 9: goto label23;
            case 10: goto label24;
            case 11: goto label25;
            case 12: goto label26;
            case 13: goto label27;
            case 14: goto label28;
            case 15: goto label29;
            default: goto label30;
        };

     label14:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MMS");

        r103 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label15:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUPL");

        r103 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label16:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DUN");

        r103 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label17:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOTA");

        r103 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label18:
        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS");

        r103 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label19:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CBS");

        r103 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label20:
        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WIFI_P2P");

        r103 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label21:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IA");

        r103 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label22:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RCS");

        r103 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label23:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XCAP");

        r103 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label24:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EIMS");

        r103 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label25:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT_METERED");

        r103 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label26:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INTERNET");

        r103 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label27:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT_RESTRICTED");

        r103 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label28:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRUSTED");

        r103 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label30;

     label29:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT_VPN");

        r103 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

     label30:
        i1 = i1 + 1;

        $i11 = lengthof r102;

        if i1 >= $i11 goto label13;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        r103 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label31:
        $i6 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        if $i6 <= 0 goto label32;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LinkUpBandwidth>=");

        $i9 = r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps>;

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kbps");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label33;

     label32:
        $r28 = "";

     label33:
        r104 = $r28;

        $i7 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        if $i7 <= 0 goto label34;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LinkDnBandwidth>=");

        $i8 = r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kbps");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label35;

     label34:
        $r26 = "";

     label35:
        r3 = $r26;

        $r5 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        if $r5 != null goto label36;

        $r10 = "";

        goto label37;

     label36:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Specifier: <");

        $r9 = r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label37:
        r4 = $r10;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r103);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    static long access$002(android.net.NetworkCapabilities, long)
    {
        android.net.NetworkCapabilities r0;
        long l0;

        r0 := @parameter0: android.net.NetworkCapabilities;

        l0 := @parameter1: long;

        r0.<android.net.NetworkCapabilities: long mNetworkCapabilities> = l0;

        return l0;
    }

    static long access$102(android.net.NetworkCapabilities, long)
    {
        android.net.NetworkCapabilities r0;
        long l0;

        r0 := @parameter0: android.net.NetworkCapabilities;

        l0 := @parameter1: long;

        r0.<android.net.NetworkCapabilities: long mTransportTypes> = l0;

        return l0;
    }

    static int access$202(android.net.NetworkCapabilities, int)
    {
        android.net.NetworkCapabilities r0;
        int i0;

        r0 := @parameter0: android.net.NetworkCapabilities;

        i0 := @parameter1: int;

        r0.<android.net.NetworkCapabilities: int mLinkUpBandwidthKbps> = i0;

        return i0;
    }

    static int access$302(android.net.NetworkCapabilities, int)
    {
        android.net.NetworkCapabilities r0;
        int i0;

        r0 := @parameter0: android.net.NetworkCapabilities;

        i0 := @parameter1: int;

        r0.<android.net.NetworkCapabilities: int mLinkDownBandwidthKbps> = i0;

        return i0;
    }

    static java.lang.String access$402(android.net.NetworkCapabilities, java.lang.String)
    {
        android.net.NetworkCapabilities r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.NetworkCapabilities;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.NetworkCapabilities: java.lang.String mNetworkSpecifier> = r1;

        return r1;
    }

    static void <clinit>()
    {
        android.net.NetworkCapabilities$1 $r0;

        <android.net.NetworkCapabilities: int MAX_TRANSPORT> = 4;

        <android.net.NetworkCapabilities: int MIN_TRANSPORT> = 0;

        <android.net.NetworkCapabilities: int TRANSPORT_VPN> = 4;

        <android.net.NetworkCapabilities: int TRANSPORT_ETHERNET> = 3;

        <android.net.NetworkCapabilities: int TRANSPORT_BLUETOOTH> = 2;

        <android.net.NetworkCapabilities: int TRANSPORT_WIFI> = 1;

        <android.net.NetworkCapabilities: int TRANSPORT_CELLULAR> = 0;

        <android.net.NetworkCapabilities: int MAX_NET_CAPABILITY> = 15;

        <android.net.NetworkCapabilities: int MIN_NET_CAPABILITY> = 0;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_NOT_VPN> = 15;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_TRUSTED> = 14;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_NOT_RESTRICTED> = 13;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_INTERNET> = 12;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_NOT_METERED> = 11;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_EIMS> = 10;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_XCAP> = 9;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_RCS> = 8;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_IA> = 7;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_WIFI_P2P> = 6;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_CBS> = 5;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_IMS> = 4;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_FOTA> = 3;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_DUN> = 2;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_SUPL> = 1;

        <android.net.NetworkCapabilities: int NET_CAPABILITY_MMS> = 0;

        <android.net.NetworkCapabilities: boolean DBG> = 0;

        <android.net.NetworkCapabilities: java.lang.String TAG> = "NetworkCapabilities";

        $r0 = new android.net.NetworkCapabilities$1;

        specialinvoke $r0.<android.net.NetworkCapabilities$1: void <init>()>();

        <android.net.NetworkCapabilities: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
