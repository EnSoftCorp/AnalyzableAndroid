public class android.app.NativeActivity extends android.app.Activity implements android.view.SurfaceHolder$Callback2, android.view.InputQueue$Callback, android.view.ViewTreeObserver$OnGlobalLayoutListener
{
    public static final java.lang.String META_DATA_LIB_NAME;
    public static final java.lang.String META_DATA_FUNC_NAME;
    private static final java.lang.String KEY_NATIVE_SAVED_STATE;
    private android.app.NativeActivity$NativeContentView mNativeContentView;
    private android.view.inputmethod.InputMethodManager mIMM;
    private long mNativeHandle;
    private android.view.InputQueue mCurInputQueue;
    private android.view.SurfaceHolder mCurSurfaceHolder;
    final int[] mLocation;
    int mLastContentX;
    int mLastContentY;
    int mLastContentWidth;
    int mLastContentHeight;
    private boolean mDispatchingUnhandledKey;
    private boolean mDestroyed;

    public void <init>()
    {
        android.app.NativeActivity r0;
        int[] $r1;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.app.NativeActivity: int[] mLocation> = $r1;

        return;
    }

    private native long loadNativeCode(java.lang.String, java.lang.String, android.os.MessageQueue, java.lang.String, java.lang.String, java.lang.String, int, android.content.res.AssetManager, byte[]);

    private native void unloadNativeCode(long);

    private native void onStartNative(long);

    private native void onResumeNative(long);

    private native byte[] onSaveInstanceStateNative(long);

    private native void onPauseNative(long);

    private native void onStopNative(long);

    private native void onConfigurationChangedNative(long);

    private native void onLowMemoryNative(long);

    private native void onWindowFocusChangedNative(long, boolean);

    private native void onSurfaceCreatedNative(long, android.view.Surface);

    private native void onSurfaceChangedNative(long, android.view.Surface, int, int, int);

    private native void onSurfaceRedrawNeededNative(long, android.view.Surface);

    private native void onSurfaceDestroyedNative(long);

    private native void onInputQueueCreatedNative(long, long);

    private native void onInputQueueDestroyedNative(long, long);

    private native void onContentRectChangedNative(long, int, int, int, int);

    protected void onCreate(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        android.os.Bundle r1, $r23, $r45, $r49;
        java.lang.String r2, r3, r5, $r26, $r27, $r30, $r32, $r35, $r38, $r46, r51, r53;
        android.content.pm.ActivityInfo r4;
        java.io.File r6, $r25, $r29, $r31, $r34;
        byte[] r7, $r44;
        java.lang.Object $r8;
        android.view.inputmethod.InputMethodManager $r9;
        android.view.Window $r10, $r11, $r12, $r13;
        android.app.NativeActivity$NativeContentView $r14, $r15, $r16, $r17, $r18;
        android.content.pm.PackageManager $r19;
        android.view.ViewTreeObserver $r20;
        android.content.ComponentName $r21;
        android.content.Intent $r22;
        android.content.pm.ApplicationInfo $r24;
        android.os.MessageQueue $r28;
        boolean $z1;
        int $i0;
        android.content.res.AssetManager $r33;
        byte $b1;
        java.lang.IllegalArgumentException $r36, $r43;
        long $l2, $l3;
        java.lang.StringBuilder $r37, $r39, $r40, $r41, $r42, $r47;
        android.content.pm.PackageManager$NameNotFoundException $r48, r52;
        java.lang.RuntimeException $r50;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.os.Bundle;

        r2 = "main";

        r3 = "ANativeActivity_onCreate";

        $r8 = virtualinvoke r0.<android.app.NativeActivity: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r9 = (android.view.inputmethod.InputMethodManager) $r8;

        r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM> = $r9;

        $r10 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r10.<android.view.Window: void takeSurface(android.view.SurfaceHolder$Callback2)>(r0);

        $r11 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r11.<android.view.Window: void takeInputQueue(android.view.InputQueue$Callback)>(r0);

        $r12 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r12.<android.view.Window: void setFormat(int)>(4);

        $r13 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r13.<android.view.Window: void setSoftInputMode(int)>(16);

        $r14 = new android.app.NativeActivity$NativeContentView;

        specialinvoke $r14.<android.app.NativeActivity$NativeContentView: void <init>(android.content.Context)>(r0);

        r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView> = $r14;

        $r15 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r15.<android.app.NativeActivity$NativeContentView: android.app.NativeActivity mActivity> = r0;

        $r17 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke r0.<android.app.NativeActivity: void setContentView(android.view.View)>($r17);

        $r16 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r16.<android.app.NativeActivity$NativeContentView: boolean requestFocus()>();

        $r18 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r20 = virtualinvoke $r18.<android.app.NativeActivity$NativeContentView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r20.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label01:
        $r19 = virtualinvoke r0.<android.app.NativeActivity: android.content.pm.PackageManager getPackageManager()>();

        $r22 = virtualinvoke r0.<android.app.NativeActivity: android.content.Intent getIntent()>();

        $r21 = virtualinvoke $r22.<android.content.Intent: android.content.ComponentName getComponent()>();

        r4 = virtualinvoke $r19.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r21, 128);

        $r23 = r4.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r23 == null goto label03;

        $r45 = r4.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r5 = virtualinvoke $r45.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.lib_name");

        if r5 == null goto label02;

        r2 = r5;

     label02:
        $r49 = r4.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r51 = virtualinvoke $r49.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.func_name");

        if r51 == null goto label03;

        r3 = r51;

     label03:
        goto label05;

     label04:
        $r48 := @caughtexception;

        r52 = $r48;

        $r50 = new java.lang.RuntimeException;

        specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error getting activity info", r52);

        throw $r50;

     label05:
        r53 = null;

        $r25 = new java.io.File;

        $r24 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r27 = $r24.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r26 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>(r2);

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r27, $r26);

        r6 = $r25;

        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label06;

        r53 = virtualinvoke r6.<java.io.File: java.lang.String getPath()>();

     label06:
        if r53 != null goto label07;

        $r43 = new java.lang.IllegalArgumentException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find native library: ");

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46);

        throw $r43;

     label07:
        if r1 == null goto label08;

        $r44 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("android:native_state");

        goto label09;

     label08:
        $r44 = null;

     label09:
        r7 = $r44;

        $r28 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r31 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getFilesDir()>();

        $r32 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r31);

        $r29 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getObbDir()>();

        $r30 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r29);

        $r34 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r35 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r34);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r33 = virtualinvoke r0.<android.app.NativeActivity: android.content.res.AssetManager getAssets()>();

        $l2 = specialinvoke r0.<android.app.NativeActivity: long loadNativeCode(java.lang.String,java.lang.String,android.os.MessageQueue,java.lang.String,java.lang.String,java.lang.String,int,android.content.res.AssetManager,byte[])>(r53, r3, $r28, $r32, $r30, $r35, $i0, $r33, r7);

        r0.<android.app.NativeActivity: long mNativeHandle> = $l2;

        $l3 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $b1 = $l3 cmp 0L;

        if $b1 != 0 goto label10;

        $r36 = new java.lang.IllegalArgumentException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load native library: ");

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r36;

     label10:
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label03 with label04;
    }

    private static java.lang.String getAbsolutePath(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    protected void onDestroy()
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder $r1;
        android.view.InputQueue $r2, $r3;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.app.NativeActivity;

        r0.<android.app.NativeActivity: boolean mDestroyed> = 1;

        $r1 = r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder>;

        if $r1 == null goto label1;

        $l3 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(long)>($l3);

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

     label1:
        $r2 = r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue>;

        if $r2 == null goto label2;

        $l1 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r3 = r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue>;

        $l2 = virtualinvoke $r3.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(long,long)>($l1, $l2);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label2:
        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void unloadNativeCode(long)>($l0);

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    protected void onPause()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onPauseNative(long)>($l0);

        return;
    }

    protected void onResume()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onResumeNative(long)>($l0);

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        android.os.Bundle r1;
        byte[] r2;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        r2 = specialinvoke r0.<android.app.NativeActivity: byte[] onSaveInstanceStateNative(long)>($l0);

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("android:native_state", r2);

     label1:
        return;
    }

    protected void onStart()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStartNative(long)>($l0);

        return;
    }

    protected void onStop()
    {
        android.app.NativeActivity r0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStop()>();

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStopNative(long)>($l0);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.NativeActivity r0;
        android.content.res.Configuration r1;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onConfigurationChangedNative(long)>($l0);

     label1:
        return;
    }

    public void onLowMemory()
    {
        android.app.NativeActivity r0;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onLowMemory()>();

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onLowMemoryNative(long)>($l0);

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.NativeActivity r0;
        boolean z0, $z1;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Activity: void onWindowFocusChanged(boolean)>(z0);

        $z1 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onWindowFocusChangedNative(long,boolean)>($l0, z0);

     label1:
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceCreatedNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        boolean $z0;
        long $l3;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l3 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceChangedNative(long,android.view.Surface,int,int,int)>($l3, $r2, i0, i1, i2);

     label1:
        return;
    }

    public void surfaceRedrawNeeded(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceRedrawNeededNative(long,android.view.Surface)>($l0, $r2);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        long $l0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(long)>($l0);

     label1:
        return;
    }

    public void onInputQueueCreated(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = r1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $l1 = virtualinvoke r1.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueCreatedNative(long,long)>($l0, $l1);

     label1:
        return;
    }

    public void onInputQueueDestroyed(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        long $l0, $l1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $l0 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $l1 = virtualinvoke r1.<android.view.InputQueue: long getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(long,long)>($l0, $l1);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label1:
        return;
    }

    public void onGlobalLayout()
    {
        android.app.NativeActivity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14;
        int[] $r1, $r5, $r6, $r7, $r8;
        android.app.NativeActivity$NativeContentView $r2, $r3, $r4;
        boolean $z0;
        long $l9;

        r0 := @this: android.app.NativeActivity;

        $r2 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r1 = r0.<android.app.NativeActivity: int[] mLocation>;

        virtualinvoke $r2.<android.app.NativeActivity$NativeContentView: void getLocationInWindow(int[])>($r1);

        $r3 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i0 = virtualinvoke $r3.<android.app.NativeActivity$NativeContentView: int getWidth()>();

        $r4 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i1 = virtualinvoke $r4.<android.app.NativeActivity$NativeContentView: int getHeight()>();

        $r5 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i3 = $r5[0];

        $i2 = r0.<android.app.NativeActivity: int mLastContentX>;

        if $i3 != $i2 goto label1;

        $r8 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i13 = $r8[1];

        $i11 = r0.<android.app.NativeActivity: int mLastContentY>;

        if $i13 != $i11 goto label1;

        $i12 = r0.<android.app.NativeActivity: int mLastContentWidth>;

        if i0 != $i12 goto label1;

        $i14 = r0.<android.app.NativeActivity: int mLastContentHeight>;

        if i1 == $i14 goto label2;

     label1:
        $r6 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i4 = $r6[0];

        r0.<android.app.NativeActivity: int mLastContentX> = $i4;

        $r7 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i5 = $r7[1];

        r0.<android.app.NativeActivity: int mLastContentY> = $i5;

        r0.<android.app.NativeActivity: int mLastContentWidth> = i0;

        r0.<android.app.NativeActivity: int mLastContentHeight> = i1;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label2;

        $l9 = r0.<android.app.NativeActivity: long mNativeHandle>;

        $i10 = r0.<android.app.NativeActivity: int mLastContentX>;

        $i7 = r0.<android.app.NativeActivity: int mLastContentY>;

        $i8 = r0.<android.app.NativeActivity: int mLastContentWidth>;

        $i6 = r0.<android.app.NativeActivity: int mLastContentHeight>;

        specialinvoke r0.<android.app.NativeActivity: void onContentRectChangedNative(long,int,int,int,int)>($l9, $i10, $i7, $i8, $i6);

     label2:
        return;
    }

    void setWindowFlags(int, int)
    {
        android.app.NativeActivity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFlags(int,int)>(i0, i1);

        return;
    }

    void setWindowFormat(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(i0);

        return;
    }

    void showIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r1, i0);

        return;
    }

    void hideIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r3 = virtualinvoke $r1.<android.app.NativeActivity$NativeContentView: android.os.IBinder getWindowToken()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, i0);

        return;
    }

    public static void <clinit>()
    {
        <android.app.NativeActivity: java.lang.String KEY_NATIVE_SAVED_STATE> = "android:native_state";

        <android.app.NativeActivity: java.lang.String META_DATA_FUNC_NAME> = "android.app.func_name";

        <android.app.NativeActivity: java.lang.String META_DATA_LIB_NAME> = "android.app.lib_name";

        return;
    }
}
