public final class android.view.inputmethod.CursorAnchorInfo extends java.lang.Object implements android.os.Parcelable
{
    private final int mSelectionStart;
    private final int mSelectionEnd;
    private final int mComposingTextStart;
    private final java.lang.CharSequence mComposingText;
    private final int mInsertionMarkerFlags;
    private final float mInsertionMarkerHorizontal;
    private final float mInsertionMarkerTop;
    private final float mInsertionMarkerBaseline;
    private final float mInsertionMarkerBottom;
    private final android.view.inputmethod.SparseRectFArray mCharacterBoundsArray;
    private final android.graphics.Matrix mMatrix;
    public static final int FLAG_HAS_VISIBLE_REGION;
    public static final int FLAG_HAS_INVISIBLE_REGION;
    public static final int FLAG_IS_RTL;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(android.os.Parcel)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        java.lang.CharSequence $r4;
        float $f0, $f1, $f2, $f3;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        android.os.Parcelable $r7;
        android.graphics.Matrix $r8, $r11;
        android.view.inputmethod.SparseRectFArray $r9;
        float[] $r10;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart> = $i2;

        $r2 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (java.lang.CharSequence) $r3;

        r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText> = $r4;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags> = $i3;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop> = $f1;

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline> = $f2;

        $f3 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom> = $f3;

        $r5 = class "android/view/inputmethod/SparseRectFArray";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r6);

        $r9 = (android.view.inputmethod.SparseRectFArray) $r7;

        r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray> = $r9;

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix> = $r8;

        $r11 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        $r10 = virtualinvoke r1.<android.os.Parcel: float[] createFloatArray()>();

        virtualinvoke $r11.<android.graphics.Matrix: void setValues(float[])>($r10);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        float[] r2;
        java.lang.CharSequence $r3;
        float $f0, $f1, $f2, $f3;
        android.view.inputmethod.SparseRectFArray $r4;
        android.graphics.Matrix $r5;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r3 = r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r3, r1, i0);

        $i4 = r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $f2 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $f3 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f3);

        $r4 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, i0);

        r2 = newarray (float)[9];

        $r5 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        virtualinvoke $r5.<android.graphics.Matrix: void getValues(float[])>(r2);

        virtualinvoke r1.<android.os.Parcel: void writeFloatArray(float[])>(r2);

        return;
    }

    public int hashCode()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        byte $b1;
        java.lang.CharSequence $r1;
        android.view.inputmethod.SparseRectFArray $r2;
        android.graphics.Matrix $r3;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $f2 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        $f1 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        $f4 = $f2 + $f1;

        $f3 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        $f6 = $f4 + $f3;

        $f5 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        f0 = $f6 + $f5;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label1;

        $i10 = (int) f0;

        goto label2;

     label1:
        $f7 = neg f0;

        $i10 = (int) $f7;

     label2:
        i0 = $i10;

        i12 = i0 * 31;

        $i2 = r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        i13 = i12 + $i2;

        i14 = i13 * 31;

        $i4 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        $i3 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        $i6 = $i4 + $i3;

        $i5 = r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        $i7 = $i6 + $i5;

        i15 = i14 + $i7;

        i16 = i15 * 31;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        $i8 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r1);

        i17 = i16 + $i8;

        i18 = i17 * 31;

        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $i9 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r2);

        i19 = i18 + $i9;

        i20 = i19 * 31;

        $r3 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        $i11 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($r3);

        i21 = i20 + $i11;

        return i21;
    }

    private static boolean areSameFloatImpl(float, float)
    {
        float f0, f1;
        boolean $z0, $z1, $z2;
        byte $b0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $b0 = f0 cmpl f1;

        if $b0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.inputmethod.CursorAnchorInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.CharSequence $r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.view.inputmethod.SparseRectFArray $r5, $r6;
        android.graphics.Matrix $r7, $r8;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 0;

     label01:
        if r0 != r1 goto label02;

        return 1;

     label02:
        $z0 = r1 instanceof android.view.inputmethod.CursorAnchorInfo;

        if $z0 != 0 goto label03;

        return 0;

     label03:
        r2 = (android.view.inputmethod.CursorAnchorInfo) r1;

        $i0 = virtualinvoke r0.<android.view.inputmethod.CursorAnchorInfo: int hashCode()>();

        $i1 = virtualinvoke r2.<android.view.inputmethod.CursorAnchorInfo: int hashCode()>();

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i3 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        $i2 = r2.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        if $i3 != $i2 goto label05;

        $i5 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        $i4 = r2.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        if $i5 == $i4 goto label06;

     label05:
        return 0;

     label06:
        $i7 = r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        $i6 = r2.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        if $i7 != $i6 goto label07;

        $r4 = r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        $r3 = r2.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label08;

     label07:
        return 0;

     label08:
        $i9 = r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        $i8 = r2.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        if $i9 != $i8 goto label09;

        $f1 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        $f0 = r2.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        $z2 = staticinvoke <android.view.inputmethod.CursorAnchorInfo: boolean areSameFloatImpl(float,float)>($f1, $f0);

        if $z2 == 0 goto label09;

        $f2 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        $f3 = r2.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        $z3 = staticinvoke <android.view.inputmethod.CursorAnchorInfo: boolean areSameFloatImpl(float,float)>($f2, $f3);

        if $z3 == 0 goto label09;

        $f5 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        $f4 = r2.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        $z4 = staticinvoke <android.view.inputmethod.CursorAnchorInfo: boolean areSameFloatImpl(float,float)>($f5, $f4);

        if $z4 == 0 goto label09;

        $f6 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        $f7 = r2.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        $z5 = staticinvoke <android.view.inputmethod.CursorAnchorInfo: boolean areSameFloatImpl(float,float)>($f6, $f7);

        if $z5 != 0 goto label10;

     label09:
        return 0;

     label10:
        $r6 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $r5 = r2.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z6 != 0 goto label11;

        return 0;

     label11:
        $r8 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        $r7 = r2.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z7 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    public java.lang.String toString()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r28, $r31;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r9;
        java.lang.String $r10, $r26, $r29, $r30;
        float $f0, $f1, $f2, $f3;
        android.view.inputmethod.SparseRectFArray $r22;
        android.graphics.Matrix $r25;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SelectionInfo{mSelection=");

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mComposingTextStart=");

        $i2 = r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mComposingText=");

        $r9 = r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        $r10 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInsertionMarkerFlags=");

        $i3 = r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInsertionMarkerHorizontal=");

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInsertionMarkerTop=");

        $f1 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInsertionMarkerBaseline=");

        $f2 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInsertionMarkerBottom=");

        $f3 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCharacterBoundsArray=");

        $r22 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $r26 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r22);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMatrix=");

        $r25 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        $r30 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object)>($r25);

        $r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }

    private void <init>(android.view.inputmethod.CursorAnchorInfo$Builder)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        android.view.inputmethod.CursorAnchorInfo$Builder r1;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r2;
        float $f0, $f1, $f2, $f3;
        android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder $r3, $r6;
        android.graphics.Matrix $r4, $r5;
        android.view.inputmethod.SparseRectFArray $r7;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        r1 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: int access$100(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart> = $i0;

        $i1 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: int access$200(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd> = $i1;

        $i2 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: int access$300(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart> = $i2;

        $r2 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: java.lang.CharSequence access$400(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText> = $r2;

        $i3 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: int access$500(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags> = $i3;

        $f0 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: float access$600(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal> = $f0;

        $f1 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: float access$700(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop> = $f1;

        $f2 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: float access$800(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline> = $f2;

        $f3 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: float access$900(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom> = $f3;

        $r3 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder access$1000(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        if $r3 == null goto label1;

        $r6 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder access$1000(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        $r7 = virtualinvoke $r6.<android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray build()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray> = $r7;

        $r4 = new android.graphics.Matrix;

        $r5 = staticinvoke <android.view.inputmethod.CursorAnchorInfo$Builder: android.graphics.Matrix access$1100(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        specialinvoke $r4.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r5);

        r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix> = $r4;

        return;
    }

    public int getSelectionStart()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int $i0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionStart>;

        return $i0;
    }

    public int getSelectionEnd()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int $i0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo: int mSelectionEnd>;

        return $i0;
    }

    public int getComposingTextStart()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int $i0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo: int mComposingTextStart>;

        return $i0;
    }

    public java.lang.CharSequence getComposingText()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence mComposingText>;

        return $r1;
    }

    public int getInsertionMarkerFlags()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int $i0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $i0 = r0.<android.view.inputmethod.CursorAnchorInfo: int mInsertionMarkerFlags>;

        return $i0;
    }

    public float getInsertionMarkerHorizontal()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        float $f0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerHorizontal>;

        return $f0;
    }

    public float getInsertionMarkerTop()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        float $f0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerTop>;

        return $f0;
    }

    public float getInsertionMarkerBaseline()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        float $f0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBaseline>;

        return $f0;
    }

    public float getInsertionMarkerBottom()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        float $f0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $f0 = r0.<android.view.inputmethod.CursorAnchorInfo: float mInsertionMarkerBottom>;

        return $f0;
    }

    public android.graphics.RectF getCharacterBounds(int)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int i0;
        android.view.inputmethod.SparseRectFArray $r1, $r2;
        android.graphics.RectF $r3;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $r3 = virtualinvoke $r2.<android.view.inputmethod.SparseRectFArray: android.graphics.RectF get(int)>(i0);

        return $r3;
    }

    public int getCharacterBoundsFlags(int)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        int i0, $i1;
        android.view.inputmethod.SparseRectFArray $r1, $r2;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo: android.view.inputmethod.SparseRectFArray mCharacterBoundsArray>;

        $i1 = virtualinvoke $r2.<android.view.inputmethod.SparseRectFArray: int getFlags(int,int)>(i0, 0);

        return $i1;
    }

    public android.graphics.Matrix getMatrix()
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        android.graphics.Matrix $r1, $r2;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        $r1 = new android.graphics.Matrix;

        $r2 = r0.<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix mMatrix>;

        specialinvoke $r1.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r2);

        return $r1;
    }

    public int describeContents()
    {
        android.view.inputmethod.CursorAnchorInfo r0;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        return 0;
    }

    void <init>(android.view.inputmethod.CursorAnchorInfo$Builder, android.view.inputmethod.CursorAnchorInfo$1)
    {
        android.view.inputmethod.CursorAnchorInfo r0;
        android.view.inputmethod.CursorAnchorInfo$Builder r1;
        android.view.inputmethod.CursorAnchorInfo$1 r2;

        r0 := @this: android.view.inputmethod.CursorAnchorInfo;

        r1 := @parameter0: android.view.inputmethod.CursorAnchorInfo$Builder;

        r2 := @parameter1: android.view.inputmethod.CursorAnchorInfo$1;

        specialinvoke r0.<android.view.inputmethod.CursorAnchorInfo: void <init>(android.view.inputmethod.CursorAnchorInfo$Builder)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.view.inputmethod.CursorAnchorInfo$1 $r0;

        <android.view.inputmethod.CursorAnchorInfo: int FLAG_IS_RTL> = 4;

        <android.view.inputmethod.CursorAnchorInfo: int FLAG_HAS_INVISIBLE_REGION> = 2;

        <android.view.inputmethod.CursorAnchorInfo: int FLAG_HAS_VISIBLE_REGION> = 1;

        $r0 = new android.view.inputmethod.CursorAnchorInfo$1;

        specialinvoke $r0.<android.view.inputmethod.CursorAnchorInfo$1: void <init>()>();

        <android.view.inputmethod.CursorAnchorInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
