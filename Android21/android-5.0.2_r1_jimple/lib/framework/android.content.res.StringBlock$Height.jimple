class android.content.res.StringBlock$Height extends java.lang.Object implements android.text.style.LineHeightSpan$WithDensity
{
    private int mSize;
    private static float sProportion;

    public void <init>(int)
    {
        android.content.res.StringBlock$Height r0;
        int i0;

        r0 := @this: android.content.res.StringBlock$Height;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.StringBlock$Height: int mSize> = i0;

        return;
    }

    public void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt)
    {
        android.content.res.StringBlock$Height r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        android.graphics.Paint$FontMetricsInt r2;

        r0 := @this: android.content.res.StringBlock$Height;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: android.graphics.Paint$FontMetricsInt;

        virtualinvoke r0.<android.content.res.StringBlock$Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r1, i0, i1, i2, i3, r2, null);

        return;
    }

    public void chooseHeight(java.lang.CharSequence, int, int, int, int, android.graphics.Paint$FontMetricsInt, android.text.TextPaint)
    {
        android.content.res.StringBlock$Height r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        android.graphics.Paint$FontMetricsInt r2;
        android.text.TextPaint r3;
        android.graphics.Paint r4, $r6;
        android.graphics.Rect r5, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b8;
        double $d0, $d1;

        r0 := @this: android.content.res.StringBlock$Height;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: android.graphics.Paint$FontMetricsInt;

        r3 := @parameter6: android.text.TextPaint;

        i4 = r0.<android.content.res.StringBlock$Height: int mSize>;

        if r3 == null goto label1;

        $f9 = (float) i4;

        $f8 = r3.<android.text.TextPaint: float density>;

        $f7 = $f9 * $f8;

        i4 = (int) $f7;

     label1:
        $i6 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i5 = r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i7 = $i6 - $i5;

        if $i7 >= i4 goto label2;

        $i25 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i26 = $i25 - i4;

        r2.<android.graphics.Paint$FontMetricsInt: int top> = $i26;

        $i23 = r2.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i24 = $i23 - i4;

        r2.<android.graphics.Paint$FontMetricsInt: int ascent> = $i24;

        goto label6;

     label2:
        $f0 = <android.content.res.StringBlock$Height: float sProportion>;

        $b8 = $f0 cmpl 0.0F;

        if $b8 != 0 goto label3;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r4 = $r6;

        virtualinvoke r4.<android.graphics.Paint: void setTextSize(float)>(100.0F);

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r5 = $r7;

        virtualinvoke r4.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("ABCDEFG", 0, 7, r5);

        $i22 = r5.<android.graphics.Rect: int top>;

        $f6 = (float) $i22;

        $f4 = virtualinvoke r4.<android.graphics.Paint: float ascent()>();

        $f5 = $f6 / $f4;

        <android.content.res.StringBlock$Height: float sProportion> = $f5;

     label3:
        $i10 = r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i9 = neg $i10;

        $f1 = (float) $i9;

        $f2 = <android.content.res.StringBlock$Height: float sProportion>;

        $f3 = $f1 * $f2;

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i27 = (int) $d1;

        $i11 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i13 = i4 - $i11;

        if $i13 < i27 goto label4;

        $i19 = r2.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i18 = $i19 - i4;

        r2.<android.graphics.Paint$FontMetricsInt: int top> = $i18;

        $i20 = r2.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i21 = $i20 - i4;

        r2.<android.graphics.Paint$FontMetricsInt: int ascent> = $i21;

        goto label6;

     label4:
        if i4 < i27 goto label5;

        $i14 = neg i27;

        r2.<android.graphics.Paint$FontMetricsInt: int ascent> = $i14;

        r2.<android.graphics.Paint$FontMetricsInt: int top> = $i14;

        $i17 = r2.<android.graphics.Paint$FontMetricsInt: int top>;

        $i16 = $i17 + i4;

        r2.<android.graphics.Paint$FontMetricsInt: int descent> = $i16;

        r2.<android.graphics.Paint$FontMetricsInt: int bottom> = $i16;

        goto label6;

     label5:
        $i12 = neg i4;

        r2.<android.graphics.Paint$FontMetricsInt: int ascent> = $i12;

        r2.<android.graphics.Paint$FontMetricsInt: int top> = $i12;

        r2.<android.graphics.Paint$FontMetricsInt: int descent> = 0;

        r2.<android.graphics.Paint$FontMetricsInt: int bottom> = 0;

     label6:
        return;
    }

    static void <clinit>()
    {
        <android.content.res.StringBlock$Height: float sProportion> = 0.0F;

        return;
    }
}
