public class android.filterpacks.imageproc.AlphaBlendFilter extends android.filterpacks.imageproc.ImageCombineFilter
{
    private final java.lang.String mAlphaBlendShader;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.AlphaBlendFilter r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.filterpacks.imageproc.AlphaBlendFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "source";

        $r2[1] = "overlay";

        $r2[2] = "mask";

        specialinvoke r0.<android.filterpacks.imageproc.ImageCombineFilter: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>(r1, $r2, "blended", "weight");

        r0.<android.filterpacks.imageproc.AlphaBlendFilter: java.lang.String mAlphaBlendShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform sampler2D tex_sampler_1;\nuniform sampler2D tex_sampler_2;\nuniform float weight;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 colorL = texture2D(tex_sampler_0, v_texcoord);\n  vec4 colorR = texture2D(tex_sampler_1, v_texcoord);\n  float blend = texture2D(tex_sampler_2, v_texcoord).r * weight;\n  gl_FragColor = colorL * (1.0 - blend) + colorR * blend;\n}\n";

        return;
    }

    protected android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.AlphaBlendFilter r0;
        android.filterfw.core.FilterContext r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.filterpacks.imageproc.AlphaBlendFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("TODO: Write native implementation for AlphaBlend!");

        throw $r2;
    }

    protected android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.AlphaBlendFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.ShaderProgram $r2;

        r0 := @this: android.filterpacks.imageproc.AlphaBlendFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r2.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r1, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform sampler2D tex_sampler_1;\nuniform sampler2D tex_sampler_2;\nuniform float weight;\nvarying vec2 v_texcoord;\nvoid main() {\n  vec4 colorL = texture2D(tex_sampler_0, v_texcoord);\n  vec4 colorR = texture2D(tex_sampler_1, v_texcoord);\n  float blend = texture2D(tex_sampler_2, v_texcoord).r * weight;\n  gl_FragColor = colorL * (1.0 - blend) + colorR * blend;\n}\n");

        return $r2;
    }
}
