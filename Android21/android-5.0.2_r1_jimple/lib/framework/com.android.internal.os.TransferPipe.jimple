public final class com.android.internal.os.TransferPipe extends java.lang.Object implements java.lang.Runnable
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final long DEFAULT_TIMEOUT;
    final java.lang.Thread mThread;
    final android.os.ParcelFileDescriptor[] mFds;
    java.io.FileDescriptor mOutFd;
    long mEndTime;
    java.lang.String mFailure;
    boolean mComplete;
    java.lang.String mBufferPrefix;

    public void <init>() throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.Thread $r1;
        android.os.ParcelFileDescriptor[] $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Thread;

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r0, "TransferPipe");

        r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread> = $r1;

        $r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds> = $r2;

        return;
    }

    android.os.ParcelFileDescriptor getReadFd()
    {
        com.android.internal.os.TransferPipe r0;
        android.os.ParcelFileDescriptor[] $r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        $r1 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r2 = $r1[0];

        return $r2;
    }

    public android.os.ParcelFileDescriptor getWriteFd()
    {
        com.android.internal.os.TransferPipe r0;
        android.os.ParcelFileDescriptor[] $r1;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: com.android.internal.os.TransferPipe;

        $r1 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r2 = $r1[1];

        return $r2;
    }

    public void setBufferPrefix(java.lang.String)
    {
        com.android.internal.os.TransferPipe r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix> = r1;

        return;
    }

    static void go(com.android.internal.os.TransferPipe$Caller, android.os.IInterface, java.io.FileDescriptor, java.lang.String, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        com.android.internal.os.TransferPipe$Caller r0;
        android.os.IInterface r1;
        java.io.FileDescriptor r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r0 := @parameter0: com.android.internal.os.TransferPipe$Caller;

        r1 := @parameter1: android.os.IInterface;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        staticinvoke <com.android.internal.os.TransferPipe: void go(com.android.internal.os.TransferPipe$Caller,android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[],long)>(r0, r1, r2, r3, r4, 5000L);

        return;
    }

    static void go(com.android.internal.os.TransferPipe$Caller, android.os.IInterface, java.io.FileDescriptor, java.lang.String, java.lang.String[], long) throws java.io.IOException, android.os.RemoteException
    {
        com.android.internal.os.TransferPipe$Caller r0;
        android.os.IInterface r1;
        java.io.FileDescriptor r2, $r10;
        java.lang.String r3;
        java.lang.String[] r4;
        long l0;
        java.lang.Throwable r6, $r12;
        android.os.IBinder $r7;
        boolean $z0;
        com.android.internal.os.TransferPipe $r8, r13;
        android.os.ParcelFileDescriptor $r9;
        android.os.RemoteException $r11;

        r0 := @parameter0: com.android.internal.os.TransferPipe$Caller;

        r1 := @parameter1: android.os.IInterface;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        l0 := @parameter5: long;

        $r7 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $z0 = $r7 instanceof android.os.Binder;

        if $z0 == 0 goto label05;

     label01:
        interfaceinvoke r0.<com.android.internal.os.TransferPipe$Caller: void go(android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>(r1, r2, r3, r4);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

     label04:
        return;

     label05:
        $r8 = new com.android.internal.os.TransferPipe;

        specialinvoke $r8.<com.android.internal.os.TransferPipe: void <init>()>();

        r13 = $r8;

     label06:
        $r9 = virtualinvoke r13.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r10 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke r0.<com.android.internal.os.TransferPipe$Caller: void go(android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>(r1, $r10, r3, r4);

        virtualinvoke r13.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r2, l0);

     label07:
        virtualinvoke r13.<com.android.internal.os.TransferPipe: void kill()>();

        goto label10;

     label08:
        $r12 := @caughtexception;

        r6 = $r12;

     label09:
        virtualinvoke r13.<com.android.internal.os.TransferPipe: void kill()>();

        throw r6;

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    static void goDump(android.os.IBinder, java.io.FileDescriptor, java.lang.String[]) throws java.io.IOException, android.os.RemoteException
    {
        android.os.IBinder r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String[];

        staticinvoke <com.android.internal.os.TransferPipe: void goDump(android.os.IBinder,java.io.FileDescriptor,java.lang.String[],long)>(r0, r1, r2, 5000L);

        return;
    }

    static void goDump(android.os.IBinder, java.io.FileDescriptor, java.lang.String[], long) throws java.io.IOException, android.os.RemoteException
    {
        android.os.IBinder r0;
        java.io.FileDescriptor r1, $r7;
        java.lang.String[] r2;
        long l0;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        com.android.internal.os.TransferPipe $r5, r10;
        android.os.ParcelFileDescriptor $r6;
        android.os.RemoteException $r8;

        r0 := @parameter0: android.os.IBinder;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.lang.String[];

        l0 := @parameter3: long;

        $z0 = r0 instanceof android.os.Binder;

        if $z0 == 0 goto label05;

     label01:
        interfaceinvoke r0.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, r2);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

     label04:
        return;

     label05:
        $r5 = new com.android.internal.os.TransferPipe;

        specialinvoke $r5.<com.android.internal.os.TransferPipe: void <init>()>();

        r10 = $r5;

     label06:
        $r6 = virtualinvoke r10.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r7 = virtualinvoke $r6.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke r0.<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>($r7, r2);

        virtualinvoke r10.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r1, l0);

     label07:
        virtualinvoke r10.<com.android.internal.os.TransferPipe: void kill()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r10.<com.android.internal.os.TransferPipe: void kill()>();

        throw r4;

     label10:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void go(java.io.FileDescriptor) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0;
        java.io.FileDescriptor r1;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.io.FileDescriptor;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r1, 5000L);

        return;
    }

    public void go(java.io.FileDescriptor, long) throws java.io.IOException
    {
        com.android.internal.os.TransferPipe r0, r2;
        java.io.FileDescriptor r1;
        long l0, l1, $l2, $l3, $l4, $l5;
        java.lang.Throwable r4, r5, $r13, $r15;
        java.lang.Thread $r7, $r12;
        java.lang.String $r8, $r9, $r11;
        java.io.IOException $r10, $r14;
        boolean $z0;
        byte $b6;
        java.lang.InterruptedException $r16;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 := @parameter0: java.io.FileDescriptor;

        l0 := @parameter1: long;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        r0.<com.android.internal.os.TransferPipe: java.io.FileDescriptor mOutFd> = r1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = $l2 + l0;

        r0.<com.android.internal.os.TransferPipe: long mEndTime> = $l3;

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(1);

        $r7 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        virtualinvoke $r7.<java.lang.Thread: void start()>();

     label03:
        $r8 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        if $r8 != null goto label08;

        $z0 = r0.<com.android.internal.os.TransferPipe: boolean mComplete>;

        if $z0 != 0 goto label08;

        $l5 = r0.<com.android.internal.os.TransferPipe: long mEndTime>;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = $l5 - $l4;

        $b6 = l1 cmp 0L;

        if $b6 > 0 goto label04;

        $r12 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Timeout");

        throw $r14;

     label04:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l1);

     label05:
        goto label07;

     label06:
        $r16 := @caughtexception;

     label07:
        goto label03;

     label08:
        $r9 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        if $r9 == null goto label09;

        $r10 = new java.io.IOException;

        $r11 = r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure>;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label09:
        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label12:
        throw r4;

     label13:
        virtualinvoke r0.<com.android.internal.os.TransferPipe: void kill()>();

        goto label16;

     label14:
        $r13 := @caughtexception;

        r5 = $r13;

     label15:
        virtualinvoke r0.<com.android.internal.os.TransferPipe: void kill()>();

        throw r5;

     label16:
        return;

        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    void closeFd(int)
    {
        com.android.internal.os.TransferPipe r0;
        int i0;
        android.os.ParcelFileDescriptor[] $r2, $r4, $r6;
        android.os.ParcelFileDescriptor $r3, $r5;
        java.io.IOException $r7;

        r0 := @this: com.android.internal.os.TransferPipe;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r3 = $r2[i0];

        if $r3 == null goto label5;

     label1:
        $r4 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r5 = $r4[i0];

        virtualinvoke $r5.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r6 = r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor[] mFds>;

        $r6[i0] = null;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void kill()
    {
        com.android.internal.os.TransferPipe r0, r1;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 = r0;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(0);

        virtualinvoke r0.<com.android.internal.os.TransferPipe: void closeFd(int)>(1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void run()
    {
        com.android.internal.os.TransferPipe r0, r4, r26, r27;
        byte[] r1, r24;
        java.io.FileInputStream r2, $r10;
        java.io.FileOutputStream r3, $r12;
        android.os.ParcelFileDescriptor r5;
        java.lang.Throwable r6, r7, r8, $r18, $r19, $r22;
        int i0, i1, $i2, $i4, $i5, i8;
        java.io.FileDescriptor $r11, $r13;
        java.lang.String $r14, $r17, $r23;
        boolean $z0, z1;
        java.lang.Thread $r15;
        byte $b3, $b6;
        java.io.IOException $r20, r25;

        r0 := @this: com.android.internal.os.TransferPipe;

        r1 = newarray (byte)[1024];

        r4 = r0;

        entermonitor r0;

     label01:
        r5 = virtualinvoke r0.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getReadFd()>();

        if r5 != null goto label03;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("TransferPipe", "Pipe has been closed...");

        exitmonitor r4;

     label02:
        return;

     label03:
        $r10 = new java.io.FileInputStream;

        $r11 = virtualinvoke r5.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r11);

        r2 = $r10;

        $r12 = new java.io.FileOutputStream;

        $r13 = r0.<com.android.internal.os.TransferPipe: java.io.FileDescriptor mOutFd>;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r13);

        r3 = $r12;

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r19 := @caughtexception;

        r6 = $r19;

        exitmonitor r4;

     label06:
        throw r6;

     label07:
        r24 = null;

        z1 = 1;

        $r14 = r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix>;

        if $r14 == null goto label08;

        $r17 = r0.<com.android.internal.os.TransferPipe: java.lang.String mBufferPrefix>;

        r24 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();

     label08:
        $i2 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[])>(r1);

        i8 = $i2;

        if $i2 <= 0 goto label17;

        if r24 != null goto label09;

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, i8);

        goto label08;

     label09:
        i0 = 0;

        i1 = 0;

     label10:
        if i1 >= i8 goto label15;

        $b3 = r1[i1];

        if $b3 == 10 goto label14;

        if i1 <= i0 goto label11;

        $i5 = i1 - i0;

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, i0, $i5);

     label11:
        i0 = i1;

        if z1 == 0 goto label12;

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>(r24);

        z1 = 0;

     label12:
        i1 = i1 + 1;

        if i1 >= i8 goto label13;

        $b6 = r1[i1];

        if $b6 != 10 goto label12;

     label13:
        if i1 >= i8 goto label14;

        z1 = 1;

     label14:
        i1 = i1 + 1;

        goto label10;

     label15:
        if i8 <= i0 goto label16;

        $i4 = i8 - i0;

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, i0, $i4);

     label16:
        goto label08;

     label17:
        $r15 = r0.<com.android.internal.os.TransferPipe: java.lang.Thread mThread>;

        $z0 = virtualinvoke $r15.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 == 0 goto label18;

     label18:
        goto label24;

     label19:
        $r20 := @caughtexception;

        r25 = $r20;

        r26 = r0;

        entermonitor r0;

     label20:
        $r23 = virtualinvoke r25.<java.io.IOException: java.lang.String toString()>();

        r0.<com.android.internal.os.TransferPipe: java.lang.String mFailure> = $r23;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r26;

     label21:
        return;

     label22:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r26;

     label23:
        throw r7;

     label24:
        r27 = r0;

        entermonitor r0;

     label25:
        r0.<com.android.internal.os.TransferPipe: boolean mComplete> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r27;

     label26:
        goto label29;

     label27:
        $r22 := @caughtexception;

        r8 = $r22;

        exitmonitor r27;

     label28:
        throw r8;

     label29:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label08 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.TransferPipe: long DEFAULT_TIMEOUT> = 5000L;

        <com.android.internal.os.TransferPipe: boolean DEBUG> = 0;

        <com.android.internal.os.TransferPipe: java.lang.String TAG> = "TransferPipe";

        return;
    }
}
