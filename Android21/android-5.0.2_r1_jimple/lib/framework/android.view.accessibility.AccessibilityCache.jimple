final class android.view.accessibility.AccessibilityCache extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG;
    private static final boolean CHECK_INTEGRITY;
    private final java.lang.Object mLock;
    private final android.util.SparseArray mWindowCache;
    private final android.util.SparseArray mNodeCache;
    private final android.util.SparseArray mTempWindowArray;

    void <init>()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object $r1;
        android.util.SparseArray $r2, $r3, $r4;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mTempWindowArray> = $r4;

        return;
    }

    public void addWindow(android.view.accessibility.AccessibilityWindowInfo)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.view.accessibility.AccessibilityWindowInfo r1, r3, $r9;
        java.lang.Object r2, $r5, $r7;
        int i0;
        java.lang.Throwable r4, $r10;
        android.util.SparseArray $r6, $r8;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.view.accessibility.AccessibilityWindowInfo;

        $r5 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityWindowInfo: int getId()>();

        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.view.accessibility.AccessibilityWindowInfo) $r7;

        if r3 == null goto label2;

        virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: void recycle()>();

     label2:
        $r8 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r9 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>(r1);

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r9);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Object r2, r3, $r6, $r7;
        int i0, i1, $i3, $i5, $i6, $i8;
        long l2, $l4, $l7;
        java.lang.Throwable r4, r5, $r8, $r9;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r6 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        lookupswitch(i0)
        {
            case 4: goto label02;
            case 8: goto label02;
            case 16: goto label02;
            case 32: goto label12;
            case 2048: goto label03;
            case 4096: goto label11;
            case 8192: goto label02;
            case 32768: goto label02;
            case 65536: goto label02;
            case 4194304: goto label12;
            default: goto label13;
        };

     label02:
        $i8 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l7 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>($i8, $l7);

        goto label13;

     label03:
        $r7 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label04:
        i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        l2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        $i5 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>();

        $i6 = $i5 & 1;

        if $i6 == 0 goto label05;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i1, l2);

        goto label06;

     label05:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void refreshCachedNodeLocked(int,long)>(i1, l2);

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label09:
        throw r4;

     label10:
        goto label13;

     label11:
        $i3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getWindowId()>();

        $l4 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: long getSourceNodeId()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>($i3, $l4);

        goto label13;

     label12:
        virtualinvoke r0.<android.view.accessibility.AccessibilityCache: void clear()>();

     label13:
        exitmonitor r2;

     label14:
        goto label17;

     label15:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r2;

     label16:
        throw r5;

     label17:
        $z0 = <android.view.accessibility.AccessibilityCache: boolean CHECK_INTEGRITY>;

        if $z0 == 0 goto label18;

        virtualinvoke r0.<android.view.accessibility.AccessibilityCache: void checkIntegrity()>();

     label18:
        return;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void refreshCachedNodeLocked(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        android.util.LongSparseArray r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.LongSparseArray) $r4;

        if r1 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r2 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        if r2 != null goto label2;

        return;

     label2:
        $z0 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(boolean)>(1);

        if $z0 == 0 goto label3;

        return;

     label3:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l1);

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo getNode(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        java.lang.Object r1, $r5, $r7, $r8;
        android.util.LongSparseArray r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.lang.Throwable r4, $r9;
        android.util.SparseArray $r6;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r5 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.LongSparseArray) $r7;

        if r2 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        $r8 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r8;

        if r3 == null goto label4;

        r3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>(r3);

     label4:
        exitmonitor r1;

     label5:
        return r3;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r1;

     label7:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.List getWindows()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r6, $r9, $r12;
        int i0, i1, $i2, i3;
        android.util.SparseArray r2, $r7, $r11;
        android.view.accessibility.AccessibilityWindowInfo r3, r4, $r10;
        java.lang.Throwable r5, $r13;
        java.util.ArrayList $r8, r14;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        $r6 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        i0 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i0 <= 0 goto label07;

        r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mTempWindowArray>;

        virtualinvoke r2.<android.util.SparseArray: void clear()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        $r11 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r3 = (android.view.accessibility.AccessibilityWindowInfo) $r12;

        $i2 = virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>();

        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r3);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        r14 = $r8;

        i3 = i0 - 1;

     label04:
        if i3 < 0 goto label05;

        $r9 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r4 = (android.view.accessibility.AccessibilityWindowInfo) $r9;

        $r10 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>(r4);

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r10);

        virtualinvoke r2.<android.util.SparseArray: void removeAt(int)>(i3);

        i3 = i3 + -1;

        goto label04;

     label05:
        exitmonitor r1;

     label06:
        return r14;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r1;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.view.accessibility.AccessibilityWindowInfo getWindow(int)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        java.lang.Object r1, $r4, $r6;
        android.view.accessibility.AccessibilityWindowInfo r2, $r7;
        java.lang.Throwable r3, $r8;
        android.util.SparseArray $r5;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        $r4 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.view.accessibility.AccessibilityWindowInfo) $r6;

        if r2 == null goto label3;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>(r2);

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void add(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r4, r14;
        java.lang.Object r2, $r7, $r8, $r10;
        int i0, i2, i3, $i7;
        android.util.LongSparseArray r3, $r11;
        long l1, l4, $l5, l8;
        android.util.LongArray r5;
        java.lang.Throwable r6, $r12;
        android.util.SparseArray $r9, $r13;
        byte $b6;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r7 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        $r9 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r8 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.util.LongSparseArray) $r8;

        if r3 != null goto label02;

        $r11 = new android.util.LongSparseArray;

        specialinvoke $r11.<android.util.LongSparseArray: void <init>()>();

        r3 = $r11;

        $r13 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

     label02:
        l1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $r10 = virtualinvoke r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l1);

        r4 = (android.view.accessibility.AccessibilityNodeInfo) $r10;

        if r4 == null goto label07;

        r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()>();

        i2 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i3 = 0;

     label03:
        if i3 >= i2 goto label06;

        l4 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i3);

        if r5 == null goto label04;

        $i7 = virtualinvoke r5.<android.util.LongArray: int indexOf(long)>(l4);

        if $i7 >= 0 goto label05;

     label04:
        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l4);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        l8 = virtualinvoke r4.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $l5 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $b6 = $l5 cmp l8;

        if $b6 == 0 goto label07;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeLocked(int,long)>(i0, l8);

     label07:
        r14 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        virtualinvoke r3.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, r14);

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

        r6 = $r12;

        exitmonitor r2;

     label10:
        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void clear()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r4, $r10;
        int i0, i1, i2, i3, i4;
        android.view.accessibility.AccessibilityWindowInfo r2;
        java.lang.Throwable r3, $r11;
        android.util.SparseArray $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        $r4 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label3;

        $r8 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r10 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (android.view.accessibility.AccessibilityWindowInfo) $r10;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void recycle()>();

        $r9 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        virtualinvoke $r9.<android.util.SparseArray: void removeAt(int)>(i1);

        i1 = i1 + -1;

        goto label2;

     label3:
        $r6 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i3 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        $r7 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i2 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i4);

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearNodesForWindowLocked(int)>(i2);

        i4 = i4 + 1;

        goto label4;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void clearNodesForWindowLocked(int)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0, i1, i2;
        android.util.LongSparseArray r1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        $r3 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.LongSparseArray) $r4;

        if r1 != null goto label1;

        return;

     label1:
        i1 = virtualinvoke r1.<android.util.LongSparseArray: int size()>();

        i2 = i1 - 1;

     label2:
        if i2 < 0 goto label3;

        $r6 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        r2 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        virtualinvoke r1.<android.util.LongSparseArray: void removeAt(int)>(i2);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        i2 = i2 + -1;

        goto label2;

     label3:
        $r5 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    private void clearSubTreeLocked(int, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        int i0;
        long l1;
        android.util.LongSparseArray r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.LongSparseArray) $r3;

        if r1 == null goto label1;

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeRecursiveLocked(android.util.LongSparseArray,long)>(r1, l1);

     label1:
        return;
    }

    private void clearSubTreeRecursiveLocked(android.util.LongSparseArray, long)
    {
        android.view.accessibility.AccessibilityCache r0;
        android.util.LongSparseArray r1;
        long l0, l3;
        android.view.accessibility.AccessibilityNodeInfo r2;
        int i1, i2;
        java.lang.Object $r3;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        r1 := @parameter0: android.util.LongSparseArray;

        l0 := @parameter1: long;

        $r3 = virtualinvoke r1.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (android.view.accessibility.AccessibilityNodeInfo) $r3;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.util.LongSparseArray: void remove(long)>(l0);

        i1 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        l3 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i2);

        specialinvoke r0.<android.view.accessibility.AccessibilityCache: void clearSubTreeRecursiveLocked(android.util.LongSparseArray,long)>(r1, l3);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public void checkIntegrity()
    {
        android.view.accessibility.AccessibilityCache r0;
        java.lang.Object r1, $r10, $r16, $r19, $r20, $r21, $r23, $r39, $r55;
        android.view.accessibility.AccessibilityWindowInfo r2, r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i21, i23, i24;
        android.util.LongSparseArray r5;
        android.util.ArraySet r6, $r17;
        android.view.accessibility.AccessibilityNodeInfo r7, r8, r9, r66, r67, r68, r69;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Throwable r11, $r63;
        android.util.SparseArray $r12, $r13, $r14, $r15, $r18, $r56, $r64;
        long $l11, $l12, $l13, $l16;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r57, $r58, $r59, $r61, $r62;
        java.lang.String $r27, $r32, $r45, $r51, $r54, $r60, $r65;

        r0 := @this: android.view.accessibility.AccessibilityCache;

        $r10 = r0.<android.view.accessibility.AccessibilityCache: java.lang.Object mLock>;

        r1 = $r10;

        entermonitor $r10;

     label01:
        $r12 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $i9 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if $i9 > 0 goto label03;

        $r64 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $i21 = virtualinvoke $r64.<android.util.SparseArray: int size()>();

        if $i21 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r2 = null;

        r3 = null;

        $r13 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        i0 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label09;

        $r56 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mWindowCache>;

        $r55 = virtualinvoke $r56.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r4 = (android.view.accessibility.AccessibilityWindowInfo) $r55;

        $z5 = virtualinvoke r4.<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>();

        if $z5 == 0 goto label06;

        if r3 == null goto label05;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate active window:");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r65 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r65);

        goto label06;

     label05:
        r3 = r4;

     label06:
        $z4 = virtualinvoke r4.<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>();

        if $z4 == 0 goto label08;

        if r2 == null goto label07;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate focused window:");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r60);

        goto label08;

     label07:
        r2 = r4;

     label08:
        i1 = i1 + 1;

        goto label04;

     label09:
        r66 = null;

        r67 = null;

        $r14 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i2 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        i3 = 0;

     label10:
        if i3 >= i2 goto label26;

        $r15 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r5 = (android.util.LongSparseArray) $r16;

        $i10 = virtualinvoke r5.<android.util.LongSparseArray: int size()>();

        if $i10 > 0 goto label11;

        goto label25;

     label11:
        $r17 = new android.util.ArraySet;

        specialinvoke $r17.<android.util.ArraySet: void <init>()>();

        r6 = $r17;

        $r18 = r0.<android.view.accessibility.AccessibilityCache: android.util.SparseArray mNodeCache>;

        i4 = virtualinvoke $r18.<android.util.SparseArray: int keyAt(int)>(i3);

        i5 = virtualinvoke r5.<android.util.LongSparseArray: int size()>();

        i6 = 0;

     label12:
        if i6 >= i5 goto label25;

        $r19 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i6);

        r7 = (android.view.accessibility.AccessibilityNodeInfo) $r19;

        $z3 = virtualinvoke r6.<android.util.ArraySet: boolean add(java.lang.Object)>(r7);

        if $z3 != 0 goto label13;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate node: ");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r54 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r54);

        goto label24;

     label13:
        $z1 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        if $z1 == 0 goto label15;

        if r66 == null goto label14;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate accessibility focus:");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r51);

        goto label15;

     label14:
        r66 = r7;

     label15:
        $z2 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        if $z2 == 0 goto label17;

        if r67 == null goto label16;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate input focus: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r45);

        goto label17;

     label16:
        r67 = r7;

     label17:
        $l12 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r20 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object get(long)>($l12);

        r8 = (android.view.accessibility.AccessibilityNodeInfo) $r20;

        if r8 == null goto label21;

        z0 = 0;

        i7 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i8 = 0;

     label18:
        if i8 >= i7 goto label20;

        $l16 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i8);

        $r39 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object get(long)>($l16);

        r9 = (android.view.accessibility.AccessibilityNodeInfo) $r39;

        if r9 != r7 goto label19;

        z0 = 1;

        goto label20;

     label19:
        i8 = i8 + 1;

        goto label18;

     label20:
        if z0 != 0 goto label21;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid parent-child relation between parent: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and child: ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r32);

     label21:
        i23 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i24 = 0;

     label22:
        if i24 >= i23 goto label24;

        $l11 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i24);

        $r23 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object get(long)>($l11);

        r68 = (android.view.accessibility.AccessibilityNodeInfo) $r23;

        if r68 == null goto label23;

        $l13 = virtualinvoke r68.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r21 = virtualinvoke r5.<android.util.LongSparseArray: java.lang.Object get(long)>($l13);

        r69 = (android.view.accessibility.AccessibilityNodeInfo) $r21;

        if r69 == r7 goto label23;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid child-parent relation between child: ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and parent: ");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityCache", $r27);

     label23:
        i24 = i24 + 1;

        goto label22;

     label24:
        i6 = i6 + 1;

        goto label12;

     label25:
        i3 = i3 + 1;

        goto label10;

     label26:
        exitmonitor r1;

     label27:
        goto label30;

     label28:
        $r63 := @caughtexception;

        r11 = $r63;

        exitmonitor r1;

     label29:
        throw r11;

     label30:
        return;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        <android.view.accessibility.AccessibilityCache: boolean DEBUG> = 0;

        <android.view.accessibility.AccessibilityCache: java.lang.String LOG_TAG> = "AccessibilityCache";

        $r1 = "eng";

        $r0 = <android.os.Build: java.lang.String TYPE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        <android.view.accessibility.AccessibilityCache: boolean CHECK_INTEGRITY> = $z0;

        return;
    }
}
