public final class android.provider.MediaStore$Images$Media extends java.lang.Object implements android.provider.MediaStore$Images$ImageColumns
{
    public static final android.net.Uri INTERNAL_CONTENT_URI;
    public static final android.net.Uri EXTERNAL_CONTENT_URI;
    public static final java.lang.String CONTENT_TYPE;
    public static final java.lang.String DEFAULT_SORT_ORDER;

    public void <init>()
    {
        android.provider.MediaStore$Images$Media r0;

        r0 := @this: android.provider.MediaStore$Images$Media;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[])
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        android.database.Cursor $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        $r3 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, null, null, "bucket_display_name");

        return $r3;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        java.lang.String r3, r4, $r6;
        android.database.Cursor $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        if r4 != null goto label1;

        $r6 = "bucket_display_name";

        goto label2;

     label1:
        $r6 = r4;

     label2:
        $r5 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, null, $r6);

        return $r5;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r7;
        android.database.Cursor $r6;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        if r5 != null goto label1;

        $r7 = "bucket_display_name";

        goto label2;

     label1:
        $r7 = r5;

     label2:
        $r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, $r7);

        return $r6;
    }

    public static final android.graphics.Bitmap getBitmap(android.content.ContentResolver, android.net.Uri) throws java.io.FileNotFoundException, java.io.IOException
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.io.InputStream r2;
        android.graphics.Bitmap r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 = virtualinvoke r0.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r1);

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r2);

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r3;
    }

    public static final java.lang.String insertImage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3, r6, r7;
        java.io.FileInputStream r4, $r11;
        android.graphics.Bitmap r5;
        java.lang.Throwable r9, $r13;
        java.io.IOException $r12, $r14;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r11 = new java.io.FileInputStream;

        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r4 = $r11;

     label01:
        r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r1);

        r6 = staticinvoke <android.provider.MediaStore$Images$Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>(r0, r5, r2, r3);

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

        r7 = r6;

     label02:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

     label05:
        return r7;

     label06:
        $r13 := @caughtexception;

        r9 = $r13;

     label07:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

     label10:
        throw r9;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private static final android.graphics.Bitmap StoreThumbnail(android.content.ContentResolver, android.graphics.Bitmap, long, float, float, int)
    {
        android.content.ContentResolver r0;
        android.graphics.Bitmap r1, r3;
        long l0;
        float f0, f1, f2, f3, $f4, $f5;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Matrix r2, $r7;
        android.content.ContentValues r4, $r8;
        android.net.Uri r5, $r14;
        java.io.OutputStream r6;
        java.lang.Integer $r9, $r10, $r11, $r12;
        android.graphics.Bitmap$CompressFormat $r13;
        java.io.IOException $r15;
        java.io.FileNotFoundException $r16;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.graphics.Bitmap;

        l0 := @parameter2: long;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i1 := @parameter5: int;

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        r2 = $r7;

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i2;

        f2 = f0 / $f4;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f5 = (float) $i3;

        f3 = f1 / $f5;

        virtualinvoke r2.<android.graphics.Matrix: void setScale(float,float)>(f2, f3);

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r1, 0, 0, $i4, $i5, r2, 1);

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>(int)>(4);

        r4 = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("kind", $r9);

        $i6 = (int) l0;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("image_id", $r10);

        $i7 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("height", $r12);

        $i8 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("width", $r11);

        $r14 = <android.provider.MediaStore$Images$Thumbnails: android.net.Uri EXTERNAL_CONTENT_URI>;

        r5 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r14, r4);

     label1:
        r6 = virtualinvoke r0.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r5);

        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r3.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r13, 100, r6);

        virtualinvoke r6.<java.io.OutputStream: void close()>();

     label2:
        return r3;

     label3:
        $r16 := @caughtexception;

        return null;

     label4:
        $r15 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public static final java.lang.String insertImage(android.content.ContentResolver, android.graphics.Bitmap, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.graphics.Bitmap r1, r9;
        java.lang.String r2, r3, r6;
        android.content.ContentValues r4, $r11;
        android.net.Uri r5, $r12;
        java.io.OutputStream r7;
        java.lang.Throwable r8, $r15;
        android.graphics.Bitmap$CompressFormat $r13;
        java.lang.Exception $r14, r16;
        long l4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.graphics.Bitmap;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r4 = $r11;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", r2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", r3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", "image/jpeg");

        r5 = null;

        r6 = null;

     label01:
        $r12 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r5 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r12, r4);

        if r1 == null goto label07;

        r7 = virtualinvoke r0.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r5);

     label02:
        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        virtualinvoke r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r13, 50, r7);

     label03:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

        goto label06;

     label04:
        $r15 := @caughtexception;

        r8 = $r15;

     label05:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

        throw r8;

     label06:
        l4 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r5);

        r9 = staticinvoke <android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>(r0, l4, 1, null);

        staticinvoke <android.provider.MediaStore$Images$Media: android.graphics.Bitmap StoreThumbnail(android.content.ContentResolver,android.graphics.Bitmap,long,float,float,int)>(r0, r9, l4, 50.0F, 50.0F, 3);

        goto label08;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaStore", "Failed to create thumbnail, removing original");

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r5, null, null);

        r5 = null;

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        r16 = $r14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaStore", "Failed to insert image", r16);

        if r5 == null goto label10;

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r5, null, null);

        r5 = null;

     label10:
        if r5 == null goto label11;

        r6 = virtualinvoke r5.<android.net.Uri: java.lang.String toString()>();

     label11:
        return r6;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Exception from label01 to label08 with label09;
    }

    public static android.net.Uri getContentUri(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        android.net.Uri $r6;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://media/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/images/media");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        return $r6;
    }

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.MediaStore$Images$Media: java.lang.String DEFAULT_SORT_ORDER> = "bucket_display_name";

        <android.provider.MediaStore$Images$Media: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/image";

        $r0 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("internal");

        <android.provider.MediaStore$Images$Media: android.net.Uri INTERNAL_CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("external");

        <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI> = $r1;

        return;
    }
}
