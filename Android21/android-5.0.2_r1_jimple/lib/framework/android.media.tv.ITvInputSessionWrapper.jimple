public class android.media.tv.ITvInputSessionWrapper extends android.media.tv.ITvInputSession$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final java.lang.String TAG;
    private static final int MESSAGE_HANDLING_DURATION_THRESHOLD_MILLIS;
    private static final int DO_RELEASE;
    private static final int DO_SET_MAIN;
    private static final int DO_SET_SURFACE;
    private static final int DO_DISPATCH_SURFACE_CHANGED;
    private static final int DO_SET_STREAM_VOLUME;
    private static final int DO_TUNE;
    private static final int DO_SET_CAPTION_ENABLED;
    private static final int DO_SELECT_TRACK;
    private static final int DO_APP_PRIVATE_COMMAND;
    private static final int DO_CREATE_OVERLAY_VIEW;
    private static final int DO_RELAYOUT_OVERLAY_VIEW;
    private static final int DO_REMOVE_OVERLAY_VIEW;
    private static final int DO_REQUEST_UNBLOCK_CONTENT;
    private final com.android.internal.os.HandlerCaller mCaller;
    private android.media.tv.TvInputService$Session mTvInputSessionImpl;
    private android.view.InputChannel mChannel;
    private android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver mReceiver;

    public void <init>(android.content.Context, android.media.tv.TvInputService$Session, android.view.InputChannel)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.content.Context r1;
        android.media.tv.TvInputService$Session r2;
        android.view.InputChannel r3;
        com.android.internal.os.HandlerCaller $r4;
        android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver $r5;
        android.os.Looper $r6;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.tv.TvInputService$Session;

        r3 := @parameter2: android.view.InputChannel;

        specialinvoke r0.<android.media.tv.ITvInputSession$Stub: void <init>()>();

        $r4 = new com.android.internal.os.HandlerCaller;

        specialinvoke $r4.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, null, r0, 1);

        r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller> = $r4;

        r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl> = r2;

        r0.<android.media.tv.ITvInputSessionWrapper: android.view.InputChannel mChannel> = r3;

        if r3 == null goto label1;

        $r5 = new android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver;

        $r6 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver: void <init>(android.media.tv.ITvInputSessionWrapper,android.view.InputChannel,android.os.Looper)>(r0, r3, $r6);

        r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver mReceiver> = $r5;

     label1:
        return;
    }

    public void executeMessage(android.os.Message)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.os.Message r1;
        long l0, $l2, l12;
        com.android.internal.os.SomeArgs r2, r65, r66, r67, r68;
        android.media.tv.TvInputService$Session $r3, $r4, $r18, $r19, $r24, $r26, $r36, $r40, $r41, $r50, $r52, $r54, $r56, $r59;
        int $i1, $i4, $i6, $i7, $i8, $i9, $i11;
        android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver $r5, $r14;
        android.view.InputChannel $r6, $r15;
        byte $b3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r57, $r62, $r64;
        java.lang.String $r13, $r16, $r31, $r38, $r63;
        java.lang.Object $r17, $r21, $r22, $r23, $r25, $r27, $r32, $r33, $r34, $r37, $r39, $r43, $r45, $r46, $r47, $r49, $r53, $r55, $r60;
        android.graphics.Rect $r20, $r28;
        android.os.IBinder $r29;
        android.os.Bundle $r30, $r44;
        java.lang.Integer $r35;
        boolean $z0, $z1;
        java.lang.Boolean $r42, $r61;
        java.lang.Float $r48;
        android.net.Uri $r51;
        float $f0;
        android.view.Surface $r58;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        if $r3 != null goto label01;

        return;

     label01:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = r1.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label14;
            case 13: goto label15;
            default: goto label16;
        };

     label02:
        $r4 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        virtualinvoke $r4.<android.media.tv.TvInputService$Session: void release()>();

        r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl> = null;

        $r5 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver mReceiver>;

        if $r5 == null goto label03;

        $r14 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver mReceiver>;

        virtualinvoke $r14.<android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver: void dispose()>();

        r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver mReceiver> = null;

     label03:
        $r6 = r0.<android.media.tv.ITvInputSessionWrapper: android.view.InputChannel mChannel>;

        if $r6 == null goto label17;

        $r15 = r0.<android.media.tv.ITvInputSessionWrapper: android.view.InputChannel mChannel>;

        virtualinvoke $r15.<android.view.InputChannel: void dispose()>();

        r0.<android.media.tv.ITvInputSessionWrapper: android.view.InputChannel mChannel> = null;

        goto label17;

     label04:
        $r56 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r60 = r1.<android.os.Message: java.lang.Object obj>;

        $r61 = (java.lang.Boolean) $r60;

        $z1 = virtualinvoke $r61.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r56.<android.media.tv.TvInputService$Session: void setMain(boolean)>($z1);

        goto label17;

     label05:
        $r59 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r53 = r1.<android.os.Message: java.lang.Object obj>;

        $r58 = (android.view.Surface) $r53;

        virtualinvoke $r59.<android.media.tv.TvInputService$Session: void setSurface(android.view.Surface)>($r58);

        goto label17;

     label06:
        $r55 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r55;

        $r52 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $i8 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        $i7 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        $i9 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        virtualinvoke $r52.<android.media.tv.TvInputService$Session: void dispatchSurfaceChanged(int,int,int)>($i8, $i7, $i9);

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label17;

     label07:
        $r54 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r49 = r1.<android.os.Message: java.lang.Object obj>;

        $r48 = (java.lang.Float) $r49;

        $f0 = virtualinvoke $r48.<java.lang.Float: float floatValue()>();

        virtualinvoke $r54.<android.media.tv.TvInputService$Session: void setStreamVolume(float)>($f0);

        goto label17;

     label08:
        $r47 = r1.<android.os.Message: java.lang.Object obj>;

        r65 = (com.android.internal.os.SomeArgs) $r47;

        $r50 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r46 = r65.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r51 = (android.net.Uri) $r46;

        $r45 = r65.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r44 = (android.os.Bundle) $r45;

        virtualinvoke $r50.<android.media.tv.TvInputService$Session: void tune(android.net.Uri,android.os.Bundle)>($r51, $r44);

        virtualinvoke r65.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label17;

     label09:
        $r41 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r43 = r1.<android.os.Message: java.lang.Object obj>;

        $r42 = (java.lang.Boolean) $r43;

        $z0 = virtualinvoke $r42.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r41.<android.media.tv.TvInputService$Session: void setCaptionEnabled(boolean)>($z0);

        goto label17;

     label10:
        $r37 = r1.<android.os.Message: java.lang.Object obj>;

        r66 = (com.android.internal.os.SomeArgs) $r37;

        $r40 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r34 = r66.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r35 = (java.lang.Integer) $r34;

        $i6 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        $r39 = r66.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r38 = (java.lang.String) $r39;

        virtualinvoke $r40.<android.media.tv.TvInputService$Session: void selectTrack(int,java.lang.String)>($i6, $r38);

        virtualinvoke r66.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label17;

     label11:
        $r27 = r1.<android.os.Message: java.lang.Object obj>;

        r67 = (com.android.internal.os.SomeArgs) $r27;

        $r36 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r32 = r67.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r31 = (java.lang.String) $r32;

        $r33 = r67.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r30 = (android.os.Bundle) $r33;

        virtualinvoke $r36.<android.media.tv.TvInputService$Session: void appPrivateCommand(java.lang.String,android.os.Bundle)>($r31, $r30);

        virtualinvoke r67.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label17;

     label12:
        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        r68 = (com.android.internal.os.SomeArgs) $r25;

        $r26 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r22 = r68.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r29 = (android.os.IBinder) $r22;

        $r23 = r68.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r28 = (android.graphics.Rect) $r23;

        virtualinvoke $r26.<android.media.tv.TvInputService$Session: void createOverlayView(android.os.IBinder,android.graphics.Rect)>($r29, $r28);

        virtualinvoke r68.<com.android.internal.os.SomeArgs: void recycle()>();

        goto label17;

     label13:
        $r24 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r21 = r1.<android.os.Message: java.lang.Object obj>;

        $r20 = (android.graphics.Rect) $r21;

        virtualinvoke $r24.<android.media.tv.TvInputService$Session: void relayoutOverlayView(android.graphics.Rect)>($r20);

        goto label17;

     label14:
        $r18 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        virtualinvoke $r18.<android.media.tv.TvInputService$Session: void removeOverlayView(boolean)>(1);

        goto label17;

     label15:
        $r19 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        $r17 = r1.<android.os.Message: java.lang.Object obj>;

        $r16 = (java.lang.String) $r17;

        virtualinvoke $r19.<android.media.tv.TvInputService$Session: void unblockContent(java.lang.String)>($r16);

        goto label17;

     label16:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i11 = r1.<android.os.Message: int what>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputSessionWrapper", $r63);

     label17:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l12 = $l2 - l0;

        $b3 = l12 cmp 50L;

        if $b3 <= 0 goto label18;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling message (");

        $i4 = r1.<android.os.Message: int what>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") took too long time (duration=");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms)");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputSessionWrapper", $r13);

     label18:
        return;
    }

    public void release()
    {
        android.media.tv.ITvInputSessionWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void setMain(boolean)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        java.lang.Boolean $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(2, $r3);

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void setSurface(android.view.Surface)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.view.Surface r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.view.Surface;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(3, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void dispatchSurfaceChanged(int, int, int)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        int i0, i1, i2;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIII(int,int,int,int,int)>(4, i0, i1, i2, 0);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public final void setVolume(float)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        float f0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        java.lang.Float $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        f0 := @parameter0: float;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(5, $r3);

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void tune(android.net.Uri, android.os.Bundle)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(6, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void setCaptionEnabled(boolean)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        java.lang.Boolean $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(7, $r3);

        virtualinvoke $r1.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void selectTrack(int, java.lang.String)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        int i0;
        java.lang.String r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        java.lang.Integer $r4;
        android.os.Message $r5;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(8, $r4, r1);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void appPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        java.lang.String r1;
        android.os.Bundle r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r4 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(9, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void createOverlayView(android.os.IBinder, android.graphics.Rect)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.os.IBinder r1;
        android.graphics.Rect r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(10, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void relayoutOverlayView(android.graphics.Rect)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.graphics.Rect r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(11, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void removeOverlayView()
    {
        android.media.tv.ITvInputSessionWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(12);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public void requestUnblockContent(java.lang.String)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        java.lang.String r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.media.tv.ITvInputSessionWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.media.tv.ITvInputSessionWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(13, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    static android.media.tv.TvInputService$Session access$000(android.media.tv.ITvInputSessionWrapper)
    {
        android.media.tv.ITvInputSessionWrapper r0;
        android.media.tv.TvInputService$Session $r1;

        r0 := @parameter0: android.media.tv.ITvInputSessionWrapper;

        $r1 = r0.<android.media.tv.ITvInputSessionWrapper: android.media.tv.TvInputService$Session mTvInputSessionImpl>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.media.tv.ITvInputSessionWrapper: int DO_REQUEST_UNBLOCK_CONTENT> = 13;

        <android.media.tv.ITvInputSessionWrapper: int DO_REMOVE_OVERLAY_VIEW> = 12;

        <android.media.tv.ITvInputSessionWrapper: int DO_RELAYOUT_OVERLAY_VIEW> = 11;

        <android.media.tv.ITvInputSessionWrapper: int DO_CREATE_OVERLAY_VIEW> = 10;

        <android.media.tv.ITvInputSessionWrapper: int DO_APP_PRIVATE_COMMAND> = 9;

        <android.media.tv.ITvInputSessionWrapper: int DO_SELECT_TRACK> = 8;

        <android.media.tv.ITvInputSessionWrapper: int DO_SET_CAPTION_ENABLED> = 7;

        <android.media.tv.ITvInputSessionWrapper: int DO_TUNE> = 6;

        <android.media.tv.ITvInputSessionWrapper: int DO_SET_STREAM_VOLUME> = 5;

        <android.media.tv.ITvInputSessionWrapper: int DO_DISPATCH_SURFACE_CHANGED> = 4;

        <android.media.tv.ITvInputSessionWrapper: int DO_SET_SURFACE> = 3;

        <android.media.tv.ITvInputSessionWrapper: int DO_SET_MAIN> = 2;

        <android.media.tv.ITvInputSessionWrapper: int DO_RELEASE> = 1;

        <android.media.tv.ITvInputSessionWrapper: int MESSAGE_HANDLING_DURATION_THRESHOLD_MILLIS> = 50;

        <android.media.tv.ITvInputSessionWrapper: java.lang.String TAG> = "TvInputSessionWrapper";

        return;
    }
}
