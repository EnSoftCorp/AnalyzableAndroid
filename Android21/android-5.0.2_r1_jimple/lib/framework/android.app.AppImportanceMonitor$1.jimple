class android.app.AppImportanceMonitor$1 extends android.app.IProcessObserver$Stub
{
    final android.app.AppImportanceMonitor this$0;

    void <init>(android.app.AppImportanceMonitor)
    {
        android.app.AppImportanceMonitor$1 r0;
        android.app.AppImportanceMonitor r1;

        r0 := @this: android.app.AppImportanceMonitor$1;

        r1 := @parameter0: android.app.AppImportanceMonitor;

        r0.<android.app.AppImportanceMonitor$1: android.app.AppImportanceMonitor this$0> = r1;

        specialinvoke r0.<android.app.IProcessObserver$Stub: void <init>()>();

        return;
    }

    public void onForegroundActivitiesChanged(int, int, boolean)
    {
        android.app.AppImportanceMonitor$1 r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.app.AppImportanceMonitor$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void onProcessStateChanged(int, int, int)
    {
        android.app.AppImportanceMonitor$1 r0;
        int i0, i1, i2, $i3;
        android.util.SparseArray r1, $r4;
        java.lang.Throwable r2, $r6;
        android.app.AppImportanceMonitor $r3, $r5;

        r0 := @this: android.app.AppImportanceMonitor$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<android.app.AppImportanceMonitor$1: android.app.AppImportanceMonitor this$0>;

        $r4 = $r3.<android.app.AppImportanceMonitor: android.util.SparseArray mApps>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.app.AppImportanceMonitor$1: android.app.AppImportanceMonitor this$0>;

        $i3 = staticinvoke <android.app.ActivityManager$RunningAppProcessInfo: int procStateToImportance(int)>(i2);

        virtualinvoke $r5.<android.app.AppImportanceMonitor: void updateImportanceLocked(int,int,int,boolean)>(i0, i1, $i3, 1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onProcessDied(int, int)
    {
        android.app.AppImportanceMonitor$1 r0;
        int i0, i1;
        android.util.SparseArray r1, $r4;
        java.lang.Throwable r2, $r6;
        android.app.AppImportanceMonitor $r3, $r5;

        r0 := @this: android.app.AppImportanceMonitor$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<android.app.AppImportanceMonitor$1: android.app.AppImportanceMonitor this$0>;

        $r4 = $r3.<android.app.AppImportanceMonitor: android.util.SparseArray mApps>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.app.AppImportanceMonitor$1: android.app.AppImportanceMonitor this$0>;

        virtualinvoke $r5.<android.app.AppImportanceMonitor: void updateImportanceLocked(int,int,int,boolean)>(i0, i1, 1000, 1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
