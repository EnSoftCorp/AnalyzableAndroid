public class android.net.LinkAddress extends java.lang.Object implements android.os.Parcelable
{
    private java.net.InetAddress address;
    private int prefixLength;
    private int flags;
    private int scope;
    public static final android.os.Parcelable$Creator CREATOR;

    static int scopeForUnicastAddress(java.net.InetAddress)
    {
        java.net.InetAddress r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.net.InetAddress;

        $z0 = virtualinvoke r0.<java.net.InetAddress: boolean isAnyLocalAddress()>();

        if $z0 == 0 goto label1;

        $i3 = <android.system.OsConstants: int RT_SCOPE_HOST>;

        return $i3;

     label1:
        $z1 = virtualinvoke r0.<java.net.InetAddress: boolean isLoopbackAddress()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<java.net.InetAddress: boolean isLinkLocalAddress()>();

        if $z2 == 0 goto label3;

     label2:
        $i0 = <android.system.OsConstants: int RT_SCOPE_LINK>;

        return $i0;

     label3:
        $z3 = r0 instanceof java.net.Inet4Address;

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r0.<java.net.InetAddress: boolean isSiteLocalAddress()>();

        if $z4 == 0 goto label4;

        $i2 = <android.system.OsConstants: int RT_SCOPE_SITE>;

        return $i2;

     label4:
        $i1 = <android.system.OsConstants: int RT_SCOPE_UNIVERSE>;

        return $i1;
    }

    private void init(java.net.InetAddress, int, int, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.net.InetAddress: boolean isMulticastAddress()>();

        if $z0 != 0 goto label2;

        if i0 < 0 goto label2;

        $z1 = r1 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label1;

        if i0 > 32 goto label2;

     label1:
        if i0 <= 128 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad LinkAddress params ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        r0.<android.net.LinkAddress: java.net.InetAddress address> = r1;

        r0.<android.net.LinkAddress: int prefixLength> = i0;

        r0.<android.net.LinkAddress: int flags> = i1;

        r0.<android.net.LinkAddress: int scope> = i2;

        return;
    }

    public void <init>(java.net.InetAddress, int, int, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, i1, i2;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public void <init>(java.net.InetAddress, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0, $i1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int)>(r1, i0, 0, 0);

        $i1 = staticinvoke <android.net.LinkAddress: int scopeForUnicastAddress(java.net.InetAddress)>(r1);

        r0.<android.net.LinkAddress: int scope> = $i1;

        return;
    }

    public void <init>(java.net.InterfaceAddress)
    {
        android.net.LinkAddress r0;
        java.net.InterfaceAddress r1;
        java.net.InetAddress $r2;
        short $s0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InterfaceAddress;

        $r2 = virtualinvoke r1.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();

        $s0 = virtualinvoke r1.<java.net.InterfaceAddress: short getNetworkPrefixLength()>();

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r2, $s0);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.net.LinkAddress r0;
        java.lang.String r1;
        java.net.InetAddress $r2;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.net.LinkAddress: void <init>(java.lang.String,int,int)>(r1, 0, 0);

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $i0 = staticinvoke <android.net.LinkAddress: int scopeForUnicastAddress(java.net.InetAddress)>($r2);

        r0.<android.net.LinkAddress: int scope> = $i0;

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        android.net.LinkAddress r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.util.Pair r2;
        java.lang.Object $r3, $r4;
        java.lang.Integer $r5;
        java.net.InetAddress $r6;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = staticinvoke <android.net.NetworkUtils: android.util.Pair parseIpAndMask(java.lang.String)>(r1);

        $r3 = r2.<android.util.Pair: java.lang.Object first>;

        $r6 = (java.net.InetAddress) $r3;

        $r4 = r2.<android.util.Pair: java.lang.Object second>;

        $r5 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int,int,int)>($r6, $i2, i0, i1);

        return;
    }

    public java.lang.String toString()
    {
        android.net.LinkAddress r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6;
        java.net.InetAddress $r2;
        java.lang.String $r3, $r7;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.LinkAddress r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.net.InetAddress $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.net.LinkAddress;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (android.net.LinkAddress) r1;

        $r4 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r3 = r2.<android.net.LinkAddress: java.net.InetAddress address>;

        $z1 = virtualinvoke $r4.<java.net.InetAddress: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i0 = r2.<android.net.LinkAddress: int prefixLength>;

        if $i1 != $i0 goto label2;

        $i3 = r0.<android.net.LinkAddress: int flags>;

        $i2 = r2.<android.net.LinkAddress: int flags>;

        if $i3 != $i2 goto label2;

        $i5 = r0.<android.net.LinkAddress: int scope>;

        $i4 = r2.<android.net.LinkAddress: int scope>;

        if $i5 != $i4 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int hashCode()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $i0 = virtualinvoke $r1.<java.net.InetAddress: int hashCode()>();

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i2 = 11 * $i1;

        $i5 = $i0 + $i2;

        $i3 = r0.<android.net.LinkAddress: int flags>;

        $i4 = 19 * $i3;

        $i8 = $i5 + $i4;

        $i6 = r0.<android.net.LinkAddress: int scope>;

        $i7 = 43 * $i6;

        $i9 = $i8 + $i7;

        return $i9;
    }

    public boolean isSameAddressAs(android.net.LinkAddress)
    {
        android.net.LinkAddress r0, r1;
        java.net.InetAddress $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: android.net.LinkAddress;

        $r3 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r2 = r1.<android.net.LinkAddress: java.net.InetAddress address>;

        $z0 = virtualinvoke $r3.<java.net.InetAddress: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i0 = r1.<android.net.LinkAddress: int prefixLength>;

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.net.InetAddress getAddress()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        return $r1;
    }

    public int getPrefixLength()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        return $i0;
    }

    public int getNetworkPrefixLength()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = virtualinvoke r0.<android.net.LinkAddress: int getPrefixLength()>();

        return $i0;
    }

    public int getFlags()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int flags>;

        return $i0;
    }

    public int getScope()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int scope>;

        return $i0;
    }

    public boolean isGlobalPreferred()
    {
        android.net.LinkAddress r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;
        byte $b10;
        boolean $z0;

        r0 := @this: android.net.LinkAddress;

        $i1 = r0.<android.net.LinkAddress: int scope>;

        $i0 = <android.system.OsConstants: int RT_SCOPE_UNIVERSE>;

        if $i1 != $i0 goto label1;

        $i7 = r0.<android.net.LinkAddress: int flags>;

        $i3 = <android.system.OsConstants: int IFA_F_DADFAILED>;

        $i2 = <android.system.OsConstants: int IFA_F_DEPRECATED>;

        $i5 = $i3 | $i2;

        $i4 = <android.system.OsConstants: int IFA_F_TENTATIVE>;

        $i6 = $i5 | $i4;

        $i8 = $i7 & $i6;

        $l9 = (long) $i8;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int describeContents()
    {
        android.net.LinkAddress r0;

        r0 := @this: android.net.LinkAddress;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.LinkAddress r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.net.InetAddress $r2;
        byte[] $r3;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r3 = virtualinvoke $r2.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r3);

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.LinkAddress: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.LinkAddress: int scope>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;
    }

    static void <clinit>()
    {
        android.net.LinkAddress$1 $r0;

        $r0 = new android.net.LinkAddress$1;

        specialinvoke $r0.<android.net.LinkAddress$1: void <init>()>();

        <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
