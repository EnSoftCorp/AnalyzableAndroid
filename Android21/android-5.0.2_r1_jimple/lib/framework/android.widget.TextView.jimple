public class android.widget.TextView extends android.view.View implements android.view.ViewTreeObserver$OnPreDrawListener
{
    static final java.lang.String LOG_TAG;
    static final boolean DEBUG_EXTRACT;
    private static final int SANS;
    private static final int SERIF;
    private static final int MONOSPACE;
    private static final int SIGNED;
    private static final int DECIMAL;
    private static final int MARQUEE_FADE_NORMAL;
    private static final int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS;
    private static final int MARQUEE_FADE_SWITCH_SHOW_FADE;
    private static final int LINES;
    private static final int EMS;
    private static final int PIXELS;
    private static final android.graphics.RectF TEMP_RECTF;
    private static final int VERY_WIDE;
    private static final int ANIMATED_SCROLL_GAP;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final android.text.Spanned EMPTY_SPANNED;
    private static final int CHANGE_WATCHER_PRIORITY;
    private static final int[] MULTILINE_STATE_SET;
    static long LAST_CUT_OR_COPY_TIME;
    private android.content.res.ColorStateList mTextColor;
    private android.content.res.ColorStateList mHintTextColor;
    private android.content.res.ColorStateList mLinkTextColor;
    private int mCurTextColor;
    private int mCurHintTextColor;
    private boolean mFreezesText;
    private boolean mTemporaryDetach;
    private boolean mDispatchTemporaryDetach;
    private android.text.Editable$Factory mEditableFactory;
    private android.text.Spannable$Factory mSpannableFactory;
    private float mShadowRadius;
    private float mShadowDx;
    private float mShadowDy;
    private int mShadowColor;
    private boolean mPreDrawRegistered;
    private boolean mPreDrawListenerDetached;
    private boolean mPreventDefaultMovement;
    private android.text.TextUtils$TruncateAt mEllipsize;
    android.widget.TextView$Drawables mDrawables;
    private android.widget.TextView$CharWrapper mCharWrapper;
    private android.widget.TextView$Marquee mMarquee;
    private boolean mRestartMarquee;
    private int mMarqueeRepeatLimit;
    private int mLastLayoutDirection;
    private int mMarqueeFadeMode;
    private android.text.Layout mSavedMarqueeModeLayout;
    private java.lang.CharSequence mText;
    private java.lang.CharSequence mTransformed;
    private android.widget.TextView$BufferType mBufferType;
    private java.lang.CharSequence mHint;
    private android.text.Layout mHintLayout;
    private android.text.method.MovementMethod mMovement;
    private android.text.method.TransformationMethod mTransformation;
    private boolean mAllowTransformationLengthChange;
    private android.widget.TextView$ChangeWatcher mChangeWatcher;
    private java.util.ArrayList mListeners;
    private final android.text.TextPaint mTextPaint;
    private boolean mUserSetTextScaleX;
    private android.text.Layout mLayout;
    private int mGravity;
    private boolean mHorizontallyScrolling;
    private int mAutoLinkMask;
    private boolean mLinksClickable;
    private float mSpacingMult;
    private float mSpacingAdd;
    private int mMaximum;
    private int mMaxMode;
    private int mMinimum;
    private int mMinMode;
    private int mOldMaximum;
    private int mOldMaxMode;
    private int mMaxWidth;
    private int mMaxWidthMode;
    private int mMinWidth;
    private int mMinWidthMode;
    private boolean mSingleLine;
    private int mDesiredHeightAtMeasure;
    private boolean mIncludePad;
    private int mDeferScroll;
    private android.graphics.Rect mTempRect;
    private long mLastScroll;
    private android.widget.Scroller mScroller;
    private android.text.BoringLayout$Metrics mBoring;
    private android.text.BoringLayout$Metrics mHintBoring;
    private android.text.BoringLayout mSavedLayout;
    private android.text.BoringLayout mSavedHintLayout;
    private android.text.TextDirectionHeuristic mTextDir;
    private android.text.InputFilter[] mFilters;
    private volatile java.util.Locale mCurrentSpellCheckerLocaleCache;
    int mHighlightColor;
    private android.graphics.Path mHighlightPath;
    private final android.graphics.Paint mHighlightPaint;
    private boolean mHighlightPathBogus;
    int mCursorDrawableRes;
    int mTextSelectHandleLeftRes;
    int mTextSelectHandleRightRes;
    int mTextSelectHandleRes;
    int mTextEditSuggestionItemLayout;
    private android.widget.Editor mEditor;
    private static final android.text.BoringLayout$Metrics UNKNOWN_BORING;
    static final int ID_SELECT_ALL;
    static final int ID_CUT;
    static final int ID_COPY;
    static final int ID_PASTE;

    public void <init>(android.content.Context)
    {
        android.widget.TextView r0;
        android.content.Context r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.TextView r0;
        android.content.Context r1, $r60;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, i63, i64, i68;
        android.content.res.Resources r3;
        android.content.res.CompatibilityInfo r4;
        android.content.res.ColorStateList r5, r6, r7, $r39;
        java.lang.String r8, r10, $r77, $r86, $r95;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, z32, z33, z34, z35;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.content.res.Resources$Theme r9;
        android.content.res.TypedArray r11, r12, r118, r125;
        java.lang.CharSequence r13, r20, r21, $r99, r117;
        android.graphics.drawable.Drawable r14, r15, r16, r17, r18, r19;
        org.xmlpull.v1.XmlPullParserException r22, $r113;
        java.lang.ClassNotFoundException r23, $r111;
        java.lang.Class r24;
        android.widget.TextView$BufferType $r25, $r68, r120;
        android.text.Spannable$Factory $r26;
        android.text.Editable$Factory $r27;
        android.text.TextPaint $r28, $r29, $r34;
        android.util.DisplayMetrics $r30;
        android.text.InputFilter[] $r31, $r40, $r54;
        android.graphics.Paint $r32, $r35;
        android.text.method.MovementMethod $r33, $r48, $r65;
        int[] $r36, $r38, $r49, $r106;
        android.widget.Editor $r37, $r42, $r45, $r46, $r47, $r51, $r52, $r62, $r63, $r64, $r66, $r67, $r69, $r70, $r71, $r72, $r74, $r75, $r76, $r79, $r81, $r82, $r85, $r87, $r89, $r91, $r93, $r94, $r97, $r101, $r102, $r104, $r105, $r108;
        android.text.method.PasswordTransformationMethod $r41;
        android.text.method.TextKeyListener $r43, $r73;
        android.text.TextUtils$TruncateAt $r44, $r56, $r57, $r58;
        android.text.method.KeyListener $r50, $r55, $r88, $r90;
        android.text.InputFilter$LengthFilter $r53;
        android.view.ViewConfiguration $r59;
        android.text.method.AllCapsTransformationMethod $r61;
        android.text.method.DigitsKeyListener $r78, $r80;
        android.text.method.DialerKeyListener $r83;
        java.lang.Object $r84;
        android.widget.Editor$InputContentType $r92, $r96, $r98, $r100, $r103;
        java.lang.IncompatibleClassChangeError $r107;
        java.lang.IllegalAccessException $r109, r122;
        java.lang.RuntimeException $r110, $r112, $r116;
        java.io.IOException $r114, r119;
        java.lang.InstantiationException $r115, r121;
        short s66, s67;
        android.text.method.TextKeyListener$Capitalize r124;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r27 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = $r27;

        $r26 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = $r26;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = 3;

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        $r25 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = $r25;

        r0.<android.widget.TextView: int mGravity> = 8388659;

        r0.<android.widget.TextView: boolean mLinksClickable> = 1;

        r0.<android.widget.TextView: float mSpacingMult> = 1.0F;

        r0.<android.widget.TextView: float mSpacingAdd> = 0.0F;

        r0.<android.widget.TextView: int mMaximum> = 2147483647;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        r0.<android.widget.TextView: int mMinimum> = 0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        $i22 = r0.<android.widget.TextView: int mMaximum>;

        r0.<android.widget.TextView: int mOldMaximum> = $i22;

        $i23 = r0.<android.widget.TextView: int mMaxMode>;

        r0.<android.widget.TextView: int mOldMaxMode> = $i23;

        r0.<android.widget.TextView: int mMaxWidth> = 2147483647;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        r0.<android.widget.TextView: int mMinWidth> = 0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        r0.<android.widget.TextView: boolean mIncludePad> = 1;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r31 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = $r31;

        r0.<android.widget.TextView: int mHighlightColor> = 1714664933;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = "";

        r3 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r28 = new android.text.TextPaint;

        specialinvoke $r28.<android.text.TextPaint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.text.TextPaint mTextPaint> = $r28;

        $r29 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r30 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f5 = $r30.<android.util.DisplayMetrics: float density>;

        $r29.<android.text.TextPaint: float density> = $f5;

        $r34 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f6 = r4.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r34.<android.text.TextPaint: void setCompatibilityScaling(float)>($f6);

        $r35 = new android.graphics.Paint;

        specialinvoke $r35.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint> = $r35;

        $r32 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $f4 = r4.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r32.<android.graphics.Paint: void setCompatibilityScaling(float)>($f4);

        $r33 = virtualinvoke r0.<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>();

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = $r33;

        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = null;

        i2 = 0;

        r5 = null;

        r6 = null;

        r7 = null;

        i3 = 15;

        r8 = null;

        i4 = -1;

        i5 = -1;

        z0 = 0;

        i6 = 0;

        f0 = 0.0F;

        f2 = 0.0F;

        f1 = 0.0F;

        z1 = 0;

        f3 = 0.0F;

        r10 = null;

        r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r38 = <com.android.internal.R$styleable: int[] TextViewAppearance>;

        r12 = virtualinvoke r9.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r38, i0, i1);

        r11 = null;

        i8 = virtualinvoke r12.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        virtualinvoke r12.<android.content.res.TypedArray: void recycle()>();

        if i8 == -1 goto label001;

        $r106 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r11 = virtualinvoke r9.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i8, $r106);

     label001:
        if r11 == null goto label021;

        i7 = virtualinvoke r11.<android.content.res.TypedArray: int getIndexCount()>();

        i10 = 0;

     label002:
        if i10 >= i7 goto label020;

        i9 = virtualinvoke r11.<android.content.res.TypedArray: int getIndex(int)>(i10);

        tableswitch(i9)
        {
            case 0: goto label007;
            case 1: goto label008;
            case 2: goto label010;
            case 3: goto label004;
            case 4: goto label003;
            case 5: goto label005;
            case 6: goto label006;
            case 7: goto label012;
            case 8: goto label013;
            case 9: goto label014;
            case 10: goto label015;
            case 11: goto label011;
            case 12: goto label009;
            case 13: goto label016;
            case 14: goto label017;
            case 15: goto label018;
            default: goto label019;
        };

     label003:
        i2 = virtualinvoke r11.<android.content.res.TypedArray: int getColor(int,int)>(i9, i2);

        goto label019;

     label004:
        r5 = virtualinvoke r11.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i9);

        goto label019;

     label005:
        r6 = virtualinvoke r11.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i9);

        goto label019;

     label006:
        r7 = virtualinvoke r11.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i9);

        goto label019;

     label007:
        i3 = virtualinvoke r11.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i9, i3);

        goto label019;

     label008:
        i4 = virtualinvoke r11.<android.content.res.TypedArray: int getInt(int,int)>(i9, -1);

        goto label019;

     label009:
        r8 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getString(int)>(i9);

        goto label019;

     label010:
        i5 = virtualinvoke r11.<android.content.res.TypedArray: int getInt(int,int)>(i9, -1);

        goto label019;

     label011:
        z0 = virtualinvoke r11.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i9, 0);

        goto label019;

     label012:
        i6 = virtualinvoke r11.<android.content.res.TypedArray: int getInt(int,int)>(i9, 0);

        goto label019;

     label013:
        f0 = virtualinvoke r11.<android.content.res.TypedArray: float getFloat(int,float)>(i9, 0.0F);

        goto label019;

     label014:
        f2 = virtualinvoke r11.<android.content.res.TypedArray: float getFloat(int,float)>(i9, 0.0F);

        goto label019;

     label015:
        f1 = virtualinvoke r11.<android.content.res.TypedArray: float getFloat(int,float)>(i9, 0.0F);

        goto label019;

     label016:
        z1 = virtualinvoke r11.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i9, 0);

        goto label019;

     label017:
        f3 = virtualinvoke r11.<android.content.res.TypedArray: float getFloat(int,float)>(i9, 0.0F);

        goto label019;

     label018:
        r10 = virtualinvoke r11.<android.content.res.TypedArray: java.lang.String getString(int)>(i9);

     label019:
        i10 = i10 + 1;

        goto label002;

     label020:
        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

     label021:
        z32 = virtualinvoke r0.<android.widget.TextView: boolean getDefaultEditable()>();

        r117 = null;

        i63 = 0;

        r13 = null;

        z2 = 0;

        z4 = 0;

        i12 = -1;

        i11 = 0;

        z3 = 0;

        r16 = null;

        r17 = null;

        r14 = null;

        r15 = null;

        r18 = null;

        r19 = null;

        i13 = 0;

        i14 = -1;

        z5 = 0;

        i15 = -1;

        r20 = "";

        r21 = null;

        z6 = 0;

        i18 = 0;

        $r36 = <com.android.internal.R$styleable: int[] TextView>;

        r118 = virtualinvoke r9.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r36, i0, i1);

        i17 = virtualinvoke r118.<android.content.res.TypedArray: int getIndexCount()>();

        i16 = 0;

     label022:
        if i16 >= i17 goto label101;

        i19 = virtualinvoke r118.<android.content.res.TypedArray: int getIndex(int)>(i16);

        tableswitch(i19)
        {
            case 0: goto label069;
            case 1: goto label100;
            case 2: goto label074;
            case 3: goto label075;
            case 4: goto label076;
            case 5: goto label071;
            case 6: goto label070;
            case 7: goto label072;
            case 8: goto label073;
            case 9: goto label058;
            case 10: goto label053;
            case 11: goto label032;
            case 12: goto label033;
            case 13: goto label048;
            case 14: goto label042;
            case 15: goto label052;
            case 16: goto label046;
            case 17: goto label030;
            case 18: goto label055;
            case 19: goto label054;
            case 20: goto label063;
            case 21: goto label061;
            case 22: goto label041;
            case 23: goto label043;
            case 24: goto label044;
            case 25: goto label045;
            case 26: goto label047;
            case 27: goto label049;
            case 28: goto label050;
            case 29: goto label051;
            case 30: goto label056;
            case 31: goto label078;
            case 32: goto label057;
            case 33: goto label031;
            case 34: goto label060;
            case 35: goto label062;
            case 36: goto label065;
            case 37: goto label066;
            case 38: goto label067;
            case 39: goto label068;
            case 40: goto label025;
            case 41: goto label026;
            case 42: goto label027;
            case 43: goto label024;
            case 44: goto label029;
            case 45: goto label028;
            case 46: goto label023;
            case 47: goto label064;
            case 48: goto label035;
            case 49: goto label037;
            case 50: goto label034;
            case 51: goto label036;
            case 52: goto label040;
            case 53: goto label079;
            case 54: goto label080;
            case 55: goto label059;
            case 56: goto label081;
            case 57: goto label085;
            case 58: goto label086;
            case 59: goto label082;
            case 60: goto label083;
            case 61: goto label084;
            case 62: goto label091;
            case 63: goto label092;
            case 64: goto label093;
            case 65: goto label100;
            case 66: goto label100;
            case 67: goto label095;
            case 68: goto label100;
            case 69: goto label100;
            case 70: goto label090;
            case 71: goto label094;
            case 72: goto label096;
            case 73: goto label038;
            case 74: goto label039;
            case 75: goto label077;
            case 76: goto label097;
            case 77: goto label098;
            case 78: goto label099;
            default: goto label100;
        };

     label023:
        z32 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z32);

        goto label100;

     label024:
        r117 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i19);

        goto label100;

     label025:
        i63 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i63);

        goto label100;

     label026:
        r13 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i19);

        goto label100;

     label027:
        z2 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z2);

        goto label100;

     label028:
        z4 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z4);

        goto label100;

     label029:
        i12 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i12);

        goto label100;

     label030:
        i11 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i11);

        goto label100;

     label031:
        z3 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z3);

        goto label100;

     label032:
        $i59 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mAutoLinkMask> = $i59;

        goto label100;

     label033:
        $z28 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 1);

        r0.<android.widget.TextView: boolean mLinksClickable> = $z28;

        goto label100;

     label034:
        r16 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label035:
        r17 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label036:
        r14 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label037:
        r15 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label038:
        r18 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label039:
        r19 = virtualinvoke r118.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i19);

        goto label100;

     label040:
        i13 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, i13);

        goto label100;

     label041:
        $i54 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>($i54);

        goto label100;

     label042:
        $i51 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxHeight(int)>($i51);

        goto label100;

     label043:
        $i53 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>($i53);

        goto label100;

     label044:
        $i56 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setHeight(int)>($i56);

        goto label100;

     label045:
        $i55 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinLines(int)>($i55);

        goto label100;

     label046:
        $i52 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinHeight(int)>($i52);

        goto label100;

     label047:
        $i58 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxEms(int)>($i58);

        goto label100;

     label048:
        $i49 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxWidth(int)>($i49);

        goto label100;

     label049:
        $i57 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setEms(int)>($i57);

        goto label100;

     label050:
        $i47 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setWidth(int)>($i47);

        goto label100;

     label051:
        $i48 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinEms(int)>($i48);

        goto label100;

     label052:
        $i50 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinWidth(int)>($i50);

        goto label100;

     label053:
        $i60 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        virtualinvoke r0.<android.widget.TextView: void setGravity(int)>($i60);

        goto label100;

     label054:
        r21 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i19);

        goto label100;

     label055:
        r20 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i19);

        goto label100;

     label056:
        $z26 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 0);

        if $z26 == 0 goto label100;

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        goto label100;

     label057:
        z5 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z5);

        goto label100;

     label058:
        i14 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i14);

        goto label100;

     label059:
        $i45 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        $i46 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, $i45);

        virtualinvoke r0.<android.widget.TextView: void setMarqueeRepeatLimit(int)>($i46);

        goto label100;

     label060:
        $z27 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 1);

        if $z27 != 0 goto label100;

        virtualinvoke r0.<android.widget.TextView: void setIncludeFontPadding(boolean)>(0);

        goto label100;

     label061:
        $z29 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 1);

        if $z29 != 0 goto label100;

        virtualinvoke r0.<android.widget.TextView: void setCursorVisible(boolean)>(0);

        goto label100;

     label062:
        i15 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, -1);

        goto label100;

     label063:
        $f12 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, 1.0F);

        virtualinvoke r0.<android.widget.TextView: void setTextScaleX(float)>($f12);

        goto label100;

     label064:
        $z25 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 0);

        r0.<android.widget.TextView: boolean mFreezesText> = $z25;

        goto label100;

     label065:
        i6 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, 0);

        goto label100;

     label066:
        f0 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, 0.0F);

        goto label100;

     label067:
        f2 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, 0.0F);

        goto label100;

     label068:
        f1 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, 0.0F);

        goto label100;

     label069:
        $z30 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        $z31 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, $z30);

        virtualinvoke r0.<android.widget.TextView: void setEnabled(boolean)>($z31);

        goto label100;

     label070:
        i2 = virtualinvoke r118.<android.content.res.TypedArray: int getColor(int,int)>(i19, i2);

        goto label100;

     label071:
        r5 = virtualinvoke r118.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i19);

        goto label100;

     label072:
        r6 = virtualinvoke r118.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i19);

        goto label100;

     label073:
        r7 = virtualinvoke r118.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i19);

        goto label100;

     label074:
        i3 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, i3);

        goto label100;

     label075:
        i4 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i4);

        goto label100;

     label076:
        i5 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, i5);

        goto label100;

     label077:
        r8 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.String getString(int)>(i19);

        goto label100;

     label078:
        z6 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, z6);

        goto label100;

     label079:
        $f8 = r0.<android.widget.TextView: float mSpacingAdd>;

        $i43 = (int) $f8;

        $i44 = virtualinvoke r118.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i19, $i43);

        $f9 = (float) $i44;

        r0.<android.widget.TextView: float mSpacingAdd> = $f9;

        goto label100;

     label080:
        $f10 = r0.<android.widget.TextView: float mSpacingMult>;

        $f11 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, $f10);

        r0.<android.widget.TextView: float mSpacingMult> = $f11;

        goto label100;

     label081:
        i18 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, 0);

        goto label100;

     label082:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r102 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r102.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r101 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r98 = $r101.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r97 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r96 = $r97.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i41 = $r96.<android.widget.Editor$InputContentType: int imeOptions>;

        $i40 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, $i41);

        $r98.<android.widget.Editor$InputContentType: int imeOptions> = $i40;

        goto label100;

     label083:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r105 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r105.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r104 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r100 = $r104.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r99 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i19);

        $r100.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = $r99;

        goto label100;

     label084:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r91 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r91.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r93 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r103 = $r93.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r94 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r92 = $r94.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i36 = $r92.<android.widget.Editor$InputContentType: int imeActionId>;

        $i42 = virtualinvoke r118.<android.content.res.TypedArray: int getInt(int,int)>(i19, $i36);

        $r103.<android.widget.Editor$InputContentType: int imeActionId> = $i42;

        goto label100;

     label085:
        $r95 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.String getString(int)>(i19);

        virtualinvoke r0.<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>($r95);

        goto label100;

     label086:
        $i39 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        virtualinvoke r0.<android.widget.TextView: void setInputExtras(int)>($i39);

     label087:
        goto label100;

     label088:
        $r113 := @caughtexception;

        r22 = $r113;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", r22);

        goto label100;

     label089:
        $r114 := @caughtexception;

        r119 = $r114;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", r119);

        goto label100;

     label090:
        $i37 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mCursorDrawableRes> = $i37;

        goto label100;

     label091:
        $i33 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mTextSelectHandleLeftRes> = $i33;

        goto label100;

     label092:
        $i35 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRightRes> = $i35;

        goto label100;

     label093:
        $i34 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRes> = $i34;

        goto label100;

     label094:
        $i38 = virtualinvoke r118.<android.content.res.TypedArray: int getResourceId(int,int)>(i19, 0);

        r0.<android.widget.TextView: int mTextEditSuggestionItemLayout> = $i38;

        goto label100;

     label095:
        $z24 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 0);

        virtualinvoke r0.<android.widget.TextView: void setTextIsSelectable(boolean)>($z24);

        goto label100;

     label096:
        z0 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 0);

        goto label100;

     label097:
        z1 = virtualinvoke r118.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i19, 0);

        goto label100;

     label098:
        f3 = virtualinvoke r118.<android.content.res.TypedArray: float getFloat(int,float)>(i19, 0.0F);

        goto label100;

     label099:
        r10 = virtualinvoke r118.<android.content.res.TypedArray: java.lang.String getString(int)>(i19);

     label100:
        i16 = i16 + 1;

        goto label022;

     label101:
        virtualinvoke r118.<android.content.res.TypedArray: void recycle()>();

        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        i64 = i18 & 4095;

        if i64 != 129 goto label102;

        $z21 = 1;

        goto label103;

     label102:
        $z21 = 0;

     label103:
        z33 = $z21;

        if i64 != 225 goto label104;

        $z22 = 1;

        goto label105;

     label104:
        $z22 = 0;

     label105:
        z8 = $z22;

        if i64 != 18 goto label106;

        $z23 = 1;

        goto label107;

     label106:
        $z23 = 0;

     label107:
        z7 = $z23;

        if r117 == null goto label121;

     label108:
        $r86 = interfaceinvoke r117.<java.lang.CharSequence: java.lang.String toString()>();

        r24 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r86);

     label109:
        goto label111;

     label110:
        $r111 := @caughtexception;

        r23 = $r111;

        $r112 = new java.lang.RuntimeException;

        specialinvoke $r112.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r23);

        throw $r112;

     label111:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r85 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r84 = virtualinvoke r24.<java.lang.Class: java.lang.Object newInstance()>();

        $r90 = (android.text.method.KeyListener) $r84;

        $r85.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r90;

     label112:
        goto label115;

     label113:
        $r115 := @caughtexception;

        r121 = $r115;

        $r116 = new java.lang.RuntimeException;

        specialinvoke $r116.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r121);

        throw $r116;

     label114:
        $r109 := @caughtexception;

        r122 = $r109;

        $r110 = new java.lang.RuntimeException;

        specialinvoke $r110.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r122);

        throw $r110;

     label115:
        $r87 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if i18 == 0 goto label116;

        $i32 = i18;

        goto label117;

     label116:
        $r89 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r88 = $r89.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $i32 = interfaceinvoke $r88.<android.text.method.KeyListener: int getInputType()>();

     label117:
        $r87.<android.widget.Editor: int mInputType> = $i32;

     label118:
        goto label120;

     label119:
        $r107 := @caughtexception;

        $r108 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r108.<android.widget.Editor: int mInputType> = 1;

     label120:
        goto label150;

     label121:
        if r13 == null goto label124;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r76 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r77 = interfaceinvoke r13.<java.lang.CharSequence: java.lang.String toString()>();

        $r78 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>($r77);

        $r76.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r78;

        $r79 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if i18 == 0 goto label122;

        $i29 = i18;

        goto label123;

     label122:
        $i29 = 1;

     label123:
        $r79.<android.widget.Editor: int mInputType> = $i29;

        goto label150;

     label124:
        if i18 == 0 goto label127;

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i18, 1);

        $z17 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i18);

        if $z17 != 0 goto label125;

        $z18 = 1;

        goto label126;

     label125:
        $z18 = 0;

     label126:
        z5 = $z18;

        goto label150;

     label127:
        if z2 == 0 goto label128;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r82 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r83 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        $r82.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r83;

        $r75 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r75.<android.widget.Editor: int mInputType> = 3;

        goto label150;

     label128:
        if i63 == 0 goto label135;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r67 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i27 = i63 & 2;

        if $i27 == 0 goto label129;

        $z20 = 1;

        goto label130;

     label129:
        $z20 = 0;

     label130:
        $i28 = i63 & 4;

        if $i28 == 0 goto label131;

        $z19 = 1;

        goto label132;

     label131:
        $z19 = 0;

     label132:
        $r80 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>($z20, $z19);

        $r67.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r80;

        s66 = 2;

        $i30 = i63 & 2;

        if $i30 == 0 goto label133;

        s66 = s66 | 4096;

     label133:
        $i31 = i63 & 4;

        if $i31 == 0 goto label134;

        s66 = s66 | 8192;

     label134:
        $r81 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r81.<android.widget.Editor: int mInputType> = s66;

        goto label150;

     label135:
        if z4 != 0 goto label136;

        if i12 == -1 goto label142;

     label136:
        s67 = 1;

        tableswitch(i12)
        {
            case 1: goto label137;
            case 2: goto label138;
            case 3: goto label139;
            default: goto label140;
        };

     label137:
        r124 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        s67 = s67 | 16384;

        goto label141;

     label138:
        r124 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        s67 = s67 | 8192;

        goto label141;

     label139:
        r124 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        s67 = s67 | 4096;

        goto label141;

     label140:
        r124 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

     label141:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r37 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r43 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z4, r124);

        $r37.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r43;

        $r42 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r42.<android.widget.Editor: int mInputType> = s67;

        goto label150;

     label142:
        $z16 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z16 == 0 goto label144;

        $r62 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r62 == null goto label143;

        $r64 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r64.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

        $r66 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r66.<android.widget.Editor: int mInputType> = 0;

     label143:
        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        $r65 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r65);

        goto label150;

     label144:
        if z32 == 0 goto label145;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r74 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r73 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r74.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r73;

        $r63 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r63.<android.widget.Editor: int mInputType> = 1;

        goto label150;

     label145:
        $r72 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r72 == null goto label146;

        $r71 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r71.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

     label146:
        tableswitch(i11)
        {
            case 0: goto label147;
            case 1: goto label148;
            case 2: goto label149;
            default: goto label150;
        };

     label147:
        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        goto label150;

     label148:
        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label150;

     label149:
        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

     label150:
        $r45 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r45 == null goto label151;

        $r70 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r70.<android.widget.Editor: void adjustInputType(boolean,boolean,boolean,boolean)>(z6, z33, z8, z7);

     label151:
        if z3 == 0 goto label152;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r69 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r69.<android.widget.Editor: boolean mSelectAllOnFocus> = 1;

        $r68 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        if r120 != $r68 goto label152;

        r120 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label152:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r16, r17, r14, r15);

        specialinvoke r0.<android.widget.TextView: void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r18, r19);

        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablePadding(int)>(i13);

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z5);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z5, z5, z5);

        if z5 == 0 goto label153;

        $r55 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r55 != null goto label153;

        if i14 >= 0 goto label153;

        i14 = 3;

     label153:
        tableswitch(i14)
        {
            case 1: goto label154;
            case 2: goto label155;
            case 3: goto label156;
            case 4: goto label157;
            default: goto label160;
        };

     label154:
        $r44 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r44);

        goto label160;

     label155:
        $r56 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r56);

        goto label160;

     label156:
        $r57 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r57);

        goto label160;

     label157:
        $r59 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $z15 = virtualinvoke $r59.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z15 == 0 goto label158;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        goto label159;

     label158:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

     label159:
        $r58 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r58);

     label160:
        if r5 == null goto label161;

        $r39 = r5;

        goto label162;

     label161:
        $r39 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-16777216);

     label162:
        virtualinvoke r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r39);

        virtualinvoke r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>(r6);

        virtualinvoke r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>(r7);

        if i2 == 0 goto label163;

        virtualinvoke r0.<android.widget.TextView: void setHighlightColor(int)>(i2);

     label163:
        $f7 = (float) i3;

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f7);

        virtualinvoke r0.<android.widget.TextView: void setElegantTextHeight(boolean)>(z1);

        virtualinvoke r0.<android.widget.TextView: void setLetterSpacing(float)>(f3);

        virtualinvoke r0.<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>(r10);

        if z0 == 0 goto label164;

        $r61 = new android.text.method.AllCapsTransformationMethod;

        $r60 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r61.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r60);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r61);

     label164:
        if z6 != 0 goto label165;

        if z33 != 0 goto label165;

        if z8 != 0 goto label165;

        if z7 == 0 goto label166;

     label165:
        $r41 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r41);

        i4 = 3;

        goto label167;

     label166:
        $r52 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r52 == null goto label167;

        $r51 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i26 = $r51.<android.widget.Editor: int mInputType>;

        $i25 = $i26 & 4095;

        if $i25 != 129 goto label167;

        i4 = 3;

     label167:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(r8, i4, i5);

        if i6 == 0 goto label168;

        virtualinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>(f1, f0, f2, i6);

     label168:
        if i15 < 0 goto label169;

        $r54 = newarray (android.text.InputFilter)[1];

        $r53 = new android.text.InputFilter$LengthFilter;

        specialinvoke $r53.<android.text.InputFilter$LengthFilter: void <init>(int)>(i15);

        $r54[0] = $r53;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r54);

        goto label170;

     label169:
        $r40 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r40);

     label170:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r20, r120);

        if r21 == null goto label171;

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>(r21);

     label171:
        $r49 = <com.android.internal.R$styleable: int[] View>;

        r125 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r49, i0, i1);

        $r48 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r48 != null goto label172;

        $r50 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r50 == null goto label173;

     label172:
        $z14 = 1;

        goto label174;

     label173:
        $z14 = 0;

     label174:
        z34 = $z14;

        if z34 != 0 goto label175;

        $z12 = virtualinvoke r0.<android.widget.TextView: boolean isClickable()>();

        if $z12 == 0 goto label176;

     label175:
        $z10 = 1;

        goto label177;

     label176:
        $z10 = 0;

     label177:
        z35 = $z10;

        if z34 != 0 goto label178;

        $z13 = virtualinvoke r0.<android.widget.TextView: boolean isLongClickable()>();

        if $z13 == 0 goto label179;

     label178:
        $z11 = 1;

        goto label180;

     label179:
        $z11 = 0;

     label180:
        z9 = $z11;

        i68 = virtualinvoke r125.<android.content.res.TypedArray: int getIndexCount()>();

        i20 = 0;

     label181:
        if i20 >= i68 goto label186;

        i21 = virtualinvoke r125.<android.content.res.TypedArray: int getIndex(int)>(i20);

        lookupswitch(i21)
        {
            case 19: goto label182;
            case 30: goto label183;
            case 31: goto label184;
            default: goto label185;
        };

     label182:
        z34 = virtualinvoke r125.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i21, z34);

        goto label185;

     label183:
        z35 = virtualinvoke r125.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i21, z35);

        goto label185;

     label184:
        z9 = virtualinvoke r125.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i21, z9);

     label185:
        i20 = i20 + 1;

        goto label181;

     label186:
        virtualinvoke r125.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(z34);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z35);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z9);

        $r47 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r47 == null goto label187;

        $r46 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r46.<android.widget.Editor: void prepareCursorControllers()>();

     label187:
        $i24 = virtualinvoke r0.<android.widget.TextView: int getImportantForAccessibility()>();

        if $i24 != 0 goto label188;

        virtualinvoke r0.<android.widget.TextView: void setImportantForAccessibility(int)>(1);

     label188:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label086 to label087 with label088;
        catch java.io.IOException from label086 to label087 with label089;
        catch java.lang.ClassNotFoundException from label108 to label109 with label110;
        catch java.lang.InstantiationException from label111 to label112 with label113;
        catch java.lang.IllegalAccessException from label111 to label112 with label114;
        catch java.lang.IncompatibleClassChangeError from label115 to label118 with label119;
    }

    private void setTypefaceFromAttrs(java.lang.String, int, int)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        int i0, i1;
        android.graphics.Typeface r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r1, i1);

        if r2 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r2);

        return;

     label1:
        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        r2 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        goto label5;

     label3:
        r2 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label5;

     label4:
        r2 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

     label5:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>(r2, i1);

        return;
    }

    private void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2;
        boolean z0, $z3;
        android.widget.TextView$Drawables r3, $r6, $r7;
        android.graphics.Rect r4;
        int[] r5;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.Context $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        if r2 == null goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        if z0 == 0 goto label9;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 != null goto label4;

        $r7 = new android.widget.TextView$Drawables;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r8);

        r3 = $r7;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r7;

     label4:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        r4 = r3.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r5 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label5;

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i7, $i6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r4);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $i8 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        r3.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i8;

        $i9 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        r3.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i9;

        goto label6;

     label5:
        r3.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r3.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

     label6:
        if r2 == null goto label7;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r4);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r2;

        $i5 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        r3.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i5;

        $i4 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        r3.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i4;

        goto label8;

     label7:
        r3.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r3.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label8:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

     label9:
        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        android.view.inputmethod.InputMethodManager r1, r7;
        android.widget.Editor $r2, $r3, $r4, $r5;
        android.os.IBinder $r6;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if z0 != $z1 goto label1;

        return;

     label1:
        if z0 != 0 goto label2;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label2;

        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z2 == 0 goto label2;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

     label2:
        specialinvoke r0.<android.view.View: void setEnabled(boolean)>(z0);

        if z0 == 0 goto label3;

        r7 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r7 == null goto label3;

        virtualinvoke r7.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label3:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label4;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void invalidateTextDisplayList()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void makeBlink()>();

     label4:
        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.TextPaint $r2, $r3, $r4, $r5;
        float $f0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        if i0 <= 0 goto label09;

        if r1 != null goto label01;

        r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i0);

        goto label02;

     label01:
        r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r1, i0);

     label02:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r6);

        if r6 == null goto label03;

        $i6 = virtualinvoke r6.<android.graphics.Typeface: int getStyle()>();

        goto label04;

     label03:
        $i6 = 0;

     label04:
        i1 = $i6;

        $i3 = i1 ^ -1;

        i2 = i0 & $i3;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i4 = i2 & 1;

        if $i4 == 0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        virtualinvoke $r4.<android.text.TextPaint: void setFakeBoldText(boolean)>($z0);

        $r5 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i5 = i2 & 2;

        if $i5 == 0 goto label07;

        $f0 = -0.25F;

        goto label08;

     label07:
        $f0 = 0.0F;

     label08:
        virtualinvoke $r5.<android.text.TextPaint: void setTextSkewX(float)>($f0);

        goto label10;

     label09:
        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r1);

     label10:
        return;
    }

    protected boolean getDefaultEditable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    protected android.text.method.MovementMethod getDefaultMovementMethod()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return null;
    }

    public java.lang.CharSequence getText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r1;
    }

    public int length()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public android.text.Editable getEditableText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public int getLineHeight()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        $f1 = (float) $i0;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = $f1 * $f0;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f4 = $f3 + $f2;

        $i1 = staticinvoke <com.android.internal.util.FastMath: int round(float)>($f4);

        return $i1;
    }

    public final android.text.Layout getLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    final android.text.Layout getHintLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        return $r1;
    }

    public final android.content.UndoManager getUndoManager()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.content.UndoManager $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.content.UndoManager mUndoManager>;

     label2:
        return $r3;
    }

    public final void setUndoManager(android.content.UndoManager, java.lang.String)
    {
        android.widget.TextView r0;
        android.content.UndoManager r1;
        java.lang.String r2;
        android.widget.Editor $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12;
        android.content.UndoOwner $r9;
        android.widget.Editor$UndoInputFilter $r10;
        java.lang.CharSequence $r13, $r14, $r17;
        boolean $z0;
        android.text.Editable $r15;
        android.text.InputFilter[] $r16;
        android.widget.TextView$BufferType $r18;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.UndoManager;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r7.<android.widget.Editor: android.content.UndoManager mUndoManager> = r1;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = virtualinvoke r1.<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>(r2, r0);

        $r8.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = $r9;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = new android.widget.Editor$UndoInputFilter;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        specialinvoke $r10.<android.widget.Editor$UndoInputFilter: void <init>(android.widget.Editor)>($r11);

        $r12.<android.widget.Editor: android.text.InputFilter mUndoInputFilter> = $r10;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r13 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r17, $r18);

     label1:
        $r14 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r15 = (android.text.Editable) $r14;

        $r16 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r15, $r16);

        goto label3;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4.<android.widget.Editor: android.content.UndoManager mUndoManager> = null;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = null;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6.<android.widget.Editor: android.text.InputFilter mUndoInputFilter> = null;

     label3:
        return;
    }

    public final android.text.method.KeyListener getKeyListener()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.text.method.KeyListener $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

     label2:
        return $r3;
    }

    public void setKeyListener(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.text.method.KeyListener r1, $r6;
        android.widget.Editor $r3, $r4, $r5, $r7, $r9;
        int $i0;
        boolean $z0;
        java.lang.IncompatibleClassChangeError $r8;
        android.view.inputmethod.InputMethodManager r10;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.KeyListener;

        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r1);

        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        if r1 == null goto label5;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

     label1:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $i0 = interfaceinvoke $r6.<android.text.method.KeyListener: int getInputType()>();

        $r7.<android.widget.Editor: int mInputType> = $i0;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9.<android.widget.Editor: int mInputType> = 1;

     label4:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>($z0);

        goto label6;

     label5:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label6;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4.<android.widget.Editor: int mInputType> = 0;

     label6:
        r10 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r10 == null goto label7;

        virtualinvoke r10.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label7:
        return;

        catch java.lang.IncompatibleClassChangeError from label1 to label2 with label3;
    }

    private void setKeyListenerOnly(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.text.method.KeyListener r1, $r4;
        android.widget.Editor $r2, $r3, $r5;
        java.lang.CharSequence $r6, $r9, $r10;
        android.text.InputFilter[] $r7;
        android.text.Editable $r8;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.KeyListener;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label1;

        if r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == r1 goto label3;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r1;

        if r1 == null goto label2;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r9 instanceof android.text.Editable;

        if $z0 != 0 goto label2;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r10);

     label2:
        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Editable) $r6;

        $r7 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r8, $r7);

     label3:
        return;
    }

    public final android.text.method.MovementMethod getMovementMethod()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        return $r1;
    }

    public final void setMovementMethod(android.text.method.MovementMethod)
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod r1, $r2;
        android.widget.Editor $r3, $r4;
        java.lang.CharSequence $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.MovementMethod;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == r1 goto label2;

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = r1;

        if r1 == null goto label1;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r5 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

     label1:
        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label2:
        return;
    }

    private void fixFocusableAndClickableSettings()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1;
        android.widget.Editor $r2, $r3;
        android.text.method.KeyListener $r4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 != null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == null goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(1);

        goto label3;

     label2:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(0);

     label3:
        return;
    }

    public final android.text.method.TransformationMethod getTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        return $r1;
    }

    public final void setTransformationMethod(android.text.method.TransformationMethod)
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod r1, $r3, $r4, $r10;
        android.text.method.TransformationMethod2 r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence $r5, $r6, $r7, $r8;
        android.text.Spannable $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.TransformationMethod;

        $r3 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r1 != $r3 goto label1;

        return;

     label1:
        $r4 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r4 == null goto label2;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z6 = $r7 instanceof android.text.Spannable;

        if $z6 == 0 goto label2;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spannable) $r8;

        $r10 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke $r9.<android.text.Spannable: void removeSpan(java.lang.Object)>($r10);

     label2:
        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = r1;

        $z0 = r1 instanceof android.text.method.TransformationMethod2;

        if $z0 == 0 goto label5;

        r2 = (android.text.method.TransformationMethod2) r1;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z2 != 0 goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z4 = $r6 instanceof android.text.Editable;

        if $z4 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = $z5;

        $z3 = r0.<android.widget.TextView: boolean mAllowTransformationLengthChange>;

        interfaceinvoke r2.<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>($z3);

        goto label6;

     label5:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = 0;

     label6:
        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $z1 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z1 == 0 goto label7;

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

     label7:
        return;
    }

    public int getCompoundPaddingTop()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingTop>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingTop>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeTop>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingBottom()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingBottom>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingLeft>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingRight>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingRight>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingStart()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i2;

     label2:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i1;
    }

    public int getCompoundPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i2;

     label2:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i1;
    }

    public int getExtendedPaddingTop()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.text.Layout $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 == 1 goto label1;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i17;

     label1:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label2;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label2:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i7 = r0.<android.widget.TextView: int mMaximum>;

        if $i6 > $i7 goto label3;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i18;

     label3:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i9 = $i8 - i0;

        i2 = $i9 - i1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = r0.<android.widget.TextView: int mMaximum>;

        i3 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i10);

        if i3 < i2 goto label4;

        return i0;

     label4:
        $i12 = r0.<android.widget.TextView: int mGravity>;

        i4 = $i12 & 112;

        if i4 != 48 goto label5;

        return i0;

     label5:
        if i4 != 80 goto label6;

        $i16 = i0 + i2;

        $i15 = $i16 - i3;

        return $i15;

     label6:
        $i11 = i2 - i3;

        $i14 = $i11 / 2;

        $i13 = i0 + $i14;

        return $i13;
    }

    public int getExtendedPaddingBottom()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.text.Layout $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 == 1 goto label1;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i17;

     label1:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label2;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label2:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i7 = r0.<android.widget.TextView: int mMaximum>;

        if $i6 > $i7 goto label3;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i18;

     label3:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i9 = $i8 - i0;

        i2 = $i9 - i1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = r0.<android.widget.TextView: int mMaximum>;

        i3 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>($i10);

        if i3 < i2 goto label4;

        return i1;

     label4:
        $i12 = r0.<android.widget.TextView: int mGravity>;

        i4 = $i12 & 112;

        if i4 != 48 goto label5;

        $i16 = i1 + i2;

        $i15 = $i16 - i3;

        return $i15;

     label5:
        if i4 != 80 goto label6;

        return i1;

     label6:
        $i11 = i2 - i3;

        $i14 = $i11 / 2;

        $i13 = i1 + $i14;

        return $i13;
    }

    public int getTotalPaddingLeft()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i0;
    }

    public int getTotalPaddingRight()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i0;
    }

    public int getTotalPaddingStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingStart()>();

        return $i0;
    }

    public int getTotalPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingEnd()>();

        return $i0;
    }

    public int getTotalPaddingTop()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getTotalPaddingBottom()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = specialinvoke r0.<android.widget.TextView: int getBottomVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        android.widget.TextView$Drawables r5, $r8, $r19;
        boolean z0, $z5;
        android.graphics.Rect r6;
        int[] r7;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.content.Context $r24;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r5 == null goto label03;

        $r29 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r29 == null goto label01;

        $r34 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r34.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label01:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = null;

        $r33 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r33 == null goto label02;

        $r32 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r32.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label02:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label03:
        if r1 != null goto label04;

        if r2 != null goto label04;

        if r3 != null goto label04;

        if r4 == null goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z0 = $z5;

        if z0 != 0 goto label12;

        if r5 == null goto label25;

        $i12 = r5.<android.widget.TextView$Drawables: int mDrawablePadding>;

        if $i12 != 0 goto label07;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

        goto label25;

     label07:
        $r22 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r22 == null goto label08;

        $r30 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label08:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = null;

        $r23 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r23 == null goto label09;

        $r31 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r31.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = null;

        $r25 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r25 == null goto label10;

        $r27 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r27.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label10:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = null;

        $r26 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r26 == null goto label11;

        $r28 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r28.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label11:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label25;

     label12:
        if r5 != null goto label13;

        $r19 = new android.widget.TextView$Drawables;

        $r24 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r19.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r24);

        r5 = $r19;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r19;

     label13:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8.<android.widget.TextView$Drawables: boolean mOverride> = 0;

        $r9 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r9 == r1 goto label14;

        $r21 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r21 == null goto label14;

        $r18 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = r1;

        $r10 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r10 == r2 goto label15;

        $r15 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r15 == null goto label15;

        $r20 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = r2;

        $r11 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r11 == r3 goto label16;

        $r17 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r17 == null goto label16;

        $r14 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label16:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = r3;

        $r12 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r12 == r4 goto label17;

        $r13 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r13 == null goto label17;

        $r16 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label17:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = r4;

        r6 = r5.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r7 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label18;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i10 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = $i10;

        $i11 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = $i11;

        goto label19;

     label18:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

     label19:
        if r3 == null goto label20;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i9 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = $i9;

        $i8 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = $i8;

        goto label21;

     label20:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

     label21:
        if r2 == null goto label22;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i6;

        $i7 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i7;

        goto label23;

     label22:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

     label23:
        if r4 == null goto label24;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i5;

        $i4 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i4;

        goto label25;

     label24:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

     label25:
        if r5 == null goto label26;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeftInitial> = r1;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRightInitial> = r3;

     label26:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.Context r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        if i0 == 0 goto label1;

        $r2 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        if i1 == 0 goto label3;

        $r3 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        goto label4;

     label3:
        $r3 = null;

     label4:
        if i2 == 0 goto label5;

        $r4 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        goto label6;

     label5:
        $r4 = null;

     label6:
        if i3 == 0 goto label7;

        $r5 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i3);

        goto label8;

     label7:
        $r5 = null;

     label8:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r3, $r4, $r5);

        return;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    public void setCompoundDrawablesRelative(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        android.widget.TextView$Drawables r5, $r8, $r19;
        boolean z0, $z1;
        android.graphics.Rect r6;
        int[] r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.Context $r24;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r5 == null goto label03;

        $r29 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r29 == null goto label01;

        $r33 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r33.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label01:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeftInitial> = null;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = null;

        $r32 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r32 == null goto label02;

        $r34 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r34.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label02:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRightInitial> = null;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

     label03:
        if r1 != null goto label04;

        if r2 != null goto label04;

        if r3 != null goto label04;

        if r4 == null goto label05;

     label04:
        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        z0 = $z1;

        if z0 != 0 goto label12;

        if r5 == null goto label25;

        $i8 = r5.<android.widget.TextView$Drawables: int mDrawablePadding>;

        if $i8 != 0 goto label07;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

        goto label25;

     label07:
        $r22 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r22 == null goto label08;

        $r30 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label08:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = null;

        $r23 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r23 == null goto label09;

        $r31 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r31.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = null;

        $r25 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r25 == null goto label10;

        $r27 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r27.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label10:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = null;

        $r26 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r26 == null goto label11;

        $r28 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r28.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label11:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label25;

     label12:
        if r5 != null goto label13;

        $r19 = new android.widget.TextView$Drawables;

        $r24 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r19.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r24);

        r5 = $r19;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r19;

     label13:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        $r9 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r9 == r1 goto label14;

        $r21 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r21 == null goto label14;

        $r18 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $r10 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r10 == r2 goto label15;

        $r15 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r15 == null goto label15;

        $r20 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = r2;

        $r11 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r11 == r3 goto label16;

        $r17 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r17 == null goto label16;

        $r14 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label16:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r3;

        $r12 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r12 == r4 goto label17;

        $r13 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r13 == null goto label17;

        $r16 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label17:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = r4;

        r6 = r5.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r7 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label18;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i6;

        $i7 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i7;

        goto label19;

     label18:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

     label19:
        if r3 == null goto label20;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i5;

        $i4 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i4;

        goto label21;

     label20:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

     label21:
        if r2 == null goto label22;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i2 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i2;

        $i3 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i3;

        goto label23;

     label22:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

     label23:
        if r4 == null goto label24;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i1 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i1;

        $i0 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i0;

        goto label25;

     label24:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

     label25:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.Context r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        if i0 == 0 goto label1;

        $r2 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        if i1 == 0 goto label3;

        $r3 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        goto label4;

     label3:
        $r3 = null;

     label4:
        if i2 == 0 goto label5;

        $r4 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        goto label6;

     label5:
        $r4 = null;

     label6:
        if i3 == 0 goto label7;

        $r5 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i3);

        goto label8;

     label7:
        $r5 = null;

     label8:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r2, $r3, $r4, $r5);

        return;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawables()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] $r2, $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r3 = newarray (android.graphics.drawable.Drawable)[4];

        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $r3[0] = $r4;

        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $r3[1] = $r5;

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        $r3[2] = $r6;

        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $r3[3] = $r7;

        return $r3;

     label1:
        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = null;

        return $r2;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] $r2, $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r3 = newarray (android.graphics.drawable.Drawable)[4];

        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        $r3[0] = $r4;

        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $r3[1] = $r5;

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        $r3[2] = $r6;

        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $r3[3] = $r7;

        return $r3;

     label1:
        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        $r2[3] = null;

        return $r2;
    }

    public void setCompoundDrawablePadding(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$Drawables r1, $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if i0 != 0 goto label1;

        if r1 == null goto label3;

        r1.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

        goto label3;

     label1:
        if r1 != null goto label2;

        $r2 = new android.widget.TextView$Drawables;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r3);

        r1 = $r2;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = $r2;

     label2:
        r1.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

     label3:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;
    }

    public int getCompoundDrawablePadding()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $i0 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setPadding(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = r0.<android.widget.TextView: int mPaddingLeft>;

        if i0 != $i4 goto label1;

        $i5 = r0.<android.widget.TextView: int mPaddingRight>;

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getPaddingStart()>();

        if i0 != $i4 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingEnd()>();

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final int getAutoLinkMask()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mAutoLinkMask>;

        return $i0;
    }

    public void setTextAppearance(android.content.Context, int)
    {
        android.widget.TextView r0;
        android.content.Context r1, $r8;
        int i0, i1, i2, i3, i4, i5;
        android.content.res.TypedArray r2;
        android.content.res.ColorStateList r3, r9, r10;
        java.lang.String r4, $r6;
        float f0, f1, f2, $f3, $f4;
        int[] $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.text.method.AllCapsTransformationMethod $r7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r5 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r5);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(4, 0);

        if i1 == 0 goto label01;

        virtualinvoke r0.<android.widget.TextView: void setHighlightColor(int)>(i1);

     label01:
        r3 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if r3 == null goto label02;

        virtualinvoke r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r3);

     label02:
        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        if i2 == 0 goto label03;

        $f4 = (float) i2;

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f4);

     label03:
        r9 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if r9 == null goto label04;

        virtualinvoke r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>(r9);

     label04:
        r10 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(6);

        if r10 == null goto label05;

        virtualinvoke r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>(r10);

     label05:
        r4 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(12);

        i3 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(r4, i3, i4);

        i5 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        if i5 == 0 goto label06;

        f0 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(8, 0.0F);

        f1 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(9, 0.0F);

        f2 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(10, 0.0F);

        virtualinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>(f2, f0, f1, i5);

     label06:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if $z0 == 0 goto label07;

        $r7 = new android.text.method.AllCapsTransformationMethod;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r7.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r8);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r7);

     label07:
        $z2 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(13);

        if $z2 == 0 goto label08;

        $z4 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        virtualinvoke r0.<android.widget.TextView: void setElegantTextHeight(boolean)>($z4);

     label08:
        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(14);

        if $z1 == 0 goto label09;

        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(14, 0.0F);

        virtualinvoke r0.<android.widget.TextView: void setLetterSpacing(float)>($f3);

     label09:
        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(15);

        if $z3 == 0 goto label10;

        $r6 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(15);

        virtualinvoke r0.<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>($r6);

     label10:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public java.util.Locale getTextLocale()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.util.Locale getTextLocale()>();

        return $r2;
    }

    public void setTextLocale(java.util.Locale)
    {
        android.widget.TextView r0;
        java.util.Locale r1;
        android.text.TextPaint $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextLocale(java.util.Locale)>(r1);

        return;
    }

    public float getTextSize()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        return $f0;
    }

    public float getScaledTextSize()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = $r2.<android.text.TextPaint: float density>;

        $f2 = $f0 / $f1;

        return $f2;
    }

    public int getTypefaceStyle()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        android.graphics.Typeface $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        $i0 = virtualinvoke $r2.<android.graphics.Typeface: int getStyle()>();

        return $i0;
    }

    public void setTextSize(float)
    {
        android.widget.TextView r0;
        float f0;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.widget.TextView: void setTextSize(int,float)>(2, f0);

        return;
    }

    public void setTextSize(int, float)
    {
        android.widget.TextView r0;
        int i0;
        float f0, $f1;
        android.content.Context r1;
        android.content.res.Resources r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        if r1 != null goto label1;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        goto label2;

     label1:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

     label2:
        $r3 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i0, f0, $r3);

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f1);

        return;
    }

    private void setRawTextSize(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSize(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public float getTextScaleX()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        return $f0;
    }

    public void setTextScaleX(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.<android.widget.TextView: boolean mUserSetTextScaleX> = 1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextScaleX(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;
        android.text.Layout $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == r1 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r6 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        android.graphics.Typeface $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        return $r2;
    }

    public void setElegantTextHeight(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setElegantTextHeight(boolean)>(z0);

        return;
    }

    public float getLetterSpacing()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getLetterSpacing()>();

        return $f0;
    }

    public void setLetterSpacing(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getLetterSpacing()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setLetterSpacing(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public java.lang.String getFontFeatureSettings()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.lang.String $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.lang.String getFontFeatureSettings()>();

        return $r2;
    }

    public void setFontFeatureSettings(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1, $r3;
        android.text.TextPaint $r2, $r4;
        android.text.Layout $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: java.lang.String getFontFeatureSettings()>();

        if r1 == $r3 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: void setFontFeatureSettings(java.lang.String)>(r1);

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final android.content.res.ColorStateList getTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        return $r1;
    }

    public final int getCurrentTextColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

        return $i0;
    }

    public void setHighlightColor(int)
    {
        android.widget.TextView r0;
        int i0, $i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mHighlightColor>;

        if $i1 == i0 goto label1;

        r0.<android.widget.TextView: int mHighlightColor> = i0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public int getHighlightColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mHighlightColor>;

        return $i0;
    }

    public final void setShowSoftInputOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: boolean mShowSoftInputOnFocus> = z0;

        return;
    }

    public final boolean getShowSoftInputOnFocus()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void setShadowLayer(float, float, float, int)
    {
        android.widget.TextView r0;
        float f0, f1, f2;
        int i0;
        android.text.TextPaint $r1;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        i0 := @parameter3: int;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setShadowLayer(float,float,float,int)>(f0, f1, f2, i0);

        r0.<android.widget.TextView: float mShadowRadius> = f0;

        r0.<android.widget.TextView: float mShadowDx> = f1;

        r0.<android.widget.TextView: float mShadowDy> = f2;

        r0.<android.widget.TextView: int mShadowColor> = i0;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void invalidateTextDisplayList()>();

     label1:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public float getShadowRadius()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        return $f0;
    }

    public float getShadowDx()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDx>;

        return $f0;
    }

    public float getShadowDy()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDy>;

        return $f0;
    }

    public int getShadowColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mShadowColor>;

        return $i0;
    }

    public android.text.TextPaint getPaint()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        return $r1;
    }

    public final void setAutoLinkMask(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mAutoLinkMask> = i0;

        return;
    }

    public final void setLinksClickable(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mLinksClickable> = z0;

        return;
    }

    public final boolean getLinksClickable()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mLinksClickable>;

        return $z0;
    }

    public android.text.style.URLSpan[] getUrls()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r3, $r4;
        boolean $z0;
        android.text.style.URLSpan[] $r2, $r7;
        android.text.Spanned $r5;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spanned) $r3;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        $r6 = interfaceinvoke $r5.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/style/URLSpan");

        $r7 = (android.text.style.URLSpan[]) $r6;

        return $r7;

     label1:
        $r2 = newarray (android.text.style.URLSpan)[0];

        return $r2;
    }

    public final void setHintTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setHintTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final android.content.res.ColorStateList getHintTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        return $r1;
    }

    public final int getCurrentHintTextColor()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r1 == null goto label1;

        $i0 = r0.<android.widget.TextView: int mCurHintTextColor>;

        goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

     label2:
        return $i0;
    }

    public final void setLinkTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinkTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final android.content.res.ColorStateList getLinkTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        return $r1;
    }

    public void setGravity(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0;
        android.text.Layout $r1, $r2, $r3, $r4;
        android.text.BoringLayout$Metrics $r5, $r6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i3 = i0 & 8388615;

        if $i3 != 0 goto label1;

        i0 = i0 | 8388611;

     label1:
        $i4 = i0 & 112;

        if $i4 != 0 goto label2;

        i0 = i0 | 48;

     label2:
        z0 = 0;

        $i7 = i0 & 8388615;

        $i5 = r0.<android.widget.TextView: int mGravity>;

        $i6 = $i5 & 8388615;

        if $i7 == $i6 goto label3;

        z0 = 1;

     label3:
        $i8 = r0.<android.widget.TextView: int mGravity>;

        if i0 == $i8 goto label4;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label4:
        r0.<android.widget.TextView: int mGravity> = i0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label7;

        if z0 == 0 goto label7;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 != null goto label5;

        $i10 = 0;

        goto label6;

     label5:
        $r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i10 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

     label6:
        i2 = $i10;

        $r5 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r6 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i11 = r0.<android.widget.TextView: int mRight>;

        $i9 = r0.<android.widget.TextView: int mLeft>;

        $i12 = $i11 - $i9;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i13 = $i12 - $i14;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i15 = $i13 - $i16;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i1, i2, $r5, $r6, $i15, 1);

     label7:
        return;
    }

    public int getGravity()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        return $i0;
    }

    public int getPaintFlags()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        return $i0;
    }

    public void setPaintFlags(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.text.TextPaint $r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        if $i1 == i0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFlags(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setHorizontallyScrolling(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mHorizontallyScrolling> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public boolean getHorizontallyScrolling()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        return $z0;
    }

    public void setMinLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMinLines()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinimum>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMinHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMinHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinimum>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMaxLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMaxLines()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaximum>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMaxHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMaxHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaximum>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMinEms()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinWidth>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMinWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMinWidth()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinWidth>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMaxEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMaxEms()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaxWidth>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setMaxWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public int getMaxWidth()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaxWidth>;

        goto label2;

     label1:
        $i1 = -1;

     label2:
        return $i1;
    }

    public void setEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setLineSpacing(float, float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $b0 = $f2 cmpl f0;

        if $b0 != 0 goto label1;

        $f3 = r0.<android.widget.TextView: float mSpacingMult>;

        $b1 = $f3 cmpl f1;

        if $b1 == 0 goto label2;

     label1:
        r0.<android.widget.TextView: float mSpacingAdd> = f0;

        r0.<android.widget.TextView: float mSpacingMult> = f1;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    public float getLineSpacingMultiplier()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        return $f0;
    }

    public float getLineSpacingExtra()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingAdd>;

        return $f0;
    }

    public final void append(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return;
    }

    public void append(java.lang.CharSequence, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2, $r3, $r7;
        int i0, i1;
        boolean $z0;
        android.text.Editable $r4;
        android.widget.TextView$BufferType $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r7, $r6);

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        interfaceinvoke $r4.<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return;
    }

    private void updateTextColors()
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.content.res.ColorStateList $r1, $r3, $r4, $r7, $r10;
        int[] $r2, $r8, $r11;
        android.widget.Editor $r5, $r6;
        java.lang.CharSequence $r9;
        android.text.TextPaint $r12, $r13;

        r0 := @this: android.widget.TextView;

        z0 = 0;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $r2 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $i1 = r0.<android.widget.TextView: int mCurTextColor>;

        if i0 == $i1 goto label1;

        r0.<android.widget.TextView: int mCurTextColor> = i0;

        z0 = 1;

     label1:
        $r3 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r3 == null goto label2;

        $r10 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $r11 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i5 = virtualinvoke $r10.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r11, 0);

        $r12 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i4 = $r12.<android.text.TextPaint: int linkColor>;

        if i5 == $i4 goto label2;

        $r13 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r13.<android.text.TextPaint: int linkColor> = i5;

        z0 = 1;

     label2:
        $r4 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r4 == null goto label3;

        $r7 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $r8 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i6 = virtualinvoke $r7.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, 0);

        $i2 = r0.<android.widget.TextView: int mCurHintTextColor>;

        if i6 == $i2 goto label3;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        if $i3 != 0 goto label3;

        r0.<android.widget.TextView: int mCurHintTextColor> = i6;

        z0 = 1;

     label3:
        if z0 == 0 goto label5;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label4;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r6.<android.widget.Editor: void invalidateTextDisplayList()>();

     label4:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int[] r2;
        android.content.res.ColorStateList $r3, $r4, $r5, $r24, $r25, $r26;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        boolean $z0, $z2, $z4, $z6, $z8, $z9, $z11, $z13, $z14;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        $r3 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        if $r3 == null goto label01;

        $r26 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $z13 = virtualinvoke $r26.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z13 != 0 goto label03;

     label01:
        $r4 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r4 == null goto label02;

        $r24 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $z14 = virtualinvoke $r24.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z14 != 0 goto label03;

     label02:
        $r5 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r5 == null goto label04;

        $r25 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $z11 = virtualinvoke $r25.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z11 == 0 goto label04;

     label03:
        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

     label04:
        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label10;

        r2 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r6 == null goto label05;

        $r23 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $z9 = virtualinvoke $r23.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z9 == 0 goto label05;

        $r22 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r22.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label05:
        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r7 == null goto label06;

        $r20 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $z8 = virtualinvoke $r20.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z8 == 0 goto label06;

        $r21 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r21.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label06:
        $r8 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r8 == null goto label07;

        $r18 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $z6 = virtualinvoke $r18.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z6 == 0 goto label07;

        $r19 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r19.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label07:
        $r9 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r9 == null goto label08;

        $r16 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        $z4 = virtualinvoke $r16.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z4 == 0 goto label08;

        $r17 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r17.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label08:
        $r10 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r10 == null goto label09;

        $r14 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        $z2 = virtualinvoke $r14.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label09;

        $r15 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label09:
        $r11 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r11 == null goto label10;

        $r12 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        $z0 = virtualinvoke $r12.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label10;

        $r13 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label10:
        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.view.View: void drawableHotspotChanged(float,float)>(f0, f1);

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label6;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r2 == null goto label1;

        $r13 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        $r3 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r3 == null goto label2;

        $r12 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label2:
        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r4 == null goto label3;

        $r11 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r11.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label3:
        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r5 == null goto label4;

        $r10 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label4:
        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r6 == null goto label5;

        $r9 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label5:
        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r7 == null goto label6;

        $r8 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label6:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.TextView r0;
        android.os.Parcelable r1;
        boolean z0, $z1, $z2;
        int i0, i1;
        android.widget.TextView$SavedState r2, $r5;
        android.text.SpannableStringBuilder r3, $r11;
        java.lang.CharSequence $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r8;
        android.widget.Editor $r12, $r13;
        android.text.style.SuggestionRangeSpan $r14;

        r0 := @this: android.widget.TextView;

        r1 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        z0 = r0.<android.widget.TextView: boolean mFreezesText>;

        i0 = 0;

        i1 = 0;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r4 == null goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 >= 0 goto label1;

        if i1 < 0 goto label2;

     label1:
        z0 = 1;

     label2:
        if z0 == 0 goto label7;

        $r5 = new android.widget.TextView$SavedState;

        specialinvoke $r5.<android.widget.TextView$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r5;

        r2.<android.widget.TextView$SavedState: int selStart> = i0;

        r2.<android.widget.TextView$SavedState: int selEnd> = i1;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r6 instanceof android.text.Spanned;

        if $z1 == 0 goto label4;

        $r11 = new android.text.SpannableStringBuilder;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke $r11.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r10);

        r3 = $r11;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r13 == null goto label3;

        virtualinvoke r0.<android.widget.TextView: void removeMisspelledSpans(android.text.Spannable)>(r3);

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r12.<android.widget.Editor: android.text.style.SuggestionRangeSpan mSuggestionRangeSpan>;

        interfaceinvoke r3.<android.text.Spannable: void removeSpan(java.lang.Object)>($r14);

     label3:
        r2.<android.widget.TextView$SavedState: java.lang.CharSequence text> = r3;

        goto label5;

     label4:
        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        r2.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r8;

     label5:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label6;

        if i0 < 0 goto label6;

        if i1 < 0 goto label6;

        r2.<android.widget.TextView$SavedState: boolean frozenWithFocus> = 1;

     label6:
        $r9 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getError()>();

        r2.<android.widget.TextView$SavedState: java.lang.CharSequence error> = $r9;

        return r2;

     label7:
        return r1;
    }

    void removeMisspelledSpans(android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.style.SuggestionSpan[] r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r3;
        android.text.style.SuggestionSpan $r4, $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable;

        $i2 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "android/text/style/SuggestionSpan");

        r2 = (android.text.style.SuggestionSpan[]) $r3;

        i0 = 0;

     label1:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label3;

        $r4 = r2[i0];

        i1 = virtualinvoke $r4.<android.text.style.SuggestionSpan: int getFlags()>();

        $i4 = i1 & 1;

        if $i4 == 0 goto label2;

        $i5 = i1 & 2;

        if $i5 == 0 goto label2;

        $r5 = r2[i0];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r5);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TextView r0;
        android.os.Parcelable r1, $r4;
        android.widget.TextView$SavedState r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.String r3, $r22;
        boolean $z0, $z2, $z3;
        java.lang.CharSequence $r5, $r6, $r8, $r9, $r11, $r20, $r21, $r25, r26;
        android.widget.TextView$1 $r7;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.text.Spannable $r23;
        android.widget.Editor $r24;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.widget.TextView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.widget.TextView$SavedState) r1;

        $r4 = virtualinvoke r2.<android.widget.TextView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $r5 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r5 == null goto label2;

        $r25 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);

     label2:
        $i1 = r2.<android.widget.TextView$SavedState: int selStart>;

        if $i1 < 0 goto label6;

        $i2 = r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i2 < 0 goto label6;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r8 instanceof android.text.Spannable;

        if $z2 == 0 goto label6;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        $i3 = r2.<android.widget.TextView$SavedState: int selStart>;

        if $i3 > i0 goto label3;

        $i6 = r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i6 <= i0 goto label5;

     label3:
        r3 = "";

        $r11 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r11 == null goto label4;

        r3 = "(restored) ";

     label4:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved cursor position ");

        $i4 = r2.<android.widget.TextView$SavedState: int selStart>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i5 = r2.<android.widget.TextView$SavedState: int selEnd>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text ");

        $r20 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextView", $r22);

        goto label6;

     label5:
        $r21 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r23 = (android.text.Spannable) $r21;

        $i9 = r2.<android.widget.TextView$SavedState: int selStart>;

        $i8 = r2.<android.widget.TextView$SavedState: int selEnd>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r23, $i9, $i8);

        $z3 = r2.<android.widget.TextView$SavedState: boolean frozenWithFocus>;

        if $z3 == 0 goto label6;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r24.<android.widget.Editor: boolean mFrozenWithFocus> = 1;

     label6:
        $r6 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        if $r6 == null goto label7;

        r26 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        $r7 = new android.widget.TextView$1;

        specialinvoke $r7.<android.widget.TextView$1: void <init>(android.widget.TextView,java.lang.CharSequence)>(r0, r26);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r7);

     label7:
        return;
    }

    public void setFreezesText(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mFreezesText> = z0;

        return;
    }

    public boolean getFreezesText()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mFreezesText>;

        return $z0;
    }

    public final void setEditableFactory(android.text.Editable$Factory)
    {
        android.widget.TextView r0;
        android.text.Editable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable$Factory;

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public final void setSpannableFactory(android.text.Spannable$Factory)
    {
        android.widget.TextView r0;
        android.text.Spannable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable$Factory;

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public final void setText(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public void setText(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType r2;
        android.widget.TextView$CharWrapper $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>(r1, r2, 1, 0);

        $r3 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        staticinvoke <android.widget.TextView$CharWrapper: char[] access$002(android.widget.TextView$CharWrapper,char[])>($r4, null);

     label1:
        return;
    }

    private void setText(java.lang.CharSequence, android.widget.TextView$BufferType, boolean, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, r3, $r12, $r40, $r43, $r45;
        android.widget.TextView$BufferType r2, $r7, $r31, $r34, $r36, $r38;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.view.inputmethod.InputMethodManager r4;
        android.widget.TextView$ChangeWatcher[] r5;
        android.text.InputFilter[] $r6, $r10, $r44;
        java.util.ArrayList $r8, $r42;
        android.text.Editable$Factory $r9;
        android.text.method.TransformationMethod $r11, $r13, $r20, $r30;
        android.widget.Editor $r14, $r17, $r19, $r24, $r27, $r29;
        android.text.Layout $r15;
        android.text.Editable $r16, r54;
        java.lang.Object[] $r18;
        android.widget.TextView$ChangeWatcher $r21, $r22, $r28, $r32;
        android.text.method.MovementMethod $r23, $r25, $r33, $r41;
        android.text.Spannable $r26, r55, r56;
        android.text.Spannable$Factory $r35, $r37;
        android.text.method.KeyListener $r39;
        android.text.TextUtils$TruncateAt $r46, $r53;
        android.text.Spanned $r47, $r49;
        android.text.InputFilter $r48;
        android.text.TextPaint $r50;
        android.view.ViewConfiguration $r51;
        android.content.Context $r52;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if r1 != null goto label01;

        r1 = "";

     label01:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z1 != 0 goto label02;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>(r1);

     label02:
        $z2 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z2 != 0 goto label03;

        $r50 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r50.<android.text.TextPaint: void setTextScaleX(float)>(1.0F);

     label03:
        $z3 = r1 instanceof android.text.Spanned;

        if $z3 == 0 goto label06;

        $r47 = (android.text.Spanned) r1;

        $r46 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        $i11 = interfaceinvoke $r47.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r46);

        if $i11 < 0 goto label06;

        $r52 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r51 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r52);

        $z11 = virtualinvoke $r51.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z11 == 0 goto label04;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        goto label05;

     label04:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

     label05:
        $r53 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r53);

     label06:
        $r6 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        i1 = lengthof $r6;

        i2 = 0;

     label07:
        if i2 >= i1 goto label09;

        $r44 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        $r48 = $r44[i2];

        $i12 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r49 = <android.widget.TextView: android.text.Spanned EMPTY_SPANNED>;

        r3 = interfaceinvoke $r48.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r1, 0, $i12, $r49, 0, 0);

        if r3 == null goto label08;

        r1 = r3;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        if z0 == 0 goto label11;

        $r40 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r40 == null goto label10;

        $r45 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r45.<java.lang.CharSequence: int length()>();

        $r43 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r43, 0, i0, $i9);

        goto label11;

     label10:
        $i10 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, $i10);

     label11:
        z12 = 0;

        $r8 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r8 == null goto label12;

        $r42 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        $i8 = virtualinvoke $r42.<java.util.ArrayList: int size()>();

        if $i8 == 0 goto label12;

        z12 = 1;

     label12:
        $r7 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 == $r7 goto label13;

        $r39 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r39 != null goto label13;

        if z12 == 0 goto label15;

     label13:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r9 = r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory>;

        r54 = virtualinvoke $r9.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>(r1);

        r1 = r54;

        $r10 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>(r54, $r10);

        r4 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r4 == null goto label14;

        virtualinvoke r4.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label14:
        goto label18;

     label15:
        $r38 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        if r2 == $r38 goto label16;

        $r41 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r41 == null goto label17;

     label16:
        $r37 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r1 = virtualinvoke $r37.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r1);

        goto label18;

     label17:
        $z10 = r1 instanceof android.widget.TextView$CharWrapper;

        if $z10 != 0 goto label18;

        r1 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

     label18:
        $i5 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i5 == 0 goto label24;

        $r31 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 == $r31 goto label19;

        $z9 = r1 instanceof android.text.Spannable;

        if $z9 == 0 goto label20;

     label19:
        r55 = (android.text.Spannable) r1;

        goto label21;

     label20:
        $r35 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r55 = virtualinvoke $r35.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r1);

     label21:
        $i7 = r0.<android.widget.TextView: int mAutoLinkMask>;

        $z6 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r55, $i7);

        if $z6 == 0 goto label24;

        r1 = r55;

        $r34 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 != $r34 goto label22;

        $r36 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        goto label23;

     label22:
        $r36 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label23:
        r2 = $r36;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = r1;

        $z8 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z8 == 0 goto label24;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z7 != 0 goto label24;

        $r33 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r33);

     label24:
        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = r2;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = r1;

        $r11 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r11 != null goto label25;

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = r1;

        goto label26;

     label25:
        $r13 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r12 = interfaceinvoke $r13.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r1, r0);

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = $r12;

     label26:
        i13 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $z4 = r1 instanceof android.text.Spannable;

        if $z4 == 0 goto label32;

        $z5 = r0.<android.widget.TextView: boolean mAllowTransformationLengthChange>;

        if $z5 != 0 goto label32;

        r56 = (android.text.Spannable) r1;

        $i6 = interfaceinvoke r56.<android.text.Spannable: int length()>();

        $r18 = interfaceinvoke r56.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i6, class "android/widget/TextView$ChangeWatcher");

        r5 = (android.widget.TextView$ChangeWatcher[]) $r18;

        i3 = lengthof r5;

        i4 = 0;

     label27:
        if i4 >= i3 goto label28;

        $r32 = r5[i4];

        interfaceinvoke r56.<android.text.Spannable: void removeSpan(java.lang.Object)>($r32);

        i4 = i4 + 1;

        goto label27;

     label28:
        $r21 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        if $r21 != null goto label29;

        $r28 = new android.widget.TextView$ChangeWatcher;

        specialinvoke $r28.<android.widget.TextView$ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView$1)>(r0, null);

        r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher> = $r28;

     label29:
        $r22 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        interfaceinvoke r56.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r22, 0, i13, 6553618);

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r19 == null goto label30;

        $r27 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r27.<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>(r56);

     label30:
        $r20 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r20 == null goto label31;

        $r30 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke r56.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r30, 0, i13, 18);

     label31:
        $r25 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r25 == null goto label32;

        $r23 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r26 = (android.text.Spannable) r1;

        interfaceinvoke $r23.<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>(r0, $r26);

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r24 == null goto label32;

        $r29 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r29.<android.widget.Editor: boolean mSelectionMoved> = 0;

     label32:
        $r15 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r15 == null goto label33;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label33:
        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r1, 0, i0, i13);

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, 0, i0, i13);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(2);

        if z12 == 0 goto label34;

        $r16 = (android.text.Editable) r1;

        virtualinvoke r0.<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>($r16);

     label34:
        $r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r14 == null goto label35;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r17.<android.widget.Editor: void prepareCursorControllers()>();

     label35:
        return;
    }

    public final void setText(char[], int, int)
    {
        android.widget.TextView r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.CharSequence $r8, $r13, $r15;
        android.widget.TextView$CharWrapper $r9, $r10, $r11, $r14;
        android.widget.TextView$BufferType $r12;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r8 == null goto label3;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i2 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r15, 0, i2, i1);

        goto label4;

     label3:
        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, i1);

     label4:
        $r9 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r9 != null goto label5;

        $r14 = new android.widget.TextView$CharWrapper;

        specialinvoke $r14.<android.widget.TextView$CharWrapper: void <init>(char[],int,int)>(r1, i0, i1);

        r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper> = $r14;

        goto label6;

     label5:
        $r10 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        virtualinvoke $r10.<android.widget.TextView$CharWrapper: void set(char[],int,int)>(r1, i0, i1);

     label6:
        $r11 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        $r12 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r11, $r12, 0, i2);

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r3, $r4;
        android.widget.TextView$BufferType r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        android.text.Spannable $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, r2);

        if i0 >= 0 goto label1;

        if i1 < 0 goto label2;

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r4;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r5, $i4, $i6);

     label2:
        return;
    }

    public final void setText(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setText(int, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$BufferType r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.TextView$BufferType;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, r1);

        return;
    }

    public final void setHint(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2, $r4, $r6, $r7;
        android.text.Layout $r3;
        int $i0, $i1;
        android.widget.Editor $r5, $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

        r0.<android.widget.TextView: java.lang.CharSequence mHint> = $r2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r7 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: void invalidateTextDisplayList()>();

     label3:
        return;
    }

    public final void setHint(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>($r3);

        return;
    }

    public java.lang.CharSequence getHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        return $r1;
    }

    boolean isSingleLine()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        return $z0;
    }

    private static boolean isMultilineInputType(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 131087;

        if $i1 != 131073 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.text.Spannable r2;
        android.text.style.SuggestionSpan[] r3;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.text.SpannableString $r4;
        java.lang.Object[] $r5;
        android.text.style.SuggestionSpan $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $z1 = r1 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        r2 = (android.text.Spannable) r1;

        goto label2;

     label1:
        $r4 = new android.text.SpannableString;

        specialinvoke $r4.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r1);

        r2 = $r4;

        r1 = r2;

     label2:
        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/style/SuggestionSpan");

        r3 = (android.text.style.SuggestionSpan[]) $r5;

        i0 = 0;

     label3:
        $i2 = lengthof r3;

        if i0 >= $i2 goto label4;

        $r6 = r3[i0];

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r6);

        i0 = i0 + 1;

        goto label3;

     label4:
        return r1;
    }

    public void setInputType(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10;
        android.view.inputmethod.InputMethodManager r1;
        android.text.method.TransformationMethod $r2, $r6;
        android.text.method.PasswordTransformationMethod $r3, $r7, $r8;
        java.lang.CharSequence $r4, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>($i1);

        $i2 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z1 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>($i2);

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i0, 0);

        z2 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        z3 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>(i0);

        z4 = 0;

        if z2 == 0 goto label01;

        $r7 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r7);

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, 3, 0);

        goto label05;

     label01:
        if z3 == 0 goto label03;

        $r6 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r8 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        if $r6 != $r8 goto label02;

        z4 = 1;

     label02:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, 3, 0);

        goto label05;

     label03:
        if z0 != 0 goto label04;

        if z1 == 0 goto label05;

     label04:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, -1, -1);

        $r2 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r3 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        if $r2 != $r3 goto label05;

        z4 = 1;

     label05:
        $z6 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i0);

        if $z6 != 0 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        z5 = $z10;

        $z8 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z8 != z5 goto label08;

        if z4 == 0 goto label11;

     label08:
        if z2 != 0 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z5, $z9, 1);

     label11:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z7 != 0 goto label12;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r4);

        r0.<android.widget.TextView: java.lang.CharSequence mText> = $r5;

     label12:
        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label13;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label13:
        return;
    }

    private boolean hasPasswordTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        return $z0;
    }

    private static boolean isPasswordInputType(int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 = i0 & 4095;

        if i1 == 129 goto label1;

        if i1 == 225 goto label1;

        if i1 != 18 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isVisiblePasswordInputType(int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 = i0 & 4095;

        if i1 != 145 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setRawInputType(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: int mInputType> = i0;

        return;
    }

    private void setInputType(int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, $z2, $z3, $z4;
        android.text.method.BaseKeyListener r1;
        android.text.method.TextKeyListener$Capitalize r2;
        android.widget.Editor $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = i0 & 15;

        if i1 != 1 goto label07;

        $i5 = i0 & 32768;

        if $i5 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z1 = $z4;

        $i7 = i0 & 4096;

        if $i7 == 0 goto label03;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        goto label06;

     label03:
        $i6 = i0 & 8192;

        if $i6 == 0 goto label04;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        goto label06;

     label04:
        $i8 = i0 & 16384;

        if $i8 == 0 goto label05;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        goto label06;

     label05:
        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

     label06:
        r1 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z1, r2);

        goto label18;

     label07:
        if i1 != 2 goto label12;

        $i3 = i0 & 4096;

        if $i3 == 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        $i4 = i0 & 8192;

        if $i4 == 0 goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        r1 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>($z3, $z2);

        goto label18;

     label12:
        if i1 != 4 goto label16;

        $i2 = i0 & 4080;

        lookupswitch($i2)
        {
            case 16: goto label13;
            case 32: goto label14;
            default: goto label15;
        };

     label13:
        r1 = staticinvoke <android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>();

        goto label18;

     label14:
        r1 = staticinvoke <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>();

        goto label18;

     label15:
        r1 = staticinvoke <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>();

        goto label18;

     label16:
        if i1 != 3 goto label17;

        r1 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        goto label18;

     label17:
        r1 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

     label18:
        virtualinvoke r0.<android.widget.TextView: void setRawInputType(int)>(i0);

        if z0 == 0 goto label19;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r1;

        goto label20;

     label19:
        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r1);

     label20:
        return;
    }

    public int getInputType()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r2.<android.widget.Editor: int mInputType>;

     label2:
        return $i0;
    }

    public void setImeOptions(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;
        android.widget.Editor$InputContentType $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r3.<android.widget.Editor$InputContentType: int imeOptions> = i0;

        return;
    }

    public int getImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i0 = $r5.<android.widget.Editor$InputContentType: int imeOptions>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setImeActionLabel(java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0;
        android.widget.Editor $r2, $r3, $r5;
        android.widget.Editor$InputContentType $r4, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = r1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6.<android.widget.Editor$InputContentType: int imeActionId> = i0;

        return;
    }

    public java.lang.CharSequence getImeActionLabel()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public int getImeActionId()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i0 = $r5.<android.widget.Editor$InputContentType: int imeActionId>;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
    {
        android.widget.TextView r0;
        android.widget.TextView$OnEditorActionListener r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.TextView$OnEditorActionListener;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener> = r1;

        return;
    }

    public void onEditorAction(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor$InputContentType r1, $r12;
        android.view.View r2, r13;
        long l1, $l2;
        android.widget.Editor $r3, $r4;
        android.view.KeyEvent $r5, $r6;
        android.widget.TextView$OnEditorActionListener $r7, $r11;
        boolean $z0, $z2, $z3, $z4;
        android.os.IBinder $r8;
        java.lang.IllegalStateException $r9, $r10;
        android.view.inputmethod.InputMethodManager r14;
        android.view.ViewRootImpl r15;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 != null goto label01;

        $r12 = null;

        goto label02;

     label01:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

     label02:
        r1 = $r12;

        if r1 == null goto label09;

        $r7 = r1.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r7 == null goto label03;

        $r11 = r1.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z4 = interfaceinvoke $r11.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, i0, null);

        if $z4 == 0 goto label03;

        return;

     label03:
        if i0 != 5 goto label05;

        r2 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(2);

        if r2 == null goto label04;

        $z3 = virtualinvoke r2.<android.view.View: boolean requestFocus(int)>(2);

        if $z3 != 0 goto label04;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r10;

     label04:
        return;

     label05:
        if i0 != 7 goto label07;

        r13 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(1);

        if r13 == null goto label06;

        $z2 = virtualinvoke r13.<android.view.View: boolean requestFocus(int)>(1);

        if $z2 != 0 goto label06;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r9;

     label06:
        return;

     label07:
        if i0 != 6 goto label09;

        r14 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r14 == null goto label08;

        $z0 = virtualinvoke r14.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label08;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r14.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r8, 0);

     label08:
        return;

     label09:
        r15 = virtualinvoke r0.<android.widget.TextView: android.view.ViewRootImpl getViewRootImpl()>();

        if r15 == null goto label10;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = new android.view.KeyEvent;

        specialinvoke $r5.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, 66, 0, 0, -1, 0, 22);

        virtualinvoke r15.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r5);

        $r6 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r6.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, l1, 1, 66, 0, 0, -1, 0, 22);

        virtualinvoke r15.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r6);

     label10:
        return;
    }

    public void setPrivateImeOptions(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions> = r1;

        return;
    }

    public java.lang.String getPrivateImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public void setInputExtras(int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources $r2, $r7;
        android.widget.Editor $r3, $r4, $r8;
        android.os.Bundle $r5, $r10;
        android.widget.Editor$InputContentType $r6, $r9;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        $r6.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r5;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r8.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r10 = $r9.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        virtualinvoke $r7.<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>(r1, $r10);

        return;
    }

    public android.os.Bundle getInputExtras(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2, $r4, $r7, $r10, $r13;
        android.widget.Editor$InputContentType $r3, $r5, $r8, $r12;
        android.os.Bundle $r6, $r9, $r11;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        return null;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 != null goto label3;

        if z0 != 0 goto label2;

        return null;

     label2:
        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r13.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

     label3:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        if $r6 != null goto label5;

        if z0 != 0 goto label4;

        return null;

     label4:
        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r10.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        $r12.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r11;

     label5:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r9 = $r8.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        return $r9;
    }

    public java.lang.CharSequence getError()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: java.lang.CharSequence mError>;

     label2:
        return $r3;
    }

    public void setError(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.content.Context $r3;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r2 = virtualinvoke $r3.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302608);

        $i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

     label2:
        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        boolean z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void setFrame()>();

     label1:
        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        return z0;
    }

    private void restartMarqueeIfNeeded()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mRestartMarquee>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label1;

        r0.<android.widget.TextView: boolean mRestartMarquee> = 0;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label1:
        return;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.InputFilter[] r1;
        java.lang.CharSequence $r2, $r3;
        boolean $z0;
        android.text.Editable $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.InputFilter[];

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r4, r1);

     label2:
        return;
    }

    private void setFilters(android.text.Editable, android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        android.text.InputFilter[] r2, r3;
        boolean z0, z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.widget.Editor $r4, $r5, $r7, $r10, $r13;
        android.text.InputFilter $r6, $r11, $r12;
        android.text.method.KeyListener $r8, $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: android.text.InputFilter[];

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label7;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.text.InputFilter mUndoInputFilter>;

        if $r6 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        z1 = $r8 instanceof android.text.InputFilter;

        i0 = 0;

        if z0 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        if z1 == 0 goto label4;

        i0 = i0 + 1;

     label4:
        if i0 <= 0 goto label7;

        $i1 = lengthof r2;

        $i2 = $i1 + i0;

        r3 = newarray (android.text.InputFilter)[$i2];

        $i3 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i3);

        i7 = 0;

        if z0 == 0 goto label5;

        $i6 = lengthof r2;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r13.<android.widget.Editor: android.text.InputFilter mUndoInputFilter>;

        r3[$i6] = $r12;

        i7 = i7 + 1;

     label5:
        if z1 == 0 goto label6;

        $i4 = lengthof r2;

        $i5 = $i4 + i7;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r10.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r11 = (android.text.InputFilter) $r9;

        r3[$i5] = $r11;

     label6:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r3);

        return;

     label7:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r2);

        return;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.widget.TextView r0;
        android.text.InputFilter[] $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        return $r1;
    }

    private int getBoxHeight(android.text.Layout)
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r4;
        android.graphics.Insets r2, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.ViewParent $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        $r3 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        $r5 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        r2 = $r5;

        $r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r1 != $r4 goto label3;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i11 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i10 = $i9 + $i11;

        goto label4;

     label3:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i10 = $i1 + $i2;

     label4:
        i0 = $i10;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getMeasuredHeight()>();

        $i5 = $i3 - i0;

        $i4 = r2.<android.graphics.Insets: int top>;

        $i7 = $i5 + $i4;

        $i6 = r2.<android.graphics.Insets: int bottom>;

        $i8 = $i7 + $i6;

        return $i8;
    }

    int getVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.text.Layout r1, $r3;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 = 0;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i1 = $i4 & 112;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        if i1 == 48 goto label3;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r1);

        i3 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        if i3 >= i2 goto label3;

        if i1 != 80 goto label2;

        i0 = i2 - i3;

        goto label3;

     label2:
        $i5 = i2 - i3;

        i0 = $i5 >> 1;

     label3:
        return i0;
    }

    private int getBottomVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.text.Layout r1, $r3;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 = 0;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i1 = $i4 & 112;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        if i1 == 80 goto label3;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r1);

        i3 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        if i3 >= i2 goto label3;

        if i1 != 48 goto label2;

        i0 = i2 - i3;

        goto label3;

     label2:
        $i5 = i2 - i3;

        i0 = $i5 >> 1;

     label3:
        return i0;
    }

    void invalidateCursorPath()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, i19;
        android.graphics.RectF r1, $r9, $r10, $r12, $r13, $r14, $r15;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22;
        java.lang.Throwable r2, $r16;
        boolean $z0;
        android.widget.Editor $r3, $r4, $r5;
        android.graphics.drawable.Drawable[] $r6;
        android.graphics.drawable.Drawable $r7;
        android.text.TextPaint $r8;
        byte $b14;
        android.graphics.Path $r11;
        android.graphics.Rect r17;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

        goto label10;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i1 = $i2 + $i3;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i4 = $r3.<android.widget.Editor: int mCursorCount>;

        if $i4 != 0 goto label08;

        $r9 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        r1 = $r9;

        entermonitor $r9;

     label02:
        $r8 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r8.<android.text.TextPaint: float getStrokeWidth()>();

        f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f1);

        $b14 = f0 cmpg 1.0F;

        if $b14 >= 0 goto label03;

        f0 = 1.0F;

     label03:
        f22 = f0 / 2.0F;

        $r11 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r10 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r11.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r10, 0);

        $f3 = (float) i0;

        $r12 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f2 = $r12.<android.graphics.RectF: float left>;

        $f5 = $f3 + $f2;

        $f6 = $f5 - f22;

        $f4 = staticinvoke <android.util.FloatMath: float floor(float)>($f6);

        $i15 = (int) $f4;

        $f10 = (float) i1;

        $r13 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f9 = $r13.<android.graphics.RectF: float top>;

        $f7 = $f10 + $f9;

        $f8 = $f7 - f22;

        $f12 = staticinvoke <android.util.FloatMath: float floor(float)>($f8);

        $i16 = (int) $f12;

        $f15 = (float) i0;

        $r14 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f11 = $r14.<android.graphics.RectF: float right>;

        $f14 = $f15 + $f11;

        $f13 = $f14 + f22;

        $f18 = staticinvoke <android.util.FloatMath: float ceil(float)>($f13);

        $i17 = (int) $f18;

        $f16 = (float) i1;

        $r15 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f17 = $r15.<android.graphics.RectF: float bottom>;

        $f21 = $f16 + $f17;

        $f20 = $f21 + f22;

        $f19 = staticinvoke <android.util.FloatMath: float ceil(float)>($f20);

        $i18 = (int) $f19;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i15, $i16, $i17, $i18);

        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r16 := @caughtexception;

        r2 = $r16;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        goto label10;

     label08:
        i19 = 0;

     label09:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i5 = $r4.<android.widget.Editor: int mCursorCount>;

        if i19 >= $i5 goto label10;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r7 = $r6[i19];

        r17 = virtualinvoke $r7.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i7 = r17.<android.graphics.Rect: int left>;

        $i12 = $i7 + i0;

        $i6 = r17.<android.graphics.Rect: int top>;

        $i13 = $i6 + i1;

        $i9 = r17.<android.graphics.Rect: int right>;

        $i10 = $i9 + i0;

        $i8 = r17.<android.graphics.Rect: int bottom>;

        $i11 = $i8 + i1;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i12, $i13, $i10, $i11);

        i19 = i19 + 1;

        goto label09;

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    void invalidateCursor()
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>(i0, i0, i0);

        return;
    }

    private void invalidateCursor(int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= 0 goto label1;

        if i1 >= 0 goto label1;

        if i2 < 0 goto label2;

     label1:
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i5, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i6, i2);

        virtualinvoke r0.<android.widget.TextView: void invalidateRegion(int,int,boolean)>(i3, i4, 1);

     label2:
        return;
    }

    void invalidateRegion(int, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27;
        boolean z0;
        android.graphics.Rect r1;
        android.text.Layout $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r14;
        float $f0, $f1;
        android.widget.Editor $r9, $r10, $r13;
        double $d0, $d1;
        android.graphics.drawable.Drawable[] $r11;
        android.graphics.drawable.Drawable $r12;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label9;

     label1:
        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r3.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>(i2);

        if i2 <= 0 goto label2;

        $r14 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i23 = i2 - 1;

        $i22 = virtualinvoke $r14.<android.text.Layout: int getLineDescent(int)>($i23);

        i3 = i3 - $i22;

     label2:
        if i0 != i1 goto label3;

        i4 = i2;

        goto label4;

     label3:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i4 = virtualinvoke $r5.<android.text.Layout: int getLineForOffset(int)>(i1);

     label4:
        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i5 = virtualinvoke $r6.<android.text.Layout: int getLineBottom(int)>(i4);

        if z0 == 0 goto label6;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label6;

        i6 = 0;

     label5:
        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i19 = $r10.<android.widget.Editor: int mCursorCount>;

        if i6 >= $i19 goto label6;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r13.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r12 = $r11[i6];

        r1 = virtualinvoke $r12.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i21 = r1.<android.graphics.Rect: int top>;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i21);

        $i20 = r1.<android.graphics.Rect: int bottom>;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i20);

        i6 = i6 + 1;

        goto label5;

     label6:
        i24 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i10 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i9 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i25 = $i10 + $i9;

        if i2 != i4 goto label7;

        if z0 != 0 goto label7;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r8.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        i7 = (int) $f1;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r7.<android.text.Layout: float getPrimaryHorizontal(int)>(i1);

        $d0 = (double) $f0;

        $d1 = $d0 + 1.0;

        i8 = (int) $d1;

        i26 = i7 + i24;

        i27 = i8 + i24;

        goto label8;

     label7:
        i26 = i24;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i11 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i27 = $i12 - $i11;

     label8:
        $i14 = r0.<android.widget.TextView: int mScrollX>;

        $i17 = $i14 + i26;

        $i18 = i25 + i3;

        $i13 = r0.<android.widget.TextView: int mScrollX>;

        $i15 = $i13 + i27;

        $i16 = i25 + i5;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i17, $i18, $i15, $i16);

     label9:
        return;
    }

    private void registerForPreDraw()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 1;

     label1:
        return;
    }

    private void unregisterForPreDraw()
    {
        android.widget.TextView r0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 0;

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 0;

        return;
    }

    public boolean onPreDraw()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.text.Layout $r1;
        android.text.method.MovementMethod $r2;
        android.widget.Editor $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;
        boolean $z1, $z2, $z4, $z7;
        java.lang.CharSequence $r10;
        android.widget.Editor$SelectionModifierCursorController $r13, $r14;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label1:
        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label5;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label2;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r11.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r13 == null goto label2;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r12.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        $z7 = virtualinvoke $r14.<android.widget.Editor$SelectionModifierCursorController: boolean isSelectionStartDragged()>();

        if $z7 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

     label2:
        if i0 >= 0 goto label3;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 112;

        if $i2 != 80 goto label3;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

     label3:
        if i0 < 0 goto label4;

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i0);

     label4:
        goto label6;

     label5:
        specialinvoke r0.<android.widget.TextView: boolean bringTextIntoView()>();

     label6:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label7;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z4 = $r6.<android.widget.Editor: boolean mCreatedWithASelection>;

        if $z4 == 0 goto label7;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r7.<android.widget.Editor: boolean startSelectionActionMode()>();

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8.<android.widget.Editor: boolean mCreatedWithASelection> = 0;

     label7:
        $z1 = r0 instanceof android.inputmethodservice.ExtractEditText;

        if $z1 == 0 goto label8;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z2 == 0 goto label8;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label8;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: boolean startSelectionActionMode()>();

     label8:
        specialinvoke r0.<android.widget.TextView: void unregisterForPreDraw()>();

        return 1;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r3;
        boolean $z0;
        android.view.ViewTreeObserver $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void onAttachedToWindow()>();

     label1:
        $z0 = r0.<android.widget.TextView: boolean mPreDrawListenerDetached>;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 0;

     label2:
        return;
    }

    protected void onDetachedFromWindowInternal()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;
        android.view.ViewTreeObserver $r3;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r3.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawListenerDetached> = 1;

     label1:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onDetachedFromWindow()>();

     label2:
        specialinvoke r0.<android.view.View: void onDetachedFromWindowInternal()>();

        return;
    }

    public void onScreenStateChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onScreenStateChanged(int)>(i0);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onScreenStateChanged(int)>(i0);

     label1:
        return;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.TextView r0;
        float $f0;
        byte $b0;
        android.widget.TextView$Drawables $r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i2 = $i0 - $i1;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i3 = (int) $f3;

        $i4 = $i2 + $i3;

        return $i4;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = r0.<android.widget.TextView: int mPaddingRight>;

        $i2 = $i0 - $i1;

        $i3 = neg $i2;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i4 = (int) $f3;

        $i5 = $i3 + $i4;

        return $i5;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r4, $r6, $r8, $r10, $r12, $r14;
        boolean z0, $z1;
        android.widget.TextView$Drawables $r2, $r3, $r5, $r7, $r9, $r11, $r13;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if z0 != 0 goto label4;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label4;

        $r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r4 = $r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if r1 == $r4 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6 = $r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if r1 == $r6 goto label1;

        $r7 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8 = $r7.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if r1 == $r8 goto label1;

        $r9 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r10 = $r9.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if r1 == $r10 goto label1;

        $r11 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r12 = $r11.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if r1 == $r12 goto label1;

        $r13 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r14 = $r13.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if r1 != $r14 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25;
        android.graphics.drawable.Drawable $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label6;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r3 == null goto label1;

        $r25 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r24 = $r25.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r24.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r5 = $r4.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r5 == null goto label2;

        $r23 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r22 = $r23.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r22.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r7 = $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r7 == null goto label3;

        $r21 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r20 = $r21.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label3:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r9 = $r8.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r9 == null goto label4;

        $r19 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r18 = $r19.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label4:
        $r10 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r11 = $r10.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r11 == null goto label5;

        $r17 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r16 = $r17.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label5:
        $r12 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r13 = $r12.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r13 == null goto label6;

        $r14 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r15 = $r14.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label6:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r4, $r5, $r6, $r7;
        boolean z0, $z1;
        android.graphics.Rect r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, i61, i62, i63, i64, i65, i66, i67, i68, i69;
        android.widget.TextView$Drawables r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = 0;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z1 == 0 goto label5;

        r2 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i0 = r0.<android.widget.TextView: int mScrollX>;

        i1 = r0.<android.widget.TextView: int mScrollY>;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 == null goto label4;

        $r5 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if r1 != $r5 goto label1;

        i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i57 = r0.<android.widget.TextView: int mBottom>;

        $i48 = r0.<android.widget.TextView: int mTop>;

        $i58 = $i57 - $i48;

        $i59 = $i58 - i3;

        i4 = $i59 - i2;

        $i60 = r0.<android.widget.TextView: int mPaddingLeft>;

        i0 = i0 + $i60;

        $i53 = r3.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i54 = i4 - $i53;

        $i55 = $i54 / 2;

        $i56 = i2 + $i55;

        i1 = i1 + $i56;

        z0 = 1;

        goto label4;

     label1:
        $r4 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if r1 != $r4 goto label2;

        i61 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i62 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i37 = r0.<android.widget.TextView: int mBottom>;

        $i38 = r0.<android.widget.TextView: int mTop>;

        $i42 = $i37 - $i38;

        $i41 = $i42 - i62;

        i63 = $i41 - i61;

        $i39 = r0.<android.widget.TextView: int mRight>;

        $i40 = r0.<android.widget.TextView: int mLeft>;

        $i45 = $i39 - $i40;

        $i46 = r0.<android.widget.TextView: int mPaddingRight>;

        $i43 = $i45 - $i46;

        $i44 = r3.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i49 = $i43 - $i44;

        i0 = i0 + $i49;

        $i50 = r3.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i51 = i63 - $i50;

        $i52 = $i51 / 2;

        $i47 = i61 + $i52;

        i1 = i1 + $i47;

        z0 = 1;

        goto label4;

     label2:
        $r7 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if r1 != $r7 goto label3;

        i64 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i65 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i31 = r0.<android.widget.TextView: int mRight>;

        $i27 = r0.<android.widget.TextView: int mLeft>;

        $i32 = $i31 - $i27;

        $i29 = $i32 - i65;

        i66 = $i29 - i64;

        $i30 = r3.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i36 = i66 - $i30;

        $i35 = $i36 / 2;

        $i34 = i64 + $i35;

        i0 = i0 + $i34;

        $i33 = r0.<android.widget.TextView: int mPaddingTop>;

        i1 = i1 + $i33;

        z0 = 1;

        goto label4;

     label3:
        $r6 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if r1 != $r6 goto label4;

        i67 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i68 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i13 = r0.<android.widget.TextView: int mRight>;

        $i14 = r0.<android.widget.TextView: int mLeft>;

        $i16 = $i13 - $i14;

        $i15 = $i16 - i68;

        i69 = $i15 - i67;

        $i18 = r3.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i17 = i69 - $i18;

        $i21 = $i17 / 2;

        $i22 = i67 + $i21;

        i0 = i0 + $i22;

        $i20 = r0.<android.widget.TextView: int mBottom>;

        $i19 = r0.<android.widget.TextView: int mTop>;

        $i26 = $i20 - $i19;

        $i25 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i24 = $i26 - $i25;

        $i23 = r3.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i28 = $i24 - $i23;

        i1 = i1 + $i28;

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        $i5 = r2.<android.graphics.Rect: int left>;

        $i11 = $i5 + i0;

        $i6 = r2.<android.graphics.Rect: int top>;

        $i12 = $i6 + i1;

        $i7 = r2.<android.graphics.Rect: int right>;

        $i9 = $i7 + i0;

        $i8 = r2.<android.graphics.Rect: int bottom>;

        $i10 = $i8 + i1;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i11, $i12, $i9, $i10);

     label5:
        if z0 != 0 goto label6;

        specialinvoke r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label6:
        return;
    }

    public boolean hasOverlappingRendering()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        java.lang.CharSequence $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r4 != null goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isHorizontalFadingEdgeEnabled()>();

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean isTextSelectable()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mTextIsSelectable>;

     label2:
        return $z0;
    }

    public void setTextIsSelectable(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1, $r2, $r5, $r7;
        android.widget.TextView$BufferType $r3;
        java.lang.CharSequence $r4;
        android.text.method.MovementMethod $r6;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r7 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r1.<android.widget.Editor: boolean mTextIsSelectable>;

        if $z1 != z0 goto label2;

        return;

     label2:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mTextIsSelectable> = z0;

        virtualinvoke r0.<android.widget.TextView: void setFocusableInTouchMode(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z0);

        if z0 == 0 goto label3;

        $r6 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

        goto label4;

     label3:
        $r6 = null;

     label4:
        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r6);

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if z0 == 0 goto label5;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label6;

     label5:
        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

     label6:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r3);

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void prepareCursorControllers()>();

        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(i0);

        goto label2;

     label1:
        $i3 = i0 + 1;

        r1 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>($i3);

        $r3 = <android.widget.TextView: int[] MULTILINE_STATE_SET>;

        staticinvoke <android.widget.TextView: int[] mergeDrawableStates(int[],int[])>(r1, $r3);

     label2:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z1 == 0 goto label5;

        i1 = lengthof r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        $i4 = r1[i2];

        if $i4 != 16842919 goto label4;

        $i5 = i1 - 1;

        r2 = newarray (int)[$i5];

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, 0, r2, 0, i2);

        $i8 = i2 + 1;

        $i6 = i1 - i2;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, $i8, r2, i2, $i7);

        return r2;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return r1;
    }

    private android.graphics.Path getUpdatedHighlightPath()
    {
        android.widget.TextView r0;
        android.graphics.Path r1, $r5, $r6, $r7, $r10, $r13, $r16, $r18, $r19;
        android.graphics.Paint r2;
        int i0, i1, $i2, $i8;
        android.text.method.MovementMethod $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.Paint$Style $r4, $r14;
        android.text.Layout $r8, $r20;
        android.widget.Editor $r9, $r11, $r12, $r17;
        long $l3, $l4, $l5, $l7;
        byte $b6;
        java.lang.CharSequence $r15;

        r0 := @this: android.widget.TextView;

        r1 = null;

        r2 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r3 == null goto label7;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isPressed()>();

        if $z4 == 0 goto label7;

     label1:
        if i0 < 0 goto label7;

        if i0 != i1 goto label4;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label7;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z2 = virtualinvoke $r11.<android.widget.Editor: boolean isCursorVisible()>();

        if $z2 == 0 goto label7;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $l5 = $r12.<android.widget.Editor: long mShowCursor>;

        $l4 = $l3 - $l5;

        $l7 = $l4 % 1000L;

        $b6 = $l7 cmp 500L;

        if $b6 >= 0 goto label7;

        $z3 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z3 == 0 goto label3;

        $r13 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r13 != null goto label2;

        $r18 = new android.graphics.Path;

        specialinvoke $r18.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r18;

     label2:
        $r16 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r16.<android.graphics.Path: void reset()>();

        $r20 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r19 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r20.<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>(i0, $r19, $r15);

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r17.<android.widget.Editor: void updateCursorsPositions()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label3:
        $i8 = r0.<android.widget.TextView: int mCurTextColor>;

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>($i8);

        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14);

        r1 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        goto label7;

     label4:
        $z1 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z1 == 0 goto label6;

        $r5 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r5 != null goto label5;

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r10;

     label5:
        $r6 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r6.<android.graphics.Path: void reset()>();

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r7 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r8.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, $r7);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label6:
        $i2 = r0.<android.widget.TextView: int mHighlightColor>;

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>($i2);

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        r1 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

     label7:
        return r1;
    }

    public int getHorizontalOffsetForDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.TextView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, i105, i106;
        boolean z0, $z2, $z3, $z4, $z5;
        android.widget.TextView$Drawables r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, f42, f43;
        android.text.TextPaint $r3, $r4;
        android.text.Layout $r5, $r8, $r22, r33;
        java.lang.CharSequence $r6, $r27;
        int[] $r7;
        byte $b37;
        android.widget.Editor $r9, $r20;
        android.graphics.Paint $r10, $r15, $r16;
        android.widget.TextView$Marquee $r11, $r12, $r17, $r18, $r19, $r21;
        android.text.TextUtils$TruncateAt $r13, $r14;
        android.graphics.drawable.Drawable $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32;
        android.content.res.ColorStateList $r28;
        android.graphics.Path r34;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i4 = r0.<android.widget.TextView: int mScrollX>;

        i5 = r0.<android.widget.TextView: int mScrollY>;

        i6 = r0.<android.widget.TextView: int mRight>;

        i7 = r0.<android.widget.TextView: int mLeft>;

        i8 = r0.<android.widget.TextView: int mBottom>;

        i9 = r0.<android.widget.TextView: int mTop>;

        z0 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRtl()>();

        i10 = virtualinvoke r0.<android.widget.TextView: int getHorizontalOffsetForDrawables()>();

        if z0 == 0 goto label01;

        $i100 = 0;

        goto label02;

     label01:
        $i100 = i10;

     label02:
        i11 = $i100;

        if z0 == 0 goto label03;

        $i101 = i10;

        goto label04;

     label03:
        $i101 = 0;

     label04:
        i12 = $i101;

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label08;

        $i56 = i8 - i9;

        $i55 = $i56 - i3;

        i13 = $i55 - i1;

        $i58 = i6 - i7;

        $i57 = $i58 - i2;

        i15 = $i57 - i0;

        $r24 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r24 == null goto label05;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i88 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i91 = i4 + $i88;

        $i92 = $i91 + i11;

        $f40 = (float) $i92;

        $i102 = i5 + i1;

        $i89 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i90 = i13 - $i89;

        $i103 = $i90 / 2;

        $i104 = $i102 + $i103;

        $f41 = (float) $i104;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f40, $f41);

        $r32 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r32.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label05:
        $r23 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r23 == null goto label06;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i74 = i4 + i6;

        $i78 = $i74 - i7;

        $i79 = r0.<android.widget.TextView: int mPaddingRight>;

        $i76 = $i78 - $i79;

        $i77 = r2.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i95 = $i76 - $i77;

        $i96 = $i95 - i12;

        $f38 = (float) $i96;

        $i99 = i5 + i1;

        $i93 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i94 = i13 - $i93;

        $i98 = $i94 / 2;

        $i97 = $i99 + $i98;

        $f39 = (float) $i97;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f38, $f39);

        $r31 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r31.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label06:
        $r26 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r26 == null goto label07;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i80 = i4 + i0;

        $i83 = r2.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i82 = i15 - $i83;

        $i81 = $i82 / 2;

        $i86 = $i80 + $i81;

        $f36 = (float) $i86;

        $i85 = r0.<android.widget.TextView: int mPaddingTop>;

        $i84 = i5 + $i85;

        $f37 = (float) $i84;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f36, $f37);

        $r30 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label07:
        $r25 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r25 == null goto label08;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i70 = i4 + i0;

        $i67 = r2.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i68 = i15 - $i67;

        $i69 = $i68 / 2;

        $i71 = $i70 + $i69;

        $f35 = (float) $i71;

        $i72 = i5 + i8;

        $i61 = $i72 - i9;

        $i73 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i63 = $i61 - $i73;

        $i62 = r2.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i64 = $i63 - $i62;

        $f34 = (float) $i64;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f35, $f34);

        $r29 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r29.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label08:
        i105 = r0.<android.widget.TextView: int mCurTextColor>;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 != null goto label09;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label09:
        r33 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label11;

        $r27 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i60 = interfaceinvoke $r27.<java.lang.CharSequence: int length()>();

        if $i60 != 0 goto label11;

        $r28 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r28 == null goto label10;

        i105 = r0.<android.widget.TextView: int mCurHintTextColor>;

     label10:
        r33 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label11:
        $r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void setColor(int)>(i105);

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r7 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r4.<android.text.TextPaint: int[] drawableState> = $r7;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i14 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i17 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i28 = r0.<android.widget.TextView: int mBottom>;

        $i29 = r0.<android.widget.TextView: int mTop>;

        $i27 = $i28 - $i29;

        $i26 = $i27 - i3;

        i16 = $i26 - i1;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i32 = virtualinvoke $r8.<android.text.Layout: int getHeight()>();

        i18 = $i32 - i16;

        $i31 = i0 + i4;

        f0 = (float) $i31;

        if i5 != 0 goto label12;

        $f33 = 0.0F;

        goto label13;

     label12:
        $i30 = i14 + i5;

        $f33 = (float) $i30;

     label13:
        f2 = $f33;

        $i36 = i6 - i7;

        $i35 = $i36 - i2;

        $i34 = $i35 + i4;

        f1 = (float) $i34;

        $i33 = i8 - i9;

        $i39 = $i33 + i5;

        if i5 != i18 goto label14;

        $i59 = 0;

        goto label15;

     label14:
        $i59 = i17;

     label15:
        $i38 = $i39 - $i59;

        f3 = (float) $i38;

        $f5 = r0.<android.widget.TextView: float mShadowRadius>;

        $b37 = $f5 cmpl 0.0F;

        if $b37 == 0 goto label16;

        $f19 = r0.<android.widget.TextView: float mShadowDx>;

        $f20 = r0.<android.widget.TextView: float mShadowRadius>;

        $f18 = $f19 - $f20;

        $f17 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f18);

        f0 = f0 + $f17;

        $f29 = r0.<android.widget.TextView: float mShadowDx>;

        $f16 = r0.<android.widget.TextView: float mShadowRadius>;

        $f28 = $f29 + $f16;

        $f27 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f28);

        f1 = f1 + $f27;

        $f25 = r0.<android.widget.TextView: float mShadowDy>;

        $f26 = r0.<android.widget.TextView: float mShadowRadius>;

        $f24 = $f25 - $f26;

        $f23 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f24);

        f2 = f2 + $f23;

        $f31 = r0.<android.widget.TextView: float mShadowDy>;

        $f22 = r0.<android.widget.TextView: float mShadowRadius>;

        $f30 = $f31 + $f22;

        $f32 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f30);

        f3 = f3 + $f32;

     label16:
        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(f0, f2, f1, f3);

        i19 = 0;

        i21 = 0;

        $i41 = r0.<android.widget.TextView: int mGravity>;

        $i42 = $i41 & 112;

        if $i42 == 48 goto label17;

        i19 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i21 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label17:
        $f7 = (float) i0;

        $i43 = i14 + i19;

        $f6 = (float) $i43;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f7, $f6);

        i20 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i40 = r0.<android.widget.TextView: int mGravity>;

        i23 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i40, i20);

        $r14 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r13 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r14 != $r13 goto label19;

        $i45 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i45 == 1 goto label19;

        $z4 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z4 != 0 goto label18;

        $i49 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i49 != 1 goto label18;

        $z5 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z5 == 0 goto label18;

        $i48 = i23 & 7;

        if $i48 == 3 goto label18;

        $i47 = r0.<android.widget.TextView: int mRight>;

        $i46 = r0.<android.widget.TextView: int mLeft>;

        i22 = $i47 - $i46;

        $i53 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i54 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i24 = $i53 + $i54;

        $r22 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f15 = virtualinvoke $r22.<android.text.Layout: float getLineRight(int)>(0);

        $i52 = i22 - i24;

        $f14 = (float) $i52;

        f4 = $f15 - $f14;

        $i51 = virtualinvoke r33.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f13 = (float) $i51;

        $f21 = $f13 * f4;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f21, 0.0F);

     label18:
        $r21 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r21 == null goto label19;

        $r18 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z3 = virtualinvoke $r18.<android.widget.TextView$Marquee: boolean isRunning()>();

        if $z3 == 0 goto label19;

        $r19 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f10 = virtualinvoke $r19.<android.widget.TextView$Marquee: float getScroll()>();

        f42 = neg $f10;

        $i50 = virtualinvoke r33.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f12 = (float) $i50;

        $f11 = $f12 * f42;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f11, 0.0F);

     label19:
        i106 = i21 - i19;

        r34 = specialinvoke r0.<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()>();

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label20;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke $r20.<android.widget.Editor: void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>(r1, r33, r34, $r15, i106);

        goto label21;

     label20:
        $r10 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r33.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r34, $r10, i106);

     label21:
        $r11 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r11 == null goto label22;

        $r12 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z2 = virtualinvoke $r12.<android.widget.TextView$Marquee: boolean shouldDrawGhost()>();

        if $z2 == 0 goto label22;

        $r17 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        f43 = virtualinvoke $r17.<android.widget.TextView$Marquee: float getGhostOffset()>();

        $i44 = virtualinvoke r33.<android.text.Layout: int getParagraphDirection(int)>(0);

        $f9 = (float) $i44;

        $f8 = $f9 * f43;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f8, 0.0F);

        $r16 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r33.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r34, $r16, i106);

     label22:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        android.graphics.RectF r2, $r14, $r15, $r16, $r17;
        java.lang.Throwable r3, $r24;
        android.text.Layout $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r18, $r22, $r25;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        android.graphics.Path $r13, $r19, $r20, $r21, $r23;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 != null goto label01;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        return;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 >= 0 goto label02;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        return;

     label02:
        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i1 < 0 goto label03;

        if i1 < i0 goto label04;

     label03:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r5.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i4 = virtualinvoke $r6.<android.text.Layout: int getLineTop(int)>(i2);

        r1.<android.graphics.Rect: int top> = $i4;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i5 = virtualinvoke $r7.<android.text.Layout: int getLineBottom(int)>(i2);

        r1.<android.graphics.Rect: int bottom> = $i5;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r8.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i6 = (int) $f0;

        $i8 = $i6 - 2;

        r1.<android.graphics.Rect: int left> = $i8;

        $i7 = r1.<android.graphics.Rect: int left>;

        $i9 = $i7 + 4;

        r1.<android.graphics.Rect: int right> = $i9;

        goto label12;

     label04:
        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i23 = virtualinvoke $r9.<android.text.Layout: int getLineForOffset(int)>(i1);

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r11.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i16 = virtualinvoke $r10.<android.text.Layout: int getLineTop(int)>(i23);

        r1.<android.graphics.Rect: int top> = $i16;

        $r12 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i15 = virtualinvoke $r12.<android.text.Layout: int getLineBottom(int)>(i3);

        r1.<android.graphics.Rect: int bottom> = $i15;

        if i23 != i3 goto label05;

        $r22 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f3 = virtualinvoke $r22.<android.text.Layout: float getPrimaryHorizontal(int)>(i1);

        $i21 = (int) $f3;

        r1.<android.graphics.Rect: int left> = $i21;

        $r25 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f4 = virtualinvoke $r25.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i22 = (int) $f4;

        r1.<android.graphics.Rect: int right> = $i22;

        goto label12;

     label05:
        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label07;

        $r21 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r21 != null goto label06;

        $r23 = new android.graphics.Path;

        specialinvoke $r23.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r23;

     label06:
        $r20 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r20.<android.graphics.Path: void reset()>();

        $r18 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r19 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r18.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i1, i0, $r19);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label07:
        $r15 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        r2 = $r15;

        entermonitor $r15;

     label08:
        $r13 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r16 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r13.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r16, 1);

        $r14 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f1 = $r14.<android.graphics.RectF: float left>;

        $i18 = (int) $f1;

        $i17 = $i18 - 1;

        r1.<android.graphics.Rect: int left> = $i17;

        $r17 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f2 = $r17.<android.graphics.RectF: float right>;

        $i20 = (int) $f2;

        $i19 = $i20 + 1;

        r1.<android.graphics.Rect: int right> = $i19;

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r2;

     label11:
        throw r3;

     label12:
        i24 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i25 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i10 = r0.<android.widget.TextView: int mGravity>;

        $i11 = $i10 & 112;

        if $i11 == 48 goto label13;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i25 = i25 + $i14;

     label13:
        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>(i24, i25);

        i26 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i12 = $i13 + i26;

        r1.<android.graphics.Rect: int bottom> = $i12;

        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public int getLineCount()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        android.text.Layout $r2, $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r3.<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>(i0, r1);

        i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = $i3 & 112;

        if $i4 == 48 goto label3;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i2 = i2 + $i7;

     label3:
        if r1 == null goto label4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i6, i2);

     label4:
        $i5 = i1 + i2;

        return $i5;
    }

    public int getBaseline()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.text.Layout $r1, $r3;
        android.view.ViewParent $r2;
        boolean $z0;
        android.graphics.Insets $r4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        $i8 = specialinvoke r0.<android.view.View: int getBaseline()>();

        return $i8;

     label1:
        i0 = 0;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 112;

        if $i2 == 48 goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        $r2 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

        $i7 = $r4.<android.graphics.Insets: int top>;

        i0 = i0 - $i7;

     label3:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = $i3 + i0;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i5 = virtualinvoke $r3.<android.text.Layout: int getLineBaseline(int)>(0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    protected int getFadeTop(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 112;

        if $i2 == 48 goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        if z0 == 0 goto label3;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getTopPaddingOffset()>();

        i0 = i0 + $i5;

     label3:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = $i3 + i0;

        return $i4;
    }

    protected int getFadeHeight(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.Layout $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getHeight()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.KeyEvent$DispatcherState r2, r6;
        android.widget.Editor $r3, $r4;
        android.view.ActionMode $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label6;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r5 == null goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        if z0 == 0 goto label6;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label4;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label4;

        r2 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r2 == null goto label3;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label3:
        return 1;

     label4:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 1 goto label6;

        r6 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r6 == null goto label5;

        virtualinvoke r6.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>(r1);

     label5:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z2 == 0 goto label6;

        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z3 != 0 goto label6;

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;

     label6:
        $z1 = specialinvoke r0.<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, i1;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        i1 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r1, null);

        if i1 != 0 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.view.KeyEvent r1, r2, r3;
        java.lang.CharSequence $r4, $r7, $r11, $r13, $r19, $r24;
        android.text.Spannable $r5, $r8, $r10;
        android.text.method.MovementMethod $r6, $r9, $r12;
        android.widget.Editor $r14, $r17, $r23;
        android.text.method.KeyListener $r15, $r20, $r22;
        android.text.Editable $r16, $r18, $r21;
        boolean $z6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 0);

        i2 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r2, r1);

        if i2 != 0 goto label1;

        $z6 = specialinvoke r0.<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        return $z6;

     label1:
        if i2 != -1 goto label2;

        return 1;

     label2:
        i3 = i1 + -1;

        r3 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 1);

        if i2 != 1 goto label5;

        $r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = $r14.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r16 = (android.text.Editable) $r13;

        interfaceinvoke $r15.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r16, i0, r3);

     label3:
        i3 = i3 + -1;

        if i3 <= 0 goto label4;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r17.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r19 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = (android.text.Editable) $r19;

        interfaceinvoke $r20.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r18, i0, r2);

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r23.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r24 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r21 = (android.text.Editable) $r24;

        interfaceinvoke $r22.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r21, i0, r3);

        goto label3;

     label4:
        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        goto label7;

     label5:
        if i2 != 2 goto label7;

        $r6 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r4;

        interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r5, i0, r3);

     label6:
        i3 = i3 + -1;

        if i3 <= 0 goto label7;

        $r9 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Spannable) $r7;

        interfaceinvoke $r9.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r8, i0, r2);

        $r12 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r10 = (android.text.Spannable) $r11;

        interfaceinvoke $r12.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r10, i0, r3);

        goto label6;

     label7:
        return 1;
    }

    private boolean shouldAdvanceFocusOnEnter()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        android.text.method.KeyListener $r1;
        boolean $z0;
        android.widget.Editor $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label4;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r3.<android.widget.Editor: int mInputType>;

        $i2 = $i1 & 15;

        if $i2 != 1 goto label4;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r4.<android.widget.Editor: int mInputType>;

        i0 = $i3 & 4080;

        if i0 == 32 goto label3;

        if i0 != 48 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    private boolean shouldAdvanceFocusOnTab()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        android.text.method.KeyListener $r1;
        boolean $z0;
        android.widget.Editor $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r1 == null goto label2;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 != 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r3.<android.widget.Editor: int mInputType>;

        $i2 = $i1 & 15;

        if $i2 != 1 goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r4.<android.widget.Editor: int mInputType>;

        i0 = $i3 & 4080;

        if i0 == 262144 goto label1;

        if i0 != 131072 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private int doKeyDown(int, android.view.KeyEvent, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i2, $i4, $i5, $i6;
        android.view.KeyEvent r1, r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19;
        byte b1, $b3;
        java.lang.Throwable r3, $r37;
        android.widget.Editor $r4, $r13, $r14, $r18, $r21, $r24, $r26, $r30, $r33, $r35, $r36;
        android.text.method.MovementMethod $r5, $r8, $r11;
        java.lang.CharSequence $r6, $r10, $r17, $r19;
        android.text.Layout $r7;
        android.text.Spannable $r9, $r12;
        android.text.method.KeyListener $r15, $r20, $r23;
        android.text.Editable $r16, $r22;
        android.widget.Editor$InputContentType $r25, $r27, $r29, $r32;
        android.widget.TextView$OnEditorActionListener $r28, $r31;
        android.view.ActionMode $r34;
        java.lang.AbstractMethodError $r38, $r39;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        r2 := @parameter2: android.view.KeyEvent;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z2 != 0 goto label01;

        return 0;

     label01:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i2 != 0 goto label02;

        $z16 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z16 != 0 goto label02;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label02:
        lookupswitch(i0)
        {
            case 4: goto label10;
            case 23: goto label07;
            case 61: goto label08;
            case 66: goto label03;
            default: goto label11;
        };

     label03:
        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z3 == 0 goto label11;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r21 == null goto label04;

        $r26 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r27 = $r26.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r27 == null goto label04;

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r25 = $r24.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r31 = $r25.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r31 == null goto label04;

        $r30 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r29 = $r30.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r28 = $r29.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z11 = interfaceinvoke $r28.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r1);

        if $z11 == 0 goto label04;

        $r33 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r32 = $r33.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r32.<android.widget.Editor$InputContentType: boolean enterDown> = 1;

        return -1;

     label04:
        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i6 = $i5 & 16;

        if $i6 != 0 goto label05;

        $z9 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z9 == 0 goto label11;

     label05:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z8 == 0 goto label06;

        return 0;

     label06:
        return -1;

     label07:
        $z13 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z13 == 0 goto label11;

        $z12 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z12 == 0 goto label11;

        return 0;

     label08:
        $z10 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z10 != 0 goto label09;

        $z14 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z14 == 0 goto label11;

     label09:
        $z15 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnTab()>();

        if $z15 == 0 goto label11;

        return 0;

     label10:
        $r36 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r36 == null goto label11;

        $r35 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r34 = $r35.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r34 == null goto label11;

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return -1;

     label11:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label20;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = $r13.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r15 == null goto label20;

        z0 = 1;

        if r2 == null goto label19;

     label12:
        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r23 = $r18.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r19 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r22 = (android.text.Editable) $r19;

        z1 = interfaceinvoke $r23.<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>(r0, $r22, r2);

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        z0 = 0;

        if z1 == 0 goto label14;

        b1 = -1;

     label13:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        return b1;

     label14:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        goto label19;

     label15:
        $r38 := @caughtexception;

     label16:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        goto label19;

     label17:
        $r37 := @caughtexception;

        r3 = $r37;

     label18:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        throw r3;

     label19:
        if z0 == 0 goto label20;

        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r14 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r14.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r16 = (android.text.Editable) $r17;

        z17 = interfaceinvoke $r20.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r16, i0, r1);

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        if z17 == 0 goto label20;

        return 1;

     label20:
        $r5 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r5 == null goto label27;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r7 == null goto label27;

        z18 = 1;

        if r2 == null goto label25;

     label21:
        $r11 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Spannable) $r10;

        z19 = interfaceinvoke $r11.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>(r0, $r12, r2);

        z18 = 0;

        if z19 == 0 goto label23;

     label22:
        return -1;

     label23:
        goto label25;

     label24:
        $r39 := @caughtexception;

     label25:
        if z18 == 0 goto label27;

        $r8 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spannable) $r6;

        $z6 = interfaceinvoke $r8.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r9, i0, r1);

        if $z6 == 0 goto label27;

        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i4 != 0 goto label26;

        $z7 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z7 != 0 goto label26;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 1;

     label26:
        return 2;

     label27:
        $z4 = r0.<android.widget.TextView: boolean mPreventDefaultMovement>;

        if $z4 == 0 goto label28;

        $z5 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z5 != 0 goto label28;

        $b3 = -1;

        goto label29;

     label28:
        $b3 = 0;

     label29:
        return $b3;

        catch java.lang.AbstractMethodError from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.AbstractMethodError from label21 to label22 with label24;
    }

    public void resetErrorChangedFlag()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mErrorWasChanged> = 0;

     label1:
        return;
    }

    public void hideErrorIfUnchanged()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        java.lang.CharSequence $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r4.<android.widget.Editor: boolean mErrorWasChanged>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label1:
        return;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.KeyEvent r1;
        android.view.inputmethod.InputMethodManager r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17, $z18, $z20, $z21, $z22;
        android.widget.Editor $r4, $r11, $r13, $r16, $r18, $r23, $r24, $r25, $r29;
        android.text.method.MovementMethod $r5, $r9, $r33;
        android.text.Layout $r6, $r31;
        java.lang.CharSequence $r7, $r12, $r32;
        android.text.Spannable $r8;
        android.text.method.KeyListener $r10, $r14;
        android.text.Editable $r15;
        android.os.IBinder $r17;
        java.lang.IllegalStateException $r19;
        android.widget.Editor$InputContentType $r20, $r22, $r26, $r28, $r30;
        android.widget.TextView$OnEditorActionListener $r21, $r27;
        android.view.View r34;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        $z22 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z22;

     label01:
        $z1 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z1 != 0 goto label02;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label02:
        lookupswitch(i0)
        {
            case 23: goto label03;
            case 66: goto label05;
            default: goto label11;
        };

     label03:
        $z16 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z16 == 0 goto label04;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z14 != 0 goto label04;

        $r33 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r33 == null goto label04;

        $r32 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z18 = $r32 instanceof android.text.Editable;

        if $z18 == 0 goto label04;

        $r31 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r31 == null goto label04;

        $z21 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z21 == 0 goto label04;

        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r2);

        if r2 == null goto label04;

        $z20 = virtualinvoke r0.<android.widget.TextView: boolean getShowSoftInputOnFocus()>();

        if $z20 == 0 goto label04;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

     label04:
        $z15 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z15;

     label05:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z2 == 0 goto label11;

        $r16 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r16 == null goto label06;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r18.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r22 == null goto label06;

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r23.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r21 = $r20.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r21 == null goto label06;

        $r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r26 = $r25.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $z13 = $r26.<android.widget.Editor$InputContentType: boolean enterDown>;

        if $z13 == 0 goto label06;

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r30 = $r24.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r30.<android.widget.Editor$InputContentType: boolean enterDown> = 0;

        $r29 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r28 = $r29.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r27 = $r28.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z17 = interfaceinvoke $r27.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r1);

        if $z17 == 0 goto label06;

        return 1;

     label06:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i1 = $i2 & 16;

        if $i1 != 0 goto label07;

        $z11 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z11 == 0 goto label10;

     label07:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z7 != 0 goto label10;

        r34 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if r34 == null goto label09;

        $z9 = virtualinvoke r34.<android.view.View: boolean requestFocus(int)>(130);

        if $z9 != 0 goto label08;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r19;

     label08:
        specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return 1;

     label09:
        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i4 = $i3 & 16;

        if $i4 == 0 goto label10;

        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r3 == null goto label10;

        $z10 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z10 == 0 goto label10;

        $r17 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r17, 0);

     label10:
        $z6 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z6;

     label11:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label12;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = $r11.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r10 == null goto label12;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r13.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r15 = (android.text.Editable) $r12;

        $z5 = interfaceinvoke $r14.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r15, i0, r1);

        if $z5 == 0 goto label12;

        return 1;

     label12:
        $r5 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r5 == null goto label13;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r6 == null goto label13;

        $r9 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Spannable) $r7;

        $z4 = interfaceinvoke $r9.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r8, i0, r1);

        if $z4 == 0 goto label13;

        return 1;

     label13:
        $z3 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z3;
    }

    public boolean onCheckIsTextEditor()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r2.<android.widget.Editor: int mInputType>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.EditorInfo r1;
        com.android.internal.widget.EditableInputConnection r2, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.Editor $r3, $r4, $r11, $r15, $r17, $r18, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.widget.Editor$InputContentType $r5, $r12, $r13, $r19, $r20, $r22;
        android.view.View $r6, $r7;
        java.lang.CharSequence $r8, $r9, $r16;
        java.lang.String $r14;
        android.os.Bundle $r23;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z0 == 0 goto label9;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z1 == 0 goto label9;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputMethodStateIfNeeded()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        r1.<android.view.inputmethod.EditorInfo: int inputType> = $i0;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r5 == null goto label1;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r11.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i22 = $r12.<android.widget.Editor$InputContentType: int imeOptions>;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i22;

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r15.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r14 = $r13.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions> = $r14;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r18.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r16 = $r19.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel> = $r16;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r17.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i23 = $r22.<android.widget.Editor$InputContentType: int imeActionId>;

        r1.<android.view.inputmethod.EditorInfo: int actionId> = $i23;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r21.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r23 = $r20.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        r1.<android.view.inputmethod.EditorInfo: android.os.Bundle extras> = $r23;

        goto label2;

     label1:
        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 0;

     label2:
        $r6 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if $r6 == null goto label3;

        $i20 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i21 = $i20 | 134217728;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i21;

     label3:
        $r7 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(33);

        if $r7 == null goto label4;

        $i16 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i17 = $i16 | 67108864;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i17;

     label4:
        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = $i1 & 255;

        if $i2 != 0 goto label7;

        $i9 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i12 = $i9 & 134217728;

        if $i12 == 0 goto label5;

        $i18 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i19 = $i18 | 5;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i19;

        goto label6;

     label5:
        $i11 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i13 = $i11 | 6;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i13;

     label6:
        $z4 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z4 != 0 goto label7;

        $i15 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i14 = $i15 | 1073741824;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i14;

     label7:
        $i3 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $z2 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>($i3);

        if $z2 == 0 goto label8;

        $i7 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i10 = $i7 | 1073741824;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i10;

     label8:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText> = $r8;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z3 = $r9 instanceof android.text.Editable;

        if $z3 == 0 goto label9;

        $r10 = new com.android.internal.widget.EditableInputConnection;

        specialinvoke $r10.<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>(r0);

        r2 = $r10;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelStart> = $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelEnd> = $i6;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $i8 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i5);

        r1.<android.view.inputmethod.EditorInfo: int initialCapsMode> = $i8;

        return r2;

     label9:
        return null;
    }

    public boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        android.widget.Editor $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        r2 := @parameter1: android.view.inputmethod.ExtractedText;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>(r1, r2);

        return $z0;
    }

    static void removeParcelableSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1, i2;
        java.lang.Object[] r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/ParcelableSpan");

        i2 = lengthof r1;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r2 = r1[i2];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    public void setExtractedText(android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedText r1;
        android.text.Editable r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        java.lang.CharSequence $r3, $r4, $r5, $r7, $r10;
        android.widget.TextView$BufferType $r8;
        android.text.Spannable r11;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedText;

        r2 = virtualinvoke r0.<android.widget.TextView: android.text.Editable getEditableText()>();

        $r3 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        if $r3 == null goto label05;

        if r2 != null goto label01;

        $r10 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $r8 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r10, $r8);

        goto label05;

     label01:
        $i6 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if $i6 >= 0 goto label02;

        $i7 = interfaceinvoke r2.<android.text.Editable: int length()>();

        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>(r2, 0, $i7);

        $i8 = interfaceinvoke r2.<android.text.Editable: int length()>();

        $r7 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i8, $r7);

        goto label05;

     label02:
        i0 = interfaceinvoke r2.<android.text.Editable: int length()>();

        i1 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if i1 <= i0 goto label03;

        i1 = i0;

     label03:
        i2 = r1.<android.view.inputmethod.ExtractedText: int partialEndOffset>;

        if i2 <= i0 goto label04;

        i2 = i0;

     label04:
        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>(r2, i1, i2);

        $r5 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i1, i2, $r5);

     label05:
        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        r11 = (android.text.Spannable) $r4;

        i9 = interfaceinvoke r11.<android.text.Spannable: int length()>();

        i10 = r1.<android.view.inputmethod.ExtractedText: int selectionStart>;

        if i10 >= 0 goto label06;

        i10 = 0;

        goto label07;

     label06:
        if i10 <= i9 goto label07;

        i10 = i9;

     label07:
        i3 = r1.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        if i3 >= 0 goto label08;

        i3 = 0;

        goto label09;

     label08:
        if i3 <= i9 goto label09;

        i3 = i9;

     label09:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r11, i10, i3);

        $i4 = r1.<android.view.inputmethod.ExtractedText: int flags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label10;

        staticinvoke <android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>(r0, r11);

        goto label11;

     label10:
        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>(r0, r11);

     label11:
        return;
    }

    public void setExtracting(android.view.inputmethod.ExtractedTextRequest)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.widget.Editor $r2, $r4, $r5;
        android.widget.Editor$InputMethodState $r3, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        $r6.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest> = r1;

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void hideControllers()>();

        return;
    }

    public void onCommitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CompletionInfo r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return;
    }

    public void onCommitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>(r1);

     label1:
        return;
    }

    public void beginBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void beginBatchEdit()>();

     label1:
        return;
    }

    public void endBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void endBatchEdit()>();

     label1:
        return;
    }

    public void onBeginBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    public void onEndBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    public boolean onPrivateIMECommand(java.lang.String, android.os.Bundle)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    private void nullLayouts()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2, $r6, $r9;
        boolean $z0, $z1;
        android.widget.Editor $r3, $r4;
        android.text.BoringLayout $r5, $r7, $r8, $r10;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z0 = $r1 instanceof android.text.BoringLayout;

        if $z0 == 0 goto label1;

        $r8 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r8 != null goto label1;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r10 = (android.text.BoringLayout) $r9;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r10;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $z1 = $r2 instanceof android.text.BoringLayout;

        if $z1 == 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r5 != null goto label2;

        $r6 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r7 = (android.text.BoringLayout) $r6;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r7;

     label2:
        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = null;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label3:
        return;
    }

    private void assumeLayout()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.text.BoringLayout$Metrics $r1, $r2;

        r0 := @this: android.widget.TextView;

        $i3 = r0.<android.widget.TextView: int mRight>;

        $i2 = r0.<android.widget.TextView: int mLeft>;

        $i4 = $i3 - $i2;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i0 = $i6 - $i7;

        if i0 >= 1 goto label1;

        i0 = 0;

     label1:
        i1 = i0;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z0 == 0 goto label2;

        i0 = 1048576;

     label2:
        $r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i0, i1, $r2, $r1, i1, 0);

        return;
    }

    private android.text.Layout$Alignment getLayoutAlignment()
    {
        android.widget.TextView r0;
        android.text.Layout$Alignment r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTextAlignment()>();

        tableswitch($i0)
        {
            case 0: goto label17;
            case 1: goto label01;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label14;
            default: goto label17;
        };

     label01:
        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 8388615;

        lookupswitch($i2)
        {
            case 1: goto label06;
            case 3: goto label04;
            case 5: goto label05;
            case 8388611: goto label02;
            case 8388613: goto label03;
            default: goto label07;
        };

     label02:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label18;

     label03:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        goto label18;

     label04:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label18;

     label05:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label18;

     label06:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        goto label18;

     label07:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label18;

     label08:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        goto label18;

     label09:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        goto label18;

     label10:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        goto label18;

     label11:
        $i4 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i4 != 1 goto label12;

        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label13;

     label12:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

     label13:
        r1 = $r3;

        goto label18;

     label14:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i3 != 1 goto label15;

        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label16;

     label15:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

     label16:
        r1 = $r2;

        goto label18;

     label17:
        r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

     label18:
        return r1;
    }

    protected void makeNewLayout(int, int, android.text.BoringLayout$Metrics, android.text.BoringLayout$Metrics, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        android.text.BoringLayout$Metrics r1, r2, $r23, $r67;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20;
        android.text.Layout$Alignment r3, $r72, $r76;
        android.text.TextUtils$TruncateAt r4, r5, $r6, $r7, $r8, $r9, $r11, $r13, $r15, $r16, $r17, $r30, $r42, $r46, $r52, $r63, $r69, $r71;
        android.text.TextDirectionHeuristic $r10, $r24, $r31, $r34, $r40, $r66, $r68;
        android.text.Layout $r12, $r21, $r54, $r70, $r74, $r75;
        java.lang.CharSequence $r14, $r26, $r27, $r28, $r35, $r37, $r39, $r45, $r48, $r56, $r61, $r64;
        android.widget.Editor $r18, $r19;
        android.view.ViewGroup$LayoutParams $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        android.text.StaticLayout $r22, $r29, $r32, $r38;
        android.text.TextPaint $r25, $r33, $r36, $r41, $r43, $r49, $r55, $r60, $r65;
        android.text.BoringLayout $r44, $r47, $r50, $r51, $r53, $r57, $r58, $r59, $r62;
        android.text.method.KeyListener $r73;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.text.BoringLayout$Metrics;

        r2 := @parameter3: android.text.BoringLayout$Metrics;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

        $i4 = r0.<android.widget.TextView: int mMaximum>;

        r0.<android.widget.TextView: int mOldMaximum> = $i4;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        r0.<android.widget.TextView: int mOldMaxMode> = $i5;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if i0 >= 0 goto label01;

        i0 = 0;

     label01:
        if i1 >= 0 goto label02;

        i1 = 0;

     label02:
        r3 = specialinvoke r0.<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()>();

        $z4 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z4 == 0 goto label04;

        $r75 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r75 == null goto label04;

        $r76 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r3 == $r76 goto label03;

        $r72 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r3 != $r72 goto label04;

     label03:
        $z19 = 1;

        goto label05;

     label04:
        $z19 = 0;

     label05:
        z1 = $z19;

        i3 = 0;

        if z1 == 0 goto label06;

        $r74 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r74.<android.text.Layout: int getParagraphDirection(int)>(0);

     label06:
        $r7 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r7 == null goto label07;

        $r73 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r73 != null goto label07;

        $z18 = 1;

        goto label08;

     label07:
        $z18 = 0;

     label08:
        z2 = $z18;

        $r9 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r9 != $r6 goto label09;

        $i18 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i18 == 0 goto label09;

        $z17 = 1;

        goto label10;

     label09:
        $z17 = 0;

     label10:
        z3 = $z17;

        r4 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r11 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r8 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r11 != $r8 goto label11;

        $i19 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i19 != 1 goto label11;

        r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

     label11:
        $r10 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r10 != null goto label12;

        $r68 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r68;

     label12:
        $r13 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r4 != $r13 goto label13;

        $z15 = 1;

        goto label14;

     label13:
        $z15 = 0;

     label14:
        $r12 = specialinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i0, r1, i2, r3, z2, r4, $z15);

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r12;

        if z3 == 0 goto label19;

        $r63 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r4 != $r63 goto label15;

        $r69 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        goto label16;

     label15:
        $r69 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

     label16:
        r5 = $r69;

        $r71 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r4 == $r71 goto label17;

        $z16 = 1;

        goto label18;

     label17:
        $z16 = 0;

     label18:
        $r70 = specialinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i0, r1, i2, r3, z2, r5, $z16);

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r70;

     label19:
        $r15 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r15 == null goto label20;

        $z14 = 1;

        goto label21;

     label20:
        $z14 = 0;

     label21:
        z20 = $z14;

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        $r14 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r14 == null goto label37;

        if z20 == 0 goto label22;

        i1 = i0;

     label22:
        $r23 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r2 != $r23 goto label23;

        $r64 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r65 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r66 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r67 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r2 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r64, $r65, $r66, $r67);

        if r2 == null goto label23;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r2;

     label23:
        if r2 == null goto label33;

        $i10 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i10 > i1 goto label27;

        if z20 == 0 goto label24;

        $i17 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i17 > i2 goto label27;

     label24:
        $r57 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r57 == null goto label25;

        $r58 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        $r61 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r60 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f16 = r0.<android.widget.TextView: float mSpacingMult>;

        $f15 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z13 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r59 = virtualinvoke $r58.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r61, $r60, i1, r3, $f16, $f15, r2, $z13);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r59;

        goto label26;

     label25:
        $r56 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r55 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f14 = r0.<android.widget.TextView: float mSpacingMult>;

        $f13 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z12 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r53 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r56, $r55, i1, r3, $f14, $f13, r2, $z12);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r53;

     label26:
        $r54 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r62 = (android.text.BoringLayout) $r54;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r62;

        goto label37;

     label27:
        if z20 == 0 goto label29;

        $i16 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i16 > i1 goto label29;

        $r47 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r47 == null goto label28;

        $r51 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        $r48 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r49 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f11 = r0.<android.widget.TextView: float mSpacingMult>;

        $f12 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z11 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r52 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r50 = virtualinvoke $r51.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r48, $r49, i1, r3, $f11, $f12, r2, $z11, $r52, i2);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r50;

        goto label37;

     label28:
        $r45 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r43 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f9 = r0.<android.widget.TextView: float mSpacingMult>;

        $f10 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z10 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r46 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r44 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r45, $r43, i1, r3, $f9, $f10, r2, $z10, $r46, i2);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r44;

        goto label37;

     label29:
        if z20 == 0 goto label32;

        $r38 = new android.text.StaticLayout;

        $r35 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r39 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $i13 = interfaceinvoke $r39.<java.lang.CharSequence: int length()>();

        $r41 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r40 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f8 = r0.<android.widget.TextView: float mSpacingMult>;

        $f7 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z9 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r42 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $i14 = r0.<android.widget.TextView: int mMaxMode>;

        if $i14 != 1 goto label30;

        $i15 = r0.<android.widget.TextView: int mMaximum>;

        goto label31;

     label30:
        $i15 = 2147483647;

     label31:
        specialinvoke $r38.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>($r35, 0, $i13, $r41, i1, r3, $r40, $f8, $f7, $z9, $r42, i2, $i15);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r38;

        goto label37;

     label32:
        $r32 = new android.text.StaticLayout;

        $r37 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r36 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r34 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f5 = r0.<android.widget.TextView: float mSpacingMult>;

        $f6 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r32.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r37, $r36, i1, r3, $r34, $f5, $f6, $z8);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r32;

        goto label37;

     label33:
        if z20 == 0 goto label36;

        $r29 = new android.text.StaticLayout;

        $r27 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r26 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $i8 = interfaceinvoke $r26.<java.lang.CharSequence: int length()>();

        $r33 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r31 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f3 = r0.<android.widget.TextView: float mSpacingMult>;

        $f4 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r30 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $i7 = r0.<android.widget.TextView: int mMaxMode>;

        if $i7 != 1 goto label34;

        $i11 = r0.<android.widget.TextView: int mMaximum>;

        goto label35;

     label34:
        $i11 = 2147483647;

     label35:
        specialinvoke $r29.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>($r27, 0, $i8, $r33, i1, r3, $r31, $f3, $f4, $z7, $r30, i2, $i11);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r29;

        goto label37;

     label36:
        $r22 = new android.text.StaticLayout;

        $r28 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r25 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r24 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f2 = r0.<android.widget.TextView: float mSpacingMult>;

        $f1 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r22.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r28, $r25, i1, r3, $r24, $f2, $f1, $z6);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r22;

     label37:
        if z0 != 0 goto label38;

        if z1 == 0 goto label39;

        $r21 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r21.<android.text.Layout: int getParagraphDirection(int)>(0);

        if i3 == $i6 goto label39;

     label38:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label39:
        $r16 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r17 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r16 != $r17 goto label41;

        $f0 = (float) i2;

        $z5 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f0);

        if $z5 != 0 goto label41;

        $r20 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        i20 = $r20.<android.view.ViewGroup$LayoutParams: int height>;

        if i20 == -2 goto label40;

        if i20 == -1 goto label40;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label41;

     label40:
        r0.<android.widget.TextView: boolean mRestartMarquee> = 1;

     label41:
        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r19 == null goto label42;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r18.<android.widget.Editor: void prepareCursorControllers()>();

     label42:
        return;
    }

    private android.text.Layout makeSingleLayout(int, android.text.BoringLayout$Metrics, int, android.text.Layout$Alignment, boolean, android.text.TextUtils$TruncateAt, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.text.BoringLayout$Metrics r1, $r5, $r41;
        android.text.Layout$Alignment r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.text.TextUtils$TruncateAt r3, $r47;
        java.lang.CharSequence $r4, $r10, $r11, $r12, $r16, $r20, $r21, $r26, $r27, $r30, $r33, $r37, $r43, $r44;
        android.text.StaticLayout $r6, $r9, $r15, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.text.TextPaint $r7, $r13, $r19, $r22, $r24, $r28, $r29, $r32, $r38, $r46;
        android.text.TextDirectionHeuristic $r8, $r14, $r18, $r23, $r40, $r45;
        android.text.BoringLayout $r25, $r31, $r34, $r35, $r36;
        android.text.DynamicLayout $r39;
        android.text.method.KeyListener $r42;
        android.text.Layout r48;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.text.BoringLayout$Metrics;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.Layout$Alignment;

        z0 := @parameter4: boolean;

        r3 := @parameter5: android.text.TextUtils$TruncateAt;

        z1 := @parameter6: boolean;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r4 instanceof android.text.Spannable;

        if $z2 == 0 goto label03;

        $r39 = new android.text.DynamicLayout;

        $r44 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r43 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r46 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r45 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f17 = r0.<android.widget.TextView: float mSpacingMult>;

        $f16 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z11 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r42 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r42 != null goto label01;

        $r47 = r3;

        goto label02;

     label01:
        $r47 = null;

     label02:
        specialinvoke $r39.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int)>($r44, $r43, $r46, i0, r2, $r45, $f17, $f16, $z11, $r47, i1);

        r48 = $r39;

        goto label18;

     label03:
        $r5 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r1 != $r5 goto label04;

        $r37 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r38 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r40 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r41 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r1 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r37, $r38, $r40, $r41);

        if r1 == null goto label04;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r1;

     label04:
        if r1 == null goto label14;

        $i4 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i4 > i0 goto label08;

        if r3 == null goto label05;

        $i10 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i10 > i1 goto label08;

     label05:
        if z1 == 0 goto label06;

        $r36 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r36 == null goto label06;

        $r34 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        $r33 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r32 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f14 = r0.<android.widget.TextView: float mSpacingMult>;

        $f15 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z10 = r0.<android.widget.TextView: boolean mIncludePad>;

        r48 = virtualinvoke $r34.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r33, $r32, i0, r2, $f14, $f15, r1, $z10);

        goto label07;

     label06:
        $r30 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r29 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f12 = r0.<android.widget.TextView: float mSpacingMult>;

        $f13 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z9 = r0.<android.widget.TextView: boolean mIncludePad>;

        r48 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>($r30, $r29, i0, r2, $f12, $f13, r1, $z9);

     label07:
        if z1 == 0 goto label18;

        $r35 = (android.text.BoringLayout) r48;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r35;

        goto label18;

     label08:
        if z0 == 0 goto label10;

        $i8 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i8 > i0 goto label10;

        if z1 == 0 goto label09;

        $r25 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r25 == null goto label09;

        $r31 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        $r27 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r28 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f10 = r0.<android.widget.TextView: float mSpacingMult>;

        $f11 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        r48 = virtualinvoke $r31.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r27, $r28, i0, r2, $f10, $f11, r1, $z8, r3, i1);

        goto label18;

     label09:
        $r26 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r24 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f8 = r0.<android.widget.TextView: float mSpacingMult>;

        $f9 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        r48 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>($r26, $r24, i0, r2, $f8, $f9, r1, $z7, r3, i1);

        goto label18;

     label10:
        if z0 == 0 goto label13;

        $r17 = new android.text.StaticLayout;

        $r21 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r20 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i6 = interfaceinvoke $r20.<java.lang.CharSequence: int length()>();

        $r22 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r23 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f7 = r0.<android.widget.TextView: float mSpacingMult>;

        $f6 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        $i7 = r0.<android.widget.TextView: int mMaxMode>;

        if $i7 != 1 goto label11;

        $i9 = r0.<android.widget.TextView: int mMaximum>;

        goto label12;

     label11:
        $i9 = 2147483647;

     label12:
        specialinvoke $r17.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>($r21, 0, $i6, $r22, i0, r2, $r23, $f7, $f6, $z6, r3, i1, $i9);

        r48 = $r17;

        goto label18;

     label13:
        $r15 = new android.text.StaticLayout;

        $r16 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r19 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r18 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f5 = r0.<android.widget.TextView: float mSpacingMult>;

        $f4 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z5 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r15.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r16, $r19, i0, r2, $r18, $f5, $f4, $z5);

        r48 = $r15;

        goto label18;

     label14:
        if z0 == 0 goto label17;

        $r9 = new android.text.StaticLayout;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i2 = interfaceinvoke $r12.<java.lang.CharSequence: int length()>();

        $r13 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r14 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f2 = r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z4 = r0.<android.widget.TextView: boolean mIncludePad>;

        $i3 = r0.<android.widget.TextView: int mMaxMode>;

        if $i3 != 1 goto label15;

        $i5 = r0.<android.widget.TextView: int mMaximum>;

        goto label16;

     label15:
        $i5 = 2147483647;

     label16:
        specialinvoke $r9.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>($r11, 0, $i2, $r13, i0, r2, $r14, $f2, $f3, $z4, r3, i1, $i5);

        r48 = $r9;

        goto label18;

     label17:
        $r6 = new android.text.StaticLayout;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r7 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r8 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f1 = r0.<android.widget.TextView: float mSpacingMult>;

        $f0 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z3 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r6.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r10, $r7, i0, r2, $r8, $f1, $f0, $z3);

        r48 = $r6;

     label18:
        return r48;
    }

    private boolean compressText(float)
    {
        android.widget.TextView r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0, $z1;
        byte $b0, $b2, $b3, $b4;
        android.text.Layout $r1, $r3;
        int $i1;
        android.text.TextPaint $r2, $r5;
        android.widget.TextView$2 $r4;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i1 != 1 goto label2;

        $z1 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z1 != 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f3 = virtualinvoke $r2.<android.text.TextPaint: float getTextScaleX()>();

        $b2 = $f3 cmpl 1.0F;

        if $b2 != 0 goto label2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        f1 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $f4 = f1 + 1.0F;

        $f5 = $f4 - f0;

        f2 = $f5 / f0;

        $b4 = f2 cmpl 0.0F;

        if $b4 <= 0 goto label2;

        $b3 = f2 cmpg 0.07F;

        if $b3 > 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f7 = 1.0F - f2;

        $f6 = $f7 - 0.005F;

        virtualinvoke $r5.<android.text.TextPaint: void setTextScaleX(float)>($f6);

        $r4 = new android.widget.TextView$2;

        specialinvoke $r4.<android.widget.TextView$2: void <init>(android.widget.TextView)>(r0);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r4);

        return 1;

     label2:
        return 0;
    }

    private static int desired(android.text.Layout)
    {
        android.text.Layout r0;
        int i0, i1, $i2, $i3, $i4, $i5, i7;
        java.lang.CharSequence r1;
        float f0, $f1, $f2;
        char $c6;

        r0 := @parameter0: android.text.Layout;

        i0 = virtualinvoke r0.<android.text.Layout: int getLineCount()>();

        r1 = virtualinvoke r0.<android.text.Layout: java.lang.CharSequence getText()>();

        f0 = 0.0F;

        i1 = 0;

     label1:
        $i2 = i0 - 1;

        if i1 >= $i2 goto label3;

        $i4 = virtualinvoke r0.<android.text.Layout: int getLineEnd(int)>(i1);

        $i5 = $i4 - 1;

        $c6 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i5);

        if $c6 == 10 goto label2;

        return -1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i7 = 0;

     label4:
        if i7 >= i0 goto label5;

        $f2 = virtualinvoke r0.<android.text.Layout: float getLineWidth(int)>(i7);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f2);

        i7 = i7 + 1;

        goto label4;

     label5:
        $f1 = staticinvoke <android.util.FloatMath: float ceil(float)>(f0);

        $i3 = (int) $f1;

        return $i3;
    }

    public void setIncludeFontPadding(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mIncludePad>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mIncludePad> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public boolean getIncludeFontPadding()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mIncludePad>;

        return $z0;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70;
        android.text.BoringLayout$Metrics r1, r2, $r25, $r26, $r33, $r34;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8;
        android.widget.TextView$Drawables r3;
        android.text.Layout $r4, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r29, $r40;
        android.text.TextDirectionHeuristic $r5, $r23, $r32, $r41;
        java.lang.CharSequence $r6, $r11, $r28, $r31, $r35, $r37;
        android.text.method.MovementMethod $r14;
        android.text.TextUtils$TruncateAt $r17, $r30, $r39;
        android.text.TextPaint $r24, $r27, $r36, $r38;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r5 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r5 != null goto label01;

        $r41 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r41;

     label01:
        i8 = -1;

        z0 = 0;

        if i2 != 1073741824 goto label02;

        i6 = i4;

        goto label22;

     label02:
        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label03;

        $r39 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r39 != null goto label03;

        $r40 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i8 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r40);

     label03:
        if i8 >= 0 goto label04;

        $r37 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r38 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r32 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r33 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r1 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r37, $r38, $r32, $r33);

        if r1 == null goto label05;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r1;

        goto label05;

     label04:
        z0 = 1;

     label05:
        if r1 == null goto label06;

        $r34 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r1 != $r34 goto label08;

     label06:
        if i8 >= 0 goto label07;

        $r35 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r36 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f3 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r35, $r36);

        $f2 = staticinvoke <android.util.FloatMath: float ceil(float)>($f3);

        i8 = (int) $f2;

     label07:
        i61 = i8;

        goto label09;

     label08:
        i61 = r1.<android.text.BoringLayout$Metrics: int width>;

     label09:
        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 == null goto label10;

        $i60 = r3.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        i62 = staticinvoke <java.lang.Math: int max(int,int)>(i61, $i60);

        $i59 = r3.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        i61 = staticinvoke <java.lang.Math: int max(int,int)>(i62, $i59);

     label10:
        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label17;

        i9 = -1;

        $r22 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r22 == null goto label11;

        $r30 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r30 != null goto label11;

        $r29 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i9 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r29);

     label11:
        if i9 >= 0 goto label12;

        $r31 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r24 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r23 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r26 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r2 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r31, $r24, $r23, $r26);

        if r2 == null goto label12;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r2;

     label12:
        if r2 == null goto label13;

        $r25 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r2 != $r25 goto label15;

     label13:
        if i9 >= 0 goto label14;

        $r28 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r27 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r28, $r27);

        $f1 = staticinvoke <android.util.FloatMath: float ceil(float)>($f0);

        i9 = (int) $f1;

     label14:
        i10 = i9;

        goto label16;

     label15:
        i10 = r2.<android.text.BoringLayout$Metrics: int width>;

     label16:
        if i10 <= i61 goto label17;

        i61 = i10;

     label17:
        $i12 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i13 = $i12 + $i14;

        i63 = i61 + $i13;

        $i16 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i16 != 1 goto label18;

        $i56 = r0.<android.widget.TextView: int mMaxWidth>;

        $i54 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i55 = $i56 * $i54;

        i64 = staticinvoke <java.lang.Math: int min(int,int)>(i63, $i55);

        goto label19;

     label18:
        $i15 = r0.<android.widget.TextView: int mMaxWidth>;

        i64 = staticinvoke <java.lang.Math: int min(int,int)>(i63, $i15);

     label19:
        $i18 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i18 != 1 goto label20;

        $i50 = r0.<android.widget.TextView: int mMinWidth>;

        $i57 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i58 = $i50 * $i57;

        i65 = staticinvoke <java.lang.Math: int max(int,int)>(i64, $i58);

        goto label21;

     label20:
        $i17 = r0.<android.widget.TextView: int mMinWidth>;

        i65 = staticinvoke <java.lang.Math: int max(int,int)>(i64, $i17);

     label21:
        $i21 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumWidth()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i65, $i21);

        if i2 != -2147483648 goto label22;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i6);

     label22:
        $i19 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i20 = i6 - $i19;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i66 = $i20 - $i22;

        i67 = i66;

        $z4 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z4 == 0 goto label23;

        i66 = 1048576;

     label23:
        i68 = i66;

        $r7 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r7 != null goto label24;

        $i24 = i68;

        goto label25;

     label24:
        $r8 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i24 = virtualinvoke $r8.<android.text.Layout: int getWidth()>();

     label25:
        i11 = $i24;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r10 != null goto label26;

        $i53 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i52 = i6 - $i53;

        $i49 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i48 = $i52 - $i49;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i66, i68, r1, r2, $i48, 0);

        goto label38;

     label26:
        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i23 = virtualinvoke $r9.<android.text.Layout: int getWidth()>();

        if $i23 != i66 goto label27;

        if i11 != i68 goto label27;

        $r21 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i45 = virtualinvoke $r21.<android.text.Layout: int getEllipsizedWidth()>();

        $i44 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i47 = i6 - $i44;

        $i46 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i51 = $i47 - $i46;

        if $i45 == $i51 goto label28;

     label27:
        $z8 = 1;

        goto label29;

     label28:
        $z8 = 0;

     label29:
        z1 = $z8;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r11 != null goto label31;

        $r17 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r17 != null goto label31;

        $r18 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i41 = virtualinvoke $r18.<android.text.Layout: int getWidth()>();

        if i66 <= $i41 goto label31;

        $r20 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z6 = $r20 instanceof android.text.BoringLayout;

        if $z6 != 0 goto label30;

        if z0 == 0 goto label31;

        if i8 < 0 goto label31;

        if i8 > i66 goto label31;

     label30:
        $z7 = 1;

        goto label32;

     label31:
        $z7 = 0;

     label32:
        z3 = $z7;

        $i26 = r0.<android.widget.TextView: int mMaxMode>;

        $i27 = r0.<android.widget.TextView: int mOldMaxMode>;

        if $i26 != $i27 goto label33;

        $i43 = r0.<android.widget.TextView: int mMaximum>;

        $i42 = r0.<android.widget.TextView: int mOldMaximum>;

        if $i43 == $i42 goto label34;

     label33:
        $z5 = 1;

        goto label35;

     label34:
        $z5 = 0;

     label35:
        z2 = $z5;

        if z1 != 0 goto label36;

        if z2 == 0 goto label38;

     label36:
        if z2 != 0 goto label37;

        if z3 == 0 goto label37;

        $r19 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r19.<android.text.Layout: void increaseWidthTo(int)>(i66);

        goto label38;

     label37:
        $i25 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i30 = i6 - $i25;

        $i29 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i28 = $i30 - $i29;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i66, i68, r1, r2, $i28, 0);

     label38:
        if i3 != 1073741824 goto label39;

        i7 = i5;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        goto label40;

     label39:
        i69 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        i7 = i69;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = i69;

        if i3 != -2147483648 goto label40;

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i69, i5);

     label40:
        $i34 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i33 = i7 - $i34;

        $i32 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i70 = $i33 - $i32;

        $i31 = r0.<android.widget.TextView: int mMaxMode>;

        if $i31 != 1 goto label41;

        $r16 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i39 = virtualinvoke $r16.<android.text.Layout: int getLineCount()>();

        $i40 = r0.<android.widget.TextView: int mMaximum>;

        if $i39 <= $i40 goto label41;

        $r15 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i36 = r0.<android.widget.TextView: int mMaximum>;

        $i37 = virtualinvoke $r15.<android.text.Layout: int getLineTop(int)>($i36);

        i70 = staticinvoke <java.lang.Math: int min(int,int)>(i70, $i37);

     label41:
        $r14 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r14 != null goto label42;

        $r13 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i35 = virtualinvoke $r13.<android.text.Layout: int getWidth()>();

        if $i35 > i67 goto label42;

        $r12 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i38 = virtualinvoke $r12.<android.text.Layout: int getHeight()>();

        if $i38 <= i70 goto label43;

     label42:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

        goto label44;

     label43:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(0, 0);

     label44:
        virtualinvoke r0.<android.widget.TextView: void setMeasuredDimension(int,int)>(i6, i7);

        return;
    }

    private int getDesiredHeight()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r3;
        int $i0, $i1, $i2;
        android.text.TextUtils$TruncateAt $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>($r1, 1);

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>($r3, $z0);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    private int getDesiredHeight(android.text.Layout, boolean)
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25;
        android.widget.TextView$Drawables r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i4 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i1 = $i3 + $i4;

        i2 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i0);

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label2;

        $i19 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        i21 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i19);

        $i20 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i21, $i20);

     label2:
        i22 = i2 + i1;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 != 1 goto label4;

        if z0 == 0 goto label5;

        $i16 = r0.<android.widget.TextView: int mMaximum>;

        if i0 <= $i16 goto label5;

        $i15 = r0.<android.widget.TextView: int mMaximum>;

        i23 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i15);

        if r2 == null goto label3;

        $i17 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        i24 = staticinvoke <java.lang.Math: int max(int,int)>(i23, $i17);

        $i18 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i23 = staticinvoke <java.lang.Math: int max(int,int)>(i24, $i18);

     label3:
        i22 = i23 + i1;

        i0 = r0.<android.widget.TextView: int mMaximum>;

        goto label5;

     label4:
        $i6 = r0.<android.widget.TextView: int mMaximum>;

        i22 = staticinvoke <java.lang.Math: int min(int,int)>(i22, $i6);

     label5:
        $i7 = r0.<android.widget.TextView: int mMinMode>;

        if $i7 != 1 goto label6;

        $i10 = r0.<android.widget.TextView: int mMinimum>;

        if i0 >= $i10 goto label7;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i11 = r0.<android.widget.TextView: int mMinimum>;

        $i14 = $i11 - i0;

        $i13 = $i12 * $i14;

        i22 = i22 + $i13;

        goto label7;

     label6:
        $i8 = r0.<android.widget.TextView: int mMinimum>;

        i22 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i8);

     label7:
        $i9 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumHeight()>();

        i25 = staticinvoke <java.lang.Math: int max(int,int)>(i22, $i9);

        return i25;
    }

    private void checkForResize()
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.text.Layout $r1;
        android.view.ViewGroup$LayoutParams $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        z0 = 0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label4;

        $r2 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i1 != -2 goto label1;

        z0 = 1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        $r3 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i2 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 != -2 goto label3;

        i0 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        if i0 == $i6 goto label2;

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r4 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i3 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        if $i3 != -1 goto label4;

        $i4 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i4 < 0 goto label4;

        i7 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i5 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if i7 == $i5 goto label4;

        z0 = 1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

     label5:
        return;
    }

    private void checkForRelayout()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.view.ViewGroup$LayoutParams $r1, $r12, $r13;
        java.lang.CharSequence $r2;
        android.text.Layout $r3, $r4, $r5, $r6, $r11, $r14, $r15, $r16;
        android.text.BoringLayout$Metrics $r7, $r8;
        android.text.TextUtils$TruncateAt $r9, $r10;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i3 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i3 != -2 goto label1;

        $i23 = r0.<android.widget.TextView: int mMaxWidthMode>;

        $i22 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i23 != $i22 goto label8;

        $i26 = r0.<android.widget.TextView: int mMaxWidth>;

        $i25 = r0.<android.widget.TextView: int mMinWidth>;

        if $i26 != $i25 goto label8;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r2 == null goto label2;

        $r16 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r16 == null goto label8;

     label2:
        $i5 = r0.<android.widget.TextView: int mRight>;

        $i4 = r0.<android.widget.TextView: int mLeft>;

        $i6 = $i5 - $i4;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i10 = $i8 - $i9;

        if $i10 <= 0 goto label8;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = virtualinvoke $r3.<android.text.Layout: int getHeight()>();

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        $r6 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r6 != null goto label3;

        $i12 = 0;

        goto label4;

     label3:
        $r5 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i12 = virtualinvoke $r5.<android.text.Layout: int getWidth()>();

     label4:
        i2 = $i12;

        $r7 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r8 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i13 = r0.<android.widget.TextView: int mRight>;

        $i11 = r0.<android.widget.TextView: int mLeft>;

        $i14 = $i13 - $i11;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i15 = $i14 - $i16;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i17 = $i15 - $i18;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i1, i2, $r7, $r8, $i17, 0);

        $r9 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r10 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r9 == $r10 goto label7;

        $r12 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i20 = $r12.<android.view.ViewGroup$LayoutParams: int height>;

        if $i20 == -2 goto label5;

        $r13 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i24 = $r13.<android.view.ViewGroup$LayoutParams: int height>;

        if $i24 == -1 goto label5;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label5:
        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i19 = virtualinvoke $r11.<android.text.Layout: int getHeight()>();

        if $i19 != i0 goto label7;

        $r14 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r14 == null goto label6;

        $r15 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i21 = virtualinvoke $r15.<android.text.Layout: int getHeight()>();

        if $i21 != i0 goto label7;

     label6:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label7:
        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label9;

     label8:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label9:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $i5 = r0.<android.widget.TextView: int mDeferScroll>;

        if $i5 < 0 goto label1;

        i4 = r0.<android.widget.TextView: int mDeferScroll>;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i6);

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>($i7);

     label1:
        return;
    }

    private boolean isShowingHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private boolean bringTextIntoView()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32;
        android.text.Layout$Alignment r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z0 == 0 goto label01;

        $r9 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        goto label02;

     label01:
        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

     label02:
        r1 = $r9;

        i0 = 0;

        $i9 = r0.<android.widget.TextView: int mGravity>;

        $i10 = $i9 & 112;

        if $i10 != 80 goto label03;

        $i31 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        i0 = $i31 - 1;

     label03:
        r2 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i0);

        i1 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i0);

        $i13 = r0.<android.widget.TextView: int mRight>;

        $i11 = r0.<android.widget.TextView: int mLeft>;

        $i12 = $i13 - $i11;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = $i12 - $i15;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i2 = $i14 - $i17;

        $i19 = r0.<android.widget.TextView: int mBottom>;

        $i16 = r0.<android.widget.TextView: int mTop>;

        $i18 = $i19 - $i16;

        $i21 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i20 = $i18 - $i21;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i3 = $i20 - $i22;

        i4 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r2 != $r4 goto label06;

        if i1 != 1 goto label04;

        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label05;

     label04:
        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

     label05:
        r2 = $r7;

        goto label09;

     label06:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r2 != $r3 goto label09;

        if i1 != 1 goto label07;

        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label08;

     label07:
        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

     label08:
        r2 = $r8;

     label09:
        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r2 != $r5 goto label13;

        $f2 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i0);

        $f3 = staticinvoke <android.util.FloatMath: float floor(float)>($f2);

        i7 = (int) $f3;

        $f6 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i0);

        $f7 = staticinvoke <android.util.FloatMath: float ceil(float)>($f6);

        i8 = (int) $f7;

        $i27 = i8 - i7;

        if $i27 >= i2 goto label10;

        $i28 = i8 + i7;

        $i29 = $i28 / 2;

        $i30 = i2 / 2;

        i5 = $i29 - $i30;

        goto label12;

     label10:
        if i1 >= 0 goto label11;

        i5 = i8 - i2;

        goto label12;

     label11:
        i5 = i7;

     label12:
        goto label15;

     label13:
        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r2 != $r6 goto label14;

        $f4 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i0);

        $f5 = staticinvoke <android.util.FloatMath: float ceil(float)>($f4);

        i32 = (int) $f5;

        i5 = i32 - i2;

        goto label15;

     label14:
        $f0 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i0);

        $f1 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        i5 = (int) $f1;

     label15:
        if i4 >= i3 goto label16;

        i6 = 0;

        goto label18;

     label16:
        $i25 = r0.<android.widget.TextView: int mGravity>;

        $i26 = $i25 & 112;

        if $i26 != 80 goto label17;

        i6 = i4 - i3;

        goto label18;

     label17:
        i6 = 0;

     label18:
        $i23 = r0.<android.widget.TextView: int mScrollX>;

        if i5 != $i23 goto label19;

        $i24 = r0.<android.widget.TextView: int mScrollY>;

        if i6 == $i24 goto label20;

     label19:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i5, i6);

        return 1;

     label20:
        return 0;
    }

    public boolean bringPointIntoView(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i47, $i48, $i49, $i50, $i51, $i53, $i54, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9;
        android.text.Layout r1, $r15;
        long l14, $l45, $l46, $l52;
        android.text.Layout$Alignment $r2;
        int[] $r3;
        float $f0, $f1, $f2, $f3, $f4;
        android.widget.Scroller $r4, $r6, $r11, $r12, $r13;
        android.graphics.Rect $r5, $r7, $r8, $r9, $r10, $r14;
        byte $b55;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRequested()>();

        if $z2 == 0 goto label01;

        r0.<android.widget.TextView: int mDeferScroll> = i0;

        return 0;

     label01:
        z0 = 0;

        $z3 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z3 == 0 goto label02;

        $r15 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        goto label03;

     label02:
        $r15 = r0.<android.widget.TextView: android.text.Layout mLayout>;

     label03:
        r1 = $r15;

        if r1 != null goto label04;

        return z0;

     label04:
        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r3 = <android.widget.TextView$4: int[] $SwitchMap$android$text$Layout$Alignment>;

        $r2 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i1);

        $i19 = virtualinvoke $r2.<android.text.Layout$Alignment: int ordinal()>();

        $i18 = $r3[$i19];

        tableswitch($i18)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            default: goto label09;
        };

     label05:
        i2 = 1;

        goto label10;

     label06:
        i2 = -1;

        goto label10;

     label07:
        i2 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i1);

        goto label10;

     label08:
        $i78 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i1);

        i2 = neg $i78;

        goto label10;

     label09:
        i2 = 0;

     label10:
        if i2 <= 0 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        z1 = $z9;

        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i0, z1);

        i3 = (int) $f0;

        i4 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        $i20 = i1 + 1;

        i5 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i20);

        $f1 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i1);

        $f2 = staticinvoke <android.util.FloatMath: float floor(float)>($f1);

        i6 = (int) $f2;

        $f3 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i1);

        $f4 = staticinvoke <android.util.FloatMath: float ceil(float)>($f3);

        i7 = (int) $f4;

        i8 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        $i24 = r0.<android.widget.TextView: int mRight>;

        $i21 = r0.<android.widget.TextView: int mLeft>;

        $i25 = $i24 - $i21;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i23 = $i25 - $i22;

        $i28 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i9 = $i23 - $i28;

        $i26 = r0.<android.widget.TextView: int mBottom>;

        $i29 = r0.<android.widget.TextView: int mTop>;

        $i27 = $i26 - $i29;

        $i32 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i31 = $i27 - $i32;

        $i30 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i10 = $i31 - $i30;

        $z4 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z4 != 0 goto label13;

        $i70 = i7 - i6;

        if $i70 <= i9 goto label13;

        if i7 <= i3 goto label13;

        $i71 = i6 + i9;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i71);

     label13:
        $i36 = i5 - i4;

        i11 = $i36 / 2;

        i13 = i11;

        $i35 = i10 / 4;

        if i13 <= $i35 goto label14;

        i13 = i10 / 4;

     label14:
        $i34 = i9 / 4;

        if i11 <= $i34 goto label15;

        i11 = i9 / 4;

     label15:
        i12 = r0.<android.widget.TextView: int mScrollX>;

        i15 = r0.<android.widget.TextView: int mScrollY>;

        $i33 = i4 - i15;

        if $i33 >= i13 goto label16;

        i15 = i4 - i13;

     label16:
        $i39 = i5 - i15;

        $i40 = i10 - i13;

        if $i39 <= $i40 goto label17;

        $i73 = i10 - i13;

        i15 = i5 - $i73;

     label17:
        $i38 = i8 - i15;

        if $i38 >= i10 goto label18;

        i15 = i8 - i10;

     label18:
        $i37 = 0 - i15;

        if $i37 <= 0 goto label19;

        i15 = 0;

     label19:
        if i2 == 0 goto label21;

        $i77 = i3 - i12;

        if $i77 >= i11 goto label20;

        i12 = i3 - i11;

     label20:
        $i75 = i3 - i12;

        $i74 = i9 - i11;

        if $i75 <= $i74 goto label21;

        $i72 = i9 - i11;

        i12 = i3 - $i72;

     label21:
        if i2 >= 0 goto label23;

        $i63 = i6 - i12;

        if $i63 <= 0 goto label22;

        i12 = i6;

     label22:
        $i76 = i7 - i12;

        if $i76 >= i9 goto label32;

        i12 = i7 - i9;

        goto label32;

     label23:
        if i2 <= 0 goto label25;

        $i65 = i7 - i12;

        if $i65 >= i9 goto label24;

        i12 = i7 - i9;

     label24:
        $i62 = i6 - i12;

        if $i62 <= 0 goto label32;

        i12 = i6;

        goto label32;

     label25:
        $i44 = i7 - i6;

        if $i44 > i9 goto label26;

        $i66 = i7 - i6;

        $i67 = i9 - $i66;

        $i64 = $i67 / 2;

        i12 = i6 - $i64;

        goto label32;

     label26:
        $i43 = i7 - i11;

        if i3 <= $i43 goto label27;

        i12 = i7 - i9;

        goto label32;

     label27:
        $i42 = i6 + i11;

        if i3 >= $i42 goto label28;

        i12 = i6;

        goto label32;

     label28:
        if i6 <= i12 goto label29;

        i12 = i6;

        goto label32;

     label29:
        $i41 = i12 + i9;

        if i7 >= $i41 goto label30;

        i12 = i7 - i9;

        goto label32;

     label30:
        $i48 = i3 - i12;

        if $i48 >= i11 goto label31;

        i12 = i3 - i11;

     label31:
        $i50 = i3 - i12;

        $i49 = i9 - i11;

        if $i50 <= $i49 goto label32;

        $i69 = i9 - i11;

        i12 = i3 - $i69;

     label32:
        $i51 = r0.<android.widget.TextView: int mScrollX>;

        if i12 != $i51 goto label33;

        $i68 = r0.<android.widget.TextView: int mScrollY>;

        if i15 == $i68 goto label39;

     label33:
        $r4 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r4 != null goto label34;

        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i12, i15);

        goto label38;

     label34:
        $l45 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l46 = r0.<android.widget.TextView: long mLastScroll>;

        l14 = $l45 - $l46;

        $i47 = r0.<android.widget.TextView: int mScrollX>;

        i16 = i12 - $i47;

        $i54 = r0.<android.widget.TextView: int mScrollY>;

        i17 = i15 - $i54;

        $b55 = l14 cmp 250L;

        if $b55 <= 0 goto label35;

        $r12 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i60 = r0.<android.widget.TextView: int mScrollX>;

        $i61 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r12.<android.widget.Scroller: void startScroll(int,int,int,int)>($i60, $i61, i16, i17);

        $r11 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i59 = virtualinvoke $r11.<android.widget.Scroller: int getDuration()>();

        virtualinvoke r0.<android.widget.TextView: boolean awakenScrollBars(int)>($i59);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        goto label37;

     label35:
        $r6 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z6 = virtualinvoke $r6.<android.widget.Scroller: boolean isFinished()>();

        if $z6 != 0 goto label36;

        $r13 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        virtualinvoke $r13.<android.widget.Scroller: void abortAnimation()>();

     label36:
        virtualinvoke r0.<android.widget.TextView: void scrollBy(int,int)>(i16, i17);

     label37:
        $l52 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.TextView: long mLastScroll> = $l52;

     label38:
        z0 = 1;

     label39:
        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z5 == 0 goto label41;

        $r5 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        if $r5 != null goto label40;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Rect mTempRect> = $r14;

     label40:
        $r9 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i57 = i3 - 2;

        $i53 = i3 + 2;

        virtualinvoke $r9.<android.graphics.Rect: void set(int,int,int,int)>($i57, i4, $i53, i5);

        $r10 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        specialinvoke r0.<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)>($r10, i1);

        $r7 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i56 = r0.<android.widget.TextView: int mScrollX>;

        $i58 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r7.<android.graphics.Rect: void offset(int,int)>($i56, $i58);

        $r8 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean requestRectangleOnScreen(android.graphics.Rect)>($r8);

        if $z7 == 0 goto label41;

        z0 = 1;

     label41:
        return z0;
    }

    public boolean moveCursorToVisibleOffset()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        boolean $z0;
        java.lang.CharSequence $r1, $r6;
        android.text.Layout $r2, $r3, $r4, $r5, $r7, $r9, $r10;
        float $f0, $f1;
        android.text.Spannable $r8;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 == i1 goto label02;

        return 0;

     label02:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>(i2);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i15 = i2 + 1;

        i4 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>($i15);

        $i18 = r0.<android.widget.TextView: int mBottom>;

        $i16 = r0.<android.widget.TextView: int mTop>;

        $i17 = $i18 - $i16;

        $i20 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i19 = $i17 - $i20;

        $i23 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i5 = $i19 - $i23;

        $i24 = i4 - i3;

        i6 = $i24 / 2;

        $i21 = i5 / 4;

        if i6 <= $i21 goto label03;

        i6 = i5 / 4;

     label03:
        i7 = r0.<android.widget.TextView: int mScrollY>;

        $i22 = i7 + i6;

        if i3 >= $i22 goto label04;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i41 = i7 + i6;

        $i42 = i4 - i3;

        $i40 = $i41 + $i42;

        i2 = virtualinvoke $r10.<android.text.Layout: int getLineForVertical(int)>($i40);

        goto label05;

     label04:
        $i27 = i5 + i7;

        $i28 = $i27 - i6;

        if i4 <= $i28 goto label05;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i34 = i5 + i7;

        $i38 = $i34 - i6;

        $i39 = i4 - i3;

        $i37 = $i38 - $i39;

        i2 = virtualinvoke $r9.<android.text.Layout: int getLineForVertical(int)>($i37);

     label05:
        $i26 = r0.<android.widget.TextView: int mRight>;

        $i25 = r0.<android.widget.TextView: int mLeft>;

        $i31 = $i26 - $i25;

        $i32 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i29 = $i31 - $i32;

        $i30 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i8 = $i29 - $i30;

        i9 = r0.<android.widget.TextView: int mScrollX>;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = (float) i9;

        i10 = virtualinvoke $r5.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i2, $f0);

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i33 = i8 + i9;

        $f1 = (float) $i33;

        i11 = virtualinvoke $r7.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i2, $f1);

        if i10 >= i11 goto label06;

        $i35 = i10;

        goto label07;

     label06:
        $i35 = i11;

     label07:
        i12 = $i35;

        if i10 <= i11 goto label08;

        $i36 = i10;

        goto label09;

     label08:
        $i36 = i11;

     label09:
        i13 = $i36;

        i14 = i0;

        if i14 >= i12 goto label10;

        i14 = i12;

        goto label11;

     label10:
        if i14 <= i13 goto label11;

        i14 = i13;

     label11:
        if i14 == i0 goto label12;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Spannable) $r6;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r8, i14);

        return 1;

     label12:
        return 0;
    }

    public void computeScroll()
    {
        android.widget.TextView r0;
        android.widget.Scroller $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r2.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r3.<android.widget.Scroller: int getCurrX()>();

        r0.<android.widget.TextView: int mScrollX> = $i0;

        $r4 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r4.<android.widget.Scroller: int getCurrY()>();

        r0.<android.widget.TextView: int mScrollY> = $i1;

        virtualinvoke r0.<android.widget.TextView: void invalidateParentCaches()>();

        virtualinvoke r0.<android.widget.TextView: void postInvalidate()>();

     label1:
        return;
    }

    private void getInterestingRect(android.graphics.Rect, int)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.text.Layout $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void convertFromViewportToContentCoordinates(android.graphics.Rect)>(r1);

        if i0 != 0 goto label1;

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i8 = $i6 - $i7;

        r1.<android.graphics.Rect: int top> = $i8;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i2 = $i1 - 1;

        if i0 != $i2 goto label2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i5 = $i3 + $i4;

        r1.<android.graphics.Rect: int bottom> = $i5;

     label2:
        return;
    }

    private void convertFromViewportToContentCoordinates(android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i0 = virtualinvoke r0.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = $i2 + i0;

        r1.<android.graphics.Rect: int left> = $i3;

        $i4 = r1.<android.graphics.Rect: int right>;

        $i5 = $i4 + i0;

        r1.<android.graphics.Rect: int right> = $i5;

        i1 = virtualinvoke r0.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = $i6 + i1;

        r1.<android.graphics.Rect: int top> = $i7;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i9 = $i8 + i1;

        r1.<android.graphics.Rect: int bottom> = $i9;

        return;
    }

    int viewportToContentHorizontalOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mScrollX>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    int viewportToContentVerticalOffset()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = r0.<android.widget.TextView: int mScrollY>;

        i0 = $i1 - $i2;

        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = $i3 & 112;

        if $i4 == 48 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i0 = i0 + $i5;

     label1:
        return i0;
    }

    public void debug(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.String r1, r36, r37;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35;
        java.lang.CharSequence $r18, $r22;
        android.text.Layout $r25, $r29, $r33;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void debug(int)>(i0);

        r1 = staticinvoke <android.widget.TextView: java.lang.String debugIndent(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame={");

        $i1 = r0.<android.widget.TextView: int mLeft>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i2 = r0.<android.widget.TextView: int mTop>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = r0.<android.widget.TextView: int mRight>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i4 = r0.<android.widget.TextView: int mBottom>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} scroll={");

        $i5 = r0.<android.widget.TextView: int mScrollX>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = r0.<android.widget.TextView: int mScrollY>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        r36 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r18 == null goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=\"");

        $r22 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        r37 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r25 == null goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayout width=");

        $r29 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = virtualinvoke $r29.<android.text.Layout: int getWidth()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $r33 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i9 = virtualinvoke $r33.<android.text.Layout: int getHeight()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=NULL");

        r37 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", r37);

        return;
    }

    public int getSelectionStart()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public int getSelectionEnd()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public boolean hasSelection()
    {
        android.widget.TextView r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 < 0 goto label1;

        if i0 == i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setSingleLine()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void setSingleLine(boolean)>(1);

        return;
    }

    public void setAllCaps(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.method.AllCapsTransformationMethod $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new android.text.method.AllCapsTransformationMethod;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r1.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r2);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

     label2:
        return;
    }

    public void setSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z0);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z0, 1, 1);

        return;
    }

    private void setInputTypeSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r2.<android.widget.Editor: int mInputType>;

        $i1 = $i0 & 15;

        if $i1 != 1 goto label2;

        if z0 == 0 goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i4 = $r4.<android.widget.Editor: int mInputType>;

        $i5 = $i4 & -131073;

        $r4.<android.widget.Editor: int mInputType> = $i5;

        goto label2;

     label1:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i2 = $r3.<android.widget.Editor: int mInputType>;

        $i3 = $i2 | 131072;

        $r3.<android.widget.Editor: int mInputType> = $i3;

     label2:
        return;
    }

    private void applySingleLine(boolean, boolean, boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1, z2;
        android.text.method.SingleLineTransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r0.<android.widget.TextView: boolean mSingleLine> = z0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>(1);

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        if z1 == 0 goto label3;

        $r1 = staticinvoke <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        goto label3;

     label1:
        if z2 == 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>(2147483647);

     label2:
        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(0);

        if z1 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

     label3:
        return;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextUtils$TruncateAt;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == r1 goto label1;

        r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize> = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setMarqueeRepeatLimit(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = i0;

        return;
    }

    public int getMarqueeRepeatLimit()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        return $i0;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        return $r1;
    }

    public void setSelectAllOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1;
        java.lang.CharSequence $r2, $r4;
        android.widget.TextView$BufferType $r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: boolean mSelectAllOnFocus> = z0;

        if z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 != 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r3);

     label1:
        return;
    }

    public void setCursorVisible(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r1.<android.widget.Editor: boolean mCursorVisible>;

        if $z1 == z0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mCursorVisible> = z0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void makeBlink()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label2:
        return;
    }

    public boolean isCursorVisible()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mCursorVisible>;

     label2:
        return $z0;
    }

    private boolean canMarquee()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        android.text.Layout $r1, $r2, $r3;
        float $f0, $f1, $f2, $f3;
        byte $b7, $b9;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $i2 = r0.<android.widget.TextView: int mRight>;

        $i1 = r0.<android.widget.TextView: int mLeft>;

        $i3 = $i2 - $i1;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i0 = $i5 - $i6;

        if i0 <= 0 goto label2;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineWidth(int)>(0);

        $f1 = (float) i0;

        $b7 = $f0 cmpl $f1;

        if $b7 > 0 goto label1;

        $i8 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i8 == 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        $f3 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $f2 = (float) i0;

        $b9 = $f3 cmpl $f2;

        if $b9 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void startMarquee()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r6;
        android.text.method.KeyListener $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.TextView$Marquee $r3, $r4, $r5, $r7, $r8;

        r0 := @this: android.widget.TextView;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r2 == null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i2 - $i3;

        $f0 = (float) $i4;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f0);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r3 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z4 = virtualinvoke $r8.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z4 == 0 goto label7;

     label3:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z1 != 0 goto label4;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        if $z3 == 0 goto label7;

     label4:
        $i5 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i5 != 1 goto label7;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z2 == 0 goto label7;

        $i6 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i6 != 1 goto label5;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 2;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r6 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r6;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = r1;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 != null goto label6;

        $r7 = new android.widget.TextView$Marquee;

        specialinvoke $r7.<android.widget.TextView$Marquee: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee> = $r7;

     label6:
        $r5 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $i7 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        virtualinvoke $r5.<android.widget.TextView$Marquee: void start(int)>($i7);

     label7:
        return;
    }

    private void stopMarquee()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r3;
        android.widget.TextView$Marquee $r2, $r4, $r5;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r2 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r4.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        virtualinvoke $r5.<android.widget.TextView$Marquee: void stop()>();

     label1:
        $i0 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i0 != 2 goto label2;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

        r1 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r3;

        r0.<android.widget.TextView: android.text.Layout mLayout> = r1;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    private void startStopMarquee(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

     label2:
        return;
    }

    protected void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    protected void onSelectionChanged(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEvent(int)>(8192);

        return;
    }

    public void addTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.TextView: java.util.ArrayList mListeners> = $r4;

     label1:
        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        int i0;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    private void sendBeforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.util.ArrayList r2, $r3;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i5 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i5, class "android/text/style/SpellCheckSpan");

        $i6 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i6, class "android/text/style/SuggestionSpan");

        return;
    }

    private void removeIntersectingNonAdjacentSpans(int, int, java.lang.Class)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Class r1;
        android.text.Editable r2;
        java.lang.Object[] r3;
        java.lang.CharSequence $r4, $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r8;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r4 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r2 = (android.text.Editable) $r5;

        r3 = interfaceinvoke r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, r1);

        i2 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i2 goto label4;

        $r6 = r3[i3];

        i4 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>($r6);

        $r7 = r3[i3];

        i5 = interfaceinvoke r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r7);

        if i5 == i0 goto label4;

        if i4 != i1 goto label3;

        goto label4;

     label3:
        $r8 = r3[i3];

        interfaceinvoke r2.<android.text.Editable: void removeSpan(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label2;

     label4:
        return;
    }

    void removeAdjacentSuggestionSpans(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4;
        android.text.Editable r1;
        android.text.style.SuggestionSpan[] r2;
        java.lang.CharSequence $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object[] $r5;
        android.text.style.SuggestionSpan $r6, $r7, $r8;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r1 = (android.text.Editable) $r4;

        $r5 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i0, class "android/text/style/SuggestionSpan");

        r2 = (android.text.style.SuggestionSpan[]) $r5;

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        $r6 = r2[i2];

        i3 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r6);

        $r7 = r2[i2];

        i4 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r7);

        if i4 == i0 goto label3;

        if i3 != i0 goto label4;

     label3:
        $z1 = staticinvoke <android.widget.SpellChecker: boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int)>(r1, i0, i0, i3, i4);

        if $z1 == 0 goto label4;

        $r8 = r2[i2];

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r8);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return;
    }

    void sendOnTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4;
        java.util.ArrayList r2, $r3;
        android.widget.Editor $r4, $r5;
        java.lang.Object $r6;
        android.text.TextWatcher $r7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r7 = (android.text.TextWatcher) $r6;

        interfaceinvoke $r7.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void sendOnTextChanged(int,int)>(i0, i2);

     label3:
        return;
    }

    void sendAfterTextChanged(android.text.Editable)
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        java.util.ArrayList r2, $r3;
        int i0, i1;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        return;
    }

    void updateAfterEdit()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i0 >= 0 goto label1;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = $i1 & 112;

        if $i2 != 80 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label2:
        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        if i0 < 0 goto label4;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void makeBlink()>();

     label3:
        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i0);

     label4:
        return;
    }

    void handleTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.widget.Editor$InputMethodState r2, $r5;
        android.widget.Editor $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

     label2:
        r2 = $r5;

        if r2 == null goto label3;

        $i15 = r2.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i15 != 0 goto label4;

     label3:
        virtualinvoke r0.<android.widget.TextView: void updateAfterEdit()>();

     label4:
        if r2 == null goto label7;

        r2.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        $i3 = r2.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i3 >= 0 goto label5;

        r2.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

        $i13 = i0 + i1;

        r2.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i13;

        goto label6;

     label5:
        $i4 = r2.<android.widget.Editor$InputMethodState: int mChangedStart>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        r2.<android.widget.Editor$InputMethodState: int mChangedStart> = $i5;

        $i9 = r2.<android.widget.Editor$InputMethodState: int mChangedEnd>;

        $i7 = i0 + i1;

        $i6 = r2.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i8 = $i7 - $i6;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        r2.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i10;

     label6:
        $i11 = r2.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i12 = i2 - i1;

        $i14 = $i11 + $i12;

        r2.<android.widget.Editor$InputMethodState: int mChangedDelta> = $i14;

     label7:
        virtualinvoke r0.<android.widget.TextView: void resetErrorChangedFlag()>();

        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    void spanChange(android.text.Spanned, java.lang.Object, int, int, int, int)
    {
        android.widget.TextView r0;
        android.text.Spanned r1;
        java.lang.Object r2, $r6, $r7;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.widget.Editor$InputMethodState r3, $r22;
        android.widget.Editor $r4, $r5, $r8, $r9, $r10, $r13, $r17, $r19, $r20, $r21, $r23, $r24;
        android.widget.SpellChecker $r11, $r15;
        android.text.style.SpellCheckSpan $r12;
        android.view.inputmethod.ExtractedTextRequest $r14;
        android.text.Layout $r16, $r18;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spanned;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 = 0;

        i4 = -1;

        i5 = -1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 != null goto label01;

        $r22 = null;

        goto label02;

     label01:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r5.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

     label02:
        r3 = $r22;

        $r6 = <android.text.Selection: java.lang.Object SELECTION_END>;

        if r2 != $r6 goto label04;

        z0 = 1;

        i5 = i1;

        if i0 >= 0 goto label03;

        if i1 < 0 goto label04;

     label03:
        $i17 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i17, i0, i1);

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r24 == null goto label04;

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r23.<android.widget.Editor: void makeBlink()>();

     label04:
        $r7 = <android.text.Selection: java.lang.Object SELECTION_START>;

        if r2 != $r7 goto label06;

        z0 = 1;

        i4 = i1;

        if i0 >= 0 goto label05;

        if i1 < 0 goto label06;

     label05:
        i6 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>(i6, i0, i1);

     label06:
        if z0 == 0 goto label10;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r20 == null goto label07;

        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z8 != 0 goto label07;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21.<android.widget.Editor: boolean mSelectionMoved> = 1;

     label07:
        $i15 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r2);

        $i16 = $i15 & 512;

        if $i16 != 0 goto label10;

        if i4 >= 0 goto label08;

        i4 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

     label08:
        if i5 >= 0 goto label09;

        i5 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

     label09:
        virtualinvoke r0.<android.widget.TextView: void onSelectionChanged(int,int)>(i4, i5);

     label10:
        $z1 = r2 instanceof android.text.style.UpdateAppearance;

        if $z1 != 0 goto label11;

        $z7 = r2 instanceof android.text.style.ParagraphStyle;

        if $z7 != 0 goto label11;

        $z6 = r2 instanceof android.text.style.CharacterStyle;

        if $z6 == 0 goto label16;

     label11:
        if r3 == null goto label12;

        $i14 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i14 != 0 goto label13;

     label12:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        goto label14;

     label13:
        r3.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

     label14:
        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r8 == null goto label16;

        if i0 < 0 goto label15;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r17.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r16, i0, i2);

     label15:
        if i1 < 0 goto label16;

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r18 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r19.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r18, i1, i3);

     label16:
        $z3 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>(r1, r2);

        if $z3 == 0 goto label20;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if r3 == null goto label17;

        $z5 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>(r1, r2);

        if $z5 == 0 goto label17;

        r3.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged> = 1;

     label17:
        $i13 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        if $i13 < 0 goto label20;

        if r3 == null goto label18;

        $i11 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i11 != 0 goto label19;

     label18:
        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

        goto label20;

     label19:
        r3.<android.widget.Editor$InputMethodState: boolean mCursorChanged> = 1;

     label20:
        $z2 = r2 instanceof android.text.ParcelableSpan;

        if $z2 == 0 goto label25;

        if r3 == null goto label25;

        $r14 = r3.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest>;

        if $r14 == null goto label25;

        $i8 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i8 == 0 goto label24;

        if i0 < 0 goto label22;

        $i9 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i9 <= i0 goto label21;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

     label21:
        $i12 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i12 <= i2 goto label22;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i2;

     label22:
        if i1 < 0 goto label25;

        $i7 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i7 <= i1 goto label23;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i1;

     label23:
        $i10 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i10 <= i3 goto label25;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i3;

        goto label25;

     label24:
        r3.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

     label25:
        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r10 == null goto label26;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r9.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r11 == null goto label26;

        if i1 >= 0 goto label26;

        $z4 = r2 instanceof android.text.style.SpellCheckSpan;

        if $z4 == 0 goto label26;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = $r13.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        $r12 = (android.text.style.SpellCheckSpan) r2;

        virtualinvoke $r15.<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>($r12);

     label26:
        return;
    }

    public void dispatchFinishTemporaryDetach()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        r0.<android.widget.TextView: boolean mDispatchTemporaryDetach> = 1;

        specialinvoke r0.<android.view.View: void dispatchFinishTemporaryDetach()>();

        r0.<android.widget.TextView: boolean mDispatchTemporaryDetach> = 0;

        return;
    }

    public void onStartTemporaryDetach()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onStartTemporaryDetach()>();

        $z0 = r0.<android.widget.TextView: boolean mDispatchTemporaryDetach>;

        if $z0 != 0 goto label1;

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 1;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mTemporaryDetach> = 1;

     label2:
        return;
    }

    public void onFinishTemporaryDetach()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onFinishTemporaryDetach()>();

        $z0 = r0.<android.widget.TextView: boolean mDispatchTemporaryDetach>;

        if $z0 != 0 goto label1;

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mTemporaryDetach> = 0;

     label2:
        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        int i0;
        android.graphics.Rect r1;
        android.text.Spannable r2;
        android.widget.Editor $r3, $r9;
        android.text.method.TransformationMethod $r4, $r6;
        java.lang.CharSequence $r5, $r7, $r8;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $z1 = r0.<android.widget.TextView: boolean mTemporaryDetach>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;

     label1:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label2;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r9.<android.widget.Editor: void onFocusChanged(boolean,int)>(z0, i0);

     label2:
        if z0 == 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r7 instanceof android.text.Spannable;

        if $z2 == 0 goto label3;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r2 = (android.text.Spannable) $r8;

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>(r2);

     label3:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        $r4 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r4 == null goto label4;

        $r6 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        interfaceinvoke $r6.<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>(r0, $r5, z0, i0, r1);

     label4:
        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void onWindowFocusChanged(boolean)>(z0);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onWindowFocusChanged(boolean)>(z0);

     label1:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.widget.TextView r0;
        android.view.View r1;
        int i0;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        if i0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void hideControllers()>();

     label1:
        return;
    }

    public void clearComposingText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        android.text.Spannable $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r2;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r3);

     label1:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        specialinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        if z0 == z1 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

        goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

     label2:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        android.text.style.ClickableSpan[] r2;
        android.widget.Editor $r3, $r4, $r9, $r10, $r18, $r19, $r20, $r21, $r22;
        android.text.method.MovementMethod $r5, $r7, $r17;
        java.lang.CharSequence $r6, $r12, $r14;
        android.text.Layout $r8;
        android.text.Spannable $r11, $r16;
        android.text.style.ClickableSpan $r13;
        java.lang.Object[] $r15;
        android.view.inputmethod.InputMethodManager r23;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label01;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r22.<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)>(r1);

     label01:
        z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label02;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z15 = $r21.<android.widget.Editor: boolean mDiscardNextActionUp>;

        if $z15 == 0 goto label02;

        if i0 != 1 goto label02;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20.<android.widget.Editor: boolean mDiscardNextActionUp> = 0;

        return z0;

     label02:
        if i0 != 1 goto label04;

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r19 == null goto label03;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z16 = $r18.<android.widget.Editor: boolean mIgnoreActionUpEvent>;

        if $z16 != 0 goto label04;

     label03:
        $z14 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z14 == 0 goto label04;

        $z13 = 1;

        goto label05;

     label04:
        $z13 = 0;

     label05:
        z1 = $z13;

        $r5 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r5 != null goto label06;

        $z12 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z12 == 0 goto label12;

     label06:
        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z4 == 0 goto label12;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z5 = $r6 instanceof android.text.Spannable;

        if $z5 == 0 goto label12;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r8 == null goto label12;

        z2 = 0;

        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r7 == null goto label07;

        $r17 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r14 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r16 = (android.text.Spannable) $r14;

        $z11 = interfaceinvoke $r17.<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r16, r1);

        z2 = z2 | $z11;

     label07:
        z3 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if z1 == 0 goto label08;

        $z10 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z10 == 0 goto label08;

        $i1 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i1 == 0 goto label08;

        if z3 == 0 goto label08;

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r11 = (android.text.Spannable) $r12;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r15 = interfaceinvoke $r11.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i3, $i2, class "android/text/style/ClickableSpan");

        r2 = (android.text.style.ClickableSpan[]) $r15;

        $i4 = lengthof r2;

        if $i4 <= 0 goto label08;

        $r13 = r2[0];

        virtualinvoke $r13.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r0);

        z2 = 1;

     label08:
        if z1 == 0 goto label11;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z6 != 0 goto label09;

        if z3 == 0 goto label11;

     label09:
        r23 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r23);

        if z3 != 0 goto label10;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z7 = $r10.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z7 == 0 goto label10;

        if r23 == null goto label10;

        $z9 = virtualinvoke r23.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        if $z9 == 0 goto label10;

        goto label10;

     label10:
        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r9.<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)>(r1);

        z2 = 1;

     label11:
        if z2 == 0 goto label12;

        return 1;

     label12:
        return z0;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        android.text.method.MovementMethod $r3, $r8;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r4, $r6;
        android.text.Layout $r5;
        android.text.Spannable $r7;
        java.lang.AbstractMethodError $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r3 == null goto label5;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r4 instanceof android.text.Spannable;

        if $z1 == 0 goto label5;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label5;

     label1:
        $r8 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r6;

        $z2 = interfaceinvoke $r8.<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r7, r1);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        $z0 = specialinvoke r0.<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;

        catch java.lang.AbstractMethodError from label1 to label2 with label4;
    }

    boolean isTextEditable()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean didTouchFocusSelect()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mTouchFocusSelected>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void cancelLongPress()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void cancelLongPress()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mIgnoreActionUpEvent> = 1;

     label1:
        return;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        android.text.method.MovementMethod $r2, $r7;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r3, $r5;
        android.text.Layout $r4;
        android.text.Spannable $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label1;

        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r5;

        $z2 = interfaceinvoke $r7.<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r6, r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void setScroller(android.widget.Scroller)
    {
        android.widget.TextView r0;
        android.widget.Scroller r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.Scroller;

        r0.<android.widget.TextView: android.widget.Scroller mScroller> = r1;

        return;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.widget.TextView r0;
        android.widget.TextView$Marquee r1, $r4, $r10;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19;
        android.text.TextUtils$TruncateAt $r2, $r3;
        android.text.Layout $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r3 != $r2 goto label7;

        $i1 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i1 == 1 goto label7;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 == null goto label2;

        $r10 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r10.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label2;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z1 = virtualinvoke r1.<android.widget.TextView$Marquee: boolean shouldDrawLeftFade()>();

        if $z1 == 0 goto label1;

        f0 = virtualinvoke r1.<android.widget.TextView$Marquee: float getScroll()>();

        $i17 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f24 = (float) $i17;

        $f25 = f0 / $f24;

        return $f25;

     label1:
        return 0.0F;

     label2:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i2 != 1 goto label7;

        i18 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i3 = r0.<android.widget.TextView: int mGravity>;

        i19 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i3, i18);

        $i4 = i19 & 7;

        tableswitch($i4)
        {
            case 1: goto label5;
            case 2: goto label7;
            case 3: goto label3;
            case 4: goto label7;
            case 5: goto label4;
            case 6: goto label7;
            case 7: goto label5;
            default: goto label7;
        };

     label3:
        return 0.0F;

     label4:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f2 = virtualinvoke $r5.<android.text.Layout: float getLineRight(int)>(0);

        $i5 = r0.<android.widget.TextView: int mRight>;

        $i6 = r0.<android.widget.TextView: int mLeft>;

        $i7 = $i5 - $i6;

        $f3 = (float) $i7;

        $f4 = $f2 - $f3;

        $i8 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f6 = (float) $i8;

        $f5 = $f4 - $f6;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f7 = (float) $i9;

        $f8 = $f5 - $f7;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f10 = virtualinvoke $r6.<android.text.Layout: float getLineLeft(int)>(0);

        $f9 = $f8 - $f10;

        $i10 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f11 = (float) $i10;

        $f12 = $f9 / $f11;

        return $f12;

     label5:
        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = virtualinvoke $r8.<android.text.Layout: int getParagraphDirection(int)>(0);

        if i0 != 1 goto label6;

        return 0.0F;

     label6:
        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f13 = virtualinvoke $r7.<android.text.Layout: float getLineRight(int)>(0);

        $i11 = r0.<android.widget.TextView: int mRight>;

        $i13 = r0.<android.widget.TextView: int mLeft>;

        $i12 = $i11 - $i13;

        $f15 = (float) $i12;

        $f16 = $f13 - $f15;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f14 = (float) $i14;

        $f18 = $f16 - $f14;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f17 = (float) $i15;

        $f21 = $f18 - $f17;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f20 = virtualinvoke $r9.<android.text.Layout: float getLineLeft(int)>(0);

        $f19 = $f21 - $f20;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f23 = (float) $i16;

        $f22 = $f19 / $f23;

        return $f22;

     label7:
        $f1 = specialinvoke r0.<android.view.View: float getLeftFadingEdgeStrength()>();

        return $f1;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.widget.TextView r0;
        android.widget.TextView$Marquee r1, $r4, $r8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23;
        android.text.TextUtils$TruncateAt $r2, $r3;
        android.text.Layout $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r3 != $r2 goto label6;

        $i1 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i1 == 1 goto label6;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 == null goto label1;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r8.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        f0 = virtualinvoke r1.<android.widget.TextView$Marquee: float getMaxFadeScroll()>();

        f1 = virtualinvoke r1.<android.widget.TextView$Marquee: float getScroll()>();

        $f14 = f0 - f1;

        $i20 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f13 = (float) $i20;

        $f15 = $f14 / $f13;

        return $f15;

     label1:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i2 != 1 goto label6;

        i21 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i3 = r0.<android.widget.TextView: int mGravity>;

        i22 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i3, i21);

        $i4 = i22 & 7;

        tableswitch($i4)
        {
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label2;
            case 4: goto label6;
            case 5: goto label3;
            case 6: goto label6;
            case 7: goto label4;
            default: goto label6;
        };

     label2:
        $i5 = r0.<android.widget.TextView: int mRight>;

        $i6 = r0.<android.widget.TextView: int mLeft>;

        $i8 = $i5 - $i6;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i10 = $i8 - $i7;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i23 = $i10 - $i9;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        f2 = virtualinvoke $r5.<android.text.Layout: float getLineWidth(int)>(0);

        $f5 = (float) i23;

        $f4 = f2 - $f5;

        $i11 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f6 = (float) $i11;

        $f7 = $f4 / $f6;

        return $f7;

     label3:
        return 0.0F;

     label4:
        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = virtualinvoke $r6.<android.text.Layout: int getParagraphDirection(int)>(0);

        if i0 != -1 goto label5;

        return 0.0F;

     label5:
        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f8 = virtualinvoke $r7.<android.text.Layout: float getLineWidth(int)>(0);

        $i12 = r0.<android.widget.TextView: int mRight>;

        $i14 = r0.<android.widget.TextView: int mLeft>;

        $i13 = $i12 - $i14;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i18 = $i13 - $i17;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i16 = $i18 - $i15;

        $f10 = (float) $i16;

        $f11 = $f8 - $f10;

        $i19 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f9 = (float) $i19;

        $f12 = $f11 / $f9;

        return $f12;

     label6:
        $f3 = specialinvoke r0.<android.view.View: float getRightFadingEdgeStrength()>();

        return $f3;
    }

    protected int computeHorizontalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label3;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.widget.TextView: int mGravity>;

        $i3 = $i2 & 7;

        if $i3 != 3 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $i1 = (int) $f0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

     label2:
        return $i1;

     label3:
        $i0 = specialinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        return $i0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getHeight()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        return $i0;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    public void findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.util.ArrayList r1;
        java.lang.CharSequence r2, $r5, $r7;
        int i0, $i1;
        java.lang.String r3, r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r1, r2, i0);

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z2 != 0 goto label1;

        $r6 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        r4 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $z4 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z4 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public static android.content.res.ColorStateList getTextColors(android.content.Context, android.content.res.TypedArray)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1, r2, r4;
        android.content.res.ColorStateList r3;
        int i0;
        int[] $r5, $r6;
        java.lang.NullPointerException $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.TypedArray;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        throw $r7;

     label1:
        $r5 = <android.R$styleable: int[] TextView>;

        r2 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r5);

        r3 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if r3 != null goto label2;

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i0 == 0 goto label2;

        $r6 = <android.R$styleable: int[] TextAppearance>;

        r4 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r6);

        r3 = virtualinvoke r4.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r3;
    }

    public static int getTextColor(android.content.Context, android.content.res.TypedArray, int)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        int i0, $i1;
        android.content.res.ColorStateList r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.TypedArray;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>(r0, r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $i1 = virtualinvoke r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i1;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, i1, $i2;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getMetaState()>();

        i1 = $i2 & -28673;

        $z0 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z0 == 0 goto label5;

        lookupswitch(i0)
        {
            case 29: goto label1;
            case 31: goto label3;
            case 50: goto label4;
            case 52: goto label2;
            default: goto label5;
        };

     label1:
        $z8 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z8 == 0 goto label5;

        $z9 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908319);

        return $z9;

     label2:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z2 == 0 goto label5;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        return $z3;

     label3:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z6 == 0 goto label5;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        return $z7;

     label4:
        $z4 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z4 == 0 goto label5;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        return $z5;

     label5:
        $z1 = specialinvoke r0.<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    private boolean canSelectText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;
        android.widget.Editor $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean hasSelectionController()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean textCanBeSelected()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $z0 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean canSelectArbitrarily()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z2 == 0 goto label4;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z4 = $r3 instanceof android.text.Spannable;

        if $z4 == 0 goto label4;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z5 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    private java.util.Locale getTextServicesLocale(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        java.util.Locale $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleAsync()>();

        $r1 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

     label2:
        return $r2;
    }

    public java.util.Locale getTextServicesLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(0);

        return $r1;
    }

    public java.util.Locale getSpellCheckerLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(1);

        return $r1;
    }

    private void updateTextServicesLocaleAsync()
    {
        android.widget.TextView r0;
        android.widget.TextView$3 $r1;

        r0 := @this: android.widget.TextView;

        $r1 = new android.widget.TextView$3;

        specialinvoke $r1.<android.widget.TextView$3: void <init>(android.widget.TextView)>(r0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    private void updateTextServicesLocaleLocked()
    {
        android.widget.TextView r0;
        android.view.textservice.TextServicesManager r1;
        android.view.textservice.SpellCheckerSubtype r2;
        java.util.Locale r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.TextView;

        $r4 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("textservices");

        r1 = (android.view.textservice.TextServicesManager) $r5;

        r2 = virtualinvoke r1.<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>(1);

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        r3 = staticinvoke <android.view.textservice.SpellCheckerSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>($r6);

        goto label2;

     label1:
        r3 = null;

     label2:
        r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache> = r3;

        return;
    }

    void onLocaleChanged()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = null;

        return;
    }

    public android.text.method.WordIterator getWordIterator()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.text.method.WordIterator $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = virtualinvoke $r2.<android.widget.Editor: android.text.method.WordIterator getWordIterator()>();

        return $r3;

     label1:
        return null;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean z0, $z1, $z3;
        java.lang.CharSequence r2;
        java.util.List $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if z0 == 0 goto label1;

        $z3 = specialinvoke r0.<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>();

        if $z3 == 0 goto label2;

     label1:
        r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    private boolean shouldSpeakPasswordsForAccessibility()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "speak_password", 0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean z0;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r4, $r5, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TextView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>(z0);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 8192 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r4);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i1);

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r5);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i2);

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i3);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, i1, $i2, $i3;
        android.text.InputFilter r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        java.lang.CharSequence $r5, $r9, $r14, $r16;
        android.widget.TextView$BufferType $r6, $r7;
        android.widget.Editor $r8, $r13, $r15, $r17;
        android.text.InputFilter[] $r10, $r11;
        android.text.InputFilter$LengthFilter $r12;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r3 = class "android/widget/TextView";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r4);

        z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>(z0);

        if z0 == 0 goto label01;

        $z9 = specialinvoke r0.<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>();

        if $z9 == 0 goto label02;

     label01:
        $r5 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r5);

     label02:
        $r7 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r7 != $r6 goto label03;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>(1);

     label03:
        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r8 == null goto label04;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r13.<android.widget.Editor: int mInputType>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>($i3);

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r15.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r14 == null goto label04;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>(1);

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r17.<android.widget.Editor: java.lang.CharSequence mError>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>($r16);

     label04:
        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label05;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(256);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(512);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>(31);

     label05:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label09;

        $z6 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z6 == 0 goto label06;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(131072);

     label06:
        $z5 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z5 == 0 goto label07;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16384);

     label07:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z8 == 0 goto label08;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32768);

     label08:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z7 == 0 goto label09;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(65536);

     label09:
        $r10 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        i0 = lengthof $r10;

        i1 = 0;

     label10:
        if i1 >= i0 goto label12;

        $r11 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        r2 = $r11[i1];

        $z4 = r2 instanceof android.text.InputFilter$LengthFilter;

        if $z4 == 0 goto label11;

        $r12 = (android.text.InputFilter$LengthFilter) r2;

        $i2 = virtualinvoke $r12.<android.text.InputFilter$LengthFilter: int getMax()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>($i2);

     label11:
        i1 = i1 + 1;

        goto label10;

     label12:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSingleLine()>();

        if $z3 != 0 goto label13;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>(1);

     label13:
        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.os.Bundle r1;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z25, $z26, $z27, $z28;
        android.view.inputmethod.InputMethodManager r2;
        android.text.Spannable $r3, $r6;
        android.widget.Editor $r4, $r5, $r10;
        android.text.method.MovementMethod $r7;
        android.text.Layout $r8;
        java.lang.CharSequence $r9, r11;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        lookupswitch(i0)
        {
            case 16: goto label01;
            case 16384: goto label08;
            case 32768: goto label10;
            case 65536: goto label12;
            case 131072: goto label14;
            default: goto label24;
        };

     label01:
        z0 = 0;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean isClickable()>();

        if $z14 != 0 goto label02;

        $z25 = virtualinvoke r0.<android.widget.TextView: boolean isLongClickable()>();

        if $z25 == 0 goto label04;

     label02:
        $z13 = virtualinvoke r0.<android.widget.TextView: boolean isFocusable()>();

        if $z13 == 0 goto label03;

        $z27 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z27 != 0 goto label03;

        virtualinvoke r0.<android.widget.TextView: boolean requestFocus()>();

     label03:
        virtualinvoke r0.<android.widget.TextView: boolean performClick()>();

        z0 = 1;

     label04:
        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r7 != null goto label05;

        $z26 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z26 == 0 goto label07;

     label05:
        $z17 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z17 == 0 goto label07;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z16 = $r9 instanceof android.text.Spannable;

        if $z16 == 0 goto label07;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r8 == null goto label07;

        $z19 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z19 != 0 goto label06;

        $z22 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z22 == 0 goto label07;

     label06:
        $z20 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z20 == 0 goto label07;

        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r2);

        $z18 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z18 != 0 goto label07;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z23 = $r10.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z23 == 0 goto label07;

        if r2 == null goto label07;

        $z21 = virtualinvoke r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        z0 = z0 | $z21;

     label07:
        return z0;

     label08:
        $z9 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z9 == 0 goto label09;

        $z12 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z12 == 0 goto label09;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        if $z11 == 0 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z8 == 0 goto label11;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z7 == 0 goto label11;

        $z10 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        if $z10 == 0 goto label11;

        return 1;

     label11:
        return 0;

     label12:
        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z4 == 0 goto label13;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z6 == 0 goto label13;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        if $z5 == 0 goto label13;

        return 1;

     label13:
        return 0;

     label14:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z1 == 0 goto label23;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z2 == 0 goto label23;

        r11 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r11 != null goto label15;

        return 0;

     label15:
        if r1 == null goto label16;

        $i6 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", -1);

        goto label17;

     label16:
        $i6 = -1;

     label17:
        i7 = $i6;

        if r1 == null goto label18;

        $i4 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", -1);

        goto label19;

     label18:
        $i4 = -1;

     label19:
        i1 = $i4;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i2 != i7 goto label20;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i5 == i1 goto label23;

     label20:
        if i7 != i1 goto label21;

        if i1 != -1 goto label21;

        $r6 = (android.text.Spannable) r11;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r6);

        return 1;

     label21:
        if i7 < 0 goto label23;

        if i7 > i1 goto label23;

        $i3 = interfaceinvoke r11.<java.lang.CharSequence: int length()>();

        if i1 > $i3 goto label23;

        $r3 = (android.text.Spannable) r11;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, i7, i1);

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label22;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: boolean startSelectionActionMode()>();

     label22:
        return 1;

     label23:
        return 0;

     label24:
        $z28 = specialinvoke r0.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        return $z28;
    }

    public void sendAccessibilityEvent(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 4096 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(i0);

        return;
    }

    public java.lang.CharSequence getTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getHint()>();

     label1:
        return r1;
    }

    void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(16);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i0);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>(i1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>(i2);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    public boolean isInputMethodTarget()
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean onTextContextMenuItem(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.lang.CharSequence $r1, $r2, $r4;
        boolean $z0;
        android.content.ClipData $r3, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 = 0;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i4);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

     label1:
        tableswitch(i0)
        {
            case 16908319: goto label2;
            case 16908320: goto label4;
            case 16908321: goto label5;
            case 16908322: goto label3;
            default: goto label6;
        };

     label2:
        virtualinvoke r0.<android.widget.TextView: boolean selectAllText()>();

        return 1;

     label3:
        specialinvoke r0.<android.widget.TextView: void paste(int,int)>(i1, i2);

        return 1;

     label4:
        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i1, i2);

        $r5 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r4);

        specialinvoke r0.<android.widget.TextView: void setPrimaryClip(android.content.ClipData)>($r5);

        virtualinvoke r0.<android.widget.TextView: void deleteText_internal(int,int)>(i1, i2);

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;

     label5:
        $r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i1, i2);

        $r3 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r2);

        specialinvoke r0.<android.widget.TextView: void setPrimaryClip(android.content.ClipData)>($r3);

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;

     label6:
        return 0;
    }

    java.lang.CharSequence getTransformedText(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r2);

        return $r3;
    }

    public boolean performLongClick()
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z3;
        android.widget.Editor $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        z0 = 0;

        $z1 = specialinvoke r0.<android.view.View: boolean performLongClick()>();

        if $z1 == 0 goto label1;

        z0 = 1;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z3 = virtualinvoke $r4.<android.widget.Editor: boolean performLongClick(boolean)>(z0);

        z0 = z0 | $z3;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: boolean performHapticFeedback(int)>(0);

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

     label3:
        return z0;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onScrollChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onScrollChanged()>();

     label1:
        return;
    }

    public boolean isSuggestionsEnabled()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.Editor $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r2.<android.widget.Editor: int mInputType>;

        $i2 = $i1 & 15;

        if $i2 == 1 goto label2;

        return 0;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r3.<android.widget.Editor: int mInputType>;

        $i4 = $i3 & 524288;

        if $i4 <= 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i5 = $r4.<android.widget.Editor: int mInputType>;

        i0 = $i5 & 4080;

        if i0 == 0 goto label4;

        if i0 == 48 goto label4;

        if i0 == 80 goto label4;

        if i0 == 64 goto label4;

        if i0 != 160 goto label5;

     label4:
        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback> = r1;

        return;
    }

    public android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.view.ActionMode$Callback $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback>;

     label2:
        return $r3;
    }

    protected void stopSelectionActionMode()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void stopSelectionActionMode()>();

        return;
    }

    boolean canCut()
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r1, $r2;
        int $i0;
        android.widget.Editor $r3, $r4;
        android.text.method.KeyListener $r5;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r2 instanceof android.text.Editable;

        if $z2 == 0 goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r5 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean canCopy()
    {
        android.widget.TextView r0;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        int $i0;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean canPaste()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1, $z2;
        android.widget.Editor $r2, $r3;
        android.text.method.KeyListener $r4;
        int $i0, $i1;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.content.ClipboardManager $r7;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == null goto label1;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i1 < 0 goto label1;

        $r5 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r7 = (android.content.ClipboardManager) $r6;

        $z1 = virtualinvoke $r7.<android.content.ClipboardManager: boolean hasPrimaryClip()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean selectAllText()
    {
        android.widget.TextView r0;
        int i0;
        java.lang.CharSequence $r1, $r2;
        android.text.Spannable $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r2;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, 0, i0);

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void paste(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.content.ClipboardManager r1;
        android.content.ClipData r2;
        boolean z0;
        java.lang.CharSequence r3, $r8, $r10, $r13, $r15;
        android.content.Context $r4, $r7;
        java.lang.Object $r5;
        android.content.ClipData$Item $r6;
        android.text.Editable $r9, $r12, $r18;
        android.text.Spannable $r16;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        r1 = (android.content.ClipboardManager) $r5;

        r2 = virtualinvoke r1.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        if r2 == null goto label5;

        z0 = 0;

        i2 = 0;

     label1:
        $i3 = virtualinvoke r2.<android.content.ClipData: int getItemCount()>();

        if i2 >= $i3 goto label4;

        $r6 = virtualinvoke r2.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        $r7 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r3 = virtualinvoke $r6.<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>($r7);

        if r3 == null goto label3;

        if z0 != 0 goto label2;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r16 = (android.text.Spannable) $r13;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r16, i1);

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = (android.text.Editable) $r15;

        interfaceinvoke $r18.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r3);

        z0 = 1;

        goto label3;

     label2:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Editable) $r8;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r9.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i4, "\n");

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Editable) $r10;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r12.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i5, r3);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        <android.widget.TextView: long LAST_CUT_OR_COPY_TIME> = 0L;

     label5:
        return;
    }

    private void setPrimaryClip(android.content.ClipData)
    {
        android.widget.TextView r0;
        android.content.ClipData r1;
        android.content.ClipboardManager r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        long $l0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.ClipData;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        r2 = (android.content.ClipboardManager) $r4;

        virtualinvoke r2.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>(r1);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        <android.widget.TextView: long LAST_CUT_OR_COPY_TIME> = $l0;

        return;
    }

    public int getOffsetForPosition(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        int i0, i1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 != null goto label1;

        return -1;

     label1:
        i0 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinate(float)>(f1);

        i1 = specialinvoke r0.<android.widget.TextView: int getOffsetAtCoordinate(int,float)>(i0, f0);

        return i1;
    }

    float convertToLocalHorizontalCoordinate(float)
    {
        android.widget.TextView r0;
        float f0, $f1, $f2, $f3, f4, f5, f6, f7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $f1 = (float) $i0;

        f4 = f0 - $f1;

        f5 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, f4);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        $f2 = (float) $i4;

        f6 = staticinvoke <java.lang.Math: float min(float,float)>($f2, f5);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $f3 = (float) $i5;

        f7 = f6 + $f3;

        return f7;
    }

    int getLineAtCoordinate(float)
    {
        android.widget.TextView r0;
        float f0, $f1, $f2, $f3, f4, f5, f6, f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $f1 = (float) $i0;

        f4 = f0 - $f1;

        f5 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, f4);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        $f2 = (float) $i4;

        f6 = staticinvoke <java.lang.Math: float min(float,float)>($f2, f5);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $f3 = (float) $i5;

        f7 = f6 + $f3;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i6 = (int) f7;

        $i7 = virtualinvoke $r1.<android.text.Layout: int getLineForVertical(int)>($i6);

        return $i7;
    }

    private int getOffsetAtCoordinate(int, float)
    {
        android.widget.TextView r0;
        int i0, $i1;
        float f0, f1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 = virtualinvoke r0.<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>(f0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r1.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i0, f1);

        return $i1;
    }

    public boolean onDragEvent(android.view.DragEvent)
    {
        android.widget.TextView r0;
        android.view.DragEvent r1;
        int i0, $i1;
        android.widget.Editor $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.CharSequence $r6;
        android.text.Spannable $r7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.DragEvent;

        $i1 = virtualinvoke r1.<android.view.DragEvent: int getAction()>();

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label8;
            case 5: goto label4;
            case 6: goto label8;
            default: goto label8;
        };

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean hasInsertionController()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        virtualinvoke r0.<android.widget.TextView: boolean requestFocus()>();

        return 1;

     label5:
        $f0 = virtualinvoke r1.<android.view.DragEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.DragEvent: float getY()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r6;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r7, i0);

        return 1;

     label6:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label7;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void onDrop(android.view.DragEvent)>(r1);

     label7:
        return 1;

     label8:
        return 1;
    }

    boolean isInBatchEditMode()
    {
        android.widget.TextView r0;
        android.widget.Editor$InputMethodState r1;
        android.widget.Editor $r2, $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r1 = $r3.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label4;

        $i0 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r4.<android.widget.Editor: boolean mInBatchEditControllers>;

        return $z0;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.TextDirectionHeuristic $r1;
        android.text.Layout $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        return;
    }

    android.text.TextDirectionHeuristic getTextDirectionHeuristic()
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        int $i0, $i1;
        android.text.TextDirectionHeuristic $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.TextView;

        $z1 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z1 == 0 goto label01;

        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r6;

     label01:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i0 != 1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getTextDirection()>();

        tableswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            default: goto label04;
        };

     label04:
        if z0 == 0 goto label05;

        $r1 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        goto label06;

     label05:
        $r1 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

     label06:
        return $r1;

     label07:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        return $r5;

     label08:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r4;

     label09:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r3;

     label10:
        $r2 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        return $r2;
    }

    public void onResolveDrawables(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.widget.TextView$Drawables $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mLastLayoutDirection>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<android.widget.TextView: int mLastLayoutDirection> = i0;

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        virtualinvoke $r2.<android.widget.TextView$Drawables: void resolveWithLayoutDirection(int)>(i0);

     label2:
        return;
    }

    protected void resetResolvedDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void resetResolvedDrawables()>();

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        return;
    }

    protected void viewClicked(android.view.inputmethod.InputMethodManager)
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>(r0);

     label1:
        return;
    }

    protected void deleteText_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>(i0, i1);

        return;
    }

    protected void replaceText_internal(int, int, java.lang.CharSequence)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        return;
    }

    protected void setSpan_internal(java.lang.Object, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.Object r1;
        int i0, i1, i2;
        java.lang.CharSequence $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    protected void setCursorPosition_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r2, i0, i1);

        return;
    }

    private void createEditorIfNeeded()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor;

        specialinvoke $r2.<android.widget.Editor: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.Editor mEditor> = $r2;

     label1:
        return;
    }

    public java.lang.CharSequence getIterableTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2, $r4;
        boolean $z0;
        android.widget.TextView$BufferType $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r3);

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r2;
    }

    public android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.Spannable r1, r9;
        android.widget.AccessibilityIterators$LineTextSegmentIterator r2;
        java.lang.CharSequence $r3, $r6;
        boolean $z0, $z1;
        android.view.AccessibilityIterators$TextSegmentIterator $r4;
        android.text.Layout $r5, $r7, $r8;
        android.widget.AccessibilityIterators$PageTextSegmentIterator r10;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 4: goto label1;
            case 16: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        r1 = (android.text.Spannable) $r6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r7 == null goto label2;

        r2 = staticinvoke <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>();

        $r8 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        virtualinvoke r2.<android.widget.AccessibilityIterators$LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>(r1, $r8);

        return r2;

     label2:
        goto label4;

     label3:
        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        r9 = (android.text.Spannable) $r3;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z0 != 0 goto label4;

        $r5 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r5 == null goto label4;

        r10 = staticinvoke <android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>();

        virtualinvoke r10.<android.widget.AccessibilityIterators$PageTextSegmentIterator: void initialize(android.widget.TextView)>(r0);

        return r10;

     label4:
        $r4 = specialinvoke r0.<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>(i0);

        return $r4;
    }

    public int getAccessibilitySelectionStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        return $i0;
    }

    public boolean isAccessibilitySelectionExtendable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 1;
    }

    public int getAccessibilitySelectionEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        return $i0;
    }

    public void setAccessibilitySelection(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.CharSequence r1;
        android.widget.Editor $r2, $r5;
        android.text.Spannable $r3, $r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionStart()>();

        if $i2 != i0 goto label1;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionEnd()>();

        if $i6 != i1 goto label1;

        return;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void hideControllers()>();

     label2:
        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        if $i3 < 0 goto label3;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i4 > $i5 goto label3;

        $r4 = (android.text.Spannable) r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, i0, i1);

        goto label4;

     label3:
        $r3 = (android.text.Spannable) r1;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r3);

     label4:
        return;
    }

    static void access$200(android.widget.TextView)
    {
        android.widget.TextView r0;

        r0 := @parameter0: android.widget.TextView;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleLocked()>();

        return;
    }

    static android.text.Layout access$800(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    static android.content.Context access$900(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$1000(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        return $z0;
    }

    static boolean access$1100(android.widget.TextView)
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        return $z0;
    }

    static boolean access$1200(android.widget.TextView)
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>();

        return $z0;
    }

    static void access$1300(android.widget.TextView, java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static android.content.Context access$1400(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static void <clinit>()
    {
        android.graphics.Paint r0, $r5;
        android.graphics.RectF $r1;
        android.text.InputFilter[] $r2;
        android.text.SpannedString $r3;
        int[] $r4;
        android.text.BoringLayout$Metrics $r6;

        <android.widget.TextView: int ID_PASTE> = 16908322;

        <android.widget.TextView: int ID_COPY> = 16908321;

        <android.widget.TextView: int ID_CUT> = 16908320;

        <android.widget.TextView: int ID_SELECT_ALL> = 16908319;

        <android.widget.TextView: int CHANGE_WATCHER_PRIORITY> = 100;

        <android.widget.TextView: int ANIMATED_SCROLL_GAP> = 250;

        <android.widget.TextView: int VERY_WIDE> = 1048576;

        <android.widget.TextView: int PIXELS> = 2;

        <android.widget.TextView: int EMS> = 1;

        <android.widget.TextView: int LINES> = 1;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_FADE> = 2;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS> = 1;

        <android.widget.TextView: int MARQUEE_FADE_NORMAL> = 0;

        <android.widget.TextView: int DECIMAL> = 4;

        <android.widget.TextView: int SIGNED> = 2;

        <android.widget.TextView: int MONOSPACE> = 3;

        <android.widget.TextView: int SERIF> = 2;

        <android.widget.TextView: int SANS> = 1;

        <android.widget.TextView: boolean DEBUG_EXTRACT> = 0;

        <android.widget.TextView: java.lang.String LOG_TAG> = "TextView";

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        <android.widget.TextView: android.graphics.RectF TEMP_RECTF> = $r1;

        $r2 = newarray (android.text.InputFilter)[0];

        <android.widget.TextView: android.text.InputFilter[] NO_FILTERS> = $r2;

        $r3 = new android.text.SpannedString;

        specialinvoke $r3.<android.text.SpannedString: void <init>(java.lang.CharSequence)>("");

        <android.widget.TextView: android.text.Spanned EMPTY_SPANNED> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 16843597;

        <android.widget.TextView: int[] MULTILINE_STATE_SET> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0 = $r5;

        virtualinvoke r0.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r0.<android.graphics.Paint: float measureText(java.lang.String)>("H");

        $r6 = new android.text.BoringLayout$Metrics;

        specialinvoke $r6.<android.text.BoringLayout$Metrics: void <init>()>();

        <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING> = $r6;

        return;
    }
}
