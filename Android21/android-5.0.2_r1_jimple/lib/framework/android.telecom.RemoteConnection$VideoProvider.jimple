public class android.telecom.RemoteConnection$VideoProvider extends java.lang.Object
{
    private final com.android.internal.telecom.IVideoCallback mVideoCallbackDelegate;
    private final android.telecom.VideoCallbackServant mVideoCallbackServant;
    private final com.android.internal.telecom.IVideoProvider mVideoProviderBinder;
    private final java.util.Set mListeners;

    public void <init>(com.android.internal.telecom.IVideoProvider)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        com.android.internal.telecom.IVideoProvider r1, $r9;
        android.telecom.RemoteConnection$VideoProvider$1 $r3;
        android.telecom.VideoCallbackServant $r4, $r8;
        com.android.internal.telecom.IVideoCallback $r5, $r10;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.util.Set $r7;
        android.os.IBinder $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: com.android.internal.telecom.IVideoProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.telecom.RemoteConnection$VideoProvider$1;

        specialinvoke $r3.<android.telecom.RemoteConnection$VideoProvider$1: void <init>(android.telecom.RemoteConnection$VideoProvider)>(r0);

        r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallbackDelegate> = $r3;

        $r4 = new android.telecom.VideoCallbackServant;

        $r5 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallbackDelegate>;

        specialinvoke $r4.<android.telecom.VideoCallbackServant: void <init>(com.android.internal.telecom.IVideoCallback)>($r5);

        r0.<android.telecom.RemoteConnection$VideoProvider: android.telecom.VideoCallbackServant mVideoCallbackServant> = $r4;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.9F, 1);

        $r7 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r6);

        r0.<android.telecom.RemoteConnection$VideoProvider: java.util.Set mListeners> = $r7;

        r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder> = r1;

     label1:
        $r9 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        $r8 = r0.<android.telecom.RemoteConnection$VideoProvider: android.telecom.VideoCallbackServant mVideoCallbackServant>;

        $r10 = virtualinvoke $r8.<android.telecom.VideoCallbackServant: com.android.internal.telecom.IVideoCallback getStub()>();

        $r11 = interfaceinvoke $r10.<com.android.internal.telecom.IVideoCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r9.<com.android.internal.telecom.IVideoProvider: void setVideoCallback(android.os.IBinder)>($r11);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addListener(android.telecom.RemoteConnection$VideoProvider$Listener)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.telecom.RemoteConnection$VideoProvider$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.telecom.RemoteConnection$VideoProvider$Listener;

        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(android.telecom.RemoteConnection$VideoProvider$Listener)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.telecom.RemoteConnection$VideoProvider$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.telecom.RemoteConnection$VideoProvider$Listener;

        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setCamera(java.lang.String)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        java.lang.String r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void setCamera(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPreviewSurface(android.view.Surface)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.view.Surface r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.view.Surface;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void setPreviewSurface(android.view.Surface)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDisplaySurface(android.view.Surface)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.view.Surface r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.view.Surface;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void setDisplaySurface(android.view.Surface)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDeviceOrientation(int)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        int i0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void setDeviceOrientation(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setZoom(float)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        float f0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        f0 := @parameter0: float;

     label1:
        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void setZoom(float)>(f0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSessionModifyRequest(android.telecom.VideoProfile)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.telecom.VideoProfile r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.telecom.VideoProfile;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendSessionModifyResponse(android.telecom.VideoProfile)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        android.telecom.VideoProfile r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: android.telecom.VideoProfile;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestCameraCapabilities()
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

     label1:
        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void requestCameraCapabilities()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestCallDataUsage()
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        com.android.internal.telecom.IVideoProvider $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

     label1:
        $r2 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r2.<com.android.internal.telecom.IVideoProvider: void requestCallDataUsage()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPauseImage(java.lang.String)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        java.lang.String r1;
        com.android.internal.telecom.IVideoProvider $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConnection$VideoProvider;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.telecom.RemoteConnection$VideoProvider: com.android.internal.telecom.IVideoProvider mVideoProviderBinder>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoProvider: void setPauseImage(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static java.util.Set access$000(android.telecom.RemoteConnection$VideoProvider)
    {
        android.telecom.RemoteConnection$VideoProvider r0;
        java.util.Set $r1;

        r0 := @parameter0: android.telecom.RemoteConnection$VideoProvider;

        $r1 = r0.<android.telecom.RemoteConnection$VideoProvider: java.util.Set mListeners>;

        return $r1;
    }
}
