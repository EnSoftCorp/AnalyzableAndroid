class android.net.ConnectivityManager$CallbackHandler extends android.os.Handler
{
    private final java.util.HashMap mCallbackMap;
    private final java.util.concurrent.atomic.AtomicInteger mRefCount;
    private static final java.lang.String TAG;
    private final android.net.ConnectivityManager mCm;
    final android.net.ConnectivityManager this$0;

    void <init>(android.net.ConnectivityManager, android.os.Looper, java.util.HashMap, java.util.concurrent.atomic.AtomicInteger, android.net.ConnectivityManager)
    {
        android.net.ConnectivityManager$CallbackHandler r0;
        android.net.ConnectivityManager r1, r5;
        android.os.Looper r2;
        java.util.HashMap r3;
        java.util.concurrent.atomic.AtomicInteger r4;

        r0 := @this: android.net.ConnectivityManager$CallbackHandler;

        r1 := @parameter0: android.net.ConnectivityManager;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: java.util.HashMap;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        r5 := @parameter4: android.net.ConnectivityManager;

        r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap> = r3;

        r0.<android.net.ConnectivityManager$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mRefCount> = r4;

        r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager mCm> = r5;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.net.ConnectivityManager$CallbackHandler r0;
        android.os.Message r1;
        android.net.NetworkRequest r2, r48, r50, r52, r54, r56, r60, r64;
        android.net.ConnectivityManager$NetworkCallback r3, r49, r51, r53, r55, r57, r61, r66;
        java.util.HashMap r4, $r20, $r21, $r33, $r34, r65;
        java.lang.Throwable r5, r6, r7, $r43, $r46, $r47;
        java.lang.StringBuilder $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r11;
        java.lang.Object $r12, $r13, $r14, $r18, $r22, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r39, $r40, $r41, $r45;
        android.net.Network $r15, $r38, $r42, $r44, r58, r62;
        android.net.NetworkCapabilities $r16, r59;
        android.net.ConnectivityManager $r17;
        android.os.Looper $r19, $r26;
        java.util.concurrent.atomic.AtomicInteger $r23, $r24, r67;
        android.net.LinkProperties r63;

        r0 := @this: android.net.ConnectivityManager$CallbackHandler;

        r1 := @parameter0: android.os.Message;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CM callback handler got msg ");

        $i0 = r1.<android.os.Message: int what>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", $r11);

        $i1 = r1.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 524289: goto label01;
            case 524290: goto label03;
            case 524291: goto label05;
            case 524292: goto label07;
            case 524293: goto label09;
            case 524294: goto label16;
            case 524295: goto label18;
            case 524296: goto label20;
            case 524297: goto label33;
            case 524298: goto label34;
            default: goto label35;
        };

     label01:
        $r12 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r2 = (android.net.NetworkRequest) $r12;

        r3 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r2);

        if r3 == null goto label02;

        $r13 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        $r15 = (android.net.Network) $r13;

        virtualinvoke r3.<android.net.ConnectivityManager$NetworkCallback: void onPreCheck(android.net.Network)>($r15);

        goto label35;

     label02:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for PRECHECK message");

        goto label35;

     label03:
        $r45 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r48 = (android.net.NetworkRequest) $r45;

        r49 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r48);

        if r49 == null goto label04;

        $r41 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        $r42 = (android.net.Network) $r41;

        virtualinvoke r49.<android.net.ConnectivityManager$NetworkCallback: void onAvailable(android.net.Network)>($r42);

        goto label35;

     label04:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for AVAILABLE message");

        goto label35;

     label05:
        $r37 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r50 = (android.net.NetworkRequest) $r37;

        r51 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r50);

        if r51 == null goto label06;

        $r40 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        $r44 = (android.net.Network) $r40;

        $i4 = r1.<android.os.Message: int arg1>;

        virtualinvoke r51.<android.net.ConnectivityManager$NetworkCallback: void onLosing(android.net.Network,int)>($r44, $i4);

        goto label35;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for LOSING message");

        goto label35;

     label07:
        $r36 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r52 = (android.net.NetworkRequest) $r36;

        r53 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r52);

        if r53 == null goto label08;

        $r39 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        $r38 = (android.net.Network) $r39;

        virtualinvoke r53.<android.net.ConnectivityManager$NetworkCallback: void onLost(android.net.Network)>($r38);

        goto label35;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for LOST message");

        goto label35;

     label09:
        $r35 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r54 = (android.net.NetworkRequest) $r35;

        $r34 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        r4 = $r34;

        entermonitor $r34;

     label10:
        $r33 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        $r32 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r54);

        r55 = (android.net.ConnectivityManager$NetworkCallback) $r32;

        exitmonitor r4;

     label11:
        goto label14;

     label12:
        $r47 := @caughtexception;

        r5 = $r47;

        exitmonitor r4;

     label13:
        throw r5;

     label14:
        if r55 == null goto label15;

        virtualinvoke r55.<android.net.ConnectivityManager$NetworkCallback: void onUnavailable()>();

        goto label35;

     label15:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for UNAVAIL message");

        goto label35;

     label16:
        $r28 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r56 = (android.net.NetworkRequest) $r28;

        r57 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r56);

        if r57 == null goto label17;

        $r30 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        r58 = (android.net.Network) $r30;

        $r31 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkCapabilities");

        r59 = (android.net.NetworkCapabilities) $r31;

        virtualinvoke r57.<android.net.ConnectivityManager$NetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>(r58, r59);

        goto label35;

     label17:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for CAP_CHANGED message");

        goto label35;

     label18:
        $r25 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r60 = (android.net.NetworkRequest) $r25;

        r61 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)>(r60);

        if r61 == null goto label19;

        $r29 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/Network");

        r62 = (android.net.Network) $r29;

        $r27 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/LinkProperties");

        r63 = (android.net.LinkProperties) $r27;

        virtualinvoke r61.<android.net.ConnectivityManager$NetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>(r62, r63);

        goto label35;

     label19:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for IP_CHANGED message");

        goto label35;

     label20:
        $r18 = specialinvoke r0.<android.net.ConnectivityManager$CallbackHandler: java.lang.Object getObject(android.os.Message,java.lang.Class)>(r1, class "android/net/NetworkRequest");

        r64 = (android.net.NetworkRequest) $r18;

        $r21 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        r65 = $r21;

        entermonitor $r21;

     label21:
        $r20 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        $r22 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r64);

        r66 = (android.net.ConnectivityManager$NetworkCallback) $r22;

        exitmonitor r65;

     label22:
        goto label25;

     label23:
        $r43 := @caughtexception;

        r6 = $r43;

        exitmonitor r65;

     label24:
        throw r6;

     label25:
        if r66 == null goto label32;

        $r24 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mRefCount>;

        r67 = $r24;

        entermonitor $r24;

     label26:
        $r23 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mRefCount>;

        $i3 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i3 != 0 goto label27;

        $r26 = virtualinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.os.Looper getLooper()>();

        virtualinvoke $r26.<android.os.Looper: void quit()>();

     label27:
        exitmonitor r67;

     label28:
        goto label31;

     label29:
        $r46 := @caughtexception;

        r7 = $r46;

        exitmonitor r67;

     label30:
        throw r7;

     label31:
        goto label35;

     label32:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "callback not found for CANCELED message");

        goto label35;

     label33:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ConnectivityManager.CallbackHandler", "Listener quiting");

        $r19 = virtualinvoke r0.<android.net.ConnectivityManager$CallbackHandler: android.os.Looper getLooper()>();

        virtualinvoke $r19.<android.os.Looper: void quit()>();

        goto label35;

     label34:
        $r17 = r0.<android.net.ConnectivityManager$CallbackHandler: android.net.ConnectivityManager this$0>;

        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        $r16 = (android.net.NetworkCapabilities) $r14;

        $i2 = r1.<android.os.Message: int arg1>;

        staticinvoke <android.net.ConnectivityManager: void access$100(android.net.ConnectivityManager,android.net.NetworkCapabilities,int)>($r17, $r16, $i2);

     label35:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.lang.Throwable from label26 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    private java.lang.Object getObject(android.os.Message, java.lang.Class)
    {
        android.net.ConnectivityManager$CallbackHandler r0;
        android.os.Message r1;
        java.lang.Class r2;
        android.os.Bundle $r3;
        java.lang.String $r4;
        android.os.Parcelable $r5;

        r0 := @this: android.net.ConnectivityManager$CallbackHandler;

        r1 := @parameter0: android.os.Message;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r4);

        return $r5;
    }

    private android.net.ConnectivityManager$NetworkCallback getCallbacks(android.net.NetworkRequest)
    {
        android.net.ConnectivityManager$CallbackHandler r0;
        android.net.NetworkRequest r1;
        java.util.HashMap r2, $r4, $r5;
        java.lang.Throwable r3, $r8;
        java.lang.Object $r6;
        android.net.ConnectivityManager$NetworkCallback $r7;

        r0 := @this: android.net.ConnectivityManager$CallbackHandler;

        r1 := @parameter0: android.net.NetworkRequest;

        $r4 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.net.ConnectivityManager$CallbackHandler: java.util.HashMap mCallbackMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.net.ConnectivityManager$NetworkCallback) $r6;

        exitmonitor r2;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <android.net.ConnectivityManager$CallbackHandler: java.lang.String TAG> = "ConnectivityManager.CallbackHandler";

        return;
    }
}
