public abstract class android.hardware.hdmi.HdmiClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    protected final android.hardware.hdmi.IHdmiControlService mService;

    protected abstract int getDeviceType();

    public void <init>(android.hardware.hdmi.IHdmiControlService)
    {
        android.hardware.hdmi.HdmiClient r0;
        android.hardware.hdmi.IHdmiControlService r1;

        r0 := @this: android.hardware.hdmi.HdmiClient;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiControlService mService> = r1;

        return;
    }

    public android.hardware.hdmi.HdmiDeviceInfo getActiveSource()
    {
        android.hardware.hdmi.HdmiClient r0;
        android.os.RemoteException r1, $r4;
        android.hardware.hdmi.IHdmiControlService $r2;
        android.hardware.hdmi.HdmiDeviceInfo $r3;

        r0 := @this: android.hardware.hdmi.HdmiClient;

     label1:
        $r2 = r0.<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r3 = interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiClient", "getActiveSource threw exception ", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendKeyEvent(int, boolean)
    {
        android.hardware.hdmi.HdmiClient r0;
        int i0, $i1;
        boolean z0;
        android.os.RemoteException r1, $r3;
        android.hardware.hdmi.IHdmiControlService $r2;

        r0 := @this: android.hardware.hdmi.HdmiClient;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiControlService mService>;

        $i1 = virtualinvoke r0.<android.hardware.hdmi.HdmiClient: int getDeviceType()>();

        interfaceinvoke $r2.<android.hardware.hdmi.IHdmiControlService: void sendKeyEvent(int,int,boolean)>($i1, i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiClient", "sendKeyEvent threw exception ", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendVendorCommand(int, byte[], boolean)
    {
        android.hardware.hdmi.HdmiClient r0;
        int i0, $i1;
        byte[] r1;
        boolean z0;
        android.os.RemoteException r2, $r4;
        android.hardware.hdmi.IHdmiControlService $r3;

        r0 := @this: android.hardware.hdmi.HdmiClient;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        z0 := @parameter2: boolean;

     label1:
        $r3 = r0.<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiControlService mService>;

        $i1 = virtualinvoke r0.<android.hardware.hdmi.HdmiClient: int getDeviceType()>();

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlService: void sendVendorCommand(int,int,byte[],boolean)>($i1, i0, r1, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiClient", "failed to send vendor command: ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addVendorCommandListener(android.hardware.hdmi.HdmiControlManager$VendorCommandListener)
    {
        android.hardware.hdmi.HdmiClient r0;
        android.hardware.hdmi.HdmiControlManager$VendorCommandListener r1;
        android.os.RemoteException r2, $r6;
        android.hardware.hdmi.IHdmiControlService $r3;
        android.hardware.hdmi.IHdmiVendorCommandListener $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.hardware.hdmi.HdmiClient;

        r1 := @parameter0: android.hardware.hdmi.HdmiControlManager$VendorCommandListener;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener cannot be null");

        throw $r5;

     label1:
        $r3 = r0.<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r4 = staticinvoke <android.hardware.hdmi.HdmiClient: android.hardware.hdmi.IHdmiVendorCommandListener getListenerWrapper(android.hardware.hdmi.HdmiControlManager$VendorCommandListener)>(r1);

        $i0 = virtualinvoke r0.<android.hardware.hdmi.HdmiClient: int getDeviceType()>();

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlService: void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>($r4, $i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiClient", "failed to add vendor command listener: ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static android.hardware.hdmi.IHdmiVendorCommandListener getListenerWrapper(android.hardware.hdmi.HdmiControlManager$VendorCommandListener)
    {
        android.hardware.hdmi.HdmiControlManager$VendorCommandListener r0;
        android.hardware.hdmi.HdmiClient$1 $r1;

        r0 := @parameter0: android.hardware.hdmi.HdmiControlManager$VendorCommandListener;

        $r1 = new android.hardware.hdmi.HdmiClient$1;

        specialinvoke $r1.<android.hardware.hdmi.HdmiClient$1: void <init>(android.hardware.hdmi.HdmiControlManager$VendorCommandListener)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiClient: java.lang.String TAG> = "HdmiClient";

        return;
    }
}
