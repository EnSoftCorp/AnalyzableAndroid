class android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher extends java.lang.Object
{
    private static final int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE;
    private final java.util.ArrayList mTempViewList;
    final android.view.AccessibilityInteractionController this$0;

    private void <init>(android.view.AccessibilityInteractionController)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        java.util.ArrayList $r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList> = $r2;

        return;
    }

    public void prefetchAccessibilityNodeInfos(android.view.View, int, int, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        android.view.accessibility.AccessibilityNodeInfo r4, r5;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r3 != null goto label4;

        r4 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r4 == null goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        $i6 = i1 & 1;

        if $i6 == 0 goto label1;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label1:
        $i5 = i1 & 2;

        if $i5 == 0 goto label2;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label2:
        $i7 = i1 & 4;

        if $i7 == 0 goto label3;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r1, r2);

     label3:
        goto label9;

     label4:
        if i0 == 2147483647 goto label5;

        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i0);

        goto label6;

     label5:
        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label6:
        if r5 == null goto label9;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        $i2 = i1 & 1;

        if $i2 == 0 goto label7;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r5, r1, r3, r2);

     label7:
        $i3 = i1 & 2;

        if $i3 == 0 goto label8;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r5, r1, r3, r2);

     label8:
        $i4 = i1 & 4;

        if $i4 == 0 goto label9;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r5, r3, r2);

     label9:
        return;
    }

    private void enforceNodeTreeConsistent(java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        java.util.List r1;
        android.util.LongSparseArray r2, $r10;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, i11;
        android.view.accessibility.AccessibilityNodeInfo r3, r4, r5, r8, r9, r54, r55, r56;
        java.util.HashSet r6, $r11;
        java.util.LinkedList r7, $r13;
        long l4, $l9, $l10;
        java.lang.Object $r12, $r14, $r19, $r22, $r52, $r53;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r15, $r17, $r18, $r23, $r24, $r25, $r26, $r30, $r33, $r35, $r36, $r37, $r38, $r41, $r42, $r46, $r48, $r49;
        java.lang.IllegalStateException $r16, $r21, $r31, $r43;
        java.lang.String $r20, $r32, $r44, $r47;
        android.view.View$AttachInfo $r27, $r39, $r45;
        android.view.AccessibilityInteractionController $r28, $r34, $r50;
        android.view.ViewRootImpl $r29, $r40, $r51;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: java.util.List;

        $r10 = new android.util.LongSparseArray;

        specialinvoke $r10.<android.util.LongSparseArray: void <init>()>();

        r2 = $r10;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r53 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.view.accessibility.AccessibilityNodeInfo) $r53;

        $l10 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        virtualinvoke r2.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l10, r3);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r12 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(0);

        r54 = (android.view.accessibility.AccessibilityNodeInfo) $r12;

        r55 = r54;

     label03:
        if r55 == null goto label04;

        r54 = r55;

        $l9 = virtualinvoke r55.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $r52 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>($l9);

        r55 = (android.view.accessibility.AccessibilityNodeInfo) $r52;

        goto label03;

     label04:
        r4 = null;

        r5 = null;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r6 = $r11;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r7 = $r13;

        interfaceinvoke r7.<java.util.Queue: boolean add(java.lang.Object)>(r54);

     label05:
        $z1 = interfaceinvoke r7.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label14;

        $r19 = interfaceinvoke r7.<java.util.Queue: java.lang.Object poll()>();

        r8 = (android.view.accessibility.AccessibilityNodeInfo) $r19;

        $z4 = virtualinvoke r6.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

        if $z4 != 0 goto label06;

        $r43 = new java.lang.IllegalStateException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate node: ");

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r50 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r51 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r50);

        $r45 = $r51.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i8 = $r45.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        $r46 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r47);

        throw $r43;

     label06:
        $z5 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>();

        if $z5 == 0 goto label08;

        if r4 == null goto label07;

        $r31 = new java.lang.IllegalStateException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate accessibility focus:");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r34 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r40 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r34);

        $r39 = $r40.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i7 = $r39.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        throw $r31;

     label07:
        r4 = r8;

     label08:
        $z3 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        if $z3 == 0 goto label10;

        if r5 == null goto label09;

        $r21 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate input focus: ");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in window:");

        $r28 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $r29 = staticinvoke <android.view.AccessibilityInteractionController: android.view.ViewRootImpl access$200(android.view.AccessibilityInteractionController)>($r28);

        $r27 = $r29.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $i6 = $r27.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        $r33 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r32);

        throw $r21;

     label09:
        r5 = r8;

     label10:
        i2 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i3 = 0;

     label11:
        if i3 >= i2 goto label13;

        l4 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i3);

        $r22 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l4);

        r9 = (android.view.accessibility.AccessibilityNodeInfo) $r22;

        if r9 == null goto label12;

        interfaceinvoke r7.<java.util.Queue: boolean add(java.lang.Object)>(r9);

     label12:
        i3 = i3 + 1;

        goto label11;

     label13:
        goto label05;

     label14:
        $i5 = virtualinvoke r2.<android.util.LongSparseArray: int size()>();

        i11 = $i5 - 1;

     label15:
        if i11 < 0 goto label17;

        $r14 = virtualinvoke r2.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i11);

        r56 = (android.view.accessibility.AccessibilityNodeInfo) $r14;

        $z2 = virtualinvoke r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r56);

        if $z2 != 0 goto label16;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected node: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label16:
        i11 = i11 + -1;

        goto label15;

     label17:
        return;
    }

    private void prefetchPredecessorsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, r4;
        java.util.List r2;
        android.view.ViewParent r3;
        android.view.accessibility.AccessibilityNodeInfo r5;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

     label1:
        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= 50 goto label3;

        r4 = (android.view.View) r3;

        r5 = virtualinvoke r4.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r5 == null goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        r3 = interfaceinvoke r3.<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>();

        goto label1;

     label3:
        return;
    }

    private void prefetchSiblingsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, r6;
        java.util.List r2;
        android.view.ViewParent r3;
        android.view.ViewGroup r4;
        java.util.ArrayList r5;
        int i0, i1, $i2, $i3, $i4;
        android.view.accessibility.AccessibilityNodeProvider r7;
        java.lang.Throwable r8, $r11;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.view.AccessibilityInteractionController $r10;
        android.view.accessibility.AccessibilityNodeInfo r12;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        $z0 = r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label11;

        r4 = (android.view.ViewGroup) r3;

        r5 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

     label01:
        virtualinvoke r4.<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>(r5);

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label08;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 < 50 goto label04;

     label03:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        return;

     label04:
        $r9 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (android.view.View) $r9;

        $i3 = virtualinvoke r6.<android.view.View: int getAccessibilityViewId()>();

        $i4 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

        if $i3 == $i4 goto label07;

        $r10 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z1 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$300(android.view.AccessibilityInteractionController,android.view.View)>($r10, r6);

        if $z1 == 0 goto label07;

        r7 = virtualinvoke r6.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r7 != null goto label05;

        r12 = virtualinvoke r6.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        goto label06;

     label05:
        r12 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label06:
        if r12 == null goto label07;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12);

     label07:
        i1 = i1 + 1;

        goto label02;

     label08:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        goto label11;

     label09:
        $r11 := @caughtexception;

        r8 = $r11;

     label10:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        throw r8;

     label11:
        return;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void prefetchDescendantsOfRealNode(android.view.View, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.View r1, r5, r22;
        java.util.List r2;
        java.util.HashMap r3, $r9;
        java.util.ArrayList r4;
        int i0, i1, $i2, $i3;
        android.view.accessibility.AccessibilityNodeProvider r6, r24;
        android.view.accessibility.AccessibilityNodeInfo r7, r19, r23;
        java.lang.Throwable r8, $r18;
        boolean $z0, $z1, $z2;
        java.util.Set $r10;
        java.lang.Object $r11, $r12, $r13, $r14;
        android.view.AccessibilityInteractionController $r15;
        java.util.Iterator r20;
        java.util.Map$Entry r21;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.util.List;

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r3 = $r9;

        r4 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: java.util.ArrayList mTempViewList>;

        virtualinvoke r4.<java.util.ArrayList: void clear()>();

     label02:
        virtualinvoke r1.<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>(r4);

        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label03:
        if i1 >= i0 goto label09;

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 < 50 goto label05;

     label04:
        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        return;

     label05:
        $r14 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (android.view.View) $r14;

        $r15 = r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: android.view.AccessibilityInteractionController this$0>;

        $z2 = staticinvoke <android.view.AccessibilityInteractionController: boolean access$300(android.view.AccessibilityInteractionController,android.view.View)>($r15, r5);

        if $z2 == 0 goto label08;

        r6 = virtualinvoke r5.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r6 != null goto label07;

        r7 = virtualinvoke r5.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        if r7 == null goto label06;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, null);

     label06:
        goto label08;

     label07:
        r19 = virtualinvoke r6.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

        if r19 == null goto label08;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r19);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r19);

     label08:
        i1 = i1 + 1;

        goto label03;

     label09:
        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        goto label12;

     label10:
        $r18 := @caughtexception;

        r8 = $r18;

     label11:
        virtualinvoke r4.<java.util.ArrayList: void clear()>();

        throw r8;

     label12:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 >= 50 goto label16;

        $r10 = virtualinvoke r3.<java.util.HashMap: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r12 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r12;

        $r11 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r22 = (android.view.View) $r11;

        $r13 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (android.view.accessibility.AccessibilityNodeInfo) $r13;

        if r23 != null goto label14;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfRealNode(android.view.View,java.util.List)>(r22, r2);

        goto label15;

     label14:
        r24 = virtualinvoke r22.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r23, r24, r2);

     label15:
        goto label13;

     label16:
        return;

        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void prefetchPredecessorsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r5;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        java.util.List r4;
        long l0;
        int i1, i2, $i3, $i4;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r4 := @parameter3: java.util.List;

        l0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

     label1:
        if i1 == 2147483647 goto label9;

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i3 < 50 goto label2;

        return;

     label2:
        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        if i2 != 2147483647 goto label3;

        $i4 = virtualinvoke r2.<android.view.View: int getAccessibilityViewId()>();

        if i1 != $i4 goto label7;

     label3:
        if i2 == 2147483647 goto label4;

        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i2);

        goto label5;

     label4:
        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label5:
        if r5 == null goto label6;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label6:
        l0 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        goto label8;

     label7:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchPredecessorsOfRealNode(android.view.View,java.util.List)>(r2, r4);

        return;

     label8:
        goto label1;

     label9:
        return;
    }

    private void prefetchSiblingsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.View, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r5, r6;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeProvider r3;
        java.util.List r4;
        long l0, l5, $l8;
        int i1, i2, i3, i4, i6, $i7, $i10;
        byte $b9;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityNodeProvider;

        r4 := @parameter3: java.util.List;

        l0 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        if i2 != 2147483647 goto label1;

        $i10 = virtualinvoke r2.<android.view.View: int getAccessibilityViewId()>();

        if i1 != $i10 goto label8;

     label1:
        if i2 == 2147483647 goto label2;

        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i2);

        goto label3;

     label2:
        r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

     label3:
        if r5 == null goto label7;

        i3 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i4 = 0;

     label4:
        if i4 >= i3 goto label7;

        $i7 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i7 < 50 goto label5;

        return;

     label5:
        l5 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i4);

        $l8 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $b9 = l5 cmp $l8;

        if $b9 == 0 goto label6;

        i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l5);

        r6 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(i6);

        if r6 == null goto label6;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label6:
        i4 = i4 + 1;

        goto label4;

     label7:
        goto label9;

     label8:
        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchSiblingsOfRealNode(android.view.View,java.util.List)>(r2, r4);

     label9:
        return;
    }

    private void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo, android.view.accessibility.AccessibilityNodeProvider, java.util.List)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r4, r5;
        android.view.accessibility.AccessibilityNodeProvider r2;
        java.util.List r3;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, i9, i10;
        long l3;
        java.lang.Object $r6;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeProvider;

        r3 := @parameter2: java.util.List;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $i7 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i7 < 50 goto label2;

        return;

     label2:
        l3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>(i2);

        $i8 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l3);

        r5 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>($i8);

        if r5 == null goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i4 >= 50 goto label6;

        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        i9 = $i5 - i0;

        i10 = 0;

     label5:
        if i10 >= i9 goto label6;

        $i6 = i0 + i10;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i6);

        r4 = (android.view.accessibility.AccessibilityNodeInfo) $r6;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchDescendantsOfVirtualNode(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeProvider,java.util.List)>(r4, r2, r3);

        i10 = i10 + 1;

        goto label5;

     label6:
        return;
    }

    void <init>(android.view.AccessibilityInteractionController, android.view.AccessibilityInteractionController$1)
    {
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher r0;
        android.view.AccessibilityInteractionController r1;
        android.view.AccessibilityInteractionController$1 r2;

        r0 := @this: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        r1 := @parameter0: android.view.AccessibilityInteractionController;

        r2 := @parameter1: android.view.AccessibilityInteractionController$1;

        specialinvoke r0.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: int MAX_ACCESSIBILITY_NODE_INFO_BATCH_SIZE> = 50;

        return;
    }
}
