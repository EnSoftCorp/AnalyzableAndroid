class android.speech.tts.AudioPlaybackHandler extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private final java.util.concurrent.LinkedBlockingQueue mQueue;
    private final java.lang.Thread mHandlerThread;
    private volatile android.speech.tts.PlaybackQueueItem mCurrentWorkItem;

    void <init>()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.util.concurrent.LinkedBlockingQueue $r1;
        java.lang.Thread $r2;
        android.speech.tts.AudioPlaybackHandler$MessageLoop $r3;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue> = $r1;

        r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem> = null;

        $r2 = new java.lang.Thread;

        $r3 = new android.speech.tts.AudioPlaybackHandler$MessageLoop;

        specialinvoke $r3.<android.speech.tts.AudioPlaybackHandler$MessageLoop: void <init>(android.speech.tts.AudioPlaybackHandler,android.speech.tts.AudioPlaybackHandler$1)>(r0, null);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, "TTS.AudioPlaybackThread");

        r0.<android.speech.tts.AudioPlaybackHandler: java.lang.Thread mHandlerThread> = $r2;

        return;
    }

    public void start()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.lang.Thread $r1;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: java.lang.Thread mHandlerThread>;

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        return;
    }

    private void stop(android.speech.tts.PlaybackQueueItem)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        android.speech.tts.PlaybackQueueItem r1;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        r1 := @parameter0: android.speech.tts.PlaybackQueueItem;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.speech.tts.PlaybackQueueItem: void stop(int)>(-2);

        return;
    }

    public void enqueue(android.speech.tts.PlaybackQueueItem)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        android.speech.tts.PlaybackQueueItem r1;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.lang.InterruptedException $r4;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        r1 := @parameter0: android.speech.tts.PlaybackQueueItem;

     label1:
        $r3 = r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue>;

        virtualinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void stopForApp(java.lang.Object)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.lang.Object r1, $r3;
        android.speech.tts.PlaybackQueueItem r2;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void removeWorkItemsFor(java.lang.Object)>(r1);

        r2 = r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.speech.tts.PlaybackQueueItem: java.lang.Object getCallerIdentity()>();

        if $r3 != r1 goto label1;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void stop(android.speech.tts.PlaybackQueueItem)>(r2);

     label1:
        return;
    }

    public void stop()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        android.speech.tts.PlaybackQueueItem $r1;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void removeAllMessages()>();

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem>;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void stop(android.speech.tts.PlaybackQueueItem)>($r1);

        return;
    }

    public boolean isSpeaking()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.util.concurrent.LinkedBlockingQueue $r1;
        java.lang.Object $r2;
        android.speech.tts.PlaybackQueueItem $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object peek()>();

        if $r2 != null goto label1;

        $r3 = r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem>;

        if $r3 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void quit()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        android.speech.tts.PlaybackQueueItem $r1;
        java.lang.Thread $r2;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void removeAllMessages()>();

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem>;

        specialinvoke r0.<android.speech.tts.AudioPlaybackHandler: void stop(android.speech.tts.PlaybackQueueItem)>($r1);

        $r2 = r0.<android.speech.tts.AudioPlaybackHandler: java.lang.Thread mHandlerThread>;

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        return;
    }

    private void removeAllMessages()
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.util.concurrent.LinkedBlockingQueue $r1;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue>;

        virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void clear()>();

        return;
    }

    private void removeWorkItemsFor(java.lang.Object)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.lang.Object r1, $r5, $r6;
        java.util.Iterator r2;
        android.speech.tts.PlaybackQueueItem r3;
        java.util.concurrent.LinkedBlockingQueue $r4;
        boolean $z0;

        r0 := @this: android.speech.tts.AudioPlaybackHandler;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue>;

        r2 = virtualinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.speech.tts.PlaybackQueueItem) $r5;

        $r6 = virtualinvoke r3.<android.speech.tts.PlaybackQueueItem: java.lang.Object getCallerIdentity()>();

        if $r6 != r1 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    static java.util.concurrent.LinkedBlockingQueue access$100(android.speech.tts.AudioPlaybackHandler)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        java.util.concurrent.LinkedBlockingQueue $r1;

        r0 := @parameter0: android.speech.tts.AudioPlaybackHandler;

        $r1 = r0.<android.speech.tts.AudioPlaybackHandler: java.util.concurrent.LinkedBlockingQueue mQueue>;

        return $r1;
    }

    static android.speech.tts.PlaybackQueueItem access$202(android.speech.tts.AudioPlaybackHandler, android.speech.tts.PlaybackQueueItem)
    {
        android.speech.tts.AudioPlaybackHandler r0;
        android.speech.tts.PlaybackQueueItem r1;

        r0 := @parameter0: android.speech.tts.AudioPlaybackHandler;

        r1 := @parameter1: android.speech.tts.PlaybackQueueItem;

        r0.<android.speech.tts.AudioPlaybackHandler: android.speech.tts.PlaybackQueueItem mCurrentWorkItem> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <android.speech.tts.AudioPlaybackHandler: boolean DBG> = 0;

        <android.speech.tts.AudioPlaybackHandler: java.lang.String TAG> = "TTS.AudioPlaybackHandler";

        return;
    }
}
