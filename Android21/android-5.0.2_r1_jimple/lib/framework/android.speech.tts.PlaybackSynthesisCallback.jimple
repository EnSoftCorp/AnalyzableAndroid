class android.speech.tts.PlaybackSynthesisCallback extends android.speech.tts.AbstractSynthesisCallback
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final int MIN_AUDIO_BUFFER_SIZE;
    private final android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams;
    private final java.lang.Object mStateLock;
    private final android.speech.tts.AudioPlaybackHandler mAudioTrackHandler;
    private android.speech.tts.SynthesisPlaybackQueueItem mItem;
    private volatile boolean mDone;
    protected int mStatusCode;
    private final android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher;
    private final java.lang.Object mCallerIdentity;
    private final android.speech.tts.AbstractEventLogger mLogger;

    void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams, android.speech.tts.AudioPlaybackHandler, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.AbstractEventLogger, boolean)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        android.speech.tts.TextToSpeechService$AudioOutputParams r1;
        android.speech.tts.AudioPlaybackHandler r2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r3;
        java.lang.Object r4, $r6;
        android.speech.tts.AbstractEventLogger r5;
        boolean z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$AudioOutputParams;

        r2 := @parameter1: android.speech.tts.AudioPlaybackHandler;

        r3 := @parameter2: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: android.speech.tts.AbstractEventLogger;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.speech.tts.AbstractSynthesisCallback: void <init>(boolean)>(z0);

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock> = $r6;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = null;

        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 0;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams> = r1;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler> = r2;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher> = r3;

        r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity> = r4;

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger> = r5;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = 0;

        return;
    }

    void stop()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        android.speech.tts.SynthesisPlaybackQueueItem r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        int $i0;
        android.speech.tts.AbstractEventLogger $r5;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r6;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r2 = $r4;

        entermonitor $r4;

     label01:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $i0 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i0 != -2 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "stop() called twice");

        exitmonitor r2;

     label04:
        return;

     label05:
        r1 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -2;

        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label08:
        throw r3;

     label09:
        if r1 == null goto label10;

        virtualinvoke r1.<android.speech.tts.SynthesisPlaybackQueueItem: void stop(int)>(-2);

        goto label11;

     label10:
        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r5.<android.speech.tts.AbstractEventLogger: void onCompleted(int)>(-2);

        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r6.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStop()>();

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public int getMaxBufferSize()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        return 8192;
    }

    public boolean hasStarted()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.speech.tts.SynthesisPlaybackQueueItem $r4;
        boolean $z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean hasFinished()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int start(int, int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0, i1, i2, i3, $i4, $i5, $i7;
        java.lang.Object r1, $r4, $r8;
        android.speech.tts.SynthesisPlaybackQueueItem r2, $r5, $r6;
        java.lang.Throwable r3, $r16;
        android.speech.tts.AbstractEventLogger $r7;
        android.speech.tts.TextToSpeechService$AudioOutputParams $r9;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r10;
        android.speech.tts.AudioPlaybackHandler $r11;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.String $r14;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = staticinvoke <android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>(i2);

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        if i3 != 0 goto label03;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported number of channels :");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", $r14);

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $i4 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i4 != -2 goto label05;

        $i7 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r1;

     label04:
        return $i7;

     label05:
        $i5 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i5 == 0 goto label07;

        exitmonitor r1;

     label06:
        return -1;

     label07:
        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r5 == null goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "Start called twice");

        exitmonitor r1;

     label08:
        return -1;

     label09:
        $r6 = new android.speech.tts.SynthesisPlaybackQueueItem;

        $r9 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $r10 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $r8 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mCallerIdentity>;

        $r7 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        specialinvoke $r6.<android.speech.tts.SynthesisPlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams,int,int,int,android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object,android.speech.tts.AbstractEventLogger)>($r9, i0, i1, i2, $r10, $r8, $r7);

        r2 = $r6;

        $r11 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AudioPlaybackHandler mAudioTrackHandler>;

        virtualinvoke $r11.<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>(r2);

        r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem> = r2;

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r1;

     label12:
        throw r3;

     label13:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public int audioAvailable(byte[], int, int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        byte[] r1, r20;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2, r4, $r13, $r16;
        java.lang.Throwable r3, r5, $r15, $r18;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;
        android.speech.tts.SynthesisPlaybackQueueItem $r12, r19;
        android.speech.tts.AbstractEventLogger $r14;
        java.lang.InterruptedException $r17;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>();

        if i1 > $i2 goto label01;

        if i1 > 0 goto label02;

     label01:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("buffer is too large or of zero length (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label02:
        $r13 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r2 = $r13;

        entermonitor $r13;

     label03:
        $r12 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r12 != null goto label05;

        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r2;

     label04:
        return -1;

     label05:
        $i4 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i4 == 0 goto label07;

        exitmonitor r2;

     label06:
        return -1;

     label07:
        $i3 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i3 != -2 goto label09;

        $i5 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r2;

     label08:
        return $i5;

     label09:
        r19 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        r3 = $r18;

        exitmonitor r2;

     label12:
        throw r3;

     label13:
        r20 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, r20, 0, i1);

     label14:
        virtualinvoke r19.<android.speech.tts.SynthesisPlaybackQueueItem: void put(byte[])>(r20);

     label15:
        goto label21;

     label16:
        $r17 := @caughtexception;

        $r16 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r4 = $r16;

        entermonitor $r16;

     label17:
        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = -5;

        exitmonitor r4;

     label18:
        return -1;

     label19:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r4;

     label20:
        throw r5;

     label21:
        $r14 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r14.<android.speech.tts.AbstractEventLogger: void onEngineDataReceived()>();

        return 0;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.InterruptedException from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public int done()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r9;
        boolean $z0;
        int $i0, $i1, $i2, $i3, i4;
        android.speech.tts.SynthesisPlaybackQueueItem $r4, r10;
        android.speech.tts.AbstractEventLogger $r5, $r7;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher $r6, $r8;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "Duplicate call to done()");

        exitmonitor r1;

     label02:
        return -1;

     label03:
        $i0 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i0 != -2 goto label05;

        $i3 = virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: int errorCodeOnStop()>();

        exitmonitor r1;

     label04:
        return $i3;

     label05:
        r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone> = 1;

        $r4 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        if $r4 != null goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PlaybackSynthesisRequest", "done() was called before start() call");

        $i1 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        if $i1 != 0 goto label06;

        $r8 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        interfaceinvoke $r8.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnSuccess()>();

        goto label07;

     label06:
        $r6 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher mDispatcher>;

        $i2 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        interfaceinvoke $r6.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>($i2);

     label07:
        $r7 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r7.<android.speech.tts.AbstractEventLogger: void onEngineComplete()>();

        exitmonitor r1;

     label08:
        return -1;

     label09:
        r10 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.SynthesisPlaybackQueueItem mItem>;

        i4 = r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode>;

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label12:
        throw r2;

     label13:
        if i4 != 0 goto label14;

        virtualinvoke r10.<android.speech.tts.SynthesisPlaybackQueueItem: void done()>();

        goto label15;

     label14:
        virtualinvoke r10.<android.speech.tts.SynthesisPlaybackQueueItem: void stop(int)>(i4);

     label15:
        $r5 = r0.<android.speech.tts.PlaybackSynthesisCallback: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r5.<android.speech.tts.AbstractEventLogger: void onEngineComplete()>();

        return 0;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void error()
    {
        android.speech.tts.PlaybackSynthesisCallback r0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        virtualinvoke r0.<android.speech.tts.PlaybackSynthesisCallback: void error(int)>(-3);

        return;
    }

    public void error(int)
    {
        android.speech.tts.PlaybackSynthesisCallback r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.speech.tts.PlaybackSynthesisCallback;

        i0 := @parameter0: int;

        $r3 = r0.<android.speech.tts.PlaybackSynthesisCallback: java.lang.Object mStateLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<android.speech.tts.PlaybackSynthesisCallback: boolean mDone>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.speech.tts.PlaybackSynthesisCallback: int mStatusCode> = i0;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <android.speech.tts.PlaybackSynthesisCallback: int MIN_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.PlaybackSynthesisCallback: boolean DBG> = 0;

        <android.speech.tts.PlaybackSynthesisCallback: java.lang.String TAG> = "PlaybackSynthesisRequest";

        return;
    }
}
