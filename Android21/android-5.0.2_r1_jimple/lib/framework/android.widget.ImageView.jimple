public class android.widget.ImageView extends android.view.View
{
    private android.net.Uri mUri;
    private int mResource;
    private android.graphics.Matrix mMatrix;
    private android.widget.ImageView$ScaleType mScaleType;
    private boolean mHaveFrame;
    private boolean mAdjustViewBounds;
    private int mMaxWidth;
    private int mMaxHeight;
    private android.graphics.ColorFilter mColorFilter;
    private boolean mHasColorFilter;
    private android.graphics.Xfermode mXfermode;
    private int mAlpha;
    private int mViewAlphaScale;
    private boolean mColorMod;
    private android.graphics.drawable.Drawable mDrawable;
    private android.content.res.ColorStateList mDrawableTintList;
    private android.graphics.PorterDuff$Mode mDrawableTintMode;
    private boolean mHasDrawableTint;
    private boolean mHasDrawableTintMode;
    private int[] mState;
    private boolean mMergeState;
    private int mLevel;
    private int mDrawableWidth;
    private int mDrawableHeight;
    private android.graphics.Matrix mDrawMatrix;
    private android.graphics.RectF mTempSrc;
    private android.graphics.RectF mTempDst;
    private boolean mCropToPadding;
    private int mBaseline;
    private boolean mBaselineAlignBottom;
    private boolean mAdjustViewBoundsCompat;
    private static final android.widget.ImageView$ScaleType[] sScaleTypeArray;
    private static final android.graphics.Matrix$ScaleToFit[] sS2FArray;

    public void <init>(android.content.Context)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.graphics.RectF $r2, $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = null;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 0;

        r0.<android.widget.ImageView: int mAlpha> = 255;

        r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        r0.<android.widget.ImageView: boolean mColorMod> = 0;

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = null;

        r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode> = null;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 0;

        r0.<android.widget.ImageView: boolean mHasDrawableTintMode> = 0;

        r0.<android.widget.ImageView: int[] mState> = null;

        r0.<android.widget.ImageView: boolean mMergeState> = 0;

        r0.<android.widget.ImageView: int mLevel> = 0;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r2;

        $r3 = new android.graphics.RectF;

        specialinvoke $r3.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r3;

        r0.<android.widget.ImageView: int mBaseline> = -1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBoundsCompat> = 0;

        specialinvoke r0.<android.widget.ImageView: void initImageView()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.ImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        android.graphics.RectF $r5, $r6;
        int[] $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.PorterDuff$Mode $r8, $r10, $r12;
        android.content.res.ColorStateList $r9;
        android.widget.ImageView$ScaleType[] $r11;
        android.widget.ImageView$ScaleType $r13;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: boolean mHaveFrame> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = 0;

        r0.<android.widget.ImageView: int mMaxWidth> = 2147483647;

        r0.<android.widget.ImageView: int mMaxHeight> = 2147483647;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = null;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 0;

        r0.<android.widget.ImageView: int mAlpha> = 255;

        r0.<android.widget.ImageView: int mViewAlphaScale> = 256;

        r0.<android.widget.ImageView: boolean mColorMod> = 0;

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = null;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = null;

        r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode> = null;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 0;

        r0.<android.widget.ImageView: boolean mHasDrawableTintMode> = 0;

        r0.<android.widget.ImageView: int[] mState> = null;

        r0.<android.widget.ImageView: boolean mMergeState> = 0;

        r0.<android.widget.ImageView: int mLevel> = 0;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempSrc> = $r5;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.RectF mTempDst> = $r6;

        r0.<android.widget.ImageView: int mBaseline> = -1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = 0;

        r0.<android.widget.ImageView: boolean mAdjustViewBoundsCompat> = 0;

        specialinvoke r0.<android.widget.ImageView: void initImageView()>();

        $r7 = <com.android.internal.R$styleable: int[] ImageView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, i0, i1);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r4 == null goto label1;

        virtualinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r4);

     label1:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = $z0;

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, -1);

        r0.<android.widget.ImageView: int mBaseline> = $i4;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke r0.<android.widget.ImageView: void setAdjustViewBounds(boolean)>($z1);

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, 2147483647);

        virtualinvoke r0.<android.widget.ImageView: void setMaxWidth(int)>($i5);

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, 2147483647);

        virtualinvoke r0.<android.widget.ImageView: void setMaxHeight(int)>($i6);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if i2 < 0 goto label2;

        $r11 = <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray>;

        $r13 = $r11[i2];

        virtualinvoke r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r13);

     label2:
        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(5);

        if $z3 == 0 goto label3;

        $r9 = virtualinvoke r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = $r9;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 1;

        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode> = $r12;

        r0.<android.widget.ImageView: boolean mHasDrawableTintMode> = 1;

     label3:
        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(9);

        if $z2 == 0 goto label4;

        $i7 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(9, -1);

        $r8 = r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode>;

        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i7, $r8);

        r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode> = $r10;

        r0.<android.widget.ImageView: boolean mHasDrawableTintMode> = 1;

     label4:
        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(10, 255);

        if i3 == 255 goto label5;

        virtualinvoke r0.<android.widget.ImageView: void setAlpha(int)>(i3);

     label5:
        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        r0.<android.widget.ImageView: boolean mCropToPadding> = $z4;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initImageView()
    {
        android.widget.ImageView r0;
        android.graphics.Matrix $r1;
        android.widget.ImageView$ScaleType $r2;
        android.content.Context $r3;
        android.content.pm.ApplicationInfo $r4;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.Matrix mMatrix> = $r1;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = $r2;

        $r3 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 > 17 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<android.widget.ImageView: boolean mAdjustViewBoundsCompat> = $z0;

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == r1 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 != $r2 goto label1;

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        goto label2;

     label1:
        specialinvoke r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        return;
    }

    public boolean hasOverlappingRendering()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $r1 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.ImageView: android.graphics.drawable.Drawable getBackground()>();

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.ImageView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        r2 = virtualinvoke r0.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label1:
        return;
    }

    public boolean getAdjustViewBounds()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mAdjustViewBounds>;

        return $z0;
    }

    public void setAdjustViewBounds(boolean)
    {
        android.widget.ImageView r0;
        boolean z0;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        r0.<android.widget.ImageView: boolean mAdjustViewBounds> = z0;

        if z0 == 0 goto label1;

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        virtualinvoke r0.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r1);

     label1:
        return;
    }

    public int getMaxWidth()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mMaxWidth>;

        return $i0;
    }

    public void setMaxWidth(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mMaxWidth> = i0;

        return;
    }

    public int getMaxHeight()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mMaxHeight>;

        return $i0;
    }

    public void setMaxHeight(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mMaxHeight> = i0;

        return;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public void setImageResource(int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.net.Uri $r1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r1 != null goto label1;

        $i5 = r0.<android.widget.ImageView: int mResource>;

        if $i5 == i0 goto label4;

     label1:
        i1 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i2 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.ImageView: int mResource> = i0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        $i3 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i1 != $i3 goto label2;

        $i4 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i2 == $i4 goto label3;

     label2:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label3:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public void setImageURI(android.net.Uri)
    {
        android.widget.ImageView r0;
        android.net.Uri r1, $r2, $r3, $r4;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.net.Uri;

        $i2 = r0.<android.widget.ImageView: int mResource>;

        if $i2 != 0 goto label1;

        $r2 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r2 == r1 goto label4;

        if r1 == null goto label1;

        $r3 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

     label1:
        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = r1;

        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        $i3 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i3 goto label2;

        $i4 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i4 goto label3;

     label2:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label3:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2;
        int i0, i1, $i2, $i3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == r1 goto label3;

        r0.<android.widget.ImageView: int mResource> = 0;

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(r1);

        $i2 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i2 goto label1;

        $i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label2:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label3:
        return;
    }

    public void setImageTintList(android.content.res.ColorStateList)
    {
        android.widget.ImageView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList> = r1;

        r0.<android.widget.ImageView: boolean mHasDrawableTint> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        return;
    }

    public android.content.res.ColorStateList getImageTintList()
    {
        android.widget.ImageView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList>;

        return $r1;
    }

    public void setImageTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.ImageView r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode> = r1;

        r0.<android.widget.ImageView: boolean mHasDrawableTintMode> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        return;
    }

    public android.graphics.PorterDuff$Mode getImageTintMode()
    {
        android.widget.ImageView r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode>;

        return $r1;
    }

    private void applyImageTint()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.PorterDuff$Mode $r4;
        android.content.res.ColorStateList $r6;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label3;

        $z0 = r0.<android.widget.ImageView: boolean mHasDrawableTint>;

        if $z0 != 0 goto label1;

        $z3 = r0.<android.widget.ImageView: boolean mHasDrawableTintMode>;

        if $z3 == 0 goto label3;

     label1:
        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = $r3;

        $z1 = r0.<android.widget.ImageView: boolean mHasDrawableTint>;

        if $z1 == 0 goto label2;

        $r7 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r6 = r0.<android.widget.ImageView: android.content.res.ColorStateList mDrawableTintList>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r6);

     label2:
        $z2 = r0.<android.widget.ImageView: boolean mHasDrawableTintMode>;

        if $z2 == 0 goto label3;

        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r4 = r0.<android.widget.ImageView: android.graphics.PorterDuff$Mode mDrawableTintMode>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r4);

     label3:
        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        android.widget.ImageView r0;
        android.graphics.Bitmap r1;
        android.graphics.drawable.BitmapDrawable $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new android.graphics.drawable.BitmapDrawable;

        $r3 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r4, r1);

        virtualinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setImageState(int[], boolean)
    {
        android.widget.ImageView r0;
        int[] r1;
        boolean z0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r0.<android.widget.ImageView: int[] mState> = r1;

        r0.<android.widget.ImageView: boolean mMergeState> = z0;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.widget.ImageView: void refreshDrawableState()>();

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

     label1:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.ImageView r0;
        boolean z0;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

        return;
    }

    public void setImageLevel(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r0.<android.widget.ImageView: int mLevel> = i0;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        specialinvoke r0.<android.widget.ImageView: void resizeFromDrawable()>();

     label1:
        return;
    }

    public void setScaleType(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView r0;
        android.widget.ImageView$ScaleType r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.NullPointerException $r5;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.widget.ImageView$ScaleType;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r2 == r1 goto label4;

        r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType> = r1;

        $r4 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        if $r4 != $r3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<android.widget.ImageView: void setWillNotCacheDrawing(boolean)>($z0);

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public android.widget.ImageView$ScaleType getScaleType()
    {
        android.widget.ImageView r0;
        android.widget.ImageView$ScaleType $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        return $r1;
    }

    public android.graphics.Matrix getImageMatrix()
    {
        android.widget.ImageView r0;
        android.graphics.Matrix $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r1 != null goto label1;

        $r3 = new android.graphics.Matrix;

        $r4 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke $r3.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r4);

        return $r3;

     label1:
        $r2 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        return $r2;
    }

    public void setImageMatrix(android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 == 0 goto label1;

        r1 = null;

     label1:
        if r1 != null goto label2;

        $r4 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z1 = virtualinvoke $r4.<android.graphics.Matrix: boolean isIdentity()>();

        if $z1 == 0 goto label3;

     label2:
        if r1 == null goto label4;

        $r2 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z0 = virtualinvoke $r2.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

     label3:
        $r3 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r1);

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label4:
        return;
    }

    public boolean getCropToPadding()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        return $z0;
    }

    public void setCropToPadding(boolean)
    {
        android.widget.ImageView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        if $z1 == z0 goto label1;

        r0.<android.widget.ImageView: boolean mCropToPadding> = z0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    private void resolveUri()
    {
        android.widget.ImageView r0;
        android.content.res.Resources r1, $r28;
        android.graphics.drawable.Drawable r2, $r8;
        java.lang.Exception r3, $r38, $r43, $r53, r69, r71;
        android.content.ContentResolver$OpenResourceIdResult r4;
        java.io.IOException r5, r7, $r31, $r47, $r59, r72;
        java.lang.Throwable r6, $r46;
        int $i0, $i1, $i2, $i4;
        android.net.Uri $r9, $r10, $r15, $r20, $r23, $r29, $r35, $r49, $r56, $r61, $r66;
        java.lang.String $r11, $r12, $r21, $r22, $r26, $r39, $r44, $r45, $r52, $r57, $r63, r68;
        boolean $z0, $z1, $z2;
        android.content.ContentResolver $r13, $r25;
        android.content.Context $r14, $r24, $r27, $r33;
        java.lang.StringBuilder $r16, $r17, $r19, $r32, $r34, $r36, $r37, $r40, $r41, $r42, $r48, $r50, $r51, $r54, $r55, $r58, $r60, $r62, $r64, $r65, $r67;
        java.io.PrintStream $r18;
        android.content.res.Resources$Theme $r30;
        java.io.InputStream r70;

        r0 := @this: android.widget.ImageView;

        $r8 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r8 == null goto label01;

        return;

     label01:
        r1 = virtualinvoke r0.<android.widget.ImageView: android.content.res.Resources getResources()>();

        if r1 != null goto label02;

        return;

     label02:
        r2 = null;

        $i0 = r0.<android.widget.ImageView: int mResource>;

        if $i0 == 0 goto label06;

     label03:
        $r33 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $i1 = r0.<android.widget.ImageView: int mResource>;

        r2 = virtualinvoke $r33.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i1);

     label04:
        goto label33;

     label05:
        $r38 := @caughtexception;

        r3 = $r38;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find resource: ");

        $i4 = r0.<android.widget.ImageView: int mResource>;

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r44, r3);

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

        goto label33;

     label06:
        $r9 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        if $r9 == null goto label32;

        $r10 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        r68 = virtualinvoke $r10.<android.net.Uri: java.lang.String getScheme()>();

        $r11 = "android.resource";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r68);

        if $z0 == 0 goto label10;

     label07:
        $r24 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r29 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        r4 = virtualinvoke $r25.<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>($r29);

        $r28 = r4.<android.content.ContentResolver$OpenResourceIdResult: android.content.res.Resources r>;

        $i2 = r4.<android.content.ContentResolver$OpenResourceIdResult: int id>;

        $r27 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r30 = virtualinvoke $r27.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r2 = virtualinvoke $r28.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i2, $r30);

     label08:
        goto label30;

     label09:
        $r53 := @caughtexception;

        r69 = $r53;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r61 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r58 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r57, r69);

        goto label30;

     label10:
        $r12 = "content";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r68);

        if $z1 != 0 goto label11;

        $r21 = "file";

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r68);

        if $z2 == 0 goto label29;

     label11:
        r70 = null;

     label12:
        $r14 = r0.<android.widget.ImageView: android.content.Context mContext>;

        $r13 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r15 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        r70 = virtualinvoke $r13.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r15);

        r2 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r70, null);

     label13:
        if r70 == null goto label28;

     label14:
        virtualinvoke r70.<java.io.InputStream: void close()>();

     label15:
        goto label28;

     label16:
        $r59 := @caughtexception;

        r5 = $r59;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to close content: ");

        $r66 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r64 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r63, r5);

        goto label28;

     label17:
        $r43 := @caughtexception;

        r71 = $r43;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r49 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r45, r71);

     label18:
        if r70 == null goto label28;

     label19:
        virtualinvoke r70.<java.io.InputStream: void close()>();

     label20:
        goto label28;

     label21:
        $r31 := @caughtexception;

        r72 = $r31;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to close content: ");

        $r35 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r39, r72);

        goto label28;

     label22:
        $r46 := @caughtexception;

        r6 = $r46;

     label23:
        if r70 == null goto label27;

     label24:
        virtualinvoke r70.<java.io.InputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r47 := @caughtexception;

        r7 = $r47;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to close content: ");

        $r56 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageView", $r52, r7);

     label27:
        throw r6;

     label28:
        goto label30;

     label29:
        $r23 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r26 = virtualinvoke $r23.<android.net.Uri: java.lang.String toString()>();

        r2 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r26);

     label30:
        if r2 != null goto label31;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolveUri failed on bad bitmap uri: ");

        $r20 = r0.<android.widget.ImageView: android.net.Uri mUri>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        r0.<android.widget.ImageView: android.net.Uri mUri> = null;

     label31:
        goto label33;

     label32:
        return;

     label33:
        specialinvoke r0.<android.widget.ImageView: void updateDrawable(android.graphics.drawable.Drawable)>(r2);

        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public int[] onCreateDrawableState(int)
    {
        android.widget.ImageView r0;
        int i0, $i1, $i2;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.ImageView: int[] mState>;

        if $r1 != null goto label1;

        $r7 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(i0);

        return $r7;

     label1:
        $z0 = r0.<android.widget.ImageView: boolean mMergeState>;

        if $z0 != 0 goto label2;

        $r6 = r0.<android.widget.ImageView: int[] mState>;

        return $r6;

     label2:
        $r2 = r0.<android.widget.ImageView: int[] mState>;

        $i1 = lengthof $r2;

        $i2 = i0 + $i1;

        $r3 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>($i2);

        $r4 = r0.<android.widget.ImageView: int[] mState>;

        $r5 = staticinvoke <android.widget.ImageView: int[] mergeDrawableStates(int[],int[])>($r3, $r4);

        return $r5;
    }

    private void updateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1, $r2, $r4, $r5;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z3;
        int[] $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == null goto label1;

        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke r0.<android.widget.ImageView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r5);

     label1:
        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = r1;

        if r1 == null goto label5;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>($i1);

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r3);

     label2:
        $i2 = virtualinvoke r0.<android.widget.ImageView: int getVisibility()>();

        if $i2 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z3, 1);

        $i3 = r0.<android.widget.ImageView: int mLevel>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i3);

        $i4 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.ImageView: int mDrawableWidth> = $i4;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.ImageView: int mDrawableHeight> = $i5;

        specialinvoke r0.<android.widget.ImageView: void applyImageTint()>();

        specialinvoke r0.<android.widget.ImageView: void applyColorMod()>();

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        goto label6;

     label5:
        r0.<android.widget.ImageView: int mDrawableHeight> = -1;

        r0.<android.widget.ImageView: int mDrawableWidth> = -1;

     label6:
        return;
    }

    private void resizeFromDrawable()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, $i2, $i3;

        r0 := @this: android.widget.ImageView;

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label4;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if i0 >= 0 goto label1;

        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

     label1:
        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i1 >= 0 goto label2;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

     label2:
        $i2 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if i0 != $i2 goto label3;

        $i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i1 == $i3 goto label4;

     label3:
        r0.<android.widget.ImageView: int mDrawableWidth> = i0;

        r0.<android.widget.ImageView: int mDrawableHeight> = i1;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label4:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

     label1:
        return;
    }

    private static android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)
    {
        android.widget.ImageView$ScaleType r0;
        int $i0, $i1;
        android.graphics.Matrix$ScaleToFit[] $r1;
        android.graphics.Matrix$ScaleToFit $r2;

        r0 := @parameter0: android.widget.ImageView$ScaleType;

        $r1 = <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray>;

        $i0 = r0.<android.widget.ImageView$ScaleType: int nativeInt>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    protected void onMeasure(int, int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i42, i43;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        android.graphics.drawable.Drawable $r1;
        byte $b19, $b26;
        double $d0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.ImageView: void resolveUri()>();

        f0 = 0.0F;

        z0 = 0;

        z1 = 0;

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 != null goto label01;

        r0.<android.widget.ImageView: int mDrawableWidth> = -1;

        r0.<android.widget.ImageView: int mDrawableHeight> = -1;

        i3 = 0;

        i2 = 0;

        goto label08;

     label01:
        i2 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i3 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if i2 > 0 goto label02;

        i2 = 1;

     label02:
        if i3 > 0 goto label03;

        i3 = 1;

     label03:
        $z3 = r0.<android.widget.ImageView: boolean mAdjustViewBounds>;

        if $z3 == 0 goto label08;

        if i4 == 1073741824 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z0 = $z7;

        if i5 == 1073741824 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z1 = $z6;

        $f11 = (float) i2;

        $f10 = (float) i3;

        f0 = $f11 / $f10;

     label08:
        i6 = r0.<android.widget.ImageView: int mPaddingLeft>;

        i7 = r0.<android.widget.ImageView: int mPaddingRight>;

        i8 = r0.<android.widget.ImageView: int mPaddingTop>;

        i9 = r0.<android.widget.ImageView: int mPaddingBottom>;

        if z0 != 0 goto label09;

        if z1 == 0 goto label14;

     label09:
        $i13 = i2 + i6;

        $i14 = $i13 + i7;

        $i15 = r0.<android.widget.ImageView: int mMaxWidth>;

        i10 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i14, $i15, i0);

        $i16 = i3 + i8;

        $i17 = $i16 + i9;

        $i18 = r0.<android.widget.ImageView: int mMaxHeight>;

        i11 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>($i17, $i18, i1);

        $b19 = f0 cmpl 0.0F;

        if $b19 == 0 goto label15;

        $i22 = i10 - i6;

        $i23 = $i22 - i7;

        $f5 = (float) $i23;

        $i20 = i11 - i8;

        $i21 = $i20 - i9;

        $f4 = (float) $i21;

        f1 = $f5 / $f4;

        $f2 = f1 - f0;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $d0 = (double) $f3;

        $b26 = $d0 cmpl 1.0E-7;

        if $b26 <= 0 goto label13;

        z2 = 0;

        if z0 == 0 goto label11;

        $i29 = i11 - i8;

        $i32 = $i29 - i9;

        $f9 = (float) $i32;

        $f8 = f0 * $f9;

        $i31 = (int) $f8;

        $i34 = $i31 + i6;

        i12 = $i34 + i7;

        if z1 != 0 goto label10;

        $z5 = r0.<android.widget.ImageView: boolean mAdjustViewBoundsCompat>;

        if $z5 != 0 goto label10;

        $i33 = r0.<android.widget.ImageView: int mMaxWidth>;

        i10 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>(i12, $i33, i0);

     label10:
        if i12 > i10 goto label11;

        i10 = i12;

        z2 = 1;

     label11:
        if z2 != 0 goto label13;

        if z1 == 0 goto label13;

        $i24 = i10 - i6;

        $i25 = $i24 - i7;

        $f6 = (float) $i25;

        $f7 = $f6 / f0;

        $i27 = (int) $f7;

        $i28 = $i27 + i8;

        i39 = $i28 + i9;

        if z0 != 0 goto label12;

        $z4 = r0.<android.widget.ImageView: boolean mAdjustViewBoundsCompat>;

        if $z4 != 0 goto label12;

        $i30 = r0.<android.widget.ImageView: int mMaxHeight>;

        i11 = specialinvoke r0.<android.widget.ImageView: int resolveAdjustedSize(int,int,int)>(i39, $i30, i1);

     label12:
        if i39 > i11 goto label13;

        i11 = i39;

     label13:
        goto label15;

     label14:
        $i37 = i6 + i7;

        i40 = i2 + $i37;

        $i36 = i8 + i9;

        i41 = i3 + $i36;

        $i35 = virtualinvoke r0.<android.widget.ImageView: int getSuggestedMinimumWidth()>();

        i42 = staticinvoke <java.lang.Math: int max(int,int)>(i40, $i35);

        $i38 = virtualinvoke r0.<android.widget.ImageView: int getSuggestedMinimumHeight()>();

        i43 = staticinvoke <java.lang.Math: int max(int,int)>(i41, $i38);

        i10 = staticinvoke <android.widget.ImageView: int resolveSizeAndState(int,int,int)>(i42, i0, 0);

        i11 = staticinvoke <android.widget.ImageView: int resolveSizeAndState(int,int,int)>(i43, i1, 0);

     label15:
        virtualinvoke r0.<android.widget.ImageView: void setMeasuredDimension(int,int)>(i10, i11);

        return;
    }

    private int resolveAdjustedSize(int, int, int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3, i4, i5, $i6;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i0;

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i2);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i2);

        lookupswitch(i4)
        {
            case -2147483648: goto label2;
            case 0: goto label1;
            case 1073741824: goto label3;
            default: goto label4;
        };

     label1:
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        goto label4;

     label2:
        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i5);

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i6, i1);

        goto label4;

     label3:
        i3 = i5;

     label4:
        return i3;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.widget.ImageView: boolean mHaveFrame> = 1;

        specialinvoke r0.<android.widget.ImageView: void configureBounds()>();

        return z0;
    }

    private void configureBounds()
    {
        android.widget.ImageView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean z0, $z1, $z5, $z6;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, f49, f50, f51;
        android.graphics.drawable.Drawable $r1, $r2, $r6;
        android.widget.ImageView$ScaleType $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        android.graphics.RectF $r14, $r17, $r20, $r21;
        android.graphics.Matrix $r16, $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        android.graphics.Matrix$ScaleToFit $r19;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label01;

        $z1 = r0.<android.widget.ImageView: boolean mHaveFrame>;

        if $z1 != 0 goto label02;

     label01:
        return;

     label02:
        i0 = r0.<android.widget.ImageView: int mDrawableWidth>;

        i1 = r0.<android.widget.ImageView: int mDrawableHeight>;

        $i4 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $i5 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.ImageView: int mPaddingRight>;

        i2 = $i7 - $i6;

        $i8 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $i10 = r0.<android.widget.ImageView: int mPaddingTop>;

        $i11 = $i8 - $i10;

        $i9 = r0.<android.widget.ImageView: int mPaddingBottom>;

        i3 = $i11 - $i9;

        if i0 < 0 goto label03;

        if i2 != i0 goto label05;

     label03:
        if i1 < 0 goto label04;

        if i3 != i1 goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z0 = $z5;

        if i0 <= 0 goto label07;

        if i1 <= 0 goto label07;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r4 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r3 != $r4 goto label08;

     label07:
        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i2, i3);

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label19;

     label08:
        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        $r8 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r5 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r8 != $r5 goto label10;

        $r31 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        $z6 = virtualinvoke $r31.<android.graphics.Matrix: boolean isIdentity()>();

        if $z6 == 0 goto label09;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label19;

     label09:
        $r29 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r29;

        goto label19;

     label10:
        if z0 == 0 goto label11;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = null;

        goto label19;

     label11:
        $r10 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r7 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r10 != $r7 goto label12;

        $r28 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r28;

        $r30 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $i18 = i2 - i0;

        $f37 = (float) $i18;

        $f45 = $f37 * 0.5F;

        $f46 = $f45 + 0.5F;

        $i20 = (int) $f46;

        $f48 = (float) $i20;

        $i21 = i3 - i1;

        $f43 = (float) $i21;

        $f44 = $f43 * 0.5F;

        $f42 = $f44 + 0.5F;

        $i19 = (int) $f42;

        $f47 = (float) $i19;

        virtualinvoke $r30.<android.graphics.Matrix: void setTranslate(float,float)>($f48, $f47);

        goto label19;

     label12:
        $r12 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r9 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r12 != $r9 goto label15;

        $r23 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r23;

        f1 = 0.0F;

        f2 = 0.0F;

        $i14 = i0 * i3;

        $i13 = i2 * i1;

        if $i14 <= $i13 goto label13;

        $f39 = (float) i3;

        $f33 = (float) i1;

        f0 = $f39 / $f33;

        $f40 = (float) i2;

        $f38 = (float) i0;

        $f41 = $f38 * f0;

        $f36 = $f40 - $f41;

        f1 = $f36 * 0.5F;

        goto label14;

     label13:
        $f29 = (float) i2;

        $f28 = (float) i0;

        f0 = $f29 / $f28;

        $f25 = (float) i3;

        $f30 = (float) i1;

        $f31 = $f30 * f0;

        $f26 = $f25 - $f31;

        f2 = $f26 * 0.5F;

     label14:
        $r26 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r26.<android.graphics.Matrix: void setScale(float,float)>(f0, f0);

        $r27 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $f27 = f1 + 0.5F;

        $i16 = (int) $f27;

        $f32 = (float) $i16;

        $f34 = f2 + 0.5F;

        $i17 = (int) $f34;

        $f35 = (float) $i17;

        virtualinvoke $r27.<android.graphics.Matrix: boolean postTranslate(float,float)>($f32, $f35);

        goto label19;

     label15:
        $r13 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r11 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        if $r13 != $r11 goto label18;

        $r22 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r22;

        if i0 > i2 goto label16;

        if i1 > i3 goto label16;

        f49 = 1.0F;

        goto label17;

     label16:
        $f7 = (float) i2;

        $f9 = (float) i0;

        $f10 = $f7 / $f9;

        $f12 = (float) i3;

        $f8 = (float) i1;

        $f11 = $f12 / $f8;

        f49 = staticinvoke <java.lang.Math: float min(float,float)>($f10, $f11);

     label17:
        $f14 = (float) i2;

        $f16 = (float) i0;

        $f15 = $f16 * f49;

        $f13 = $f14 - $f15;

        $f19 = $f13 * 0.5F;

        $f18 = $f19 + 0.5F;

        $i12 = (int) $f18;

        f50 = (float) $i12;

        $f22 = (float) i3;

        $f17 = (float) i1;

        $f23 = $f17 * f49;

        $f21 = $f22 - $f23;

        $f20 = $f21 * 0.5F;

        $f24 = $f20 + 0.5F;

        $i15 = (int) $f24;

        f51 = (float) $i15;

        $r24 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r24.<android.graphics.Matrix: void setScale(float,float)>(f49, f49);

        $r25 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r25.<android.graphics.Matrix: boolean postTranslate(float,float)>(f50, f51);

        goto label19;

     label18:
        $r14 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $f6 = (float) i0;

        $f3 = (float) i1;

        virtualinvoke $r14.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f6, $f3);

        $r17 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $f5 = (float) i2;

        $f4 = (float) i3;

        virtualinvoke $r17.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f5, $f4);

        $r18 = r0.<android.widget.ImageView: android.graphics.Matrix mMatrix>;

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r18;

        $r16 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        $r20 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        $r21 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        $r15 = r0.<android.widget.ImageView: android.widget.ImageView$ScaleType mScaleType>;

        $r19 = staticinvoke <android.widget.ImageView: android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType)>($r15);

        virtualinvoke $r16.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r20, $r21, $r19);

     label19:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        int[] $r2;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.ImageView: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.ImageView r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.ImageView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.view.View: void drawableHotspotChanged(float,float)>(f0, f1);

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    public void animateTransform(android.graphics.Matrix)
    {
        android.widget.ImageView r0;
        android.graphics.Matrix r1, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2, $r6;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 != null goto label1;

        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $i3 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

        goto label3;

     label1:
        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i1 = r0.<android.widget.ImageView: int mDrawableWidth>;

        $i0 = r0.<android.widget.ImageView: int mDrawableHeight>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i0);

        $r3 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r3 != null goto label2;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix> = $r5;

     label2:
        $r4 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r1);

     label3:
        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.ImageView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.graphics.drawable.Drawable $r2, $r4, $r7;
        android.graphics.Matrix $r3, $r5, $r6;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 != null goto label1;

        return;

     label1:
        $i3 = r0.<android.widget.ImageView: int mDrawableWidth>;

        if $i3 == 0 goto label2;

        $i4 = r0.<android.widget.ImageView: int mDrawableHeight>;

        if $i4 != 0 goto label3;

     label2:
        return;

     label3:
        $r3 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r3 != null goto label4;

        $i24 = r0.<android.widget.ImageView: int mPaddingTop>;

        if $i24 != 0 goto label4;

        $i25 = r0.<android.widget.ImageView: int mPaddingLeft>;

        if $i25 != 0 goto label4;

        $r7 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label7;

     label4:
        i0 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z0 = r0.<android.widget.ImageView: boolean mCropToPadding>;

        if $z0 == 0 goto label5;

        i1 = r0.<android.widget.ImageView: int mScrollX>;

        i2 = r0.<android.widget.ImageView: int mScrollY>;

        $i8 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $i21 = i1 + $i8;

        $i10 = r0.<android.widget.ImageView: int mPaddingTop>;

        $i23 = i2 + $i10;

        $i9 = r0.<android.widget.ImageView: int mRight>;

        $i11 = i1 + $i9;

        $i12 = r0.<android.widget.ImageView: int mLeft>;

        $i13 = $i11 - $i12;

        $i14 = r0.<android.widget.ImageView: int mPaddingRight>;

        $i22 = $i13 - $i14;

        $i16 = r0.<android.widget.ImageView: int mBottom>;

        $i18 = i2 + $i16;

        $i15 = r0.<android.widget.ImageView: int mTop>;

        $i20 = $i18 - $i15;

        $i17 = r0.<android.widget.ImageView: int mPaddingBottom>;

        $i19 = $i20 - $i17;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i21, $i23, $i22, $i19);

     label5:
        $i6 = r0.<android.widget.ImageView: int mPaddingLeft>;

        $f1 = (float) $i6;

        $i7 = r0.<android.widget.ImageView: int mPaddingTop>;

        $f0 = (float) $i7;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $r5 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if $r5 == null goto label6;

        $r6 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r6);

     label6:
        $r4 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

     label7:
        return;
    }

    public int getBaseline()
    {
        android.widget.ImageView r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.ImageView: int getMeasuredHeight()>();

        return $i1;

     label1:
        $i0 = r0.<android.widget.ImageView: int mBaseline>;

        return $i0;
    }

    public void setBaseline(int)
    {
        android.widget.ImageView r0;
        int i0, $i1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.ImageView: int mBaseline>;

        if $i1 == i0 goto label1;

        r0.<android.widget.ImageView: int mBaseline> = i0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label1:
        return;
    }

    public void setBaselineAlignBottom(boolean)
    {
        android.widget.ImageView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.ImageView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        if $z1 == z0 goto label1;

        r0.<android.widget.ImageView: boolean mBaselineAlignBottom> = z0;

        virtualinvoke r0.<android.widget.ImageView: void requestLayout()>();

     label1:
        return;
    }

    public boolean getBaselineAlignBottom()
    {
        android.widget.ImageView r0;
        boolean $z0;

        r0 := @this: android.widget.ImageView;

        $z0 = r0.<android.widget.ImageView: boolean mBaselineAlignBottom>;

        return $z0;
    }

    public final void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.PorterDuffColorFilter $r2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>($r2);

        return;
    }

    public final void setColorFilter(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, $r1);

        return;
    }

    public final void clearColorFilter()
    {
        android.widget.ImageView r0;

        r0 := @this: android.widget.ImageView;

        virtualinvoke r0.<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>(null);

        return;
    }

    public final void setXfermode(android.graphics.Xfermode)
    {
        android.widget.ImageView r0;
        android.graphics.Xfermode r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        if $r2 == r1 goto label1;

        r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode> = r1;

        r0.<android.widget.ImageView: boolean mColorMod> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyColorMod()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.widget.ImageView r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.widget.ImageView r0;
        android.graphics.ColorFilter r1, $r2;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        if $r2 == r1 goto label1;

        r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter> = r1;

        r0.<android.widget.ImageView: boolean mHasColorFilter> = 1;

        r0.<android.widget.ImageView: boolean mColorMod> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyColorMod()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    public int getImageAlpha()
    {
        android.widget.ImageView r0;
        int $i0;

        r0 := @this: android.widget.ImageView;

        $i0 = r0.<android.widget.ImageView: int mAlpha>;

        return $i0;
    }

    public void setImageAlpha(int)
    {
        android.widget.ImageView r0;
        int i0;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.ImageView: void setAlpha(int)>(i0);

        return;
    }

    public void setAlpha(int)
    {
        android.widget.ImageView r0;
        int i0, $i1, i2;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        i2 = i0 & 255;

        $i1 = r0.<android.widget.ImageView: int mAlpha>;

        if $i1 == i2 goto label1;

        r0.<android.widget.ImageView: int mAlpha> = i2;

        r0.<android.widget.ImageView: boolean mColorMod> = 1;

        specialinvoke r0.<android.widget.ImageView: void applyColorMod()>();

        virtualinvoke r0.<android.widget.ImageView: void invalidate()>();

     label1:
        return;
    }

    private void applyColorMod()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r5, $r6, $r8;
        boolean $z0, $z1;
        android.graphics.Xfermode $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.ColorFilter $r7;

        r0 := @this: android.widget.ImageView;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label2;

        $z0 = r0.<android.widget.ImageView: boolean mColorMod>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable> = $r3;

        $z1 = r0.<android.widget.ImageView: boolean mHasColorFilter>;

        if $z1 == 0 goto label1;

        $r8 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r7 = r0.<android.widget.ImageView: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r7);

     label1:
        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $r4 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setXfermode(android.graphics.Xfermode)>($r4);

        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i1 = r0.<android.widget.ImageView: int mAlpha>;

        $i0 = r0.<android.widget.ImageView: int mViewAlphaScale>;

        $i2 = $i1 * $i0;

        $i3 = $i2 >> 8;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

     label2:
        return;
    }

    public boolean isOpaque()
    {
        android.widget.ImageView r0;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.Xfermode $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.ImageView;

        $z0 = specialinvoke r0.<android.view.View: boolean isOpaque()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.ImageView: android.graphics.Xfermode mXfermode>;

        if $r2 != null goto label2;

        $r3 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 != -1 goto label2;

        $i2 = r0.<android.widget.ImageView: int mAlpha>;

        $i1 = r0.<android.widget.ImageView: int mViewAlphaScale>;

        $i3 = $i2 * $i1;

        $i4 = $i3 >> 8;

        if $i4 != 255 goto label2;

        $z2 = specialinvoke r0.<android.widget.ImageView: boolean isFilledByImage()>();

        if $z2 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isFilledByImage()
    {
        android.widget.ImageView r0;
        android.graphics.Rect r1;
        android.graphics.Matrix r2;
        android.graphics.RectF r3, r4;
        android.graphics.drawable.Drawable $r5, $r6;
        boolean $z0, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0, $b1, $b3, $b5;
        int $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.widget.ImageView;

        $r5 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r5 != null goto label1;

        return 0;

     label1:
        $r6 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        r1 = virtualinvoke $r6.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        r2 = r0.<android.widget.ImageView: android.graphics.Matrix mDrawMatrix>;

        if r2 != null goto label4;

        $i6 = r1.<android.graphics.Rect: int left>;

        if $i6 > 0 goto label2;

        $i8 = r1.<android.graphics.Rect: int top>;

        if $i8 > 0 goto label2;

        $i7 = r1.<android.graphics.Rect: int right>;

        $i10 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        if $i7 < $i10 goto label2;

        $i9 = r1.<android.graphics.Rect: int bottom>;

        $i11 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        if $i9 < $i11 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $z0 = virtualinvoke r2.<android.graphics.Matrix: boolean rectStaysRect()>();

        if $z0 == 0 goto label7;

        r3 = r0.<android.widget.ImageView: android.graphics.RectF mTempSrc>;

        r4 = r0.<android.widget.ImageView: android.graphics.RectF mTempDst>;

        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.Rect)>(r1);

        virtualinvoke r2.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>(r4, r3);

        $f0 = r4.<android.graphics.RectF: float left>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label5;

        $f1 = r4.<android.graphics.RectF: float top>;

        $b1 = $f1 cmpg 0.0F;

        if $b1 > 0 goto label5;

        $f2 = r4.<android.graphics.RectF: float right>;

        $i2 = virtualinvoke r0.<android.widget.ImageView: int getWidth()>();

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 < 0 goto label5;

        $f4 = r4.<android.graphics.RectF: float bottom>;

        $i4 = virtualinvoke r0.<android.widget.ImageView: int getHeight()>();

        $f5 = (float) $i4;

        $b5 = $f4 cmpl $f5;

        if $b5 < 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

     label7:
        return 0;
    }

    public void setVisibility(int)
    {
        android.widget.ImageView r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z1;

        r0 := @this: android.widget.ImageView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void setVisibility(int)>(i0);

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, 0);

     label3:
        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0;
        boolean $z1;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke r0.<android.widget.ImageView: int getVisibility()>();

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, 0);

     label3:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.ImageView r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.ImageView;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        $r1 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ImageView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label1:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.ImageView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/ImageView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.ImageView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.ImageView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/ImageView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    static void <clinit>()
    {
        android.widget.ImageView$ScaleType[] $r0;
        android.widget.ImageView$ScaleType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        android.graphics.Matrix$ScaleToFit[] $r9;
        android.graphics.Matrix$ScaleToFit $r10, $r11, $r12, $r13;

        $r0 = newarray (android.widget.ImageView$ScaleType)[8];

        $r1 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType MATRIX>;

        $r0[0] = $r1;

        $r2 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;

        $r0[1] = $r2;

        $r3 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_START>;

        $r0[2] = $r3;

        $r4 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        $r0[3] = $r4;

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_END>;

        $r0[4] = $r5;

        $r6 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER>;

        $r0[5] = $r6;

        $r7 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        $r0[6] = $r7;

        $r8 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        $r0[7] = $r8;

        <android.widget.ImageView: android.widget.ImageView$ScaleType[] sScaleTypeArray> = $r0;

        $r9 = newarray (android.graphics.Matrix$ScaleToFit)[4];

        $r10 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        $r9[0] = $r10;

        $r11 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit START>;

        $r9[1] = $r11;

        $r12 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        $r9[2] = $r12;

        $r13 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit END>;

        $r9[3] = $r13;

        <android.widget.ImageView: android.graphics.Matrix$ScaleToFit[] sS2FArray> = $r9;

        return;
    }
}
