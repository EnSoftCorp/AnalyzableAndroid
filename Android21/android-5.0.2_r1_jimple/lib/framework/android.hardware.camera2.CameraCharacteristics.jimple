public final class android.hardware.camera2.CameraCharacteristics extends android.hardware.camera2.CameraMetadata
{
    private final android.hardware.camera2.impl.CameraMetadataNative mProperties;
    private java.util.List mKeys;
    private java.util.List mAvailableRequestKeys;
    private java.util.List mAvailableResultKeys;
    public static final android.hardware.camera2.CameraCharacteristics$Key COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_ANTIBANDING_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_STEP;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AF_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EFFECTS;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_SCENE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_AVAILABLE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF;
    public static final android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key EDGE_AVAILABLE_EDGE_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key FLASH_INFO_AVAILABLE;
    public static final android.hardware.camera2.CameraCharacteristics$Key HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key JPEG_AVAILABLE_THUMBNAIL_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_APERTURES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FILTER_DENSITIES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FOCAL_LENGTHS;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_HYPERFOCAL_DISTANCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_MINIMUM_FOCUS_DISTANCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_FOCUS_DISTANCE_CALIBRATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key LENS_FACING;
    public static final android.hardware.camera2.CameraCharacteristics$Key NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key QUIRKS_USE_PARTIAL_RESULT;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_STREAMS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_INPUT_STREAMS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_PIPELINE_MAX_DEPTH;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_PARTIAL_RESULT_COUNT;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_MIN_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MAX_DIGITAL_ZOOM;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_MIN_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_SIZES;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_INPUT_OUTPUT_FORMATS_MAP;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STREAM_CONFIGURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MIN_FRAME_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STALL_DURATIONS;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP;
    public static final android.hardware.camera2.CameraCharacteristics$Key SCALER_CROPPING_TYPE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_ACTIVE_ARRAY_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_SENSITIVITY_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_COLOR_FILTER_ARRANGEMENT;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_EXPOSURE_TIME_RANGE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_MAX_FRAME_DURATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PHYSICAL_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PIXEL_ARRAY_SIZE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_WHITE_LEVEL;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX1;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX2;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_BLACK_LEVEL_PATTERN;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_MAX_ANALOG_SENSITIVITY;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION;
    public static final android.hardware.camera2.CameraCharacteristics$Key SENSOR_AVAILABLE_TEST_PATTERN_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_MAX_FACE_COUNT;
    public static final android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key TONEMAP_MAX_CURVE_POINTS;
    public static final android.hardware.camera2.CameraCharacteristics$Key TONEMAP_AVAILABLE_TONE_MAP_MODES;
    public static final android.hardware.camera2.CameraCharacteristics$Key LED_AVAILABLE_LEDS;
    public static final android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL;
    public static final android.hardware.camera2.CameraCharacteristics$Key SYNC_MAX_LATENCY;

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.impl.CameraMetadataNative r1, $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        $r2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties> = $r2;

        return;
    }

    public android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.impl.CameraMetadataNative $r1, $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r1 = new android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        specialinvoke $r1.<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>($r2);

        return $r1;
    }

    public java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>(r1);

        return $r3;
    }

    protected java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative mProperties>;

        $r3 = virtualinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>(r1);

        return $r3;
    }

    protected java.lang.Class getKeyClass()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1, $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 = class "android/hardware/camera2/CameraCharacteristics$Key";

        $r2 = (java.lang.Class) r1;

        return $r2;
    }

    public java.util.List getKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        int[] r1;
        java.util.List $r2, $r8, $r9, $r11;
        android.hardware.camera2.CameraCharacteristics$Key $r3;
        java.lang.Object $r4;
        java.lang.Class $r5, $r6;
        java.util.ArrayList $r7;
        java.lang.AssertionError $r10;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r2 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys>;

        if $r2 == null goto label1;

        $r11 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys>;

        return $r11;

     label1:
        $r3 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS>;

        $r4 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r3);

        r1 = (int[]) $r4;

        if r1 != null goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableCharacteristicsKeys must be non-null in the characteristics");

        throw $r10;

     label2:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Class getKeyClass()>();

        $r7 = staticinvoke <android.hardware.camera2.CameraCharacteristics: java.util.ArrayList getKeysStatic(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[])>($r5, $r6, r0, r1);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys> = $r8;

        $r9 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mKeys>;

        return $r9;
    }

    public java.util.List getAvailableCaptureRequestKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1, r2;
        int[] r3;
        java.util.List $r4, $r5, $r8;
        android.hardware.camera2.CameraCharacteristics$Key $r6;
        java.lang.Object $r7;
        java.lang.AssertionError $r9;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys>;

        if $r4 != null goto label2;

        r1 = class "android/hardware/camera2/CaptureRequest$Key";

        r2 = (java.lang.Class) r1;

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS>;

        $r7 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        r3 = (int[]) $r7;

        if r3 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableRequestKeys must be non-null in the characteristics");

        throw $r9;

     label1:
        $r8 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[])>(class "android/hardware/camera2/CaptureRequest", r2, r3);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys> = $r8;

     label2:
        $r5 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableRequestKeys>;

        return $r5;
    }

    public java.util.List getAvailableCaptureResultKeys()
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1, r2;
        int[] r3;
        java.util.List $r4, $r5, $r8;
        android.hardware.camera2.CameraCharacteristics$Key $r6;
        java.lang.Object $r7;
        java.lang.AssertionError $r9;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        $r4 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys>;

        if $r4 != null goto label2;

        r1 = class "android/hardware/camera2/CaptureResult$Key";

        r2 = (java.lang.Class) r1;

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS>;

        $r7 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        r3 = (int[]) $r7;

        if r3 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("android.request.availableResultKeys must be non-null in the characteristics");

        throw $r9;

     label1:
        $r8 = specialinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableKeyList(java.lang.Class,java.lang.Class,int[])>(class "android/hardware/camera2/CaptureResult", r2, r3);

        r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys> = $r8;

     label2:
        $r5 = r0.<android.hardware.camera2.CameraCharacteristics: java.util.List mAvailableResultKeys>;

        return $r5;
    }

    private java.util.List getAvailableKeyList(java.lang.Class, java.lang.Class, int[])
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Class r1, r2, $r5;
        int[] r3;
        java.util.ArrayList r4;
        boolean $z0, $z1;
        java.util.List $r6;
        java.lang.AssertionError $r7, $r8;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: int[];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "android/hardware/camera2/CameraMetadata");

        if $z0 == 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("metadataClass must be a strict subclass of CameraMetadata");

        throw $r8;

     label1:
        $r5 = class "android/hardware/camera2/CameraMetadata";

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 != 0 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("metadataClass must be a subclass of CameraMetadata");

        throw $r7;

     label2:
        r4 = staticinvoke <android.hardware.camera2.CameraCharacteristics: java.util.ArrayList getKeysStatic(java.lang.Class,java.lang.Class,android.hardware.camera2.CameraMetadata,int[])>(r1, r2, null, r3);

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r4);

        return $r6;
    }

    protected volatile java.lang.Object getProtected(java.lang.Object)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        java.lang.Object r1, $r3;
        android.hardware.camera2.CameraCharacteristics$Key $r2;

        r0 := @this: android.hardware.camera2.CameraCharacteristics;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.hardware.camera2.CameraCharacteristics$Key) r1;

        $r3 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        android.hardware.camera2.CameraCharacteristics$Key $r0, $r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r35, $r36, $r37, $r38, $r41, $r43, $r44, $r45, $r46, $r48, $r50, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r72, $r73, $r74, $r76, $r78, $r79, $r80, $r81, $r85, $r87, $r89, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r101, $r102, $r103, $r105, $r107, $r109, $r111, $r112, $r113, $r115;
        android.hardware.camera2.CameraCharacteristics$1 $r4;
        android.hardware.camera2.CameraCharacteristics$2 $r6;
        java.lang.Class $r14, $r16, $r18, $r22, $r31, $r33, $r34, $r39, $r40, $r42, $r47, $r49, $r51, $r53, $r57, $r67, $r75, $r77, $r82, $r84, $r86, $r88, $r90, $r100, $r104, $r106, $r108, $r110, $r114;
        android.hardware.camera2.CameraCharacteristics$3 $r71;
        android.hardware.camera2.CameraCharacteristics$4 $r83;

        $r0 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r0.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.colorCorrection.availableAberrationModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key COLOR_CORRECTION_AVAILABLE_ABERRATION_MODES> = $r0;

        $r1 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r1.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeAvailableAntibandingModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_ANTIBANDING_MODES> = $r1;

        $r2 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r2.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_MODES> = $r2;

        $r3 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r4 = new android.hardware.camera2.CameraCharacteristics$1;

        specialinvoke $r4.<android.hardware.camera2.CameraCharacteristics$1: void <init>()>();

        specialinvoke $r3.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.aeAvailableTargetFpsRanges", $r4);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES> = $r3;

        $r5 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r6 = new android.hardware.camera2.CameraCharacteristics$2;

        specialinvoke $r6.<android.hardware.camera2.CameraCharacteristics$2: void <init>()>();

        specialinvoke $r5.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.control.aeCompensationRange", $r6);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_RANGE> = $r5;

        $r7 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r7.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.aeCompensationStep", class "android/util/Rational");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_STEP> = $r7;

        $r8 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r8.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.afAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AF_AVAILABLE_MODES> = $r8;

        $r9 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r9.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableEffects", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_EFFECTS> = $r9;

        $r10 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r10.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableSceneModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_SCENE_MODES> = $r10;

        $r11 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r11.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableVideoStabilizationModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_VIDEO_STABILIZATION_MODES> = $r11;

        $r12 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r12.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.awbAvailableModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_AVAILABLE_MODES> = $r12;

        $r13 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r13.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegions", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS> = $r13;

        $r15 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r15.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAe", $r14);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE> = $r15;

        $r17 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r17.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAwb", $r16);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB> = $r17;

        $r19 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r18 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r19.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.maxRegionsAf", $r18);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF> = $r19;

        $r21 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r21.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.control.availableHighSpeedVideoConfigurations", class "[Landroid/hardware/camera2/params/HighSpeedVideoConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS> = $r21;

        $r20 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r20.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.edge.availableEdgeModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key EDGE_AVAILABLE_EDGE_MODES> = $r20;

        $r23 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r22 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r23.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.flash.info.available", $r22);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key FLASH_INFO_AVAILABLE> = $r23;

        $r25 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r25.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.hotPixel.availableHotPixelModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key HOT_PIXEL_AVAILABLE_HOT_PIXEL_MODES> = $r25;

        $r24 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r24.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.jpeg.availableThumbnailSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key JPEG_AVAILABLE_THUMBNAIL_SIZES> = $r24;

        $r27 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r27.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableApertures", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_APERTURES> = $r27;

        $r26 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r26.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableFilterDensities", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FILTER_DENSITIES> = $r26;

        $r29 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r29.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableFocalLengths", class "[F");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_FOCAL_LENGTHS> = $r29;

        $r28 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r28.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.availableOpticalStabilization", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_AVAILABLE_OPTICAL_STABILIZATION> = $r28;

        $r32 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r33 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r32.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.hyperfocalDistance", $r33);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_HYPERFOCAL_DISTANCE> = $r32;

        $r30 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r31 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r30.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.minimumFocusDistance", $r31);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_MINIMUM_FOCUS_DISTANCE> = $r30;

        $r36 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r36.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.shadingMapSize", class "android/util/Size");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE> = $r36;

        $r37 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r34 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r37.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.info.focusDistanceCalibration", $r34);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_FOCUS_DISTANCE_CALIBRATION> = $r37;

        $r35 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r40 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r35.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.lens.facing", $r40);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_FACING> = $r35;

        $r41 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r41.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.noiseReduction.availableNoiseReductionModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key NOISE_REDUCTION_AVAILABLE_NOISE_REDUCTION_MODES> = $r41;

        $r38 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r39 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r38.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.quirks.usePartialResult", $r39);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key QUIRKS_USE_PARTIAL_RESULT> = $r38;

        $r44 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r44.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputStreams", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_STREAMS> = $r44;

        $r45 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r42 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r45.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputRaw", $r42);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW> = $r45;

        $r43 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r49 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r43.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputProc", $r49);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC> = $r43;

        $r48 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r47 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r48.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumOutputProcStalling", $r47);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING> = $r48;

        $r46 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r53 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r46.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.maxNumInputStreams", $r53);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_INPUT_STREAMS> = $r46;

        $r52 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r51 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r52.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.pipelineMaxDepth", $r51);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_PIPELINE_MAX_DEPTH> = $r52;

        $r50 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r57 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r50.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.partialResultCount", $r57);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_PARTIAL_RESULT_COUNT> = $r50;

        $r56 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r56.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableCapabilities", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CAPABILITIES> = $r56;

        $r55 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r55.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableRequestKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_REQUEST_KEYS> = $r55;

        $r54 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r54.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableResultKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_RESULT_KEYS> = $r54;

        $r61 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r61.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.request.availableCharacteristicsKeys", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_AVAILABLE_CHARACTERISTICS_KEYS> = $r61;

        $r60 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r60.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableFormats", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS> = $r60;

        $r59 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r59.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableJpegMinDurations", class "[J");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_MIN_DURATIONS> = $r59;

        $r58 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r58.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableJpegSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_JPEG_SIZES> = $r58;

        $r66 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r67 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r66.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableMaxDigitalZoom", $r67);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MAX_DIGITAL_ZOOM> = $r66;

        $r68 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r68.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableProcessedMinDurations", class "[J");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_MIN_DURATIONS> = $r68;

        $r69 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r69.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableProcessedSizes", class "[Landroid/util/Size;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_PROCESSED_SIZES> = $r69;

        $r62 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r62.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableInputOutputFormatsMap", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_INPUT_OUTPUT_FORMATS_MAP> = $r62;

        $r63 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r63.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableStreamConfigurations", class "[Landroid/hardware/camera2/params/StreamConfiguration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STREAM_CONFIGURATIONS> = $r63;

        $r64 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r64.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableMinFrameDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MIN_FRAME_DURATIONS> = $r64;

        $r65 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r65.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.availableStallDurations", class "[Landroid/hardware/camera2/params/StreamConfigurationDuration;");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STALL_DURATIONS> = $r65;

        $r73 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r73.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.streamConfigurationMap", class "android/hardware/camera2/params/StreamConfigurationMap");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP> = $r73;

        $r74 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r75 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r74.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.scaler.croppingType", $r75);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_CROPPING_TYPE> = $r74;

        $r76 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r76.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.activeArraySize", class "android/graphics/Rect");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_ACTIVE_ARRAY_SIZE> = $r76;

        $r70 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r71 = new android.hardware.camera2.CameraCharacteristics$3;

        specialinvoke $r71.<android.hardware.camera2.CameraCharacteristics$3: void <init>()>();

        specialinvoke $r70.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.sensor.info.sensitivityRange", $r71);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_SENSITIVITY_RANGE> = $r70;

        $r72 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r82 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r72.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.colorFilterArrangement", $r82);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_COLOR_FILTER_ARRANGEMENT> = $r72;

        $r81 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r83 = new android.hardware.camera2.CameraCharacteristics$4;

        specialinvoke $r83.<android.hardware.camera2.CameraCharacteristics$4: void <init>()>();

        specialinvoke $r81.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>("android.sensor.info.exposureTimeRange", $r83);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_EXPOSURE_TIME_RANGE> = $r81;

        $r78 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r77 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r78.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.maxFrameDuration", $r77);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_MAX_FRAME_DURATION> = $r78;

        $r80 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r80.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.physicalSize", class "android/util/SizeF");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PHYSICAL_SIZE> = $r80;

        $r79 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r79.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.pixelArraySize", class "android/util/Size");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_PIXEL_ARRAY_SIZE> = $r79;

        $r89 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r88 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r89.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.whiteLevel", $r88);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_WHITE_LEVEL> = $r89;

        $r91 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r90 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r91.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.info.timestampSource", $r90);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE> = $r91;

        $r85 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r84 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r85.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.referenceIlluminant1", $r84);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT1> = $r85;

        $r87 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r86 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r87.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.referenceIlluminant2", $r86);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_REFERENCE_ILLUMINANT2> = $r87;

        $r98 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r98.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.calibrationTransform1", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM1> = $r98;

        $r99 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r99.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.calibrationTransform2", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_CALIBRATION_TRANSFORM2> = $r99;

        $r96 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r96.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.colorTransform1", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM1> = $r96;

        $r97 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r97.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.colorTransform2", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_COLOR_TRANSFORM2> = $r97;

        $r94 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r94.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.forwardMatrix1", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX1> = $r94;

        $r95 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r95.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.forwardMatrix2", class "android/hardware/camera2/params/ColorSpaceTransform");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_FORWARD_MATRIX2> = $r95;

        $r92 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r92.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.blackLevelPattern", class "android/hardware/camera2/params/BlackLevelPattern");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_BLACK_LEVEL_PATTERN> = $r92;

        $r93 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r106 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r93.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.maxAnalogSensitivity", $r106);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_MAX_ANALOG_SENSITIVITY> = $r93;

        $r107 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r104 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r107.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.orientation", $r104);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION> = $r107;

        $r105 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r105.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sensor.availableTestPatternModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_AVAILABLE_TEST_PATTERN_MODES> = $r105;

        $r102 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r102.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableFaceDetectModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_FACE_DETECT_MODES> = $r102;

        $r103 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r100 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r103.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.maxFaceCount", $r100);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_MAX_FACE_COUNT> = $r103;

        $r101 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r101.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.statistics.info.availableHotPixelMapModes", class "[Z");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_AVAILABLE_HOT_PIXEL_MAP_MODES> = $r101;

        $r115 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r114 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r115.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.maxCurvePoints", $r114);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key TONEMAP_MAX_CURVE_POINTS> = $r115;

        $r113 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r113.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.tonemap.availableToneMapModes", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key TONEMAP_AVAILABLE_TONE_MAP_MODES> = $r113;

        $r112 = new android.hardware.camera2.CameraCharacteristics$Key;

        specialinvoke $r112.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.led.availableLeds", class "[I");

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LED_AVAILABLE_LEDS> = $r112;

        $r111 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r110 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r111.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.info.supportedHardwareLevel", $r110);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL> = $r111;

        $r109 = new android.hardware.camera2.CameraCharacteristics$Key;

        $r108 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r109.<android.hardware.camera2.CameraCharacteristics$Key: void <init>(java.lang.String,java.lang.Class)>("android.sync.maxLatency", $r108);

        <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SYNC_MAX_LATENCY> = $r109;

        return;
    }
}
