class android.hardware.camera2.legacy.PerfMeasurement extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int DEFAULT_MAX_QUERIES;
    private final long mNativeContext;
    private int mCompletedQueryCount;
    private java.util.ArrayList mCollectedGpuDurations;
    private java.util.ArrayList mCollectedCpuDurations;
    private java.util.ArrayList mCollectedTimestamps;
    private java.util.Queue mTimestampQueue;
    private java.util.Queue mCpuDurationsQueue;
    private long mStartTimeNs;
    private static final long NO_DURATION_YET;
    private static final long FAILED_TIMING;

    public void <init>()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        java.util.ArrayList $r1, $r2, $r3;
        java.util.LinkedList $r4, $r5;
        long $l0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue> = $r5;

        $l0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeCreateContext(int)>(3);

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext> = $l0;

        return;
    }

    public void <init>(int)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        int i0;
        java.util.ArrayList $r1, $r2, $r3;
        java.util.LinkedList $r4, $r5;
        long $l1;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue> = $r5;

        if i0 >= 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxQueries is less than 1");

        throw $r6;

     label1:
        $l1 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeCreateContext(int)>(i0);

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext> = $l1;

        return;
    }

    public static boolean isGlTimingSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: boolean nativeQuerySupport()>();

        return $z0;
    }

    public void dumpPerformanceData(java.lang.String)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        java.lang.String r1, $r18, $r30;
        java.io.BufferedWriter r2, $r6;
        java.lang.Throwable r3, r4, r5, $r20, $r21, $r22, $r23, r31, r32;
        int i0, $i1;
        java.io.FileWriter $r7;
        java.util.ArrayList $r8, $r9, $r10, $r11, $r13, $r14, $r17;
        java.lang.Object[] $r12;
        java.lang.Object $r15, $r16, $r19;
        java.lang.StringBuilder $r24, $r26, $r27, $r28, $r29;
        java.io.IOException $r25, r33;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        r1 := @parameter0: java.lang.String;

     label01:
        $r6 = new java.io.BufferedWriter;

        $r7 = new java.io.FileWriter;

        specialinvoke $r7.<java.io.FileWriter: void <init>(java.lang.String)>(r1);

        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7);

        r2 = $r6;

        r3 = null;

     label02:
        virtualinvoke r2.<java.io.BufferedWriter: void write(java.lang.String)>("timestamp gpu_duration cpu_duration\n");

        i0 = 0;

     label03:
        $r8 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label04;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        $r15 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r12[0] = $r15;

        $r14 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r12[1] = $r16;

        $r17 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        $r19 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r12[2] = $r19;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d %d %d\n", $r12);

        virtualinvoke r2.<java.io.BufferedWriter: void write(java.lang.String)>($r18);

        i0 = i0 + 1;

        goto label03;

     label04:
        $r9 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r10 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

        $r11 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

     label05:
        if r2 == null goto label18;

        if r3 == null goto label09;

     label06:
        virtualinvoke r2.<java.io.BufferedWriter: void close()>();

     label07:
        goto label18;

     label08:
        $r20 := @caughtexception;

        r31 = $r20;

        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r31);

        goto label18;

     label09:
        virtualinvoke r2.<java.io.BufferedWriter: void close()>();

        goto label18;

     label10:
        $r23 := @caughtexception;

        r32 = $r23;

        r3 = r32;

        throw r32;

     label11:
        $r21 := @caughtexception;

        r4 = $r21;

     label12:
        if r2 == null goto label17;

        if r3 == null goto label16;

     label13:
        virtualinvoke r2.<java.io.BufferedWriter: void close()>();

     label14:
        goto label17;

     label15:
        $r22 := @caughtexception;

        r5 = $r22;

        virtualinvoke r3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r5);

        goto label17;

     label16:
        virtualinvoke r2.<java.io.BufferedWriter: void close()>();

     label17:
        throw r4;

     label18:
        goto label20;

     label19:
        $r25 := @caughtexception;

        r33 = $r25;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing data dump to ");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfMeasurement", $r30);

     label20:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label05 with label10;
        catch java.lang.Throwable from label02 to label05 with label11;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label10 to label12 with label11;
        catch java.io.IOException from label01 to label18 with label19;
    }

    public void startTimer()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long $l0, $l1;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeStartGlTimer(long)>($l0);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r0.<android.hardware.camera2.legacy.PerfMeasurement: long mStartTimeNs> = $l1;

        return;
    }

    public void stopTimer()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0, l1, $l2, $l3, $l4, $l7, $l8;
        java.util.Queue $r1, $r3, $r4, $r5, $r6, $r12, $r13, $r16, $r18;
        java.lang.Long $r2, $r10, $r14, $r17, $r21, $r22;
        byte $b5, $b6;
        boolean $z1, $z2, $z4, $z6;
        java.util.ArrayList $r8, $r11, $r20;
        java.lang.Object $r15, $r19;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $r1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $l2 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mStartTimeNs>;

        $l3 = l0 - $l2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r1.<java.util.Queue: boolean add(java.lang.Object)>($r2);

        $l4 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeStopGlTimer(long)>($l4);

        l1 = specialinvoke r0.<android.hardware.camera2.legacy.PerfMeasurement: long getNextGlDuration()>();

        $b5 = l1 cmp 0L;

        if $b5 <= 0 goto label5;

        $r8 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedGpuDurations>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedTimestamps>;

        $r12 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $z4 = interfaceinvoke $r12.<java.util.Queue: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $l7 = -1L;

        goto label2;

     label1:
        $r13 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $r15 = interfaceinvoke $r13.<java.util.Queue: java.lang.Object poll()>();

        $r14 = (java.lang.Long) $r15;

        $l7 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

     label2:
        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r20 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.ArrayList mCollectedCpuDurations>;

        $r16 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $z6 = interfaceinvoke $r16.<java.util.Queue: boolean isEmpty()>();

        if $z6 == 0 goto label3;

        $l8 = -1L;

        goto label4;

     label3:
        $r18 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $r19 = interfaceinvoke $r18.<java.util.Queue: java.lang.Object poll()>();

        $r22 = (java.lang.Long) $r19;

        $l8 = virtualinvoke $r22.<java.lang.Long: long longValue()>();

     label4:
        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label5:
        $b6 = l1 cmp -2L;

        if $b6 != 0 goto label7;

        $r3 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $z1 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r6 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        interfaceinvoke $r6.<java.util.Queue: java.lang.Object poll()>();

     label6:
        $r4 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        $z2 = interfaceinvoke $r4.<java.util.Queue: boolean isEmpty()>();

        if $z2 != 0 goto label7;

        $r5 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mCpuDurationsQueue>;

        interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

     label7:
        return;
    }

    public void addTimestamp(long)
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0;
        java.util.Queue $r1;
        java.lang.Long $r2;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        l0 := @parameter0: long;

        $r1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: java.util.Queue mTimestampQueue>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<java.util.Queue: boolean add(java.lang.Object)>($r2);

        return;
    }

    private long getNextGlDuration()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long l0, $l1;
        byte $b2;
        int $i3, $i4;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l1 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        l0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: long nativeGetNextGlDuration(long)>($l1);

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        $i3 = r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount>;

        $i4 = $i3 + 1;

        r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount> = $i4;

     label1:
        return l0;
    }

    public int getCompletedQueryCount()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $i0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: int mCompletedQueryCount>;

        return $i0;
    }

    protected void finalize()
    {
        android.hardware.camera2.legacy.PerfMeasurement r0;
        long $l0;

        r0 := @this: android.hardware.camera2.legacy.PerfMeasurement;

        $l0 = r0.<android.hardware.camera2.legacy.PerfMeasurement: long mNativeContext>;

        staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: void nativeDeleteContext(long)>($l0);

        return;
    }

    private static native long nativeCreateContext(int);

    private static native void nativeDeleteContext(long);

    private static native boolean nativeQuerySupport();

    protected static native void nativeStartGlTimer(long);

    protected static native void nativeStopGlTimer(long);

    protected static native long nativeGetNextGlDuration(long);

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.PerfMeasurement: long FAILED_TIMING> = -2L;

        <android.hardware.camera2.legacy.PerfMeasurement: long NO_DURATION_YET> = -1L;

        <android.hardware.camera2.legacy.PerfMeasurement: int DEFAULT_MAX_QUERIES> = 3;

        <android.hardware.camera2.legacy.PerfMeasurement: java.lang.String TAG> = "PerfMeasurement";

        return;
    }
}
