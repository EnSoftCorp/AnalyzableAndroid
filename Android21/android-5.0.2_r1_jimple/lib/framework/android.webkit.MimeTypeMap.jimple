public class android.webkit.MimeTypeMap extends java.lang.Object
{
    private static final android.webkit.MimeTypeMap sMimeTypeMap;

    private void <init>()
    {
        android.webkit.MimeTypeMap r0;

        r0 := @this: android.webkit.MimeTypeMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getFileExtensionFromUrl(java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r3;
        int i0, i1, i2, i3, $i4, $i5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label5;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(35);

        if i0 <= 0 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(63);

        if i1 <= 0 goto label2;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if 0 > i2 goto label3;

        $i5 = i2 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5);

        goto label4;

     label3:
        $r3 = r0;

     label4:
        r1 = $r3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("[a-zA-Z_0-9\\.\\-\\(\\)\\%]+", r1);

        if $z2 == 0 goto label5;

        i3 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if 0 > i3 goto label5;

        $i4 = i3 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

        return $r2;

     label5:
        return "";
    }

    public boolean hasMimeType(java.lang.String)
    {
        android.webkit.MimeTypeMap r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.webkit.MimeTypeMap;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <libcore.net.MimeUtils: boolean hasMimeType(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String getMimeTypeFromExtension(java.lang.String)
    {
        android.webkit.MimeTypeMap r0;
        java.lang.String r1, $r2;

        r0 := @this: android.webkit.MimeTypeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <libcore.net.MimeUtils: java.lang.String guessMimeTypeFromExtension(java.lang.String)>(r1);

        return $r2;
    }

    private static java.lang.String mimeTypeFromExtension(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <libcore.net.MimeUtils: java.lang.String guessMimeTypeFromExtension(java.lang.String)>(r0);

        return $r1;
    }

    public boolean hasExtension(java.lang.String)
    {
        android.webkit.MimeTypeMap r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.webkit.MimeTypeMap;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <libcore.net.MimeUtils: boolean hasExtension(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String getExtensionFromMimeType(java.lang.String)
    {
        android.webkit.MimeTypeMap r0;
        java.lang.String r1, $r2;

        r0 := @this: android.webkit.MimeTypeMap;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <libcore.net.MimeUtils: java.lang.String guessExtensionFromMimeType(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String remapGenericMimeType(java.lang.String, java.lang.String, java.lang.String)
    {
        android.webkit.MimeTypeMap r0;
        java.lang.String r1, r2, r3, r4, r5, r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.webkit.MimeTypeMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r7 = "text/plain";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = "application/octet-stream";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label5;

     label1:
        r4 = null;

        if r3 == null goto label2;

        r4 = staticinvoke <android.webkit.URLUtil: java.lang.String parseContentDisposition(java.lang.String)>(r3);

     label2:
        if r4 == null goto label3;

        r2 = r4;

     label3:
        r5 = staticinvoke <android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>(r2);

        r6 = virtualinvoke r0.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>(r5);

        if r6 == null goto label4;

        r1 = r6;

     label4:
        goto label7;

     label5:
        $r9 = "text/vnd.wap.wml";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label6;

        r1 = "text/plain";

        goto label7;

     label6:
        $r10 = "application/vnd.wap.xhtml+xml";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label7;

        r1 = "application/xhtml+xml";

     label7:
        return r1;
    }

    public static android.webkit.MimeTypeMap getSingleton()
    {
        android.webkit.MimeTypeMap $r0;

        $r0 = <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap>;

        return $r0;
    }

    static void <clinit>()
    {
        android.webkit.MimeTypeMap $r0;

        $r0 = new android.webkit.MimeTypeMap;

        specialinvoke $r0.<android.webkit.MimeTypeMap: void <init>()>();

        <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap sMimeTypeMap> = $r0;

        return;
    }
}
