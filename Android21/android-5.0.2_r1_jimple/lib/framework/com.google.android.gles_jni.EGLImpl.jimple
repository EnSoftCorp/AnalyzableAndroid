public class com.google.android.gles_jni.EGLImpl extends java.lang.Object implements javax.microedition.khronos.egl.EGL10
{
    private com.google.android.gles_jni.EGLContextImpl mContext;
    private com.google.android.gles_jni.EGLDisplayImpl mDisplay;
    private com.google.android.gles_jni.EGLSurfaceImpl mSurface;

    public void <init>()
    {
        com.google.android.gles_jni.EGLImpl r0;
        com.google.android.gles_jni.EGLContextImpl $r1;
        com.google.android.gles_jni.EGLDisplayImpl $r2;
        com.google.android.gles_jni.EGLSurfaceImpl $r3;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLContextImpl: void <init>(long)>(-1L);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r1;

        $r2 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r2.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(long)>(-1L);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r2;

        $r3 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>(-1L);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r3;

        return;
    }

    public native boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[]);

    public native boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext, int, int[]);

    public native boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, int, int[]);

    public native boolean eglReleaseThread();

    public native boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay, int[], javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public native boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int, int[]);

    public native boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public native int eglGetError();

    public native boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext);

    public native boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLContext);

    public native java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay, int);

    public native boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay);

    public native boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, java.lang.Object);

    public native boolean eglWaitGL();

    public native boolean eglWaitNative(int, java.lang.Object);

    public static native int getInitCount(javax.microedition.khronos.egl.EGLDisplay);

    public javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        javax.microedition.khronos.egl.EGLContext r3, $r6;
        int[] r4;
        long l0;
        byte $b1;
        com.google.android.gles_jni.EGLContextImpl $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: javax.microedition.khronos.egl.EGLContext;

        r4 := @parameter3: int[];

        l0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>(r1, r2, r3, r4);

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r6 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        return $r6;

     label1:
        $r5 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r5.<com.google.android.gles_jni.EGLContextImpl: void <init>(long)>(l0);

        return $r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        int[] r3;
        long l0;
        byte $b1;
        com.google.android.gles_jni.EGLSurfaceImpl $r4;
        javax.microedition.khronos.egl.EGLSurface $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: int[];

        l0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>(r1, r2, r3);

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r5 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r5;

     label1:
        $r4 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>(l0);

        return $r4;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        com.google.android.gles_jni.EGLSurfaceImpl r5, $r6;
        long $l0;
        byte $b1;
        javax.microedition.khronos.egl.EGLSurface $r7;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        $r6 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r6.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>()>();

        r5 = $r6;

        specialinvoke r0.<com.google.android.gles_jni.EGLImpl: void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r5, r1, r2, r3, r4);

        $l0 = r5.<com.google.android.gles_jni.EGLSurfaceImpl: long mEGLSurface>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r7 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r7;

     label1:
        return r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        android.view.Surface r5;
        android.view.SurfaceView r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.UnsupportedOperationException $r7;
        byte $b0;
        com.google.android.gles_jni.EGLSurfaceImpl $r8;
        javax.microedition.khronos.egl.EGLSurface $r9;
        android.view.SurfaceHolder $r10, r11;
        long l1;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        r5 = null;

        $z0 = r3 instanceof android.view.SurfaceView;

        if $z0 == 0 goto label1;

        r6 = (android.view.SurfaceView) r3;

        $r10 = virtualinvoke r6.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        r5 = interfaceinvoke $r10.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        goto label3;

     label1:
        $z1 = r3 instanceof android.view.SurfaceHolder;

        if $z1 == 0 goto label2;

        r11 = (android.view.SurfaceHolder) r3;

        r5 = interfaceinvoke r11.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        goto label3;

     label2:
        $z2 = r3 instanceof android.view.Surface;

        if $z2 == 0 goto label3;

        r5 = (android.view.Surface) r3;

     label3:
        if r5 == null goto label4;

        l1 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r5, r4);

        goto label6;

     label4:
        $z3 = r3 instanceof android.graphics.SurfaceTexture;

        if $z3 == 0 goto label5;

        l1 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglCreateWindowSurfaceTexture(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r3, r4);

        goto label6;

     label5:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("eglCreateWindowSurface() can only be called with an instance of Surface, SurfaceView, SurfaceHolder or SurfaceTexture at the moment.");

        throw $r7;

     label6:
        $b0 = l1 cmp 0L;

        if $b0 != 0 goto label7;

        $r9 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r9;

     label7:
        $r8 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r8.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>(l1);

        return $r8;
    }

    public synchronized javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)
    {
        com.google.android.gles_jni.EGLImpl r0;
        java.lang.Object r1;
        long l0, $l2;
        byte $b1, $b3;
        com.google.android.gles_jni.EGLDisplayImpl $r2, $r3, $r4;
        javax.microedition.khronos.egl.EGLDisplay $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: java.lang.Object;

        l0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglGetDisplay(java.lang.Object)>(r1);

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r5 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay EGL_NO_DISPLAY>;

        return $r5;

     label1:
        $r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $l2 = $r2.<com.google.android.gles_jni.EGLDisplayImpl: long mEGLDisplay>;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        $r4 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(long)>(l0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r4;

     label2:
        $r3 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        return $r3;
    }

    public synchronized javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()
    {
        com.google.android.gles_jni.EGLImpl r0;
        long l0, $l2;
        byte $b1, $b3;
        com.google.android.gles_jni.EGLContextImpl $r1, $r2, $r3;
        javax.microedition.khronos.egl.EGLContext $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        l0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglGetCurrentContext()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r4 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        return $r4;

     label1:
        $r1 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

        $l2 = $r1.<com.google.android.gles_jni.EGLContextImpl: long mEGLContext>;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        $r3 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLContextImpl: void <init>(long)>(l0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r3;

     label2:
        $r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

        return $r2;
    }

    public synchronized javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()
    {
        com.google.android.gles_jni.EGLImpl r0;
        long l0, $l2;
        byte $b1, $b3;
        com.google.android.gles_jni.EGLDisplayImpl $r1, $r2, $r3;
        javax.microedition.khronos.egl.EGLDisplay $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        l0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglGetCurrentDisplay()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r4 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay EGL_NO_DISPLAY>;

        return $r4;

     label1:
        $r1 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $l2 = $r1.<com.google.android.gles_jni.EGLDisplayImpl: long mEGLDisplay>;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        $r3 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(long)>(l0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r3;

     label2:
        $r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        return $r2;
    }

    public synchronized javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)
    {
        com.google.android.gles_jni.EGLImpl r0;
        int i0;
        long l1, $l3;
        byte $b2, $b4;
        com.google.android.gles_jni.EGLSurfaceImpl $r1, $r2, $r3;
        javax.microedition.khronos.egl.EGLSurface $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        i0 := @parameter0: int;

        l1 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: long _eglGetCurrentSurface(int)>(i0);

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r4 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r4;

     label1:
        $r1 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

        $l3 = $r1.<com.google.android.gles_jni.EGLSurfaceImpl: long mEGLSurface>;

        $b4 = $l3 cmp l1;

        if $b4 == 0 goto label2;

        $r3 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>(l1);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r3;

     label2:
        $r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

        return $r2;
    }

    private native long _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[]);

    private native long _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[]);

    private native void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native long _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native long _eglCreateWindowSurfaceTexture(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native long _eglGetDisplay(java.lang.Object);

    private native long _eglGetCurrentContext();

    private native long _eglGetCurrentDisplay();

    private native long _eglGetCurrentSurface(int);

    private static native void _nativeClassInit();

    static void <clinit>()
    {
        staticinvoke <com.google.android.gles_jni.EGLImpl: void _nativeClassInit()>();

        return;
    }
}
