public class android.inputmethodservice.SoftInputWindow extends android.app.Dialog
{
    final java.lang.String mName;
    final android.inputmethodservice.SoftInputWindow$Callback mCallback;
    final android.view.KeyEvent$Callback mKeyEventCallback;
    final android.view.KeyEvent$DispatcherState mDispatcherState;
    final int mWindowType;
    final int mGravity;
    final boolean mTakesFocus;
    private final android.graphics.Rect mBounds;

    public void setToken(android.os.IBinder)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.os.IBinder r1;
        android.view.WindowManager$LayoutParams r2;
        android.view.Window $r3, $r4;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.os.IBinder;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r2 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = r1;

        $r4 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r2);

        return;
    }

    public void <init>(android.content.Context, java.lang.String, int, android.inputmethodservice.SoftInputWindow$Callback, android.view.KeyEvent$Callback, android.view.KeyEvent$DispatcherState, int, int, boolean)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.content.Context r1;
        java.lang.String r2;
        int i0, i1, i2;
        android.inputmethodservice.SoftInputWindow$Callback r3;
        android.view.KeyEvent$Callback r4;
        android.view.KeyEvent$DispatcherState r5;
        boolean z0;
        android.graphics.Rect $r6;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.inputmethodservice.SoftInputWindow$Callback;

        r4 := @parameter4: android.view.KeyEvent$Callback;

        r5 := @parameter5: android.view.KeyEvent$DispatcherState;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        z0 := @parameter8: boolean;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int)>(r1, i0);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds> = $r6;

        r0.<android.inputmethodservice.SoftInputWindow: java.lang.String mName> = r2;

        r0.<android.inputmethodservice.SoftInputWindow: android.inputmethodservice.SoftInputWindow$Callback mCallback> = r3;

        r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback> = r4;

        r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$DispatcherState mDispatcherState> = r5;

        r0.<android.inputmethodservice.SoftInputWindow: int mWindowType> = i1;

        r0.<android.inputmethodservice.SoftInputWindow: int mGravity> = i2;

        r0.<android.inputmethodservice.SoftInputWindow: boolean mTakesFocus> = z0;

        specialinvoke r0.<android.inputmethodservice.SoftInputWindow: void initDockWindow()>();

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.inputmethodservice.SoftInputWindow r0;
        boolean z0;
        android.view.KeyEvent$DispatcherState $r1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Dialog: void onWindowFocusChanged(boolean)>(z0);

        $r1 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$DispatcherState mDispatcherState>;

        virtualinvoke $r1.<android.view.KeyEvent$DispatcherState: void reset()>();

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.MotionEvent r1, r2;
        boolean z0, $z1, $z2;
        android.view.Window $r3;
        android.view.View $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        $r5 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        virtualinvoke $r4.<android.view.View: void getHitRect(android.graphics.Rect)>($r5);

        $r6 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $r7 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i1 = $r7.<android.graphics.Rect: int top>;

        $f1 = (float) $i1;

        $r8 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i2 = $r8.<android.graphics.Rect: int right>;

        $i3 = $i2 - 1;

        $f2 = (float) $i3;

        $r9 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i4 = $r9.<android.graphics.Rect: int bottom>;

        $i5 = $i4 - 1;

        $f0 = (float) $i5;

        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isWithinBoundsNoHistory(float,float,float,float)>($f3, $f1, $f2, $f0);

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $r10 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i6 = $r10.<android.graphics.Rect: int left>;

        $f5 = (float) $i6;

        $r11 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i7 = $r11.<android.graphics.Rect: int top>;

        $f4 = (float) $i7;

        $r12 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i8 = $r12.<android.graphics.Rect: int right>;

        $i9 = $i8 - 1;

        $f7 = (float) $i9;

        $r13 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i11 = $r13.<android.graphics.Rect: int bottom>;

        $i10 = $i11 - 1;

        $f6 = (float) $i10;

        r2 = virtualinvoke r1.<android.view.MotionEvent: android.view.MotionEvent clampNoHistory(float,float,float,float)>($f5, $f4, $f7, $f6);

        z0 = specialinvoke r0.<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return z0;
    }

    public void setGravity(int)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window $r2, $r3;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1.<android.view.WindowManager$LayoutParams: int gravity> = i0;

        specialinvoke r0.<android.inputmethodservice.SoftInputWindow: void updateWidthHeight(android.view.WindowManager$LayoutParams)>(r1);

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

        return;
    }

    public int getGravity()
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.Window $r1;
        android.view.WindowManager$LayoutParams $r2;
        int $i0;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        $r1 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int gravity>;

        return $i0;
    }

    private void updateWidthHeight(android.view.WindowManager$LayoutParams)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.WindowManager$LayoutParams r1;
        int $i0, $i1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i0 == 48 goto label1;

        $i1 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i1 != 80 goto label2;

     label1:
        r1.<android.view.WindowManager$LayoutParams: int width> = -1;

        r1.<android.view.WindowManager$LayoutParams: int height> = -2;

        goto label3;

     label2:
        r1.<android.view.WindowManager$LayoutParams: int width> = -2;

        r1.<android.view.WindowManager$LayoutParams: int height> = -1;

     label3:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0;
        android.view.KeyEvent r1;
        android.view.KeyEvent$Callback $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        $z1 = interfaceinvoke $r3.<android.view.KeyEvent$Callback: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0;
        android.view.KeyEvent r1;
        android.view.KeyEvent$Callback $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        $z1 = interfaceinvoke $r3.<android.view.KeyEvent$Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>(i0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0;
        android.view.KeyEvent r1;
        android.view.KeyEvent$Callback $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        $z1 = interfaceinvoke $r3.<android.view.KeyEvent$Callback: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0, i1;
        android.view.KeyEvent r1;
        android.view.KeyEvent$Callback $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $r2 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$Callback mKeyEventCallback>;

        $z1 = interfaceinvoke $r3.<android.view.KeyEvent$Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        return $z0;
    }

    public void onBackPressed()
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.inputmethodservice.SoftInputWindow$Callback $r1, $r2;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        $r1 = r0.<android.inputmethodservice.SoftInputWindow: android.inputmethodservice.SoftInputWindow$Callback mCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<android.inputmethodservice.SoftInputWindow: android.inputmethodservice.SoftInputWindow$Callback mCallback>;

        interfaceinvoke $r2.<android.inputmethodservice.SoftInputWindow$Callback: void onBackPressed()>();

        goto label2;

     label1:
        specialinvoke r0.<android.app.Dialog: void onBackPressed()>();

     label2:
        return;
    }

    private void initDockWindow()
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.WindowManager$LayoutParams r1;
        short s0, s1, s4;
        android.view.Window $r2, $r4, $r5;
        int $i2, $i3;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = r0.<android.inputmethodservice.SoftInputWindow: int mWindowType>;

        r1.<android.view.WindowManager$LayoutParams: int type> = $i2;

        $r3 = r0.<android.inputmethodservice.SoftInputWindow: java.lang.String mName>;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r3);

        $i3 = r0.<android.inputmethodservice.SoftInputWindow: int mGravity>;

        r1.<android.view.WindowManager$LayoutParams: int gravity> = $i3;

        specialinvoke r0.<android.inputmethodservice.SoftInputWindow: void updateWidthHeight(android.view.WindowManager$LayoutParams)>(r1);

        $r4 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

        s0 = 256;

        s1 = 266;

        $z0 = r0.<android.inputmethodservice.SoftInputWindow: boolean mTakesFocus>;

        if $z0 != 0 goto label1;

        s4 = s0 | 8;

        goto label2;

     label1:
        s4 = s0 | 32;

        s1 = s1 | 32;

     label2:
        $r5 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r5.<android.view.Window: void setFlags(int,int)>(s4, s1);

        return;
    }
}
