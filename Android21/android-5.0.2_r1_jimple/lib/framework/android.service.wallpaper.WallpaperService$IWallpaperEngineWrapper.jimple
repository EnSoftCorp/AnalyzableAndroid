class android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper extends android.service.wallpaper.IWallpaperEngine$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private final com.android.internal.os.HandlerCaller mCaller;
    final android.service.wallpaper.IWallpaperConnection mConnection;
    final android.os.IBinder mWindowToken;
    final int mWindowType;
    final boolean mIsPreview;
    boolean mShownReported;
    int mReqWidth;
    int mReqHeight;
    final android.graphics.Rect mDisplayPadding;
    android.service.wallpaper.WallpaperService$Engine mEngine;
    final android.service.wallpaper.WallpaperService this$0;

    void <init>(android.service.wallpaper.WallpaperService, android.service.wallpaper.WallpaperService, android.service.wallpaper.IWallpaperConnection, android.os.IBinder, int, boolean, int, int, android.graphics.Rect)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.service.wallpaper.WallpaperService r1, r2;
        android.service.wallpaper.IWallpaperConnection r3;
        android.os.IBinder r4;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Rect r5, $r7, $r10;
        android.os.Message r6;
        com.android.internal.os.HandlerCaller $r8, $r11, $r12;
        android.os.Looper $r9;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.service.wallpaper.WallpaperService;

        r2 := @parameter1: android.service.wallpaper.WallpaperService;

        r3 := @parameter2: android.service.wallpaper.IWallpaperConnection;

        r4 := @parameter3: android.os.IBinder;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r5 := @parameter8: android.graphics.Rect;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void <init>()>();

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding> = $r7;

        $r8 = new com.android.internal.os.HandlerCaller;

        $r9 = virtualinvoke r2.<android.service.wallpaper.WallpaperService: android.os.Looper getMainLooper()>();

        specialinvoke $r8.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r2, $r9, r0, 1);

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller> = $r8;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection> = r3;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.os.IBinder mWindowToken> = r4;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mWindowType> = i0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mIsPreview> = z0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth> = i1;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight> = i2;

        $r10 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>(r5);

        $r11 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r6 = virtualinvoke $r11.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(10);

        $r12 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r12.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r6);

        return;
    }

    public void setDesiredSize(int, int)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        int i0, i1;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(30, i0, i1);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setDisplayPadding(android.graphics.Rect)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.graphics.Rect r1;
        android.os.Message r2;
        com.android.internal.os.HandlerCaller $r3, $r4;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r2 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(40, r1);

        $r4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r2);

        return;
    }

    public void setVisibility(boolean)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        byte $b0;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(10010, $b0);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void dispatchPointer(android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.view.MotionEvent r1;
        android.service.wallpaper.WallpaperService$Engine $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if $r2 == null goto label1;

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        staticinvoke <android.service.wallpaper.WallpaperService$Engine: void access$000(android.service.wallpaper.WallpaperService$Engine,android.view.MotionEvent)>($r3, r1);

        goto label2;

     label1:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

     label2:
        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        android.service.wallpaper.WallpaperService$Engine $r3, $r4;
        com.android.internal.view.BaseIWindow $r5;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if $r3 == null goto label1;

        $r4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r5 = $r4.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        virtualinvoke $r5.<com.android.internal.view.BaseIWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>(r1, i0, i1, i2, r2, 0);

     label1:
        return;
    }

    public void reportShown()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        android.service.wallpaper.IWallpaperConnection $r2;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $z0 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported>;

        if $z0 != 0 goto label4;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported> = 1;

     label1:
        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        interfaceinvoke $r2.<android.service.wallpaper.IWallpaperConnection: void engineShown(android.service.wallpaper.IWallpaperEngine)>(r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", r1);

        return;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void destroy()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(20);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void executeMessage(android.os.Message)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        android.os.RemoteException r2, $r37;
        android.view.MotionEvent r3, $r11;
        java.lang.Object r4, $r6, $r9, $r16, $r19;
        java.lang.Throwable r5, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.service.wallpaper.WallpaperService$Engine $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r24, $r25, $r29, r38;
        boolean $z0, $z1, z4, z5;
        android.graphics.Rect $r22;
        java.util.ArrayList $r23, $r30;
        android.service.wallpaper.WallpaperService $r26, $r28, $r31;
        android.service.wallpaper.IWallpaperConnection $r27;
        java.lang.StringBuilder $r32, $r33, $r36;
        java.lang.String $r35;
        android.service.wallpaper.WallpaperService$WallpaperCommand r39;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 10: goto label01;
            case 20: goto label05;
            case 30: goto label06;
            case 40: goto label07;
            case 10000: goto label08;
            case 10010: goto label09;
            case 10020: goto label12;
            case 10025: goto label13;
            case 10030: goto label14;
            case 10035: goto label17;
            case 10040: goto label18;
            default: goto label27;
        };

     label01:
        $r27 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        interfaceinvoke $r27.<android.service.wallpaper.IWallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine)>(r0);

     label02:
        goto label04;

     label03:
        $r37 := @caughtexception;

        r2 = $r37;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", r2);

        return;

     label04:
        $r28 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        r38 = virtualinvoke $r28.<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService$Engine onCreateEngine()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine> = r38;

        $r31 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r30 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$200(android.service.wallpaper.WallpaperService)>($r31);

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r38);

        virtualinvoke r38.<android.service.wallpaper.WallpaperService$Engine: void attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)>(r0);

        return;

     label05:
        $r26 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r23 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$200(android.service.wallpaper.WallpaperService)>($r26);

        $r24 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r23.<java.util.ArrayList: boolean remove(java.lang.Object)>($r24);

        $r29 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r29.<android.service.wallpaper.WallpaperService$Engine: void detach()>();

        return;

     label06:
        $r25 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i4 = r1.<android.os.Message: int arg1>;

        $i5 = r1.<android.os.Message: int arg2>;

        virtualinvoke $r25.<android.service.wallpaper.WallpaperService$Engine: void doDesiredSizeChanged(int,int)>($i4, $i5);

        return;

     label07:
        $r21 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r19 = r1.<android.os.Message: java.lang.Object obj>;

        $r22 = (android.graphics.Rect) $r19;

        virtualinvoke $r21.<android.service.wallpaper.WallpaperService$Engine: void doDisplayPaddingChanged(android.graphics.Rect)>($r22);

     label08:
        $r20 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r20.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, 0);

        goto label28;

     label09:
        $r18 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i3 = r1.<android.os.Message: int arg1>;

        if $i3 == 0 goto label10;

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        virtualinvoke $r18.<android.service.wallpaper.WallpaperService$Engine: void doVisibilityChanged(boolean)>($z1);

        goto label28;

     label12:
        $r17 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r17.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        goto label28;

     label13:
        $r16 = r1.<android.os.Message: java.lang.Object obj>;

        r39 = (android.service.wallpaper.WallpaperService$WallpaperCommand) $r16;

        $r15 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r15.<android.service.wallpaper.WallpaperService$Engine: void doCommand(android.service.wallpaper.WallpaperService$WallpaperCommand)>(r39);

        goto label28;

     label14:
        $i2 = r1.<android.os.Message: int arg1>;

        if $i2 == 0 goto label15;

        $z0 = 1;

        goto label16;

     label15:
        $z0 = 0;

     label16:
        z4 = $z0;

        $r13 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r13.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, z4);

        $r14 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r14.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        goto label28;

     label17:
        goto label28;

     label18:
        z5 = 0;

        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (android.view.MotionEvent) $r6;

        $i1 = virtualinvoke r3.<android.view.MotionEvent: int getAction()>();

        if $i1 != 2 goto label25;

        $r8 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r9 = $r8.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        r4 = $r9;

        entermonitor $r9;

     label19:
        $r10 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r11 = $r10.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove>;

        if $r11 != r3 goto label20;

        $r12 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r12.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove> = null;

        goto label21;

     label20:
        z5 = 1;

     label21:
        exitmonitor r4;

     label22:
        goto label25;

     label23:
        $r34 := @caughtexception;

        r5 = $r34;

        exitmonitor r4;

     label24:
        throw r5;

     label25:
        if z5 != 0 goto label26;

        $r7 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r7.<android.service.wallpaper.WallpaperService$Engine: void onTouchEvent(android.view.MotionEvent)>(r3);

     label26:
        virtualinvoke r3.<android.view.MotionEvent: void recycle()>();

        goto label28;

     label27:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type ");

        $i6 = r1.<android.os.Message: int what>;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WallpaperService", $r35);

     label28:
        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    static com.android.internal.os.HandlerCaller access$100(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        com.android.internal.os.HandlerCaller $r1;

        r0 := @parameter0: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        return $r1;
    }
}
