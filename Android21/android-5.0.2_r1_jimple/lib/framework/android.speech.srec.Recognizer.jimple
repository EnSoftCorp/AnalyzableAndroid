public final class android.speech.srec.Recognizer extends java.lang.Object
{
    private static java.lang.String TAG;
    public static final java.lang.String KEY_CONFIDENCE;
    public static final java.lang.String KEY_LITERAL;
    public static final java.lang.String KEY_MEANING;
    private long mVocabulary;
    private long mRecognizer;
    private android.speech.srec.Recognizer$Grammar mActiveGrammar;
    private byte[] mPutAudioBuffer;
    public static final int EVENT_INVALID;
    public static final int EVENT_NO_MATCH;
    public static final int EVENT_INCOMPLETE;
    public static final int EVENT_STARTED;
    public static final int EVENT_STOPPED;
    public static final int EVENT_START_OF_VOICING;
    public static final int EVENT_END_OF_VOICING;
    public static final int EVENT_SPOKE_TOO_SOON;
    public static final int EVENT_RECOGNITION_RESULT;
    public static final int EVENT_START_OF_UTTERANCE_TIMEOUT;
    public static final int EVENT_RECOGNITION_TIMEOUT;
    public static final int EVENT_NEED_MORE_AUDIO;
    public static final int EVENT_MAX_SPEECH;

    public static java.lang.String getConfigDir(java.util.Locale)
    {
        java.util.Locale r0, $r6;
        java.lang.String r1, $r4, $r5, $r7;
        java.lang.StringBuilder $r2, $r3, $r8;
        java.io.File $r9;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label1;

        r0 = <java.util.Locale: java.util.Locale US>;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/system/usr/srec/config/");

        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(95, 46);

        $r6 = <java.util.Locale: java.util.Locale ROOT>;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r9.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        return r1;

     label2:
        return null;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        android.speech.srec.Recognizer r0;
        java.lang.String r1;
        long $l0, $l1, $l2;

        r0 := @this: android.speech.srec.Recognizer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.srec.Recognizer: long mVocabulary> = 0L;

        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

        r0.<android.speech.srec.Recognizer: android.speech.srec.Recognizer$Grammar mActiveGrammar> = null;

        r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer> = null;

        staticinvoke <android.speech.srec.Recognizer: void PMemInit()>();

        staticinvoke <android.speech.srec.Recognizer: void SR_SessionCreate(java.lang.String)>(r1);

        $l0 = staticinvoke <android.speech.srec.Recognizer: long SR_RecognizerCreate()>();

        r0.<android.speech.srec.Recognizer: long mRecognizer> = $l0;

        $l1 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerSetup(long)>($l1);

        $l2 = staticinvoke <android.speech.srec.Recognizer: long SR_VocabularyLoad()>();

        r0.<android.speech.srec.Recognizer: long mVocabulary> = $l2;

        return;
    }

    public void start()
    {
        android.speech.srec.Recognizer r0;
        android.speech.srec.Recognizer$Grammar $r1;
        long $l0, $l1, $l2;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r1 = r0.<android.speech.srec.Recognizer: android.speech.srec.Recognizer$Grammar mActiveGrammar>;

        $l1 = staticinvoke <android.speech.srec.Recognizer$Grammar: long access$1100(android.speech.srec.Recognizer$Grammar)>($r1);

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerActivateRule(long,long,java.lang.String,int)>($l0, $l1, "trash", 1);

        $l2 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerStart(long)>($l2);

        return;
    }

    public int advance()
    {
        android.speech.srec.Recognizer r0;
        long $l0;
        int $i1;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $i1 = staticinvoke <android.speech.srec.Recognizer: int SR_RecognizerAdvance(long)>($l0);

        return $i1;
    }

    public int putAudio(byte[], int, int, boolean)
    {
        android.speech.srec.Recognizer r0;
        byte[] r1;
        int i0, i1, $i3;
        boolean z0;
        long $l2;

        r0 := @this: android.speech.srec.Recognizer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $l2 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $i3 = staticinvoke <android.speech.srec.Recognizer: int SR_RecognizerPutAudio(long,byte[],int,int,boolean)>($l2, r1, i0, i1, z0);

        return $i3;
    }

    public void putAudio(java.io.InputStream) throws java.io.IOException
    {
        android.speech.srec.Recognizer r0;
        java.io.InputStream r1;
        int i0, $i2;
        byte[] $r2, $r3, $r4, $r10, $r11;
        long $l1, $l3;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.speech.srec.Recognizer;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer>;

        if $r2 != null goto label1;

        $r11 = newarray (byte)[512];

        r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer> = $r11;

     label1:
        $r3 = r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer>;

        i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>($r3);

        if i0 != -1 goto label2;

        $l3 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r10 = r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer>;

        staticinvoke <android.speech.srec.Recognizer: int SR_RecognizerPutAudio(long,byte[],int,int,boolean)>($l3, $r10, 0, 0, 1);

        goto label3;

     label2:
        $l1 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r4 = r0.<android.speech.srec.Recognizer: byte[] mPutAudioBuffer>;

        $i2 = staticinvoke <android.speech.srec.Recognizer: int SR_RecognizerPutAudio(long,byte[],int,int,boolean)>($l1, $r4, 0, i0, 0);

        if i0 == $i2 goto label3;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SR_RecognizerPutAudio failed nbytes=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        return;
    }

    public int getResultCount()
    {
        android.speech.srec.Recognizer r0;
        long $l0;
        int $i1;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $i1 = staticinvoke <android.speech.srec.Recognizer: int SR_RecognizerResultGetSize(long)>($l0);

        return $i1;
    }

    public java.lang.String[] getResultKeys(int)
    {
        android.speech.srec.Recognizer r0;
        int i0;
        long $l1;
        java.lang.String[] $r1;

        r0 := @this: android.speech.srec.Recognizer;

        i0 := @parameter0: int;

        $l1 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r1 = staticinvoke <android.speech.srec.Recognizer: java.lang.String[] SR_RecognizerResultGetKeyList(long,int)>($l1, i0);

        return $r1;
    }

    public java.lang.String getResult(int, java.lang.String)
    {
        android.speech.srec.Recognizer r0;
        int i0;
        java.lang.String r1, $r2;
        long $l1;

        r0 := @this: android.speech.srec.Recognizer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $l1 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r2 = staticinvoke <android.speech.srec.Recognizer: java.lang.String SR_RecognizerResultGetValue(long,int,java.lang.String)>($l1, i0, r1);

        return $r2;
    }

    public void stop()
    {
        android.speech.srec.Recognizer r0;
        long $l0, $l1, $l2;
        android.speech.srec.Recognizer$Grammar $r1;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerStop(long)>($l0);

        $l1 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r1 = r0.<android.speech.srec.Recognizer: android.speech.srec.Recognizer$Grammar mActiveGrammar>;

        $l2 = staticinvoke <android.speech.srec.Recognizer$Grammar: long access$1100(android.speech.srec.Recognizer$Grammar)>($r1);

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerDeactivateRule(long,long,java.lang.String)>($l1, $l2, "trash");

        return;
    }

    public void resetAcousticState()
    {
        android.speech.srec.Recognizer r0;
        long $l0;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_AcousticStateReset(long)>($l0);

        return;
    }

    public void setAcousticState(java.lang.String)
    {
        android.speech.srec.Recognizer r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.speech.srec.Recognizer;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_AcousticStateSet(long,java.lang.String)>($l0, r1);

        return;
    }

    public java.lang.String getAcousticState()
    {
        android.speech.srec.Recognizer r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $r1 = staticinvoke <android.speech.srec.Recognizer: java.lang.String SR_AcousticStateGet(long)>($l0);

        return $r1;
    }

    public void destroy()
    {
        android.speech.srec.Recognizer r0;
        java.lang.Throwable r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        byte $b0, $b2, $b4, $b9, $b13, $b16, $b18;
        long $l1, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l14, $l15, $l17, $l19, $l20;

        r0 := @this: android.speech.srec.Recognizer;

     label01:
        $l1 = r0.<android.speech.srec.Recognizer: long mVocabulary>;

        $b0 = $l1 cmp 0L;

        if $b0 == 0 goto label02;

        $l8 = r0.<android.speech.srec.Recognizer: long mVocabulary>;

        staticinvoke <android.speech.srec.Recognizer: void SR_VocabularyDestroy(long)>($l8);

     label02:
        r0.<android.speech.srec.Recognizer: long mVocabulary> = 0L;

     label03:
        $l3 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b2 = $l3 cmp 0L;

        if $b2 == 0 goto label04;

        $l6 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerUnsetup(long)>($l6);

     label04:
        $l5 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b4 = $l5 cmp 0L;

        if $b4 == 0 goto label05;

        $l7 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerDestroy(long)>($l7);

     label05:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label06:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label07:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label10;

     label08:
        $r20 := @caughtexception;

        r1 = $r20;

     label09:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r1;

     label10:
        goto label18;

     label11:
        $r24 := @caughtexception;

        r2 = $r24;

     label12:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label13:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label14:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label17;

     label15:
        $r26 := @caughtexception;

        r3 = $r26;

     label16:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r3;

     label17:
        throw r2;

     label18:
        goto label35;

     label19:
        $r25 := @caughtexception;

        r4 = $r25;

     label20:
        $l12 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b13 = $l12 cmp 0L;

        if $b13 == 0 goto label21;

        $l14 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerDestroy(long)>($l14);

     label21:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label22:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label23:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label26;

     label24:
        $r19 := @caughtexception;

        r5 = $r19;

     label25:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r5;

     label26:
        goto label34;

     label27:
        $r21 := @caughtexception;

        r6 = $r21;

     label28:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label29:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label30:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label33;

     label31:
        $r28 := @caughtexception;

        r7 = $r28;

     label32:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r7;

     label33:
        throw r6;

     label34:
        throw r4;

     label35:
        goto label71;

     label36:
        $r27 := @caughtexception;

        r8 = $r27;

     label37:
        r0.<android.speech.srec.Recognizer: long mVocabulary> = 0L;

     label38:
        $l17 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label39;

        $l19 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerUnsetup(long)>($l19);

     label39:
        $l15 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b16 = $l15 cmp 0L;

        if $b16 == 0 goto label40;

        $l20 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerDestroy(long)>($l20);

     label40:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label41:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label42:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label45;

     label43:
        $r18 := @caughtexception;

        r9 = $r18;

     label44:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r9;

     label45:
        goto label53;

     label46:
        $r16 := @caughtexception;

        r10 = $r16;

     label47:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label48:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label49:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label52;

     label50:
        $r22 := @caughtexception;

        r11 = $r22;

     label51:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r11;

     label52:
        throw r10;

     label53:
        goto label70;

     label54:
        $r17 := @caughtexception;

        r12 = $r17;

     label55:
        $l10 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b9 = $l10 cmp 0L;

        if $b9 == 0 goto label56;

        $l11 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        staticinvoke <android.speech.srec.Recognizer: void SR_RecognizerDestroy(long)>($l11);

     label56:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label57:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label58:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label61;

     label59:
        $r23 := @caughtexception;

        r13 = $r23;

     label60:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r13;

     label61:
        goto label69;

     label62:
        $r30 := @caughtexception;

        r14 = $r30;

     label63:
        r0.<android.speech.srec.Recognizer: long mRecognizer> = 0L;

     label64:
        staticinvoke <android.speech.srec.Recognizer: void SR_SessionDestroy()>();

     label65:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        goto label68;

     label66:
        $r29 := @caughtexception;

        r15 = $r29;

     label67:
        staticinvoke <android.speech.srec.Recognizer: void PMemShutdown()>();

        throw r15;

     label68:
        throw r14;

     label69:
        throw r12;

     label70:
        throw r8;

     label71:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.lang.Throwable from label27 to label28 with label27;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.lang.Throwable from label41 to label42 with label43;
        catch java.lang.Throwable from label43 to label44 with label43;
        catch java.lang.Throwable from label39 to label40 with label46;
        catch java.lang.Throwable from label48 to label49 with label50;
        catch java.lang.Throwable from label50 to label51 with label50;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label38 to label39 with label54;
        catch java.lang.Throwable from label57 to label58 with label59;
        catch java.lang.Throwable from label59 to label60 with label59;
        catch java.lang.Throwable from label55 to label56 with label62;
        catch java.lang.Throwable from label64 to label65 with label66;
        catch java.lang.Throwable from label66 to label67 with label66;
        catch java.lang.Throwable from label62 to label63 with label62;
        catch java.lang.Throwable from label54 to label55 with label54;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.speech.srec.Recognizer r0;
        long $l0, $l2;
        byte $b1, $b3;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mVocabulary>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

     label1:
        virtualinvoke r0.<android.speech.srec.Recognizer: void destroy()>();

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("someone forgot to destroy Recognizer");

        throw $r1;

     label2:
        return;
    }

    private static native void PMemInit();

    private static native void PMemShutdown();

    private static native void SR_SessionCreate(java.lang.String);

    private static native void SR_SessionDestroy();

    public static java.lang.String eventToString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            default: goto label14;
        };

     label01:
        return "EVENT_INVALID";

     label02:
        return "EVENT_NO_MATCH";

     label03:
        return "EVENT_INCOMPLETE";

     label04:
        return "EVENT_STARTED";

     label05:
        return "EVENT_STOPPED";

     label06:
        return "EVENT_START_OF_VOICING";

     label07:
        return "EVENT_END_OF_VOICING";

     label08:
        return "EVENT_SPOKE_TOO_SOON";

     label09:
        return "EVENT_RECOGNITION_RESULT";

     label10:
        return "EVENT_START_OF_UTTERANCE_TIMEOUT";

     label11:
        return "EVENT_RECOGNITION_TIMEOUT";

     label12:
        return "EVENT_NEED_MORE_AUDIO";

     label13:
        return "EVENT_MAX_SPEECH";

     label14:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static native void SR_RecognizerStart(long);

    private static native void SR_RecognizerStop(long);

    private static native long SR_RecognizerCreate();

    private static native void SR_RecognizerDestroy(long);

    private static native void SR_RecognizerSetup(long);

    private static native void SR_RecognizerUnsetup(long);

    private static native boolean SR_RecognizerIsSetup(long);

    private static native java.lang.String SR_RecognizerGetParameter(long, java.lang.String);

    private static native int SR_RecognizerGetSize_tParameter(long, java.lang.String);

    private static native boolean SR_RecognizerGetBoolParameter(long, java.lang.String);

    private static native void SR_RecognizerSetParameter(long, java.lang.String, java.lang.String);

    private static native void SR_RecognizerSetSize_tParameter(long, java.lang.String, int);

    private static native void SR_RecognizerSetBoolParameter(long, java.lang.String, boolean);

    private static native void SR_RecognizerSetupRule(long, long, java.lang.String);

    private static native boolean SR_RecognizerHasSetupRules(long);

    private static native void SR_RecognizerActivateRule(long, long, java.lang.String, int);

    private static native void SR_RecognizerDeactivateRule(long, long, java.lang.String);

    private static native void SR_RecognizerDeactivateAllRules(long);

    private static native boolean SR_RecognizerIsActiveRule(long, long, java.lang.String);

    private static native boolean SR_RecognizerCheckGrammarConsistency(long, long);

    private static native int SR_RecognizerPutAudio(long, byte[], int, int, boolean);

    private static native int SR_RecognizerAdvance(long);

    private static native boolean SR_RecognizerIsSignalClipping(long);

    private static native boolean SR_RecognizerIsSignalDCOffset(long);

    private static native boolean SR_RecognizerIsSignalNoisy(long);

    private static native boolean SR_RecognizerIsSignalTooQuiet(long);

    private static native boolean SR_RecognizerIsSignalTooFewSamples(long);

    private static native boolean SR_RecognizerIsSignalTooManySamples(long);

    private static native void SR_AcousticStateReset(long);

    private static native void SR_AcousticStateSet(long, java.lang.String);

    private static native java.lang.String SR_AcousticStateGet(long);

    private static native void SR_GrammarCompile(long);

    private static native void SR_GrammarAddWordToSlot(long, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String);

    private static native void SR_GrammarResetAllSlots(long);

    private static native void SR_GrammarSetupVocabulary(long, long);

    private static native void SR_GrammarSetupRecognizer(long, long);

    private static native void SR_GrammarUnsetupRecognizer(long);

    private static native long SR_GrammarCreate();

    private static native void SR_GrammarDestroy(long);

    private static native long SR_GrammarLoad(java.lang.String);

    private static native void SR_GrammarSave(long, java.lang.String);

    private static native void SR_GrammarAllowOnly(long, java.lang.String);

    private static native void SR_GrammarAllowAll(long);

    private static native long SR_VocabularyLoad();

    private static native void SR_VocabularyDestroy(long);

    private static native java.lang.String SR_VocabularyGetPronunciation(long, java.lang.String);

    private static native byte[] SR_RecognizerResultGetWaveform(long);

    private static native int SR_RecognizerResultGetSize(long);

    private static native int SR_RecognizerResultGetKeyCount(long, int);

    private static native java.lang.String[] SR_RecognizerResultGetKeyList(long, int);

    private static native java.lang.String SR_RecognizerResultGetValue(long, int, java.lang.String);

    static long access$000(java.lang.String)
    {
        java.lang.String r0;
        long $l0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <android.speech.srec.Recognizer: long SR_GrammarLoad(java.lang.String)>(r0);

        return $l0;
    }

    static long access$100(android.speech.srec.Recognizer)
    {
        android.speech.srec.Recognizer r0;
        long $l0;

        r0 := @parameter0: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mVocabulary>;

        return $l0;
    }

    static void access$200(long, long)
    {
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarSetupVocabulary(long,long)>(l0, l1);

        return;
    }

    static void access$300(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarResetAllSlots(long)>(l0);

        return;
    }

    static void access$400(long, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)
    {
        long l0;
        java.lang.String r0, r1, r2, r3;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarAddWordToSlot(long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(l0, r0, r1, r2, i1, r3);

        return;
    }

    static void access$500(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarCompile(long)>(l0);

        return;
    }

    static long access$600(android.speech.srec.Recognizer)
    {
        android.speech.srec.Recognizer r0;
        long $l0;

        r0 := @parameter0: android.speech.srec.Recognizer;

        $l0 = r0.<android.speech.srec.Recognizer: long mRecognizer>;

        return $l0;
    }

    static void access$700(long, long)
    {
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarSetupRecognizer(long,long)>(l0, l1);

        return;
    }

    static android.speech.srec.Recognizer$Grammar access$802(android.speech.srec.Recognizer, android.speech.srec.Recognizer$Grammar)
    {
        android.speech.srec.Recognizer r0;
        android.speech.srec.Recognizer$Grammar r1;

        r0 := @parameter0: android.speech.srec.Recognizer;

        r1 := @parameter1: android.speech.srec.Recognizer$Grammar;

        r0.<android.speech.srec.Recognizer: android.speech.srec.Recognizer$Grammar mActiveGrammar> = r1;

        return r1;
    }

    static void access$900(long, java.lang.String)
    {
        long l0;
        java.lang.String r0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarSave(long,java.lang.String)>(l0, r0);

        return;
    }

    static void access$1000(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.speech.srec.Recognizer: void SR_GrammarDestroy(long)>(l0);

        return;
    }

    static void <clinit>()
    {
        <android.speech.srec.Recognizer: int EVENT_MAX_SPEECH> = 12;

        <android.speech.srec.Recognizer: int EVENT_NEED_MORE_AUDIO> = 11;

        <android.speech.srec.Recognizer: int EVENT_RECOGNITION_TIMEOUT> = 10;

        <android.speech.srec.Recognizer: int EVENT_START_OF_UTTERANCE_TIMEOUT> = 9;

        <android.speech.srec.Recognizer: int EVENT_RECOGNITION_RESULT> = 8;

        <android.speech.srec.Recognizer: int EVENT_SPOKE_TOO_SOON> = 7;

        <android.speech.srec.Recognizer: int EVENT_END_OF_VOICING> = 6;

        <android.speech.srec.Recognizer: int EVENT_START_OF_VOICING> = 5;

        <android.speech.srec.Recognizer: int EVENT_STOPPED> = 4;

        <android.speech.srec.Recognizer: int EVENT_STARTED> = 3;

        <android.speech.srec.Recognizer: int EVENT_INCOMPLETE> = 2;

        <android.speech.srec.Recognizer: int EVENT_NO_MATCH> = 1;

        <android.speech.srec.Recognizer: int EVENT_INVALID> = 0;

        <android.speech.srec.Recognizer: java.lang.String KEY_MEANING> = "meaning";

        <android.speech.srec.Recognizer: java.lang.String KEY_LITERAL> = "literal";

        <android.speech.srec.Recognizer: java.lang.String KEY_CONFIDENCE> = "conf";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("srec_jni");

        <android.speech.srec.Recognizer: java.lang.String TAG> = "Recognizer";

        return;
    }
}
