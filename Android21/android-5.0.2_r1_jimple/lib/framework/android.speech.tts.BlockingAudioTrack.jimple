class android.speech.tts.BlockingAudioTrack extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final long MIN_SLEEP_TIME_MS;
    private static final long MAX_SLEEP_TIME_MS;
    private static final long MAX_PROGRESS_WAIT_MS;
    private static final int MIN_AUDIO_BUFFER_SIZE;
    private final android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams;
    private final int mSampleRateInHz;
    private final int mAudioFormat;
    private final int mChannelCount;
    private final int mBytesPerFrame;
    private boolean mIsShortUtterance;
    private int mAudioBufferSize;
    private int mBytesWritten;
    private java.lang.Object mAudioTrackLock;
    private android.media.AudioTrack mAudioTrack;
    private volatile boolean mStopped;
    private int mSessionId;

    void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams, int, int, int)
    {
        android.speech.tts.BlockingAudioTrack r0;
        android.speech.tts.TextToSpeechService$AudioOutputParams r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r2;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$AudioOutputParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten> = 0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock> = $r2;

        r0.<android.speech.tts.BlockingAudioTrack: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams> = r1;

        r0.<android.speech.tts.BlockingAudioTrack: int mSampleRateInHz> = i0;

        r0.<android.speech.tts.BlockingAudioTrack: int mAudioFormat> = i1;

        r0.<android.speech.tts.BlockingAudioTrack: int mChannelCount> = i2;

        $i3 = r0.<android.speech.tts.BlockingAudioTrack: int mAudioFormat>;

        $i4 = staticinvoke <android.media.AudioFormat: int getBytesPerSample(int)>($i3);

        $i5 = r0.<android.speech.tts.BlockingAudioTrack: int mChannelCount>;

        $i6 = $i4 * $i5;

        r0.<android.speech.tts.BlockingAudioTrack: int mBytesPerFrame> = $i6;

        r0.<android.speech.tts.BlockingAudioTrack: boolean mIsShortUtterance> = 0;

        r0.<android.speech.tts.BlockingAudioTrack: int mAudioBufferSize> = 0;

        r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten> = 0;

        r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack> = null;

        r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped> = 0;

        return;
    }

    public boolean init()
    {
        android.speech.tts.BlockingAudioTrack r0;
        android.media.AudioTrack r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        r1 = specialinvoke r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack createStreamingAudioTrack()>();

        $r4 = r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 != null goto label6;

        return 0;

     label6:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void stop()
    {
        android.speech.tts.BlockingAudioTrack r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.media.AudioTrack $r4, $r5;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        $r3 = r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack>;

        if $r4 == null goto label2;

        $r5 = r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack>;

        virtualinvoke $r5.<android.media.AudioTrack: void stop()>();

     label2:
        r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped> = 1;

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int write(byte[])
    {
        android.speech.tts.BlockingAudioTrack r0;
        byte[] r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;
        boolean $z0;
        int $i0, $i1, i2;
        android.media.AudioTrack r6;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        r1 := @parameter0: byte[];

        $r4 = r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r6 = r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack>;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r6 == null goto label6;

        $z0 = r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped>;

        if $z0 == 0 goto label7;

     label6:
        return -1;

     label7:
        i2 = staticinvoke <android.speech.tts.BlockingAudioTrack: int writeToAudioTrack(android.media.AudioTrack,byte[])>(r6, r1);

        $i0 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten>;

        $i1 = $i0 + i2;

        r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten> = $i1;

        return i2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void waitAndRelease()
    {
        android.speech.tts.BlockingAudioTrack r0;
        java.lang.Object r1, $r4, $r5, r10;
        java.lang.Throwable r2, r3, $r7, $r8;
        int $i0, $i1;
        boolean $z0, $z1;
        android.media.AudioTrack $r6, r9;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        $r4 = r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        r9 = r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack>;

        exitmonitor r1;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label04:
        throw r2;

     label05:
        if r9 != null goto label06;

        return;

     label06:
        $i1 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten>;

        $i0 = r0.<android.speech.tts.BlockingAudioTrack: int mAudioBufferSize>;

        if $i1 >= $i0 goto label07;

        $z1 = r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped>;

        if $z1 != 0 goto label07;

        r0.<android.speech.tts.BlockingAudioTrack: boolean mIsShortUtterance> = 1;

        virtualinvoke r9.<android.media.AudioTrack: void stop()>();

     label07:
        $z0 = r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped>;

        if $z0 != 0 goto label08;

        $r6 = r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack>;

        specialinvoke r0.<android.speech.tts.BlockingAudioTrack: void blockUntilDone(android.media.AudioTrack)>($r6);

     label08:
        $r5 = r0.<android.speech.tts.BlockingAudioTrack: java.lang.Object mAudioTrackLock>;

        r10 = $r5;

        entermonitor $r5;

     label09:
        r0.<android.speech.tts.BlockingAudioTrack: android.media.AudioTrack mAudioTrack> = null;

        exitmonitor r10;

     label10:
        goto label13;

     label11:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r10;

     label12:
        throw r3;

     label13:
        virtualinvoke r9.<android.media.AudioTrack: void release()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static int getChannelConfig(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return 4;

     label1:
        if i0 != 2 goto label2;

        return 12;

     label2:
        return 0;
    }

    long getAudioLengthMs(int)
    {
        android.speech.tts.BlockingAudioTrack r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        long l2;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        i0 := @parameter0: int;

        $i3 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesPerFrame>;

        i1 = i0 / $i3;

        $i5 = i1 * 1000;

        $i4 = r0.<android.speech.tts.BlockingAudioTrack: int mSampleRateInHz>;

        $i6 = $i5 / $i4;

        l2 = (long) $i6;

        return l2;
    }

    private static int writeToAudioTrack(android.media.AudioTrack, byte[])
    {
        android.media.AudioTrack r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;

        r0 := @parameter0: android.media.AudioTrack;

        r1 := @parameter1: byte[];

        $i2 = virtualinvoke r0.<android.media.AudioTrack: int getPlayState()>();

        if $i2 == 3 goto label1;

        virtualinvoke r0.<android.media.AudioTrack: void play()>();

     label1:
        i0 = 0;

     label2:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label4;

        $i4 = lengthof r1;

        i1 = virtualinvoke r0.<android.media.AudioTrack: int write(byte[],int,int)>(r1, i0, $i4);

        if i1 > 0 goto label3;

        goto label4;

     label3:
        i0 = i0 + i1;

        goto label2;

     label4:
        return i0;
    }

    private android.media.AudioTrack createStreamingAudioTrack()
    {
        android.speech.tts.BlockingAudioTrack r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.media.AudioFormat r1;
        android.media.AudioTrack r2, $r7;
        android.media.AudioFormat$Builder $r3, $r4, $r5, $r6;
        android.speech.tts.TextToSpeechService$AudioOutputParams $r8, $r9, $r11, $r12;
        android.media.AudioAttributes $r10;
        float $f0, $f1;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        $i3 = r0.<android.speech.tts.BlockingAudioTrack: int mChannelCount>;

        i0 = staticinvoke <android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>($i3);

        $i5 = r0.<android.speech.tts.BlockingAudioTrack: int mSampleRateInHz>;

        $i4 = r0.<android.speech.tts.BlockingAudioTrack: int mAudioFormat>;

        i1 = staticinvoke <android.media.AudioTrack: int getMinBufferSize(int,int,int)>($i5, i0, $i4);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(8192, i1);

        $r3 = new android.media.AudioFormat$Builder;

        specialinvoke $r3.<android.media.AudioFormat$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setChannelMask(int)>(i0);

        $i6 = r0.<android.speech.tts.BlockingAudioTrack: int mAudioFormat>;

        $r5 = virtualinvoke $r4.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setEncoding(int)>($i6);

        $i7 = r0.<android.speech.tts.BlockingAudioTrack: int mSampleRateInHz>;

        $r6 = virtualinvoke $r5.<android.media.AudioFormat$Builder: android.media.AudioFormat$Builder setSampleRate(int)>($i7);

        r1 = virtualinvoke $r6.<android.media.AudioFormat$Builder: android.media.AudioFormat build()>();

        $r7 = new android.media.AudioTrack;

        $r9 = r0.<android.speech.tts.BlockingAudioTrack: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $r10 = $r9.<android.speech.tts.TextToSpeechService$AudioOutputParams: android.media.AudioAttributes mAudioAttributes>;

        $r8 = r0.<android.speech.tts.BlockingAudioTrack: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $i8 = $r8.<android.speech.tts.TextToSpeechService$AudioOutputParams: int mSessionId>;

        specialinvoke $r7.<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int)>($r10, r1, i2, 1, $i8);

        r2 = $r7;

        $i9 = virtualinvoke r2.<android.media.AudioTrack: int getState()>();

        if $i9 == 1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TTS.BlockingAudioTrack", "Unable to create audio track.");

        virtualinvoke r2.<android.media.AudioTrack: void release()>();

        return null;

     label1:
        r0.<android.speech.tts.BlockingAudioTrack: int mAudioBufferSize> = i2;

        $r11 = r0.<android.speech.tts.BlockingAudioTrack: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $f1 = $r11.<android.speech.tts.TextToSpeechService$AudioOutputParams: float mVolume>;

        $r12 = r0.<android.speech.tts.BlockingAudioTrack: android.speech.tts.TextToSpeechService$AudioOutputParams mAudioParams>;

        $f0 = $r12.<android.speech.tts.TextToSpeechService$AudioOutputParams: float mPan>;

        staticinvoke <android.speech.tts.BlockingAudioTrack: void setupVolume(android.media.AudioTrack,float,float)>(r2, $f1, $f0);

        return r2;
    }

    private void blockUntilDone(android.media.AudioTrack)
    {
        android.speech.tts.BlockingAudioTrack r0;
        android.media.AudioTrack r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        r1 := @parameter0: android.media.AudioTrack;

        $i0 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten>;

        if $i0 > 0 goto label1;

        return;

     label1:
        $z0 = r0.<android.speech.tts.BlockingAudioTrack: boolean mIsShortUtterance>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.speech.tts.BlockingAudioTrack: void blockUntilEstimatedCompletion()>();

        goto label3;

     label2:
        specialinvoke r0.<android.speech.tts.BlockingAudioTrack: void blockUntilCompletion(android.media.AudioTrack)>(r1);

     label3:
        return;
    }

    private void blockUntilEstimatedCompletion()
    {
        android.speech.tts.BlockingAudioTrack r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        long l1;
        java.lang.InterruptedException $r2;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        $i3 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten>;

        $i2 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesPerFrame>;

        i0 = $i3 / $i2;

        $i5 = i0 * 1000;

        $i4 = r0.<android.speech.tts.BlockingAudioTrack: int mSampleRateInHz>;

        $i6 = $i5 / $i4;

        l1 = (long) $i6;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(l1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void blockUntilCompletion(android.media.AudioTrack)
    {
        android.speech.tts.BlockingAudioTrack r0;
        android.media.AudioTrack r1;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i15;
        long l2, l3, l4;
        boolean $z1;
        byte $b14;
        java.lang.InterruptedException $r3;

        r0 := @this: android.speech.tts.BlockingAudioTrack;

        r1 := @parameter0: android.media.AudioTrack;

        $i6 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesWritten>;

        $i5 = r0.<android.speech.tts.BlockingAudioTrack: int mBytesPerFrame>;

        i0 = $i6 / $i5;

        i1 = -1;

        l2 = 0L;

     label1:
        $i7 = virtualinvoke r1.<android.media.AudioTrack: int getPlaybackHeadPosition()>();

        i15 = $i7;

        if $i7 >= i0 goto label8;

        $i8 = virtualinvoke r1.<android.media.AudioTrack: int getPlayState()>();

        if $i8 != 3 goto label8;

        $z1 = r0.<android.speech.tts.BlockingAudioTrack: boolean mStopped>;

        if $z1 != 0 goto label8;

        $i9 = i0 - i15;

        $i11 = $i9 * 1000;

        $i10 = virtualinvoke r1.<android.media.AudioTrack: int getSampleRate()>();

        $i12 = $i11 / $i10;

        l3 = (long) $i12;

        l4 = staticinvoke <android.speech.tts.BlockingAudioTrack: long clip(long,long,long)>(l3, 20L, 2500L);

        if i15 != i1 goto label2;

        l2 = l2 + l4;

        $b14 = l2 cmp 2500L;

        if $b14 <= 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TTS.BlockingAudioTrack", "Waited unsuccessfully for 2500ms for AudioTrack to make progress, Aborting");

        goto label8;

     label2:
        l2 = 0L;

     label3:
        i1 = i15;

     label4:
        staticinvoke <java.lang.Thread: void sleep(long)>(l4);

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        goto label8;

     label7:
        goto label1;

     label8:
        return;

        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    private static void setupVolume(android.media.AudioTrack, float, float)
    {
        android.media.AudioTrack r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7;
        byte $b0, $b1;
        int $i2;

        r0 := @parameter0: android.media.AudioTrack;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 = staticinvoke <android.speech.tts.BlockingAudioTrack: float clip(float,float,float)>(f0, 0.0F, 1.0F);

        f3 = staticinvoke <android.speech.tts.BlockingAudioTrack: float clip(float,float,float)>(f1, -1.0F, 1.0F);

        f4 = f2;

        f5 = f2;

        $b0 = f3 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $f7 = 1.0F - f3;

        f4 = f4 * $f7;

        goto label2;

     label1:
        $b1 = f3 cmpg 0.0F;

        if $b1 >= 0 goto label2;

        $f6 = 1.0F + f3;

        f5 = f5 * $f6;

     label2:
        $i2 = virtualinvoke r0.<android.media.AudioTrack: int setStereoVolume(float,float)>(f4, f5);

        if $i2 == 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TTS.BlockingAudioTrack", "Failed to set volume");

     label3:
        return;
    }

    private static final long clip(long, long, long)
    {
        long l0, l1, l2, $l5;
        byte $b3, $b4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label1;

        $l5 = l1;

        goto label3;

     label1:
        $b4 = l0 cmp l2;

        if $b4 >= 0 goto label2;

        $l5 = l0;

        goto label3;

     label2:
        $l5 = l2;

     label3:
        return $l5;
    }

    private static final float clip(float, float, float)
    {
        float f0, f1, f2, $f3;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        $f3 = f1;

        goto label3;

     label1:
        $b1 = f0 cmpg f2;

        if $b1 >= 0 goto label2;

        $f3 = f0;

        goto label3;

     label2:
        $f3 = f2;

     label3:
        return $f3;
    }

    public static void <clinit>()
    {
        <android.speech.tts.BlockingAudioTrack: int MIN_AUDIO_BUFFER_SIZE> = 8192;

        <android.speech.tts.BlockingAudioTrack: long MAX_PROGRESS_WAIT_MS> = 2500L;

        <android.speech.tts.BlockingAudioTrack: long MAX_SLEEP_TIME_MS> = 2500L;

        <android.speech.tts.BlockingAudioTrack: long MIN_SLEEP_TIME_MS> = 20L;

        <android.speech.tts.BlockingAudioTrack: boolean DBG> = 0;

        <android.speech.tts.BlockingAudioTrack: java.lang.String TAG> = "TTS.BlockingAudioTrack";

        return;
    }
}
