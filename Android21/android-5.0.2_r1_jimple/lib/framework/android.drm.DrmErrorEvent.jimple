public class android.drm.DrmErrorEvent extends android.drm.DrmEvent
{
    public static final int TYPE_RIGHTS_NOT_INSTALLED;
    public static final int TYPE_RIGHTS_RENEWAL_NOT_ALLOWED;
    public static final int TYPE_NOT_SUPPORTED;
    public static final int TYPE_OUT_OF_MEMORY;
    public static final int TYPE_NO_INTERNET_CONNECTION;
    public static final int TYPE_PROCESS_DRM_INFO_FAILED;
    public static final int TYPE_REMOVE_ALL_RIGHTS_FAILED;
    public static final int TYPE_ACQUIRE_DRM_INFO_FAILED;

    public void <init>(int, int, java.lang.String)
    {
        android.drm.DrmErrorEvent r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: android.drm.DrmErrorEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>(i0, i1, r1);

        specialinvoke r0.<android.drm.DrmErrorEvent: void checkTypeValidity(int)>(i1);

        return;
    }

    public void <init>(int, int, java.lang.String, java.util.HashMap)
    {
        android.drm.DrmErrorEvent r0;
        int i0, i1;
        java.lang.String r1;
        java.util.HashMap r2;

        r0 := @this: android.drm.DrmErrorEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.HashMap;

        specialinvoke r0.<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>(i0, i1, r1, r2);

        specialinvoke r0.<android.drm.DrmErrorEvent: void checkTypeValidity(int)>(i1);

        return;
    }

    private void checkTypeValidity(int)
    {
        android.drm.DrmErrorEvent r0;
        int i0;
        java.lang.String r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.drm.DrmErrorEvent;

        i0 := @parameter0: int;

        if i0 < 2001 goto label1;

        if i0 <= 2008 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.drm.DrmErrorEvent: int TYPE_ACQUIRE_DRM_INFO_FAILED> = 2008;

        <android.drm.DrmErrorEvent: int TYPE_REMOVE_ALL_RIGHTS_FAILED> = 2007;

        <android.drm.DrmErrorEvent: int TYPE_PROCESS_DRM_INFO_FAILED> = 2006;

        <android.drm.DrmErrorEvent: int TYPE_NO_INTERNET_CONNECTION> = 2005;

        <android.drm.DrmErrorEvent: int TYPE_OUT_OF_MEMORY> = 2004;

        <android.drm.DrmErrorEvent: int TYPE_NOT_SUPPORTED> = 2003;

        <android.drm.DrmErrorEvent: int TYPE_RIGHTS_RENEWAL_NOT_ALLOWED> = 2002;

        <android.drm.DrmErrorEvent: int TYPE_RIGHTS_NOT_INSTALLED> = 2001;

        return;
    }
}
