public class android.graphics.drawable.LayerDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    public static final int PADDING_MODE_NEST;
    public static final int PADDING_MODE_STACK;
    android.graphics.drawable.LayerDrawable$LayerState mLayerState;
    private int mOpacityOverride;
    private int[] mPaddingL;
    private int[] mPaddingT;
    private int[] mPaddingR;
    private int[] mPaddingB;
    private final android.graphics.Rect mTmpRect;
    private android.graphics.Rect mHotspotBounds;
    private boolean mMutated;

    public void <init>(android.graphics.drawable.Drawable[])
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable[] r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable[];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState)>(r1, null);

        return;
    }

    void <init>(android.graphics.drawable.Drawable[], android.graphics.drawable.LayerDrawable$LayerState)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState r2, $r4, $r5, $r10;
        int i0, i1, $i2, $i3, $i4;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r6, $r8;
        android.graphics.drawable.Drawable $r7, $r9, $r11;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable[];

        r2 := @parameter1: android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources,android.content.res.Resources$Theme)>(r2, null, null);

        i0 = lengthof r1;

        r3 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>();

        r3[i1] = $r6;

        $r8 = r3[i1];

        $r7 = r1[i1];

        $r8.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r7;

        $r9 = r1[i1];

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $r10 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = $r10.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $r11 = r1[i1];

        $i3 = virtualinvoke $r11.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        $r10.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum> = i0;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = r3;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        return;
    }

    void <init>()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = (android.graphics.drawable.LayerDrawable$LayerState) null;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources,android.content.res.Resources$Theme)>($r1, null, null);

        return;
    }

    void <init>(android.graphics.drawable.LayerDrawable$LayerState, android.content.res.Resources, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState r1, r4;
        android.content.res.Resources r2;
        android.content.res.Resources$Theme r3;
        android.graphics.Rect $r5;
        int $i0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride> = 0;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect> = $r5;

        r4 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>(r1, r2);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState> = r4;

        $i0 = r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

     label1:
        if r3 == null goto label2;

        $z0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources$Theme)>(r3);

     label2:
        return;
    }

    android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState, android.content.res.Resources)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState r1, $r3;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$LayerState;

        r2 := @parameter1: android.content.res.Resources;

        $r3 = new android.graphics.drawable.LayerDrawable$LayerState;

        specialinvoke $r3.<android.graphics.drawable.LayerDrawable$LayerState: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>(r1, r0, r2);

        return $r3;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6, $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r6 = <com.android.internal.R$styleable: int[] LayerDrawable>;

        r5 = staticinvoke <android.graphics.drawable.LayerDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        $r7 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>($r7);

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs> = $r3;

        $i3 = r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(0, $i3);

        r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride> = $i4;

        $z0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$000(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z0);

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean)>(r2, $z1);

        $i5 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>(r2);

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInteger(int,int)>(2, $i5);

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$102(android.graphics.drawable.LayerDrawable$LayerState,int)>(r2, $i6);

        return;
    }

    private void inflateLayers(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.graphics.drawable.LayerDrawable$LayerState r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.graphics.drawable.LayerDrawable$ChildDrawable r6, $r10;
        android.content.res.TypedArray r7;
        java.lang.String $r8, $r19, $r20;
        boolean $z0;
        int[] $r9;
        android.graphics.drawable.Drawable $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r16, $r18, $r21, $r22;
        org.xmlpull.v1.XmlPullParserException $r17;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i3 + 1;

     label01:
        $i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i4;

        if $i4 == 1 goto label10;

        $i5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i5;

        if $i5 >= i0 goto label02;

        if i1 == 3 goto label10;

     label02:
        if i1 == 2 goto label03;

        goto label01;

     label03:
        if i2 > i0 goto label01;

        $r8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label04;

        goto label01;

     label04:
        $r10 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r10.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>();

        r6 = $r10;

        $r9 = <com.android.internal.R$styleable: int[] LayerDrawableItem>;

        r7 = staticinvoke <android.graphics.drawable.LayerDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r9);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray)>(r6, r7);

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        $r11 = r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r11 != null goto label08;

     label05:
        $i9 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i10 = $i9;

        if $i9 != 4 goto label06;

        goto label05;

     label06:
        if i10 == 2 goto label07;

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label07:
        $r15 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = $r15;

     label08:
        $r13 = r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r13 == null goto label09;

        $i7 = r5.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $r12 = r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i6 = virtualinvoke $r12.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i8 = $i7 | $i6;

        r5.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i8;

        $r14 = r6.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label09:
        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>(r6);

        goto label01;

     label10:
        return;
    }

    private void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable, android.content.res.TypedArray)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.content.res.TypedArray r2;
        android.graphics.drawable.LayerDrawable$LayerState r3;
        android.graphics.drawable.Drawable r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$ChildDrawable;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = r3.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i1 = virtualinvoke r2.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r3.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i2;

        $r5 = virtualinvoke r2.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs> = $r5;

        $i3 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, $i3);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = $i4;

        $i5 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i6 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, $i5);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = $i6;

        $i7 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i8 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(4, $i7);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = $i8;

        $i9 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i11 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(5, $i9);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = $i11;

        $i10 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        $i12 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(0, $i10);

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = $i12;

        r4 = virtualinvoke r2.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if r4 == null goto label1;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r4;

     label1:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.LayerDrawable$LayerState r2, $r7, $r8;
        android.content.res.TypedArray r3, r5;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r4;
        int[] $r6, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r15;
        android.graphics.drawable.Drawable r16;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        if r2 != null goto label1;

        return;

     label1:
        $r6 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        if $r6 == null goto label2;

        $r13 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        $r14 = <com.android.internal.R$styleable: int[] LayerDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r13, $r14);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label2:
        $r7 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r15 = $r7.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r8.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r4 = r15[i1];

        $r10 = r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        if $r10 == null goto label4;

        $r12 = r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        $r11 = <com.android.internal.R$styleable: int[] LayerDrawableItem>;

        r5 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r12, $r11);

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray)>(r4, r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

     label4:
        r16 = r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z1 = virtualinvoke r16.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z1 == 0 goto label5;

        virtualinvoke r16.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void ensurePadding()>();

        $r9 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int[] getState()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>($r9);

        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r3;
        int[] $r4, $r5;
        android.graphics.drawable.Drawable $r6;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        if r1 != null goto label1;

        return 0;

     label1:
        $r4 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int[] mThemeAttrs>;

        if $r4 == null goto label2;

        return 1;

     label2:
        r2 = r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i0 = r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        $r5 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs>;

        if $r5 != null goto label4;

        $r6 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean canApplyTheme()>();

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return 0;
    }

    public boolean isProjected()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        boolean $z0, $z1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isProjected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r4 = r1[i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean isProjected()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.LayerDrawable$ChildDrawable;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        if $r4 == null goto label1;

        $r7 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $i5 = lengthof $r7;

        goto label2;

     label1:
        $i5 = 0;

     label2:
        i0 = $i5;

        i1 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        if i1 < i0 goto label4;

        $i4 = i0 + 10;

        r3 = newarray (android.graphics.drawable.LayerDrawable$ChildDrawable)[$i4];

        if i1 <= 0 goto label3;

        $r6 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i1);

     label3:
        r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren> = r3;

     label4:
        $r5 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5[i1] = r1;

        $i2 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $i3 = $i2 + 1;

        r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum> = $i3;

        virtualinvoke r2.<android.graphics.drawable.LayerDrawable$LayerState: void invalidateCache()>();

        return;
    }

    android.graphics.drawable.LayerDrawable$ChildDrawable addLayer(android.graphics.drawable.Drawable, int[], int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1, $r5;
        int[] r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.graphics.drawable.LayerDrawable$ChildDrawable r3, $r4;
        boolean $z0;
        android.graphics.drawable.LayerDrawable$LayerState $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        $r4 = new android.graphics.drawable.LayerDrawable$ChildDrawable;

        specialinvoke $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>();

        r3 = $r4;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = i0;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int[] mThemeAttrs> = r2;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        $r5 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0);

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = i1;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = i2;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = i3;

        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = i4;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable)>(r3);

        $r6 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i5 = $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations> = $i7;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        return r3;
    }

    public android.graphics.drawable.Drawable findDrawableByLayerId(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4, $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r1[i1];

        $i3 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i3 != i0 goto label2;

        $r5 = r1[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r6;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    public void setId(int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId> = i1;

        return;
    }

    public int getNumberOfLayers()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $r4 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        return $r4;
    }

    public int getId(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r2 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = $r2[i0];

        $i1 = $r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        return $i1;
    }

    public boolean setDrawableByLayerId(int, android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, $i3;
        android.graphics.drawable.Drawable r1, $r7, $r9, $r10;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable r3;
        android.graphics.Rect r4;
        android.graphics.drawable.LayerDrawable$LayerState $r5, $r6, $r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        r3 = r2[i2];

        $i3 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mId>;

        if $i3 != i0 goto label5;

        $r7 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        if $r7 == null goto label3;

        if r1 == null goto label2;

        $r10 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        r4 = virtualinvoke $r10.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r4);

     label2:
        $r9 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label3:
        if r1 == null goto label4;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label4:
        r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable> = r1;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        virtualinvoke $r8.<android.graphics.drawable.LayerDrawable$LayerState: void invalidateCache()>();

        return 1;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return 0;
    }

    public void setLayerInset(int, int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r3 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        r1 = $r3[i0];

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL> = i1;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT> = i2;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR> = i3;

        r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB> = i4;

        return;
    }

    public void setPaddingMode(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        if $i1 == i0 goto label1;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$102(android.graphics.drawable.LayerDrawable$LayerState,int)>($r2, i0);

     label1:
        return;
    }

    public int getPaddingMode()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        return $i0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void invalidateSelf()>();

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void scheduleSelf(java.lang.Runnable,long)>(r2, l0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void unscheduleSelf(java.lang.Runnable)>(r2);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.LayerDrawable r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations>;

        $i3 = $i0 | $i1;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i2 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChildrenChangingConfigurations>;

        $i4 = $i3 | $i2;

        return $i4;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r2);

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void computeNestedPadding(android.graphics.Rect)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.LayerDrawable: void computeStackedPadding(android.graphics.Rect)>(r1);

     label2:
        $i1 = r1.<android.graphics.Rect: int left>;

        if $i1 != 0 goto label3;

        $i2 = r1.<android.graphics.Rect: int top>;

        if $i2 != 0 goto label3;

        $i3 = r1.<android.graphics.Rect: int right>;

        if $i3 != 0 goto label3;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        if $i4 == 0 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private void computeNestedPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        int[] $r6, $r7, $r8, $r9;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r1.<android.graphics.Rect: int left> = 0;

        r1.<android.graphics.Rect: int top> = 0;

        r1.<android.graphics.Rect: int right> = 0;

        r1.<android.graphics.Rect: int bottom> = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i1, $r5);

        $i3 = r1.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i2 = $r6[i1];

        $i4 = $i3 + $i2;

        r1.<android.graphics.Rect: int left> = $i4;

        $i6 = r1.<android.graphics.Rect: int top>;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i5 = $r7[i1];

        $i7 = $i6 + $i5;

        r1.<android.graphics.Rect: int top> = $i7;

        $i8 = r1.<android.graphics.Rect: int right>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i9 = $r8[i1];

        $i10 = $i8 + $i9;

        r1.<android.graphics.Rect: int right> = $i10;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i12 = $r9[i1];

        $i13 = $i11 + $i12;

        r1.<android.graphics.Rect: int bottom> = $i13;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void computeStackedPadding(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        int[] $r6, $r7, $r8, $r9;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r1.<android.graphics.Rect: int left> = 0;

        r1.<android.graphics.Rect: int top> = 0;

        r1.<android.graphics.Rect: int right> = 0;

        r1.<android.graphics.Rect: int bottom> = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i1, $r5);

        $i3 = r1.<android.graphics.Rect: int left>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i2 = $r6[i1];

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i2);

        r1.<android.graphics.Rect: int left> = $i4;

        $i6 = r1.<android.graphics.Rect: int top>;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i5 = $r7[i1];

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);

        r1.<android.graphics.Rect: int top> = $i7;

        $i8 = r1.<android.graphics.Rect: int right>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i9 = $r8[i1];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        r1.<android.graphics.Rect: int right> = $i10;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i12 = $r9[i1];

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i12);

        r1.<android.graphics.Rect: int bottom> = $i13;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.LayerDrawable$LayerState r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r3;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Outline;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r3 = r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        i0 = r2.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r3[i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        $z0 = virtualinvoke r1.<android.graphics.Outline: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void setHotspot(float, float)
    {
        android.graphics.drawable.LayerDrawable r0;
        float f0, f1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r1[i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4, i5;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.Rect $r4, $r5, $r6;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r7;
        android.graphics.drawable.Drawable $r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i4 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r7 = r1[i5];

        $r8 = $r7.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i0, i1, i2, i3);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        if $r4 != null goto label3;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds> = $r6;

        goto label4;

     label3:
        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

     label4:
        return;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1, $r2, $r3;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mHotspotBounds>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        goto label2;

     label1:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0, z1, z2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r1[i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return z2;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r1[i1];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setDither(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r1[i2];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        if $i0 <= 0 goto label1;

        $r4 = r1[0];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i2 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i2;

     label1:
        $i1 = specialinvoke r0.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r2[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setOpacity(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride> = i0;

        return;
    }

    public int getOpacity()
    {
        android.graphics.drawable.LayerDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.LayerDrawable$LayerState $r1;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $i0 = r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.graphics.drawable.LayerDrawable: int mOpacityOverride>;

        return $i2;

     label1:
        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()>();

        return $i1;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.LayerDrawable r0;
        boolean z0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3, $r4;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean)>($r2, z0);

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r1[i1];

        $r6 = $r5.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: boolean access$000(android.graphics.drawable.LayerDrawable$LayerState)>($r1);

        return $z0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean isStateful()>();

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.LayerDrawable r0;
        int[] r1;
        boolean z0, z1, $z2, $z3, $z4;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        int i0, i1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5;
        android.graphics.Rect $r6;
        android.graphics.drawable.Drawable $r7, $r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: int[];

        z0 = 0;

        z1 = 0;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $r7 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z2 = virtualinvoke $r7.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label2;

        $r8 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z4 = virtualinvoke $r8.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        if $z4 == 0 goto label2;

        z1 = 1;

     label2:
        $z3 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i1, r3);

        if $z3 == 0 goto label3;

        z0 = 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r6 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>($r6);

     label5:
        return z1;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        boolean z0, z1, $z2, $z3;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4;
        android.graphics.Rect $r5;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        z0 = 0;

        z1 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r2 = r1[i2];

        $r6 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $z2 = virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        if $z2 == 0 goto label2;

        z1 = 1;

     label2:
        $z3 = specialinvoke r0.<android.graphics.drawable.LayerDrawable: boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable)>(i2, r2);

        if $z3 == 0 goto label3;

        z0 = 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r5 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>($r5);

     label5:
        return z1;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        boolean z0, $z1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r2;
        android.graphics.drawable.LayerDrawable$ChildDrawable r3;
        android.graphics.drawable.LayerDrawable$LayerState $r4, $r5, $r6;
        android.graphics.drawable.Drawable $r7;
        int[] $r8, $r9, $r10, $r11;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        r1 := @parameter0: android.graphics.Rect;

        i0 = 0;

        i1 = 0;

        i2 = 0;

        i3 = 0;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i6 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r4);

        if $i6 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r2 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i4 = $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i5 = 0;

     label3:
        if i5 >= i4 goto label5;

        r3 = r2[i5];

        $r7 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i9 = r1.<android.graphics.Rect: int left>;

        $i7 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i8 = $i9 + $i7;

        $i22 = $i8 + i0;

        $i10 = r1.<android.graphics.Rect: int top>;

        $i11 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i13 = $i10 + $i11;

        $i20 = $i13 + i1;

        $i15 = r1.<android.graphics.Rect: int right>;

        $i12 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i14 = $i15 - $i12;

        $i21 = $i14 - i2;

        $i16 = r1.<android.graphics.Rect: int bottom>;

        $i17 = r3.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i19 = $i16 - $i17;

        $i18 = $i19 - i3;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i22, $i20, $i21, $i18);

        if z0 == 0 goto label4;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i24 = $r9[i5];

        i0 = i0 + $i24;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i23 = $r8[i5];

        i2 = i2 + $i23;

        $r11 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i26 = $r11[i5];

        i1 = i1 + $i26;

        $r10 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i25 = $r10[i5];

        i3 = i3 + $i25;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, $z1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5;
        android.graphics.drawable.Drawable $r6;
        int[] $r7, $r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 = -1;

        i1 = 0;

        i2 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i6 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r3);

        if $i6 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i3 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i4 = 0;

     label3:
        if i4 >= i3 goto label6;

        r2 = r1[i4];

        $r6 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i7 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i9 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetL>;

        $i11 = $i7 + $i9;

        $i8 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetR>;

        $i10 = $i11 + $i8;

        $i12 = $i10 + i1;

        i5 = $i12 + i2;

        if i5 <= i0 goto label4;

        i0 = i5;

     label4:
        if z0 == 0 goto label5;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i13 = $r7[i4];

        i1 = i1 + $i13;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i14 = $r8[i4];

        i2 = i2 + $i14;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, $z1;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$ChildDrawable r2;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5;
        android.graphics.drawable.Drawable $r6;
        int[] $r7, $r8;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 = -1;

        i1 = 0;

        i2 = 0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i6 = staticinvoke <android.graphics.drawable.LayerDrawable$LayerState: int access$100(android.graphics.drawable.LayerDrawable$LayerState)>($r3);

        if $i6 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r4.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i3 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i4 = 0;

     label3:
        if i4 >= i3 goto label6;

        r2 = r1[i4];

        $r6 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        $i7 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i9 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetT>;

        $i11 = $i7 + $i9;

        $i8 = r2.<android.graphics.drawable.LayerDrawable$ChildDrawable: int mInsetB>;

        $i10 = $i11 + $i8;

        $i12 = $i10 + i1;

        i5 = $i12 + i2;

        if i5 <= i0 goto label4;

        i0 = i5;

     label4:
        if z0 == 0 goto label5;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i13 = $r7[i4];

        i1 = i1 + $i13;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i14 = $r8[i4];

        i2 = i2 + $i14;

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        return i0;
    }

    private boolean refreshChildPadding(int, android.graphics.drawable.LayerDrawable$ChildDrawable)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.drawable.LayerDrawable$ChildDrawable r1;
        android.graphics.Rect r2;
        android.graphics.drawable.Drawable $r3;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.LayerDrawable$ChildDrawable;

        r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.Rect mTmpRect>;

        $r3 = r1.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i2 = r2.<android.graphics.Rect: int left>;

        $r4 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = $r4[i0];

        if $i2 != $i1 goto label1;

        $i7 = r2.<android.graphics.Rect: int top>;

        $r8 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i8 = $r8[i0];

        if $i7 != $i8 goto label1;

        $i10 = r2.<android.graphics.Rect: int right>;

        $r10 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i9 = $r10[i0];

        if $i10 != $i9 goto label1;

        $i11 = r2.<android.graphics.Rect: int bottom>;

        $r11 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i12 = $r11[i0];

        if $i11 == $i12 goto label2;

     label1:
        $r5 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i3 = r2.<android.graphics.Rect: int left>;

        $r5[i0] = $i3;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT>;

        $i4 = r2.<android.graphics.Rect: int top>;

        $r6[i0] = $i4;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR>;

        $i5 = r2.<android.graphics.Rect: int right>;

        $r7[i0] = $i5;

        $r9 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB>;

        $i6 = r2.<android.graphics.Rect: int bottom>;

        $r9[i0] = $i6;

        return 1;

     label2:
        return 0;
    }

    void ensurePadding()
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, $i1;
        android.graphics.drawable.LayerDrawable$LayerState $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r1.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        if $r2 == null goto label1;

        $r7 = r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL>;

        $i1 = lengthof $r7;

        if $i1 < i0 goto label1;

        return;

     label1:
        $r3 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingL> = $r3;

        $r4 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingT> = $r4;

        $r5 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingR> = $r5;

        $r6 = newarray (int)[i0];

        r0.<android.graphics.drawable.LayerDrawable: int[] mPaddingB> = $r6;

        return;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$LayerState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $r1 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.LayerDrawable$LayerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.LayerDrawable$LayerState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.LayerDrawable r0;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        int i0, i1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r8;
        android.graphics.drawable.LayerDrawable$LayerState $r3, $r4, $r5, $r6;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r7;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        $z0 = r0.<android.graphics.drawable.LayerDrawable: boolean mMutated>;

        if $z0 != 0 goto label3;

        $r2 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r2 != r0 goto label3;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        $r4 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>($r3, null);

        r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState> = $r4;

        $r5 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r5.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r6 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i0 = $r6.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = r1[i1];

        $r8 = $r7.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.graphics.drawable.LayerDrawable: boolean mMutated> = 1;

     label3:
        return r0;
    }

    public void setLayoutDirection(int)
    {
        android.graphics.drawable.LayerDrawable r0;
        int i0, i1, i2;
        android.graphics.drawable.LayerDrawable$ChildDrawable[] r1;
        android.graphics.drawable.LayerDrawable$LayerState $r2, $r3;
        android.graphics.drawable.LayerDrawable$ChildDrawable $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.graphics.drawable.LayerDrawable;

        i0 := @parameter0: int;

        $r2 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        r1 = $r2.<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.LayerDrawable$ChildDrawable[] mChildren>;

        $r3 = r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState mLayerState>;

        i1 = $r3.<android.graphics.drawable.LayerDrawable$LayerState: int mNum>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r1[i2];

        $r5 = $r4.<android.graphics.drawable.LayerDrawable$ChildDrawable: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.LayerDrawable: int PADDING_MODE_STACK> = 1;

        <android.graphics.drawable.LayerDrawable: int PADDING_MODE_NEST> = 0;

        return;
    }
}
