public class com.android.internal.content.PackageHelper extends java.lang.Object
{
    public static final int RECOMMEND_INSTALL_INTERNAL;
    public static final int RECOMMEND_INSTALL_EXTERNAL;
    public static final int RECOMMEND_FAILED_INSUFFICIENT_STORAGE;
    public static final int RECOMMEND_FAILED_INVALID_APK;
    public static final int RECOMMEND_FAILED_INVALID_LOCATION;
    public static final int RECOMMEND_FAILED_ALREADY_EXISTS;
    public static final int RECOMMEND_MEDIA_UNAVAILABLE;
    public static final int RECOMMEND_FAILED_INVALID_URI;
    public static final int RECOMMEND_FAILED_VERSION_DOWNGRADE;
    private static final boolean localLOGV;
    private static final java.lang.String TAG;
    public static final int APP_INSTALL_AUTO;
    public static final int APP_INSTALL_INTERNAL;
    public static final int APP_INSTALL_EXTERNAL;

    public void <init>()
    {
        com.android.internal.content.PackageHelper r0;

        r0 := @this: com.android.internal.content.PackageHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.storage.IMountService getMountService() throws android.os.RemoteException
    {
        android.os.IBinder r0;
        android.os.RemoteException $r1;
        android.os.storage.IMountService $r2;

        r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("mount");

        if r0 == null goto label1;

        $r2 = staticinvoke <android.os.storage.IMountService$Stub: android.os.storage.IMountService asInterface(android.os.IBinder)>(r0);

        return $r2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", "Can\'t get mount service");

        $r1 = new android.os.RemoteException;

        specialinvoke $r1.<android.os.RemoteException: void <init>(java.lang.String)>("Could not contact mount service");

        throw $r1;
    }

    public static java.lang.String createSdDir(long, java.lang.String, java.lang.String, int, boolean)
    {
        long l0, $l4, $l5;
        java.lang.String r0, r1, r3, $r7;
        int i1, i2, i3, $i6;
        boolean z0;
        android.os.storage.IMountService r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        android.os.RemoteException $r8;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $l4 = l0 + 1048576L;

        $l5 = $l4 / 1048576L;

        $i6 = (int) $l5;

        i2 = $i6 + 1;

     label1:
        r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i3 = interfaceinvoke r2.<android.os.storage.IMountService: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>(r0, i2, "ext4", r1, i1, z0);

        if i3 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create secure container ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r7);

     label2:
        return null;

     label3:
        r3 = interfaceinvoke r2.<android.os.storage.IMountService: java.lang.String getSecureContainerPath(java.lang.String)>(r0);

     label4:
        return r3;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", "MountService running?");

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static boolean resizeSdDir(long, java.lang.String, java.lang.String)
    {
        long l0, $l3, $l4;
        java.lang.String r0, r1, $r6;
        int i1, i2, $i5;
        android.os.storage.IMountService r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        android.os.RemoteException $r7;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $l3 = l0 + 1048576L;

        $l4 = $l3 / 1048576L;

        $i5 = (int) $l4;

        i1 = $i5 + 1;

     label1:
        r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i2 = interfaceinvoke r2.<android.os.storage.IMountService: int resizeSecureContainer(java.lang.String,int,java.lang.String)>(r0, i1, r1);

        if i2 != 0 goto label3;

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", "MountService running?");

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create secure container ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r6);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static java.lang.String mountSdDir(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1, $r2;
        int i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <com.android.internal.content.PackageHelper: java.lang.String mountSdDir(java.lang.String,java.lang.String,int,boolean)>(r0, r1, i0, 1);

        return $r2;
    }

    public static java.lang.String mountSdDir(java.lang.String, java.lang.String, int, boolean)
    {
        java.lang.String r0, r1, $r4, $r10;
        int i0, i1;
        boolean z0;
        android.os.storage.IMountService $r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        android.os.RemoteException $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i1 = interfaceinvoke $r2.<android.os.storage.IMountService: int mountSecureContainer(java.lang.String,java.lang.String,int,boolean)>(r0, r1, i0, z0);

        if i1 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mount container ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rc : ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageHelper", $r10);

     label2:
        return null;

     label3:
        $r3 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        $r4 = interfaceinvoke $r3.<android.os.storage.IMountService: java.lang.String getSecureContainerPath(java.lang.String)>(r0);

     label4:
        return $r4;

     label5:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", "MountService running?");

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static boolean unMountSdDir(java.lang.String)
    {
        java.lang.String r0, $r7;
        int i0;
        android.os.storage.IMountService $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        android.os.RemoteException $r8;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i0 = interfaceinvoke $r1.<android.os.storage.IMountService: int unmountSecureContainer(java.lang.String,boolean)>(r0, 1);

        if i0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to unmount ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with rc ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r7);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", "MountService running?");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static boolean renameSdDir(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r10, $r19;
        int i0;
        android.os.storage.IMountService $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.os.RemoteException $r11, r20;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i0 = interfaceinvoke $r2.<android.os.storage.IMountService: int renameSecureContainer(java.lang.String,java.lang.String)>(r0, r1);

        if i0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to rename ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with rc ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r10);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r11 := @caughtexception;

        r20 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed ot rename  ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception : ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageHelper", $r19);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static java.lang.String getSdDir(java.lang.String)
    {
        java.lang.String r0, $r3, $r10;
        android.os.RemoteException r1, $r4;
        android.os.storage.IMountService $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        $r3 = interfaceinvoke $r2.<android.os.storage.IMountService: java.lang.String getSecureContainerPath(java.lang.String)>(r0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get container path for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r10);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.lang.String getSdFilesystem(java.lang.String)
    {
        java.lang.String r0, $r3, $r10;
        android.os.RemoteException r1, $r4;
        android.os.storage.IMountService $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        $r3 = interfaceinvoke $r2.<android.os.storage.IMountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>(r0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get container path for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r10);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean finalizeSdDir(java.lang.String)
    {
        java.lang.String r0, $r5, $r11;
        int i0;
        android.os.storage.IMountService $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r12;
        android.os.RemoteException $r6, r13;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i0 = interfaceinvoke $r1.<android.os.storage.IMountService: int finalizeSecureContainer(java.lang.String)>(r0);

        if i0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to finalize container ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageHelper", $r5);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to finalize container ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r11);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static boolean destroySdDir(java.lang.String)
    {
        java.lang.String r0, $r5, $r11;
        int i0;
        android.os.storage.IMountService $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r12;
        android.os.RemoteException $r6, r13;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i0 = interfaceinvoke $r1.<android.os.storage.IMountService: int destroySecureContainer(java.lang.String,boolean)>(r0, 1);

        if i0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to destroy container ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageHelper", $r5);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r6 := @caughtexception;

        r13 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to destroy container ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r11);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static java.lang.String[] getSecureContainerList()
    {
        android.os.RemoteException r0, $r3;
        android.os.storage.IMountService $r1;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

     label1:
        $r1 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        $r2 = interfaceinvoke $r1.<android.os.storage.IMountService: java.lang.String[] getSecureContainerList()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get secure container list with exception");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r7);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean isContainerMounted(java.lang.String)
    {
        java.lang.String r0, $r8;
        android.os.storage.IMountService $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        $z0 = interfaceinvoke $r2.<android.os.storage.IMountService: boolean isSecureContainerMounted(java.lang.String)>(r0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find out if container ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mounted");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r8);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static long extractPublicFiles(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        java.io.FileOutputStream r2, $r11;
        java.util.zip.ZipOutputStream r3, $r12;
        long l0, $l3;
        java.util.zip.ZipFile r4, $r19;
        java.util.Iterator r5;
        java.util.zip.ZipEntry r6;
        java.lang.String r7, $r17, $r21, $r23, $r24, $r26;
        java.lang.Throwable r8, r10, $r28, $r29;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r18;
        java.util.Enumeration $r20;
        java.util.ArrayList $r22;
        boolean $z1, $z2, $z3, $z4;
        java.lang.Object $r25;
        java.io.IOException $r27, $r30;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        if r1 != null goto label01;

        r2 = null;

        r3 = null;

        goto label02;

     label01:
        $r11 = new java.io.FileOutputStream;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r11;

        $r12 = new java.util.zip.ZipOutputStream;

        specialinvoke $r12.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageHelper", $r17);

     label02:
        l0 = 0L;

     label03:
        $r19 = new java.util.zip.ZipFile;

        $r21 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r19.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r21);

        r4 = $r19;

     label04:
        $r20 = virtualinvoke r4.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

        $r22 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r20);

        r5 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r25 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.zip.ZipEntry) $r25;

        r7 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r24 = "AndroidManifest.xml";

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 != 0 goto label06;

        $r26 = "resources.arsc";

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 != 0 goto label06;

        $z4 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("res/");

        if $z4 == 0 goto label07;

     label06:
        $l3 = virtualinvoke r6.<java.util.zip.ZipEntry: long getSize()>();

        l0 = l0 + $l3;

        if r1 == null goto label07;

        staticinvoke <com.android.internal.content.PackageHelper: void copyZipEntry(java.util.zip.ZipEntry,java.util.zip.ZipFile,java.util.zip.ZipOutputStream)>(r6, r4, r3);

     label07:
        goto label05;

     label08:
        virtualinvoke r4.<java.util.zip.ZipFile: void close()>();

     label09:
        goto label16;

     label10:
        $r27 := @caughtexception;

        goto label16;

     label11:
        $r29 := @caughtexception;

        r8 = $r29;

     label12:
        virtualinvoke r4.<java.util.zip.ZipFile: void close()>();

     label13:
        goto label15;

     label14:
        $r30 := @caughtexception;

     label15:
        throw r8;

     label16:
        if r1 == null goto label17;

        virtualinvoke r3.<java.util.zip.ZipOutputStream: void finish()>();

        virtualinvoke r3.<java.util.zip.ZipOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        virtualinvoke r3.<java.util.zip.ZipOutputStream: void close()>();

        $r23 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r23, 420, -1, -1);

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        goto label20;

     label18:
        $r28 := @caughtexception;

        r10 = $r28;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r10;

     label20:
        return l0;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label04 to label08 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label03 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private static void copyZipEntry(java.util.zip.ZipEntry, java.util.zip.ZipFile, java.util.zip.ZipOutputStream) throws java.io.IOException
    {
        java.util.zip.ZipEntry r0, r4, $r7, $r9;
        java.util.zip.ZipFile r1;
        java.util.zip.ZipOutputStream r2;
        byte[] r3;
        int i0, $i1, $i2;
        java.io.InputStream r5;
        java.lang.Throwable r6, $r10;
        java.lang.String $r8;

        r0 := @parameter0: java.util.zip.ZipEntry;

        r1 := @parameter1: java.util.zip.ZipFile;

        r2 := @parameter2: java.util.zip.ZipOutputStream;

        r3 = newarray (byte)[4096];

        $i1 = virtualinvoke r0.<java.util.zip.ZipEntry: int getMethod()>();

        if $i1 != 0 goto label1;

        $r9 = new java.util.zip.ZipEntry;

        specialinvoke $r9.<java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>(r0);

        r4 = $r9;

        goto label2;

     label1:
        $r7 = new java.util.zip.ZipEntry;

        $r8 = virtualinvoke r0.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r8);

        r4 = $r7;

     label2:
        virtualinvoke r2.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r4);

        r5 = virtualinvoke r1.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r0);

     label3:
        $i2 = virtualinvoke r5.<java.io.InputStream: int read(byte[])>(r3);

        i0 = $i2;

        if $i2 <= 0 goto label4;

        virtualinvoke r2.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label3;

     label4:
        virtualinvoke r2.<java.util.zip.ZipOutputStream: void flush()>();

     label5:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        goto label8;

     label6:
        $r10 := @caughtexception;

        r6 = $r10;

     label7:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean fixSdPermissions(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r12;
        int i0, i1;
        android.os.storage.IMountService $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r13;
        android.os.RemoteException $r7, r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = staticinvoke <com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>();

        i1 = interfaceinvoke $r2.<android.os.storage.IMountService: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>(r0, i0, r1);

        if i1 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fixperms container ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageHelper", $r6);

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r7 := @caughtexception;

        r14 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fixperms container ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with exception ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PackageHelper", $r12);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public static int resolveInstallLocation(android.content.Context, java.lang.String, int, long, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r8, $r9;
        int i0, i2, $i3, $i4, $i10, $i11;
        long l1, $l5, $l7;
        android.content.pm.ApplicationInfo r2;
        boolean z0, z1, z2, $z3, $z4, $z5, z6;
        android.os.storage.StorageManager r4;
        java.io.File r5, r6;
        android.content.pm.PackageManager $r7;
        byte $b6, $b8, $b9, b12;
        android.os.Environment$UserEnvironment $r10;
        android.content.pm.PackageManager$NameNotFoundException $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        i2 := @parameter4: int;

        r2 = null;

     label01:
        $r7 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 8192);

     label02:
        goto label04;

     label03:
        $r11 := @caughtexception;

     label04:
        $i4 = i2 & 16;

        if $i4 == 0 goto label05;

        b12 = 1;

        z0 = 0;

        goto label13;

     label05:
        $i3 = i2 & 8;

        if $i3 == 0 goto label06;

        b12 = 2;

        z0 = 0;

        goto label13;

     label06:
        if i0 != 1 goto label07;

        b12 = 1;

        z0 = 0;

        goto label13;

     label07:
        if i0 != 2 goto label08;

        b12 = 2;

        z0 = 1;

        goto label13;

     label08:
        if i0 != 0 goto label12;

        if r2 == null goto label10;

        $i11 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i10 = $i11 & 262144;

        if $i10 == 0 goto label09;

        b12 = 2;

        goto label11;

     label09:
        b12 = 1;

        goto label11;

     label10:
        b12 = 1;

     label11:
        z0 = 1;

        goto label13;

     label12:
        b12 = 1;

        z0 = 0;

     label13:
        z1 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        r4 = staticinvoke <android.os.storage.StorageManager: android.os.storage.StorageManager 'from'(android.content.Context)>(r0);

        z2 = 0;

        if z0 != 0 goto label14;

        if b12 != 1 goto label17;

     label14:
        r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $l5 = virtualinvoke r4.<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>(r5);

        $b6 = l1 cmp $l5;

        if $b6 > 0 goto label15;

        $z5 = 1;

        goto label16;

     label15:
        $z5 = 0;

     label16:
        z2 = $z5;

     label17:
        z6 = 0;

        if z1 != 0 goto label21;

        if z0 != 0 goto label18;

        if b12 != 2 goto label21;

     label18:
        $r10 = new android.os.Environment$UserEnvironment;

        specialinvoke $r10.<android.os.Environment$UserEnvironment: void <init>(int)>(0);

        r6 = virtualinvoke $r10.<android.os.Environment$UserEnvironment: java.io.File getExternalStorageDirectory()>();

        $b8 = l1 cmp 0L;

        if $b8 <= 0 goto label21;

        $l7 = virtualinvoke r4.<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>(r6);

        $b9 = l1 cmp $l7;

        if $b9 > 0 goto label19;

        $z4 = 1;

        goto label20;

     label19:
        $z4 = 0;

     label20:
        z6 = $z4;

     label21:
        if b12 != 1 goto label22;

        if z2 == 0 goto label23;

        return 1;

     label22:
        if z1 != 0 goto label23;

        if b12 != 2 goto label23;

        if z6 == 0 goto label23;

        return 2;

     label23:
        if z0 == 0 goto label25;

        if z2 == 0 goto label24;

        return 1;

     label24:
        if z1 != 0 goto label25;

        if z6 == 0 goto label25;

        return 2;

     label25:
        if z1 != 0 goto label27;

        if z0 != 0 goto label26;

        if b12 != 2 goto label27;

     label26:
        $r8 = "mounted";

        $r9 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label27;

        return -5;

     label27:
        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label03;
    }

    public static long calculateInstalledSize(android.content.pm.PackageParser$PackageLite, boolean, java.lang.String) throws java.io.IOException
    {
        android.content.pm.PackageParser$PackageLite r0;
        boolean z0;
        java.lang.String r1;
        com.android.internal.content.NativeLibraryHelper$Handle r2;
        long l0;
        java.lang.Throwable r3, $r4;

        r0 := @parameter0: android.content.pm.PackageParser$PackageLite;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 = null;

     label1:
        r2 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(android.content.pm.PackageParser$PackageLite)>(r0);

        l0 = staticinvoke <com.android.internal.content.PackageHelper: long calculateInstalledSize(android.content.pm.PackageParser$PackageLite,com.android.internal.content.NativeLibraryHelper$Handle,boolean,java.lang.String)>(r0, r2, z0, r1);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return l0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long calculateInstalledSize(android.content.pm.PackageParser$PackageLite, com.android.internal.content.NativeLibraryHelper$Handle, boolean, java.lang.String) throws java.io.IOException
    {
        android.content.pm.PackageParser$PackageLite r0;
        com.android.internal.content.NativeLibraryHelper$Handle r1;
        boolean z0, $z1;
        java.lang.String r2, r4;
        long l0, $l1, $l2, $l3, l4;
        java.util.Iterator r3;
        java.io.File r5, $r8;
        java.util.List $r6;
        java.lang.Object $r7;

        r0 := @parameter0: android.content.pm.PackageParser$PackageLite;

        r1 := @parameter1: com.android.internal.content.NativeLibraryHelper$Handle;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        l0 = 0L;

        $r6 = virtualinvoke r0.<android.content.pm.PackageParser$PackageLite: java.util.List getAllCodePaths()>();

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r4);

        r5 = $r8;

        $l2 = virtualinvoke r5.<java.io.File: long length()>();

        l0 = l0 + $l2;

        if z0 == 0 goto label2;

        $l3 = staticinvoke <com.android.internal.content.PackageHelper: long extractPublicFiles(java.io.File,java.io.File)>(r5, null);

        l0 = l0 + $l3;

     label2:
        goto label1;

     label3:
        $l1 = staticinvoke <com.android.internal.content.NativeLibraryHelper: long sumNativeBinariesWithOverride(com.android.internal.content.NativeLibraryHelper$Handle,java.lang.String)>(r1, r2);

        l4 = l0 + $l1;

        return l4;
    }

    public static java.lang.String replaceEnd(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r4, $r7, $r13;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r10, $r11, $r12, $r14;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to end with ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <com.android.internal.content.PackageHelper: int APP_INSTALL_EXTERNAL> = 2;

        <com.android.internal.content.PackageHelper: int APP_INSTALL_INTERNAL> = 1;

        <com.android.internal.content.PackageHelper: int APP_INSTALL_AUTO> = 0;

        <com.android.internal.content.PackageHelper: java.lang.String TAG> = "PackageHelper";

        <com.android.internal.content.PackageHelper: boolean localLOGV> = 0;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_VERSION_DOWNGRADE> = -7;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_INVALID_URI> = -6;

        <com.android.internal.content.PackageHelper: int RECOMMEND_MEDIA_UNAVAILABLE> = -5;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_ALREADY_EXISTS> = -4;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_INVALID_LOCATION> = -3;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_INVALID_APK> = -2;

        <com.android.internal.content.PackageHelper: int RECOMMEND_FAILED_INSUFFICIENT_STORAGE> = -1;

        <com.android.internal.content.PackageHelper: int RECOMMEND_INSTALL_EXTERNAL> = 2;

        <com.android.internal.content.PackageHelper: int RECOMMEND_INSTALL_INTERNAL> = 1;

        return;
    }
}
