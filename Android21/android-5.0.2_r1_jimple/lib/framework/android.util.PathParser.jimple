public class android.util.PathParser extends java.lang.Object
{
    static final java.lang.String LOGTAG;

    public void <init>()
    {
        android.util.PathParser r0;

        r0 := @this: android.util.PathParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Path createPathFromPathData(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Path r1, $r3;
        android.util.PathParser$PathDataNode[] r2;

        r0 := @parameter0: java.lang.String;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        r1 = $r3;

        r2 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>(r0);

        if r2 == null goto label1;

        staticinvoke <android.util.PathParser$PathDataNode: void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path)>(r2, r1);

        return r1;

     label1:
        return null;
    }

    public static android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
    {
        java.lang.String r0, r2, $r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, i9;
        java.util.ArrayList r1, $r4;
        float[] r3, $r8;
        android.util.PathParser$PathDataNode[] $r5, $r7;
        java.lang.Object[] $r6;
        char $c6, $c8;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = 0;

        i1 = 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label4;

        i9 = staticinvoke <android.util.PathParser: int nextStart(java.lang.String,int)>(r0, i1);

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i9);

        r2 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i7 <= 0 goto label3;

        r3 = staticinvoke <android.util.PathParser: float[] getFloats(java.lang.String)>(r2);

        $c8 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        staticinvoke <android.util.PathParser: void addNode(java.util.ArrayList,char,float[])>(r1, $c8, r3);

     label3:
        i0 = i9;

        i1 = i9 + 1;

        goto label2;

     label4:
        $i3 = i1 - i0;

        if $i3 != 1 goto label5;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i5 goto label5;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $r8 = newarray (float)[0];

        staticinvoke <android.util.PathParser: void addNode(java.util.ArrayList,char,float[])>(r1, $c6, $r8);

     label5:
        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (android.util.PathParser$PathDataNode)[$i4];

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (android.util.PathParser$PathDataNode[]) $r6;

        return $r7;
    }

    public static android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[])
    {
        android.util.PathParser$PathDataNode[] r0, r1;
        int i0, $i1, $i2;
        android.util.PathParser$PathDataNode $r2, $r3;

        r0 := @parameter0: android.util.PathParser$PathDataNode[];

        if r0 != null goto label1;

        return null;

     label1:
        $i1 = lengthof r0;

        r1 = newarray (android.util.PathParser$PathDataNode)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label3;

        $r2 = new android.util.PathParser$PathDataNode;

        $r3 = r0[i0];

        specialinvoke $r2.<android.util.PathParser$PathDataNode: void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1)>($r3, null);

        r1[i0] = $r2;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static boolean canMorph(android.util.PathParser$PathDataNode[], android.util.PathParser$PathDataNode[])
    {
        android.util.PathParser$PathDataNode[] r0, r1;
        int i0, $i1, $i2, $i3, $i6, $i7;
        android.util.PathParser$PathDataNode $r2, $r3, $r4, $r6;
        char $c4, $c5;
        float[] $r5, $r7;

        r0 := @parameter0: android.util.PathParser$PathDataNode[];

        r1 := @parameter1: android.util.PathParser$PathDataNode[];

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $i2 = lengthof r0;

        $i1 = lengthof r1;

        if $i2 == $i1 goto label3;

        return 0;

     label3:
        i0 = 0;

     label4:
        $i3 = lengthof r0;

        if i0 >= $i3 goto label7;

        $r2 = r0[i0];

        $c4 = staticinvoke <android.util.PathParser$PathDataNode: char access$100(android.util.PathParser$PathDataNode)>($r2);

        $r3 = r1[i0];

        $c5 = staticinvoke <android.util.PathParser$PathDataNode: char access$100(android.util.PathParser$PathDataNode)>($r3);

        if $c4 != $c5 goto label5;

        $r4 = r0[i0];

        $r5 = staticinvoke <android.util.PathParser$PathDataNode: float[] access$200(android.util.PathParser$PathDataNode)>($r4);

        $i6 = lengthof $r5;

        $r6 = r1[i0];

        $r7 = staticinvoke <android.util.PathParser$PathDataNode: float[] access$200(android.util.PathParser$PathDataNode)>($r6);

        $i7 = lengthof $r7;

        if $i6 == $i7 goto label6;

     label5:
        return 0;

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        return 1;
    }

    public static void updateNodes(android.util.PathParser$PathDataNode[], android.util.PathParser$PathDataNode[])
    {
        android.util.PathParser$PathDataNode[] r0, r1;
        int i0, i1, $i2, $i5;
        android.util.PathParser$PathDataNode $r2, $r3, $r4, $r6, $r8;
        char $c3;
        float[] $r5, $r7, $r9;
        float $f0;

        r0 := @parameter0: android.util.PathParser$PathDataNode[];

        r1 := @parameter1: android.util.PathParser$PathDataNode[];

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label4;

        $r3 = r0[i0];

        $r2 = r1[i0];

        $c3 = staticinvoke <android.util.PathParser$PathDataNode: char access$100(android.util.PathParser$PathDataNode)>($r2);

        staticinvoke <android.util.PathParser$PathDataNode: char access$102(android.util.PathParser$PathDataNode,char)>($r3, $c3);

        i1 = 0;

     label2:
        $r4 = r1[i0];

        $r5 = staticinvoke <android.util.PathParser$PathDataNode: float[] access$200(android.util.PathParser$PathDataNode)>($r4);

        $i5 = lengthof $r5;

        if i1 >= $i5 goto label3;

        $r6 = r0[i0];

        $r7 = staticinvoke <android.util.PathParser$PathDataNode: float[] access$200(android.util.PathParser$PathDataNode)>($r6);

        $r8 = r1[i0];

        $r9 = staticinvoke <android.util.PathParser$PathDataNode: float[] access$200(android.util.PathParser$PathDataNode)>($r8);

        $f0 = $r9[i1];

        $r7[i1] = $f0;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    private static int nextStart(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char c1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i4 = c1 - 65;

        $i3 = c1 - 90;

        $i5 = $i4 * $i3;

        if $i5 <= 0 goto label2;

        $i7 = c1 - 97;

        $i6 = c1 - 122;

        $i8 = $i7 * $i6;

        if $i8 > 0 goto label3;

     label2:
        return i0;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return i0;
    }

    private static void addNode(java.util.ArrayList, char, float[])
    {
        java.util.ArrayList r0;
        char c0;
        float[] r1;
        android.util.PathParser$PathDataNode $r2;

        r0 := @parameter0: java.util.ArrayList;

        c0 := @parameter1: char;

        r1 := @parameter2: float[];

        $r2 = new android.util.PathParser$PathDataNode;

        specialinvoke $r2.<android.util.PathParser$PathDataNode: void <init>(char,float[],android.util.PathParser$1)>(c0, r1, null);

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    private static float[] getFloats(java.lang.String)
    {
        java.lang.String r0, $r5, $r10, $r13;
        float[] r1, $r4, $r6;
        int i0, i1, i2, $i5, $i6, i8;
        android.util.PathParser$ExtractFloatResult r2, $r3;
        char $c3, $c4;
        boolean $z1, $z2, $z3, $z4;
        float $f0;
        java.lang.StringBuilder $r7, $r9, $r11, $r12;
        java.lang.NumberFormatException $r8, r14;

        r0 := @parameter0: java.lang.String;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c3 != 122 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c4 != 90 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $z2 = $z1 | $z4;

        if $z2 == 0 goto label05;

        $r6 = newarray (float)[0];

        return $r6;

     label05:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        r1 = newarray (float)[$i5];

        i0 = 0;

        i1 = 1;

        $r3 = new android.util.PathParser$ExtractFloatResult;

        specialinvoke $r3.<android.util.PathParser$ExtractFloatResult: void <init>(android.util.PathParser$1)>(null);

        r2 = $r3;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label06:
        if i1 >= i2 goto label09;

        staticinvoke <android.util.PathParser: void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult)>(r0, i1, r2);

        i8 = r2.<android.util.PathParser$ExtractFloatResult: int mEndPosition>;

        if i1 >= i8 goto label07;

        $i6 = i0;

        i0 = i0 + 1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i8);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        r1[$i6] = $f0;

     label07:
        $z3 = r2.<android.util.PathParser$ExtractFloatResult: boolean mEndWithNegSign>;

        if $z3 == 0 goto label08;

        i1 = i8;

        goto label06;

     label08:
        i1 = i8 + 1;

        goto label06;

     label09:
        $r4 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>(r1, i0);

     label10:
        return $r4;

     label11:
        $r8 := @caughtexception;

        r14 = $r8;

        $r10 = <android.util.PathParser: java.lang.String LOGTAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error in parsing \"");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, $r13);

        throw r14;

        catch java.lang.NumberFormatException from label05 to label10 with label11;
    }

    private static void extract(java.lang.String, int, android.util.PathParser$ExtractFloatResult)
    {
        java.lang.String r0;
        int i0, i1, $i3;
        android.util.PathParser$ExtractFloatResult r1;
        boolean z0;
        char c2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: android.util.PathParser$ExtractFloatResult;

        i1 = i0;

        z0 = 0;

        r1.<android.util.PathParser$ExtractFloatResult: boolean mEndWithNegSign> = 0;

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i3 goto label6;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        lookupswitch(c2)
        {
            case 32: goto label2;
            case 44: goto label2;
            case 45: goto label3;
            default: goto label4;
        };

     label2:
        z0 = 1;

        goto label4;

     label3:
        if i1 == i0 goto label4;

        z0 = 1;

        r1.<android.util.PathParser$ExtractFloatResult: boolean mEndWithNegSign> = 1;

     label4:
        if z0 == 0 goto label5;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        r1.<android.util.PathParser$ExtractFloatResult: int mEndPosition> = i1;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "android/util/PathParser";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.util.PathParser: java.lang.String LOGTAG> = $r1;

        return;
    }
}
