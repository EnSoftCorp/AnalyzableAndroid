public class android.hardware.camera2.legacy.SurfaceTextureRenderer extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int EGL_RECORDABLE_ANDROID;
    private static final int GL_MATRIX_SIZE;
    private static final int VERTEX_POS_SIZE;
    private static final int VERTEX_UV_SIZE;
    private static final int EGL_COLOR_BITLENGTH;
    private static final int GLES_VERSION;
    private static final int PBUFFER_PIXEL_BYTES;
    private android.opengl.EGLDisplay mEGLDisplay;
    private android.opengl.EGLContext mEGLContext;
    private android.opengl.EGLConfig mConfigs;
    private java.util.List mSurfaces;
    private java.util.List mConversionSurfaces;
    private java.nio.ByteBuffer mPBufferPixels;
    private volatile android.graphics.SurfaceTexture mSurfaceTexture;
    private static final int FLOAT_SIZE_BYTES;
    private static final int TRIANGLE_VERTICES_DATA_STRIDE_BYTES;
    private static final int TRIANGLE_VERTICES_DATA_POS_OFFSET;
    private static final int TRIANGLE_VERTICES_DATA_UV_OFFSET;
    private static final float[] sFrontCameraTriangleVertices;
    private static final float[] sBackCameraTriangleVertices;
    private java.nio.FloatBuffer mTriangleVertices;
    private static final java.lang.String VERTEX_SHADER;
    private static final java.lang.String FRAGMENT_SHADER;
    private float[] mMVPMatrix;
    private float[] mSTMatrix;
    private int mProgram;
    private int mTextureID;
    private int muMVPMatrixHandle;
    private int muSTMatrixHandle;
    private int maPositionHandle;
    private int maTextureHandle;
    private android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer;
    private static final java.lang.String LEGACY_PERF_PROPERTY;

    public void <init>(int)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        int i0, $i1, $i2, $i3, $i4;
        android.opengl.EGLDisplay $r1;
        android.opengl.EGLContext $r2;
        java.util.ArrayList $r3, $r4;
        float[] $r5, $r6, $r7, $r12, $r15, $r17, $r21;
        java.nio.ByteBuffer $r8, $r10, $r18, $r19;
        java.nio.ByteOrder $r9, $r20;
        java.nio.FloatBuffer $r11, $r13, $r14, $r22, $r23, $r24;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.opengl.EGL14: android.opengl.EGLDisplay EGL_NO_DISPLAY>;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay> = $r1;

        $r2 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces> = $r4;

        $r5 = newarray (float)[16];

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mMVPMatrix> = $r5;

        $r6 = newarray (float)[16];

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mSTMatrix> = $r6;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mTextureID> = 0;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer> = null;

        if i0 != 1 goto label1;

        $r17 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sBackCameraTriangleVertices>;

        $i3 = lengthof $r17;

        $i4 = $i3 * 4;

        $r18 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i4);

        $r20 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r19 = virtualinvoke $r18.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r20);

        $r22 = virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices> = $r22;

        $r24 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        $r21 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sBackCameraTriangleVertices>;

        $r23 = virtualinvoke $r24.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r21);

        virtualinvoke $r23.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        goto label2;

     label1:
        $r7 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sFrontCameraTriangleVertices>;

        $i1 = lengthof $r7;

        $i2 = $i1 * 4;

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i2);

        $r9 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r10 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r9);

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices> = $r11;

        $r14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        $r12 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sFrontCameraTriangleVertices>;

        $r13 = virtualinvoke $r14.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>($r12);

        virtualinvoke $r13.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

     label2:
        $r15 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mSTMatrix>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r15, 0);

        return;
    }

    private int loadShader(int, java.lang.String)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        int i0, i1, $i2;
        java.lang.String r1, $r6, $r8, $r12, $r13, $r15, $r17, $r22;
        int[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r10, $r11, $r14, $r16, $r18, $r20, $r21, $r23;
        java.lang.IllegalStateException $r19;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = staticinvoke <android.opengl.GLES20: int glCreateShader(int)>(i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("glCreateShader type=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>($r6);

        staticinvoke <android.opengl.GLES20: void glShaderSource(int,java.lang.String)>(i1, r1);

        staticinvoke <android.opengl.GLES20: void glCompileShader(int)>(i1);

        r2 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>(i1, 35713, r2, 0);

        $i2 = r2[0];

        if $i2 != 0 goto label1;

        $r8 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not compile shader ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r8, $r12);

        $r13 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = staticinvoke <android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r13, $r17);

        staticinvoke <android.opengl.GLES20: void glDeleteShader(int)>(i1);

        $r19 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not compile shader ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label1:
        return i1;
    }

    private int createProgram(java.lang.String, java.lang.String)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.lang.String r1, r2, $r4, $r5, $r6, $r7;
        int i0, i1, i2, $i3;
        int[] r3;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int loadShader(int,java.lang.String)>(35633, r1);

        if i0 != 0 goto label1;

        return 0;

     label1:
        i1 = specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int loadShader(int,java.lang.String)>(35632, r2);

        if i1 != 0 goto label2;

        return 0;

     label2:
        i2 = staticinvoke <android.opengl.GLES20: int glCreateProgram()>();

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glCreateProgram");

        if i2 != 0 goto label3;

        $r7 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r7, "Could not create program");

     label3:
        staticinvoke <android.opengl.GLES20: void glAttachShader(int,int)>(i2, i0);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glAttachShader");

        staticinvoke <android.opengl.GLES20: void glAttachShader(int,int)>(i2, i1);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glAttachShader");

        staticinvoke <android.opengl.GLES20: void glLinkProgram(int)>(i2);

        r3 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>(i2, 35714, r3, 0);

        $i3 = r3[0];

        if $i3 == 1 goto label4;

        $r4 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "Could not link program: ");

        $r5 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        $r6 = staticinvoke <android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>(i2);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r6);

        staticinvoke <android.opengl.GLES20: void glDeleteProgram(int)>(i2);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not link program");

        throw $r8;

     label4:
        return i2;
    }

    private void drawFrame(android.graphics.SurfaceTexture, int, int)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.util.Size r2;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException r3, $r39;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, f9;
        android.graphics.RectF r4, r5, $r10, $r11;
        android.graphics.Matrix r6, $r13;
        float[] $r7, $r8, $r14, $r20, $r23;
        byte $b3, $b5;
        java.lang.IllegalStateException $r9, $r36;
        android.graphics.Matrix$ScaleToFit $r12;
        boolean $z2, $z3;
        java.nio.FloatBuffer $r16, $r17, $r18, $r21;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37;
        java.lang.String $r27, $r38;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("onDrawFrame start");

        $r7 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mSTMatrix>;

        virtualinvoke r1.<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>($r7);

        $r8 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mMVPMatrix>;

        staticinvoke <android.opengl.Matrix: void setIdentityM(float[],int)>($r8, 0);

     label1:
        r2 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getTextureSize(android.graphics.SurfaceTexture)>(r1);

     label2:
        goto label4;

     label3:
        $r39 := @caughtexception;

        r3 = $r39;

        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Surface abandoned, skipping drawFrame...", r3);

        throw $r36;

     label4:
        $i2 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        f9 = (float) $i2;

        $i4 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        f0 = (float) $i4;

        $b3 = f9 cmpg 0.0F;

        if $b3 <= 0 goto label5;

        $b5 = f0 cmpg 0.0F;

        if $b5 > 0 goto label6;

     label5:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Illegal intermediate texture with dimension of 0");

        throw $r9;

     label6:
        $r11 = new android.graphics.RectF;

        specialinvoke $r11.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, f9, f0);

        r4 = $r11;

        $r10 = new android.graphics.RectF;

        $f3 = (float) i0;

        $f4 = (float) i1;

        specialinvoke $r10.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f3, $f4);

        r5 = $r10;

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        r6 = $r13;

        $r12 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r6.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r5, r4, $r12);

        virtualinvoke r6.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r5);

        $f6 = virtualinvoke r4.<android.graphics.RectF: float width()>();

        $f5 = virtualinvoke r5.<android.graphics.RectF: float width()>();

        f1 = $f6 / $f5;

        $f8 = virtualinvoke r4.<android.graphics.RectF: float height()>();

        $f7 = virtualinvoke r5.<android.graphics.RectF: float height()>();

        f2 = $f8 / $f7;

        $r14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mMVPMatrix>;

        staticinvoke <android.opengl.Matrix: void scaleM(float[],int,float,float,float)>($r14, 0, f2, f1, 1.0F);

        $z3 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean DEBUG>;

        if $z3 == 0 goto label7;

        $r27 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scaling factors (S_x = ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",S_y = ");

        $r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") used for ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surface, intermediate buffer size is ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f9);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r27, $r38);

     label7:
        staticinvoke <android.opengl.GLES20: void glViewport(int,int,int,int)>(0, 0, i0, i1);

        $z2 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean DEBUG>;

        if $z2 == 0 goto label8;

        staticinvoke <android.opengl.GLES20: void glClearColor(float,float,float,float)>(1.0F, 0.0F, 0.0F, 1.0F);

        staticinvoke <android.opengl.GLES20: void glClear(int)>(16640);

     label8:
        $i6 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        staticinvoke <android.opengl.GLES20: void glUseProgram(int)>($i6);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glUseProgram");

        staticinvoke <android.opengl.GLES20: void glActiveTexture(int)>(33984);

        $i7 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mTextureID>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(36197, $i7);

        $r17 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        virtualinvoke $r17.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(0);

        $i8 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maPositionHandle>;

        $r16 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i8, 3, 5126, 0, 20, $r16);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glVertexAttribPointer maPosition");

        $i9 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maPositionHandle>;

        staticinvoke <android.opengl.GLES20: void glEnableVertexAttribArray(int)>($i9);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glEnableVertexAttribArray maPositionHandle");

        $r18 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        virtualinvoke $r18.<java.nio.FloatBuffer: java.nio.Buffer position(int)>(3);

        $i11 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maTextureHandle>;

        $r21 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.FloatBuffer mTriangleVertices>;

        staticinvoke <android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>($i11, 2, 5126, 0, 20, $r21);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glVertexAttribPointer maTextureHandle");

        $i10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maTextureHandle>;

        staticinvoke <android.opengl.GLES20: void glEnableVertexAttribArray(int)>($i10);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glEnableVertexAttribArray maTextureHandle");

        $i13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muMVPMatrixHandle>;

        $r20 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mMVPMatrix>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>($i13, 1, 0, $r20, 0);

        $i12 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muSTMatrixHandle>;

        $r23 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] mSTMatrix>;

        staticinvoke <android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>($i12, 1, 0, $r23, 0);

        staticinvoke <android.opengl.GLES20: void glDrawArrays(int,int,int)>(5, 0, 4);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glDrawArrays");

        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label1 to label2 with label3;
    }

    private void initializeGLState()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.IllegalStateException $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $i0 = specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int createProgram(java.lang.String,java.lang.String)>("uniform mat4 uMVPMatrix;\nuniform mat4 uSTMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n  gl_Position = uMVPMatrix * aPosition;\n  vTextureCoord = (uSTMatrix * aTextureCoord).xy;\n}\n", "#extension GL_OES_EGL_image_external : require\nprecision mediump float;\nvarying vec2 vTextureCoord;\nuniform samplerExternalOES sTexture;\nvoid main() {\n  gl_FragColor = texture2D(sTexture, vTextureCoord);\n}\n");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram> = $i0;

        $i1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        if $i1 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("failed creating program");

        throw $r6;

     label1:
        $i2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        $i3 = staticinvoke <android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>($i2, "aPosition");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maPositionHandle> = $i3;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glGetAttribLocation aPosition");

        $i4 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maPositionHandle>;

        if $i4 != -1 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not get attrib location for aPosition");

        throw $r4;

     label2:
        $i5 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        $i6 = staticinvoke <android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>($i5, "aTextureCoord");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maTextureHandle> = $i6;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glGetAttribLocation aTextureCoord");

        $i7 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int maTextureHandle>;

        if $i7 != -1 goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not get attrib location for aTextureCoord");

        throw $r5;

     label3:
        $i8 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        $i9 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i8, "uMVPMatrix");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muMVPMatrixHandle> = $i9;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glGetUniformLocation uMVPMatrix");

        $i10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muMVPMatrixHandle>;

        if $i10 != -1 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not get attrib location for uMVPMatrix");

        throw $r2;

     label4:
        $i11 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mProgram>;

        $i12 = staticinvoke <android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>($i11, "uSTMatrix");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muSTMatrixHandle> = $i12;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glGetUniformLocation uSTMatrix");

        $i13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int muSTMatrixHandle>;

        if $i13 != -1 goto label5;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not get attrib location for uSTMatrix");

        throw $r3;

     label5:
        r1 = newarray (int)[1];

        staticinvoke <android.opengl.GLES20: void glGenTextures(int,int[],int)>(1, r1, 0);

        $i15 = r1[0];

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mTextureID> = $i15;

        $i14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mTextureID>;

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(36197, $i14);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glBindTexture mTextureID");

        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>(36197, 10241, 9728.0F);

        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>(36197, 10240, 9729.0F);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(36197, 10242, 33071);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(36197, 10243, 33071);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glTexParameter");

        return;
    }

    private int getTextureId()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $i0 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int mTextureID>;

        return $i0;
    }

    private void clearState()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.util.List $r1, $r2;
        android.graphics.SurfaceTexture $r3, $r4;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.ByteBuffer mPBufferPixels> = null;

        $r3 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        if $r3 == null goto label1;

        $r4 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r4.<android.graphics.SurfaceTexture: void release()>();

     label1:
        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture> = null;

        return;
    }

    private void configureEGLContext()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        int[] r1, r2, r4, r5, $r10, $r14;
        android.opengl.EGLConfig[] r3;
        android.opengl.EGLDisplay $r6, $r7, $r8, $r9, $r11, $r15;
        boolean $z0;
        int $i0;
        android.opengl.EGLConfig $r12, $r16;
        android.opengl.EGLContext $r13, $r17, $r18, $r20;
        java.lang.IllegalStateException $r19, $r21, $r22;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r6 = staticinvoke <android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>(0);

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay> = $r6;

        $r8 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r7 = <android.opengl.EGL14: android.opengl.EGLDisplay EGL_NO_DISPLAY>;

        if $r8 != $r7 goto label1;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No EGL14 display");

        throw $r21;

     label1:
        r1 = newarray (int)[2];

        $r9 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $z0 = staticinvoke <android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>($r9, r1, 0, r1, 1);

        if $z0 != 0 goto label2;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot initialize EGL14");

        throw $r22;

     label2:
        $r10 = newarray (int)[13];

        $r10[0] = 12324;

        $r10[1] = 8;

        $r10[2] = 12323;

        $r10[3] = 8;

        $r10[4] = 12322;

        $r10[5] = 8;

        $r10[6] = 12352;

        $r10[7] = 4;

        $r10[8] = 12610;

        $r10[9] = 1;

        $r10[10] = 12339;

        $r10[11] = 5;

        $r10[12] = 12344;

        r2 = $r10;

        r3 = newarray (android.opengl.EGLConfig)[1];

        r4 = newarray (int)[1];

        $r11 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $i0 = lengthof r3;

        staticinvoke <android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>($r11, r2, 0, r3, 0, $i0, r4, 0);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("eglCreateContext RGB888+recordable ES2");

        $r12 = r3[0];

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLConfig mConfigs> = $r12;

        $r14 = newarray (int)[3];

        $r14[0] = 12440;

        $r14[1] = 2;

        $r14[2] = 12344;

        r5 = $r14;

        $r15 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r16 = r3[0];

        $r13 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        $r18 = staticinvoke <android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>($r15, $r16, $r13, r5, 0);

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext> = $r18;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("eglCreateContext");

        $r20 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext>;

        $r17 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        if $r20 != $r17 goto label3;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No EGLContext could be made");

        throw $r19;

     label3:
        return;
    }

    private void configureEGLOutputSurfaces(java.util.Collection)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.util.Collection r1;
        int[] r2, $r7;
        java.util.Iterator r3;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r4;
        android.util.Size r5;
        java.lang.IllegalStateException $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Object $r8;
        android.view.Surface $r9, $r11;
        android.opengl.EGLConfig $r10;
        android.opengl.EGLSurface $r12;
        android.opengl.EGLDisplay $r13;
        java.lang.String $r14;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException $r15, r16;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No Surfaces were provided to draw to");

        throw $r6;

     label2:
        $r7 = newarray (int)[1];

        $r7[0] = 12344;

        r2 = $r7;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r8;

     label4:
        $r9 = r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        r5 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getSurfaceSize(android.view.Surface)>($r9);

        $i1 = virtualinvoke r5.<android.util.Size: int getWidth()>();

        r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width> = $i1;

        $i2 = virtualinvoke r5.<android.util.Size: int getHeight()>();

        r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height> = $i2;

        $r13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLConfig mConfigs>;

        $r11 = r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $r12 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>($r13, $r10, $r11, r2, 0);

        r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface> = $r12;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("eglCreateWindowSurface");

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        r16 = $r15;

        $r14 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Surface abandoned, skipping...", r16);

     label7:
        goto label3;

     label8:
        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label4 to label5 with label6;
    }

    private void configureEGLPbufferSurfaces(java.util.Collection)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.util.Collection r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.Iterator r2;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r3;
        android.util.Size r4;
        int[] r5, $r12;
        java.lang.IllegalStateException $r6;
        boolean $z0;
        java.nio.ByteBuffer $r7, $r9;
        java.nio.ByteOrder $r8;
        android.view.Surface $r10;
        java.lang.Object $r11;
        android.opengl.EGLDisplay $r13;
        android.opengl.EGLConfig $r14;
        android.opengl.EGLSurface $r15;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException $r16, r18;
        java.lang.String $r17;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label01;

        $i2 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i2 != 0 goto label02;

     label01:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No Surfaces were provided to draw to");

        throw $r6;

     label02:
        i0 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r11;

     label04:
        $r10 = r3.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        r4 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getSurfaceSize(android.view.Surface)>($r10);

        $i4 = virtualinvoke r4.<android.util.Size: int getWidth()>();

        $i5 = virtualinvoke r4.<android.util.Size: int getHeight()>();

        i1 = $i4 * $i5;

        if i1 <= i0 goto label05;

        $i10 = i1;

        goto label06;

     label05:
        $i10 = i0;

     label06:
        i0 = $i10;

        $r12 = newarray (int)[5];

        $r12[0] = 12375;

        $i6 = virtualinvoke r4.<android.util.Size: int getWidth()>();

        $r12[1] = $i6;

        $r12[2] = 12374;

        $i7 = virtualinvoke r4.<android.util.Size: int getHeight()>();

        $r12[3] = $i7;

        $r12[4] = 12344;

        r5 = $r12;

        $i9 = virtualinvoke r4.<android.util.Size: int getWidth()>();

        r3.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width> = $i9;

        $i8 = virtualinvoke r4.<android.util.Size: int getHeight()>();

        r3.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height> = $i8;

        $r13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLConfig mConfigs>;

        $r15 = staticinvoke <android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>($r13, $r14, r5, 0);

        r3.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface> = $r15;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("eglCreatePbufferSurface");

     label07:
        goto label09;

     label08:
        $r16 := @caughtexception;

        r18 = $r16;

        $r17 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "Surface abandoned, skipping...", r18);

     label09:
        goto label03;

     label10:
        $i3 = i0 * 4;

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>($i3);

        $r8 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r9 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r8);

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.ByteBuffer mPBufferPixels> = $r9;

        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label04 to label07 with label08;
    }

    private void releaseEGLContext()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.util.Iterator r1, r26;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r2, r27;
        android.opengl.EGLDisplay $r3, $r4, $r5, $r10, $r14, $r15, $r20, $r23;
        android.opengl.EGLContext $r6, $r7, $r13;
        android.opengl.EGLSurface $r8, $r9, $r18, $r19, $r24, $r25;
        java.util.List $r11, $r12, $r16, $r21;
        java.lang.Object $r17, $r22;
        boolean $z4, $z6;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r4 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r3 = <android.opengl.EGL14: android.opengl.EGLDisplay EGL_NO_DISPLAY>;

        if $r4 == $r3 goto label7;

        $r10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r9 = <android.opengl.EGL14: android.opengl.EGLSurface EGL_NO_SURFACE>;

        $r8 = <android.opengl.EGL14: android.opengl.EGLSurface EGL_NO_SURFACE>;

        $r7 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        staticinvoke <android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>($r10, $r9, $r8, $r7);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void dumpGlTiming()>();

        $r11 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        if $r11 == null goto label3;

        $r21 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        r1 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z6 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        $r22 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r22;

        $r24 = r2.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        if $r24 == null goto label2;

        $r23 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r25 = r2.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        staticinvoke <android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>($r23, $r25);

     label2:
        goto label1;

     label3:
        $r12 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        if $r12 == null goto label6;

        $r16 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        r26 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r17 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r17;

        $r19 = r27.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        if $r19 == null goto label5;

        $r20 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r18 = r27.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        staticinvoke <android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>($r20, $r18);

     label5:
        goto label4;

     label6:
        $r14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext>;

        staticinvoke <android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>($r14, $r13);

        staticinvoke <android.opengl.EGL14: boolean eglReleaseThread()>();

        $r15 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        staticinvoke <android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>($r15);

     label7:
        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLConfig mConfigs> = null;

        $r5 = <android.opengl.EGL14: android.opengl.EGLDisplay EGL_NO_DISPLAY>;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay> = $r5;

        $r6 = <android.opengl.EGL14: android.opengl.EGLContext EGL_NO_CONTEXT>;

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext> = $r6;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void clearState()>();

        return;
    }

    private void makeCurrent(android.opengl.EGLSurface)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.opengl.EGLSurface r1;
        android.opengl.EGLContext $r2;
        android.opengl.EGLDisplay $r3;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: android.opengl.EGLSurface;

        $r3 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLContext mEGLContext>;

        staticinvoke <android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>($r3, r1, r1, $r2);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("makeCurrent");

        return;
    }

    private boolean swapBuffers(android.opengl.EGLSurface)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.opengl.EGLSurface r1;
        boolean z0;
        android.opengl.EGLDisplay $r2;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: android.opengl.EGLSurface;

        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.opengl.EGLDisplay mEGLDisplay>;

        z0 = staticinvoke <android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>($r2, r1);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkEglError(java.lang.String)>("swapBuffers");

        return z0;
    }

    private void checkEglError(java.lang.String)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.lang.String r1, $r6, $r8;
        int i0, $i1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.lang.String;

        $i1 = staticinvoke <android.opengl.EGL14: int eglGetError()>();

        i0 = $i1;

        if $i1 == 12288 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": EGL error: 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return;
    }

    private void checkGlError(java.lang.String)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.lang.String r1, $r6, $r8;
        int i0, $i1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.lang.String;

        $i1 = staticinvoke <android.opengl.GLES20: int glGetError()>();

        i0 = $i1;

        if $i1 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": GLES20 error: 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label1:
        return;
    }

    private void dumpGlTiming()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.io.File r1, $r7, $r8;
        java.lang.StringBuilder r2, $r9;
        android.text.format.Time r3, $r14;
        java.util.Iterator r4, r37;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r5, r38;
        android.hardware.camera2.legacy.PerfMeasurement $r6, $r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r10, $r11, $r16, $r24, $r27, $r34, $r36;
        java.util.List $r17, $r19;
        java.lang.Object $r23, $r30;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r25, $r31;
        java.lang.Integer $r26, $r29, $r32, $r35;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r6 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        if $r6 != null goto label1;

        return;

     label1:
        $r7 = new java.io.File;

        $r8 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "CameraLegacy");

        r1 = $r7;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $z3 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z3 != 0 goto label2;

        $r36 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r36, "Failed to create directory for data dump");

        return;

     label2:
        $r9 = new java.lang.StringBuilder;

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        r2 = $r9;

        $r11 = <java.io.File: java.lang.String separator>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("durations_");

        $r14 = new android.text.format.Time;

        specialinvoke $r14.<android.text.format.Time: void <init>()>();

        r3 = $r14;

        virtualinvoke r3.<android.text.format.Time: void setToNow()>();

        $r16 = virtualinvoke r3.<android.text.format.Time: java.lang.String format2445()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_S");

        $r17 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        r4 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r30 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r30;

        $r31 = newarray (java.lang.Object)[2];

        $i2 = r5.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r31[0] = $r32;

        $i3 = r5.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r31[1] = $r35;

        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("_%d_%d", $r31);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        goto label3;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_C");

        $r19 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        r37 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r23 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r23;

        $r25 = newarray (java.lang.Object)[2];

        $i0 = r38.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r25[0] = $r26;

        $i1 = r38.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r25[1] = $r29;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("_%d_%d", $r25);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        goto label5;

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        $r21 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        $r24 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<android.hardware.camera2.legacy.PerfMeasurement: void dumpPerformanceData(java.lang.String)>($r24);

        return;
    }

    private void setupGlTiming()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        boolean $z0;
        java.lang.String $r1, $r2;
        android.hardware.camera2.legacy.PerfMeasurement $r3;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $z0 = staticinvoke <android.hardware.camera2.legacy.PerfMeasurement: boolean isGlTimingSupported()>();

        if $z0 == 0 goto label1;

        $r2 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Enabling GL performance measurement");

        $r3 = new android.hardware.camera2.legacy.PerfMeasurement;

        specialinvoke $r3.<android.hardware.camera2.legacy.PerfMeasurement: void <init>()>();

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer> = $r3;

        goto label2;

     label1:
        $r1 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, "GL performance measurement not supported on this device");

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer> = null;

     label2:
        return;
    }

    private void beginGlTiming()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.hardware.camera2.legacy.PerfMeasurement $r1, $r2;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        virtualinvoke $r2.<android.hardware.camera2.legacy.PerfMeasurement: void startTimer()>();

        return;
    }

    private void addGlTimestamp(long)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        long l0;
        android.hardware.camera2.legacy.PerfMeasurement $r1, $r2;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        l0 := @parameter0: long;

        $r1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        virtualinvoke $r2.<android.hardware.camera2.legacy.PerfMeasurement: void addTimestamp(long)>(l0);

        return;
    }

    private void endGlTiming()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.hardware.camera2.legacy.PerfMeasurement $r1, $r2;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.hardware.camera2.legacy.PerfMeasurement mPerfMeasurer>;

        virtualinvoke $r2.<android.hardware.camera2.legacy.PerfMeasurement: void stopTimer()>();

        return;
    }

    public android.graphics.SurfaceTexture getSurfaceTexture()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r1 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        return $r1;
    }

    public void configureSurfaces(java.util.Collection)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        android.view.Surface r3;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r4, $r12, $r15, $r21, $r23, r26;
        java.lang.String $r5, $r25;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        java.util.List $r6, $r7, $r8, $r10, $r14, $r17, $r18, $r20, $r22;
        java.lang.Object $r9, $r16, $r19;
        android.opengl.EGLSurface $r11;
        android.graphics.SurfaceTexture $r13;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException $r24, r27;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void releaseEGLContext()>();

        if r1 == null goto label01;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i1 != 0 goto label02;

     label01:
        $r5 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "No output surfaces configured for GL drawing.");

        return;

     label02:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.Surface) $r19;

     label04:
        $z2 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: boolean needsConversion(android.view.Surface)>(r3);

        if $z2 == 0 goto label05;

        staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: void setSurfaceFormat(android.view.Surface,int)>(r3, 842094169);

        $r23 = new android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder;

        specialinvoke $r23.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: void <init>(android.hardware.camera2.legacy.SurfaceTextureRenderer,android.hardware.camera2.legacy.SurfaceTextureRenderer$1)>(r0, null);

        r4 = $r23;

        r4.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface> = r3;

        $r22 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label06;

     label05:
        $r21 = new android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder;

        specialinvoke $r21.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: void <init>(android.hardware.camera2.legacy.SurfaceTextureRenderer,android.hardware.camera2.legacy.SurfaceTextureRenderer$1)>(r0, null);

        r26 = $r21;

        r26.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface> = r3;

        $r20 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r26);

     label06:
        goto label08;

     label07:
        $r24 := @caughtexception;

        r27 = $r24;

        $r25 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r25, "Surface abandoned, skipping configuration... ", r27);

     label08:
        goto label03;

     label09:
        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureEGLContext()>();

        $r6 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 <= 0 goto label10;

        $r17 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureEGLOutputSurfaces(java.util.Collection)>($r17);

     label10:
        $r7 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i3 <= 0 goto label11;

        $r18 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureEGLPbufferSurfaces(java.util.Collection)>($r18);

     label11:
        $r8 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        $i4 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i4 <= 0 goto label12;

        $r14 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r16;

        $r11 = $r15.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        goto label13;

     label12:
        $r10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        $r9 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r9;

        $r11 = $r12.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

     label13:
        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void makeCurrent(android.opengl.EGLSurface)>($r11);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void initializeGLState()>();

        $r13 = new android.graphics.SurfaceTexture;

        $i5 = specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: int getTextureId()>();

        specialinvoke $r13.<android.graphics.SurfaceTexture: void <init>(int)>($i5);

        r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture> = $r13;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.camera.legacy_perf", 0);

        if $z1 == 0 goto label14;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void setupGlTiming()>();

     label14:
        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label04 to label06 with label07;
    }

    public void drawIntoSurfaces(android.hardware.camera2.legacy.CaptureCollector)
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        android.hardware.camera2.legacy.CaptureCollector r1;
        boolean z0, $z1, $z2, $z3, $z5, $z7;
        long l0, $l6, $l12;
        android.util.Pair r2;
        android.hardware.camera2.legacy.RequestHolder r3;
        java.util.Collection r4;
        java.util.List r5, $r9, $r10, $r11, $r15, $r16, $r45;
        java.util.Iterator r6, r48;
        android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder r7, r49;
        android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException r8, $r42, $r47, r50;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, i18;
        android.graphics.SurfaceTexture $r12, $r13, $r23, $r38;
        java.lang.Object $r14, $r17, $r28, $r35, $r36;
        android.opengl.EGLSurface $r19, $r32, $r33, $r39;
        android.view.Surface $r20, $r24, $r27, $r30, $r34, $r37, $r41;
        java.nio.ByteBuffer $r21, $r25, $r31;
        java.lang.Long $r26, $r40;
        byte[] $r29;
        java.lang.String $r43, $r44, $r46;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        r1 := @parameter0: android.hardware.camera2.legacy.CaptureCollector;

        $r9 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        if $r9 == null goto label01;

        $r45 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        $i14 = interfaceinvoke $r45.<java.util.List: int size()>();

        if $i14 != 0 goto label03;

     label01:
        $r10 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        if $r10 == null goto label02;

        $r11 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i1 != 0 goto label03;

     label02:
        return;

     label03:
        z0 = virtualinvoke r1.<android.hardware.camera2.legacy.CaptureCollector: boolean hasPendingPreviewCaptures()>();

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("before updateTexImage");

        if z0 == 0 goto label04;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void beginGlTiming()>();

     label04:
        $r12 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r12.<android.graphics.SurfaceTexture: void updateTexImage()>();

        $r13 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        l0 = virtualinvoke $r13.<android.graphics.SurfaceTexture: long getTimestamp()>();

        r2 = virtualinvoke r1.<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair previewCaptured(long)>(l0);

        if r2 != null goto label07;

        $z7 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean DEBUG>;

        if $z7 == 0 goto label05;

        $r44 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r44, "Dropping preview frame.");

     label05:
        if z0 == 0 goto label06;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void endGlTiming()>();

     label06:
        return;

     label07:
        $r14 = r2.<android.util.Pair: java.lang.Object first>;

        r3 = (android.hardware.camera2.legacy.RequestHolder) $r14;

        r4 = virtualinvoke r3.<android.hardware.camera2.legacy.RequestHolder: java.util.Collection getHolderTargets()>();

        if z0 == 0 goto label08;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void addGlTimestamp(long)>(l0);

     label08:
        r5 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: java.util.List getSurfaceIds(java.util.Collection)>(r4);

        $r15 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mSurfaces>;

        r6 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r35 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r35;

        $r34 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $z5 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: boolean containsSurfaceId(android.view.Surface,java.util.Collection)>($r34, r5);

        if $z5 == 0 goto label13;

        $r33 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void makeCurrent(android.opengl.EGLSurface)>($r33);

     label10:
        $r37 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $i9 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $i10 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: void setSurfaceDimens(android.view.Surface,int,int)>($r37, $i9, $i10);

        $r41 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $r36 = r2.<android.util.Pair: java.lang.Object second>;

        $r40 = (java.lang.Long) $r36;

        $l12 = virtualinvoke $r40.<java.lang.Long: long longValue()>();

        staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: void setNextTimestamp(android.view.Surface,long)>($r41, $l12);

        $r38 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        $i11 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $i13 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawFrame(android.graphics.SurfaceTexture,int,int)>($r38, $i11, $i13);

        $r39 = r7.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean swapBuffers(android.opengl.EGLSurface)>($r39);

     label11:
        goto label13;

     label12:
        $r42 := @caughtexception;

        r8 = $r42;

        $r43 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r43, "Surface abandoned, dropping frame. ", r8);

     label13:
        goto label09;

     label14:
        $r16 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.util.List mConversionSurfaces>;

        r48 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r17 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder) $r17;

        $r20 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $z3 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: boolean containsSurfaceId(android.view.Surface,java.util.Collection)>($r20, r5);

        if $z3 == 0 goto label19;

        $r19 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void makeCurrent(android.opengl.EGLSurface)>($r19);

        $r23 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture mSurfaceTexture>;

        $i3 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $i2 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawFrame(android.graphics.SurfaceTexture,int,int)>($r23, $i3, $i2);

        $r21 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.ByteBuffer mPBufferPixels>;

        virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $i4 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $i5 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        $r25 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.ByteBuffer mPBufferPixels>;

        staticinvoke <android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>(0, 0, $i4, $i5, 6408, 5121, $r25);

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void checkGlError(java.lang.String)>("glReadPixels");

     label16:
        $r24 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        i18 = staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceType(android.view.Surface)>($r24);

        $r27 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $r28 = r2.<android.util.Pair: java.lang.Object second>;

        $r26 = (java.lang.Long) $r28;

        $l6 = virtualinvoke $r26.<java.lang.Long: long longValue()>();

        staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: void setNextTimestamp(android.view.Surface,long)>($r27, $l6);

        $r30 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.view.Surface surface>;

        $r31 = r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: java.nio.ByteBuffer mPBufferPixels>;

        $r29 = virtualinvoke $r31.<java.nio.ByteBuffer: byte[] array()>();

        $i7 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int width>;

        $i8 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: int height>;

        staticinvoke <android.hardware.camera2.legacy.LegacyCameraDevice: void produceFrame(android.view.Surface,byte[],int,int,int)>($r30, $r29, $i7, $i8, i18);

        $r32 = r49.<android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder: android.opengl.EGLSurface eglSurface>;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean swapBuffers(android.opengl.EGLSurface)>($r32);

     label17:
        goto label19;

     label18:
        $r47 := @caughtexception;

        r50 = $r47;

        $r46 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r46, "Surface abandoned, dropping frame. ", r50);

     label19:
        goto label15;

     label20:
        virtualinvoke r1.<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder previewProduced()>();

        if z0 == 0 goto label21;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void endGlTiming()>();

     label21:
        return;

        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label10 to label11 with label12;
        catch android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException from label16 to label17 with label18;
    }

    public void cleanupEGLContext()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        specialinvoke r0.<android.hardware.camera2.legacy.SurfaceTextureRenderer: void releaseEGLContext()>();

        return;
    }

    public void flush()
    {
        android.hardware.camera2.legacy.SurfaceTextureRenderer r0;
        java.lang.String $r1;

        r0 := @this: android.hardware.camera2.legacy.SurfaceTextureRenderer;

        $r1 = <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "Flush not yet implemented.");

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        boolean $z0;
        float[] $r2, $r3;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String LEGACY_PERF_PROPERTY> = "persist.camera.legacy_perf";

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String FRAGMENT_SHADER> = "#extension GL_OES_EGL_image_external : require\nprecision mediump float;\nvarying vec2 vTextureCoord;\nuniform samplerExternalOES sTexture;\nvoid main() {\n  gl_FragColor = texture2D(sTexture, vTextureCoord);\n}\n";

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String VERTEX_SHADER> = "uniform mat4 uMVPMatrix;\nuniform mat4 uSTMatrix;\nattribute vec4 aPosition;\nattribute vec4 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n  gl_Position = uMVPMatrix * aPosition;\n  vTextureCoord = (uSTMatrix * aTextureCoord).xy;\n}\n";

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int TRIANGLE_VERTICES_DATA_UV_OFFSET> = 3;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int TRIANGLE_VERTICES_DATA_POS_OFFSET> = 0;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int TRIANGLE_VERTICES_DATA_STRIDE_BYTES> = 20;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int FLOAT_SIZE_BYTES> = 4;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int PBUFFER_PIXEL_BYTES> = 4;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int GLES_VERSION> = 2;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int EGL_COLOR_BITLENGTH> = 8;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int VERTEX_UV_SIZE> = 2;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int VERTEX_POS_SIZE> = 3;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int GL_MATRIX_SIZE> = 16;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: int EGL_RECORDABLE_ANDROID> = 12610;

        $r0 = class "android/hardware/camera2/legacy/SurfaceTextureRenderer";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: java.lang.String TAG> = $r1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("HAL1ShimLogging", 3);

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: boolean DEBUG> = $z0;

        $r2 = newarray (float)[20];

        $r2[0] = -1.0F;

        $r2[1] = -1.0F;

        $r2[2] = 0.0F;

        $r2[3] = 1.0F;

        $r2[4] = 0.0F;

        $r2[5] = 1.0F;

        $r2[6] = -1.0F;

        $r2[7] = 0.0F;

        $r2[8] = 0.0F;

        $r2[9] = 0.0F;

        $r2[10] = -1.0F;

        $r2[11] = 1.0F;

        $r2[12] = 0.0F;

        $r2[13] = 1.0F;

        $r2[14] = 1.0F;

        $r2[15] = 1.0F;

        $r2[16] = 1.0F;

        $r2[17] = 0.0F;

        $r2[18] = 0.0F;

        $r2[19] = 1.0F;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sFrontCameraTriangleVertices> = $r2;

        $r3 = newarray (float)[20];

        $r3[0] = -1.0F;

        $r3[1] = -1.0F;

        $r3[2] = 0.0F;

        $r3[3] = 0.0F;

        $r3[4] = 0.0F;

        $r3[5] = 1.0F;

        $r3[6] = -1.0F;

        $r3[7] = 0.0F;

        $r3[8] = 1.0F;

        $r3[9] = 0.0F;

        $r3[10] = -1.0F;

        $r3[11] = 1.0F;

        $r3[12] = 0.0F;

        $r3[13] = 0.0F;

        $r3[14] = 1.0F;

        $r3[15] = 1.0F;

        $r3[16] = 1.0F;

        $r3[17] = 0.0F;

        $r3[18] = 1.0F;

        $r3[19] = 1.0F;

        <android.hardware.camera2.legacy.SurfaceTextureRenderer: float[] sBackCameraTriangleVertices> = $r3;

        return;
    }
}
