public final class android.media.session.MediaController$TransportControls extends java.lang.Object
{
    private static final java.lang.String TAG;
    final android.media.session.MediaController this$0;

    private void <init>(android.media.session.MediaController)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController r1;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.MediaController;

        r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void play()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void play()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling play.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromMediaId(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        java.lang.String r1, $r12;
        android.os.Bundle r2;
        android.os.RemoteException r3, $r7;
        boolean $z0;
        android.media.session.MediaController $r4;
        android.media.session.ISessionController $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify a non-empty String for playFromMediaId.");

        throw $r6;

     label1:
        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r4);

        interfaceinvoke $r5.<android.media.session.ISessionController: void playFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling play(");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r12, r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void playFromSearch(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        java.lang.String r1, $r11;
        android.os.Bundle r2;
        android.os.RemoteException r3, $r6;
        android.media.session.MediaController $r4;
        android.media.session.ISessionController $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        r1 = "";

     label1:
        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r4);

        interfaceinvoke $r5.<android.media.session.ISessionController: void playFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling play(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r11, r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToQueueItem(long)
    {
        android.media.session.MediaController$TransportControls r0;
        long l0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.media.session.MediaController$TransportControls;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void skipToQueueItem(long)>(l0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error calling skipToItem(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", $r9, r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void pause()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void pause()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling pause.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stop()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void stop()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling stop.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void seekTo(long)
    {
        android.media.session.MediaController$TransportControls r0;
        long l0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void seekTo(long)>(l0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling seekTo.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void fastForward()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void fastForward()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling fastForward.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToNext()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void next()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling next.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void rewind()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void rewind()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling rewind.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void skipToPrevious()
    {
        android.media.session.MediaController$TransportControls r0;
        android.os.RemoteException r1, $r4;
        android.media.session.MediaController $r2;
        android.media.session.ISessionController $r3;

        r0 := @this: android.media.session.MediaController$TransportControls;

     label1:
        $r2 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r3 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r2);

        interfaceinvoke $r3.<android.media.session.ISessionController: void previous()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling previous.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRating(android.media.Rating)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.Rating r1;
        android.os.RemoteException r2, $r5;
        android.media.session.MediaController $r3;
        android.media.session.ISessionController $r4;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.Rating;

     label1:
        $r3 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r4 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r3);

        interfaceinvoke $r4.<android.media.session.ISessionController: void rate(android.media.Rating)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Error calling rate.", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendCustomAction(android.media.session.PlaybackState$CustomAction, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.PlaybackState$CustomAction r1;
        android.os.Bundle r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.PlaybackState$CustomAction;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CustomAction cannot be null.");

        throw $r4;

     label1:
        $r3 = virtualinvoke r1.<android.media.session.PlaybackState$CustomAction: java.lang.String getAction()>();

        virtualinvoke r0.<android.media.session.MediaController$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>($r3, r2);

        return;
    }

    public void sendCustomAction(java.lang.String, android.os.Bundle)
    {
        android.media.session.MediaController$TransportControls r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.RemoteException r3, $r7;
        boolean $z0;
        android.media.session.MediaController $r4;
        android.media.session.ISessionController $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CustomAction cannot be null.");

        throw $r6;

     label1:
        $r4 = r0.<android.media.session.MediaController$TransportControls: android.media.session.MediaController this$0>;

        $r5 = staticinvoke <android.media.session.MediaController: android.media.session.ISessionController access$200(android.media.session.MediaController)>($r4);

        interfaceinvoke $r5.<android.media.session.ISessionController: void sendCustomAction(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TransportController", "Dead object in sendCustomAction.", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void <init>(android.media.session.MediaController, android.media.session.MediaController$1)
    {
        android.media.session.MediaController$TransportControls r0;
        android.media.session.MediaController r1;
        android.media.session.MediaController$1 r2;

        r0 := @this: android.media.session.MediaController$TransportControls;

        r1 := @parameter0: android.media.session.MediaController;

        r2 := @parameter1: android.media.session.MediaController$1;

        specialinvoke r0.<android.media.session.MediaController$TransportControls: void <init>(android.media.session.MediaController)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.media.session.MediaController$TransportControls: java.lang.String TAG> = "TransportController";

        return;
    }
}
