class android.gesture.Instance extends java.lang.Object
{
    private static final int SEQUENCE_SAMPLE_SIZE;
    private static final int PATCH_SAMPLE_SIZE;
    private static final float[] ORIENTATIONS;
    final float[] vector;
    final java.lang.String label;
    final long id;

    private void <init>(long, float[], java.lang.String)
    {
        android.gesture.Instance r0;
        long l0;
        float[] r1;
        java.lang.String r2;

        r0 := @this: android.gesture.Instance;

        l0 := @parameter0: long;

        r1 := @parameter1: float[];

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.gesture.Instance: long id> = l0;

        r0.<android.gesture.Instance: float[] vector> = r1;

        r0.<android.gesture.Instance: java.lang.String label> = r2;

        return;
    }

    private void normalize()
    {
        android.gesture.Instance r0;
        float[] r1;
        float f0, $f1, $f2, $f3, $f4, $f5, f6;
        int i0, i1, i2;
        double $d0, $d1;

        r0 := @this: android.gesture.Instance;

        r1 = r0.<android.gesture.Instance: float[] vector>;

        f0 = 0.0F;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f4 = r1[i1];

        $f3 = r1[i1];

        $f5 = $f4 * $f3;

        f0 = f0 + $f5;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f6 = (float) $d1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $f1 = r1[i2];

        $f2 = $f1 / f6;

        r1[i2] = $f2;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    static android.gesture.Instance createInstance(int, int, android.gesture.Gesture, java.lang.String)
    {
        int i0, i1;
        android.gesture.Gesture r0;
        java.lang.String r1;
        float[] r2, r6;
        android.gesture.Instance r3, $r4, $r5;
        long $l2, $l3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.gesture.Gesture;

        r1 := @parameter3: java.lang.String;

        if i0 != 2 goto label1;

        r2 = staticinvoke <android.gesture.Instance: float[] temporalSampler(int,android.gesture.Gesture)>(i1, r0);

        $r5 = new android.gesture.Instance;

        $l3 = virtualinvoke r0.<android.gesture.Gesture: long getID()>();

        specialinvoke $r5.<android.gesture.Instance: void <init>(long,float[],java.lang.String)>($l3, r2, r1);

        r3 = $r5;

        specialinvoke r3.<android.gesture.Instance: void normalize()>();

        goto label2;

     label1:
        r6 = staticinvoke <android.gesture.Instance: float[] spatialSampler(android.gesture.Gesture)>(r0);

        $r4 = new android.gesture.Instance;

        $l2 = virtualinvoke r0.<android.gesture.Gesture: long getID()>();

        specialinvoke $r4.<android.gesture.Instance: void <init>(long,float[],java.lang.String)>($l2, r6, r1);

        r3 = $r4;

     label2:
        return r3;
    }

    private static float[] spatialSampler(android.gesture.Gesture)
    {
        android.gesture.Gesture r0;
        float[] $r1;

        r0 := @parameter0: android.gesture.Gesture;

        $r1 = staticinvoke <android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>(r0, 16, 0);

        return $r1;
    }

    private static float[] temporalSampler(int, android.gesture.Gesture)
    {
        int i0, i1, i2;
        android.gesture.Gesture r0;
        float[] r1, r2, $r7, $r9;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        android.gesture.GestureStroke $r5;
        double $d0, $d1, $d2;
        byte $b3;

        i0 := @parameter0: int;

        r0 := @parameter1: android.gesture.Gesture;

        $r3 = virtualinvoke r0.<android.gesture.Gesture: java.util.ArrayList getStrokes()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r5 = (android.gesture.GestureStroke) $r4;

        r1 = staticinvoke <android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>($r5, 16);

        r2 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r1);

        $f4 = r1[1];

        $f3 = r2[1];

        $f6 = $f4 - $f3;

        $d0 = (double) $f6;

        $f8 = r1[0];

        $f5 = r2[0];

        $f7 = $f8 - $f5;

        $d1 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        f0 = (float) $d2;

        f1 = neg f0;

        if i0 == 1 goto label3;

        $r7 = <android.gesture.Instance: float[] ORIENTATIONS>;

        i1 = lengthof $r7;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r9 = <android.gesture.Instance: float[] ORIENTATIONS>;

        $f13 = $r9[i2];

        f2 = $f13 - f0;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>(f2);

        $f15 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $b3 = $f14 cmpg $f15;

        if $b3 >= 0 goto label2;

        f1 = f2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $f9 = r2[0];

        $f12 = neg $f9;

        $f11 = r2[1];

        $f10 = neg $f11;

        staticinvoke <android.gesture.GestureUtils: float[] translate(float[],float,float)>(r1, $f12, $f10);

        staticinvoke <android.gesture.GestureUtils: float[] rotate(float[],float)>(r1, f1);

        return r1;
    }

    static void <clinit>()
    {
        float[] $r0;

        <android.gesture.Instance: int PATCH_SAMPLE_SIZE> = 16;

        <android.gesture.Instance: int SEQUENCE_SAMPLE_SIZE> = 16;

        $r0 = newarray (float)[10];

        $r0[0] = 0.0F;

        $r0[1] = 0.7853982F;

        $r0[2] = 1.5707964F;

        $r0[3] = 2.3561945F;

        $r0[4] = 3.1415927F;

        $r0[5] = 0.0F;

        $r0[6] = -0.7853982F;

        $r0[7] = -1.5707964F;

        $r0[8] = -2.3561945F;

        $r0[9] = -3.1415927F;

        <android.gesture.Instance: float[] ORIENTATIONS> = $r0;

        return;
    }
}
