public class android.renderscript.Mesh$TriangleMeshBuilder extends java.lang.Object
{
    float[] mVtxData;
    int mVtxCount;
    int mMaxIndex;
    short[] mIndexData;
    int mIndexCount;
    android.renderscript.RenderScript mRS;
    android.renderscript.Element mElement;
    float mNX;
    float mNY;
    float mNZ;
    float mS0;
    float mT0;
    float mR;
    float mG;
    float mB;
    float mA;
    int mVtxSize;
    int mFlags;
    public static final int COLOR;
    public static final int NORMAL;
    public static final int TEXTURE_0;

    public void <init>(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        android.renderscript.RenderScript r1;
        int i0, i1;
        float[] $r2;
        short[] $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = -1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = 0;

        $r2 = newarray (float)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = $r2;

        $r3 = newarray (short)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = $r3;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize> = i0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags> = i1;

        if i0 < 2 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Vertex size out of range.");

        throw $r4;

     label2:
        return;
    }

    private void makeSpace(int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i3 = $i1 + i0;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i2 = lengthof $r2;

        if $i3 < $i2 goto label1;

        $r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i4 = lengthof $r3;

        $i5 = $i4 * 2;

        r1 = newarray (float)[$i5];

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i6 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(float[],int,float[],int,int)>($r5, 0, r1, 0, $i6);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = r1;

     label1:
        return;
    }

    private void latch()
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        $r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i20 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i21 = $i20 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i21;

        $f5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR>;

        $r7[$i20] = $f5;

        $r8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i22 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i23 = $i22 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i23;

        $f6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG>;

        $r8[$i22] = $f6;

        $r9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i24 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i25 = $i24 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i25;

        $f7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB>;

        $r9[$i24] = $f7;

        $r10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i26 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i27 = $i26 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i27;

        $f8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA>;

        $r10[$i26] = $f8;

     label1:
        $i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i3 = $i2 & 256;

        if $i3 == 0 goto label2;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i17 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i16 = $i17 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i16;

        $f3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0>;

        $r5[$i17] = $f3;

        $r6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i19 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i18 = $i19 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i18;

        $f4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0>;

        $r6[$i19] = $f4;

     label2:
        $i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label3;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        $r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i9 = $i8 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i9;

        $f0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX>;

        $r1[$i8] = $f0;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i11 = $i10 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i11;

        $f1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY>;

        $r2[$i10] = $f1;

        $r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i12 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i13 = $i12 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i13;

        $f2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ>;

        $r3[$i12] = $f2;

        $r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i14 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i15 = $i14 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i15;

        $r4[$i14] = 0.0F;

     label3:
        $i6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $i7 = $i6 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = $i7;

        return;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        int $i0, $i1, $i2, $i3, $i4;
        float[] $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i0 == 2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r3;

     label1:
        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        $r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i2;

        $r1[$i1] = f0;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i4 = $i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i4;

        $r2[$i3] = f1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float[] $r1, $r2, $r3, $r5;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i0 == 3 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r4;

     label1:
        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        $r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i2;

        $r1[$i1] = f0;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i4 = $i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i4;

        $r2[$i3] = f1;

        $r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i6 = $i5 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i6;

        $r3[$i5] = f2;

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i8 = $i7 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i8;

        $r5[$i7] = 1.0F;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setTexture(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 256;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = f1;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setNormal(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = f2;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setColor(float, float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2, f3;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = f2;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = f3;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addTriangle(int, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i16, $i18, $i19, $i20;
        short[] r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.IllegalStateException $r2;
        short $s12, $s15, $s17;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i0 >= $i3 goto label1;

        if i0 < 0 goto label1;

        $i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i1 >= $i4 goto label1;

        if i1 < 0 goto label1;

        $i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i2 >= $i5 goto label1;

        if i2 >= 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Index provided greater than vertex count.");

        throw $r2;

     label2:
        $i6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i8 = $i6 + 3;

        $r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i7 = lengthof $r3;

        if $i8 < $i7 goto label3;

        $r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i19 = lengthof $r7;

        $i18 = $i19 * 2;

        r1 = newarray (short)[$i18];

        $r9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $r8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i20 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(short[],int,short[],int,int)>($r9, 0, r1, 0, $i20);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = r1;

     label3:
        $r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i10 = $i9 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i10;

        $s12 = (short) i0;

        $r4[$i9] = $s12;

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i13 = $i11 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i13;

        $s15 = (short) i1;

        $r5[$i11] = $s15;

        $r6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i14 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i16 = $i14 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i16;

        $s17 = (short) i2;

        $r6[$i14] = $s17;

        return r0;
    }

    public android.renderscript.Mesh create(boolean)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        boolean z0;
        android.renderscript.Element$Builder r1, $r4;
        byte b0;
        android.renderscript.Mesh$Builder r2, $r12;
        android.renderscript.Mesh r3;
        android.renderscript.RenderScript $r5, $r7, $r11, $r14, $r24, $r26, $r33;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.renderscript.Element$DataType $r6;
        android.renderscript.Element $r8, $r10, $r13, $r17, $r27, $r28, $r30;
        android.renderscript.Mesh$Primitive $r16;
        android.renderscript.Allocation $r19, $r20, $r23, $r25;
        short[] $r21;
        float[] $r22;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        z0 := @parameter0: boolean;

        $r4 = new android.renderscript.Element$Builder;

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r4.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>($r5);

        r1 = $r4;

        $r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r6 = <android.renderscript.Element$DataType: android.renderscript.Element$DataType FLOAT_32>;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element$DataType,int)>($r7, $r6, $i1);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r8, "position");

        $i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $r33 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r30 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r33);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r30, "color");

     label1:
        $i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i6 = $i4 & 256;

        if $i6 == 0 goto label2;

        $r26 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r27 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r26);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r27, "texture0");

     label2:
        $i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i7 = $i5 & 2;

        if $i7 == 0 goto label3;

        $r24 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r28 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r24);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r28, "normal");

     label3:
        $r10 = virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement> = $r10;

        b0 = 1;

        if z0 == 0 goto label4;

        b0 = b0 | 4;

     label4:
        $r12 = new android.renderscript.Mesh$Builder;

        $r11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r12.<android.renderscript.Mesh$Builder: void <init>(android.renderscript.RenderScript,int)>($r11, b0);

        r2 = $r12;

        $r13 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement>;

        $i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addVertexType(android.renderscript.Element,int)>($r13, $i8);

        $r14 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r17 = staticinvoke <android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>($r14);

        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r16 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE>;

        virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh$Primitive)>($r17, $i9, $r16);

        r3 = virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh create()>();

        $r19 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        $i10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $r22 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        virtualinvoke $r19.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>(0, $i10, $r22);

        if z0 == 0 goto label5;

        if z0 == 0 goto label5;

        $r23 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        virtualinvoke $r23.<android.renderscript.Allocation: void syncAll(int)>(1);

     label5:
        $r20 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        $i11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r21 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        virtualinvoke $r20.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>(0, $i11, $r21);

        if z0 == 0 goto label6;

        $r25 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        virtualinvoke $r25.<android.renderscript.Allocation: void syncAll(int)>(1);

     label6:
        return r3;
    }

    public static void <clinit>()
    {
        <android.renderscript.Mesh$TriangleMeshBuilder: int TEXTURE_0> = 256;

        <android.renderscript.Mesh$TriangleMeshBuilder: int NORMAL> = 2;

        <android.renderscript.Mesh$TriangleMeshBuilder: int COLOR> = 1;

        return;
    }
}
