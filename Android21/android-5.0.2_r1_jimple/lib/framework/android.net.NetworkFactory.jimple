public class android.net.NetworkFactory extends android.os.Handler
{
    private static final boolean DBG;
    private static final boolean VDBG;
    private static final int BASE;
    public static final int CMD_REQUEST_NETWORK;
    public static final int CMD_CANCEL_REQUEST;
    private static final int CMD_SET_SCORE;
    private static final int CMD_SET_FILTER;
    private final android.content.Context mContext;
    private final java.lang.String LOG_TAG;
    private final android.util.SparseArray mNetworkRequests;
    private int mScore;
    private android.net.NetworkCapabilities mCapabilityFilter;
    private int mRefCount;
    private android.os.Messenger mMessenger;

    public void <init>(android.os.Looper, android.content.Context, java.lang.String, android.net.NetworkCapabilities)
    {
        android.net.NetworkFactory r0;
        android.os.Looper r1;
        android.content.Context r2;
        java.lang.String r3;
        android.net.NetworkCapabilities r4;
        android.util.SparseArray $r5;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.NetworkCapabilities;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests> = $r5;

        r0.<android.net.NetworkFactory: int mRefCount> = 0;

        r0.<android.net.NetworkFactory: android.os.Messenger mMessenger> = null;

        r0.<android.net.NetworkFactory: java.lang.String LOG_TAG> = r3;

        r0.<android.net.NetworkFactory: android.content.Context mContext> = r2;

        r0.<android.net.NetworkFactory: android.net.NetworkCapabilities mCapabilityFilter> = r4;

        return;
    }

    public void register()
    {
        android.net.NetworkFactory r0;
        android.os.Messenger $r1, $r2, $r6;
        android.content.Context $r3;
        android.net.ConnectivityManager $r4;
        java.lang.String $r5;

        r0 := @this: android.net.NetworkFactory;

        virtualinvoke r0.<android.net.NetworkFactory: void log(java.lang.String)>("Registering NetworkFactory");

        $r1 = r0.<android.net.NetworkFactory: android.os.Messenger mMessenger>;

        if $r1 != null goto label1;

        $r2 = new android.os.Messenger;

        specialinvoke $r2.<android.os.Messenger: void <init>(android.os.Handler)>(r0);

        r0.<android.net.NetworkFactory: android.os.Messenger mMessenger> = $r2;

        $r3 = r0.<android.net.NetworkFactory: android.content.Context mContext>;

        $r4 = staticinvoke <android.net.ConnectivityManager: android.net.ConnectivityManager 'from'(android.content.Context)>($r3);

        $r6 = r0.<android.net.NetworkFactory: android.os.Messenger mMessenger>;

        $r5 = r0.<android.net.NetworkFactory: java.lang.String LOG_TAG>;

        virtualinvoke $r4.<android.net.ConnectivityManager: void registerNetworkFactory(android.os.Messenger,java.lang.String)>($r6, $r5);

     label1:
        return;
    }

    public void unregister()
    {
        android.net.NetworkFactory r0;
        android.os.Messenger $r1, $r4;
        android.content.Context $r2;
        android.net.ConnectivityManager $r3;

        r0 := @this: android.net.NetworkFactory;

        virtualinvoke r0.<android.net.NetworkFactory: void log(java.lang.String)>("Unregistering NetworkFactory");

        $r1 = r0.<android.net.NetworkFactory: android.os.Messenger mMessenger>;

        if $r1 == null goto label1;

        $r2 = r0.<android.net.NetworkFactory: android.content.Context mContext>;

        $r3 = staticinvoke <android.net.ConnectivityManager: android.net.ConnectivityManager 'from'(android.content.Context)>($r2);

        $r4 = r0.<android.net.NetworkFactory: android.os.Messenger mMessenger>;

        virtualinvoke $r3.<android.net.ConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>($r4);

        r0.<android.net.NetworkFactory: android.os.Messenger mMessenger> = null;

     label1:
        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.net.NetworkFactory r0;
        android.os.Message r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2, $r4, $r6;
        android.net.NetworkRequest $r3, $r7;
        android.net.NetworkCapabilities $r5;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 536576: goto label1;
            case 536577: goto label2;
            case 536578: goto label3;
            case 536579: goto label4;
            default: goto label5;
        };

     label1:
        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.net.NetworkRequest) $r2;

        $i1 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<android.net.NetworkFactory: void handleAddRequest(android.net.NetworkRequest,int)>($r3, $i1);

        goto label5;

     label2:
        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        $r7 = (android.net.NetworkRequest) $r6;

        specialinvoke r0.<android.net.NetworkFactory: void handleRemoveRequest(android.net.NetworkRequest)>($r7);

        goto label5;

     label3:
        $i2 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<android.net.NetworkFactory: void handleSetScore(int)>($i2);

        goto label5;

     label4:
        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        $r5 = (android.net.NetworkCapabilities) $r4;

        specialinvoke r0.<android.net.NetworkFactory: void handleSetFilter(android.net.NetworkCapabilities)>($r5);

     label5:
        return;
    }

    private void handleAddRequest(android.net.NetworkRequest, int)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1, $r12;
        int i0, $i1, $i2;
        android.net.NetworkFactory$NetworkRequestInfo r2, $r11;
        android.util.SparseArray $r3, $r13;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        $r3 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $i1 = r1.<android.net.NetworkRequest: int requestId>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (android.net.NetworkFactory$NetworkRequestInfo) $r4;

        if r2 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got request ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with score ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.net.NetworkFactory: void log(java.lang.String)>($r10);

        $r11 = new android.net.NetworkFactory$NetworkRequestInfo;

        specialinvoke $r11.<android.net.NetworkFactory$NetworkRequestInfo: void <init>(android.net.NetworkFactory,android.net.NetworkRequest,int)>(r0, r1, i0);

        r2 = $r11;

        $r13 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $r12 = r2.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i2 = $r12.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r13.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r2);

        goto label2;

     label1:
        r2.<android.net.NetworkFactory$NetworkRequestInfo: int score> = i0;

     label2:
        specialinvoke r0.<android.net.NetworkFactory: void evalRequest(android.net.NetworkFactory$NetworkRequestInfo)>(r2);

        return;
    }

    private void handleRemoveRequest(android.net.NetworkRequest)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1, $r6;
        android.net.NetworkFactory$NetworkRequestInfo r2;
        int $i0, $i1;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        $r3 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $i0 = r1.<android.net.NetworkRequest: int requestId>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r2 = (android.net.NetworkFactory$NetworkRequestInfo) $r4;

        if r2 == null goto label1;

        $z0 = r2.<android.net.NetworkFactory$NetworkRequestInfo: boolean requested>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $i1 = r1.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>($i1);

        $r6 = r2.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r0.<android.net.NetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>($r6);

     label1:
        return;
    }

    private void handleSetScore(int)
    {
        android.net.NetworkFactory r0;
        int i0;

        r0 := @this: android.net.NetworkFactory;

        i0 := @parameter0: int;

        r0.<android.net.NetworkFactory: int mScore> = i0;

        specialinvoke r0.<android.net.NetworkFactory: void evalRequests()>();

        return;
    }

    private void handleSetFilter(android.net.NetworkCapabilities)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkCapabilities r1;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r0.<android.net.NetworkFactory: android.net.NetworkCapabilities mCapabilityFilter> = r1;

        specialinvoke r0.<android.net.NetworkFactory: void evalRequests()>();

        return;
    }

    public boolean acceptRequest(android.net.NetworkRequest, int)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        return 1;
    }

    private void evalRequest(android.net.NetworkFactory$NetworkRequestInfo)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkFactory$NetworkRequestInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.net.NetworkRequest $r2, $r3, $r6, $r8, $r10, $r11;
        android.net.NetworkCapabilities $r4, $r5, $r7, $r9;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkFactory$NetworkRequestInfo;

        $z0 = r1.<android.net.NetworkFactory$NetworkRequestInfo: boolean requested>;

        if $z0 != 0 goto label1;

        $i4 = r1.<android.net.NetworkFactory$NetworkRequestInfo: int score>;

        $i3 = r0.<android.net.NetworkFactory: int mScore>;

        if $i4 >= $i3 goto label1;

        $r8 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $r9 = $r8.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $r7 = r0.<android.net.NetworkFactory: android.net.NetworkCapabilities mCapabilityFilter>;

        $z4 = virtualinvoke $r9.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r7);

        if $z4 == 0 goto label1;

        $r10 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i5 = r1.<android.net.NetworkFactory$NetworkRequestInfo: int score>;

        $z5 = virtualinvoke r0.<android.net.NetworkFactory: boolean acceptRequest(android.net.NetworkRequest,int)>($r10, $i5);

        if $z5 == 0 goto label1;

        $r11 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i6 = r1.<android.net.NetworkFactory$NetworkRequestInfo: int score>;

        virtualinvoke r0.<android.net.NetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>($r11, $i6);

        r1.<android.net.NetworkFactory$NetworkRequestInfo: boolean requested> = 1;

        goto label3;

     label1:
        $z1 = r1.<android.net.NetworkFactory$NetworkRequestInfo: boolean requested>;

        if $z1 != 1 goto label3;

        $i1 = r1.<android.net.NetworkFactory$NetworkRequestInfo: int score>;

        $i0 = r0.<android.net.NetworkFactory: int mScore>;

        if $i1 > $i0 goto label2;

        $r3 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $r5 = $r3.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $r4 = r0.<android.net.NetworkFactory: android.net.NetworkCapabilities mCapabilityFilter>;

        $z2 = virtualinvoke $r5.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r4);

        if $z2 == 0 goto label2;

        $r6 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i2 = r1.<android.net.NetworkFactory$NetworkRequestInfo: int score>;

        $z3 = virtualinvoke r0.<android.net.NetworkFactory: boolean acceptRequest(android.net.NetworkRequest,int)>($r6, $i2);

        if $z3 != 0 goto label3;

     label2:
        $r2 = r1.<android.net.NetworkFactory$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r0.<android.net.NetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>($r2);

        r1.<android.net.NetworkFactory$NetworkRequestInfo: boolean requested> = 0;

     label3:
        return;
    }

    private void evalRequests()
    {
        android.net.NetworkFactory r0;
        int i0, $i1;
        android.net.NetworkFactory$NetworkRequestInfo r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.net.NetworkFactory;

        i0 = 0;

     label1:
        $r2 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label2;

        $r3 = r0.<android.net.NetworkFactory: android.util.SparseArray mNetworkRequests>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r1 = (android.net.NetworkFactory$NetworkRequestInfo) $r4;

        specialinvoke r0.<android.net.NetworkFactory: void evalRequest(android.net.NetworkFactory$NetworkRequestInfo)>(r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    protected void startNetwork()
    {
        android.net.NetworkFactory r0;

        r0 := @this: android.net.NetworkFactory;

        return;
    }

    protected void stopNetwork()
    {
        android.net.NetworkFactory r0;

        r0 := @this: android.net.NetworkFactory;

        return;
    }

    protected void needNetworkFor(android.net.NetworkRequest, int)
    {
        int $i0, i1, $i2;
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i1 := @parameter1: int;

        $i2 = r0.<android.net.NetworkFactory: int mRefCount>;

        $i0 = $i2 + 1;

        r0.<android.net.NetworkFactory: int mRefCount> = $i0;

        if $i0 != 1 goto label1;

        virtualinvoke r0.<android.net.NetworkFactory: void startNetwork()>();

     label1:
        return;
    }

    protected void releaseNetworkFor(android.net.NetworkRequest)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1;
        int $i0, $i1;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        $i0 = r0.<android.net.NetworkFactory: int mRefCount>;

        $i1 = $i0 - 1;

        r0.<android.net.NetworkFactory: int mRefCount> = $i1;

        if $i1 != 0 goto label1;

        virtualinvoke r0.<android.net.NetworkFactory: void stopNetwork()>();

     label1:
        return;
    }

    public void addNetworkRequest(android.net.NetworkRequest, int)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1;
        int i0;
        android.net.NetworkFactory$NetworkRequestInfo $r2;
        android.os.Message $r3;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        $r2 = new android.net.NetworkFactory$NetworkRequestInfo;

        specialinvoke $r2.<android.net.NetworkFactory$NetworkRequestInfo: void <init>(android.net.NetworkFactory,android.net.NetworkRequest,int)>(r0, r1, i0);

        $r3 = virtualinvoke r0.<android.net.NetworkFactory: android.os.Message obtainMessage(int,java.lang.Object)>(536576, $r2);

        virtualinvoke r0.<android.net.NetworkFactory: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void removeNetworkRequest(android.net.NetworkRequest)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkRequest r1;
        android.os.Message $r2;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkRequest;

        $r2 = virtualinvoke r0.<android.net.NetworkFactory: android.os.Message obtainMessage(int,java.lang.Object)>(536577, r1);

        virtualinvoke r0.<android.net.NetworkFactory: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public void setScoreFilter(int)
    {
        android.net.NetworkFactory r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: android.net.NetworkFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.net.NetworkFactory: android.os.Message obtainMessage(int,int,int)>(536578, i0, 0);

        virtualinvoke r0.<android.net.NetworkFactory: boolean sendMessage(android.os.Message)>($r1);

        return;
    }

    public void setCapabilityFilter(android.net.NetworkCapabilities)
    {
        android.net.NetworkFactory r0;
        android.net.NetworkCapabilities r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: android.net.NetworkCapabilities;

        $r2 = new android.net.NetworkCapabilities;

        specialinvoke $r2.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r1);

        $r3 = virtualinvoke r0.<android.net.NetworkFactory: android.os.Message obtainMessage(int,java.lang.Object)>(536579, $r2);

        virtualinvoke r0.<android.net.NetworkFactory: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    protected void log(java.lang.String)
    {
        android.net.NetworkFactory r0;
        java.lang.String r1, $r2;

        r0 := @this: android.net.NetworkFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.NetworkFactory: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    public static void <clinit>()
    {
        <android.net.NetworkFactory: int CMD_SET_FILTER> = 536579;

        <android.net.NetworkFactory: int CMD_SET_SCORE> = 536578;

        <android.net.NetworkFactory: int CMD_CANCEL_REQUEST> = 536577;

        <android.net.NetworkFactory: int CMD_REQUEST_NETWORK> = 536576;

        <android.net.NetworkFactory: int BASE> = 536576;

        <android.net.NetworkFactory: boolean VDBG> = 0;

        <android.net.NetworkFactory: boolean DBG> = 1;

        return;
    }
}
