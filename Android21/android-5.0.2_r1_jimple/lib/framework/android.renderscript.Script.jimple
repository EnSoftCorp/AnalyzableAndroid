public class android.renderscript.Script extends android.renderscript.BaseObj
{
    private final android.util.SparseArray mKIDs;
    private final android.util.SparseArray mFIDs;

    protected android.renderscript.Script$KernelID createKernelID(int, int, android.renderscript.Element, android.renderscript.Element)
    {
        android.renderscript.Script r0;
        int i0, i1;
        android.renderscript.Element r1, r2;
        android.renderscript.Script$KernelID r3, $r8, r12;
        long l2, $l3;
        android.util.SparseArray $r4, $r9;
        java.lang.Object $r5;
        android.renderscript.RenderScript $r6, $r7, $r10;
        byte $b4;
        android.renderscript.RSDriverException $r11;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.renderscript.Element;

        r2 := @parameter3: android.renderscript.Element;

        $r4 = r0.<android.renderscript.Script: android.util.SparseArray mKIDs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.renderscript.Script$KernelID) $r5;

        if r3 == null goto label1;

        return r3;

     label1:
        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l3 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r6);

        l2 = virtualinvoke $r7.<android.renderscript.RenderScript: long nScriptKernelIDCreate(long,int,int)>($l3, i0, i1);

        $b4 = l2 cmp 0L;

        if $b4 != 0 goto label2;

        $r11 = new android.renderscript.RSDriverException;

        specialinvoke $r11.<android.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create KernelID");

        throw $r11;

     label2:
        $r8 = new android.renderscript.Script$KernelID;

        $r10 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        specialinvoke $r8.<android.renderscript.Script$KernelID: void <init>(long,android.renderscript.RenderScript,android.renderscript.Script,int,int)>(l2, $r10, r0, i0, i1);

        r12 = $r8;

        $r9 = r0.<android.renderscript.Script: android.util.SparseArray mKIDs>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r12);

        return r12;
    }

    protected android.renderscript.Script$FieldID createFieldID(int, android.renderscript.Element)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.Element r1;
        android.renderscript.Script$FieldID r2, $r7, r11;
        long l1, $l2;
        android.util.SparseArray $r3, $r9;
        java.lang.Object $r4;
        android.renderscript.RenderScript $r5, $r6, $r8;
        byte $b3;
        android.renderscript.RSDriverException $r10;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Element;

        $r3 = r0.<android.renderscript.Script: android.util.SparseArray mFIDs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.renderscript.Script$FieldID) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r5);

        l1 = virtualinvoke $r6.<android.renderscript.RenderScript: long nScriptFieldIDCreate(long,int)>($l2, i0);

        $b3 = l1 cmp 0L;

        if $b3 != 0 goto label2;

        $r10 = new android.renderscript.RSDriverException;

        specialinvoke $r10.<android.renderscript.RSDriverException: void <init>(java.lang.String)>("Failed to create FieldID");

        throw $r10;

     label2:
        $r7 = new android.renderscript.Script$FieldID;

        $r8 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        specialinvoke $r7.<android.renderscript.Script$FieldID: void <init>(long,android.renderscript.RenderScript,android.renderscript.Script,int)>(l1, $r8, r0, i0);

        r11 = $r7;

        $r9 = r0.<android.renderscript.Script: android.util.SparseArray mFIDs>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r11);

        return r11;
    }

    protected void invoke(int)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptInvoke(long,int)>($l1, i0);

        return;
    }

    protected void invoke(int, android.renderscript.FieldPacker)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.FieldPacker r1;
        android.renderscript.RenderScript $r2, $r3, $r4, $r5;
        long $l1, $l2;
        byte[] $r6;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.FieldPacker;

        if r1 == null goto label1;

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r4 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r4);

        $r6 = virtualinvoke r1.<android.renderscript.FieldPacker: byte[] getData()>();

        virtualinvoke $r5.<android.renderscript.RenderScript: void nScriptInvokeV(long,int,byte[])>($l2, i0, $r6);

        goto label2;

     label1:
        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.renderscript.RenderScript: void nScriptInvoke(long,int)>($l1, i0);

     label2:
        return;
    }

    protected void forEach(int, android.renderscript.Allocation, android.renderscript.Allocation, android.renderscript.FieldPacker)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.Allocation r1, r2;
        android.renderscript.FieldPacker r3;
        long l1, l2, $l3;
        byte[] r4;
        android.renderscript.RenderScript $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.renderscript.RSIllegalArgumentException $r12;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Allocation;

        r2 := @parameter2: android.renderscript.Allocation;

        r3 := @parameter3: android.renderscript.FieldPacker;

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r5.<android.renderscript.RenderScript: void validate()>();

        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r6.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r1);

        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r7.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r2);

        if r1 != null goto label1;

        if r2 != null goto label1;

        $r12 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r12.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("At least one of ain or aout is required to be non-null.");

        throw $r12;

     label1:
        l1 = 0L;

        if r1 == null goto label2;

        $r11 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        l1 = virtualinvoke r1.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r11);

     label2:
        l2 = 0L;

        if r2 == null goto label3;

        $r10 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        l2 = virtualinvoke r2.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r10);

     label3:
        r4 = null;

        if r3 == null goto label4;

        r4 = virtualinvoke r3.<android.renderscript.FieldPacker: byte[] getData()>();

     label4:
        $r9 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r8 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l3 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r8);

        virtualinvoke $r9.<android.renderscript.RenderScript: void nScriptForEach(long,int,long,long,byte[])>($l3, i0, l1, l2, r4);

        return;
    }

    protected void forEach(int, android.renderscript.Allocation, android.renderscript.Allocation, android.renderscript.FieldPacker, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.Script r0;
        int i0, $i3, $i5, $i6, $i7, $i8, $i9;
        android.renderscript.Allocation r1, r2;
        android.renderscript.FieldPacker r3;
        android.renderscript.Script$LaunchOptions r4;
        long l1, l2, $l4;
        byte[] r5;
        android.renderscript.RenderScript $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        android.renderscript.RSIllegalArgumentException $r13;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Allocation;

        r2 := @parameter2: android.renderscript.Allocation;

        r3 := @parameter3: android.renderscript.FieldPacker;

        r4 := @parameter4: android.renderscript.Script$LaunchOptions;

        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r6.<android.renderscript.RenderScript: void validate()>();

        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r7.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r1);

        $r8 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r8.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r2);

        if r1 != null goto label1;

        if r2 != null goto label1;

        $r13 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r13.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("At least one of ain or aout is required to be non-null.");

        throw $r13;

     label1:
        if r4 != null goto label2;

        virtualinvoke r0.<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>(i0, r1, r2, r3);

        return;

     label2:
        l1 = 0L;

        if r1 == null goto label3;

        $r12 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        l1 = virtualinvoke r1.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r12);

     label3:
        l2 = 0L;

        if r2 == null goto label4;

        $r11 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        l2 = virtualinvoke r2.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r11);

     label4:
        r5 = null;

        if r3 == null goto label5;

        r5 = virtualinvoke r3.<android.renderscript.FieldPacker: byte[] getData()>();

     label5:
        $r10 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r9 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l4 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r9);

        $i3 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$000(android.renderscript.Script$LaunchOptions)>(r4);

        $i6 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$100(android.renderscript.Script$LaunchOptions)>(r4);

        $i5 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$200(android.renderscript.Script$LaunchOptions)>(r4);

        $i8 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$300(android.renderscript.Script$LaunchOptions)>(r4);

        $i7 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$400(android.renderscript.Script$LaunchOptions)>(r4);

        $i9 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$500(android.renderscript.Script$LaunchOptions)>(r4);

        virtualinvoke $r10.<android.renderscript.RenderScript: void nScriptForEachClipped(long,int,long,long,byte[],int,int,int,int,int,int)>($l4, i0, l1, l2, r5, $i3, $i6, $i5, $i8, $i7, $i9);

        return;
    }

    protected void forEach(int, android.renderscript.Allocation[], android.renderscript.Allocation, android.renderscript.FieldPacker)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.Allocation[] r1;
        android.renderscript.Allocation r2;
        android.renderscript.FieldPacker r3;
        android.renderscript.Script$LaunchOptions $r4;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Allocation[];

        r2 := @parameter2: android.renderscript.Allocation;

        r3 := @parameter3: android.renderscript.FieldPacker;

        $r4 = new android.renderscript.Script$LaunchOptions;

        specialinvoke $r4.<android.renderscript.Script$LaunchOptions: void <init>()>();

        virtualinvoke r0.<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(i0, r1, r2, r3, $r4);

        return;
    }

    protected void forEach(int, android.renderscript.Allocation[], android.renderscript.Allocation, android.renderscript.FieldPacker, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.Script r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, i13;
        android.renderscript.Allocation[] r1, r5;
        android.renderscript.Allocation r2, r6, $r12;
        android.renderscript.FieldPacker r3;
        android.renderscript.Script$LaunchOptions r4;
        android.renderscript.RenderScript $r7, $r8, $r9, $r10, $r11, $r13, $r15;
        long $l6, $l12, l14;
        android.renderscript.RSIllegalArgumentException $r14;
        long[] r16;
        byte[] r17;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.Allocation[];

        r2 := @parameter2: android.renderscript.Allocation;

        r3 := @parameter3: android.renderscript.FieldPacker;

        r4 := @parameter4: android.renderscript.Script$LaunchOptions;

        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r7.<android.renderscript.RenderScript: void validate()>();

        r5 = r1;

        i1 = lengthof r5;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r6 = r5[i2];

        $r15 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r15.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r8.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r2);

        if r1 != null goto label3;

        if r2 != null goto label3;

        $r14 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r14.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("At least one of ain or aout is required to be non-null.");

        throw $r14;

     label3:
        if r4 != null goto label4;

        virtualinvoke r0.<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker)>(i0, r1, r2, r3);

        return;

     label4:
        $i3 = lengthof r1;

        r16 = newarray (long)[$i3];

        i13 = 0;

     label5:
        $i4 = lengthof r1;

        if i13 >= $i4 goto label6;

        $r12 = r1[i13];

        $r13 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l12 = virtualinvoke $r12.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r13);

        r16[i13] = $l12;

        i13 = i13 + 1;

        goto label5;

     label6:
        l14 = 0L;

        if r2 == null goto label7;

        $r11 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        l14 = virtualinvoke r2.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r11);

     label7:
        r17 = null;

        if r3 == null goto label8;

        r17 = virtualinvoke r3.<android.renderscript.FieldPacker: byte[] getData()>();

     label8:
        $r10 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r9 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l6 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r9);

        $i5 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$000(android.renderscript.Script$LaunchOptions)>(r4);

        $i8 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$100(android.renderscript.Script$LaunchOptions)>(r4);

        $i7 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$200(android.renderscript.Script$LaunchOptions)>(r4);

        $i10 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$300(android.renderscript.Script$LaunchOptions)>(r4);

        $i9 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$400(android.renderscript.Script$LaunchOptions)>(r4);

        $i11 = staticinvoke <android.renderscript.Script$LaunchOptions: int access$500(android.renderscript.Script$LaunchOptions)>(r4);

        virtualinvoke $r10.<android.renderscript.RenderScript: void nScriptForEachMultiClipped(long,int,long[],long,byte[],int,int,int,int,int,int)>($l6, i0, r16, l14, r17, $i5, $i8, $i7, $i10, $i9, $i11);

        return;
    }

    void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.Script r0;
        long l0;
        android.renderscript.RenderScript r1;
        android.util.SparseArray $r2, $r3;

        r0 := @this: android.renderscript.Script;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<android.renderscript.Script: android.util.SparseArray mKIDs> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.renderscript.Script: android.util.SparseArray mFIDs> = $r3;

        return;
    }

    public void bindAllocation(android.renderscript.Allocation, int)
    {
        android.renderscript.Script r0;
        android.renderscript.Allocation r1;
        int i0, $i2, $i5, $i6;
        android.renderscript.Type r2;
        android.renderscript.RenderScript $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12;
        long $l1, $l3, $l4;
        android.content.Context $r8;
        android.content.pm.ApplicationInfo $r9;
        android.renderscript.RSIllegalArgumentException $r13;
        boolean $z0, $z1;

        r0 := @this: android.renderscript.Script;

        r1 := @parameter0: android.renderscript.Allocation;

        i0 := @parameter1: int;

        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r3.<android.renderscript.RenderScript: void validate()>();

        $r4 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r4.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r1);

        if r1 == null goto label3;

        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r8 = virtualinvoke $r7.<android.renderscript.RenderScript: android.content.Context getApplicationContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r9.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i2 < 20 goto label2;

        r2 = r1.<android.renderscript.Allocation: android.renderscript.Type mType>;

        $z0 = virtualinvoke r2.<android.renderscript.Type: boolean hasMipmaps()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<android.renderscript.Type: boolean hasFaces()>();

        if $z1 != 0 goto label1;

        $i5 = virtualinvoke r2.<android.renderscript.Type: int getY()>();

        if $i5 != 0 goto label1;

        $i6 = virtualinvoke r2.<android.renderscript.Type: int getZ()>();

        if $i6 == 0 goto label2;

     label1:
        $r13 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r13.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("API 20+ only allows simple 1D allocations to be used with bind.");

        throw $r13;

     label2:
        $r11 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r10 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l3 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r10);

        $r12 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l4 = virtualinvoke r1.<android.renderscript.Allocation: long getID(android.renderscript.RenderScript)>($r12);

        virtualinvoke $r11.<android.renderscript.RenderScript: void nScriptBindAllocation(long,long,int)>($l3, $l4, i0);

        goto label4;

     label3:
        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r5);

        virtualinvoke $r6.<android.renderscript.RenderScript: void nScriptBindAllocation(long,long,int)>($l1, 0L, i0);

     label4:
        return;
    }

    public void setVar(int, float)
    {
        android.renderscript.Script r0;
        int i0;
        float f0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptSetVarF(long,int,float)>($l1, i0, f0);

        return;
    }

    public float getVarF(int)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;
        float $f0;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        $f0 = virtualinvoke $r2.<android.renderscript.RenderScript: float nScriptGetVarF(long,int)>($l1, i0);

        return $f0;
    }

    public void setVar(int, double)
    {
        android.renderscript.Script r0;
        int i0;
        double d0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptSetVarD(long,int,double)>($l1, i0, d0);

        return;
    }

    public double getVarD(int)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;
        double $d0;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        $d0 = virtualinvoke $r2.<android.renderscript.RenderScript: double nScriptGetVarD(long,int)>($l1, i0);

        return $d0;
    }

    public void setVar(int, int)
    {
        android.renderscript.Script r0;
        int i0, i1;
        android.renderscript.RenderScript $r1, $r2;
        long $l2;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptSetVarI(long,int,int)>($l2, i0, i1);

        return;
    }

    public int getVarI(int)
    {
        android.renderscript.Script r0;
        int i0, $i2;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        $i2 = virtualinvoke $r2.<android.renderscript.RenderScript: int nScriptGetVarI(long,int)>($l1, i0);

        return $i2;
    }

    public void setVar(int, long)
    {
        android.renderscript.Script r0;
        int i0;
        long l1, $l2;
        android.renderscript.RenderScript $r1, $r2;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptSetVarJ(long,int,long)>($l2, i0, l1);

        return;
    }

    public long getVarJ(int)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1, $l2;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        $l2 = virtualinvoke $r2.<android.renderscript.RenderScript: long nScriptGetVarJ(long,int)>($l1, i0);

        return $l2;
    }

    public void setVar(int, boolean)
    {
        android.renderscript.Script r0;
        int i0;
        boolean z0;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;
        byte $b2;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke $r2.<android.renderscript.RenderScript: void nScriptSetVarI(long,int,int)>($l1, i0, $b2);

        return;
    }

    public boolean getVarB(int)
    {
        android.renderscript.Script r0;
        int i0, $i2;
        android.renderscript.RenderScript $r1, $r2;
        long $l1;
        boolean $z0;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r1 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r1);

        $i2 = virtualinvoke $r2.<android.renderscript.RenderScript: int nScriptGetVarI(long,int)>($l1, i0);

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setVar(int, android.renderscript.BaseObj)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.BaseObj r1;
        android.renderscript.RenderScript $r2, $r3, $r4, $r5, $r6;
        long $l1, $l2;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.BaseObj;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r2.<android.renderscript.RenderScript: void validate()>();

        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r3.<android.renderscript.RenderScript: void validateObject(android.renderscript.BaseObj)>(r1);

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r4 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r4);

        if r1 != null goto label1;

        $l2 = 0L;

        goto label2;

     label1:
        $r6 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>($r6);

     label2:
        virtualinvoke $r5.<android.renderscript.RenderScript: void nScriptSetVarObj(long,int,long)>($l1, i0, $l2);

        return;
    }

    public void setVar(int, android.renderscript.FieldPacker)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.FieldPacker r1;
        android.renderscript.RenderScript $r2, $r3;
        long $l1;
        byte[] $r4;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.FieldPacker;

        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r2);

        $r4 = virtualinvoke r1.<android.renderscript.FieldPacker: byte[] getData()>();

        virtualinvoke $r3.<android.renderscript.RenderScript: void nScriptSetVarV(long,int,byte[])>($l1, i0, $r4);

        return;
    }

    public void setVar(int, android.renderscript.FieldPacker, android.renderscript.Element, int[])
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.FieldPacker r1;
        android.renderscript.Element r2;
        int[] r3;
        android.renderscript.RenderScript $r4, $r5, $r7;
        long $l1, $l2;
        byte[] $r6;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.FieldPacker;

        r2 := @parameter2: android.renderscript.Element;

        r3 := @parameter3: int[];

        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r4 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r4);

        $r6 = virtualinvoke r1.<android.renderscript.FieldPacker: byte[] getData()>();

        $r7 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l2 = virtualinvoke r2.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>($r7);

        virtualinvoke $r5.<android.renderscript.RenderScript: void nScriptSetVarVE(long,int,byte[],long,int[])>($l1, i0, $r6, $l2, r3);

        return;
    }

    public void getVarV(int, android.renderscript.FieldPacker)
    {
        android.renderscript.Script r0;
        int i0;
        android.renderscript.FieldPacker r1;
        android.renderscript.RenderScript $r2, $r3;
        long $l1;
        byte[] $r4;

        r0 := @this: android.renderscript.Script;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.FieldPacker;

        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r2 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r2);

        $r4 = virtualinvoke r1.<android.renderscript.FieldPacker: byte[] getData()>();

        virtualinvoke $r3.<android.renderscript.RenderScript: void nScriptGetVarV(long,int,byte[])>($l1, i0, $r4);

        return;
    }

    public void setTimeZone(java.lang.String)
    {
        android.renderscript.Script r0;
        java.lang.String r1;
        java.io.UnsupportedEncodingException r2, $r7;
        android.renderscript.RenderScript $r3, $r4, $r5;
        long $l0;
        byte[] $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.renderscript.Script;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        virtualinvoke $r3.<android.renderscript.RenderScript: void validate()>();

     label1:
        $r5 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $r4 = r0.<android.renderscript.Script: android.renderscript.RenderScript mRS>;

        $l0 = virtualinvoke r0.<android.renderscript.Script: long getID(android.renderscript.RenderScript)>($r4);

        $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r5.<android.renderscript.RenderScript: void nScriptSetTimeZone(long,byte[])>($l0, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r8;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
