public class com.android.internal.util.ProcFileReader extends java.lang.Object implements java.io.Closeable
{
    private final java.io.InputStream mStream;
    private final byte[] mBuffer;
    private int mTail;
    private boolean mLineFinished;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        java.io.InputStream r1;

        r0 := @this: com.android.internal.util.ProcFileReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream,int)>(r1, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        java.io.InputStream r1;
        int i0;
        byte[] $r2;

        r0 := @this: com.android.internal.util.ProcFileReader;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.util.ProcFileReader: java.io.InputStream mStream> = r1;

        $r2 = newarray (byte)[i0];

        r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer> = $r2;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: int fillBuf()>();

        return;
    }

    private int fillBuf() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        byte[] $r1, $r2;
        java.io.InputStream $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.internal.util.ProcFileReader;

        $r1 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $i3 = lengthof $r1;

        $i2 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        i0 = $i3 - $i2;

        if i0 != 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("attempting to fill already-full buffer");

        throw $r4;

     label1:
        $r3 = r0.<com.android.internal.util.ProcFileReader: java.io.InputStream mStream>;

        $r2 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $i4 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, $i4, i0);

        if i1 == -1 goto label2;

        $i5 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        $i6 = $i5 + i1;

        r0.<com.android.internal.util.ProcFileReader: int mTail> = $i6;

     label2:
        return i1;
    }

    private void consumeBuf(int) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte[] $r1, $r2;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $r1 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $i1 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        $i2 = $i1 - i0;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r2, i0, $r1, 0, $i2);

        $i3 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        $i4 = $i3 - i0;

        r0.<com.android.internal.util.ProcFileReader: int mTail> = $i4;

        $i5 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        if $i5 != 0 goto label1;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: int fillBuf()>();

     label1:
        return;
    }

    private int nextTokenIndex() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, $i2, $i3;
        byte b1;
        boolean $z0;
        java.net.ProtocolException $r1;
        byte[] $r2;

        r0 := @this: com.android.internal.util.ProcFileReader;

        $z0 = r0.<com.android.internal.util.ProcFileReader: boolean mLineFinished>;

        if $z0 == 0 goto label1;

        return -1;

     label1:
        i0 = 0;

     label2:
        $i2 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        if i0 >= $i2 goto label5;

        $r2 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        b1 = $r2[i0];

        if b1 != 10 goto label3;

        r0.<com.android.internal.util.ProcFileReader: boolean mLineFinished> = 1;

        return i0;

     label3:
        if b1 != 32 goto label4;

        return i0;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        $i3 = specialinvoke r0.<com.android.internal.util.ProcFileReader: int fillBuf()>();

        if $i3 > 0 goto label2;

        $r1 = new java.net.ProtocolException;

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>("End of stream while looking for token boundary");

        throw $r1;
    }

    public boolean hasMoreData()
    {
        com.android.internal.util.ProcFileReader r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.util.ProcFileReader;

        $i0 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void finishLine() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, $i1, $i2, $i4;
        boolean $z0;
        java.net.ProtocolException $r1;
        byte[] $r2;
        byte $b3;

        r0 := @this: com.android.internal.util.ProcFileReader;

        $z0 = r0.<com.android.internal.util.ProcFileReader: boolean mLineFinished>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.util.ProcFileReader: boolean mLineFinished> = 0;

        return;

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<com.android.internal.util.ProcFileReader: int mTail>;

        if i0 >= $i1 goto label4;

        $r2 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $b3 = $r2[i0];

        if $b3 != 10 goto label3;

        $i4 = i0 + 1;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: void consumeBuf(int)>($i4);

        return;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $i2 = specialinvoke r0.<com.android.internal.util.ProcFileReader: int fillBuf()>();

        if $i2 > 0 goto label2;

        $r1 = new java.net.ProtocolException;

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>("End of stream while looking for line boundary");

        throw $r1;
    }

    public java.lang.String nextString() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0;
        java.lang.String $r1;
        java.net.ProtocolException $r2;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 = specialinvoke r0.<com.android.internal.util.ProcFileReader: int nextTokenIndex()>();

        if i0 != -1 goto label1;

        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("Missing required string");

        throw $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.util.ProcFileReader: java.lang.String parseAndConsumeString(int)>(i0);

        return $r1;
    }

    public long nextLong() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0;
        long $l1;
        java.net.ProtocolException $r1;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 = specialinvoke r0.<com.android.internal.util.ProcFileReader: int nextTokenIndex()>();

        if i0 != -1 goto label1;

        $r1 = new java.net.ProtocolException;

        specialinvoke $r1.<java.net.ProtocolException: void <init>(java.lang.String)>("Missing required long");

        throw $r1;

     label1:
        $l1 = specialinvoke r0.<com.android.internal.util.ProcFileReader: long parseAndConsumeLong(int)>(i0);

        return $l1;
    }

    public long nextOptionalLong(long) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        long l0, $l2;
        int i1;

        r0 := @this: com.android.internal.util.ProcFileReader;

        l0 := @parameter0: long;

        i1 = specialinvoke r0.<com.android.internal.util.ProcFileReader: int nextTokenIndex()>();

        if i1 != -1 goto label1;

        return l0;

     label1:
        $l2 = specialinvoke r0.<com.android.internal.util.ProcFileReader: long parseAndConsumeLong(int)>(i1);

        return $l2;
    }

    private java.lang.String parseAndConsumeString(int) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, $i1;
        java.lang.String r1, $r2;
        java.nio.charset.Charset $r3;
        byte[] $r4;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 := @parameter0: int;

        $r2 = new java.lang.String;

        $r4 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r4, 0, i0, $r3);

        r1 = $r2;

        $i1 = i0 + 1;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: void consumeBuf(int)>($i1);

        return r1;
    }

    private long parseAndConsumeLong(int) throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        int i0, i2, i3, $i6;
        boolean z0, $z1;
        long l1, l4, $l7, $l9, $l10;
        byte[] $r1, $r2;
        byte $b5, $b8, $b11, $b12;
        java.lang.NumberFormatException $r3, $r4;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $b5 = $r1[0];

        if $b5 != 45 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        l1 = 0L;

        if z0 == 0 goto label03;

        $b12 = 1;

        goto label04;

     label03:
        $b12 = 0;

     label04:
        i2 = $b12;

     label05:
        if i2 >= i0 goto label09;

        $r2 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $b8 = $r2[i2];

        i3 = $b8 - 48;

        if i3 < 0 goto label06;

        if i3 <= 9 goto label07;

     label06:
        $r3 = specialinvoke r0.<com.android.internal.util.ProcFileReader: java.lang.NumberFormatException invalidLong(int)>(i0);

        throw $r3;

     label07:
        $l9 = l1 * 10L;

        $l10 = (long) i3;

        l4 = $l9 - $l10;

        $b11 = l4 cmp l1;

        if $b11 <= 0 goto label08;

        $r4 = specialinvoke r0.<com.android.internal.util.ProcFileReader: java.lang.NumberFormatException invalidLong(int)>(i0);

        throw $r4;

     label08:
        l1 = l4;

        i2 = i2 + 1;

        goto label05;

     label09:
        $i6 = i0 + 1;

        specialinvoke r0.<com.android.internal.util.ProcFileReader: void consumeBuf(int)>($i6);

        if z0 == 0 goto label10;

        $l7 = l1;

        goto label11;

     label10:
        $l7 = neg l1;

     label11:
        return $l7;
    }

    private java.lang.NumberFormatException invalidLong(int)
    {
        com.android.internal.util.ProcFileReader r0;
        int i0;
        java.lang.NumberFormatException $r1;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.String $r4, $r8;
        java.nio.charset.Charset $r5;
        byte[] $r6;

        r0 := @this: com.android.internal.util.ProcFileReader;

        i0 := @parameter0: int;

        $r1 = new java.lang.NumberFormatException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid long: ");

        $r4 = new java.lang.String;

        $r6 = r0.<com.android.internal.util.ProcFileReader: byte[] mBuffer>;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r6, 0, i0, $r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r8);

        return $r1;
    }

    public int nextInt() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        long l0;
        byte $b1, $b2;
        java.lang.NumberFormatException $r1;
        int $i3;

        r0 := @this: com.android.internal.util.ProcFileReader;

        l0 = virtualinvoke r0.<com.android.internal.util.ProcFileReader: long nextLong()>();

        $b1 = l0 cmp 2147483647L;

        if $b1 > 0 goto label1;

        $b2 = l0 cmp -2147483648L;

        if $b2 >= 0 goto label2;

     label1:
        $r1 = new java.lang.NumberFormatException;

        specialinvoke $r1.<java.lang.NumberFormatException: void <init>(java.lang.String)>("parsed value larger than integer");

        throw $r1;

     label2:
        $i3 = (int) l0;

        return $i3;
    }

    public void close() throws java.io.IOException
    {
        com.android.internal.util.ProcFileReader r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.internal.util.ProcFileReader;

        $r1 = r0.<com.android.internal.util.ProcFileReader: java.io.InputStream mStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
}
