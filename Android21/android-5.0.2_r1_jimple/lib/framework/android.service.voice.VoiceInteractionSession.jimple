public abstract class android.service.voice.VoiceInteractionSession extends java.lang.Object implements android.view.KeyEvent$Callback
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    final android.content.Context mContext;
    final com.android.internal.os.HandlerCaller mHandlerCaller;
    final android.view.KeyEvent$DispatcherState mDispatcherState;
    com.android.internal.app.IVoiceInteractionManagerService mSystemService;
    android.os.IBinder mToken;
    int mTheme;
    android.view.LayoutInflater mInflater;
    android.content.res.TypedArray mThemeAttrs;
    android.view.View mRootView;
    android.widget.FrameLayout mContentFrame;
    android.inputmethodservice.SoftInputWindow mWindow;
    boolean mInitialized;
    boolean mWindowAdded;
    boolean mWindowVisible;
    boolean mWindowWasVisible;
    boolean mInShowWindow;
    final android.util.ArrayMap mActiveRequests;
    final android.service.voice.VoiceInteractionSession$Insets mTmpInsets;
    final int[] mTmpLocation;
    final java.lang.ref.WeakReference mWeakRef;
    final com.android.internal.app.IVoiceInteractor mInteractor;
    final android.service.voice.IVoiceInteractionSession mSession;
    static final int MSG_START_CONFIRMATION;
    static final int MSG_START_COMPLETE_VOICE;
    static final int MSG_START_ABORT_VOICE;
    static final int MSG_START_COMMAND;
    static final int MSG_SUPPORTS_COMMANDS;
    static final int MSG_CANCEL;
    static final int MSG_TASK_STARTED;
    static final int MSG_TASK_FINISHED;
    static final int MSG_CLOSE_SYSTEM_DIALOGS;
    static final int MSG_DESTROY;
    final android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks;
    final android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer;

    public void <init>(android.content.Context)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Context r1;
        android.os.Handler $r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Context;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        specialinvoke r0.<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>(r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.view.KeyEvent$DispatcherState $r3;
        android.util.ArrayMap $r4;
        android.service.voice.VoiceInteractionSession$Insets $r5;
        int[] $r6;
        java.lang.ref.WeakReference $r7;
        android.service.voice.VoiceInteractionSession$1 $r8;
        android.service.voice.VoiceInteractionSession$2 $r9;
        android.service.voice.VoiceInteractionSession$MyCallbacks $r10, $r14;
        android.service.voice.VoiceInteractionSession$3 $r11;
        com.android.internal.os.HandlerCaller $r12;
        android.os.Looper $r13;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.view.KeyEvent$DispatcherState;

        specialinvoke $r3.<android.view.KeyEvent$DispatcherState: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.view.KeyEvent$DispatcherState mDispatcherState> = $r3;

        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = 0;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests> = $r4;

        $r5 = new android.service.voice.VoiceInteractionSession$Insets;

        specialinvoke $r5.<android.service.voice.VoiceInteractionSession$Insets: void <init>()>();

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$Insets mTmpInsets> = $r5;

        $r6 = newarray (int)[2];

        r0.<android.service.voice.VoiceInteractionSession: int[] mTmpLocation> = $r6;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: java.lang.ref.WeakReference mWeakRef> = $r7;

        $r8 = new android.service.voice.VoiceInteractionSession$1;

        specialinvoke $r8.<android.service.voice.VoiceInteractionSession$1: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractor mInteractor> = $r8;

        $r9 = new android.service.voice.VoiceInteractionSession$2;

        specialinvoke $r9.<android.service.voice.VoiceInteractionSession$2: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.IVoiceInteractionSession mSession> = $r9;

        $r10 = new android.service.voice.VoiceInteractionSession$MyCallbacks;

        specialinvoke $r10.<android.service.voice.VoiceInteractionSession$MyCallbacks: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks> = $r10;

        $r11 = new android.service.voice.VoiceInteractionSession$3;

        specialinvoke $r11.<android.service.voice.VoiceInteractionSession$3: void <init>(android.service.voice.VoiceInteractionSession)>(r0);

        r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer> = $r11;

        r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext> = r1;

        $r12 = new com.android.internal.os.HandlerCaller;

        $r13 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r14 = r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks>;

        specialinvoke $r12.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, $r13, $r14, 1);

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.os.HandlerCaller mHandlerCaller> = $r12;

        return;
    }

    android.service.voice.VoiceInteractionSession$Request newRequest(com.android.internal.app.IVoiceInteractorCallback)
    {
        android.service.voice.VoiceInteractionSession r0, r2;
        com.android.internal.app.IVoiceInteractorCallback r1;
        android.service.voice.VoiceInteractionSession$Request r3, $r6;
        java.lang.Throwable r4, $r11;
        com.android.internal.app.IVoiceInteractorRequest $r7;
        android.util.ArrayMap $r8;
        android.os.IBinder $r9;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: com.android.internal.app.IVoiceInteractorCallback;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = new android.service.voice.VoiceInteractionSession$Request;

        specialinvoke $r6.<android.service.voice.VoiceInteractionSession$Request: void <init>(com.android.internal.app.IVoiceInteractorCallback,android.service.voice.VoiceInteractionSession)>(r1, r0);

        r3 = $r6;

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $r7 = r3.<android.service.voice.VoiceInteractionSession$Request: com.android.internal.app.IVoiceInteractorRequest mInterface>;

        $r9 = interfaceinvoke $r7.<com.android.internal.app.IVoiceInteractorRequest: android.os.IBinder asBinder()>();

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r3);

        exitmonitor r2;

     label2:
        return r3;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    android.service.voice.VoiceInteractionSession$Request removeRequest(android.os.IBinder)
    {
        android.service.voice.VoiceInteractionSession r0, r2;
        android.os.IBinder r1;
        android.service.voice.VoiceInteractionSession$Request r3;
        java.lang.Throwable r4, $r10;
        android.util.ArrayMap $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.service.voice.VoiceInteractionSession$Request) $r7;

        if r3 == null goto label2;

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.util.ArrayMap mActiveRequests>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r3);

     label2:
        exitmonitor r2;

     label3:
        return r3;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void doCreate(com.android.internal.app.IVoiceInteractionManagerService, android.os.IBinder, android.os.Bundle)
    {
        android.service.voice.VoiceInteractionSession r0;
        com.android.internal.app.IVoiceInteractionManagerService r1;
        android.os.IBinder r2;
        android.os.Bundle r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: com.android.internal.app.IVoiceInteractionManagerService;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.Bundle;

        r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService> = r1;

        r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken> = r2;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onCreate(android.os.Bundle)>(r3);

        return;
    }

    void doDestroy()
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean $z0, $z1;
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r3;
        android.inputmethodservice.SoftInputWindow $r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void onDestroy()>();

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r3);

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        if $z1 == 0 goto label1;

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r4.<android.inputmethodservice.SoftInputWindow: void dismiss()>();

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded> = 0;

     label1:
        r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized> = 0;

     label2:
        return;
    }

    void initViews()
    {
        android.service.voice.VoiceInteractionSession r0;
        int[] $r1;
        android.content.Context $r2;
        android.content.res.TypedArray $r3;
        android.view.LayoutInflater $r4;
        android.view.View $r5, $r6, $r7, $r9, $r12, $r13;
        android.inputmethodservice.SoftInputWindow $r8;
        android.view.ViewTreeObserver $r10;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r11;
        android.widget.FrameLayout $r14;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInitialized> = 1;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r1 = <android.R$styleable: int[] VoiceInteractionSession>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r1);

        r0.<android.service.voice.VoiceInteractionSession: android.content.res.TypedArray mThemeAttrs> = $r3;

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater>;

        $r5 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367272, null);

        r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView> = $r5;

        $r6 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        virtualinvoke $r6.<android.view.View: void setSystemUiVisibility(int)>(768);

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r7 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        virtualinvoke $r8.<android.inputmethodservice.SoftInputWindow: void setContentView(android.view.View)>($r7);

        $r9 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r11 = r0.<android.service.voice.VoiceInteractionSession: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r10.<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r11);

        $r12 = r0.<android.service.voice.VoiceInteractionSession: android.view.View mRootView>;

        $r13 = virtualinvoke $r12.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r14 = (android.widget.FrameLayout) $r13;

        r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame> = $r14;

        return;
    }

    public void showWindow()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.View r1;
        java.lang.Throwable r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r8;
        android.inputmethodservice.SoftInputWindow $r9;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Showing window: mWindowAdded=");

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWindowVisible=");

        $z1 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VoiceInteractionSession", $r8);

        $z2 = r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow>;

        if $z2 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VoiceInteractionSession", "Re-entrance in to showWindow");

        return;

     label1:
        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 1;

        $z3 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z3 != 0 goto label3;

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible> = 1;

        $z4 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded>;

        if $z4 != 0 goto label2;

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowAdded> = 1;

        r1 = virtualinvoke r0.<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>();

        if r1 == null goto label2;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>(r1);

     label2:
        $r9 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r9.<android.inputmethodservice.SoftInputWindow: void show()>();

     label3:
        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowWasVisible> = 1;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 0;

        goto label6;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

     label5:
        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowWasVisible> = 1;

        r0.<android.service.voice.VoiceInteractionSession: boolean mInShowWindow> = 0;

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void hideWindow()
    {
        android.service.voice.VoiceInteractionSession r0;
        boolean $z0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $z0 = r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r1.<android.inputmethodservice.SoftInputWindow: void hide()>();

        r0.<android.service.voice.VoiceInteractionSession: boolean mWindowVisible> = 0;

     label1:
        return;
    }

    public void setTheme(int)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.inputmethodservice.SoftInputWindow $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;

     label1:
        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = i0;

        return;
    }

    public void startVoiceActivity(android.content.Intent)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Intent r1;
        int i0;
        android.os.IBinder $r2, $r5;
        android.content.Context $r3;
        com.android.internal.app.IVoiceInteractionManagerService $r4;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r2 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r8;

     label1:
        virtualinvoke r1.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r1.<android.content.Intent: void prepareToLeaveProcess()>();

        $r4 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r5 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r6 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>($r6);

        i0 = interfaceinvoke $r4.<com.android.internal.app.IVoiceInteractionManagerService: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String)>($r5, r1, $r7);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.LayoutInflater $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater>;

        return $r1;
    }

    public android.app.Dialog getWindow()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $r1 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        return $r1;
    }

    public void finish()
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.IBinder $r2, $r3;
        com.android.internal.app.IVoiceInteractionManagerService $r4;
        java.lang.IllegalStateException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t call before onCreate()");

        throw $r5;

     label1:
        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void hideWindow()>();

     label2:
        $r4 = r0.<android.service.voice.VoiceInteractionSession: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r3 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        interfaceinvoke $r4.<com.android.internal.app.IVoiceInteractionManagerService: void finish(android.os.IBinder)>($r3);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void onCreate(android.os.Bundle)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.os.Bundle r1;
        int $i0, $i1, $i2;
        android.content.Context $r2, $r8;
        java.lang.Object $r3;
        android.view.LayoutInflater $r4;
        android.inputmethodservice.SoftInputWindow $r5, $r9, $r11, $r14;
        android.view.KeyEvent$DispatcherState $r6;
        android.service.voice.VoiceInteractionSession$MyCallbacks $r7;
        android.view.Window $r10, $r12;
        android.os.IBinder $r13;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.os.Bundle;

        $i0 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        goto label2;

     label1:
        $i2 = 16974982;

     label2:
        r0.<android.service.voice.VoiceInteractionSession: int mTheme> = $i2;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r4 = (android.view.LayoutInflater) $r3;

        r0.<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater mInflater> = $r4;

        $r5 = new android.inputmethodservice.SoftInputWindow;

        $r8 = r0.<android.service.voice.VoiceInteractionSession: android.content.Context mContext>;

        $i1 = r0.<android.service.voice.VoiceInteractionSession: int mTheme>;

        $r7 = r0.<android.service.voice.VoiceInteractionSession: android.service.voice.VoiceInteractionSession$MyCallbacks mCallbacks>;

        $r6 = r0.<android.service.voice.VoiceInteractionSession: android.view.KeyEvent$DispatcherState mDispatcherState>;

        specialinvoke $r5.<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,java.lang.String,int,android.inputmethodservice.SoftInputWindow$Callback,android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,int,int,boolean)>($r8, "VoiceInteractionSession", $i1, $r7, r0, $r6, 2031, 48, 1);

        r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow> = $r5;

        $r9 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r10 = virtualinvoke $r9.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r10.<android.view.Window: void addFlags(int)>(16777216);

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void initViews()>();

        $r11 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r12 = virtualinvoke $r11.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r12.<android.view.Window: void setLayout(int,int)>(-1, -2);

        $r14 = r0.<android.service.voice.VoiceInteractionSession: android.inputmethodservice.SoftInputWindow mWindow>;

        $r13 = r0.<android.service.voice.VoiceInteractionSession: android.os.IBinder mToken>;

        virtualinvoke $r14.<android.inputmethodservice.SoftInputWindow: void setToken(android.os.IBinder)>($r13);

        return;
    }

    public void onDestroy()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return;
    }

    public android.view.View onCreateContentView()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        return null;
    }

    public void setContentView(android.view.View)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.service.voice.VoiceInteractionSession: android.widget.FrameLayout mContentFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.service.voice.VoiceInteractionSession r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public void onBackPressed()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void finish()>();

        return;
    }

    public void onCloseSystemDialogs()
    {
        android.service.voice.VoiceInteractionSession r0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void finish()>();

        return;
    }

    public void onComputeInsets(android.service.voice.VoiceInteractionSession$Insets)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Insets r1;
        int[] r2;
        android.view.View r3;
        android.app.Dialog $r4;
        android.view.Window $r5;
        android.graphics.Rect $r6, $r7, $r8, $r9;
        android.graphics.Region $r10;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Insets;

        r2 = r0.<android.service.voice.VoiceInteractionSession: int[] mTmpLocation>;

        $r4 = virtualinvoke r0.<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>();

        $r5 = virtualinvoke $r4.<android.app.Dialog: android.view.Window getWindow()>();

        r3 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke r3.<android.view.View: void getLocationInWindow(int[])>(r2);

        $r6 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r6.<android.graphics.Rect: int top> = 0;

        $r7 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r7.<android.graphics.Rect: int left> = 0;

        $r8 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r8.<android.graphics.Rect: int right> = 0;

        $r9 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Rect contentInsets>;

        $r9.<android.graphics.Rect: int bottom> = 0;

        r1.<android.service.voice.VoiceInteractionSession$Insets: int touchableInsets> = 0;

        $r10 = r1.<android.service.voice.VoiceInteractionSession$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r10.<android.graphics.Region: void setEmpty()>();

        return;
    }

    public void onTaskStarted(android.content.Intent, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        return;
    }

    public void onTaskFinished(android.content.Intent, int)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.service.voice.VoiceInteractionSession: void finish()>();

        return;
    }

    public boolean[] onGetSupportedCommands(android.service.voice.VoiceInteractionSession$Caller, java.lang.String[])
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Caller r1;
        java.lang.String[] r2;
        int $i0;
        boolean[] $r3;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Caller;

        r2 := @parameter1: java.lang.String[];

        $i0 = lengthof r2;

        $r3 = newarray (boolean)[$i0];

        return $r3;
    }

    public abstract void onConfirm(android.service.voice.VoiceInteractionSession$Caller, android.service.voice.VoiceInteractionSession$Request, java.lang.CharSequence, android.os.Bundle);

    public void onCompleteVoice(android.service.voice.VoiceInteractionSession$Caller, android.service.voice.VoiceInteractionSession$Request, java.lang.CharSequence, android.os.Bundle)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Caller r1;
        android.service.voice.VoiceInteractionSession$Request r2;
        java.lang.CharSequence r3;
        android.os.Bundle r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Caller;

        r2 := @parameter1: android.service.voice.VoiceInteractionSession$Request;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: android.os.Bundle;

        virtualinvoke r2.<android.service.voice.VoiceInteractionSession$Request: void sendCompleteVoiceResult(android.os.Bundle)>(null);

        return;
    }

    public void onAbortVoice(android.service.voice.VoiceInteractionSession$Caller, android.service.voice.VoiceInteractionSession$Request, java.lang.CharSequence, android.os.Bundle)
    {
        android.service.voice.VoiceInteractionSession r0;
        android.service.voice.VoiceInteractionSession$Caller r1;
        android.service.voice.VoiceInteractionSession$Request r2;
        java.lang.CharSequence r3;
        android.os.Bundle r4;

        r0 := @this: android.service.voice.VoiceInteractionSession;

        r1 := @parameter0: android.service.voice.VoiceInteractionSession$Caller;

        r2 := @parameter1: android.service.voice.VoiceInteractionSession$Request;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: android.os.Bundle;

        virtualinvoke r2.<android.service.voice.VoiceInteractionSession$Request: void sendAbortVoiceResult(android.os.Bundle)>(null);

        return;
    }

    public abstract void onCommand(android.service.voice.VoiceInteractionSession$Caller, android.service.voice.VoiceInteractionSession$Request, java.lang.String, android.os.Bundle);

    public abstract void onCancel(android.service.voice.VoiceInteractionSession$Request);

    public static void <clinit>()
    {
        <android.service.voice.VoiceInteractionSession: int MSG_DESTROY> = 103;

        <android.service.voice.VoiceInteractionSession: int MSG_CLOSE_SYSTEM_DIALOGS> = 102;

        <android.service.voice.VoiceInteractionSession: int MSG_TASK_FINISHED> = 101;

        <android.service.voice.VoiceInteractionSession: int MSG_TASK_STARTED> = 100;

        <android.service.voice.VoiceInteractionSession: int MSG_CANCEL> = 6;

        <android.service.voice.VoiceInteractionSession: int MSG_SUPPORTS_COMMANDS> = 5;

        <android.service.voice.VoiceInteractionSession: int MSG_START_COMMAND> = 4;

        <android.service.voice.VoiceInteractionSession: int MSG_START_ABORT_VOICE> = 3;

        <android.service.voice.VoiceInteractionSession: int MSG_START_COMPLETE_VOICE> = 2;

        <android.service.voice.VoiceInteractionSession: int MSG_START_CONFIRMATION> = 1;

        <android.service.voice.VoiceInteractionSession: boolean DEBUG> = 1;

        <android.service.voice.VoiceInteractionSession: java.lang.String TAG> = "VoiceInteractionSession";

        return;
    }
}
