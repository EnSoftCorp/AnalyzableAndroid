public class android.hardware.camera2.dispatch.ArgumentReplacingDispatcher extends java.lang.Object implements android.hardware.camera2.dispatch.Dispatchable
{
    private final android.hardware.camera2.dispatch.Dispatchable mTarget;
    private final int mArgumentIndex;
    private final java.lang.Object mReplaceWith;

    public void <init>(android.hardware.camera2.dispatch.Dispatchable, int, java.lang.Object)
    {
        android.hardware.camera2.dispatch.ArgumentReplacingDispatcher r0;
        android.hardware.camera2.dispatch.Dispatchable r1, $r4;
        int i0, $i1;
        java.lang.Object r2, $r3, $r5;

        r0 := @this: android.hardware.camera2.dispatch.ArgumentReplacingDispatcher;

        r1 := @parameter0: android.hardware.camera2.dispatch.Dispatchable;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "target must not be null");

        $r4 = (android.hardware.camera2.dispatch.Dispatchable) $r3;

        r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: android.hardware.camera2.dispatch.Dispatchable mTarget> = $r4;

        $i1 = staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>(i0, "argumentIndex must not be negative");

        r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: int mArgumentIndex> = $i1;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "replaceWith must not be null");

        r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: java.lang.Object mReplaceWith> = $r5;

        return;
    }

    public java.lang.Object dispatch(java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        android.hardware.camera2.dispatch.ArgumentReplacingDispatcher r0;
        java.lang.reflect.Method r1;
        java.lang.Object[] r2;
        int $i0, $i1, $i2;
        android.hardware.camera2.dispatch.Dispatchable $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: android.hardware.camera2.dispatch.ArgumentReplacingDispatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Object[];

        $i1 = lengthof r2;

        $i0 = r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: int mArgumentIndex>;

        if $i1 <= $i0 goto label1;

        r2 = staticinvoke <android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: java.lang.Object[] arrayCopy(java.lang.Object[])>(r2);

        $i2 = r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: int mArgumentIndex>;

        $r5 = r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: java.lang.Object mReplaceWith>;

        r2[$i2] = $r5;

     label1:
        $r3 = r0.<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: android.hardware.camera2.dispatch.Dispatchable mTarget>;

        $r4 = interfaceinvoke $r3.<android.hardware.camera2.dispatch.Dispatchable: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>(r1, r2);

        return $r4;
    }

    private static java.lang.Object[] arrayCopy(java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Object[];

        i0 = lengthof r0;

        r1 = newarray (java.lang.Object)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0[i1];

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
}
