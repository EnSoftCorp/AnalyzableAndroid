public abstract class android.media.tv.TvInputService$Session extends java.lang.Object implements android.view.KeyEvent$Callback
{
    private final android.view.KeyEvent$DispatcherState mDispatcherState;
    private final android.view.WindowManager mWindowManager;
    final android.os.Handler mHandler;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private android.view.Surface mSurface;
    private android.view.View mOverlayView;
    private boolean mOverlayViewEnabled;
    private android.os.IBinder mWindowToken;
    private android.graphics.Rect mOverlayFrame;
    private android.media.tv.ITvInputSessionCallback mSessionCallback;

    public void <init>(android.content.Context)
    {
        android.media.tv.TvInputService$Session r0;
        android.content.Context r1;
        android.view.KeyEvent$DispatcherState $r2;
        java.lang.Object $r3;
        android.view.WindowManager $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.view.KeyEvent$DispatcherState;

        specialinvoke $r2.<android.view.KeyEvent$DispatcherState: void <init>()>();

        r0.<android.media.tv.TvInputService$Session: android.view.KeyEvent$DispatcherState mDispatcherState> = $r2;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        r0.<android.media.tv.TvInputService$Session: android.view.WindowManager mWindowManager> = $r4;

        $r5 = new android.os.Handler;

        $r6 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r0.<android.media.tv.TvInputService$Session: android.os.Handler mHandler> = $r5;

        return;
    }

    public void setOverlayViewEnabled(boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;
        android.media.tv.TvInputService$Session$1 $r1;
        android.os.Handler $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.media.tv.TvInputService$Session: android.os.Handler mHandler>;

        $r1 = new android.media.tv.TvInputService$Session$1;

        specialinvoke $r1.<android.media.tv.TvInputService$Session$1: void <init>(android.media.tv.TvInputService$Session,boolean)>(r0, z0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void notifySessionEvent(java.lang.String, android.os.Bundle)
    {
        android.media.tv.TvInputService$Session r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.tv.TvInputService$Session$2 $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("eventType should not be null.");

        throw $r4;

     label1:
        $r3 = new android.media.tv.TvInputService$Session$2;

        specialinvoke $r3.<android.media.tv.TvInputService$Session$2: void <init>(android.media.tv.TvInputService$Session,java.lang.String,android.os.Bundle)>(r0, r1, r2);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r3);

        return;
    }

    public void notifyChannelRetuned(android.net.Uri)
    {
        android.media.tv.TvInputService$Session r0;
        android.net.Uri r1;
        android.media.tv.TvInputService$Session$3 $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.net.Uri;

        $r2 = new android.media.tv.TvInputService$Session$3;

        specialinvoke $r2.<android.media.tv.TvInputService$Session$3: void <init>(android.media.tv.TvInputService$Session,android.net.Uri)>(r0, r1);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r2);

        return;
    }

    public void notifyTracksChanged(java.util.List)
    {
        android.media.tv.TvInputService$Session r0;
        java.util.List r1;
        java.util.HashSet r2, $r6;
        java.util.Iterator r3;
        android.media.tv.TvTrackInfo r4;
        java.lang.String r5, $r13;
        boolean $z0, $z1;
        android.media.tv.TvInputService$Session$4 $r7;
        java.lang.Object $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.util.List;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r2 = $r6;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.tv.TvTrackInfo) $r8;

        r5 = virtualinvoke r4.<android.media.tv.TvTrackInfo: java.lang.String getId()>();

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redundant track ID: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label2:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5);

        goto label1;

     label3:
        interfaceinvoke r2.<java.util.Set: void clear()>();

        $r7 = new android.media.tv.TvInputService$Session$4;

        specialinvoke $r7.<android.media.tv.TvInputService$Session$4: void <init>(android.media.tv.TvInputService$Session,java.util.List)>(r0, r1);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r7);

        return;
    }

    public void notifyTrackSelected(int, java.lang.String)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        java.lang.String r1;
        android.media.tv.TvInputService$Session$5 $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.media.tv.TvInputService$Session$5;

        specialinvoke $r2.<android.media.tv.TvInputService$Session$5: void <init>(android.media.tv.TvInputService$Session,int,java.lang.String)>(r0, i0, r1);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r2);

        return;
    }

    public void notifyVideoAvailable()
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.TvInputService$Session$6 $r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        $r1 = new android.media.tv.TvInputService$Session$6;

        specialinvoke $r1.<android.media.tv.TvInputService$Session$6: void <init>(android.media.tv.TvInputService$Session)>(r0);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r1);

        return;
    }

    public void notifyVideoUnavailable(int)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.media.tv.TvInputService$Session$7 $r6;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown reason: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $r6 = new android.media.tv.TvInputService$Session$7;

        specialinvoke $r6.<android.media.tv.TvInputService$Session$7: void <init>(android.media.tv.TvInputService$Session,int)>(r0, i0);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r6);

        return;
    }

    public void notifyContentAllowed()
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.TvInputService$Session$8 $r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        $r1 = new android.media.tv.TvInputService$Session$8;

        specialinvoke $r1.<android.media.tv.TvInputService$Session$8: void <init>(android.media.tv.TvInputService$Session)>(r0);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r1);

        return;
    }

    public void notifyContentBlocked(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.TvContentRating r1;
        android.media.tv.TvInputService$Session$9 $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.media.tv.TvContentRating;

        $r2 = new android.media.tv.TvInputService$Session$9;

        specialinvoke $r2.<android.media.tv.TvInputService$Session$9: void <init>(android.media.tv.TvInputService$Session,android.media.tv.TvContentRating)>(r0, r1);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r2);

        return;
    }

    public void layoutSurface(int, int, int, int)
    {
        android.media.tv.TvInputService$Session r0;
        int i0, i1, i2, i3;
        java.lang.IllegalArgumentException $r1;
        android.media.tv.TvInputService$Session$10 $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i0 > i2 goto label1;

        if i1 <= i3 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid parameter");

        throw $r1;

     label2:
        $r2 = new android.media.tv.TvInputService$Session$10;

        specialinvoke $r2.<android.media.tv.TvInputService$Session$10: void <init>(android.media.tv.TvInputService$Session,int,int,int,int)>(r0, i0, i1, i2, i3);

        specialinvoke r0.<android.media.tv.TvInputService$Session: void runOnMainThread(java.lang.Runnable)>($r2);

        return;
    }

    public abstract void onRelease();

    public void onSetMain(boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;

        r0 := @this: android.media.tv.TvInputService$Session;

        z0 := @parameter0: boolean;

        return;
    }

    public abstract boolean onSetSurface(android.view.Surface);

    public void onSurfaceChanged(int, int, int)
    {
        android.media.tv.TvInputService$Session r0;
        int i0, i1, i2;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public void onOverlayViewSizeChanged(int, int)
    {
        android.media.tv.TvInputService$Session r0;
        int i0, i1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public abstract void onSetStreamVolume(float);

    public abstract boolean onTune(android.net.Uri);

    public boolean onTune(android.net.Uri, android.os.Bundle)
    {
        android.media.tv.TvInputService$Session r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        $z0 = virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onTune(android.net.Uri)>(r1);

        return $z0;
    }

    public abstract void onSetCaptionEnabled(boolean);

    public void onUnblockContent(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.TvContentRating r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.media.tv.TvContentRating;

        return;
    }

    public boolean onSelectTrack(int, java.lang.String)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return 0;
    }

    public void onAppPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.media.tv.TvInputService$Session r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public android.view.View onCreateOverlayView()
    {
        android.media.tv.TvInputService$Session r0;

        r0 := @this: android.media.tv.TvInputService$Session;

        return null;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.media.tv.TvInputService$Session r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.media.tv.TvInputService$Session r0;
        android.view.MotionEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.media.tv.TvInputService$Session r0;
        android.view.MotionEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.media.tv.TvInputService$Session r0;
        android.view.MotionEvent r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    void release()
    {
        android.media.tv.TvInputService$Session r0;
        android.view.Surface $r1, $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void removeOverlayView(boolean)>(1);

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onRelease()>();

        $r1 = r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface>;

        virtualinvoke $r2.<android.view.Surface: void release()>();

        r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface> = null;

     label1:
        return;
    }

    void setMain(boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;

        r0 := @this: android.media.tv.TvInputService$Session;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onSetMain(boolean)>(z0);

        return;
    }

    void setSurface(android.view.Surface)
    {
        android.media.tv.TvInputService$Session r0;
        android.view.Surface r1, $r2, $r3;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.view.Surface;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onSetSurface(android.view.Surface)>(r1);

        $r2 = r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface>;

        virtualinvoke $r3.<android.view.Surface: void release()>();

     label1:
        r0.<android.media.tv.TvInputService$Session: android.view.Surface mSurface> = r1;

        return;
    }

    void dispatchSurfaceChanged(int, int, int)
    {
        android.media.tv.TvInputService$Session r0;
        int i0, i1, i2;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onSurfaceChanged(int,int,int)>(i0, i1, i2);

        return;
    }

    void setStreamVolume(float)
    {
        android.media.tv.TvInputService$Session r0;
        float f0;

        r0 := @this: android.media.tv.TvInputService$Session;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onSetStreamVolume(float)>(f0);

        return;
    }

    void tune(android.net.Uri, android.os.Bundle)
    {
        android.media.tv.TvInputService$Session r0;
        android.net.Uri r1;
        android.os.Bundle r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onTune(android.net.Uri,android.os.Bundle)>(r1, r2);

        return;
    }

    void setCaptionEnabled(boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;

        r0 := @this: android.media.tv.TvInputService$Session;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onSetCaptionEnabled(boolean)>(z0);

        return;
    }

    void selectTrack(int, java.lang.String)
    {
        android.media.tv.TvInputService$Session r0;
        int i0;
        java.lang.String r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onSelectTrack(int,java.lang.String)>(i0, r1);

        return;
    }

    void unblockContent(java.lang.String)
    {
        android.media.tv.TvInputService$Session r0;
        java.lang.String r1;
        android.media.tv.TvContentRating $r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>(r1);

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onUnblockContent(android.media.tv.TvContentRating)>($r2);

        return;
    }

    void appPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.media.tv.TvInputService$Session r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    void createOverlayView(android.os.IBinder, android.graphics.Rect)
    {
        android.media.tv.TvInputService$Session r0;
        android.os.IBinder r1;
        android.graphics.Rect r2;
        short s0, s1;
        android.view.View $r3, $r4, $r5, $r12, $r13;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0;
        android.view.WindowManager$LayoutParams $r6, $r7, $r8, $r9, $r10;
        android.view.WindowManager $r11, $r14;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        if $r3 == null goto label1;

        $r14 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager mWindowManager>;

        $r13 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        interfaceinvoke $r14.<android.view.WindowManager: void removeView(android.view.View)>($r13);

        r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView> = null;

     label1:
        r0.<android.media.tv.TvInputService$Session: android.os.IBinder mWindowToken> = r1;

        r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame> = r2;

        $i3 = r2.<android.graphics.Rect: int right>;

        $i2 = r2.<android.graphics.Rect: int left>;

        $i7 = $i3 - $i2;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i6 = $i5 - $i4;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onOverlayViewSizeChanged(int,int)>($i7, $i6);

        $z0 = r0.<android.media.tv.TvInputService$Session: boolean mOverlayViewEnabled>;

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = virtualinvoke r0.<android.media.tv.TvInputService$Session: android.view.View onCreateOverlayView()>();

        r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView> = $r4;

        $r5 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        if $r5 != null goto label3;

        return;

     label3:
        s0 = 1004;

        s1 = 536;

        $r6 = new android.view.WindowManager$LayoutParams;

        $i8 = r2.<android.graphics.Rect: int right>;

        $i9 = r2.<android.graphics.Rect: int left>;

        $i14 = $i8 - $i9;

        $i10 = r2.<android.graphics.Rect: int bottom>;

        $i11 = r2.<android.graphics.Rect: int top>;

        $i15 = $i10 - $i11;

        $i12 = r2.<android.graphics.Rect: int left>;

        $i13 = r2.<android.graphics.Rect: int top>;

        specialinvoke $r6.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>($i14, $i15, $i12, $i13, s0, s1, -2);

        r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams> = $r6;

        $r7 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $i16 = $r7.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i17 = $i16 | 64;

        $r7.<android.view.WindowManager$LayoutParams: int privateFlags> = $i17;

        $r8 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $r8.<android.view.WindowManager$LayoutParams: int gravity> = 8388659;

        $r10 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $r10.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = r1;

        $r11 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager mWindowManager>;

        $r12 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $r9 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r11.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r12, $r9);

        return;
    }

    void relayoutOverlayView(android.graphics.Rect)
    {
        android.media.tv.TvInputService$Session r0;
        android.graphics.Rect r1, $r2, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0;
        android.view.View $r3, $r10;
        android.view.WindowManager$LayoutParams $r4, $r5, $r6, $r7, $r8;
        android.view.WindowManager $r9;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame>;

        if $r2 == null goto label1;

        $r11 = r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame>;

        $i14 = virtualinvoke $r11.<android.graphics.Rect: int width()>();

        $i15 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        if $i14 != $i15 goto label1;

        $r12 = r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame>;

        $i17 = virtualinvoke $r12.<android.graphics.Rect: int height()>();

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i17 == $i16 goto label2;

     label1:
        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i5 = $i1 - $i0;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i4 = $i3 - $i2;

        virtualinvoke r0.<android.media.tv.TvInputService$Session: void onOverlayViewSizeChanged(int,int)>($i5, $i4);

     label2:
        r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame> = r1;

        $z0 = r0.<android.media.tv.TvInputService$Session: boolean mOverlayViewEnabled>;

        if $z0 == 0 goto label3;

        $r3 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        if $r3 != null goto label4;

     label3:
        return;

     label4:
        $r4 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $i6 = r1.<android.graphics.Rect: int left>;

        $r4.<android.view.WindowManager$LayoutParams: int x> = $i6;

        $r5 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $i7 = r1.<android.graphics.Rect: int top>;

        $r5.<android.view.WindowManager$LayoutParams: int y> = $i7;

        $r6 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $i10 = r1.<android.graphics.Rect: int right>;

        $i8 = r1.<android.graphics.Rect: int left>;

        $i9 = $i10 - $i8;

        $r6.<android.view.WindowManager$LayoutParams: int width> = $i9;

        $r8 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i11 = r1.<android.graphics.Rect: int top>;

        $i12 = $i13 - $i11;

        $r8.<android.view.WindowManager$LayoutParams: int height> = $i12;

        $r9 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager mWindowManager>;

        $r10 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $r7 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams>;

        interfaceinvoke $r9.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r10, $r7);

        return;
    }

    void removeOverlayView(boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;
        android.view.View $r1, $r2;
        android.view.WindowManager $r3;

        r0 := @this: android.media.tv.TvInputService$Session;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<android.media.tv.TvInputService$Session: android.os.IBinder mWindowToken> = null;

        r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame> = null;

     label1:
        $r1 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        if $r1 == null goto label2;

        $r3 = r0.<android.media.tv.TvInputService$Session: android.view.WindowManager mWindowManager>;

        $r2 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        interfaceinvoke $r3.<android.view.WindowManager: void removeView(android.view.View)>($r2);

        r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView> = null;

        r0.<android.media.tv.TvInputService$Session: android.view.WindowManager$LayoutParams mWindowParams> = null;

     label2:
        return;
    }

    int dispatchInputEvent(android.view.InputEvent, android.view.InputEventReceiver)
    {
        android.media.tv.TvInputService$Session r0;
        android.view.InputEvent r1;
        android.view.InputEventReceiver r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.view.KeyEvent r3;
        int i0, $i1, $i2;
        android.view.View $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        android.view.ViewRootImpl $r8, $r12, $r13;
        android.view.KeyEvent$DispatcherState $r14;
        android.view.MotionEvent r15;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.view.InputEvent;

        r2 := @parameter1: android.view.InputEventReceiver;

        z0 = 0;

        $z1 = r1 instanceof android.view.KeyEvent;

        if $z1 == 0 goto label2;

        r3 = (android.view.KeyEvent) r1;

        $i2 = virtualinvoke r3.<android.view.KeyEvent: int getKeyCode()>();

        z0 = staticinvoke <android.media.tv.TvInputService: boolean isNavigationKey(int)>($i2);

        $r14 = r0.<android.media.tv.TvInputService$Session: android.view.KeyEvent$DispatcherState mDispatcherState>;

        $z10 = virtualinvoke r3.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, $r14, r0);

        if $z10 == 0 goto label1;

        return 1;

     label1:
        goto label5;

     label2:
        $z2 = r1 instanceof android.view.MotionEvent;

        if $z2 == 0 goto label5;

        r15 = (android.view.MotionEvent) r1;

        i0 = virtualinvoke r15.<android.view.MotionEvent: int getSource()>();

        $z6 = virtualinvoke r15.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z6 == 0 goto label3;

        $z9 = virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onTouchEvent(android.view.MotionEvent)>(r15);

        if $z9 == 0 goto label5;

        return 1;

     label3:
        $i1 = i0 & 4;

        if $i1 == 0 goto label4;

        $z7 = virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onTrackballEvent(android.view.MotionEvent)>(r15);

        if $z7 == 0 goto label5;

        return 1;

     label4:
        $z8 = virtualinvoke r0.<android.media.tv.TvInputService$Session: boolean onGenericMotionEvent(android.view.MotionEvent)>(r15);

        if $z8 == 0 goto label5;

        return 1;

     label5:
        $r4 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        if $r4 == null goto label6;

        $r5 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $z3 = virtualinvoke $r5.<android.view.View: boolean isAttachedToWindow()>();

        if $z3 != 0 goto label7;

     label6:
        return 0;

     label7:
        $r6 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $z4 = virtualinvoke $r6.<android.view.View: boolean hasWindowFocus()>();

        if $z4 != 0 goto label8;

        $r11 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $r13 = virtualinvoke $r11.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r13.<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>(1, 1);

     label8:
        if z0 == 0 goto label9;

        $r9 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $z5 = virtualinvoke $r9.<android.view.View: boolean hasFocusable()>();

        if $z5 == 0 goto label9;

        $r10 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $r12 = virtualinvoke $r10.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r12.<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent)>(r1);

        return 1;

     label9:
        $r7 = r0.<android.media.tv.TvInputService$Session: android.view.View mOverlayView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r8.<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent,android.view.InputEventReceiver)>(r1, r2);

        return -1;
    }

    private void setSessionCallback(android.media.tv.ITvInputSessionCallback)
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.ITvInputSessionCallback r1;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: android.media.tv.ITvInputSessionCallback;

        r0.<android.media.tv.TvInputService$Session: android.media.tv.ITvInputSessionCallback mSessionCallback> = r1;

        return;
    }

    private final void runOnMainThread(java.lang.Runnable)
    {
        android.media.tv.TvInputService$Session r0;
        java.lang.Runnable r1;
        android.os.Handler $r2, $r4;
        android.os.Looper $r3;
        boolean $z0;
        android.media.tv.ITvInputSessionCallback $r5;

        r0 := @this: android.media.tv.TvInputService$Session;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.media.tv.TvInputService$Session: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        $z0 = virtualinvoke $r3.<android.os.Looper: boolean isCurrentThread()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<android.media.tv.TvInputService$Session: android.media.tv.ITvInputSessionCallback mSessionCallback>;

        if $r5 == null goto label1;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        goto label2;

     label1:
        $r4 = r0.<android.media.tv.TvInputService$Session: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

     label2:
        return;
    }

    static boolean access$300(android.media.tv.TvInputService$Session)
    {
        android.media.tv.TvInputService$Session r0;
        boolean $z0;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        $z0 = r0.<android.media.tv.TvInputService$Session: boolean mOverlayViewEnabled>;

        return $z0;
    }

    static boolean access$302(android.media.tv.TvInputService$Session, boolean)
    {
        android.media.tv.TvInputService$Session r0;
        boolean z0;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        z0 := @parameter1: boolean;

        r0.<android.media.tv.TvInputService$Session: boolean mOverlayViewEnabled> = z0;

        return z0;
    }

    static android.os.IBinder access$400(android.media.tv.TvInputService$Session)
    {
        android.media.tv.TvInputService$Session r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        $r1 = r0.<android.media.tv.TvInputService$Session: android.os.IBinder mWindowToken>;

        return $r1;
    }

    static android.graphics.Rect access$500(android.media.tv.TvInputService$Session)
    {
        android.media.tv.TvInputService$Session r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        $r1 = r0.<android.media.tv.TvInputService$Session: android.graphics.Rect mOverlayFrame>;

        return $r1;
    }

    static android.media.tv.ITvInputSessionCallback access$600(android.media.tv.TvInputService$Session)
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.ITvInputSessionCallback $r1;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        $r1 = r0.<android.media.tv.TvInputService$Session: android.media.tv.ITvInputSessionCallback mSessionCallback>;

        return $r1;
    }

    static void access$1100(android.media.tv.TvInputService$Session, android.media.tv.ITvInputSessionCallback)
    {
        android.media.tv.TvInputService$Session r0;
        android.media.tv.ITvInputSessionCallback r1;

        r0 := @parameter0: android.media.tv.TvInputService$Session;

        r1 := @parameter1: android.media.tv.ITvInputSessionCallback;

        specialinvoke r0.<android.media.tv.TvInputService$Session: void setSessionCallback(android.media.tv.ITvInputSessionCallback)>(r1);

        return;
    }
}
