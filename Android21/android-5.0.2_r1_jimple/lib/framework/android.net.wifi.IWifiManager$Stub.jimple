public abstract class android.net.wifi.IWifiManager$Stub extends android.os.Binder implements android.net.wifi.IWifiManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getSupportedFeatures;
    static final int TRANSACTION_reportActivityInfo;
    static final int TRANSACTION_getConfiguredNetworks;
    static final int TRANSACTION_getPrivilegedConfiguredNetworks;
    static final int TRANSACTION_addOrUpdateNetwork;
    static final int TRANSACTION_removeNetwork;
    static final int TRANSACTION_enableNetwork;
    static final int TRANSACTION_disableNetwork;
    static final int TRANSACTION_pingSupplicant;
    static final int TRANSACTION_getChannelList;
    static final int TRANSACTION_startScan;
    static final int TRANSACTION_getScanResults;
    static final int TRANSACTION_disconnect;
    static final int TRANSACTION_reconnect;
    static final int TRANSACTION_reassociate;
    static final int TRANSACTION_getConnectionInfo;
    static final int TRANSACTION_setWifiEnabled;
    static final int TRANSACTION_getWifiEnabledState;
    static final int TRANSACTION_setCountryCode;
    static final int TRANSACTION_setFrequencyBand;
    static final int TRANSACTION_getFrequencyBand;
    static final int TRANSACTION_isDualBandSupported;
    static final int TRANSACTION_saveConfiguration;
    static final int TRANSACTION_getDhcpInfo;
    static final int TRANSACTION_isScanAlwaysAvailable;
    static final int TRANSACTION_acquireWifiLock;
    static final int TRANSACTION_updateWifiLockWorkSource;
    static final int TRANSACTION_releaseWifiLock;
    static final int TRANSACTION_initializeMulticastFiltering;
    static final int TRANSACTION_isMulticastEnabled;
    static final int TRANSACTION_acquireMulticastLock;
    static final int TRANSACTION_releaseMulticastLock;
    static final int TRANSACTION_setWifiApEnabled;
    static final int TRANSACTION_getWifiApEnabledState;
    static final int TRANSACTION_getWifiApConfiguration;
    static final int TRANSACTION_setWifiApConfiguration;
    static final int TRANSACTION_startWifi;
    static final int TRANSACTION_stopWifi;
    static final int TRANSACTION_addToBlacklist;
    static final int TRANSACTION_clearBlacklist;
    static final int TRANSACTION_getWifiServiceMessenger;
    static final int TRANSACTION_getConfigFile;
    static final int TRANSACTION_enableTdls;
    static final int TRANSACTION_enableTdlsWithMacAddress;
    static final int TRANSACTION_requestBatchedScan;
    static final int TRANSACTION_stopBatchedScan;
    static final int TRANSACTION_getBatchedScanResults;
    static final int TRANSACTION_isBatchedScanSupported;
    static final int TRANSACTION_pollBatchedScan;
    static final int TRANSACTION_getWpsNfcConfigurationToken;
    static final int TRANSACTION_enableVerboseLogging;
    static final int TRANSACTION_getVerboseLoggingLevel;
    static final int TRANSACTION_getAggressiveHandover;
    static final int TRANSACTION_enableAggressiveHandover;
    static final int TRANSACTION_getAllowScansWithTraffic;
    static final int TRANSACTION_setAllowScansWithTraffic;
    static final int TRANSACTION_getConnectionStatistics;

    public void <init>()
    {
        android.net.wifi.IWifiManager$Stub r0;

        r0 := @this: android.net.wifi.IWifiManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.wifi.IWifiManager");

        return;
    }

    public static android.net.wifi.IWifiManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.wifi.IWifiManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.wifi.IWifiManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.wifi.IWifiManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.wifi.IWifiManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.wifi.IWifiManager$Stub$Proxy;

        specialinvoke $r2.<android.net.wifi.IWifiManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.wifi.IWifiManager$Stub r0;

        r0 := @this: android.net.wifi.IWifiManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.wifi.IWifiManager$Stub r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i21, $i24, $i25, $i26, $i27, $i30, $i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48;
        android.os.Parcel r1, r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27;
        android.os.WorkSource r3, r30, r39, r53;
        byte $b4, $b8, $b14, $b16, $b18, $b19, $b20, $b22, $b23, $b28, $b29, $b31, $b32;
        android.os.Parcelable$Creator $r4, $r6, $r8, $r10, $r13, $r14, $r16, $r19, $r21, $r23;
        java.lang.Object $r5, $r7, $r9, $r11, $r12, $r15, $r17, $r18, $r20, $r22;
        android.net.wifi.WifiActivityEnergyInfo r24;
        java.util.List r25, r26, r28, r32, r56;
        android.net.wifi.WifiConfiguration r27, r43, r44, r45;
        android.net.wifi.ScanSettings r29;
        java.lang.String r31, r34, r37, r42, r46, r48, r49, r50, r55, r57;
        android.net.wifi.WifiInfo r33;
        android.net.DhcpInfo r35;
        android.os.IBinder r36, r38, r40, r41, r52;
        android.os.Messenger r47;
        android.net.wifi.BatchedScanSettings r51, r54;
        android.net.wifi.WifiConnectionStatistics r58;

        r0 := @this: android.net.wifi.IWifiManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label006;
            case 4: goto label007;
            case 5: goto label008;
            case 6: goto label011;
            case 7: goto label014;
            case 8: goto label019;
            case 9: goto label022;
            case 10: goto label025;
            case 11: goto label026;
            case 12: goto label031;
            case 13: goto label032;
            case 14: goto label033;
            case 15: goto label034;
            case 16: goto label035;
            case 17: goto label038;
            case 18: goto label043;
            case 19: goto label044;
            case 20: goto label047;
            case 21: goto label050;
            case 22: goto label051;
            case 23: goto label054;
            case 24: goto label057;
            case 25: goto label060;
            case 26: goto label063;
            case 27: goto label068;
            case 28: goto label071;
            case 29: goto label074;
            case 30: goto label075;
            case 31: goto label078;
            case 32: goto label079;
            case 33: goto label080;
            case 34: goto label085;
            case 35: goto label086;
            case 36: goto label089;
            case 37: goto label092;
            case 38: goto label093;
            case 39: goto label094;
            case 40: goto label095;
            case 41: goto label096;
            case 42: goto label099;
            case 43: goto label100;
            case 44: goto label103;
            case 45: goto label106;
            case 46: goto label113;
            case 47: goto label116;
            case 48: goto label117;
            case 49: goto label120;
            case 50: goto label121;
            case 51: goto label122;
            case 52: goto label123;
            case 53: goto label124;
            case 54: goto label125;
            case 55: goto label126;
            case 56: goto label127;
            case 57: goto label128;
            case 1598968902: goto label001;
            default: goto label131;
        };

     label001:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.net.wifi.IWifiManager");

        return 1;

     label002:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i2 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getSupportedFeatures()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        return 1;

     label003:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r24 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r24 == null goto label004;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r24.<android.net.wifi.WifiActivityEnergyInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label005;

     label004:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label005:
        return 1;

     label006:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r25 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.util.List getConfiguredNetworks()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r25);

        return 1;

     label007:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r26 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.util.List getPrivilegedConfiguredNetworks()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r26);

        return 1;

     label008:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i33 goto label009;

        $r23 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r22 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r27 = (android.net.wifi.WifiConfiguration) $r22;

        goto label010;

     label009:
        r27 = null;

     label010:
        i3 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>(r27);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        return 1;

     label011:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z10 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean removeNetwork(int)>(i34);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z10 == 0 goto label012;

        $b32 = 1;

        goto label013;

     label012:
        $b32 = 0;

     label013:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b32);

        return 1;

     label014:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i30 goto label015;

        $z8 = 1;

        goto label016;

     label015:
        $z8 = 0;

     label016:
        z11 = $z8;

        z0 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean enableNetwork(int,boolean)>(i35, z11);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z0 == 0 goto label017;

        $b29 = 1;

        goto label018;

     label017:
        $b29 = 0;

     label018:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b29);

        return 1;

     label019:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z12 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean disableNetwork(int)>(i36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z12 == 0 goto label020;

        $b31 = 1;

        goto label021;

     label020:
        $b31 = 0;

     label021:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b31);

        return 1;

     label022:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z13 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean pingSupplicant()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z13 == 0 goto label023;

        $b28 = 1;

        goto label024;

     label023:
        $b28 = 0;

     label024:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b28);

        return 1;

     label025:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r28 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.util.List getChannelList()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r28);

        return 1;

     label026:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i27 goto label027;

        $r19 = <android.net.wifi.ScanSettings: android.os.Parcelable$Creator CREATOR>;

        $r18 = interfaceinvoke $r19.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r29 = (android.net.wifi.ScanSettings) $r18;

        goto label028;

     label027:
        r29 = null;

     label028:
        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i26 goto label029;

        $r21 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r20 = interfaceinvoke $r21.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r30 = (android.os.WorkSource) $r20;

        goto label030;

     label029:
        r30 = null;

     label030:
        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>(r29, r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label031:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r31 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r32 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.util.List getScanResults(java.lang.String)>(r31);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r32);

        return 1;

     label032:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void disconnect()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label033:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void reconnect()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label034:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void reassociate()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label035:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r33 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiInfo getConnectionInfo()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r33 == null goto label036;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r33.<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label037;

     label036:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label037:
        return 1;

     label038:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i24 goto label039;

        $z7 = 1;

        goto label040;

     label039:
        $z7 = 0;

     label040:
        z14 = $z7;

        z15 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean setWifiEnabled(boolean)>(z14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z15 == 0 goto label041;

        $b23 = 1;

        goto label042;

     label041:
        $b23 = 0;

     label042:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b23);

        return 1;

     label043:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i37 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getWifiEnabledState()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i37);

        return 1;

     label044:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r34 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i25 goto label045;

        $z6 = 1;

        goto label046;

     label045:
        $z6 = 0;

     label046:
        z16 = $z6;

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void setCountryCode(java.lang.String,boolean)>(r34, z16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label047:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i21 goto label048;

        $z5 = 1;

        goto label049;

     label048:
        $z5 = 0;

     label049:
        z17 = $z5;

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void setFrequencyBand(int,boolean)>(i38, z17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label050:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i39 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getFrequencyBand()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i39);

        return 1;

     label051:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z18 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean isDualBandSupported()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z18 == 0 goto label052;

        $b22 = 1;

        goto label053;

     label052:
        $b22 = 0;

     label053:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b22);

        return 1;

     label054:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z19 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean saveConfiguration()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z19 == 0 goto label055;

        $b19 = 1;

        goto label056;

     label055:
        $b19 = 0;

     label056:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b19);

        return 1;

     label057:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r35 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.net.DhcpInfo getDhcpInfo()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r35 == null goto label058;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r35.<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label059;

     label058:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label059:
        return 1;

     label060:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z20 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean isScanAlwaysAvailable()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z20 == 0 goto label061;

        $b18 = 1;

        goto label062;

     label061:
        $b18 = 0;

     label062:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b18);

        return 1;

     label063:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r36 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i40 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r37 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i17 goto label064;

        $r16 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r17 = interfaceinvoke $r16.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r3 = (android.os.WorkSource) $r17;

        goto label065;

     label064:
        r3 = null;

     label065:
        z1 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>(r36, i40, r37, r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z1 == 0 goto label066;

        $b20 = 1;

        goto label067;

     label066:
        $b20 = 0;

     label067:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b20);

        return 1;

     label068:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r38 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i15 goto label069;

        $r14 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r39 = (android.os.WorkSource) $r15;

        goto label070;

     label069:
        r39 = null;

     label070:
        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>(r38, r39);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label071:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r40 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        z21 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean releaseWifiLock(android.os.IBinder)>(r40);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z21 == 0 goto label072;

        $b14 = 1;

        goto label073;

     label072:
        $b14 = 0;

     label073:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b14);

        return 1;

     label074:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void initializeMulticastFiltering()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label075:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z22 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean isMulticastEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z22 == 0 goto label076;

        $b16 = 1;

        goto label077;

     label076:
        $b16 = 0;

     label077:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b16);

        return 1;

     label078:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r41 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r42 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void acquireMulticastLock(android.os.IBinder,java.lang.String)>(r41, r42);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label079:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void releaseMulticastLock()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label080:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i13 goto label081;

        $r13 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r43 = (android.net.wifi.WifiConfiguration) $r12;

        goto label082;

     label081:
        r43 = null;

     label082:
        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i12 goto label083;

        $z4 = 1;

        goto label084;

     label083:
        $z4 = 0;

     label084:
        z23 = $z4;

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>(r43, z23);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label085:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i41 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getWifiApEnabledState()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i41);

        return 1;

     label086:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r44 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiConfiguration getWifiApConfiguration()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r44 == null goto label087;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r44.<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label088;

     label087:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label088:
        return 1;

     label089:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i11 goto label090;

        $r10 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r45 = (android.net.wifi.WifiConfiguration) $r11;

        goto label091;

     label090:
        r45 = null;

     label091:
        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>(r45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void startWifi()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label093:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void stopWifi()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label094:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void addToBlacklist(java.lang.String)>(r46);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label095:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void clearBlacklist()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label096:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r47 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.os.Messenger getWifiServiceMessenger()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r47 == null goto label097;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r47.<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label098;

     label097:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label098:
        return 1;

     label099:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r48 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.lang.String getConfigFile()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r48);

        return 1;

     label100:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label101;

        $z3 = 1;

        goto label102;

     label101:
        $z3 = 0;

     label102:
        z24 = $z3;

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void enableTdls(java.lang.String,boolean)>(r49, z24);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label103:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r50 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label104;

        $z2 = 1;

        goto label105;

     label104:
        $z2 = 0;

     label105:
        z25 = $z2;

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void enableTdlsWithMacAddress(java.lang.String,boolean)>(r50, z25);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label106:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label107;

        $r8 = <android.net.wifi.BatchedScanSettings: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r51 = (android.net.wifi.BatchedScanSettings) $r9;

        goto label108;

     label107:
        r51 = null;

     label108:
        r52 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label109;

        $r6 = <android.os.WorkSource: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r53 = (android.os.WorkSource) $r7;

        goto label110;

     label109:
        r53 = null;

     label110:
        z26 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>(r51, r52, r53);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z26 == 0 goto label111;

        $b8 = 1;

        goto label112;

     label111:
        $b8 = 0;

     label112:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b8);

        return 1;

     label113:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label114;

        $r4 = <android.net.wifi.BatchedScanSettings: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r54 = (android.net.wifi.BatchedScanSettings) $r5;

        goto label115;

     label114:
        r54 = null;

     label115:
        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>(r54);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label116:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r55 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r56 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.util.List getBatchedScanResults(java.lang.String)>(r55);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedList(java.util.List)>(r56);

        return 1;

     label117:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        z27 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: boolean isBatchedScanSupported()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z27 == 0 goto label118;

        $b4 = 1;

        goto label119;

     label118:
        $b4 = 0;

     label119:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b4);

        return 1;

     label120:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void pollBatchedScan()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label121:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r57 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: java.lang.String getWpsNfcConfigurationToken(int)>(i42);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r57);

        return 1;

     label122:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void enableVerboseLogging(int)>(i43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i44 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getVerboseLoggingLevel()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i44);

        return 1;

     label124:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i45 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getAggressiveHandover()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i45);

        return 1;

     label125:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i46 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void enableAggressiveHandover(int)>(i46);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label126:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i47 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: int getAllowScansWithTraffic()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i47);

        return 1;

     label127:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: void setAllowScansWithTraffic(int)>(i48);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label128:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.wifi.IWifiManager");

        r58 = virtualinvoke r0.<android.net.wifi.IWifiManager$Stub: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r58 == null goto label129;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r58.<android.net.wifi.WifiConnectionStatistics: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label130;

     label129:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label130:
        return 1;

     label131:
        $z9 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z9;
    }

    public static void <clinit>()
    {
        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getConnectionStatistics> = 57;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setAllowScansWithTraffic> = 56;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getAllowScansWithTraffic> = 55;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_enableAggressiveHandover> = 54;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getAggressiveHandover> = 53;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getVerboseLoggingLevel> = 52;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_enableVerboseLogging> = 51;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getWpsNfcConfigurationToken> = 50;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_pollBatchedScan> = 49;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_isBatchedScanSupported> = 48;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getBatchedScanResults> = 47;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_stopBatchedScan> = 46;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_requestBatchedScan> = 45;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_enableTdlsWithMacAddress> = 44;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_enableTdls> = 43;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getConfigFile> = 42;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getWifiServiceMessenger> = 41;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_clearBlacklist> = 40;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_addToBlacklist> = 39;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_stopWifi> = 38;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_startWifi> = 37;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setWifiApConfiguration> = 36;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getWifiApConfiguration> = 35;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getWifiApEnabledState> = 34;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setWifiApEnabled> = 33;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_releaseMulticastLock> = 32;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_acquireMulticastLock> = 31;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_isMulticastEnabled> = 30;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_initializeMulticastFiltering> = 29;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_releaseWifiLock> = 28;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_updateWifiLockWorkSource> = 27;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_acquireWifiLock> = 26;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_isScanAlwaysAvailable> = 25;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getDhcpInfo> = 24;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_saveConfiguration> = 23;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_isDualBandSupported> = 22;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getFrequencyBand> = 21;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setFrequencyBand> = 20;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setCountryCode> = 19;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getWifiEnabledState> = 18;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_setWifiEnabled> = 17;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getConnectionInfo> = 16;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_reassociate> = 15;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_reconnect> = 14;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_disconnect> = 13;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getScanResults> = 12;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_startScan> = 11;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getChannelList> = 10;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_pingSupplicant> = 9;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_disableNetwork> = 8;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_enableNetwork> = 7;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_removeNetwork> = 6;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_addOrUpdateNetwork> = 5;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getPrivilegedConfiguredNetworks> = 4;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getConfiguredNetworks> = 3;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_reportActivityInfo> = 2;

        <android.net.wifi.IWifiManager$Stub: int TRANSACTION_getSupportedFeatures> = 1;

        <android.net.wifi.IWifiManager$Stub: java.lang.String DESCRIPTOR> = "android.net.wifi.IWifiManager";

        return;
    }
}
