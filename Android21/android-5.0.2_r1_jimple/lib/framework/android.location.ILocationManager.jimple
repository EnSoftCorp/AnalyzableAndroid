public interface  android.location.ILocationManager extends java.lang.Object implements android.os.IInterface
{

    public abstract void requestLocationUpdates(android.location.LocationRequest, android.location.ILocationListener, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract void removeUpdates(android.location.ILocationListener, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract void requestGeofence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract void removeGeofence(android.location.Geofence, android.app.PendingIntent, java.lang.String) throws android.os.RemoteException;

    public abstract android.location.Location getLastLocation(android.location.LocationRequest, java.lang.String) throws android.os.RemoteException;

    public abstract boolean addGpsStatusListener(android.location.IGpsStatusListener, java.lang.String) throws android.os.RemoteException;

    public abstract void removeGpsStatusListener(android.location.IGpsStatusListener) throws android.os.RemoteException;

    public abstract boolean geocoderIsPresent() throws android.os.RemoteException;

    public abstract java.lang.String getFromLocation(double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException;

    public abstract java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, android.location.GeocoderParams, java.util.List) throws android.os.RemoteException;

    public abstract boolean sendNiResponse(int, int) throws android.os.RemoteException;

    public abstract boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener, java.lang.String) throws android.os.RemoteException;

    public abstract boolean removeGpsMeasurementsListener(android.location.IGpsMeasurementsListener) throws android.os.RemoteException;

    public abstract boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener, java.lang.String) throws android.os.RemoteException;

    public abstract boolean removeGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener) throws android.os.RemoteException;

    public abstract java.util.List getAllProviders() throws android.os.RemoteException;

    public abstract java.util.List getProviders(android.location.Criteria, boolean) throws android.os.RemoteException;

    public abstract java.lang.String getBestProvider(android.location.Criteria, boolean) throws android.os.RemoteException;

    public abstract boolean providerMeetsCriteria(java.lang.String, android.location.Criteria) throws android.os.RemoteException;

    public abstract com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String) throws android.os.RemoteException;

    public abstract boolean isProviderEnabled(java.lang.String) throws android.os.RemoteException;

    public abstract void addTestProvider(java.lang.String, com.android.internal.location.ProviderProperties) throws android.os.RemoteException;

    public abstract void removeTestProvider(java.lang.String) throws android.os.RemoteException;

    public abstract void setTestProviderLocation(java.lang.String, android.location.Location) throws android.os.RemoteException;

    public abstract void clearTestProviderLocation(java.lang.String) throws android.os.RemoteException;

    public abstract void setTestProviderEnabled(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void clearTestProviderEnabled(java.lang.String) throws android.os.RemoteException;

    public abstract void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long) throws android.os.RemoteException;

    public abstract void clearTestProviderStatus(java.lang.String) throws android.os.RemoteException;

    public abstract boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException;

    public abstract void reportLocation(android.location.Location, boolean) throws android.os.RemoteException;

    public abstract void locationCallbackFinished(android.location.ILocationListener) throws android.os.RemoteException;
}
