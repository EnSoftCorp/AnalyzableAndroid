public final class android.database.CursorToBulkCursorAdaptor extends android.database.BulkCursorNative implements android.os.IBinder$DeathRecipient
{
    private static final java.lang.String TAG;
    private final java.lang.Object mLock;
    private final java.lang.String mProviderName;
    private android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver;
    private android.database.CrossProcessCursor mCursor;
    private android.database.CursorWindow mFilledWindow;

    public void <init>(android.database.Cursor, android.database.IContentObserver, java.lang.String)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.Cursor r1;
        android.database.IContentObserver r2;
        java.lang.String r3;
        java.lang.Object r4, $r6, $r8;
        java.lang.Throwable r5, $r10;
        boolean $z0;
        android.database.CrossProcessCursorWrapper $r7;
        android.database.CrossProcessCursor $r9;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.database.IContentObserver;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.database.BulkCursorNative: void <init>()>();

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock> = $r6;

        $z0 = r1 instanceof android.database.CrossProcessCursor;

        if $z0 == 0 goto label1;

        $r9 = (android.database.CrossProcessCursor) r1;

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor> = $r9;

        goto label2;

     label1:
        $r7 = new android.database.CrossProcessCursorWrapper;

        specialinvoke $r7.<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>(r1);

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor> = $r7;

     label2:
        r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName> = r3;

        $r8 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r4 = $r8;

        entermonitor $r8;

     label3:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxyLocked(android.database.IContentObserver)>(r2);

        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void closeFilledWindowLocked()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.CursorWindow $r1, $r2;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow>;

        virtualinvoke $r2.<android.database.CursorWindow: void close()>();

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow> = null;

     label1:
        return;
    }

    private void disposeLocked()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.CrossProcessCursor $r1, $r2;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void unregisterObserverProxyLocked()>();

        $r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r2.<android.database.CrossProcessCursor: void close()>();

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor> = null;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>();

        return;
    }

    private void throwIfCursorIsClosed()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.CrossProcessCursor $r1;
        android.database.StaleDataException $r2;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        if $r1 != null goto label1;

        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Attempted to access a cursor after it has been closed.");

        throw $r2;

     label1:
        return;
    }

    public void binderDied()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void disposeLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.database.BulkCursorDescriptor getBulkCursorDescriptor()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        java.lang.Object r1, $r4;
        android.database.BulkCursorDescriptor r2, $r5;
        java.lang.Throwable r3, $r13;
        android.database.CrossProcessCursor $r6, $r8, $r9, $r10;
        java.lang.String[] $r7;
        boolean $z0;
        int $i0;
        android.database.CursorWindow $r11, $r12, $r14;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        $r5 = new android.database.BulkCursorDescriptor;

        specialinvoke $r5.<android.database.BulkCursorDescriptor: void <init>()>();

        r2 = $r5;

        r2.<android.database.BulkCursorDescriptor: android.database.IBulkCursor cursor> = r0;

        $r6 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r7 = interfaceinvoke $r6.<android.database.CrossProcessCursor: java.lang.String[] getColumnNames()>();

        r2.<android.database.BulkCursorDescriptor: java.lang.String[] columnNames> = $r7;

        $r8 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r8.<android.database.CrossProcessCursor: boolean getWantsAllOnMoveCalls()>();

        r2.<android.database.BulkCursorDescriptor: boolean wantsAllOnMoveCalls> = $z0;

        $r9 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r9.<android.database.CrossProcessCursor: int getCount()>();

        r2.<android.database.BulkCursorDescriptor: int count> = $i0;

        $r10 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r11 = interfaceinvoke $r10.<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>();

        r2.<android.database.BulkCursorDescriptor: android.database.CursorWindow window> = $r11;

        $r12 = r2.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        if $r12 == null goto label2;

        $r14 = r2.<android.database.BulkCursorDescriptor: android.database.CursorWindow window>;

        virtualinvoke $r14.<android.database.CursorWindow: void acquireReference()>();

     label2:
        exitmonitor r1;

     label3:
        return r2;

     label4:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.database.CursorWindow getWindow(int)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1, $r4;
        android.database.CursorWindow r2, $r9;
        java.lang.Throwable r3, $r10;
        android.database.CrossProcessCursor $r5, $r6, $r7;
        boolean $z0;
        java.lang.String $r8;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        i0 := @parameter0: int;

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        $r5 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r5.<android.database.CrossProcessCursor: boolean moveToPosition(int)>(i0);

        if $z0 != 0 goto label03;

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>();

        exitmonitor r1;

     label02:
        return null;

     label03:
        $r6 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        r2 = interfaceinvoke $r6.<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>();

        if r2 == null goto label04;

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>();

        goto label08;

     label04:
        r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow>;

        if r2 != null goto label05;

        $r9 = new android.database.CursorWindow;

        $r8 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName>;

        specialinvoke $r9.<android.database.CursorWindow: void <init>(java.lang.String)>($r8);

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow> = $r9;

        r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow mFilledWindow>;

        goto label07;

     label05:
        $i1 = virtualinvoke r2.<android.database.CursorWindow: int getStartPosition()>();

        if i0 < $i1 goto label06;

        $i2 = virtualinvoke r2.<android.database.CursorWindow: int getStartPosition()>();

        $i3 = virtualinvoke r2.<android.database.CursorWindow: int getNumRows()>();

        $i4 = $i2 + $i3;

        if i0 < $i4 goto label07;

     label06:
        virtualinvoke r2.<android.database.CursorWindow: void clear()>();

     label07:
        $r7 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r7.<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>(i0, r2);

     label08:
        if r2 == null goto label09;

        virtualinvoke r2.<android.database.CursorWindow: void acquireReference()>();

     label09:
        exitmonitor r1;

     label10:
        return r2;

     label11:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void onMove(int)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.database.CrossProcessCursor $r4, $r5;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        i0 := @parameter0: int;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        $r5 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i1 = interfaceinvoke $r4.<android.database.CrossProcessCursor: int getPosition()>();

        interfaceinvoke $r5.<android.database.CrossProcessCursor: boolean onMove(int,int)>($i1, i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void deactivate()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.database.CrossProcessCursor $r4, $r5;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        if $r4 == null goto label2;

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void unregisterObserverProxyLocked()>();

        $r5 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        interfaceinvoke $r5.<android.database.CrossProcessCursor: void deactivate()>();

     label2:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void close()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void disposeLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int requery(android.database.IContentObserver)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.IContentObserver r1;
        java.lang.Object r2, $r6;
        java.lang.IllegalStateException r3, r4, $r10, $r12;
        java.lang.Throwable r5, $r9;
        android.database.CrossProcessCursor $r7, $r8, $r15;
        boolean $z0, $z1;
        int $i0;
        java.lang.StringBuilder $r11, $r13, $r16, $r17;
        java.lang.String $r14, $r18;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        r1 := @parameter0: android.database.IContentObserver;

        $r6 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void closeFilledWindowLocked()>();

     label02:
        $r7 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z0 = interfaceinvoke $r7.<android.database.CrossProcessCursor: boolean requery()>();

        if $z0 != 0 goto label05;

     label03:
        exitmonitor r2;

     label04:
        return -1;

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        r3 = $r10;

        $r12 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.String mProviderName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Requery misuse db, mCursor isClosed:");

        $r15 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $z1 = interfaceinvoke $r15.<android.database.CrossProcessCursor: boolean isClosed()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r3);

        r4 = $r12;

        throw r4;

     label07:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void unregisterObserverProxyLocked()>();

        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void createAndRegisterObserverProxyLocked(android.database.IContentObserver)>(r1);

        $r8 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $i0 = interfaceinvoke $r8.<android.database.CrossProcessCursor: int getCount()>();

        exitmonitor r2;

     label08:
        return $i0;

     label09:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label10:
        throw r5;

        catch java.lang.IllegalStateException from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void createAndRegisterObserverProxyLocked(android.database.IContentObserver)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.IContentObserver r1;
        android.database.CursorToBulkCursorAdaptor$ContentObserverProxy $r2, $r3, $r4;
        android.database.CrossProcessCursor $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        r1 := @parameter0: android.database.IContentObserver;

        $r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        if $r2 == null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("an observer is already registered");

        throw $r6;

     label1:
        $r3 = new android.database.CursorToBulkCursorAdaptor$ContentObserverProxy;

        specialinvoke $r3.<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder$DeathRecipient)>(r1, r0);

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver> = $r3;

        $r5 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        interfaceinvoke $r5.<android.database.CrossProcessCursor: void registerContentObserver(android.database.ContentObserver)>($r4);

        return;
    }

    private void unregisterObserverProxyLocked()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.database.CursorToBulkCursorAdaptor$ContentObserverProxy $r1, $r2, $r4;
        android.database.CrossProcessCursor $r3;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r1 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        if $r1 == null goto label1;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r2 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        interfaceinvoke $r3.<android.database.CrossProcessCursor: void unregisterContentObserver(android.database.ContentObserver)>($r2);

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver>;

        virtualinvoke $r4.<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder$DeathRecipient)>(r0);

        r0.<android.database.CursorToBulkCursorAdaptor: android.database.CursorToBulkCursorAdaptor$ContentObserverProxy mObserver> = null;

     label1:
        return;
    }

    public android.os.Bundle getExtras()
    {
        android.database.CursorToBulkCursorAdaptor r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.database.CrossProcessCursor $r4;
        android.os.Bundle $r5;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        $r3 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r5 = interfaceinvoke $r4.<android.database.CrossProcessCursor: android.os.Bundle getExtras()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        android.database.CursorToBulkCursorAdaptor r0;
        android.os.Bundle r1, $r6;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        android.database.CrossProcessCursor $r5;

        r0 := @this: android.database.CursorToBulkCursorAdaptor;

        r1 := @parameter0: android.os.Bundle;

        $r4 = r0.<android.database.CursorToBulkCursorAdaptor: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<android.database.CursorToBulkCursorAdaptor: void throwIfCursorIsClosed()>();

        $r5 = r0.<android.database.CursorToBulkCursorAdaptor: android.database.CrossProcessCursor mCursor>;

        $r6 = interfaceinvoke $r5.<android.database.CrossProcessCursor: android.os.Bundle respond(android.os.Bundle)>(r1);

        exitmonitor r2;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <android.database.CursorToBulkCursorAdaptor: java.lang.String TAG> = "Cursor";

        return;
    }
}
