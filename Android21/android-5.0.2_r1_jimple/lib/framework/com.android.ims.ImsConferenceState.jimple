public class com.android.ims.ImsConferenceState extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String USER;
    public static final java.lang.String DISPLAY_TEXT;
    public static final java.lang.String ENDPOINT;
    public static final java.lang.String STATUS;
    public static final java.lang.String STATUS_PENDING;
    public static final java.lang.String STATUS_DIALING_OUT;
    public static final java.lang.String STATUS_DIALING_IN;
    public static final java.lang.String STATUS_ALERTING;
    public static final java.lang.String STATUS_ON_HOLD;
    public static final java.lang.String STATUS_CONNECTED;
    public static final java.lang.String STATUS_DISCONNECTING;
    public static final java.lang.String STATUS_DISCONNECTED;
    public static final java.lang.String STATUS_MUTED_VIA_FOCUS;
    public static final java.lang.String STATUS_CONNECT_FAIL;
    public static final java.lang.String SIP_STATUS_CODE;
    public java.util.HashMap mParticipants;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        com.android.ims.ImsConferenceState r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.ims.ImsConferenceState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants> = $r1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.ims.ImsConferenceState r0;
        android.os.Parcel r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.ims.ImsConferenceState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants> = $r2;

        specialinvoke r0.<com.android.ims.ImsConferenceState: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public int describeContents()
    {
        com.android.ims.ImsConferenceState r0;

        r0 := @this: com.android.ims.ImsConferenceState;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.ims.ImsConferenceState r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.HashMap $r5, $r6, $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10;
        java.lang.String $r11;
        android.os.Parcelable $r12;

        r0 := @this: com.android.ims.ImsConferenceState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        $i1 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r6 = r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        $i2 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        if $i2 <= 0 goto label2;

        $r7 = r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        r2 = virtualinvoke $r7.<java.util.HashMap: java.util.Set entrySet()>();

        if r2 == null goto label2;

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r9;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (android.os.Parcelable) $r10;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r12, 0);

        goto label1;

     label2:
        return;
    }

    private void readFromParcel(android.os.Parcel)
    {
        com.android.ims.ImsConferenceState r0;
        android.os.Parcel r1;
        int i0, i1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.os.Parcelable $r4;
        java.util.HashMap $r5;

        r0 := @this: com.android.ims.ImsConferenceState;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        r3 = (android.os.Bundle) $r4;

        $r5 = r0.<com.android.ims.ImsConferenceState: java.util.HashMap mParticipants>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.android.ims.ImsConferenceState$1 $r0;

        <com.android.ims.ImsConferenceState: java.lang.String SIP_STATUS_CODE> = "sipstatuscode";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_CONNECT_FAIL> = "connect-fail";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_MUTED_VIA_FOCUS> = "muted-via-focus";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_DISCONNECTED> = "disconnected";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_DISCONNECTING> = "disconnecting";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_CONNECTED> = "connected";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_ON_HOLD> = "on-hold";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_ALERTING> = "alerting";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_DIALING_IN> = "dialing-in";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_DIALING_OUT> = "dialing-out";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS_PENDING> = "pending";

        <com.android.ims.ImsConferenceState: java.lang.String STATUS> = "status";

        <com.android.ims.ImsConferenceState: java.lang.String ENDPOINT> = "endpoint";

        <com.android.ims.ImsConferenceState: java.lang.String DISPLAY_TEXT> = "display-text";

        <com.android.ims.ImsConferenceState: java.lang.String USER> = "user";

        $r0 = new com.android.ims.ImsConferenceState$1;

        specialinvoke $r0.<com.android.ims.ImsConferenceState$1: void <init>()>();

        <com.android.ims.ImsConferenceState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
