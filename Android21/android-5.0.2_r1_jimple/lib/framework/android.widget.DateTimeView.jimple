public class android.widget.DateTimeView extends android.widget.TextView
{
    private static final java.lang.String TAG;
    private static final long TWELVE_HOURS_IN_MINUTES;
    private static final long TWENTY_FOUR_HOURS_IN_MILLIS;
    private static final int SHOW_TIME;
    private static final int SHOW_MONTH_DAY_YEAR;
    java.util.Date mTime;
    long mTimeMillis;
    int mLastDisplay;
    java.text.DateFormat mLastFormat;
    private boolean mAttachedToWindow;
    private long mUpdateTimeMillis;
    private android.content.BroadcastReceiver mBroadcastReceiver;
    private android.database.ContentObserver mContentObserver;

    public void <init>(android.content.Context)
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.widget.DateTimeView$1 $r2;
        android.widget.DateTimeView$2 $r3;
        android.os.Handler $r4;

        r0 := @this: android.widget.DateTimeView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.DateTimeView: int mLastDisplay> = -1;

        $r2 = new android.widget.DateTimeView$1;

        specialinvoke $r2.<android.widget.DateTimeView$1: void <init>(android.widget.DateTimeView)>(r0);

        r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver> = $r2;

        $r3 = new android.widget.DateTimeView$2;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        specialinvoke $r3.<android.widget.DateTimeView$2: void <init>(android.widget.DateTimeView,android.os.Handler)>(r0, $r4);

        r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.widget.DateTimeView$1 $r3;
        android.widget.DateTimeView$2 $r4;
        android.os.Handler $r5;

        r0 := @this: android.widget.DateTimeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.widget.DateTimeView: int mLastDisplay> = -1;

        $r3 = new android.widget.DateTimeView$1;

        specialinvoke $r3.<android.widget.DateTimeView$1: void <init>(android.widget.DateTimeView)>(r0);

        r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        $r4 = new android.widget.DateTimeView$2;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        specialinvoke $r4.<android.widget.DateTimeView$2: void <init>(android.widget.DateTimeView,android.os.Handler)>(r0, $r5);

        r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver> = $r4;

        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.DateTimeView r0;

        r0 := @this: android.widget.DateTimeView;

        specialinvoke r0.<android.widget.TextView: void onAttachedToWindow()>();

        specialinvoke r0.<android.widget.DateTimeView: void registerReceivers()>();

        r0.<android.widget.DateTimeView: boolean mAttachedToWindow> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.DateTimeView r0;

        r0 := @this: android.widget.DateTimeView;

        specialinvoke r0.<android.widget.TextView: void onDetachedFromWindow()>();

        specialinvoke r0.<android.widget.DateTimeView: void unregisterReceivers()>();

        r0.<android.widget.DateTimeView: boolean mAttachedToWindow> = 0;

        return;
    }

    public void setTime(long)
    {
        android.widget.DateTimeView r0;
        long l0, $l1;
        android.text.format.Time r1, $r2;
        java.util.Date $r3;
        int $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.DateTimeView;

        l0 := @parameter0: long;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time: void set(long)>(l0);

        r1.<android.text.format.Time: int second> = 0;

        $l1 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        r0.<android.widget.DateTimeView: long mTimeMillis> = $l1;

        $r3 = new java.util.Date;

        $i2 = r1.<android.text.format.Time: int year>;

        $i7 = $i2 - 1900;

        $i6 = r1.<android.text.format.Time: int month>;

        $i5 = r1.<android.text.format.Time: int monthDay>;

        $i4 = r1.<android.text.format.Time: int hour>;

        $i3 = r1.<android.text.format.Time: int minute>;

        specialinvoke $r3.<java.util.Date: void <init>(int,int,int,int,int,int)>($i7, $i6, $i5, $i4, $i3, 0);

        r0.<android.widget.DateTimeView: java.util.Date mTime> = $r3;

        virtualinvoke r0.<android.widget.DateTimeView: void update()>();

        return;
    }

    void update()
    {
        android.widget.DateTimeView r0;
        byte b1, $b16, $b17, $b19, $b21, $b22, $b24, $b25;
        android.text.format.Time r2, $r6;
        long l2, l3, l4, l5, l6, $l8, $l18, $l20, $l23, l26;
        java.lang.String r3, $r11;
        java.text.DateFormat r4, $r10;
        java.util.Date $r5, $r7;
        int $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.StringBuilder $r8, $r12, $r13;
        java.lang.RuntimeException $r9;

        r0 := @this: android.widget.DateTimeView;

        $r5 = r0.<android.widget.DateTimeView: java.util.Date mTime>;

        if $r5 != null goto label01;

        return;

     label01:
        staticinvoke <java.lang.System: long nanoTime()>();

        $r6 = new android.text.format.Time;

        specialinvoke $r6.<android.text.format.Time: void <init>()>();

        r2 = $r6;

        $l8 = r0.<android.widget.DateTimeView: long mTimeMillis>;

        virtualinvoke r2.<android.text.format.Time: void set(long)>($l8);

        r2.<android.text.format.Time: int second> = 0;

        $i10 = r2.<android.text.format.Time: int hour>;

        $i9 = $i10 - 12;

        r2.<android.text.format.Time: int hour> = $i9;

        l2 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        $i11 = r2.<android.text.format.Time: int hour>;

        $i12 = $i11 + 12;

        r2.<android.text.format.Time: int hour> = $i12;

        l3 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        r2.<android.text.format.Time: int hour> = 0;

        r2.<android.text.format.Time: int minute> = 0;

        l4 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        $i13 = r2.<android.text.format.Time: int monthDay>;

        $i14 = $i13 + 1;

        r2.<android.text.format.Time: int monthDay> = $i14;

        l5 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r2.<android.text.format.Time: void set(long)>(l6);

        r2.<android.text.format.Time: int second> = 0;

        l26 = virtualinvoke r2.<android.text.format.Time: long normalize(boolean)>(0);

        $b16 = l26 cmp l4;

        if $b16 < 0 goto label02;

        $b24 = l26 cmp l5;

        if $b24 < 0 goto label03;

     label02:
        $b17 = l26 cmp l2;

        if $b17 < 0 goto label04;

        $b25 = l26 cmp l3;

        if $b25 >= 0 goto label04;

     label03:
        b1 = 0;

        goto label05;

     label04:
        b1 = 1;

     label05:
        $i15 = r0.<android.widget.DateTimeView: int mLastDisplay>;

        if b1 != $i15 goto label06;

        $r10 = r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat>;

        if $r10 == null goto label06;

        r4 = r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat>;

        goto label11;

     label06:
        lookupswitch(b1)
        {
            case 0: goto label07;
            case 1: goto label08;
            default: goto label09;
        };

     label07:
        r4 = specialinvoke r0.<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()>();

        goto label10;

     label08:
        r4 = specialinvoke r0.<android.widget.DateTimeView: java.text.DateFormat getDateFormat()>();

        goto label10;

     label09:
        $r9 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown display value: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label10:
        r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat> = r4;

     label11:
        $r7 = r0.<android.widget.DateTimeView: java.util.Date mTime>;

        r3 = virtualinvoke r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r7);

        virtualinvoke r0.<android.widget.DateTimeView: void setText(java.lang.CharSequence)>(r3);

        if b1 != 0 goto label14;

        $b21 = l3 cmp l5;

        if $b21 <= 0 goto label12;

        $l23 = l3;

        goto label13;

     label12:
        $l23 = l5;

     label13:
        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = $l23;

        goto label18;

     label14:
        $l18 = r0.<android.widget.DateTimeView: long mTimeMillis>;

        $b19 = $l18 cmp l26;

        if $b19 >= 0 goto label15;

        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = 0L;

        goto label18;

     label15:
        $b22 = l2 cmp l4;

        if $b22 >= 0 goto label16;

        $l20 = l2;

        goto label17;

     label16:
        $l20 = l4;

     label17:
        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = $l20;

     label18:
        staticinvoke <java.lang.System: long nanoTime()>();

        return;
    }

    private java.text.DateFormat getTimeFormat()
    {
        android.widget.DateTimeView r0;
        android.content.Context $r1;
        java.text.DateFormat $r2;

        r0 := @this: android.widget.DateTimeView;

        $r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r2 = staticinvoke <android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>($r1);

        return $r2;
    }

    private java.text.DateFormat getDateFormat()
    {
        android.widget.DateTimeView r0;
        java.lang.String r1, $r6;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        java.text.DateFormat $r5, $r9;
        boolean $z0;
        java.text.SimpleDateFormat $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: android.widget.DateTimeView;

        $r3 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "date_format");

        if r1 == null goto label1;

        $r6 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(3);

        return $r5;

     label2:
        $r7 = new java.text.SimpleDateFormat;

        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r1);

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;

        $r9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(3);

        return $r9;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private void registerReceivers()
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.content.IntentFilter r2, $r4;
        android.net.Uri r3;
        android.content.BroadcastReceiver $r5;
        android.content.ContentResolver $r7;
        android.database.ContentObserver $r8;

        r0 := @this: android.widget.DateTimeView;

        r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r5 = r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r2);

        r3 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("date_format");

        $r7 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver>;

        virtualinvoke $r7.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r3, 1, $r8);

        return;
    }

    private void unregisterReceivers()
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.content.BroadcastReceiver $r2;
        android.content.ContentResolver $r3;
        android.database.ContentObserver $r4;

        r0 := @this: android.widget.DateTimeView;

        r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r2 = r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver>;

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r4);

        return;
    }

    static long access$000(android.widget.DateTimeView)
    {
        android.widget.DateTimeView r0;
        long $l0;

        r0 := @parameter0: android.widget.DateTimeView;

        $l0 = r0.<android.widget.DateTimeView: long mUpdateTimeMillis>;

        return $l0;
    }

    public static void <clinit>()
    {
        <android.widget.DateTimeView: int SHOW_MONTH_DAY_YEAR> = 1;

        <android.widget.DateTimeView: int SHOW_TIME> = 0;

        <android.widget.DateTimeView: long TWENTY_FOUR_HOURS_IN_MILLIS> = 86400000L;

        <android.widget.DateTimeView: long TWELVE_HOURS_IN_MINUTES> = 720L;

        <android.widget.DateTimeView: java.lang.String TAG> = "DateTimeView";

        return;
    }
}
