class com.android.ims.internal.IImsUt$Stub$Proxy extends java.lang.Object implements com.android.ims.internal.IImsUt
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        $r1 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        return "com.android.ims.internal.IImsUt";
    }

    public void close() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCallBarring(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCallForward(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCallWaiting() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCLIR() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCLIP() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCOLR() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int queryCOLP() throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int transact(android.os.Bundle) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        int i0;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int updateCallBarring(int, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1;
        boolean z0;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;
        byte $b2;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r5 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return i1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int updateCallForward(int, int, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        $r5 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return i3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int updateCallWaiting(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int updateCLIR(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int updateCLIP(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int updateCOLR(int) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int updateCOLP(boolean) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setListener(com.android.ims.internal.IImsUtListener) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsUt$Stub$Proxy r0;
        com.android.ims.internal.IImsUtListener r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: com.android.ims.internal.IImsUt$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsUtListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsUt");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<com.android.ims.internal.IImsUtListener: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<com.android.ims.internal.IImsUt$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
