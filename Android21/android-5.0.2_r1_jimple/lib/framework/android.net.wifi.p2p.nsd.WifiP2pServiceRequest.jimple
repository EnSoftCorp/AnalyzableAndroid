public class android.net.wifi.p2p.nsd.WifiP2pServiceRequest extends java.lang.Object implements android.os.Parcelable
{
    private int mProtocolType;
    private int mLength;
    private int mTransId;
    private java.lang.String mQuery;
    public static final android.os.Parcelable$Creator CREATOR;

    protected void <init>(int, java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void validateQuery(java.lang.String)>(r1);

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType> = i0;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery> = r1;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 / 2;

        $i3 = $i2 + 2;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = $i3;

        goto label2;

     label1:
        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = 2;

     label2:
        return;
    }

    private void <init>(int, int, int, java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, i1, i2;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType> = i0;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = i1;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId> = i2;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery> = r1;

        return;
    }

    public int getTransactionId()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int $i0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        return $i0;
    }

    public void setTransactionId(int)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId> = i0;

        return;
    }

    public java.lang.String getSupplicantQuery()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        java.lang.StringBuffer r1, $r2;
        java.lang.Object[] $r3, $r8, $r13, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Locale $r4, $r9, $r14, $r20;
        java.lang.Integer $r5, $r10, $r15, $r19;
        java.lang.String $r6, $r12, $r17, $r21, $r22, $r23, $r25;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i1 = $i0 & 255;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, "%02x", $r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r8 = newarray (java.lang.Object)[1];

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i3 = $i2 >> 8;

        $i4 = $i3 & 255;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r8[0] = $r10;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "%02x", $r8);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = <java.util.Locale: java.util.Locale US>;

        $r13 = newarray (java.lang.Object)[1];

        $i5 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r13[0] = $r15;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r14, "%02x", $r13);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r20 = <java.util.Locale: java.util.Locale US>;

        $r18 = newarray (java.lang.Object)[1];

        $i6 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r18[0] = $r19;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r20, "%02x", $r18);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r21 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r21 == null goto label1;

        $r25 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label1:
        $r22 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;
    }

    private void validateQuery(java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        java.lang.String r1, $r8, $r13, $r19, r20;
        char c0, c3;
        char[] r2, r3;
        int i1, i2, $i4, $i5, $i6, $i7, $i8;
        java.util.Locale $r4;
        java.lang.IllegalArgumentException $r5, $r11, $r16;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r18;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        c0 = 65535;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 % 2;

        if $i5 != 1 goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query size is invalid. query=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label2:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        $i7 = $i6 / 2;

        if $i7 <= c0 goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query size is too large. len=");

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label3:
        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        r20 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        r2 = virtualinvoke r20.<java.lang.String: char[] toCharArray()>();

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label4:
        if i2 >= i1 goto label8;

        c3 = r3[i2];

        if c3 < 48 goto label5;

        if c3 <= 57 goto label7;

     label5:
        if c3 < 97 goto label6;

        if c3 <= 102 goto label7;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query should be hex string. query=");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label7:
        i2 = i2 + 1;

        goto label4;

     label8:
        return;
    }

    public static android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        specialinvoke $r1.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>(i0, r0);

        return $r1;
    }

    public static android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)
    {
        int i0;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest $r0;

        i0 := @parameter0: int;

        $r0 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        specialinvoke $r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>(i0, null);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.net.wifi.p2p.nsd.WifiP2pServiceRequest) r1;

        $i1 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        if $i1 != $i0 goto label3;

        $i3 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        if $i3 == $i2 goto label4;

     label3:
        return 0;

     label4:
        $r3 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r3 != null goto label5;

        $r7 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r7 != null goto label5;

        return 1;

     label5:
        $r4 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r4 == null goto label6;

        $r6 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        $r5 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z1;

     label6:
        return 0;
    }

    public int hashCode()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.lang.String $r1, $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        b0 = 17;

        $i2 = 31 * b0;

        $i1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        i7 = $i2 + $i1;

        $i4 = 31 * i7;

        $i3 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        i8 = $i4 + $i3;

        $i5 = 31 * i8;

        $r1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r1 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        $i6 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        i9 = $i5 + $i6;

        return i9;
    }

    public int describeContents()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;
    }

    void <init>(int, int, int, java.lang.String, android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1 r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1;

        specialinvoke r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return;
    }

    static void <clinit>()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1 $r0;

        $r0 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1;

        specialinvoke $r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1: void <init>()>();

        <android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
