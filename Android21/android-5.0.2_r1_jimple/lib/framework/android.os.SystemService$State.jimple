public final enum class android.os.SystemService$State extends java.lang.Enum
{
    public static final enum android.os.SystemService$State RUNNING;
    public static final enum android.os.SystemService$State STOPPING;
    public static final enum android.os.SystemService$State STOPPED;
    public static final enum android.os.SystemService$State RESTARTING;
    private static final android.os.SystemService$State[] $VALUES;

    public static android.os.SystemService$State[] values()
    {
        android.os.SystemService$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.os.SystemService$State: android.os.SystemService$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.os.SystemService$State[]) $r1;

        return $r2;
    }

    public static android.os.SystemService$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.os.SystemService$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "android/os/SystemService$State", r0);

        $r2 = (android.os.SystemService$State) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        android.os.SystemService$State r0;
        java.lang.String r1, r2;
        int i0;
        java.util.HashMap $r3;

        r0 := @this: android.os.SystemService$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        $r3 = staticinvoke <android.os.SystemService: java.util.HashMap access$000()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        return;
    }

    static void <clinit>()
    {
        android.os.SystemService$State $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        android.os.SystemService$State[] $r4;

        $r0 = new android.os.SystemService$State;

        specialinvoke $r0.<android.os.SystemService$State: void <init>(java.lang.String,int,java.lang.String)>("RUNNING", 0, "running");

        <android.os.SystemService$State: android.os.SystemService$State RUNNING> = $r0;

        $r1 = new android.os.SystemService$State;

        specialinvoke $r1.<android.os.SystemService$State: void <init>(java.lang.String,int,java.lang.String)>("STOPPING", 1, "stopping");

        <android.os.SystemService$State: android.os.SystemService$State STOPPING> = $r1;

        $r2 = new android.os.SystemService$State;

        specialinvoke $r2.<android.os.SystemService$State: void <init>(java.lang.String,int,java.lang.String)>("STOPPED", 2, "stopped");

        <android.os.SystemService$State: android.os.SystemService$State STOPPED> = $r2;

        $r3 = new android.os.SystemService$State;

        specialinvoke $r3.<android.os.SystemService$State: void <init>(java.lang.String,int,java.lang.String)>("RESTARTING", 3, "restarting");

        <android.os.SystemService$State: android.os.SystemService$State RESTARTING> = $r3;

        $r4 = newarray (android.os.SystemService$State)[4];

        $r5 = <android.os.SystemService$State: android.os.SystemService$State RUNNING>;

        $r4[0] = $r5;

        $r6 = <android.os.SystemService$State: android.os.SystemService$State STOPPING>;

        $r4[1] = $r6;

        $r7 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        $r4[2] = $r7;

        $r8 = <android.os.SystemService$State: android.os.SystemService$State RESTARTING>;

        $r4[3] = $r8;

        <android.os.SystemService$State: android.os.SystemService$State[] $VALUES> = $r4;

        return;
    }
}
