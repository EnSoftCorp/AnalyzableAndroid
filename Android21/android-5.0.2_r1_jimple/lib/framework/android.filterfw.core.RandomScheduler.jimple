public class android.filterfw.core.RandomScheduler extends android.filterfw.core.Scheduler
{
    private java.util.Random mRand;

    public void <init>(android.filterfw.core.FilterGraph)
    {
        android.filterfw.core.RandomScheduler r0;
        android.filterfw.core.FilterGraph r1;
        java.util.Random $r2;

        r0 := @this: android.filterfw.core.RandomScheduler;

        r1 := @parameter0: android.filterfw.core.FilterGraph;

        specialinvoke r0.<android.filterfw.core.Scheduler: void <init>(android.filterfw.core.FilterGraph)>(r1);

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<android.filterfw.core.RandomScheduler: java.util.Random mRand> = $r2;

        return;
    }

    public void reset()
    {
        android.filterfw.core.RandomScheduler r0;

        r0 := @this: android.filterfw.core.RandomScheduler;

        return;
    }

    public android.filterfw.core.Filter scheduleNextNode()
    {
        android.filterfw.core.RandomScheduler r0;
        java.util.Vector r1, $r4;
        java.util.Iterator r2;
        android.filterfw.core.Filter r3, $r9;
        android.filterfw.core.FilterGraph $r5;
        java.util.Set $r6;
        boolean $z0, $z2;
        int $i0, $i1, i2;
        java.util.Random $r7;
        java.lang.Object $r8, $r10;

        r0 := @this: android.filterfw.core.RandomScheduler;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r0.<android.filterfw.core.RandomScheduler: android.filterfw.core.FilterGraph getGraph()>();

        $r6 = virtualinvoke $r5.<android.filterfw.core.FilterGraph: java.util.Set getFilters()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.filterfw.core.Filter) $r10;

        $z2 = virtualinvoke r3.<android.filterfw.core.Filter: boolean canProcess()>();

        if $z2 == 0 goto label2;

        virtualinvoke r1.<java.util.Vector: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        $i0 = virtualinvoke r1.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label4;

        $r7 = r0.<android.filterfw.core.RandomScheduler: java.util.Random mRand>;

        $i1 = virtualinvoke r1.<java.util.Vector: int size()>();

        i2 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>($i1);

        $r8 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r9 = (android.filterfw.core.Filter) $r8;

        return $r9;

     label4:
        return null;
    }
}
