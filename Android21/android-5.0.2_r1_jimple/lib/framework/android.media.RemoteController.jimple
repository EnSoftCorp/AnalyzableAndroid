public final class android.media.RemoteController extends java.lang.Object
{
    private static final int MAX_BITMAP_DIMENSION;
    private static final int TRANSPORT_UNKNOWN;
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean USE_SESSIONS;
    private static final java.lang.Object mGenLock;
    private static final java.lang.Object mInfoLock;
    private final android.media.RemoteController$RcDisplay mRcd;
    private final android.content.Context mContext;
    private final android.media.AudioManager mAudioManager;
    private final int mMaxBitmapDimension;
    private android.media.RemoteController$MetadataEditor mMetadataEditor;
    private android.media.session.MediaSessionManager mSessionManager;
    private android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionListener;
    private android.media.session.MediaController$Callback mSessionCb;
    private int mClientGenerationIdCurrent;
    private boolean mIsRegistered;
    private android.app.PendingIntent mClientPendingIntentCurrent;
    private android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener;
    private android.media.RemoteController$PlaybackInfo mLastPlaybackInfo;
    private int mArtworkWidth;
    private int mArtworkHeight;
    private boolean mEnabled;
    private android.media.session.MediaController mCurrentSession;
    public static final int POSITION_SYNCHRONIZATION_NONE;
    public static final int POSITION_SYNCHRONIZATION_CHECK;
    private final android.media.RemoteController$EventHandler mEventHandler;
    private static final int MSG_NEW_PENDING_INTENT;
    private static final int MSG_NEW_PLAYBACK_INFO;
    private static final int MSG_NEW_TRANSPORT_INFO;
    private static final int MSG_NEW_METADATA;
    private static final int MSG_CLIENT_CHANGE;
    private static final int MSG_DISPLAY_ENABLE;
    private static final int MSG_NEW_PLAYBACK_STATE;
    private static final int MSG_NEW_MEDIA_METADATA;
    private static final int SENDMSG_REPLACE;
    private static final int SENDMSG_NOOP;
    private static final int SENDMSG_QUEUE;

    public void <init>(android.content.Context, android.media.RemoteController$OnClientUpdateListener) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        android.content.Context r1;
        android.media.RemoteController$OnClientUpdateListener r2;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.RemoteController$OnClientUpdateListener;

        specialinvoke r0.<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController$OnClientUpdateListener,android.os.Looper)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, android.media.RemoteController$OnClientUpdateListener, android.os.Looper) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        android.content.Context r1;
        android.media.RemoteController$OnClientUpdateListener r2;
        android.os.Looper r3, r4;
        android.media.RemoteController$MediaControllerCallback $r5;
        java.lang.IllegalArgumentException $r6, $r16, $r17;
        android.media.RemoteController$EventHandler $r7, $r15;
        android.media.RemoteController$RcDisplay $r8;
        java.lang.Object $r9, $r11;
        android.media.AudioManager $r10;
        android.media.session.MediaSessionManager $r12;
        android.media.RemoteController$TopTransportSessionListener $r13;
        boolean $z0;
        android.content.res.Resources $r14;
        int $i0, $i1, $i2;
        android.util.DisplayMetrics r18;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.RemoteController$OnClientUpdateListener;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.media.RemoteController$MediaControllerCallback;

        specialinvoke $r5.<android.media.RemoteController$MediaControllerCallback: void <init>(android.media.RemoteController,android.media.RemoteController$1)>(r0, null);

        r0.<android.media.RemoteController: android.media.session.MediaController$Callback mSessionCb> = $r5;

        r0.<android.media.RemoteController: int mClientGenerationIdCurrent> = 0;

        r0.<android.media.RemoteController: boolean mIsRegistered> = 0;

        r0.<android.media.RemoteController: int mArtworkWidth> = -1;

        r0.<android.media.RemoteController: int mArtworkHeight> = -1;

        r0.<android.media.RemoteController: boolean mEnabled> = 1;

        if r1 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid null Context");

        throw $r16;

     label1:
        if r2 != null goto label2;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid null OnClientUpdateListener");

        throw $r17;

     label2:
        if r3 == null goto label3;

        $r15 = new android.media.RemoteController$EventHandler;

        specialinvoke $r15.<android.media.RemoteController$EventHandler: void <init>(android.media.RemoteController,android.media.RemoteController,android.os.Looper)>(r0, r0, r3);

        r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler> = $r15;

        goto label5;

     label3:
        r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r4 == null goto label4;

        $r7 = new android.media.RemoteController$EventHandler;

        specialinvoke $r7.<android.media.RemoteController$EventHandler: void <init>(android.media.RemoteController,android.media.RemoteController,android.os.Looper)>(r0, r0, r4);

        r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler> = $r7;

        goto label5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Calling thread not associated with a looper");

        throw $r6;

     label5:
        r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener> = r2;

        r0.<android.media.RemoteController: android.content.Context mContext> = r1;

        $r8 = new android.media.RemoteController$RcDisplay;

        specialinvoke $r8.<android.media.RemoteController$RcDisplay: void <init>(android.media.RemoteController)>(r0);

        r0.<android.media.RemoteController: android.media.RemoteController$RcDisplay mRcd> = $r8;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r10 = (android.media.AudioManager) $r9;

        r0.<android.media.RemoteController: android.media.AudioManager mAudioManager> = $r10;

        $r11 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("media_session");

        $r12 = (android.media.session.MediaSessionManager) $r11;

        r0.<android.media.RemoteController: android.media.session.MediaSessionManager mSessionManager> = $r12;

        $r13 = new android.media.RemoteController$TopTransportSessionListener;

        specialinvoke $r13.<android.media.RemoteController$TopTransportSessionListener: void <init>(android.media.RemoteController,android.media.RemoteController$1)>(r0, null);

        r0.<android.media.RemoteController: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionListener> = $r13;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z0 == 0 goto label6;

        r0.<android.media.RemoteController: int mMaxBitmapDimension> = 512;

        goto label7;

     label6:
        $r14 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r18 = virtualinvoke $r14.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = r18.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = r18.<android.util.DisplayMetrics: int heightPixels>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        r0.<android.media.RemoteController: int mMaxBitmapDimension> = $i2;

     label7:
        return;
    }

    public java.lang.String getRemoteControlClientPackageName()
    {
        android.media.RemoteController r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        android.media.session.MediaController $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.media.RemoteController;

        $r3 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r4 == null goto label2;

        $r5 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r6 = virtualinvoke $r5.<android.media.session.MediaController: java.lang.String getPackageName()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public long getEstimatedMediaPosition()
    {
        android.media.RemoteController r0;
        java.lang.Object r1, $r4;
        android.media.session.PlaybackState r2;
        java.lang.Throwable r3, $r7;
        android.media.session.MediaController $r5, $r6;
        long $l0;

        r0 := @this: android.media.RemoteController;

        $r4 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r5 == null goto label3;

        $r6 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        r2 = virtualinvoke $r6.<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>();

        if r2 == null goto label3;

        $l0 = virtualinvoke r2.<android.media.session.PlaybackState: long getPosition()>();

        exitmonitor r1;

     label2:
        return $l0;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return -1L;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean sendMediaKeyEvent(android.view.KeyEvent) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        android.view.KeyEvent r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        int $i0;
        boolean $z0, $z1;
        android.media.session.MediaController $r5, $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = staticinvoke <android.view.KeyEvent: boolean isMediaKey(int)>($i0);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not a media key event");

        throw $r7;

     label1:
        $r4 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r5 == null goto label4;

        $r6 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $z1 = virtualinvoke $r6.<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>(r1);

        exitmonitor r2;

     label3:
        return $z1;

     label4:
        exitmonitor r2;

     label5:
        return 0;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean seekTo(long) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        long l0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        byte $b1;
        android.media.session.MediaController $r4, $r5;
        android.media.session.MediaController$TransportControls $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.media.RemoteController;

        l0 := @parameter0: long;

        $z0 = r0.<android.media.RemoteController: boolean mEnabled>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteController", "Cannot use seekTo() from a disabled RemoteController");

        return 0;

     label1:
        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal negative time value");

        throw $r7;

     label2:
        $r3 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r3;

        entermonitor $r3;

     label3:
        $r4 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r4 == null goto label4;

        $r5 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r6 = virtualinvoke $r5.<android.media.session.MediaController: android.media.session.MediaController$TransportControls getTransportControls()>();

        virtualinvoke $r6.<android.media.session.MediaController$TransportControls: void seekTo(long)>(l0);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return 1;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean setArtworkConfiguration(boolean, int, int) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        boolean z0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.media.RemoteController;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        if z0 == 0 goto label05;

        if i0 <= 0 goto label04;

        if i1 <= 0 goto label04;

        $i2 = r0.<android.media.RemoteController: int mMaxBitmapDimension>;

        if i0 <= $i2 goto label02;

        i0 = r0.<android.media.RemoteController: int mMaxBitmapDimension>;

     label02:
        $i3 = r0.<android.media.RemoteController: int mMaxBitmapDimension>;

        if i1 <= $i3 goto label03;

        i1 = r0.<android.media.RemoteController: int mMaxBitmapDimension>;

     label03:
        r0.<android.media.RemoteController: int mArtworkWidth> = i0;

        r0.<android.media.RemoteController: int mArtworkHeight> = i1;

        goto label06;

     label04:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid dimensions");

        throw $r4;

     label05:
        r0.<android.media.RemoteController: int mArtworkWidth> = -1;

        r0.<android.media.RemoteController: int mArtworkHeight> = -1;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label09:
        throw r2;

     label10:
        return 1;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean setArtworkConfiguration(int, int) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.media.RemoteController: boolean setArtworkConfiguration(boolean,int,int)>(1, i0, i1);

        return $z0;
    }

    public boolean clearArtworkConfiguration()
    {
        android.media.RemoteController r0;
        boolean $z0;

        r0 := @this: android.media.RemoteController;

        $z0 = virtualinvoke r0.<android.media.RemoteController: boolean setArtworkConfiguration(boolean,int,int)>(0, -1, -1);

        return $z0;
    }

    public boolean setSynchronizationMode(int) throws java.lang.IllegalArgumentException
    {
        android.media.RemoteController r0;
        int i0;
        boolean $z0, $z1;
        android.media.RemoteController$RcDisplay $r1;
        android.media.AudioManager $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown synchronization mode ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $z0 = r0.<android.media.RemoteController: boolean mIsRegistered>;

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteController", "Cannot set synchronization mode on an unregistered RemoteController");

        return 0;

     label2:
        $r2 = r0.<android.media.RemoteController: android.media.AudioManager mAudioManager>;

        $r1 = r0.<android.media.RemoteController: android.media.RemoteController$RcDisplay mRcd>;

        if 1 != i0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke $r2.<android.media.AudioManager: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>($r1, $z1);

        return 1;
    }

    public android.media.RemoteController$MetadataEditor editMetadata()
    {
        android.media.RemoteController r0;
        android.media.RemoteController$MetadataEditor r1, $r2;
        android.os.Bundle $r3;

        r0 := @this: android.media.RemoteController;

        $r2 = new android.media.RemoteController$MetadataEditor;

        specialinvoke $r2.<android.media.RemoteController$MetadataEditor: void <init>(android.media.RemoteController)>(r0);

        r1 = $r2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r1.<android.media.RemoteController$MetadataEditor: android.os.Bundle mEditorMetadata> = $r3;

        r1.<android.media.RemoteController$MetadataEditor: android.graphics.Bitmap mEditorArtwork> = null;

        r1.<android.media.RemoteController$MetadataEditor: boolean mMetadataChanged> = 1;

        r1.<android.media.RemoteController$MetadataEditor: boolean mArtworkChanged> = 1;

        r1.<android.media.RemoteController$MetadataEditor: long mEditableKeys> = 0L;

        return r1;
    }

    void startListeningToSessions()
    {
        android.media.RemoteController r0;
        android.content.ComponentName r1, $r3;
        android.os.Handler r2, $r13;
        android.media.RemoteController$OnClientUpdateListener $r4;
        android.content.Context $r5;
        java.lang.Class $r6;
        android.os.Looper $r7, $r14;
        android.media.session.MediaSessionManager $r8, $r10;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener $r9, $r11;
        int $i0;
        java.util.List $r12;

        r0 := @this: android.media.RemoteController;

        $r3 = new android.content.ComponentName;

        $r5 = r0.<android.media.RemoteController: android.content.Context mContext>;

        $r4 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r3.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r5, $r6);

        r1 = $r3;

        r2 = null;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r7 != null goto label1;

        $r13 = new android.os.Handler;

        $r14 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r13.<android.os.Handler: void <init>(android.os.Looper)>($r14);

        r2 = $r13;

     label1:
        $r8 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager mSessionManager>;

        $r9 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionListener>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke $r8.<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener,android.content.ComponentName,int,android.os.Handler)>($r9, r1, $i0, r2);

        $r11 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionListener>;

        $r10 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager mSessionManager>;

        $r12 = virtualinvoke $r10.<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>(r1);

        interfaceinvoke $r11.<android.media.session.MediaSessionManager$OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>($r12);

        return;
    }

    void stopListeningToSessions()
    {
        android.media.RemoteController r0;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener $r1;
        android.media.session.MediaSessionManager $r2;

        r0 := @this: android.media.RemoteController;

        $r2 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager mSessionManager>;

        $r1 = r0.<android.media.RemoteController: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener mSessionListener>;

        virtualinvoke $r2.<android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener)>($r1);

        return;
    }

    private static void sendMsg(android.os.Handler, int, int, int, int, java.lang.Object, int)
    {
        android.os.Handler r0;
        int i0, i1, i2, i3, i4;
        java.lang.Object r1;
        android.os.Message $r2;
        long $l5;
        boolean $z1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        i4 := @parameter6: int;

        if r0 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null event handler, will not deliver message ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteController", $r6);

        return;

     label1:
        if i1 != 0 goto label2;

        virtualinvoke r0.<android.os.Handler: void removeMessages(int)>(i0);

        goto label3;

     label2:
        if i1 != 1 goto label3;

        $z1 = virtualinvoke r0.<android.os.Handler: boolean hasMessages(int)>(i0);

        if $z1 == 0 goto label3;

        return;

     label3:
        $r2 = virtualinvoke r0.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i2, i3, r1);

        $l5 = (long) i4;

        virtualinvoke r0.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r2, $l5);

        return;
    }

    private void onNewPendingIntent(int, android.app.PendingIntent)
    {
        android.media.RemoteController r0;
        int i0, $i1;
        android.app.PendingIntent r1;
        java.lang.Object r2, $r5, $r6, r9;
        java.lang.Throwable r3, r4, $r7, $r8;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $r5 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $i1 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        if $i1 == i0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $r6 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r9 = $r6;

        entermonitor $r6;

     label08:
        r0.<android.media.RemoteController: android.app.PendingIntent mClientPendingIntentCurrent> = r1;

        exitmonitor r9;

     label09:
        goto label12;

     label10:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r9;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void onNewPlaybackInfo(int, android.media.RemoteController$PlaybackInfo)
    {
        android.media.RemoteController r0;
        int i0, $i1, $i6, $i7;
        android.media.RemoteController$PlaybackInfo r1;
        java.lang.Object r2, $r5, $r6, r9;
        java.lang.Throwable r3, r4, $r7, $r8;
        long $l2, $l4, $l5;
        byte $b3;
        float $f0;
        android.media.RemoteController$OnClientUpdateListener r10;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.RemoteController$PlaybackInfo;

        $r5 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $i1 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        if $i1 == i0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $r6 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r9 = $r6;

        entermonitor $r6;

     label08:
        r10 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        r0.<android.media.RemoteController: android.media.RemoteController$PlaybackInfo mLastPlaybackInfo> = r1;

        exitmonitor r9;

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r9;

     label11:
        throw r4;

     label12:
        if r10 == null goto label14;

        $l2 = r1.<android.media.RemoteController$PlaybackInfo: long mCurrentPosMs>;

        $b3 = $l2 cmp -9216204211029966080L;

        if $b3 != 0 goto label13;

        $i6 = r1.<android.media.RemoteController$PlaybackInfo: int mState>;

        interfaceinvoke r10.<android.media.RemoteController$OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>($i6);

        goto label14;

     label13:
        $i7 = r1.<android.media.RemoteController$PlaybackInfo: int mState>;

        $l5 = r1.<android.media.RemoteController$PlaybackInfo: long mStateChangeTimeMs>;

        $l4 = r1.<android.media.RemoteController$PlaybackInfo: long mCurrentPosMs>;

        $f0 = r1.<android.media.RemoteController$PlaybackInfo: float mSpeed>;

        interfaceinvoke r10.<android.media.RemoteController$OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>($i7, $l5, $l4, $f0);

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void onNewTransportInfo(int, int)
    {
        android.media.RemoteController r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r4, $r5, r8;
        java.lang.Throwable r2, r3, $r6, $r7;
        android.media.RemoteController$OnClientUpdateListener r9;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $i2 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        if $i2 == i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r5 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r8 = $r5;

        entermonitor $r5;

     label08:
        r9 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        exitmonitor r8;

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r8;

     label11:
        throw r3;

     label12:
        if r9 == null goto label13;

        interfaceinvoke r9.<android.media.RemoteController$OnClientUpdateListener: void onClientTransportControlUpdate(int)>(i1);

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void onNewMetadata(int, android.os.Bundle)
    {
        android.media.RemoteController r0;
        int i0, $i2;
        android.os.Bundle r1, $r13, $r15, $r21;
        java.lang.Object r2, r4, $r6, $r8;
        java.lang.Throwable r3, r5, $r23, $r25;
        long l1;
        java.lang.String $r7, $r16, $r24;
        byte $b3;
        android.media.RemoteController$MetadataEditor $r9, $r10, $r11, $r12, $r14, $r19, $r22, r27;
        android.graphics.Bitmap $r17;
        android.os.Parcelable $r18;
        android.media.RemoteController$OnClientUpdateListener r26;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r6 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $i2 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        if $i2 == i0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        r3 = $r23;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(536870911);

        l1 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String,long)>($r7, 0L);

        $b3 = l1 cmp 0L;

        if $b3 == 0 goto label08;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(536870911);

        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>($r24);

     label08:
        $r8 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r4 = $r8;

        entermonitor $r8;

     label09:
        r26 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        $r10 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        if $r10 == null goto label11;

        $r11 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        $r13 = $r11.<android.media.RemoteController$MetadataEditor: android.os.Bundle mEditorMetadata>;

        if $r13 == null goto label11;

        $r12 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        $r15 = $r12.<android.media.RemoteController$MetadataEditor: android.os.Bundle mEditorMetadata>;

        if $r15 == r1 goto label10;

        $r22 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        $r21 = $r22.<android.media.RemoteController$MetadataEditor: android.os.Bundle mEditorMetadata>;

        virtualinvoke $r21.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label10:
        $r14 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(100);

        $r18 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r16);

        $r17 = (android.graphics.Bitmap) $r18;

        virtualinvoke $r14.<android.media.RemoteController$MetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>(100, $r17);

        $r19 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        staticinvoke <android.media.RemoteController$MetadataEditor: void access$1700(android.media.RemoteController$MetadataEditor,int)>($r19, 100);

        goto label12;

     label11:
        $r9 = new android.media.RemoteController$MetadataEditor;

        specialinvoke $r9.<android.media.RemoteController$MetadataEditor: void <init>(android.media.RemoteController,android.os.Bundle,long)>(r0, r1, l1);

        r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor> = $r9;

     label12:
        r27 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        exitmonitor r4;

     label13:
        goto label16;

     label14:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r4;

     label15:
        throw r5;

     label16:
        if r26 == null goto label17;

        interfaceinvoke r26.<android.media.RemoteController$OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController$MetadataEditor)>(r27);

     label17:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label09 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void onClientChange(int, boolean)
    {
        android.media.RemoteController r0;
        int i0, $i1;
        boolean z0;
        java.lang.Object r1, $r4, $r5, r8;
        java.lang.Throwable r2, r3, $r6, $r7;
        android.media.RemoteController$OnClientUpdateListener r9;

        r0 := @this: android.media.RemoteController;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r4 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $i1 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        if $i1 == i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $r5 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r8 = $r5;

        entermonitor $r5;

     label08:
        r9 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor> = null;

        exitmonitor r8;

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r8;

     label11:
        throw r3;

     label12:
        if r9 == null goto label13;

        interfaceinvoke r9.<android.media.RemoteController$OnClientUpdateListener: void onClientChange(boolean)>(z0);

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void onDisplayEnable(boolean)
    {
        android.media.RemoteController r0;
        boolean z0;
        java.lang.Object r2, $r5, $r6, r17;
        java.lang.Throwable r3, r4, $r15, $r16;
        android.media.RemoteController$PlaybackInfo $r7, r18;
        long $l0;
        android.media.RemoteController$EventHandler $r8, $r9, $r13;
        android.os.Bundle $r10, r19;
        java.lang.String $r11, $r12, $r14;
        int i1;

        r0 := @this: android.media.RemoteController;

        z0 := @parameter0: boolean;

        $r5 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        r0.<android.media.RemoteController: boolean mEnabled> = z0;

        exitmonitor r2;

     label02:
        goto label05;

     label03:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r2;

     label04:
        throw r3;

     label05:
        if z0 != 0 goto label11;

        $r6 = <android.media.RemoteController: java.lang.Object mGenLock>;

        r17 = $r6;

        entermonitor $r6;

     label06:
        i1 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        exitmonitor r17;

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r17;

     label09:
        throw r4;

     label10:
        $r7 = new android.media.RemoteController$PlaybackInfo;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r7.<android.media.RemoteController$PlaybackInfo: void <init>(int,long,long,float)>(1, $l0, 0L, 0.0F);

        r18 = $r7;

        $r8 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r8, 1, 0, i1, 0, r18, 0);

        $r9 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r9, 2, 0, i1, 0, null, 0);

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>(int)>(3);

        r19 = $r10;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(7);

        virtualinvoke r19.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r12, "");

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

        virtualinvoke r19.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r11, "");

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(9);

        virtualinvoke r19.<android.os.Bundle: void putLong(java.lang.String,long)>($r14, 0L);

        $r13 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r13, 3, 2, i1, 0, r19, 0);

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void updateController(android.media.session.MediaController)
    {
        android.media.RemoteController r0;
        android.media.session.MediaController r1, $r7, $r8, $r12, $r15, $r17, $r21, $r23;
        java.lang.Object r2, $r6;
        android.media.session.PlaybackState r3;
        android.media.MediaMetadata r4;
        java.lang.Throwable r5, $r24;
        android.media.RemoteController$EventHandler $r9, $r10, $r13, $r14, $r22;
        android.media.session.MediaController$Callback $r11, $r16, $r20;
        android.media.session.MediaSession$Token $r18, $r19;
        boolean $z0;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.media.session.MediaController;

        $r6 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        if r1 != null goto label2;

        $r21 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r21 == null goto label5;

        $r23 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r20 = r0.<android.media.RemoteController: android.media.session.MediaController$Callback mSessionCb>;

        virtualinvoke $r23.<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController$Callback)>($r20);

        r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession> = null;

        $r22 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r22, 4, 0, 0, 1, null, 0);

        goto label5;

     label2:
        $r7 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r7 == null goto label3;

        $r18 = virtualinvoke r1.<android.media.session.MediaController: android.media.session.MediaSession$Token getSessionToken()>();

        $r17 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r19 = virtualinvoke $r17.<android.media.session.MediaController: android.media.session.MediaSession$Token getSessionToken()>();

        $z0 = virtualinvoke $r18.<android.media.session.MediaSession$Token: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label5;

     label3:
        $r8 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r8 == null goto label4;

        $r15 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r16 = r0.<android.media.RemoteController: android.media.session.MediaController$Callback mSessionCb>;

        virtualinvoke $r15.<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController$Callback)>($r16);

     label4:
        $r9 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r9, 4, 0, 0, 0, null, 0);

        r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession> = r1;

        $r12 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $r11 = r0.<android.media.RemoteController: android.media.session.MediaController$Callback mSessionCb>;

        $r10 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        virtualinvoke $r12.<android.media.session.MediaController: void registerCallback(android.media.session.MediaController$Callback,android.os.Handler)>($r11, $r10);

        r3 = virtualinvoke r1.<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>();

        $r13 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r13, 6, 0, 0, 0, r3, 0);

        r4 = virtualinvoke r1.<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>();

        $r14 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>($r14, 7, 0, 0, 0, r4, 0);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r24 := @caughtexception;

        r5 = $r24;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void onNewPlaybackState(android.media.session.PlaybackState)
    {
        android.media.RemoteController r0;
        android.media.session.PlaybackState r1;
        android.media.RemoteController$OnClientUpdateListener r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r6;
        int $i0, $i1, $i3, i8;
        long $l2, $l4, $l6, $l7;
        byte $b5;
        float $f0;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.media.session.PlaybackState;

        $r5 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r3 = $r5;

        entermonitor $r5;

     label01:
        r2 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        exitmonitor r3;

     label02:
        goto label05;

     label03:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r3;

     label04:
        throw r4;

     label05:
        if r2 == null goto label11;

        if r1 != null goto label06;

        $i1 = 0;

        goto label07;

     label06:
        $i0 = virtualinvoke r1.<android.media.session.PlaybackState: int getState()>();

        $i1 = staticinvoke <android.media.session.PlaybackState: int getRccStateFromState(int)>($i0);

     label07:
        i8 = $i1;

        if r1 == null goto label08;

        $l4 = virtualinvoke r1.<android.media.session.PlaybackState: long getPosition()>();

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label09;

     label08:
        interfaceinvoke r2.<android.media.RemoteController$OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>(i8);

        goto label10;

     label09:
        $l6 = virtualinvoke r1.<android.media.session.PlaybackState: long getLastPositionUpdateTime()>();

        $l7 = virtualinvoke r1.<android.media.session.PlaybackState: long getPosition()>();

        $f0 = virtualinvoke r1.<android.media.session.PlaybackState: float getPlaybackSpeed()>();

        interfaceinvoke r2.<android.media.RemoteController$OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>(i8, $l6, $l7, $f0);

     label10:
        if r1 == null goto label11;

        $l2 = virtualinvoke r1.<android.media.session.PlaybackState: long getActions()>();

        $i3 = staticinvoke <android.media.session.PlaybackState: int getRccControlFlagsFromActions(long)>($l2);

        interfaceinvoke r2.<android.media.RemoteController$OnClientUpdateListener: void onClientTransportControlUpdate(int)>($i3);

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    private void onNewMediaMetadata(android.media.MediaMetadata)
    {
        android.media.RemoteController r0;
        android.media.MediaMetadata r1;
        android.media.RemoteController$OnClientUpdateListener r2;
        android.media.RemoteController$MetadataEditor r3, $r9;
        java.lang.Object r4, $r7;
        boolean z0, $z1;
        long l0, $l3;
        android.os.Bundle r5;
        java.lang.Throwable r6, $r11;
        android.media.session.MediaController $r8, $r10;
        int $i1, $i2, $i4;

        r0 := @this: android.media.RemoteController;

        r1 := @parameter0: android.media.MediaMetadata;

        if r1 != null goto label01;

        return;

     label01:
        $r7 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r4 = $r7;

        entermonitor $r7;

     label02:
        r2 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        $r8 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        if $r8 == null goto label03;

        $r10 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        $i4 = virtualinvoke $r10.<android.media.session.MediaController: int getRatingType()>();

        if $i4 == 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        z0 = $z1;

        if z0 == 0 goto label05;

        $l3 = 268435457L;

        goto label06;

     label05:
        $l3 = 0L;

     label06:
        l0 = $l3;

        $i2 = r0.<android.media.RemoteController: int mArtworkWidth>;

        $i1 = r0.<android.media.RemoteController: int mArtworkHeight>;

        r5 = staticinvoke <android.media.session.MediaSessionLegacyHelper: android.os.Bundle getOldMetadata(android.media.MediaMetadata,int,int)>(r1, $i2, $i1);

        $r9 = new android.media.RemoteController$MetadataEditor;

        specialinvoke $r9.<android.media.RemoteController$MetadataEditor: void <init>(android.media.RemoteController,android.os.Bundle,long)>(r0, r5, l0);

        r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor> = $r9;

        r3 = r0.<android.media.RemoteController: android.media.RemoteController$MetadataEditor mMetadataEditor>;

        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r6 = $r11;

        exitmonitor r4;

     label09:
        throw r6;

     label10:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.media.RemoteController$OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController$MetadataEditor)>(r3);

     label11:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void setIsRegistered(boolean)
    {
        android.media.RemoteController r0;
        boolean z0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.media.RemoteController;

        z0 := @parameter0: boolean;

        $r3 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<android.media.RemoteController: boolean mIsRegistered> = z0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    android.media.RemoteController$RcDisplay getRcDisplay()
    {
        android.media.RemoteController r0;
        android.media.RemoteController$RcDisplay $r1;

        r0 := @this: android.media.RemoteController;

        $r1 = r0.<android.media.RemoteController: android.media.RemoteController$RcDisplay mRcd>;

        return $r1;
    }

    int[] getArtworkSize()
    {
        android.media.RemoteController r0;
        java.lang.Object r1, $r4;
        int[] r2, $r5;
        java.lang.Throwable r3, $r6;
        int $i0, $i1;

        r0 := @this: android.media.RemoteController;

        $r4 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = newarray (int)[2];

        $i0 = r0.<android.media.RemoteController: int mArtworkWidth>;

        $r5[0] = $i0;

        $i1 = r0.<android.media.RemoteController: int mArtworkHeight>;

        $r5[1] = $i1;

        r2 = $r5;

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    android.media.RemoteController$OnClientUpdateListener getUpdateListener()
    {
        android.media.RemoteController r0;
        android.media.RemoteController$OnClientUpdateListener $r1;

        r0 := @this: android.media.RemoteController;

        $r1 = r0.<android.media.RemoteController: android.media.RemoteController$OnClientUpdateListener mOnClientUpdateListener>;

        return $r1;
    }

    static java.lang.Object access$200()
    {
        java.lang.Object $r0;

        $r0 = <android.media.RemoteController: java.lang.Object mInfoLock>;

        return $r0;
    }

    static android.media.session.MediaController access$300(android.media.RemoteController)
    {
        android.media.RemoteController r0;
        android.media.session.MediaController $r1;

        r0 := @parameter0: android.media.RemoteController;

        $r1 = r0.<android.media.RemoteController: android.media.session.MediaController mCurrentSession>;

        return $r1;
    }

    static java.lang.Object access$400()
    {
        java.lang.Object $r0;

        $r0 = <android.media.RemoteController: java.lang.Object mGenLock>;

        return $r0;
    }

    static int access$500(android.media.RemoteController)
    {
        android.media.RemoteController r0;
        int $i0;

        r0 := @parameter0: android.media.RemoteController;

        $i0 = r0.<android.media.RemoteController: int mClientGenerationIdCurrent>;

        return $i0;
    }

    static int access$502(android.media.RemoteController, int)
    {
        android.media.RemoteController r0;
        int i0;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        r0.<android.media.RemoteController: int mClientGenerationIdCurrent> = i0;

        return i0;
    }

    static android.media.RemoteController$EventHandler access$600(android.media.RemoteController)
    {
        android.media.RemoteController r0;
        android.media.RemoteController$EventHandler $r1;

        r0 := @parameter0: android.media.RemoteController;

        $r1 = r0.<android.media.RemoteController: android.media.RemoteController$EventHandler mEventHandler>;

        return $r1;
    }

    static void access$700(android.os.Handler, int, int, int, int, java.lang.Object, int)
    {
        android.os.Handler r0;
        int i0, i1, i2, i3, i4;
        java.lang.Object r1;

        r0 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        i4 := @parameter6: int;

        staticinvoke <android.media.RemoteController: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)>(r0, i0, i1, i2, i3, r1, i4);

        return;
    }

    static void access$800(android.media.RemoteController, android.media.session.PlaybackState)
    {
        android.media.RemoteController r0;
        android.media.session.PlaybackState r1;

        r0 := @parameter0: android.media.RemoteController;

        r1 := @parameter1: android.media.session.PlaybackState;

        specialinvoke r0.<android.media.RemoteController: void onNewPlaybackState(android.media.session.PlaybackState)>(r1);

        return;
    }

    static void access$900(android.media.RemoteController, android.media.MediaMetadata)
    {
        android.media.RemoteController r0;
        android.media.MediaMetadata r1;

        r0 := @parameter0: android.media.RemoteController;

        r1 := @parameter1: android.media.MediaMetadata;

        specialinvoke r0.<android.media.RemoteController: void onNewMediaMetadata(android.media.MediaMetadata)>(r1);

        return;
    }

    static void access$1000(android.media.RemoteController, android.media.session.MediaController)
    {
        android.media.RemoteController r0;
        android.media.session.MediaController r1;

        r0 := @parameter0: android.media.RemoteController;

        r1 := @parameter1: android.media.session.MediaController;

        specialinvoke r0.<android.media.RemoteController: void updateController(android.media.session.MediaController)>(r1);

        return;
    }

    static void access$1100(android.media.RemoteController, int, android.app.PendingIntent)
    {
        android.media.RemoteController r0;
        int i0;
        android.app.PendingIntent r1;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        r1 := @parameter2: android.app.PendingIntent;

        specialinvoke r0.<android.media.RemoteController: void onNewPendingIntent(int,android.app.PendingIntent)>(i0, r1);

        return;
    }

    static void access$1200(android.media.RemoteController, int, android.media.RemoteController$PlaybackInfo)
    {
        android.media.RemoteController r0;
        int i0;
        android.media.RemoteController$PlaybackInfo r1;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        r1 := @parameter2: android.media.RemoteController$PlaybackInfo;

        specialinvoke r0.<android.media.RemoteController: void onNewPlaybackInfo(int,android.media.RemoteController$PlaybackInfo)>(i0, r1);

        return;
    }

    static void access$1300(android.media.RemoteController, int, int)
    {
        android.media.RemoteController r0;
        int i0, i1;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.media.RemoteController: void onNewTransportInfo(int,int)>(i0, i1);

        return;
    }

    static void access$1400(android.media.RemoteController, int, android.os.Bundle)
    {
        android.media.RemoteController r0;
        int i0;
        android.os.Bundle r1;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        specialinvoke r0.<android.media.RemoteController: void onNewMetadata(int,android.os.Bundle)>(i0, r1);

        return;
    }

    static void access$1500(android.media.RemoteController, int, boolean)
    {
        android.media.RemoteController r0;
        int i0;
        boolean z0;

        r0 := @parameter0: android.media.RemoteController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.media.RemoteController: void onClientChange(int,boolean)>(i0, z0);

        return;
    }

    static void access$1600(android.media.RemoteController, boolean)
    {
        android.media.RemoteController r0;
        boolean z0;

        r0 := @parameter0: android.media.RemoteController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.media.RemoteController: void onDisplayEnable(boolean)>(z0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1;

        <android.media.RemoteController: int SENDMSG_QUEUE> = 2;

        <android.media.RemoteController: int SENDMSG_NOOP> = 1;

        <android.media.RemoteController: int SENDMSG_REPLACE> = 0;

        <android.media.RemoteController: int MSG_NEW_MEDIA_METADATA> = 7;

        <android.media.RemoteController: int MSG_NEW_PLAYBACK_STATE> = 6;

        <android.media.RemoteController: int MSG_DISPLAY_ENABLE> = 5;

        <android.media.RemoteController: int MSG_CLIENT_CHANGE> = 4;

        <android.media.RemoteController: int MSG_NEW_METADATA> = 3;

        <android.media.RemoteController: int MSG_NEW_TRANSPORT_INFO> = 2;

        <android.media.RemoteController: int MSG_NEW_PLAYBACK_INFO> = 1;

        <android.media.RemoteController: int MSG_NEW_PENDING_INTENT> = 0;

        <android.media.RemoteController: int POSITION_SYNCHRONIZATION_CHECK> = 1;

        <android.media.RemoteController: int POSITION_SYNCHRONIZATION_NONE> = 0;

        <android.media.RemoteController: boolean USE_SESSIONS> = 1;

        <android.media.RemoteController: boolean DEBUG> = 0;

        <android.media.RemoteController: java.lang.String TAG> = "RemoteController";

        <android.media.RemoteController: int TRANSPORT_UNKNOWN> = 0;

        <android.media.RemoteController: int MAX_BITMAP_DIMENSION> = 512;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.media.RemoteController: java.lang.Object mGenLock> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.media.RemoteController: java.lang.Object mInfoLock> = $r1;

        return;
    }
}
