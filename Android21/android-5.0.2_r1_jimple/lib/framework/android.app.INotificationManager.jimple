public interface  android.app.INotificationManager extends java.lang.Object implements android.os.IInterface
{

    public abstract void cancelAllNotifications(java.lang.String, int) throws android.os.RemoteException;

    public abstract void enqueueToast(java.lang.String, android.app.ITransientNotification, int) throws android.os.RemoteException;

    public abstract void cancelToast(java.lang.String, android.app.ITransientNotification) throws android.os.RemoteException;

    public abstract void enqueueNotificationWithTag(java.lang.String, java.lang.String, java.lang.String, int, android.app.Notification, int[], int) throws android.os.RemoteException;

    public abstract void cancelNotificationWithTag(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void setNotificationsEnabledForPackage(java.lang.String, int, boolean) throws android.os.RemoteException;

    public abstract boolean areNotificationsEnabledForPackage(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setPackagePriority(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract int getPackagePriority(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setPackageVisibilityOverride(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract int getPackageVisibilityOverride(java.lang.String, int) throws android.os.RemoteException;

    public abstract android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String) throws android.os.RemoteException;

    public abstract android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String, int) throws android.os.RemoteException;

    public abstract void registerListener(android.service.notification.INotificationListener, android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void unregisterListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException;

    public abstract void cancelNotificationFromListener(android.service.notification.INotificationListener, java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract void cancelNotificationsFromListener(android.service.notification.INotificationListener, java.lang.String[]) throws android.os.RemoteException;

    public abstract android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener, java.lang.String[], int) throws android.os.RemoteException;

    public abstract void requestHintsFromListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException;

    public abstract int getHintsFromListener(android.service.notification.INotificationListener) throws android.os.RemoteException;

    public abstract void requestInterruptionFilterFromListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException;

    public abstract int getInterruptionFilterFromListener(android.service.notification.INotificationListener) throws android.os.RemoteException;

    public abstract void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener, int) throws android.os.RemoteException;

    public abstract android.content.ComponentName getEffectsSuppressor() throws android.os.RemoteException;

    public abstract boolean matchesCallFilter(android.os.Bundle) throws android.os.RemoteException;

    public abstract android.service.notification.ZenModeConfig getZenModeConfig() throws android.os.RemoteException;

    public abstract boolean setZenModeConfig(android.service.notification.ZenModeConfig) throws android.os.RemoteException;

    public abstract void notifyConditions(java.lang.String, android.service.notification.IConditionProvider, android.service.notification.Condition[]) throws android.os.RemoteException;

    public abstract void requestZenModeConditions(android.service.notification.IConditionListener, int) throws android.os.RemoteException;

    public abstract void setZenModeCondition(android.service.notification.Condition) throws android.os.RemoteException;

    public abstract void setAutomaticZenModeConditions(android.net.Uri[]) throws android.os.RemoteException;

    public abstract android.service.notification.Condition[] getAutomaticZenModeConditions() throws android.os.RemoteException;
}
