public class android.content.pm.PackageInstaller extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String ACTION_SESSION_DETAILS;
    public static final java.lang.String ACTION_CONFIRM_PERMISSIONS;
    public static final java.lang.String EXTRA_SESSION_ID;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_STATUS;
    public static final java.lang.String EXTRA_STATUS_MESSAGE;
    public static final java.lang.String EXTRA_OTHER_PACKAGE_NAME;
    public static final java.lang.String EXTRA_STORAGE_PATH;
    public static final java.lang.String EXTRA_PACKAGE_NAMES;
    public static final java.lang.String EXTRA_LEGACY_STATUS;
    public static final java.lang.String EXTRA_LEGACY_BUNDLE;
    public static final java.lang.String EXTRA_CALLBACK;
    public static final int STATUS_PENDING_USER_ACTION;
    public static final int STATUS_SUCCESS;
    public static final int STATUS_FAILURE;
    public static final int STATUS_FAILURE_BLOCKED;
    public static final int STATUS_FAILURE_ABORTED;
    public static final int STATUS_FAILURE_INVALID;
    public static final int STATUS_FAILURE_CONFLICT;
    public static final int STATUS_FAILURE_STORAGE;
    public static final int STATUS_FAILURE_INCOMPATIBLE;
    private final android.content.Context mContext;
    private final android.content.pm.PackageManager mPm;
    private final android.content.pm.IPackageInstaller mInstaller;
    private final int mUserId;
    private final java.lang.String mInstallerPackageName;
    private final java.util.ArrayList mDelegates;

    public void <init>(android.content.Context, android.content.pm.PackageManager, android.content.pm.IPackageInstaller, java.lang.String, int)
    {
        android.content.pm.PackageInstaller r0;
        android.content.Context r1;
        android.content.pm.PackageManager r2;
        android.content.pm.IPackageInstaller r3;
        java.lang.String r4;
        int i0;
        java.util.ArrayList $r5;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.PackageManager;

        r3 := @parameter2: android.content.pm.IPackageInstaller;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.content.pm.PackageInstaller: java.util.ArrayList mDelegates> = $r5;

        r0.<android.content.pm.PackageInstaller: android.content.Context mContext> = r1;

        r0.<android.content.pm.PackageInstaller: android.content.pm.PackageManager mPm> = r2;

        r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller> = r3;

        r0.<android.content.pm.PackageInstaller: java.lang.String mInstallerPackageName> = r4;

        r0.<android.content.pm.PackageInstaller: int mUserId> = i0;

        return;
    }

    public int createSession(android.content.pm.PackageInstaller$SessionParams) throws java.io.IOException
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionParams r1;
        java.lang.RuntimeException r2, $r6, $r7;
        int $i0, $i1;
        java.lang.String $r3;
        android.content.pm.IPackageInstaller $r4;
        android.os.RemoteException $r5, r8;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionParams;

     label1:
        $r4 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $r3 = r0.<android.content.pm.PackageInstaller: java.lang.String mInstallerPackageName>;

        $i0 = r0.<android.content.pm.PackageInstaller: int mUserId>;

        $i1 = interfaceinvoke $r4.<android.content.pm.IPackageInstaller: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>(r1, $r3, $i0);

     label2:
        return $i1;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.ExceptionUtils: void maybeUnwrapIOException(java.lang.RuntimeException)>(r2);

        throw r2;

     label4:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = virtualinvoke r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.PackageInstaller$Session openSession(int) throws java.io.IOException
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        java.lang.RuntimeException r1, $r5, $r7;
        android.content.pm.PackageInstaller$Session $r2;
        android.content.pm.IPackageInstaller $r3;
        android.content.pm.IPackageInstallerSession $r4;
        android.os.RemoteException $r6, r8;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

     label1:
        $r2 = new android.content.pm.PackageInstaller$Session;

        $r3 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>(i0);

        specialinvoke $r2.<android.content.pm.PackageInstaller$Session: void <init>(android.content.pm.IPackageInstallerSession)>($r4);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.ExceptionUtils: void maybeUnwrapIOException(java.lang.RuntimeException)>(r1);

        throw r1;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = virtualinvoke r8.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r7;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void updateSessionAppIcon(int, android.graphics.Bitmap)
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        android.graphics.Bitmap r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageInstaller $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

     label1:
        $r3 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        interfaceinvoke $r3.<android.content.pm.IPackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = virtualinvoke r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateSessionAppLabel(int, java.lang.CharSequence)
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        java.lang.CharSequence r1;
        java.lang.String r2, $r4;
        android.content.pm.IPackageInstaller $r3;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

     label1:
        if r1 == null goto label2;

        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        r2 = $r4;

        $r3 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        interfaceinvoke $r3.<android.content.pm.IPackageInstaller: void updateSessionAppLabel(int,java.lang.String)>(i0, r2);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = virtualinvoke r7.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public void abandonSession(int)
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.content.pm.IPackageInstaller $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        interfaceinvoke $r2.<android.content.pm.IPackageInstaller: void abandonSession(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = virtualinvoke r1.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageInstaller $r2;
        android.content.pm.PackageInstaller$SessionInfo $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = virtualinvoke r1.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getAllSessions()
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.ApplicationInfo r1;
        android.os.RemoteException r2, $r10;
        android.content.Context $r3;
        java.lang.String $r4, $r5;
        boolean $z0;
        int $i0, $i1;
        android.content.pm.IPackageInstaller $r6;
        android.content.pm.ParceledListSlice $r7;
        java.util.List $r8, $r9;
        java.lang.RuntimeException $r11;

        r0 := @this: android.content.pm.PackageInstaller;

        $r3 = r0.<android.content.pm.PackageInstaller: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r5 = "com.google.android.googlequicksearchbox";

        $r4 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $i1 = r1.<android.content.pm.ApplicationInfo: int versionCode>;

        if $i1 > 300400110 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageInstaller", "Ignoring callback request from old prebuilt");

        $r9 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r9;

     label1:
        $r6 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $i0 = r0.<android.content.pm.PackageInstaller: int mUserId>;

        $r7 = interfaceinvoke $r6.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getAllSessions(int)>($i0);

        $r8 = virtualinvoke $r7.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return $r8;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = virtualinvoke r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r11;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getMySessions()
    {
        android.content.pm.PackageInstaller r0;
        android.os.RemoteException r1, $r6;
        int $i0;
        java.lang.String $r2;
        android.content.pm.IPackageInstaller $r3;
        android.content.pm.ParceledListSlice $r4;
        java.util.List $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.content.pm.PackageInstaller;

     label1:
        $r3 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $r2 = r0.<android.content.pm.PackageInstaller: java.lang.String mInstallerPackageName>;

        $i0 = r0.<android.content.pm.PackageInstaller: int mUserId>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>($r2, $i0);

        $r5 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void uninstall(java.lang.String, android.content.IntentSender)
    {
        android.content.pm.PackageInstaller r0;
        java.lang.String r1;
        android.content.IntentSender r2;
        android.os.RemoteException r3, $r5;
        int $i0;
        android.content.pm.IPackageInstaller $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.IntentSender;

     label1:
        $r4 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $i0 = r0.<android.content.pm.PackageInstaller: int mUserId>;

        interfaceinvoke $r4.<android.content.pm.IPackageInstaller: void uninstall(java.lang.String,int,android.content.IntentSender,int)>(r1, 0, r2, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = virtualinvoke r3.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setPermissionsResult(int, boolean)
    {
        android.content.pm.PackageInstaller r0;
        int i0;
        boolean z0;
        android.os.RemoteException r1, $r3;
        android.content.pm.IPackageInstaller $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.pm.PackageInstaller;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        interfaceinvoke $r2.<android.content.pm.IPackageInstaller: void setPermissionsResult(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = virtualinvoke r1.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addSessionCallback(android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        virtualinvoke r0.<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller$SessionCallback)>(r1);

        return;
    }

    public void registerSessionCallback(android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1;
        android.os.Handler $r2;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>()>();

        virtualinvoke r0.<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller$SessionCallback,android.os.Handler)>(r1, $r2);

        return;
    }

    public void addSessionCallback(android.content.pm.PackageInstaller$SessionCallback, android.os.Handler)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1;
        android.os.Handler r2;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        r2 := @parameter1: android.os.Handler;

        virtualinvoke r0.<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller$SessionCallback,android.os.Handler)>(r1, r2);

        return;
    }

    public void registerSessionCallback(android.content.pm.PackageInstaller$SessionCallback, android.os.Handler)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1;
        android.os.Handler r2;
        android.content.pm.ApplicationInfo r3;
        java.util.ArrayList r4, $r11, $r15;
        android.content.pm.PackageInstaller$SessionCallbackDelegate r5, $r12;
        android.os.RemoteException r6, $r17;
        java.lang.Throwable r7, $r16;
        android.content.Context $r8;
        java.lang.String $r9, $r10;
        boolean $z0;
        android.os.Looper $r13;
        android.content.pm.IPackageInstaller $r14;
        int $i0, $i1;
        java.lang.RuntimeException $r18;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        r2 := @parameter1: android.os.Handler;

        $r8 = r0.<android.content.pm.PackageInstaller: android.content.Context mContext>;

        r3 = virtualinvoke $r8.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r10 = "com.google.android.googlequicksearchbox";

        $r9 = r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label01;

        $i1 = r3.<android.content.pm.ApplicationInfo: int versionCode>;

        if $i1 > 300400110 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PackageInstaller", "Ignoring callback request from old prebuilt");

        return;

     label01:
        $r11 = r0.<android.content.pm.PackageInstaller: java.util.ArrayList mDelegates>;

        r4 = $r11;

        entermonitor $r11;

     label02:
        $r12 = new android.content.pm.PackageInstaller$SessionCallbackDelegate;

        $r13 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r12.<android.content.pm.PackageInstaller$SessionCallbackDelegate: void <init>(android.content.pm.PackageInstaller$SessionCallback,android.os.Looper)>(r1, $r13);

        r5 = $r12;

     label03:
        $r14 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        $i0 = r0.<android.content.pm.PackageInstaller: int mUserId>;

        interfaceinvoke $r14.<android.content.pm.IPackageInstaller: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>(r5, $i0);

     label04:
        goto label06;

     label05:
        $r17 := @caughtexception;

        r6 = $r17;

        $r18 = virtualinvoke r6.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r18;

     label06:
        $r15 = r0.<android.content.pm.PackageInstaller: java.util.ArrayList mDelegates>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r7 = $r16;

        exitmonitor r4;

     label09:
        throw r7;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void removeSessionCallback(android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        virtualinvoke r0.<android.content.pm.PackageInstaller: void unregisterSessionCallback(android.content.pm.PackageInstaller$SessionCallback)>(r1);

        return;
    }

    public void unregisterSessionCallback(android.content.pm.PackageInstaller$SessionCallback)
    {
        android.content.pm.PackageInstaller r0;
        android.content.pm.PackageInstaller$SessionCallback r1, $r10;
        java.util.ArrayList r2, $r7, $r8;
        java.util.Iterator r3;
        android.content.pm.PackageInstaller$SessionCallbackDelegate r4;
        android.os.RemoteException r5, $r13;
        java.lang.Throwable r6, $r12;
        boolean $z0;
        java.lang.Object $r9;
        android.content.pm.IPackageInstaller $r11;
        java.lang.RuntimeException $r14;

        r0 := @this: android.content.pm.PackageInstaller;

        r1 := @parameter0: android.content.pm.PackageInstaller$SessionCallback;

        $r7 = r0.<android.content.pm.PackageInstaller: java.util.ArrayList mDelegates>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<android.content.pm.PackageInstaller: java.util.ArrayList mDelegates>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.PackageInstaller$SessionCallbackDelegate) $r9;

        $r10 = r4.<android.content.pm.PackageInstaller$SessionCallbackDelegate: android.content.pm.PackageInstaller$SessionCallback mCallback>;

        if $r10 != r1 goto label07;

     label03:
        $r11 = r0.<android.content.pm.PackageInstaller: android.content.pm.IPackageInstaller mInstaller>;

        interfaceinvoke $r11.<android.content.pm.IPackageInstaller: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>(r4);

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        r5 = $r13;

        $r14 = virtualinvoke r5.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r14;

     label06:
        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label07:
        goto label02;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        r6 = $r12;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void <clinit>()
    {
        <android.content.pm.PackageInstaller: int STATUS_FAILURE_INCOMPATIBLE> = 7;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE_STORAGE> = 6;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE_CONFLICT> = 5;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE_INVALID> = 4;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE_ABORTED> = 3;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE_BLOCKED> = 2;

        <android.content.pm.PackageInstaller: int STATUS_FAILURE> = 1;

        <android.content.pm.PackageInstaller: int STATUS_SUCCESS> = 0;

        <android.content.pm.PackageInstaller: int STATUS_PENDING_USER_ACTION> = -1;

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_CALLBACK> = "android.content.pm.extra.CALLBACK";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_LEGACY_BUNDLE> = "android.content.pm.extra.LEGACY_BUNDLE";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_LEGACY_STATUS> = "android.content.pm.extra.LEGACY_STATUS";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_PACKAGE_NAMES> = "android.content.pm.extra.PACKAGE_NAMES";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_STORAGE_PATH> = "android.content.pm.extra.STORAGE_PATH";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_OTHER_PACKAGE_NAME> = "android.content.pm.extra.OTHER_PACKAGE_NAME";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_STATUS_MESSAGE> = "android.content.pm.extra.STATUS_MESSAGE";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_STATUS> = "android.content.pm.extra.STATUS";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_PACKAGE_NAME> = "android.content.pm.extra.PACKAGE_NAME";

        <android.content.pm.PackageInstaller: java.lang.String EXTRA_SESSION_ID> = "android.content.pm.extra.SESSION_ID";

        <android.content.pm.PackageInstaller: java.lang.String ACTION_CONFIRM_PERMISSIONS> = "android.content.pm.action.CONFIRM_PERMISSIONS";

        <android.content.pm.PackageInstaller: java.lang.String ACTION_SESSION_DETAILS> = "android.content.pm.action.SESSION_DETAILS";

        <android.content.pm.PackageInstaller: java.lang.String TAG> = "PackageInstaller";

        return;
    }
}
