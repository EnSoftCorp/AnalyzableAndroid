class android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize extends android.hardware.camera2.marshal.Marshaler
{
    final android.hardware.camera2.marshal.impl.MarshalQueryableSize this$0;

    protected void <init>(android.hardware.camera2.marshal.impl.MarshalQueryableSize, android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;
        android.hardware.camera2.marshal.impl.MarshalQueryableSize r1;
        android.hardware.camera2.utils.TypeReference r2;
        int i0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        r1 := @parameter0: android.hardware.camera2.marshal.impl.MarshalQueryableSize;

        r2 := @parameter1: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter2: int;

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize: android.hardware.camera2.marshal.impl.MarshalQueryableSize this$0> = r1;

        specialinvoke r0.<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>(r1, r2, i0);

        return;
    }

    public void marshal(android.util.Size, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;
        android.util.Size r1;
        java.nio.ByteBuffer r2;
        int $i0, $i1;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        r1 := @parameter0: android.util.Size;

        r2 := @parameter1: java.nio.ByteBuffer;

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        return;
    }

    public android.util.Size unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;
        java.nio.ByteBuffer r1;
        int i0, i1;
        android.util.Size $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        r1 := @parameter0: java.nio.ByteBuffer;

        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        $r2 = new android.util.Size;

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>(i0, i1);

        return $r2;
    }

    public int getNativeSize()
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        return 8;
    }

    public volatile java.lang.Object unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;
        java.nio.ByteBuffer r1;
        android.util.Size $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize: android.util.Size unmarshal(java.nio.ByteBuffer)>(r1);

        return $r2;
    }

    public volatile void marshal(java.lang.Object, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize r0;
        java.lang.Object r1;
        java.nio.ByteBuffer r2;
        android.util.Size $r3;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = (android.util.Size) r1;

        virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize: void marshal(android.util.Size,java.nio.ByteBuffer)>($r3, r2);

        return;
    }
}
