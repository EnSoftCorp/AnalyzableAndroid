class android.os.AsyncTask$InternalHandler extends android.os.Handler
{

    private void <init>()
    {
        android.os.AsyncTask$InternalHandler r0;

        r0 := @this: android.os.AsyncTask$InternalHandler;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.os.AsyncTask$InternalHandler r0;
        android.os.Message r1;
        android.os.AsyncTask$AsyncTaskResult r2;
        java.lang.Object $r3, $r7;
        int $i0;
        java.lang.Object[] $r4, $r6;
        android.os.AsyncTask $r5, $r8;

        r0 := @this: android.os.AsyncTask$InternalHandler;

        r1 := @parameter0: android.os.Message;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncTask$AsyncTaskResult) $r3;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = r2.<android.os.AsyncTask$AsyncTaskResult: android.os.AsyncTask mTask>;

        $r6 = r2.<android.os.AsyncTask$AsyncTaskResult: java.lang.Object[] mData>;

        $r7 = $r6[0];

        staticinvoke <android.os.AsyncTask: void access$600(android.os.AsyncTask,java.lang.Object)>($r8, $r7);

        goto label3;

     label2:
        $r5 = r2.<android.os.AsyncTask$AsyncTaskResult: android.os.AsyncTask mTask>;

        $r4 = r2.<android.os.AsyncTask$AsyncTaskResult: java.lang.Object[] mData>;

        virtualinvoke $r5.<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>($r4);

     label3:
        return;
    }

    void <init>(android.os.AsyncTask$1)
    {
        android.os.AsyncTask$InternalHandler r0;
        android.os.AsyncTask$1 r1;

        r0 := @this: android.os.AsyncTask$InternalHandler;

        r1 := @parameter0: android.os.AsyncTask$1;

        specialinvoke r0.<android.os.AsyncTask$InternalHandler: void <init>()>();

        return;
    }
}
