public abstract class android.service.persistentdata.IPersistentDataBlockService$Stub extends android.os.Binder implements android.service.persistentdata.IPersistentDataBlockService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_write;
    static final int TRANSACTION_read;
    static final int TRANSACTION_wipe;
    static final int TRANSACTION_getDataBlockSize;
    static final int TRANSACTION_getMaximumDataBlockSize;
    static final int TRANSACTION_setOemUnlockEnabled;
    static final int TRANSACTION_getOemUnlockEnabled;

    public void <init>()
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.service.persistentdata.IPersistentDataBlockService");

        return;
    }

    public static android.service.persistentdata.IPersistentDataBlockService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy $r2;
        boolean $z0;
        android.service.persistentdata.IPersistentDataBlockService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.service.persistentdata.IPersistentDataBlockService;

        if $z0 == 0 goto label2;

        $r3 = (android.service.persistentdata.IPersistentDataBlockService) r1;

        return $r3;

     label2:
        $r2 = new android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy;

        specialinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.service.persistentdata.IPersistentDataBlockService$Stub r0;
        int i0, i1, i2, $i4, i5;
        android.os.Parcel r1, r2;
        byte[] r3, r4;
        byte $b3;
        boolean $z0, $z1, z2, z3;
        long l6;

        r0 := @this: android.service.persistentdata.IPersistentDataBlockService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label10;
            case 1598968902: goto label01;
            default: goto label13;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        r3 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        i2 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: int write(byte[])>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        r4 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: byte[] read()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeByteArray(byte[])>(r4);

        return 1;

     label04:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void wipe()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        i5 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: int getDataBlockSize()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        l6 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: long getMaximumDataBlockSize()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l6);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        z2 = $z0;

        virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: void setOemUnlockEnabled(boolean)>(z2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.service.persistentdata.IPersistentDataBlockService");

        z3 = virtualinvoke r0.<android.service.persistentdata.IPersistentDataBlockService$Stub: boolean getOemUnlockEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z3 == 0 goto label11;

        $b3 = 1;

        goto label12;

     label11:
        $b3 = 0;

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b3);

        return 1;

     label13:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z1;
    }

    public static void <clinit>()
    {
        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getOemUnlockEnabled> = 7;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_setOemUnlockEnabled> = 6;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getMaximumDataBlockSize> = 5;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_getDataBlockSize> = 4;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_wipe> = 3;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_read> = 2;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: int TRANSACTION_write> = 1;

        <android.service.persistentdata.IPersistentDataBlockService$Stub: java.lang.String DESCRIPTOR> = "android.service.persistentdata.IPersistentDataBlockService";

        return;
    }
}
