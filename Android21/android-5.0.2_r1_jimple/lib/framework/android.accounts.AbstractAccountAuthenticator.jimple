public abstract class android.accounts.AbstractAccountAuthenticator extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private android.accounts.AbstractAccountAuthenticator$Transport mTransport;

    public void <init>(android.content.Context)
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.content.Context r1;
        android.accounts.AbstractAccountAuthenticator$Transport $r2;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.accounts.AbstractAccountAuthenticator$Transport;

        specialinvoke $r2.<android.accounts.AbstractAccountAuthenticator$Transport: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AbstractAccountAuthenticator$1)>(r0, null);

        r0.<android.accounts.AbstractAccountAuthenticator: android.accounts.AbstractAccountAuthenticator$Transport mTransport> = $r2;

        r0.<android.accounts.AbstractAccountAuthenticator: android.content.Context mContext> = r1;

        return;
    }

    private void handleException(android.accounts.IAccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.Exception) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        java.lang.String r2, r3, $r10, $r14, $r19, $r24, $r29, $r32, $r35, $r39;
        java.lang.Exception r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r38, $r40, $r41;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Exception;

        $z0 = r4 instanceof android.accounts.NetworkErrorException;

        if $z0 == 0 goto label2;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z5 == 0 goto label1;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountAuthenticator", $r39, r4);

     label1:
        $r35 = virtualinvoke r4.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>(3, $r35);

        goto label7;

     label2:
        $z1 = r4 instanceof java.lang.UnsupportedOperationException;

        if $z1 == 0 goto label4;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z4 == 0 goto label3;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountAuthenticator", $r32, r4);

     label3:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>(6, $r29);

        goto label7;

     label4:
        $z2 = r4 instanceof java.lang.IllegalArgumentException;

        if $z2 == 0 goto label6;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z3 == 0 goto label5;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountAuthenticator", $r24, r4);

     label5:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>(7, $r19);

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountAuthenticator", $r10, r4);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>(1, $r14);

     label7:
        return;
    }

    private void checkBinderPermission()
    {
        android.accounts.AbstractAccountAuthenticator r0;
        int i0, $i1;
        android.content.Context $r2;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = r0.<android.accounts.AbstractAccountAuthenticator: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCOUNT_MANAGER");

        if $i1 == 0 goto label1;

        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caller uid ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lacks ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.ACCOUNT_MANAGER");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        return;
    }

    public final android.os.IBinder getIBinder()
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.AbstractAccountAuthenticator$Transport $r1;
        android.os.IBinder $r2;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        $r1 = r0.<android.accounts.AbstractAccountAuthenticator: android.accounts.AbstractAccountAuthenticator$Transport mTransport>;

        $r2 = virtualinvoke $r1.<android.accounts.AbstractAccountAuthenticator$Transport: android.os.IBinder asBinder()>();

        return $r2;
    }

    public abstract android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String);

    public abstract android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle) throws android.accounts.NetworkErrorException;

    public abstract android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle) throws android.accounts.NetworkErrorException;

    public abstract android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle) throws android.accounts.NetworkErrorException;

    public abstract java.lang.String getAuthTokenLabel(java.lang.String);

    public abstract android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle) throws android.accounts.NetworkErrorException;

    public abstract android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[]) throws android.accounts.NetworkErrorException;

    public android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse, android.accounts.Account) throws android.accounts.NetworkErrorException
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3, $r4;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("booleanResult", 1);

        return r3;
    }

    public android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse, android.accounts.Account) throws android.accounts.NetworkErrorException
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.AbstractAccountAuthenticator$1 $r1;
        android.accounts.AccountAuthenticatorResponse r2;
        android.accounts.Account r3;
        java.lang.Thread $r4;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        r2 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r3 := @parameter1: android.accounts.Account;

        $r4 = new java.lang.Thread;

        $r1 = new android.accounts.AbstractAccountAuthenticator$1;

        specialinvoke $r1.<android.accounts.AbstractAccountAuthenticator$1: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>(r0, r2);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return null;
    }

    public android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle) throws android.accounts.NetworkErrorException
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3;
        java.lang.Thread $r4;
        android.accounts.AbstractAccountAuthenticator$2 $r5;

        r0 := @this: android.accounts.AbstractAccountAuthenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: android.os.Bundle;

        $r4 = new java.lang.Thread;

        $r5 = new android.accounts.AbstractAccountAuthenticator$2;

        specialinvoke $r5.<android.accounts.AbstractAccountAuthenticator$2: void <init>(android.accounts.AbstractAccountAuthenticator,android.accounts.AccountAuthenticatorResponse)>(r0, r1);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return null;
    }

    static void access$000(android.accounts.AbstractAccountAuthenticator)
    {
        android.accounts.AbstractAccountAuthenticator r0;

        r0 := @parameter0: android.accounts.AbstractAccountAuthenticator;

        specialinvoke r0.<android.accounts.AbstractAccountAuthenticator: void checkBinderPermission()>();

        return;
    }

    static void access$100(android.accounts.AbstractAccountAuthenticator, android.accounts.IAccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.Exception) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        java.lang.String r2, r3;
        java.lang.Exception r4;

        r0 := @parameter0: android.accounts.AbstractAccountAuthenticator;

        r1 := @parameter1: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Exception;

        specialinvoke r0.<android.accounts.AbstractAccountAuthenticator: void handleException(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>(r1, r2, r3, r4);

        return;
    }

    public static void <clinit>()
    {
        <android.accounts.AbstractAccountAuthenticator: java.lang.String TAG> = "AccountAuthenticator";

        return;
    }
}
