public class android.graphics.SweepGradient extends android.graphics.Shader
{
    private static final int TYPE_COLORS_AND_POSITIONS;
    private static final int TYPE_COLOR_START_AND_COLOR_END;
    private int mType;
    private float mCx;
    private float mCy;
    private int[] mColors;
    private float[] mPositions;
    private int mColor0;
    private int mColor1;

    public void <init>(float, float, int[], float[])
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        int[] r1;
        float[] r2;
        int $i0, $i2, $i3;
        long $l1;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: int[];

        r2 := @parameter3: float[];

        specialinvoke r0.<android.graphics.Shader: void <init>()>();

        $i0 = lengthof r1;

        if $i0 >= 2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("needs >= 2 number of colors");

        throw $r4;

     label1:
        if r2 == null goto label2;

        $i3 = lengthof r1;

        $i2 = lengthof r2;

        if $i3 == $i2 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("color and position arrays must be of equal length");

        throw $r3;

     label2:
        r0.<android.graphics.SweepGradient: int mType> = 1;

        r0.<android.graphics.SweepGradient: float mCx> = f0;

        r0.<android.graphics.SweepGradient: float mCy> = f1;

        r0.<android.graphics.SweepGradient: int[] mColors> = r1;

        r0.<android.graphics.SweepGradient: float[] mPositions> = r2;

        $l1 = staticinvoke <android.graphics.SweepGradient: long nativeCreate1(float,float,int[],float[])>(f0, f1, r1, r2);

        virtualinvoke r0.<android.graphics.SweepGradient: void init(long)>($l1);

        return;
    }

    public void <init>(float, float, int, int)
    {
        android.graphics.SweepGradient r0;
        float f0, f1;
        int i0, i1;
        long $l2;

        r0 := @this: android.graphics.SweepGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.graphics.Shader: void <init>()>();

        r0.<android.graphics.SweepGradient: int mType> = 2;

        r0.<android.graphics.SweepGradient: float mCx> = f0;

        r0.<android.graphics.SweepGradient: float mCy> = f1;

        r0.<android.graphics.SweepGradient: int mColor0> = i0;

        r0.<android.graphics.SweepGradient: int mColor1> = i1;

        $l2 = staticinvoke <android.graphics.SweepGradient: long nativeCreate2(float,float,int,int)>(f0, f1, i0, i1);

        virtualinvoke r0.<android.graphics.SweepGradient: void init(long)>($l2);

        return;
    }

    protected android.graphics.Shader copy()
    {
        android.graphics.SweepGradient r0, r1, $r2, $r3;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3;
        int[] $r4, $r7;
        java.lang.Object $r5, $r10;
        float[] $r6, $r8, $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: android.graphics.SweepGradient;

        $i0 = r0.<android.graphics.SweepGradient: int mType>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label5;
        };

     label1:
        $r3 = new android.graphics.SweepGradient;

        $f2 = r0.<android.graphics.SweepGradient: float mCx>;

        $f3 = r0.<android.graphics.SweepGradient: float mCy>;

        $r4 = r0.<android.graphics.SweepGradient: int[] mColors>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r7 = (int[]) $r5;

        $r6 = r0.<android.graphics.SweepGradient: float[] mPositions>;

        if $r6 == null goto label2;

        $r8 = r0.<android.graphics.SweepGradient: float[] mPositions>;

        $r10 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (float[]) $r10;

        goto label3;

     label2:
        $r9 = null;

     label3:
        specialinvoke $r3.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f2, $f3, $r7, $r9);

        r1 = $r3;

        goto label6;

     label4:
        $r2 = new android.graphics.SweepGradient;

        $f1 = r0.<android.graphics.SweepGradient: float mCx>;

        $f0 = r0.<android.graphics.SweepGradient: float mCy>;

        $i2 = r0.<android.graphics.SweepGradient: int mColor0>;

        $i1 = r0.<android.graphics.SweepGradient: int mColor1>;

        specialinvoke $r2.<android.graphics.SweepGradient: void <init>(float,float,int,int)>($f1, $f0, $i2, $i1);

        r1 = $r2;

        goto label6;

     label5:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SweepGradient should be created with either colors and positions or start color and end color");

        throw $r11;

     label6:
        virtualinvoke r0.<android.graphics.SweepGradient: void copyLocalMatrix(android.graphics.Shader)>(r1);

        return r1;
    }

    private static native long nativeCreate1(float, float, int[], float[]);

    private static native long nativeCreate2(float, float, int, int);

    public static void <clinit>()
    {
        <android.graphics.SweepGradient: int TYPE_COLOR_START_AND_COLOR_END> = 2;

        <android.graphics.SweepGradient: int TYPE_COLORS_AND_POSITIONS> = 1;

        return;
    }
}
