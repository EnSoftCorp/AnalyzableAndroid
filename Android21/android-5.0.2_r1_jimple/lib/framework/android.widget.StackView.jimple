public class android.widget.StackView extends android.widget.AdapterViewAnimator
{
    private final java.lang.String TAG;
    private static final int DEFAULT_ANIMATION_DURATION;
    private static final int MINIMUM_ANIMATION_DURATION;
    private static final int STACK_RELAYOUT_DURATION;
    private static final float PERSPECTIVE_SHIFT_FACTOR_Y;
    private static final float PERSPECTIVE_SHIFT_FACTOR_X;
    private float mPerspectiveShiftX;
    private float mPerspectiveShiftY;
    private float mNewPerspectiveShiftX;
    private float mNewPerspectiveShiftY;
    private static final float PERSPECTIVE_SCALE_FACTOR;
    private static final int ITEMS_SLIDE_UP;
    private static final int ITEMS_SLIDE_DOWN;
    private static final int GESTURE_NONE;
    private static final int GESTURE_SLIDE_UP;
    private static final int GESTURE_SLIDE_DOWN;
    private static final float SWIPE_THRESHOLD_RATIO;
    private static final float SLIDE_UP_RATIO;
    private static final int INVALID_POINTER;
    private static final int NUM_ACTIVE_VIEWS;
    private static final int FRAME_PADDING;
    private final android.graphics.Rect mTouchRect;
    private static final int MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE;
    private static final long MIN_TIME_BETWEEN_SCROLLS;
    private float mInitialY;
    private float mInitialX;
    private int mActivePointerId;
    private int mYVelocity;
    private int mSwipeGestureType;
    private int mSlideAmount;
    private int mSwipeThreshold;
    private int mTouchSlop;
    private int mMaximumVelocity;
    private android.view.VelocityTracker mVelocityTracker;
    private boolean mTransitionIsSetup;
    private int mResOutColor;
    private int mClickColor;
    private static android.widget.StackView$HolographicHelper sHolographicHelper;
    private android.widget.ImageView mHighlight;
    private android.widget.ImageView mClickFeedback;
    private boolean mClickFeedbackIsValid;
    private android.widget.StackView$StackSlider mStackSlider;
    private boolean mFirstLayoutHappened;
    private long mLastInteractionTime;
    private long mLastScrollTime;
    private int mStackMode;
    private int mFramePadding;
    private final android.graphics.Rect stackInvalidateRect;

    public void <init>(android.content.Context)
    {
        android.widget.StackView r0;
        android.content.Context r1;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843838);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.StackView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3;
        android.content.res.TypedArray r3;
        android.graphics.Rect $r4, $r5;
        int[] $r6;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.StackView: java.lang.String TAG> = "StackView";

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.StackView: android.graphics.Rect mTouchRect> = $r4;

        r0.<android.widget.StackView: int mYVelocity> = 0;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        r0.<android.widget.StackView: boolean mTransitionIsSetup> = 0;

        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 0;

        r0.<android.widget.StackView: boolean mFirstLayoutHappened> = 0;

        r0.<android.widget.StackView: long mLastInteractionTime> = 0L;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect> = $r5;

        $r6 = <com.android.internal.R$styleable: int[] StackView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r6, i0, i1);

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        r0.<android.widget.StackView: int mResOutColor> = $i2;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        r0.<android.widget.StackView: int mClickColor> = $i3;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.StackView: void initStackView()>();

        return;
    }

    private void initStackView()
    {
        android.widget.StackView r0;
        android.view.ViewConfiguration r1;
        float f0, $f1;
        android.content.Context $r2, $r4, $r13, $r23, $r25;
        int $i0, $i1, $i2;
        android.widget.ImageView $r3, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r18, $r19;
        android.widget.StackView$LayoutParams $r5, $r8, $r12, $r17;
        android.widget.StackView$HolographicHelper $r20, $r26;
        android.widget.StackView$StackSlider $r21;
        android.content.res.Resources $r22;
        double $d0, $d1;
        android.util.DisplayMetrics $r24;

        r0 := @this: android.widget.StackView;

        virtualinvoke r0.<android.widget.StackView: void configureViewAnimator(int,int)>(5, 1);

        virtualinvoke r0.<android.widget.StackView: void setStaticTransformationsEnabled(boolean)>(1);

        $r2 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.StackView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.StackView: int mMaximumVelocity> = $i1;

        r0.<android.widget.StackView: int mActivePointerId> = -1;

        $r3 = new android.widget.ImageView;

        $r4 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.ImageView: void <init>(android.content.Context)>($r4);

        r0.<android.widget.StackView: android.widget.ImageView mHighlight> = $r3;

        $r7 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $r5 = new android.widget.StackView$LayoutParams;

        $r6 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        specialinvoke $r5.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r6);

        virtualinvoke $r7.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r5);

        $r10 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $r8 = new android.widget.StackView$LayoutParams;

        $r9 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        specialinvoke $r8.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r9);

        virtualinvoke r0.<android.widget.StackView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r10, -1, $r8);

        $r11 = new android.widget.ImageView;

        $r13 = virtualinvoke r0.<android.widget.StackView: android.content.Context getContext()>();

        specialinvoke $r11.<android.widget.ImageView: void <init>(android.content.Context)>($r13);

        r0.<android.widget.StackView: android.widget.ImageView mClickFeedback> = $r11;

        $r14 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $r12 = new android.widget.StackView$LayoutParams;

        $r15 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        specialinvoke $r12.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r15);

        virtualinvoke $r14.<android.widget.ImageView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r12);

        $r18 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $r17 = new android.widget.StackView$LayoutParams;

        $r16 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        specialinvoke $r17.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, $r16);

        virtualinvoke r0.<android.widget.StackView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r18, -1, $r17);

        $r19 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r19.<android.widget.ImageView: void setVisibility(int)>(4);

        $r21 = new android.widget.StackView$StackSlider;

        specialinvoke $r21.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView)>(r0);

        r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider> = $r21;

        $r20 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        if $r20 != null goto label1;

        $r26 = new android.widget.StackView$HolographicHelper;

        $r25 = r0.<android.widget.StackView: android.content.Context mContext>;

        specialinvoke $r26.<android.widget.StackView$HolographicHelper: void <init>(android.content.Context)>($r25);

        <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper> = $r26;

     label1:
        virtualinvoke r0.<android.widget.StackView: void setClipChildren(boolean)>(0);

        virtualinvoke r0.<android.widget.StackView: void setClipToPadding(boolean)>(0);

        r0.<android.widget.StackView: int mStackMode> = 1;

        r0.<android.widget.StackView: int mWhichChild> = -1;

        $r23 = r0.<android.widget.StackView: android.content.Context mContext>;

        $r22 = virtualinvoke $r23.<android.content.Context: android.content.res.Resources getResources()>();

        $r24 = virtualinvoke $r22.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r24.<android.util.DisplayMetrics: float density>;

        $f1 = f0 * 4.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d1;

        r0.<android.widget.StackView: int mFramePadding> = $i2;

        return;
    }

    void transformViewForTransition(int, int, android.view.View, boolean)
    {
        android.widget.StackView r0;
        int i0, i1, $i2, $i4, $i6, $i7, i8, i9;
        android.view.View r1;
        boolean z0;
        android.widget.StackView$LayoutParams r2, r35;
        android.widget.StackView$StackSlider r3, $r10, $r11, $r12, $r20, $r21, $r23, r31;
        android.animation.PropertyValuesHolder r4, r5, r32, r33;
        android.animation.ObjectAnimator r6, r34;
        android.widget.StackView$1 $r7;
        android.view.ViewGroup$LayoutParams $r8, $r29;
        android.widget.StackView$StackFrame $r9, $r17, $r19, $r26, $r30;
        float $f0, $f1, $f2, $f3;
        float[] $r13, $r14, $r22, $r24;
        android.animation.PropertyValuesHolder[] $r15, $r25;
        long $l3, $l5;
        android.view.animation.LinearInterpolator $r18, $r27;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        if z0 != 0 goto label01;

        $r30 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r30.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        virtualinvoke r1.<android.view.View: void setRotationX(float)>(0.0F);

        $r29 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.StackView$LayoutParams) $r29;

        virtualinvoke r2.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        virtualinvoke r2.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

     label01:
        if i0 != -1 goto label02;

        $i6 = virtualinvoke r0.<android.widget.StackView: int getNumActiveViews()>();

        $i7 = $i6 - 1;

        if i1 != $i7 goto label02;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i1, r1, 0);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        goto label14;

     label02:
        if i0 != 0 goto label05;

        if i1 != 1 goto label05;

        $r19 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r19.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        $r21 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i4 = r0.<android.widget.StackView: int mYVelocity>;

        $f2 = (float) $i4;

        $f3 = virtualinvoke $r21.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition(float)>($f2);

        i8 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $r20 = new android.widget.StackView$StackSlider;

        $r23 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r20.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r23);

        r3 = $r20;

        virtualinvoke r3.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        if z0 == 0 goto label03;

        $r24 = newarray (float)[1];

        $r24[0] = 0.0F;

        r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r24);

        $r22 = newarray (float)[1];

        $r22[0] = 0.0F;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r22);

        $r25 = newarray (android.animation.PropertyValuesHolder)[2];

        $r25[0] = r5;

        $r25[1] = r4;

        r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r3, $r25);

        $l5 = (long) i8;

        virtualinvoke r6.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l5);

        $r27 = new android.view.animation.LinearInterpolator;

        specialinvoke $r27.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r6.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r27);

        $r26 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r26.<android.widget.StackView$StackFrame: void setSliderAnimator(android.animation.ObjectAnimator)>(r6);

        virtualinvoke r6.<android.animation.ObjectAnimator: void start()>();

        goto label04;

     label03:
        virtualinvoke r3.<android.widget.StackView$StackSlider: void setYProgress(float)>(0.0F);

        virtualinvoke r3.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label04:
        goto label14;

     label05:
        if i0 != 1 goto label08;

        if i1 != 0 goto label08;

        $r9 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r9.<android.widget.StackView$StackFrame: boolean cancelSliderAnimator()>();

        $r10 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i2 = r0.<android.widget.StackView: int mYVelocity>;

        $f0 = (float) $i2;

        $f1 = virtualinvoke $r10.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition(float)>($f0);

        i9 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $r12 = new android.widget.StackView$StackSlider;

        $r11 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r12.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r11);

        r31 = $r12;

        virtualinvoke r31.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        if z0 == 0 goto label06;

        $r13 = newarray (float)[1];

        $r13[0] = 1.0F;

        r32 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r13);

        $r14 = newarray (float)[1];

        $r14[0] = 0.0F;

        r33 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r14);

        $r15 = newarray (android.animation.PropertyValuesHolder)[2];

        $r15[0] = r33;

        $r15[1] = r32;

        r34 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r31, $r15);

        $l3 = (long) i9;

        virtualinvoke r34.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        $r18 = new android.view.animation.LinearInterpolator;

        specialinvoke $r18.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r34.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r18);

        $r17 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r17.<android.widget.StackView$StackFrame: void setSliderAnimator(android.animation.ObjectAnimator)>(r34);

        virtualinvoke r34.<android.animation.ObjectAnimator: void start()>();

        goto label07;

     label06:
        virtualinvoke r31.<android.widget.StackView$StackSlider: void setYProgress(float)>(1.0F);

        virtualinvoke r31.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label07:
        goto label14;

     label08:
        if i1 != 0 goto label09;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(4);

        goto label14;

     label09:
        if i0 == 0 goto label10;

        if i0 != 1 goto label11;

     label10:
        if i1 <= 1 goto label11;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setRotationX(float)>(0.0F);

        $r8 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r35 = (android.widget.StackView$LayoutParams) $r8;

        virtualinvoke r35.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        virtualinvoke r35.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

        goto label14;

     label11:
        if i0 != -1 goto label12;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

        goto label14;

     label12:
        if i1 != -1 goto label14;

        if z0 == 0 goto label13;

        $r7 = new android.widget.StackView$1;

        specialinvoke $r7.<android.widget.StackView$1: void <init>(android.widget.StackView,android.view.View)>(r0, r1);

        virtualinvoke r0.<android.widget.StackView: boolean postDelayed(java.lang.Runnable,long)>($r7, 100L);

        goto label14;

     label13:
        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

     label14:
        if i1 == -1 goto label15;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i1, r1, z0);

     label15:
        return;
    }

    private void transformViewAtIndex(int, android.view.View, boolean)
    {
        android.widget.StackView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.view.View r1;
        boolean z0, $z1, $z2;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.animation.PropertyValuesHolder r2, r3, r4, r5;
        android.animation.ObjectAnimator r6;
        float[] $r7, $r8, $r9, $r11;
        android.animation.PropertyValuesHolder[] $r10;
        android.widget.StackView$StackFrame $r12, $r14;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        f0 = r0.<android.widget.StackView: float mPerspectiveShiftY>;

        f1 = r0.<android.widget.StackView: float mPerspectiveShiftX>;

        $i1 = r0.<android.widget.StackView: int mStackMode>;

        if $i1 != 1 goto label1;

        $i7 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i6 = $i7 - i0;

        i10 = $i6 - 1;

        $i9 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i8 = $i9 - 1;

        if i10 != $i8 goto label2;

        i10 = i10 + -1;

        goto label2;

     label1:
        i10 = i0 + -1;

        if i10 >= 0 goto label2;

        i10 = i10 + 1;

     label2:
        $f10 = (float) i10;

        $f13 = $f10 * 1.0F;

        $i2 = r0.<android.widget.StackView: int mMaxNumActiveViews>;

        $i3 = $i2 - 2;

        $f11 = (float) $i3;

        f2 = $f13 / $f11;

        $f12 = 1.0F - f2;

        $f15 = 0.0F * $f12;

        f3 = 1.0F - $f15;

        f4 = f2 * f0;

        $f14 = f3 - 1.0F;

        $i4 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f16 = (float) $i4;

        $f18 = $f16 * 0.9F;

        $f17 = $f18 / 2.0F;

        f5 = $f14 * $f17;

        f6 = f4 + f5;

        $f20 = 1.0F - f2;

        f7 = $f20 * f1;

        $f21 = 1.0F - f3;

        $i5 = virtualinvoke r0.<android.widget.StackView: int getMeasuredWidth()>();

        $f19 = (float) $i5;

        $f22 = $f19 * 0.9F;

        $f23 = $f22 / 2.0F;

        f8 = $f21 * $f23;

        f9 = f7 + f8;

        $z1 = r1 instanceof android.widget.StackView$StackFrame;

        if $z1 == 0 goto label3;

        $r14 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r14.<android.widget.StackView$StackFrame: boolean cancelTransformAnimator()>();

     label3:
        if z0 == 0 goto label5;

        $r7 = newarray (float)[1];

        $r7[0] = f9;

        r2 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("translationX", $r7);

        $r9 = newarray (float)[1];

        $r9[0] = f6;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("translationY", $r9);

        $r8 = newarray (float)[1];

        $r8[0] = f3;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("scaleX", $r8);

        $r11 = newarray (float)[1];

        $r11[0] = f3;

        r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("scaleY", $r11);

        $r10 = newarray (android.animation.PropertyValuesHolder)[4];

        $r10[0] = r5;

        $r10[1] = r4;

        $r10[2] = r3;

        $r10[3] = r2;

        r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r1, $r10);

        virtualinvoke r6.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(100L);

        $z2 = r1 instanceof android.widget.StackView$StackFrame;

        if $z2 == 0 goto label4;

        $r12 = (android.widget.StackView$StackFrame) r1;

        virtualinvoke $r12.<android.widget.StackView$StackFrame: void setTransformAnimator(android.animation.ObjectAnimator)>(r6);

     label4:
        virtualinvoke r6.<android.animation.ObjectAnimator: void start()>();

        goto label6;

     label5:
        virtualinvoke r1.<android.view.View: void setTranslationX(float)>(f9);

        virtualinvoke r1.<android.view.View: void setTranslationY(float)>(f6);

        virtualinvoke r1.<android.view.View: void setScaleX(float)>(f3);

        virtualinvoke r1.<android.view.View: void setScaleY(float)>(f3);

     label6:
        return;
    }

    private void setupStackSlider(android.view.View, int)
    {
        android.widget.StackView r0;
        android.view.View r1;
        int i0, $i1;
        android.widget.StackView$StackSlider $r2, $r10;
        android.widget.StackView$HolographicHelper $r3;
        android.widget.ImageView $r4, $r6, $r7, $r8, $r9;
        android.graphics.Bitmap $r5;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setMode(int)>(i0);

        if r1 == null goto label1;

        $r4 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $r3 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        $i1 = r0.<android.widget.StackView: int mResOutColor>;

        $r5 = virtualinvoke $r3.<android.widget.StackView$HolographicHelper: android.graphics.Bitmap createResOutline(android.view.View,int)>(r1, $i1);

        virtualinvoke $r4.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r5);

        $r6 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f0 = virtualinvoke r1.<android.view.View: float getRotation()>();

        virtualinvoke $r6.<android.widget.ImageView: void setRotation(float)>($f0);

        $r7 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        virtualinvoke $r7.<android.widget.ImageView: void setTranslationY(float)>($f1);

        $r8 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        $f2 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        virtualinvoke $r8.<android.widget.ImageView: void setTranslationX(float)>($f2);

        $r9 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r9.<android.widget.ImageView: void bringToFront()>();

        virtualinvoke r1.<android.view.View: void bringToFront()>();

        $r10 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r10.<android.widget.StackView$StackSlider: void setView(android.view.View)>(r1);

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label1:
        return;
    }

    public void showNext()
    {
        android.widget.StackView r0;
        android.view.View r1;
        int $i0;
        boolean $z0;
        android.widget.StackView$StackSlider $r2, $r3;

        r0 := @this: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<android.widget.StackView: boolean mTransitionIsSetup>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(1);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, 0);

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setYProgress(float)>(0.0F);

        $r3 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r3.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label2:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void showNext()>();

        return;
    }

    public void showPrevious()
    {
        android.widget.StackView r0;
        android.view.View r1;
        int $i0;
        boolean $z0;
        android.widget.StackView$StackSlider $r2, $r3;

        r0 := @this: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<android.widget.StackView: boolean mTransitionIsSetup>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(0);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, 0);

        $r2 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r2.<android.widget.StackView$StackSlider: void setYProgress(float)>(1.0F);

        $r3 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r3.<android.widget.StackView$StackSlider: void setXProgress(float)>(0.0F);

     label2:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void showPrevious()>();

        return;
    }

    void showOnly(int, boolean)
    {
        android.widget.StackView r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0;
        android.widget.AdapterViewAnimator$ViewAndMetaData r1, $r11;
        android.view.View r2;
        android.widget.ImageView $r3, $r4;
        java.util.HashMap $r5, $r8;
        java.lang.Integer $r6, $r10;
        java.lang.Object $r7, $r9;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>(i0, z0);

        i1 = r0.<android.widget.StackView: int mCurrentWindowEnd>;

     label1:
        $i3 = r0.<android.widget.StackView: int mCurrentWindowStart>;

        if i1 < $i3 goto label3;

        $i4 = virtualinvoke r0.<android.widget.StackView: int getWindowSize()>();

        i2 = virtualinvoke r0.<android.widget.StackView: int modulo(int,int)>(i1, $i4);

        $r5 = r0.<android.widget.StackView: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r1 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r7;

        if r1 == null goto label2;

        $r8 = r0.<android.widget.StackView: java.util.HashMap mViewsMap>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r9;

        r2 = $r11.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        if r2 == null goto label2;

        virtualinvoke r2.<android.view.View: void bringToFront()>();

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r3 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r4.<android.widget.ImageView: void bringToFront()>();

     label4:
        r0.<android.widget.StackView: boolean mTransitionIsSetup> = 0;

        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 0;

        return;
    }

    void updateClickFeedback()
    {
        android.widget.StackView r0;
        android.view.View r1;
        boolean $z0;
        int $i0;
        android.widget.StackView$HolographicHelper $r2;
        android.widget.ImageView $r3, $r5, $r6;
        android.graphics.Bitmap $r4;
        float $f0, $f1;

        r0 := @this: android.widget.StackView;

        $z0 = r0.<android.widget.StackView: boolean mClickFeedbackIsValid>;

        if $z0 != 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(1);

        if r1 == null goto label1;

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $r2 = <android.widget.StackView: android.widget.StackView$HolographicHelper sHolographicHelper>;

        $i0 = r0.<android.widget.StackView: int mClickColor>;

        $r4 = virtualinvoke $r2.<android.widget.StackView$HolographicHelper: android.graphics.Bitmap createClickOutline(android.view.View,int)>(r1, $i0);

        virtualinvoke $r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r4);

        $r5 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $f0 = virtualinvoke r1.<android.view.View: float getTranslationX()>();

        virtualinvoke $r5.<android.widget.ImageView: void setTranslationX(float)>($f0);

        $r6 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        $f1 = virtualinvoke r1.<android.view.View: float getTranslationY()>();

        virtualinvoke $r6.<android.widget.ImageView: void setTranslationY(float)>($f1);

     label1:
        r0.<android.widget.StackView: boolean mClickFeedbackIsValid> = 1;

     label2:
        return;
    }

    void showTapFeedback(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.ImageView $r2, $r3;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.widget.StackView: void updateClickFeedback()>();

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r2.<android.widget.ImageView: void setVisibility(int)>(0);

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r3.<android.widget.ImageView: void bringToFront()>();

        virtualinvoke r0.<android.widget.StackView: void invalidate()>();

        return;
    }

    void hideTapFeedback(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.ImageView $r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        virtualinvoke $r2.<android.widget.ImageView: void setVisibility(int)>(4);

        virtualinvoke r0.<android.widget.StackView: void invalidate()>();

        return;
    }

    private void updateChildTransforms()
    {
        android.widget.StackView r0;
        int i0, $i1;
        android.view.View r1;

        r0 := @this: android.widget.StackView;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.widget.StackView: int getNumActiveViews()>();

        if i0 >= $i1 goto label3;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(i0);

        if r1 == null goto label2;

        specialinvoke r0.<android.widget.StackView: void transformViewAtIndex(int,android.view.View,boolean)>(i0, r1, 0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    android.widget.FrameLayout getFrameForChild()
    {
        android.widget.StackView r0;
        android.widget.StackView$StackFrame r1, $r2;
        android.content.Context $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.StackView;

        $r2 = new android.widget.StackView$StackFrame;

        $r3 = r0.<android.widget.StackView: android.content.Context mContext>;

        specialinvoke $r2.<android.widget.StackView$StackFrame: void <init>(android.content.Context)>($r3);

        r1 = $r2;

        $i3 = r0.<android.widget.StackView: int mFramePadding>;

        $i2 = r0.<android.widget.StackView: int mFramePadding>;

        $i1 = r0.<android.widget.StackView: int mFramePadding>;

        $i0 = r0.<android.widget.StackView: int mFramePadding>;

        virtualinvoke r1.<android.widget.StackView$StackFrame: void setPadding(int,int,int,int)>($i3, $i2, $i1, $i0);

        return r1;
    }

    void applyTransformForChildAtIndex(android.view.View, int)
    {
        android.widget.StackView r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.StackView r0;
        android.graphics.Canvas r1;
        boolean z0, $z3;
        int i0, i1, $i3, $i5, $i6;
        android.view.View r2;
        android.widget.StackView$LayoutParams r3;
        android.graphics.Rect r4, $r5, $r7, $r9;
        android.graphics.Region$Op $r6;
        android.view.ViewGroup$LayoutParams $r8;
        byte $b4;
        float $f0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.graphics.Canvas;

        z0 = 0;

        $r5 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r5);

        i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r2 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i1);

        $r8 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.StackView$LayoutParams) $r8;

        $i3 = r3.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        if $i3 != 0 goto label2;

        $i6 = r3.<android.widget.StackView$LayoutParams: int verticalOffset>;

        if $i6 == 0 goto label3;

     label2:
        $f0 = virtualinvoke r2.<android.view.View: float getAlpha()>();

        $b4 = $f0 cmpl 0.0F;

        if $b4 == 0 goto label3;

        $i5 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i5 == 0 goto label4;

     label3:
        virtualinvoke r3.<android.widget.StackView$LayoutParams: void resetInvalidateRect()>();

     label4:
        r4 = virtualinvoke r3.<android.widget.StackView$LayoutParams: android.graphics.Rect getInvalidateRect()>();

        $z3 = virtualinvoke r4.<android.graphics.Rect: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        z0 = 1;

        $r9 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        virtualinvoke $r9.<android.graphics.Rect: void union(android.graphics.Rect)>(r4);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r1.<android.graphics.Canvas: int save(int)>(2);

        $r7 = r0.<android.widget.StackView: android.graphics.Rect stackInvalidateRect>;

        $r6 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>($r7, $r6);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void dispatchDraw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label8;

     label7:
        specialinvoke r0.<android.widget.AdapterViewAnimator: void dispatchDraw(android.graphics.Canvas)>(r1);

     label8:
        return;
    }

    private void onLayout()
    {
        android.widget.StackView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: android.widget.StackView;

        $z0 = r0.<android.widget.StackView: boolean mFirstLayoutHappened>;

        if $z0 != 0 goto label1;

        r0.<android.widget.StackView: boolean mFirstLayoutHappened> = 1;

        specialinvoke r0.<android.widget.StackView: void updateChildTransforms()>();

     label1:
        $i1 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f0 = (float) $i1;

        $f1 = 0.7F * $f0;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i2 = r0.<android.widget.StackView: int mSlideAmount>;

        if $i2 == i0 goto label2;

        r0.<android.widget.StackView: int mSlideAmount> = i0;

        $f8 = (float) i0;

        $f9 = 0.2F * $f8;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f9);

        r0.<android.widget.StackView: int mSwipeThreshold> = $i5;

     label2:
        $f3 = r0.<android.widget.StackView: float mPerspectiveShiftY>;

        $f2 = r0.<android.widget.StackView: float mNewPerspectiveShiftY>;

        $i3 = staticinvoke <java.lang.Float: int compare(float,float)>($f3, $f2);

        if $i3 != 0 goto label3;

        $f7 = r0.<android.widget.StackView: float mPerspectiveShiftX>;

        $f6 = r0.<android.widget.StackView: float mNewPerspectiveShiftX>;

        $i4 = staticinvoke <java.lang.Float: int compare(float,float)>($f7, $f6);

        if $i4 == 0 goto label4;

     label3:
        $f4 = r0.<android.widget.StackView: float mNewPerspectiveShiftY>;

        r0.<android.widget.StackView: float mPerspectiveShiftY> = $f4;

        $f5 = r0.<android.widget.StackView: float mNewPerspectiveShiftX>;

        r0.<android.widget.StackView: float mPerspectiveShiftX> = $f5;

        specialinvoke r0.<android.widget.StackView: void updateChildTransforms()>();

     label4:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        float f0;
        int $i0, $i1, $i2;
        boolean $z0;
        byte $b3, $b4;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label3;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i2)
        {
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        specialinvoke r0.<android.widget.StackView: void pacedScroll(boolean)>(0);

        return 1;

     label2:
        $b4 = f0 cmpl 0.0F;

        if $b4 <= 0 goto label3;

        specialinvoke r0.<android.widget.StackView: void pacedScroll(boolean)>(1);

        return 1;

     label3:
        $z0 = specialinvoke r0.<android.widget.AdapterViewAnimator: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    private void pacedScroll(boolean)
    {
        android.widget.StackView r0;
        boolean z0;
        long l0, $l1, $l2, $l4;
        byte $b3;

        r0 := @this: android.widget.StackView;

        z0 := @parameter0: boolean;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<android.widget.StackView: long mLastScrollTime>;

        l0 = $l1 - $l2;

        $b3 = l0 cmp 100L;

        if $b3 <= 0 goto label3;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label2:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.widget.StackView: long mLastScrollTime> = $l4;

     label3:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float f0, f1, $f2, $f3, $f4;
        boolean $z0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i2 = i0 & 255;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label4;
            default: goto label6;
        };

     label1:
        $i3 = r0.<android.widget.StackView: int mActivePointerId>;

        if $i3 != -1 goto label6;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.widget.StackView: float mInitialX> = $f2;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.widget.StackView: float mInitialY> = $f3;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.StackView: int mActivePointerId> = $i5;

        goto label6;

     label2:
        $i6 = r0.<android.widget.StackView: int mActivePointerId>;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i6);

        if i1 != -1 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("StackView", "Error: No data for our primary pointer.");

        return 0;

     label3:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        $f4 = r0.<android.widget.StackView: float mInitialY>;

        f1 = f0 - $f4;

        specialinvoke r0.<android.widget.StackView: void beginGestureIfNeeded(float)>(f1);

        goto label6;

     label4:
        specialinvoke r0.<android.widget.StackView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label6;

     label5:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

     label6:
        $i4 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i4 == 0 goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }

    private void beginGestureIfNeeded(float)
    {
        android.widget.StackView r0;
        float f0, $f1;
        byte b0, b3, $b7, $b18, $b19, $b20;
        int i1, i2, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.View r1;
        android.widget.Adapter $r2;

        r0 := @this: android.widget.StackView;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i5 = (int) $f1;

        $i4 = r0.<android.widget.StackView: int mTouchSlop>;

        if $i5 <= $i4 goto label27;

        $i6 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i6 != 0 goto label27;

        $b7 = f0 cmpg 0.0F;

        if $b7 >= 0 goto label01;

        $b19 = 1;

        goto label02;

     label01:
        $b19 = 2;

     label02:
        b0 = $b19;

        virtualinvoke r0.<android.widget.StackView: void cancelLongPress()>();

        virtualinvoke r0.<android.widget.StackView: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $r2 = r0.<android.widget.StackView: android.widget.Adapter mAdapter>;

        if $r2 != null goto label03;

        return;

     label03:
        i1 = virtualinvoke r0.<android.widget.StackView: int getCount()>();

        $i8 = r0.<android.widget.StackView: int mStackMode>;

        if $i8 != 0 goto label06;

        if b0 != 2 goto label04;

        $b18 = 0;

        goto label05;

     label04:
        $b18 = 1;

     label05:
        i2 = $b18;

        goto label09;

     label06:
        if b0 != 2 goto label07;

        $b20 = 1;

        goto label08;

     label07:
        $b20 = 0;

     label08:
        i2 = $b20;

     label09:
        $z2 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z2 == 0 goto label12;

        if i1 != 1 goto label12;

        $i17 = r0.<android.widget.StackView: int mStackMode>;

        if $i17 != 0 goto label10;

        if b0 == 1 goto label11;

     label10:
        $i16 = r0.<android.widget.StackView: int mStackMode>;

        if $i16 != 1 goto label12;

        if b0 != 2 goto label12;

     label11:
        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        z0 = $z7;

        $z4 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z4 == 0 goto label16;

        if i1 != 1 goto label16;

        $i13 = r0.<android.widget.StackView: int mStackMode>;

        if $i13 != 1 goto label14;

        if b0 == 1 goto label15;

     label14:
        $i15 = r0.<android.widget.StackView: int mStackMode>;

        if $i15 != 0 goto label16;

        if b0 != 2 goto label16;

     label15:
        $z6 = 1;

        goto label17;

     label16:
        $z6 = 0;

     label17:
        z1 = $z6;

        $z3 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z3 == 0 goto label18;

        if z1 != 0 goto label18;

        if z0 != 0 goto label18;

        b3 = 0;

        goto label23;

     label18:
        $i10 = r0.<android.widget.StackView: int mCurrentWindowStartUnbounded>;

        $i9 = $i10 + i2;

        if $i9 == -1 goto label19;

        if z1 == 0 goto label20;

     label19:
        i2 = i2 + 1;

        b3 = 1;

        goto label23;

     label20:
        $i12 = r0.<android.widget.StackView: int mCurrentWindowStartUnbounded>;

        $i14 = $i12 + i2;

        $i11 = i1 - 1;

        if $i14 == $i11 goto label21;

        if z0 == 0 goto label22;

     label21:
        b3 = 2;

        goto label23;

     label22:
        b3 = 0;

     label23:
        if b3 != 0 goto label24;

        $z5 = 1;

        goto label25;

     label24:
        $z5 = 0;

     label25:
        r0.<android.widget.StackView: boolean mTransitionIsSetup> = $z5;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(i2);

        if r1 != null goto label26;

        return;

     label26:
        specialinvoke r0.<android.widget.StackView: void setupStackSlider(android.view.View,int)>(r1, b3);

        r0.<android.widget.StackView: int mSwipeGestureType> = b0;

        virtualinvoke r0.<android.widget.StackView: void cancelHandleClick()>();

     label27:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22;
        android.view.VelocityTracker $r2, $r3, $r8;
        android.widget.StackView$StackSlider $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i2 = r0.<android.widget.StackView: int mActivePointerId>;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i2);

        if i1 != -1 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("StackView", "Error: No data for our primary pointer.");

        return 0;

     label01:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i1);

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i1);

        $f7 = r0.<android.widget.StackView: float mInitialY>;

        f2 = f0 - $f7;

        $f6 = r0.<android.widget.StackView: float mInitialX>;

        f3 = f1 - $f6;

        $r3 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label02;

        $r8 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker> = $r8;

     label02:
        $r2 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i4 = i0 & 255;

        tableswitch($i4)
        {
            case 1: goto label07;
            case 2: goto label03;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label08;
            default: goto label10;
        };

     label03:
        specialinvoke r0.<android.widget.StackView: void beginGestureIfNeeded(float)>(f2);

        $i3 = r0.<android.widget.StackView: int mSlideAmount>;

        $f9 = (float) $i3;

        $f8 = $f9 * 1.0F;

        f4 = f3 / $f8;

        $i6 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i6 != 2 goto label05;

        $i10 = r0.<android.widget.StackView: int mTouchSlop>;

        $f16 = (float) $i10;

        $f17 = $f16 * 1.0F;

        $f18 = f2 - $f17;

        $i11 = r0.<android.widget.StackView: int mSlideAmount>;

        $f20 = (float) $i11;

        $f19 = $f18 / $f20;

        f5 = $f19 * 1.0F;

        $i12 = r0.<android.widget.StackView: int mStackMode>;

        if $i12 != 1 goto label04;

        f5 = 1.0F - f5;

     label04:
        $r6 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f21 = 1.0F - f5;

        virtualinvoke $r6.<android.widget.StackView$StackSlider: void setYProgress(float)>($f21);

        $r7 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r7.<android.widget.StackView$StackSlider: void setXProgress(float)>(f4);

        return 1;

     label05:
        $i5 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i5 != 1 goto label10;

        $i7 = r0.<android.widget.StackView: int mTouchSlop>;

        $f10 = (float) $i7;

        $f12 = $f10 * 1.0F;

        $f11 = f2 + $f12;

        $f14 = neg $f11;

        $i8 = r0.<android.widget.StackView: int mSlideAmount>;

        $f13 = (float) $i8;

        $f15 = $f14 / $f13;

        f22 = $f15 * 1.0F;

        $i9 = r0.<android.widget.StackView: int mStackMode>;

        if $i9 != 1 goto label06;

        f22 = 1.0F - f22;

     label06:
        $r4 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r4.<android.widget.StackView$StackSlider: void setYProgress(float)>(f22);

        $r5 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        virtualinvoke $r5.<android.widget.StackView$StackSlider: void setXProgress(float)>(f4);

        return 1;

     label07:
        specialinvoke r0.<android.widget.StackView: void handlePointerUp(android.view.MotionEvent)>(r1);

        goto label10;

     label08:
        specialinvoke r0.<android.widget.StackView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        goto label10;

     label09:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

     label10:
        return 1;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        byte b2, $b13;
        android.view.View r2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.graphics.Rect $r3, $r4;
        boolean $z0;
        android.view.VelocityTracker $r5, $r6;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i4 = r0.<android.widget.StackView: int mActivePointerId>;

        if i1 != $i4 goto label8;

        $i5 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i5 != 2 goto label1;

        $b13 = 0;

        goto label2;

     label1:
        $b13 = 1;

     label2:
        b2 = $b13;

        r2 = virtualinvoke r0.<android.widget.StackView: android.view.View getViewAtRelativeIndex(int)>(b2);

        if r2 != null goto label3;

        return;

     label3:
        i3 = 0;

     label4:
        $i6 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if i3 >= $i6 goto label7;

        if i3 == i0 goto label6;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i3);

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i3);

        $r3 = r0.<android.widget.StackView: android.graphics.Rect mTouchRect>;

        $i8 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i7 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i10 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i9 = virtualinvoke r2.<android.view.View: int getBottom()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>($i8, $i7, $i10, $i9);

        $r4 = r0.<android.widget.StackView: android.graphics.Rect mTouchRect>;

        $i11 = staticinvoke <java.lang.Math: int round(float)>(f0);

        $i12 = staticinvoke <java.lang.Math: int round(float)>(f1);

        $z0 = virtualinvoke $r4.<android.graphics.Rect: boolean contains(int,int)>($i11, $i12);

        if $z0 == 0 goto label6;

        f2 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        f3 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $f4 = r0.<android.widget.StackView: float mInitialY>;

        $f5 = f1 - f3;

        $f8 = $f4 + $f5;

        r0.<android.widget.StackView: float mInitialY> = $f8;

        $f6 = r0.<android.widget.StackView: float mInitialX>;

        $f9 = f0 - f2;

        $f7 = $f6 + $f9;

        r0.<android.widget.StackView: float mInitialX> = $f7;

        $i14 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i3);

        r0.<android.widget.StackView: int mActivePointerId> = $i14;

        $r6 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if $r6 == null goto label5;

        $r5 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void clear()>();

     label5:
        return;

     label6:
        i3 = i3 + 1;

        goto label4;

     label7:
        specialinvoke r0.<android.widget.StackView: void handlePointerUp(android.view.MotionEvent)>(r1);

     label8:
        return;
    }

    private void handlePointerUp(android.view.MotionEvent)
    {
        android.widget.StackView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        android.widget.StackView$StackSlider r2, $r8, $r9, $r11, $r15, $r16, $r17, $r18, $r19, $r24, $r25, $r27, $r31, r34;
        android.animation.PropertyValuesHolder r3, r4, r35, r36;
        android.animation.ObjectAnimator r5, r37;
        android.view.VelocityTracker $r6, $r7, $r30, $r32, $r33;
        long $l4, $l12, $l16;
        float[] $r10, $r13, $r20, $r21;
        android.animation.PropertyValuesHolder[] $r12, $r23;
        android.view.animation.LinearInterpolator $r26;
        android.widget.ImageView $r28, $r29;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = r0.<android.widget.StackView: int mActivePointerId>;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i3);

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $f2 = r0.<android.widget.StackView: float mInitialY>;

        $f3 = f0 - $f2;

        i1 = (int) $f3;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.widget.StackView: long mLastInteractionTime> = $l4;

        $r6 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if $r6 == null goto label01;

        $r32 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        $i21 = r0.<android.widget.StackView: int mMaximumVelocity>;

        $f10 = (float) $i21;

        virtualinvoke $r32.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f10);

        $r33 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        $i26 = r0.<android.widget.StackView: int mActivePointerId>;

        $f11 = virtualinvoke $r33.<android.view.VelocityTracker: float getYVelocity(int)>($i26);

        $i25 = (int) $f11;

        r0.<android.widget.StackView: int mYVelocity> = $i25;

     label01:
        $r7 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        if $r7 == null goto label02;

        $r30 = r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r30.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.StackView: android.view.VelocityTracker mVelocityTracker> = null;

     label02:
        $i5 = r0.<android.widget.StackView: int mSwipeThreshold>;

        if i1 <= $i5 goto label05;

        $i22 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i22 != 2 goto label05;

        $r31 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i23 = $r31.<android.widget.StackView$StackSlider: int mMode>;

        if $i23 != 0 goto label05;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        $i24 = r0.<android.widget.StackView: int mStackMode>;

        if $i24 != 0 goto label03;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        goto label04;

     label03:
        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label04:
        $r29 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r29.<android.widget.ImageView: void bringToFront()>();

        goto label20;

     label05:
        $i7 = r0.<android.widget.StackView: int mSwipeThreshold>;

        $i6 = neg $i7;

        if i1 >= $i6 goto label08;

        $i20 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i20 != 1 goto label08;

        $r27 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i18 = $r27.<android.widget.StackView$StackSlider: int mMode>;

        if $i18 != 0 goto label08;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        $i19 = r0.<android.widget.StackView: int mStackMode>;

        if $i19 != 0 goto label06;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

        goto label07;

     label06:
        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

     label07:
        $r28 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        virtualinvoke $r28.<android.widget.ImageView: void bringToFront()>();

        goto label20;

     label08:
        $i9 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i9 != 1 goto label14;

        $i15 = r0.<android.widget.StackView: int mStackMode>;

        if $i15 != 1 goto label09;

        $f9 = 1.0F;

        goto label10;

     label09:
        $f9 = 0.0F;

     label10:
        f1 = $f9;

        $i14 = r0.<android.widget.StackView: int mStackMode>;

        if $i14 == 0 goto label11;

        $r25 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i17 = $r25.<android.widget.StackView$StackSlider: int mMode>;

        if $i17 == 0 goto label12;

     label11:
        $r17 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f7 = virtualinvoke $r17.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition()>();

        i2 = staticinvoke <java.lang.Math: int round(float)>($f7);

        goto label13;

     label12:
        $r24 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f8 = virtualinvoke $r24.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition()>();

        i2 = staticinvoke <java.lang.Math: int round(float)>($f8);

     label13:
        $r19 = new android.widget.StackView$StackSlider;

        $r18 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r19.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r18);

        r2 = $r19;

        $r21 = newarray (float)[1];

        $r21[0] = f1;

        r3 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r21);

        $r20 = newarray (float)[1];

        $r20[0] = 0.0F;

        r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r20);

        $r23 = newarray (android.animation.PropertyValuesHolder)[2];

        $r23[0] = r4;

        $r23[1] = r3;

        r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r2, $r23);

        $l16 = (long) i2;

        virtualinvoke r5.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l16);

        $r26 = new android.view.animation.LinearInterpolator;

        specialinvoke $r26.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r5.<android.animation.ObjectAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r26);

        virtualinvoke r5.<android.animation.ObjectAnimator: void start()>();

        goto label20;

     label14:
        $i8 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i8 != 2 goto label20;

        $i11 = r0.<android.widget.StackView: int mStackMode>;

        if $i11 != 1 goto label15;

        $f6 = 0.0F;

        goto label16;

     label15:
        $f6 = 1.0F;

     label16:
        f12 = $f6;

        $i10 = r0.<android.widget.StackView: int mStackMode>;

        if $i10 == 1 goto label17;

        $r15 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $i13 = $r15.<android.widget.StackView$StackSlider: int mMode>;

        if $i13 == 0 goto label18;

     label17:
        $r8 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f4 = virtualinvoke $r8.<android.widget.StackView$StackSlider: float getDurationForNeutralPosition()>();

        i27 = staticinvoke <java.lang.Math: int round(float)>($f4);

        goto label19;

     label18:
        $r16 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        $f5 = virtualinvoke $r16.<android.widget.StackView$StackSlider: float getDurationForOffscreenPosition()>();

        i27 = staticinvoke <java.lang.Math: int round(float)>($f5);

     label19:
        $r9 = new android.widget.StackView$StackSlider;

        $r11 = r0.<android.widget.StackView: android.widget.StackView$StackSlider mStackSlider>;

        specialinvoke $r9.<android.widget.StackView$StackSlider: void <init>(android.widget.StackView,android.widget.StackView$StackSlider)>(r0, $r11);

        r34 = $r9;

        $r10 = newarray (float)[1];

        $r10[0] = f12;

        r35 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("YProgress", $r10);

        $r13 = newarray (float)[1];

        $r13[0] = 0.0F;

        r36 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("XProgress", $r13);

        $r12 = newarray (android.animation.PropertyValuesHolder)[2];

        $r12[0] = r36;

        $r12[1] = r35;

        r37 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r34, $r12);

        $l12 = (long) i27;

        virtualinvoke r37.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l12);

        virtualinvoke r37.<android.animation.ObjectAnimator: void start()>();

     label20:
        r0.<android.widget.StackView: int mActivePointerId> = -1;

        r0.<android.widget.StackView: int mSwipeGestureType> = 0;

        return;
    }

    android.widget.StackView$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.widget.StackView$LayoutParams r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r2 instanceof android.widget.StackView$LayoutParams;

        if $z0 == 0 goto label1;

        r3 = (android.widget.StackView$LayoutParams) r2;

        virtualinvoke r3.<android.widget.StackView$LayoutParams: void setHorizontalOffset(int)>(0);

        virtualinvoke r3.<android.widget.StackView$LayoutParams: void setVerticalOffset(int)>(0);

        r3.<android.widget.StackView$LayoutParams: int width> = 0;

        r3.<android.widget.StackView$LayoutParams: int width> = 0;

        return r3;

     label1:
        $r4 = new android.widget.StackView$LayoutParams;

        specialinvoke $r4.<android.widget.StackView$LayoutParams: void <init>(android.widget.StackView,android.view.View)>(r0, r1);

        return $r4;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.StackView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.View r1;
        android.widget.StackView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.StackView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.widget.StackView: void checkForAndHandleDataChanged()>();

        i4 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i5);

        $i8 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i6 = $i8 + $i9;

        $i11 = r0.<android.widget.StackView: int mPaddingTop>;

        $i10 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i7 = $i11 + $i10;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.StackView$LayoutParams) $r3;

        $i14 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i12 = r2.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        $i21 = $i14 + $i12;

        $i16 = r0.<android.widget.StackView: int mPaddingTop>;

        $i13 = r2.<android.widget.StackView$LayoutParams: int verticalOffset>;

        $i19 = $i16 + $i13;

        $i15 = r2.<android.widget.StackView$LayoutParams: int horizontalOffset>;

        $i20 = i6 + $i15;

        $i18 = r2.<android.widget.StackView$LayoutParams: int verticalOffset>;

        $i17 = i7 + $i18;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i21, $i19, $i20, $i17);

        i5 = i5 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.widget.StackView: void onLayout()>();

        return;
    }

    public void advance()
    {
        android.widget.StackView r0;
        long l0, $l2, $l3;
        int i1, $i4;
        android.widget.Adapter $r1;
        byte $b5;
        boolean $z0;

        r0 := @this: android.widget.StackView;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<android.widget.StackView: long mLastInteractionTime>;

        l0 = $l2 - $l3;

        $r1 = r0.<android.widget.StackView: android.widget.Adapter mAdapter>;

        if $r1 != null goto label1;

        return;

     label1:
        i1 = virtualinvoke r0.<android.widget.StackView: int getCount()>();

        if i1 != 1 goto label2;

        $z0 = r0.<android.widget.StackView: boolean mLoopViews>;

        if $z0 == 0 goto label2;

        return;

     label2:
        $i4 = r0.<android.widget.StackView: int mSwipeGestureType>;

        if $i4 != 0 goto label3;

        $b5 = l0 cmp 5000L;

        if $b5 <= 0 goto label3;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

     label3:
        return;
    }

    private void measureChildren()
    {
        android.widget.StackView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.View r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.widget.ImageView $r2, $r3;

        r0 := @this: android.widget.StackView;

        i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        i1 = virtualinvoke r0.<android.widget.StackView: int getMeasuredWidth()>();

        i2 = virtualinvoke r0.<android.widget.StackView: int getMeasuredHeight()>();

        $f0 = (float) i1;

        $f1 = $f0 * 0.9F;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i12 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i13 = $i10 - $i12;

        $i11 = r0.<android.widget.StackView: int mPaddingRight>;

        i3 = $i13 - $i11;

        $f2 = (float) i2;

        $f3 = $f2 * 0.9F;

        $i14 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $i16 = r0.<android.widget.StackView: int mPaddingTop>;

        $i17 = $i14 - $i16;

        $i15 = r0.<android.widget.StackView: int mPaddingBottom>;

        i4 = $i17 - $i15;

        i5 = 0;

        i6 = 0;

        i7 = 0;

     label1:
        if i7 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.widget.StackView: android.view.View getChildAt(int)>(i7);

        $i20 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i3, -2147483648);

        $i21 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i20, $i21);

        $r2 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        if r1 == $r2 goto label3;

        $r3 = r0.<android.widget.StackView: android.widget.ImageView mClickFeedback>;

        if r1 == $r3 goto label3;

        i8 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i9 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i8 <= i5 goto label2;

        i5 = i8;

     label2:
        if i9 <= i6 goto label3;

        i6 = i9;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        $f4 = (float) i1;

        $f6 = 0.1F * $f4;

        r0.<android.widget.StackView: float mNewPerspectiveShiftX> = $f6;

        $f5 = (float) i2;

        $f7 = 0.1F * $f5;

        r0.<android.widget.StackView: float mNewPerspectiveShiftY> = $f7;

        if i5 <= 0 goto label5;

        if i0 <= 0 goto label5;

        if i5 >= i3 goto label5;

        $i19 = i1 - i5;

        $f8 = (float) $i19;

        r0.<android.widget.StackView: float mNewPerspectiveShiftX> = $f8;

     label5:
        if i6 <= 0 goto label6;

        if i0 <= 0 goto label6;

        if i6 >= i4 goto label6;

        $i18 = i2 - i6;

        $f9 = (float) $i18;

        r0.<android.widget.StackView: float mNewPerspectiveShiftY> = $f9;

     label6:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.StackView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        boolean z0, $z1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $i8 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        if $i8 == -1 goto label01;

        $i28 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        if $i28 == -1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        f0 = 1.1111112F;

        if i5 != 0 goto label05;

        if z0 == 0 goto label03;

        $i24 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        $f8 = (float) $i24;

        $f7 = 1.0F + f0;

        $f9 = $f8 * $f7;

        $i27 = staticinvoke <java.lang.Math: int round(float)>($f9);

        $i25 = r0.<android.widget.StackView: int mPaddingTop>;

        $i29 = $i27 + $i25;

        $i26 = r0.<android.widget.StackView: int mPaddingBottom>;

        $i30 = $i29 + $i26;

        goto label04;

     label03:
        $i30 = 0;

     label04:
        i3 = $i30;

        goto label09;

     label05:
        if i5 != -2147483648 goto label09;

        if z0 == 0 goto label08;

        $i18 = r0.<android.widget.StackView: int mReferenceChildHeight>;

        $f4 = (float) $i18;

        $f5 = 1.0F + f0;

        $f6 = $f4 * $f5;

        $i22 = staticinvoke <java.lang.Math: int round(float)>($f6);

        $i20 = r0.<android.widget.StackView: int mPaddingTop>;

        $i23 = $i22 + $i20;

        $i21 = r0.<android.widget.StackView: int mPaddingBottom>;

        i6 = $i23 + $i21;

        if i6 > i3 goto label06;

        i3 = i6;

        goto label07;

     label06:
        i3 = i3 | 16777216;

     label07:
        goto label09;

     label08:
        i3 = 0;

     label09:
        f10 = 1.1111112F;

        if i4 != 0 goto label12;

        if z0 == 0 goto label10;

        $i13 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        $f3 = (float) $i13;

        $f1 = 1.0F + f10;

        $f2 = $f3 * $f1;

        $i15 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i14 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i16 = $i15 + $i14;

        $i17 = r0.<android.widget.StackView: int mPaddingRight>;

        $i19 = $i16 + $i17;

        goto label11;

     label10:
        $i19 = 0;

     label11:
        i2 = $i19;

        goto label16;

     label12:
        if i5 != -2147483648 goto label16;

        if z0 == 0 goto label15;

        $i9 = r0.<android.widget.StackView: int mReferenceChildWidth>;

        $i10 = r0.<android.widget.StackView: int mPaddingLeft>;

        $i11 = $i9 + $i10;

        $i12 = r0.<android.widget.StackView: int mPaddingRight>;

        i7 = $i11 + $i12;

        if i7 > i2 goto label13;

        i2 = i7;

        goto label14;

     label13:
        i2 = i2 | 16777216;

     label14:
        goto label16;

     label15:
        i2 = 0;

     label16:
        virtualinvoke r0.<android.widget.StackView: void setMeasuredDimension(int,int)>(i2, i3);

        specialinvoke r0.<android.widget.StackView: void measureChildren()>();

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.StackView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/StackView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.StackView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/StackView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        $i0 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        if $i0 <= 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>($z1);

        $z0 = virtualinvoke r0.<android.widget.StackView: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        $i2 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        $i3 = $i2 - 1;

        if $i1 >= $i3 goto label3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

     label3:
        $i4 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        if $i4 <= 0 goto label4;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

     label4:
        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.StackView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.os.Bundle r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.StackView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.AdapterViewAnimator: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<android.widget.StackView: boolean isEnabled()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        lookupswitch(i0)
        {
            case 4096: goto label3;
            case 8192: goto label5;
            default: goto label7;
        };

     label3:
        $i2 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        $i3 = virtualinvoke r0.<android.widget.StackView: int getChildCount()>();

        $i4 = $i3 - 1;

        if $i2 >= $i4 goto label4;

        virtualinvoke r0.<android.widget.StackView: void showNext()>();

        return 1;

     label4:
        return 0;

     label5:
        $i1 = virtualinvoke r0.<android.widget.StackView: int getDisplayedChild()>();

        if $i1 <= 0 goto label6;

        virtualinvoke r0.<android.widget.StackView: void showPrevious()>();

        return 1;

     label6:
        return 0;

     label7:
        return 0;
    }

    volatile android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.StackView r0;
        android.view.View r1;
        android.widget.StackView$LayoutParams $r2;

        r0 := @this: android.widget.StackView;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.widget.StackView: android.widget.StackView$LayoutParams createOrReuseLayoutParams(android.view.View)>(r1);

        return $r2;
    }

    static android.widget.ImageView access$000(android.widget.StackView)
    {
        android.widget.StackView r0;
        android.widget.ImageView $r1;

        r0 := @parameter0: android.widget.StackView;

        $r1 = r0.<android.widget.StackView: android.widget.ImageView mHighlight>;

        return $r1;
    }

    static int access$100(android.widget.StackView)
    {
        android.widget.StackView r0;
        int $i0;

        r0 := @parameter0: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mStackMode>;

        return $i0;
    }

    static int access$200(android.widget.StackView)
    {
        android.widget.StackView r0;
        int $i0;

        r0 := @parameter0: android.widget.StackView;

        $i0 = r0.<android.widget.StackView: int mSlideAmount>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.widget.StackView: long MIN_TIME_BETWEEN_SCROLLS> = 100L;

        <android.widget.StackView: int MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE> = 5000;

        <android.widget.StackView: int FRAME_PADDING> = 4;

        <android.widget.StackView: int NUM_ACTIVE_VIEWS> = 5;

        <android.widget.StackView: int INVALID_POINTER> = -1;

        <android.widget.StackView: float SLIDE_UP_RATIO> = 0.7F;

        <android.widget.StackView: float SWIPE_THRESHOLD_RATIO> = 0.2F;

        <android.widget.StackView: int GESTURE_SLIDE_DOWN> = 2;

        <android.widget.StackView: int GESTURE_SLIDE_UP> = 1;

        <android.widget.StackView: int GESTURE_NONE> = 0;

        <android.widget.StackView: int ITEMS_SLIDE_DOWN> = 1;

        <android.widget.StackView: int ITEMS_SLIDE_UP> = 0;

        <android.widget.StackView: float PERSPECTIVE_SCALE_FACTOR> = 0.0F;

        <android.widget.StackView: float PERSPECTIVE_SHIFT_FACTOR_X> = 0.1F;

        <android.widget.StackView: float PERSPECTIVE_SHIFT_FACTOR_Y> = 0.1F;

        <android.widget.StackView: int STACK_RELAYOUT_DURATION> = 100;

        <android.widget.StackView: int MINIMUM_ANIMATION_DURATION> = 50;

        <android.widget.StackView: int DEFAULT_ANIMATION_DURATION> = 400;

        return;
    }
}
