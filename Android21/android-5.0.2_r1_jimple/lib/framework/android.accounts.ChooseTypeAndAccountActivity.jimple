public class android.accounts.ChooseTypeAndAccountActivity extends android.app.Activity implements android.accounts.AccountManagerCallback
{
    private static final java.lang.String TAG;
    public static final java.lang.String EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST;
    public static final java.lang.String EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY;
    public static final java.lang.String EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE;
    public static final java.lang.String EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY;
    public static final java.lang.String EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING;
    public static final java.lang.String EXTRA_SELECTED_ACCOUNT;
    public static final java.lang.String EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT;
    public static final java.lang.String EXTRA_DESCRIPTION_TEXT_OVERRIDE;
    public static final int REQUEST_NULL;
    public static final int REQUEST_CHOOSE_TYPE;
    public static final int REQUEST_ADD_ACCOUNT;
    private static final java.lang.String KEY_INSTANCE_STATE_PENDING_REQUEST;
    private static final java.lang.String KEY_INSTANCE_STATE_EXISTING_ACCOUNTS;
    private static final java.lang.String KEY_INSTANCE_STATE_SELECTED_ACCOUNT_NAME;
    private static final java.lang.String KEY_INSTANCE_STATE_SELECTED_ADD_ACCOUNT;
    private static final java.lang.String KEY_INSTANCE_STATE_ACCOUNT_LIST;
    private static final int SELECTED_ITEM_NONE;
    private java.util.Set mSetOfAllowableAccounts;
    private java.util.Set mSetOfRelevantAccountTypes;
    private java.lang.String mSelectedAccountName;
    private boolean mSelectedAddNewAccount;
    private boolean mAlwaysPromptForAccount;
    private java.lang.String mDescriptionOverride;
    private java.util.ArrayList mAccounts;
    private int mPendingRequest;
    private android.os.Parcelable[] mExistingAccounts;
    private int mSelectedItemIndex;
    private android.widget.Button mOkButton;
    private int mCallingUid;
    private java.lang.String mCallingPackage;
    private boolean mDisallowAddAccounts;
    private boolean mDontShowPicker;

    public void <init>()
    {
        android.accounts.ChooseTypeAndAccountActivity r0;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mSelectedAccountName> = null;

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mSelectedAddNewAccount> = 0;

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mAlwaysPromptForAccount> = 0;

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = 0;

        r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts> = null;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.os.Bundle r1, r3;
        android.os.IBinder r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.app.IActivityManager $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r11, $r17, $r18, $r20, $r21, $r22, $r28, $r32, $r35;
        android.os.Parcelable $r7;
        java.util.Set $r8, $r9;
        android.accounts.AccountManager $r10;
        java.util.ArrayList $r12, $r13, $r24;
        java.lang.StringBuilder $r14, $r15, $r16, $r26, $r27, $r29, $r30, $r31, $r36, $r37;
        android.os.Parcelable[] $r19;
        android.os.UserManager $r23;
        android.os.UserHandle $r25;
        java.lang.Class $r33;
        android.os.RemoteException $r34, r38;
        android.content.Intent r39;
        android.accounts.Account r40;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChooseTypeAndAccountActivity.onCreate(savedInstanceState=");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r28);

     label1:
        r2 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.IBinder getActivityToken()>();

        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i0 = interfaceinvoke $r4.<android.app.IActivityManager: int getLaunchedFromUid(android.os.IBinder)>(r2);

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid> = $i0;

        $r5 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r6 = interfaceinvoke $r5.<android.app.IActivityManager: java.lang.String getLaunchedFromPackage(android.os.IBinder)>(r2);

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mCallingPackage> = $r6;

        $i1 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid>;

        if $i1 == 0 goto label2;

        $r22 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mCallingPackage>;

        if $r22 == null goto label2;

        $r23 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>(r0);

        $r25 = new android.os.UserHandle;

        $i4 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        specialinvoke $r25.<android.os.UserHandle: void <init>(int)>($i3);

        r3 = virtualinvoke $r23.<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>($r25);

        $z6 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_modify_accounts", 0);

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDisallowAddAccounts> = $z6;

     label2:
        goto label4;

     label3:
        $r34 := @caughtexception;

        r38 = $r34;

        $r33 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r33.<java.lang.Class: java.lang.String getSimpleName()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get caller identity \n");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r32, $r35);

     label4:
        r39 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        if r1 == null goto label5;

        $i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("pendingRequest");

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = $i2;

        $r19 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>("existingAccounts");

        r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts> = $r19;

        $r20 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("selectedAccountName");

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mSelectedAccountName> = $r20;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("selectedAddAccount", 0);

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mSelectedAddNewAccount> = $z5;

        $r24 = virtualinvoke r1.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("accountList");

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts> = $r24;

        goto label6;

     label5:
        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = 0;

        r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts> = null;

        $r7 = virtualinvoke r39.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("selectedAccount");

        r40 = (android.accounts.Account) $r7;

        if r40 == null goto label6;

        $r21 = r40.<android.accounts.Account: java.lang.String name>;

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mSelectedAccountName> = $r21;

     label6:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z1 == 0 goto label7;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("selected account name is ");

        $r17 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mSelectedAccountName>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r18);

     label7:
        $r8 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getAllowableAccountSet(android.content.Intent)>(r39);

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfAllowableAccounts> = $r8;

        $r9 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getReleventAccountTypes(android.content.Intent)>(r39);

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfRelevantAccountTypes> = $r9;

        $z2 = virtualinvoke r39.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("alwaysPromptForAccount", 0);

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mAlwaysPromptForAccount> = $z2;

        $r11 = virtualinvoke r39.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("descriptionTextOverride");

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mDescriptionOverride> = $r11;

        $r10 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r13 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)>($r10);

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts> = $r13;

        $r12 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $z4 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label8;

        $z3 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDisallowAddAccounts>;

        if $z3 == 0 goto label8;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: boolean requestWindowFeature(int)>(1);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setContentView(int)>(17367089);

        r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDontShowPicker> = 1;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    protected void onResume()
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.accounts.AccountManager r1;
        android.accounts.Account r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r3, $r4, $r6, $r11, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r7, $r15, $r16, $r21;
        android.view.View $r8;
        android.widget.Button $r9, $r10;
        java.lang.Object $r13, $r20;
        java.util.Set $r17, $r19;
        java.util.Iterator $r18;
        java.lang.String[] r22;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $z0 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDontShowPicker>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r3 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)>(r1);

        r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts> = $r3;

        $i0 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest>;

        if $i0 != 0 goto label5;

        $r11 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $z4 = virtualinvoke $r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label4;

        $r17 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfRelevantAccountTypes>;

        $i4 = interfaceinvoke $r17.<java.util.Set: int size()>();

        if $i4 != 1 goto label2;

        $r19 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfRelevantAccountTypes>;

        $r18 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

        $r20 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (java.lang.String) $r20;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>($r21);

        goto label3;

     label2:
        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void startChooseAccountTypeActivity()>();

     label3:
        return;

     label4:
        $z3 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mAlwaysPromptForAccount>;

        if $z3 != 0 goto label5;

        $r12 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $i3 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i3 != 1 goto label5;

        $r14 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (android.accounts.Account) $r13;

        $r15 = r2.<android.accounts.Account: java.lang.String name>;

        $r16 = r2.<android.accounts.Account: java.lang.String type>;

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResultAndFinish(java.lang.String,java.lang.String)>($r15, $r16);

        return;

     label5:
        $r4 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        r22 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)>($r4);

        $r6 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $r5 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mSelectedAccountName>;

        $z1 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mSelectedAddNewAccount>;

        $i1 = specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: int getItemIndexToSelect(java.util.ArrayList,java.lang.String,boolean)>($r6, $r5, $z1);

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex> = $i1;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setContentView(int)>(17367103);

        $r7 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mDescriptionOverride>;

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void overrideDescriptionIfSupplied(java.lang.String)>($r7);

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void populateUIAccountList(java.lang.String[])>(r22);

        $r8 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.view.View findViewById(int)>(16908314);

        $r9 = (android.widget.Button) $r8;

        r0.<android.accounts.ChooseTypeAndAccountActivity: android.widget.Button mOkButton> = $r9;

        $r10 = r0.<android.accounts.ChooseTypeAndAccountActivity: android.widget.Button mOkButton>;

        $i2 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        if $i2 == -1 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        virtualinvoke $r10.<android.widget.Button: void setEnabled(boolean)>($z2);

        return;
    }

    protected void onDestroy()
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        boolean $z0;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", "ChooseTypeAndAccountActivity.onDestroy()");

     label1:
        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.os.Bundle r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;
        android.accounts.Account $r6;
        java.lang.String $r7;
        android.os.Parcelable[] $r8;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $i0 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("pendingRequest", $i0);

        $i1 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest>;

        if $i1 != 2 goto label1;

        $r8 = r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts>;

        virtualinvoke r1.<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>("existingAccounts", $r8);

     label1:
        $i2 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        if $i2 == -1 goto label3;

        $i3 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        $r3 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $i4 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i3 != $i4 goto label2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("selectedAddAccount", 1);

        goto label3;

     label2:
        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("selectedAddAccount", 0);

        $r4 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $i5 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r6 = (android.accounts.Account) $r5;

        $r7 = $r6.<android.accounts.Account: java.lang.String name>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("selectedAccountName", $r7);

     label3:
        $r2 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        virtualinvoke r1.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("accountList", $r2);

        return;
    }

    public void onCancelButtonClicked(android.view.View)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.view.View r1;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void onBackPressed()>();

        return;
    }

    public void onOkButtonClicked(android.view.View)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.view.View r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        android.accounts.Account $r5;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.view.View;

        $i0 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        $r2 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label1;

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void startChooseAccountTypeActivity()>();

        goto label2;

     label1:
        $i2 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        if $i2 == -1 goto label2;

        $r3 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $i3 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (android.accounts.Account) $r4;

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void onAccountSelected(android.accounts.Account)>($r5);

     label2:
        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        int i0, i1, i2, i3, $i6, i9, i10;
        android.content.Intent r1;
        android.os.Bundle r2, $r22, $r23, $r24;
        java.lang.String r3, $r9, $r19, r26, r27;
        android.accounts.Account[] r4, r28;
        java.util.HashSet r5, $r10;
        android.os.Parcelable[] r6;
        android.os.Parcelable r7;
        boolean $z0, $z1, $z2, $z4;
        android.accounts.AccountManager $r8;
        android.accounts.Account $r11, r29;
        java.util.ArrayList $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label04;

        if r1 == null goto label01;

        $r22 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r22 == null goto label01;

        $r23 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        virtualinvoke $r23.<android.os.Bundle: java.util.Set keySet()>();

     label01:
        if r1 == null goto label02;

        $r24 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        goto label03;

     label02:
        $r24 = null;

     label03:
        r2 = $r24;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChooseTypeAndAccountActivity.onActivityResult(reqCode=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resCode=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extras=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r19);

     label04:
        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = 0;

        if i1 != 0 goto label06;

        $r12 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList mAccounts>;

        $z4 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label05;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResult(int)>(0);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void finish()>();

     label05:
        return;

     label06:
        if i1 != -1 goto label18;

        if i0 != 1 goto label08;

        if r1 == null goto label07;

        r26 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("accountType");

        if r26 == null goto label07;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>(r26);

        return;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AccountChooser", "ChooseTypeAndAccountActivity.onActivityResult: unable to find account type, pretending the request was canceled");

        goto label17;

     label08:
        if i0 != 2 goto label17;

        r27 = null;

        r3 = null;

        if r1 == null goto label09;

        r27 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("authAccount");

        r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("accountType");

     label09:
        if r27 == null goto label10;

        if r3 != null goto label15;

     label10:
        $r8 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r9 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mCallingPackage>;

        $i6 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid>;

        r4 = virtualinvoke $r8.<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>($r9, $i6);

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r5 = $r10;

        r6 = r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts>;

        i2 = lengthof r6;

        i3 = 0;

     label11:
        if i3 >= i2 goto label12;

        r7 = r6[i3];

        $r11 = (android.accounts.Account) r7;

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r11);

        i3 = i3 + 1;

        goto label11;

     label12:
        r28 = r4;

        i9 = lengthof r28;

        i10 = 0;

     label13:
        if i10 >= i9 goto label15;

        r29 = r28[i10];

        $z2 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r29);

        if $z2 != 0 goto label14;

        r27 = r29.<android.accounts.Account: java.lang.String name>;

        r3 = r29.<android.accounts.Account: java.lang.String type>;

        goto label15;

     label14:
        i10 = i10 + 1;

        goto label13;

     label15:
        if r27 != null goto label16;

        if r3 == null goto label17;

     label16:
        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResultAndFinish(java.lang.String,java.lang.String)>(r27, r3);

        return;

     label17:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AccountChooser", "ChooseTypeAndAccountActivity.onActivityResult: unable to find added account, pretending the request was canceled");

     label18:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z1 == 0 goto label19;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", "ChooseTypeAndAccountActivity.onActivityResult: canceled");

     label19:
        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResult(int)>(0);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void finish()>();

        return;
    }

    protected void runAddAccountForAuthenticator(java.lang.String)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.lang.String r1, r4, $r13;
        android.os.Bundle r2;
        java.lang.String[] r3;
        boolean $z0;
        android.content.Intent $r5, $r6, $r7;
        android.accounts.AccountManager $r8;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runAddAccountForAuthenticator: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r13);

     label1:
        $r5 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        r2 = virtualinvoke $r5.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("addAccountOptions");

        $r6 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        r3 = virtualinvoke $r6.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("addAccountRequiredFeatures");

        $r7 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        r4 = virtualinvoke $r7.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("authTokenType");

        $r8 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        virtualinvoke $r8.<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>(r1, r4, r3, r2, null, r0, null);

        return;
    }

    public void run(android.accounts.AccountManagerFuture)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.accounts.AccountManagerFuture r1;
        android.os.Bundle r2, $r6, r19;
        android.content.Intent r3, $r7, $r8;
        java.lang.Object $r4;
        android.os.Parcelable $r5;
        android.accounts.AccountManager $r9;
        int $i0, $i1, $i2;
        java.lang.String $r10;
        android.accounts.Account[] $r11;
        android.accounts.OperationCanceledException $r12;
        java.io.IOException $r14;
        android.accounts.AuthenticatorException $r15;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.accounts.AccountManagerFuture;

     label1:
        $r4 = interfaceinvoke r1.<android.accounts.AccountManagerFuture: java.lang.Object getResult()>();

        r2 = (android.os.Bundle) $r4;

        $r5 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("intent");

        r3 = (android.content.Intent) $r5;

        if r3 == null goto label3;

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = 2;

        $r9 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r10 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mCallingPackage>;

        $i0 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid>;

        $r11 = virtualinvoke $r9.<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>($r10, $i0);

        r0.<android.accounts.ChooseTypeAndAccountActivity: android.os.Parcelable[] mExistingAccounts> = $r11;

        $i1 = virtualinvoke r3.<android.content.Intent: int getFlags()>();

        $i2 = $i1 & -268435457;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setFlags(int)>($i2);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void startActivityForResult(android.content.Intent,int)>(r3, 2);

     label2:
        return;

     label3:
        goto label7;

     label4:
        $r12 := @caughtexception;

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResult(int)>(0);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void finish()>();

        return;

     label5:
        $r14 := @caughtexception;

        goto label7;

     label6:
        $r15 := @caughtexception;

     label7:
        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r19 = $r6;

        virtualinvoke r19.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("errorMessage", "error communicating with server");

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        $r8 = virtualinvoke $r7.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r19);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResult(int,android.content.Intent)>(-1, $r8);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void finish()>();

        return;

        catch android.accounts.OperationCanceledException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch android.accounts.AuthenticatorException from label1 to label2 with label6;
    }

    private void onAccountSelected(android.accounts.Account)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.accounts.Account r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, $r6, $r7;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.accounts.Account;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("selected account ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AccountChooser", $r5);

        $r7 = r1.<android.accounts.Account: java.lang.String name>;

        $r6 = r1.<android.accounts.Account: java.lang.String type>;

        specialinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResultAndFinish(java.lang.String,java.lang.String)>($r7, $r6);

        return;
    }

    private void setResultAndFinish(java.lang.String, java.lang.String)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.lang.String r1, r2, $r12;
        android.os.Bundle r3, $r4;
        android.content.Intent $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("authAccount", r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("accountType", r2);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>()>();

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r3);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void setResult(int,android.content.Intent)>(-1, $r6);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChooseTypeAndAccountActivity.setResultAndFinish: selected account ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r12);

     label1:
        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void finish()>();

        return;
    }

    private void startChooseAccountTypeActivity()
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.content.Intent r1, $r2, $r4, $r7, $r10, $r14;
        boolean $z0;
        java.lang.String[] $r5, $r11;
        android.os.Bundle $r8;
        java.lang.String $r13;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", "ChooseAccountTypeActivity.startChooseAccountTypeActivity()");

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "android/accounts/ChooseAccountTypeActivity");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(524288);

        $r4 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("allowableAccountTypes");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("allowableAccountTypes", $r5);

        $r7 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r7.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("addAccountOptions");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("addAccountOptions", $r8);

        $r10 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        $r11 = virtualinvoke $r10.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("addAccountRequiredFeatures");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("addAccountRequiredFeatures", $r11);

        $r14 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.Intent getIntent()>();

        $r13 = virtualinvoke $r14.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("authTokenType");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("authTokenType", $r13);

        virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: void startActivityForResult(android.content.Intent,int)>(r1, 1);

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mPendingRequest> = 1;

        return;
    }

    private int getItemIndexToSelect(java.util.ArrayList, java.lang.String, boolean)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.util.ArrayList r1;
        java.lang.String r2, $r5;
        boolean z0, $z1;
        int i0, $i1, $i2;
        java.lang.Object $r3;
        android.accounts.Account $r4;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        return $i2;

     label1:
        i0 = 0;

     label2:
        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label4;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (android.accounts.Account) $r3;

        $r5 = $r4.<android.accounts.Account: java.lang.String name>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        return i0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return -1;
    }

    private java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.util.ArrayList r1;
        java.lang.String[] r2;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r7;
        java.lang.Object $r5;
        android.accounts.Account $r6;
        byte $b5;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.util.ArrayList;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $z0 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDisallowAddAccounts>;

        if $z0 == 0 goto label1;

        $b5 = 0;

        goto label2;

     label1:
        $b5 = 1;

     label2:
        $i2 = $i1 + $b5;

        r2 = newarray (java.lang.String)[$i2];

        i0 = 0;

     label3:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 >= $i3 goto label4;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (android.accounts.Account) $r5;

        $r7 = $r6.<android.accounts.Account: java.lang.String name>;

        r2[i0] = $r7;

        i0 = i0 + 1;

        goto label3;

     label4:
        $z1 = r0.<android.accounts.ChooseTypeAndAccountActivity: boolean mDisallowAddAccounts>;

        if $z1 != 0 goto label5;

        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r3 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17040746);

        r2[$i4] = $r4;

     label5:
        return r2;
    }

    private java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.accounts.AccountManager r1;
        android.accounts.Account[] r2, r4;
        java.util.ArrayList r3, $r7;
        int i0, i1, $i2, $i3;
        android.accounts.Account r5;
        java.lang.String $r6, $r11;
        java.util.Set $r8, $r9, $r10, $r12;
        boolean $z1, $z2;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.accounts.AccountManager;

        $r6 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.lang.String mCallingPackage>;

        $i2 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mCallingUid>;

        r2 = virtualinvoke r1.<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>($r6, $i2);

        $r7 = new java.util.ArrayList;

        $i3 = lengthof r2;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i3);

        r3 = $r7;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r5 = r4[i1];

        $r8 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfAllowableAccounts>;

        if $r8 == null goto label2;

        $r12 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfAllowableAccounts>;

        $z2 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label2;

        goto label4;

     label2:
        $r9 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfRelevantAccountTypes>;

        if $r9 == null goto label3;

        $r10 = r0.<android.accounts.ChooseTypeAndAccountActivity: java.util.Set mSetOfRelevantAccountTypes>;

        $r11 = r5.<android.accounts.Account: java.lang.String type>;

        $z1 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return r3;
    }

    private java.util.Set getReleventAccountTypes(android.content.Intent)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.content.Intent r1;
        java.util.HashSet r2, r5, $r9;
        java.lang.String[] r3;
        android.accounts.AuthenticatorDescription[] r4, r6;
        int i0, i1, $i2;
        android.accounts.AuthenticatorDescription r7;
        android.accounts.AccountManager $r8;
        java.lang.String $r10;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.content.Intent;

        r2 = null;

        r3 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("allowableAccountTypes");

        if r3 == null goto label3;

        r2 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>(r3);

        $r8 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        r4 = virtualinvoke $r8.<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>();

        $r9 = new java.util.HashSet;

        $i2 = lengthof r4;

        specialinvoke $r9.<java.util.HashSet: void <init>(int)>($i2);

        r5 = $r9;

        r6 = r4;

        i0 = lengthof r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r7 = r6[i1];

        $r10 = r7.<android.accounts.AuthenticatorDescription: java.lang.String type>;

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        interfaceinvoke r2.<java.util.Set: boolean retainAll(java.util.Collection)>(r5);

     label3:
        return r2;
    }

    private java.util.Set getAllowableAccountSet(android.content.Intent)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.content.Intent r1;
        java.util.HashSet r2, $r6;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        android.os.Parcelable r5;
        int $i0;
        boolean $z0;
        java.lang.Object $r7;
        android.accounts.Account $r8;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: android.content.Intent;

        r2 = null;

        r3 = virtualinvoke r1.<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>("allowableAccounts");

        if r3 == null goto label2;

        $r6 = new java.util.HashSet;

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>($i0);

        r2 = $r6;

        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.os.Parcelable) $r7;

        $r8 = (android.accounts.Account) r5;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r2;
    }

    private void overrideDescriptionIfSupplied(java.lang.String)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.lang.String r1;
        android.widget.TextView r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.view.View findViewById(int)>(16909009);

        r2 = (android.widget.TextView) $r3;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        goto label2;

     label1:
        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        return;
    }

    private final void populateUIAccountList(java.lang.String[])
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        java.lang.String[] r1;
        android.widget.ListView r2;
        android.view.View $r3;
        android.widget.ArrayAdapter $r4;
        android.accounts.ChooseTypeAndAccountActivity$1 $r5;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.accounts.ChooseTypeAndAccountActivity;

        r1 := @parameter0: java.lang.String[];

        $r3 = virtualinvoke r0.<android.accounts.ChooseTypeAndAccountActivity: android.view.View findViewById(int)>(16908298);

        r2 = (android.widget.ListView) $r3;

        $r4 = new android.widget.ArrayAdapter;

        specialinvoke $r4.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>(r0, 17367055, r1);

        virtualinvoke r2.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r4);

        virtualinvoke r2.<android.widget.ListView: void setChoiceMode(int)>(1);

        virtualinvoke r2.<android.widget.ListView: void setItemsCanFocus(boolean)>(0);

        $r5 = new android.accounts.ChooseTypeAndAccountActivity$1;

        specialinvoke $r5.<android.accounts.ChooseTypeAndAccountActivity$1: void <init>(android.accounts.ChooseTypeAndAccountActivity)>(r0);

        virtualinvoke r2.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r5);

        $i0 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        if $i0 == -1 goto label1;

        $i1 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        virtualinvoke r2.<android.widget.ListView: void setItemChecked(int,boolean)>($i1, 1);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountChooser", 2);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List item ");

        $i2 = r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be selected");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountChooser", $r10);

     label1:
        return;
    }

    static int access$002(android.accounts.ChooseTypeAndAccountActivity, int)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        int i0;

        r0 := @parameter0: android.accounts.ChooseTypeAndAccountActivity;

        i0 := @parameter1: int;

        r0.<android.accounts.ChooseTypeAndAccountActivity: int mSelectedItemIndex> = i0;

        return i0;
    }

    static android.widget.Button access$100(android.accounts.ChooseTypeAndAccountActivity)
    {
        android.accounts.ChooseTypeAndAccountActivity r0;
        android.widget.Button $r1;

        r0 := @parameter0: android.accounts.ChooseTypeAndAccountActivity;

        $r1 = r0.<android.accounts.ChooseTypeAndAccountActivity: android.widget.Button mOkButton>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.accounts.ChooseTypeAndAccountActivity: int SELECTED_ITEM_NONE> = -1;

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String KEY_INSTANCE_STATE_ACCOUNT_LIST> = "accountList";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String KEY_INSTANCE_STATE_SELECTED_ADD_ACCOUNT> = "selectedAddAccount";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String KEY_INSTANCE_STATE_SELECTED_ACCOUNT_NAME> = "selectedAccountName";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String KEY_INSTANCE_STATE_EXISTING_ACCOUNTS> = "existingAccounts";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String KEY_INSTANCE_STATE_PENDING_REQUEST> = "pendingRequest";

        <android.accounts.ChooseTypeAndAccountActivity: int REQUEST_ADD_ACCOUNT> = 2;

        <android.accounts.ChooseTypeAndAccountActivity: int REQUEST_CHOOSE_TYPE> = 1;

        <android.accounts.ChooseTypeAndAccountActivity: int REQUEST_NULL> = 0;

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_DESCRIPTION_TEXT_OVERRIDE> = "descriptionTextOverride";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT> = "alwaysPromptForAccount";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_SELECTED_ACCOUNT> = "selectedAccount";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING> = "authTokenType";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY> = "addAccountRequiredFeatures";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE> = "addAccountOptions";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY> = "allowableAccountTypes";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST> = "allowableAccounts";

        <android.accounts.ChooseTypeAndAccountActivity: java.lang.String TAG> = "AccountChooser";

        return;
    }
}
