public class android.filterfw.core.SimpleScheduler extends android.filterfw.core.Scheduler
{

    public void <init>(android.filterfw.core.FilterGraph)
    {
        android.filterfw.core.SimpleScheduler r0;
        android.filterfw.core.FilterGraph r1;

        r0 := @this: android.filterfw.core.SimpleScheduler;

        r1 := @parameter0: android.filterfw.core.FilterGraph;

        specialinvoke r0.<android.filterfw.core.Scheduler: void <init>(android.filterfw.core.FilterGraph)>(r1);

        return;
    }

    public void reset()
    {
        android.filterfw.core.SimpleScheduler r0;

        r0 := @this: android.filterfw.core.SimpleScheduler;

        return;
    }

    public android.filterfw.core.Filter scheduleNextNode()
    {
        android.filterfw.core.SimpleScheduler r0;
        java.util.Iterator r1;
        android.filterfw.core.Filter r2;
        android.filterfw.core.FilterGraph $r3;
        java.util.Set $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: android.filterfw.core.SimpleScheduler;

        $r3 = virtualinvoke r0.<android.filterfw.core.SimpleScheduler: android.filterfw.core.FilterGraph getGraph()>();

        $r4 = virtualinvoke $r3.<android.filterfw.core.FilterGraph: java.util.Set getFilters()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.filterfw.core.Filter) $r5;

        $z1 = virtualinvoke r2.<android.filterfw.core.Filter: boolean canProcess()>();

        if $z1 == 0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }
}
