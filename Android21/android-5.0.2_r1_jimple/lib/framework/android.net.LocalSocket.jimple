public class android.net.LocalSocket extends java.lang.Object implements java.io.Closeable
{
    private android.net.LocalSocketImpl impl;
    private volatile boolean implCreated;
    private android.net.LocalSocketAddress localAddress;
    private boolean isBound;
    private boolean isConnected;
    private final int sockType;
    static final int SOCKET_UNKNOWN;
    public static final int SOCKET_DGRAM;
    public static final int SOCKET_STREAM;
    public static final int SOCKET_SEQPACKET;

    public void <init>()
    {
        android.net.LocalSocket r0;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void <init>(int)>(2);

        return;
    }

    public void <init>(int)
    {
        android.net.LocalSocket r0;
        int i0;
        android.net.LocalSocketImpl $r1;

        r0 := @this: android.net.LocalSocket;

        i0 := @parameter0: int;

        $r1 = new android.net.LocalSocketImpl;

        specialinvoke $r1.<android.net.LocalSocketImpl: void <init>()>();

        specialinvoke r0.<android.net.LocalSocket: void <init>(android.net.LocalSocketImpl,int)>($r1, i0);

        r0.<android.net.LocalSocket: boolean isBound> = 0;

        r0.<android.net.LocalSocket: boolean isConnected> = 0;

        return;
    }

    public void <init>(java.io.FileDescriptor) throws java.io.IOException
    {
        android.net.LocalSocket r0;
        java.io.FileDescriptor r1;
        android.net.LocalSocketImpl $r2;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: java.io.FileDescriptor;

        $r2 = new android.net.LocalSocketImpl;

        specialinvoke $r2.<android.net.LocalSocketImpl: void <init>(java.io.FileDescriptor)>(r1);

        specialinvoke r0.<android.net.LocalSocket: void <init>(android.net.LocalSocketImpl,int)>($r2, 0);

        r0.<android.net.LocalSocket: boolean isBound> = 1;

        r0.<android.net.LocalSocket: boolean isConnected> = 1;

        return;
    }

    void <init>(android.net.LocalSocketImpl, int)
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl r1;
        int i0;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: android.net.LocalSocketImpl;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl> = r1;

        r0.<android.net.LocalSocket: int sockType> = i0;

        r0.<android.net.LocalSocket: boolean isConnected> = 0;

        r0.<android.net.LocalSocket: boolean isBound> = 0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.LocalSocket r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r7;
        android.net.LocalSocketImpl $r5;

        r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" impl:");

        $r5 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void implCreateIfNeeded() throws java.io.IOException
    {
        android.net.LocalSocket r0, r1;
        java.lang.Throwable r2, r3, $r6, $r7;
        boolean $z0, $z1;
        int $i0;
        android.net.LocalSocketImpl $r5;

        r0 := @this: android.net.LocalSocket;

        $z0 = r0.<android.net.LocalSocket: boolean implCreated>;

        if $z0 != 0 goto label10;

        r1 = r0;

        entermonitor r0;

     label01:
        $z1 = r0.<android.net.LocalSocket: boolean implCreated>;

        if $z1 != 0 goto label06;

     label02:
        $r5 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $i0 = r0.<android.net.LocalSocket: int sockType>;

        virtualinvoke $r5.<android.net.LocalSocketImpl: void create(int)>($i0);

     label03:
        r0.<android.net.LocalSocket: boolean implCreated> = 1;

        goto label06;

     label04:
        $r6 := @caughtexception;

        r2 = $r6;

     label05:
        r0.<android.net.LocalSocket: boolean implCreated> = 1;

        throw r2;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void connect(android.net.LocalSocketAddress) throws java.io.IOException
    {
        android.net.LocalSocket r0, r2;
        android.net.LocalSocketAddress r1;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.net.LocalSocketImpl $r5;
        java.io.IOException $r6;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: android.net.LocalSocketAddress;

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.net.LocalSocket: boolean isConnected>;

        if $z0 == 0 goto label2;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("already connected");

        throw $r6;

     label2:
        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r5 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r5.<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>(r1, 0);

        r0.<android.net.LocalSocket: boolean isConnected> = 1;

        r0.<android.net.LocalSocket: boolean isBound> = 1;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void bind(android.net.LocalSocketAddress) throws java.io.IOException
    {
        android.net.LocalSocket r0, r2;
        android.net.LocalSocketAddress r1, $r5;
        java.lang.Throwable r3, $r8;
        boolean $z0;
        android.net.LocalSocketImpl $r6;
        java.io.IOException $r7;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: android.net.LocalSocketAddress;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.net.LocalSocket: boolean isBound>;

        if $z0 == 0 goto label2;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("already bound");

        throw $r7;

     label2:
        r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress> = r1;

        $r6 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r5 = r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress>;

        virtualinvoke $r6.<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>($r5);

        r0.<android.net.LocalSocket: boolean isBound> = 1;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.net.LocalSocketAddress getLocalSocketAddress()
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketAddress $r1;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketAddress localAddress>;

        return $r1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.io.InputStream $r2;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>();

        return $r2;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.io.OutputStream $r2;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>();

        return $r2;
    }

    public void close() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void close()>();

        return;
    }

    public void shutdownInput() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void shutdownInput()>();

        return;
    }

    public void shutdownOutput() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;

        r0 := @this: android.net.LocalSocket;

        specialinvoke r0.<android.net.LocalSocket: void implCreateIfNeeded()>();

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r1.<android.net.LocalSocketImpl: void shutdownOutput()>();

        return;
    }

    public void setReceiveBufferSize(int) throws java.io.IOException
    {
        android.net.LocalSocket r0;
        int i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        r0 := @this: android.net.LocalSocket;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4098, $r2);

        return;
    }

    public int getReceiveBufferSize() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4098);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setSoTimeout(int) throws java.io.IOException
    {
        android.net.LocalSocket r0;
        int i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        r0 := @this: android.net.LocalSocket;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4102, $r2);

        return;
    }

    public int getSoTimeout() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4102);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setSendBufferSize(int) throws java.io.IOException
    {
        android.net.LocalSocket r0;
        int i0;
        android.net.LocalSocketImpl $r1;
        java.lang.Integer $r2;

        r0 := @this: android.net.LocalSocket;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>(4097, $r2);

        return;
    }

    public int getSendBufferSize() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.lang.Object getOption(int)>(4097);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public android.net.LocalSocketAddress getRemoteSocketAddress()
    {
        android.net.LocalSocket r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public synchronized boolean isConnected()
    {
        android.net.LocalSocket r0;
        boolean $z0;

        r0 := @this: android.net.LocalSocket;

        $z0 = r0.<android.net.LocalSocket: boolean isConnected>;

        return $z0;
    }

    public boolean isClosed()
    {
        android.net.LocalSocket r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public synchronized boolean isBound()
    {
        android.net.LocalSocket r0;
        boolean $z0;

        r0 := @this: android.net.LocalSocket;

        $z0 = r0.<android.net.LocalSocket: boolean isBound>;

        return $z0;
    }

    public boolean isOutputShutdown()
    {
        android.net.LocalSocket r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean isInputShutdown()
    {
        android.net.LocalSocket r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.net.LocalSocket;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void connect(android.net.LocalSocketAddress, int) throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketAddress r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: android.net.LocalSocketAddress;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void setFileDescriptorsForSend(java.io.FileDescriptor[])
    {
        android.net.LocalSocket r0;
        java.io.FileDescriptor[] r1;
        android.net.LocalSocketImpl $r2;

        r0 := @this: android.net.LocalSocket;

        r1 := @parameter0: java.io.FileDescriptor[];

        $r2 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        virtualinvoke $r2.<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>(r1);

        return;
    }

    public java.io.FileDescriptor[] getAncillaryFileDescriptors() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.io.FileDescriptor[] $r2;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>();

        return $r2;
    }

    public android.net.Credentials getPeerCredentials() throws java.io.IOException
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        android.net.Credentials $r2;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>();

        return $r2;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.net.LocalSocket r0;
        android.net.LocalSocketImpl $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.net.LocalSocket;

        $r1 = r0.<android.net.LocalSocket: android.net.LocalSocketImpl impl>;

        $r2 = virtualinvoke $r1.<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <android.net.LocalSocket: int SOCKET_SEQPACKET> = 3;

        <android.net.LocalSocket: int SOCKET_STREAM> = 2;

        <android.net.LocalSocket: int SOCKET_DGRAM> = 1;

        <android.net.LocalSocket: int SOCKET_UNKNOWN> = 0;

        return;
    }
}
