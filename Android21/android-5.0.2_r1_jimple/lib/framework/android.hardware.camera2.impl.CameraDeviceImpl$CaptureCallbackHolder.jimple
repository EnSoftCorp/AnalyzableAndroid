class android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder extends java.lang.Object
{
    private final boolean mRepeating;
    private final android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback mCallback;
    private final java.util.List mRequestList;
    private final android.os.Handler mHandler;

    void <init>(android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback, java.util.List, android.os.Handler, boolean)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback r1;
        java.util.List r2;
        android.os.Handler r3;
        boolean z0;
        java.lang.UnsupportedOperationException $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        r1 := @parameter0: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: android.os.Handler;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Must have a valid handler and a valid callback");

        throw $r4;

     label2:
        r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: boolean mRepeating> = z0;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.os.Handler mHandler> = r3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: java.util.List mRequestList> = $r5;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback mCallback> = r1;

        return;
    }

    public boolean isRepeating()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        $z0 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: boolean mRepeating>;

        return $z0;
    }

    public android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback getCallback()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        $r1 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback mCallback>;

        return $r1;
    }

    public android.hardware.camera2.CaptureRequest getRequest(int)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        int i0, $i1, $i2;
        java.util.List $r1, $r2, $r12;
        java.lang.Object $r3;
        android.hardware.camera2.CaptureRequest $r4;
        java.lang.IllegalArgumentException $r5, $r9;
        java.lang.Object[] $r6, $r10;
        java.lang.Integer $r7, $r11, $r13;
        java.lang.String $r8, $r14;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: java.util.List mRequestList>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 < $i1 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[0] = $r11;

        $r12 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: java.util.List mRequestList>;

        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10[1] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Requested subsequenceId %d is larger than request list size %d.", $r10);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        if i0 >= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Requested subsequenceId %d is negative", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label2:
        $r2 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: java.util.List mRequestList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (android.hardware.camera2.CaptureRequest) $r3;

        return $r4;
    }

    public android.hardware.camera2.CaptureRequest getRequest()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        android.hardware.camera2.CaptureRequest $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        $r1 = virtualinvoke r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.hardware.camera2.CaptureRequest getRequest(int)>(0);

        return $r1;
    }

    public android.os.Handler getHandler()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        $r1 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.os.Handler mHandler>;

        return $r1;
    }
}
