class android.animation.PropertyValuesHolder$MultiIntValuesHolder extends android.animation.PropertyValuesHolder
{
    private long mJniSetter;
    private static final java.util.HashMap sJNISetterPropertyMap;

    public transient void <init>(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        java.lang.String r1;
        android.animation.TypeConverter r2;
        android.animation.TypeEvaluator r3;
        java.lang.Object[] r4;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.animation.TypeConverter;

        r3 := @parameter2: android.animation.TypeEvaluator;

        r4 := @parameter3: java.lang.Object[];

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(java.lang.String,android.animation.PropertyValuesHolder$1)>(r1, null);

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setConverter(android.animation.TypeConverter)>(r2);

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setObjectValues(java.lang.Object[])>(r4);

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r3);

        return;
    }

    public void <init>(java.lang.String, android.animation.TypeConverter, android.animation.TypeEvaluator, android.animation.Keyframes)
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        java.lang.String r1;
        android.animation.TypeConverter r2;
        android.animation.TypeEvaluator r3;
        android.animation.Keyframes r4;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.animation.TypeConverter;

        r3 := @parameter2: android.animation.TypeEvaluator;

        r4 := @parameter3: android.animation.Keyframes;

        specialinvoke r0.<android.animation.PropertyValuesHolder: void <init>(java.lang.String,android.animation.PropertyValuesHolder$1)>(r1, null);

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setConverter(android.animation.TypeConverter)>(r2);

        r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: android.animation.Keyframes mKeyframes> = r4;

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r3);

        return;
    }

    void setAnimatedValue(java.lang.Object)
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        java.lang.Object r1, $r3;
        int[] r2, $r4;
        int i0, $i3, $i5, $i6, $i7, $i8, $i10, $i12;
        long $l1, $l4, $l9, $l11, $l13;
        byte $b2;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.Object getAnimatedValue()>();

        $r4 = (int[]) $r3;

        r2 = (int[]) $r4;

        i0 = lengthof r2;

        $l1 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        $l4 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $i3 = r2[0];

        staticinvoke <android.animation.PropertyValuesHolder: void access$200(java.lang.Object,long,int)>(r1, $l4, $i3);

        goto label5;

     label2:
        $l11 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $i12 = r2[0];

        $i10 = r2[1];

        staticinvoke <android.animation.PropertyValuesHolder: void access$1000(java.lang.Object,long,int,int)>(r1, $l11, $i12, $i10);

        goto label5;

     label3:
        $l9 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $i8 = r2[0];

        $i7 = r2[1];

        $i6 = r2[2];

        $i5 = r2[3];

        staticinvoke <android.animation.PropertyValuesHolder: void access$1100(java.lang.Object,long,int,int,int,int)>(r1, $l9, $i8, $i7, $i6, $i5);

        goto label5;

     label4:
        $l13 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        staticinvoke <android.animation.PropertyValuesHolder: void access$1200(java.lang.Object,long,int[])>(r1, $l13, r2);

     label5:
        return;
    }

    void setupSetterAndGetter(java.lang.Object)
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        java.lang.Object r1;
        java.lang.Class $r2;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void setupSetter(java.lang.Class)>($r2);

        return;
    }

    void setupSetter(java.lang.Class)
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        java.lang.Class r1;
        java.util.HashMap r2, $r9, $r18, $r21;
        java.lang.Long r3, $r16;
        int[] r4, $r14;
        int i0;
        java.lang.Throwable r6, $r22;
        long $l1, $l3, $l5, $l6, $l7, $l9, $l10;
        byte $b2, $b4, $b8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r7, $r12, $r27;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r8, $r11, $r28;
        java.lang.Object $r10, $r15, $r24;
        java.lang.String $r13, $r17, $r23, $r26, r29;
        java.lang.NoSuchMethodError $r25;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        r1 := @parameter0: java.lang.Class;

        $l1 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label01;

        return;

     label01:
        $r7 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

        $r9 = <android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.HashMap sJNISetterPropertyMap>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.HashMap) $r10;

        if r2 == null goto label02;

        $r23 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.String mPropertyName>;

        $r24 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);

        r3 = (java.lang.Long) $r24;

        if r3 == null goto label02;

        $l9 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter> = $l9;

     label02:
        $l3 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label08;

        $r13 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.String mPropertyName>;

        r29 = staticinvoke <android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>("set", $r13);

        virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: void calculateValue(float)>(0.0F);

        $r15 = virtualinvoke r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.Object getAnimatedValue()>();

        $r14 = (int[]) $r15;

        r4 = (int[]) $r14;

        i0 = lengthof r4;

     label03:
        $l6 = staticinvoke <android.animation.PropertyValuesHolder: long access$1300(java.lang.Class,java.lang.String,int)>(r1, r29, i0);

        r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter> = $l6;

     label04:
        goto label06;

     label05:
        $r25 := @caughtexception;

        $r26 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.String mPropertyName>;

        $l10 = staticinvoke <android.animation.PropertyValuesHolder: long access$1300(java.lang.Class,java.lang.String,int)>(r1, $r26, i0);

        r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter> = $l10;

     label06:
        $l5 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $b8 = $l5 cmp 0L;

        if $b8 == 0 goto label08;

        if r2 != null goto label07;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r2 = $r18;

        $r21 = <android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.HashMap sJNISetterPropertyMap>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label07:
        $r17 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.lang.String mPropertyName>;

        $l7 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: long mJniSetter>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r16);

     label08:
        $r12 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r11 = virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        goto label11;

     label09:
        $r22 := @caughtexception;

        r6 = $r22;

     label10:
        $r27 = r0.<android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock>;

        $r28 = virtualinvoke $r27.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r28.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        throw r6;

     label11:
        return;

        catch java.lang.NoSuchMethodError from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.PropertyValuesHolder$MultiIntValuesHolder r0;
        android.animation.PropertyValuesHolder $r1;

        r0 := @this: android.animation.PropertyValuesHolder$MultiIntValuesHolder;

        $r1 = specialinvoke r0.<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.animation.PropertyValuesHolder$MultiIntValuesHolder: java.util.HashMap sJNISetterPropertyMap> = $r0;

        return;
    }
}
