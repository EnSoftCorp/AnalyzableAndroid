public final class android.provider.MediaStore extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String AUTHORITY;
    private static final java.lang.String CONTENT_AUTHORITY_SLASH;
    public static final java.lang.String ACTION_MTP_SESSION_END;
    public static final java.lang.String UNHIDE_CALL;
    public static final java.lang.String PARAM_DELETE_DATA;
    public static final java.lang.String INTENT_ACTION_MUSIC_PLAYER;
    public static final java.lang.String INTENT_ACTION_MEDIA_SEARCH;
    public static final java.lang.String INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH;
    public static final java.lang.String INTENT_ACTION_TEXT_OPEN_FROM_SEARCH;
    public static final java.lang.String INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH;
    public static final java.lang.String EXTRA_MEDIA_ARTIST;
    public static final java.lang.String EXTRA_MEDIA_ALBUM;
    public static final java.lang.String EXTRA_MEDIA_TITLE;
    public static final java.lang.String EXTRA_MEDIA_GENRE;
    public static final java.lang.String EXTRA_MEDIA_PLAYLIST;
    public static final java.lang.String EXTRA_MEDIA_RADIO_CHANNEL;
    public static final java.lang.String EXTRA_MEDIA_FOCUS;
    public static final java.lang.String EXTRA_SCREEN_ORIENTATION;
    public static final java.lang.String EXTRA_FULL_SCREEN;
    public static final java.lang.String EXTRA_SHOW_ACTION_ICONS;
    public static final java.lang.String EXTRA_FINISH_ON_COMPLETION;
    public static final java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA;
    public static final java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE;
    public static final java.lang.String INTENT_ACTION_VIDEO_CAMERA;
    public static final java.lang.String ACTION_IMAGE_CAPTURE;
    public static final java.lang.String ACTION_IMAGE_CAPTURE_SECURE;
    public static final java.lang.String ACTION_VIDEO_CAPTURE;
    public static final java.lang.String EXTRA_VIDEO_QUALITY;
    public static final java.lang.String EXTRA_SIZE_LIMIT;
    public static final java.lang.String EXTRA_DURATION_LIMIT;
    public static final java.lang.String EXTRA_OUTPUT;
    public static final java.lang.String UNKNOWN_STRING;
    public static final java.lang.String MEDIA_SCANNER_VOLUME;
    public static final java.lang.String MEDIA_IGNORE_FILENAME;

    public void <init>()
    {
        android.provider.MediaStore r0;

        r0 := @this: android.provider.MediaStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri getMediaScannerUri()
    {
        android.net.Uri $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media/none/media_scanner");

        return $r0;
    }

    public static java.lang.String getVersion(android.content.Context)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r6;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://media/none/version");

        r1 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, null, null, null, null);

        if r1 == null goto label6;

     label1:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r2;

     label3:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r3;

     label6:
        return null;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void <clinit>()
    {
        <android.provider.MediaStore: java.lang.String MEDIA_IGNORE_FILENAME> = ".nomedia";

        <android.provider.MediaStore: java.lang.String MEDIA_SCANNER_VOLUME> = "volume";

        <android.provider.MediaStore: java.lang.String UNKNOWN_STRING> = "<unknown>";

        <android.provider.MediaStore: java.lang.String EXTRA_OUTPUT> = "output";

        <android.provider.MediaStore: java.lang.String EXTRA_DURATION_LIMIT> = "android.intent.extra.durationLimit";

        <android.provider.MediaStore: java.lang.String EXTRA_SIZE_LIMIT> = "android.intent.extra.sizeLimit";

        <android.provider.MediaStore: java.lang.String EXTRA_VIDEO_QUALITY> = "android.intent.extra.videoQuality";

        <android.provider.MediaStore: java.lang.String ACTION_VIDEO_CAPTURE> = "android.media.action.VIDEO_CAPTURE";

        <android.provider.MediaStore: java.lang.String ACTION_IMAGE_CAPTURE_SECURE> = "android.media.action.IMAGE_CAPTURE_SECURE";

        <android.provider.MediaStore: java.lang.String ACTION_IMAGE_CAPTURE> = "android.media.action.IMAGE_CAPTURE";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_VIDEO_CAMERA> = "android.media.action.VIDEO_CAMERA";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE> = "android.media.action.STILL_IMAGE_CAMERA_SECURE";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA> = "android.media.action.STILL_IMAGE_CAMERA";

        <android.provider.MediaStore: java.lang.String EXTRA_FINISH_ON_COMPLETION> = "android.intent.extra.finishOnCompletion";

        <android.provider.MediaStore: java.lang.String EXTRA_SHOW_ACTION_ICONS> = "android.intent.extra.showActionIcons";

        <android.provider.MediaStore: java.lang.String EXTRA_FULL_SCREEN> = "android.intent.extra.fullScreen";

        <android.provider.MediaStore: java.lang.String EXTRA_SCREEN_ORIENTATION> = "android.intent.extra.screenOrientation";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_FOCUS> = "android.intent.extra.focus";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_RADIO_CHANNEL> = "android.intent.extra.radio_channel";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_PLAYLIST> = "android.intent.extra.playlist";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_GENRE> = "android.intent.extra.genre";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_TITLE> = "android.intent.extra.title";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_ALBUM> = "android.intent.extra.album";

        <android.provider.MediaStore: java.lang.String EXTRA_MEDIA_ARTIST> = "android.intent.extra.artist";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH> = "android.media.action.VIDEO_PLAY_FROM_SEARCH";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_TEXT_OPEN_FROM_SEARCH> = "android.media.action.TEXT_OPEN_FROM_SEARCH";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH> = "android.media.action.MEDIA_PLAY_FROM_SEARCH";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_MEDIA_SEARCH> = "android.intent.action.MEDIA_SEARCH";

        <android.provider.MediaStore: java.lang.String INTENT_ACTION_MUSIC_PLAYER> = "android.intent.action.MUSIC_PLAYER";

        <android.provider.MediaStore: java.lang.String PARAM_DELETE_DATA> = "deletedata";

        <android.provider.MediaStore: java.lang.String UNHIDE_CALL> = "unhide";

        <android.provider.MediaStore: java.lang.String ACTION_MTP_SESSION_END> = "android.provider.action.MTP_SESSION_END";

        <android.provider.MediaStore: java.lang.String CONTENT_AUTHORITY_SLASH> = "content://media/";

        <android.provider.MediaStore: java.lang.String AUTHORITY> = "media";

        <android.provider.MediaStore: java.lang.String TAG> = "MediaStore";

        return;
    }
}
