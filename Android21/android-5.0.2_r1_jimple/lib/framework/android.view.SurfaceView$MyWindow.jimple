class android.view.SurfaceView$MyWindow extends com.android.internal.view.BaseIWindow
{
    private final java.lang.ref.WeakReference mSurfaceView;
    int mCurWidth;
    int mCurHeight;

    public void <init>(android.view.SurfaceView)
    {
        android.view.SurfaceView$MyWindow r0;
        android.view.SurfaceView r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.view.SurfaceView$MyWindow;

        r1 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<com.android.internal.view.BaseIWindow: void <init>()>();

        r0.<android.view.SurfaceView$MyWindow: int mCurWidth> = -1;

        r0.<android.view.SurfaceView$MyWindow: int mCurHeight> = -1;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView> = $r2;

        return;
    }

    public void resized(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.content.res.Configuration)
    {
        android.view.SurfaceView$MyWindow r0;
        android.graphics.Rect r1, r2, r3, r4, r5, $r12, $r14;
        boolean z0;
        android.content.res.Configuration r6;
        android.view.SurfaceView r7;
        java.lang.Throwable r8, $r18;
        java.lang.ref.WeakReference $r9;
        java.lang.Object $r10;
        java.util.concurrent.locks.ReentrantLock $r11, $r15, $r17;
        int $i0, $i1, $i2, $i3;
        android.os.Handler $r13, $r16;

        r0 := @this: android.view.SurfaceView$MyWindow;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: android.graphics.Rect;

        z0 := @parameter5: boolean;

        r6 := @parameter6: android.content.res.Configuration;

        $r9 = r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView>;

        $r10 = virtualinvoke $r9.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.view.SurfaceView) $r10;

        if r7 == null goto label7;

        $r11 = r7.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        if z0 == 0 goto label2;

        r7.<android.view.SurfaceView: boolean mUpdateWindowNeeded> = 1;

        r7.<android.view.SurfaceView: boolean mReportDrawNeeded> = 1;

        $r16 = r7.<android.view.SurfaceView: android.os.Handler mHandler>;

        virtualinvoke $r16.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

        goto label4;

     label2:
        $r12 = r7.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i0 = virtualinvoke $r12.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        if $i0 != $i1 goto label3;

        $r14 = r7.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i3 = virtualinvoke $r14.<android.graphics.Rect: int height()>();

        $i2 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i3 == $i2 goto label4;

     label3:
        r7.<android.view.SurfaceView: boolean mUpdateWindowNeeded> = 1;

        $r13 = r7.<android.view.SurfaceView: android.os.Handler mHandler>;

        virtualinvoke $r13.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

     label4:
        $r15 = r7.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r18 := @caughtexception;

        r8 = $r18;

     label6:
        $r17 = r7.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r17.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void dispatchAppVisibility(boolean)
    {
        android.view.SurfaceView$MyWindow r0;
        boolean z0;

        r0 := @this: android.view.SurfaceView$MyWindow;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchGetNewSurface()
    {
        android.view.SurfaceView$MyWindow r0;
        android.view.SurfaceView r1;
        android.os.Message r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        android.os.Handler $r5, $r6;

        r0 := @this: android.view.SurfaceView$MyWindow;

        $r3 = r0.<android.view.SurfaceView$MyWindow: java.lang.ref.WeakReference mSurfaceView>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.SurfaceView) $r4;

        if r1 == null goto label1;

        $r5 = r1.<android.view.SurfaceView: android.os.Handler mHandler>;

        r2 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r6 = r1.<android.view.SurfaceView: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

     label1:
        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.SurfaceView$MyWindow r0;
        boolean z0, z1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.view.SurfaceView$MyWindow;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected focus in surface: focus=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", touchEnabled=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceView", $r6);

        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.view.SurfaceView$MyWindow r0;
        java.lang.String r1, r2;
        android.os.ParcelFileDescriptor r3;

        r0 := @this: android.view.SurfaceView$MyWindow;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        return;
    }
}
