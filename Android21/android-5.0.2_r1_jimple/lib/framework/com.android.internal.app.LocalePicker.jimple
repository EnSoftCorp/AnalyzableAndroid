public class com.android.internal.app.LocalePicker extends android.app.ListFragment
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    com.android.internal.app.LocalePicker$LocaleSelectionListener mListener;

    public void <init>()
    {
        com.android.internal.app.LocalePicker r0;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void <init>()>();

        return;
    }

    public static java.util.List getAllAssetLocales(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z9;
        android.content.res.Resources r1, $r12;
        java.lang.String[] r2, r4, r5;
        java.util.ArrayList r3, r6, $r14, $r15;
        java.util.Iterator r7;
        java.lang.String r8, r11, $r16, $r18, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r34, $r35, $r37, $r38;
        java.util.Locale r9, $r24, $r28, $r30;
        com.android.internal.app.LocalePicker$LocaleInfo r10, $r26, $r32, $r36;
        android.content.res.AssetManager $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r17, $r22;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        r2 = virtualinvoke $r13.<android.content.res.AssetManager: java.lang.String[] getLocales()>();

        $r14 = new java.util.ArrayList;

        $i0 = lengthof r2;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = $r14;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r3, r2);

        if z0 != 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>("ar-XB");

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>("en-XA");

     label1:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r3);

        r4 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235976);

        r5 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235977);

        $r15 = new java.util.ArrayList;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i1);

        r6 = $r15;

        r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r17;

        $r16 = virtualinvoke r8.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        r9 = staticinvoke <java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>($r16);

        if r9 == null goto label2;

        $r18 = "und";

        $r19 = virtualinvoke r9.<java.util.Locale: java.lang.String getLanguage()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z3 != 0 goto label2;

        $r21 = virtualinvoke r9.<java.util.Locale: java.lang.String getLanguage()>();

        $z5 = virtualinvoke $r21.<java.lang.String: boolean isEmpty()>();

        if $z5 != 0 goto label2;

        $r20 = virtualinvoke r9.<java.util.Locale: java.lang.String getCountry()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        goto label2;

     label3:
        $z6 = virtualinvoke r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 == 0 goto label4;

        $r36 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r35 = virtualinvoke r9.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r9);

        $r38 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r35);

        specialinvoke $r36.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r38, r9);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        goto label6;

     label4:
        $i3 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        $i2 = $i3 - 1;

        $r22 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r10 = (com.android.internal.app.LocalePicker$LocaleInfo) $r22;

        $r24 = r10.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r25 = virtualinvoke $r24.<java.util.Locale: java.lang.String getLanguage()>();

        $r23 = virtualinvoke r9.<java.util.Locale: java.lang.String getLanguage()>();

        $z7 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z7 == 0 goto label5;

        $r30 = r10.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r29 = virtualinvoke $r30.<java.util.Locale: java.lang.String getLanguage()>();

        $z9 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("zz");

        if $z9 != 0 goto label5;

        $r28 = r10.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r34 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>($r28, r4, r5);

        $r33 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r34);

        r10.<com.android.internal.app.LocalePicker$LocaleInfo: java.lang.String label> = $r33;

        $r32 = new com.android.internal.app.LocalePicker$LocaleInfo;

        $r31 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String getDisplayName(java.util.Locale,java.lang.String[],java.lang.String[])>(r9, r4, r5);

        $r37 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r31);

        specialinvoke $r32.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>($r37, r9);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        goto label6;

     label5:
        $r27 = virtualinvoke r9.<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>(r9);

        r11 = staticinvoke <com.android.internal.app.LocalePicker: java.lang.String toTitleCase(java.lang.String)>($r27);

        $r26 = new com.android.internal.app.LocalePicker$LocaleInfo;

        specialinvoke $r26.<com.android.internal.app.LocalePicker$LocaleInfo: void <init>(java.lang.String,java.util.Locale)>(r11, r9);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label6:
        goto label2;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r6);

        return r6;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context)
    {
        android.content.Context r0;
        android.widget.ArrayAdapter $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int)>(r0, 17367146, 16908728);

        return $r1;
    }

    public static android.widget.ArrayAdapter constructAdapter(android.content.Context, int, int)
    {
        android.content.Context r0;
        int i0, i1, $i2;
        boolean z0, $z1;
        java.util.List r1;
        android.view.LayoutInflater r2;
        android.content.ContentResolver $r3;
        java.lang.Object $r4;
        com.android.internal.app.LocalePicker$1 $r5;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "development_settings_enabled", 0);

        if $i2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        r1 = staticinvoke <com.android.internal.app.LocalePicker: java.util.List getAllAssetLocales(android.content.Context,boolean)>(r0, z0);

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r2 = (android.view.LayoutInflater) $r4;

        $r5 = new com.android.internal.app.LocalePicker$1;

        specialinvoke $r5.<com.android.internal.app.LocalePicker$1: void <init>(android.content.Context,int,int,java.util.List,android.view.LayoutInflater,int,int)>(r0, i0, i1, r1, r2, i0, i1);

        return $r5;
    }

    private static java.lang.String toTitleCase(java.lang.String)
    {
        java.lang.String r0, $r3, $r5;
        int $i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        char $c1, $c2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String getDisplayName(java.util.Locale, java.lang.String[], java.lang.String[])
    {
        java.util.Locale r0;
        java.lang.String[] r1, r2;
        java.lang.String r3, $r4, $r5, $r6;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r5 = r1[i0];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r6 = r2[i0];

        return $r6;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>(r0);

        return $r4;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        com.android.internal.app.LocalePicker r0;
        android.os.Bundle r1;
        android.widget.ArrayAdapter r2;
        android.app.Activity $r3;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onActivityCreated(android.os.Bundle)>(r1);

        $r3 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.app.Activity getActivity()>();

        r2 = staticinvoke <com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context)>($r3);

        virtualinvoke r0.<com.android.internal.app.LocalePicker: void setListAdapter(android.widget.ListAdapter)>(r2);

        return;
    }

    public void setLocaleSelectionListener(com.android.internal.app.LocalePicker$LocaleSelectionListener)
    {
        com.android.internal.app.LocalePicker r0;
        com.android.internal.app.LocalePicker$LocaleSelectionListener r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: com.android.internal.app.LocalePicker$LocaleSelectionListener;

        r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener> = r1;

        return;
    }

    public void onResume()
    {
        com.android.internal.app.LocalePicker r0;
        android.widget.ListView $r1;

        r0 := @this: com.android.internal.app.LocalePicker;

        specialinvoke r0.<android.app.ListFragment: void onResume()>();

        $r1 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListView getListView()>();

        virtualinvoke $r1.<android.widget.ListView: boolean requestFocus()>();

        return;
    }

    public void onListItemClick(android.widget.ListView, android.view.View, int, long)
    {
        com.android.internal.app.LocalePicker r0;
        android.widget.ListView r1;
        android.view.View r2;
        int i0;
        long l1;
        java.util.Locale r3;
        com.android.internal.app.LocalePicker$LocaleSelectionListener $r4, $r8;
        android.widget.ListAdapter $r5;
        java.lang.Object $r6;
        com.android.internal.app.LocalePicker$LocaleInfo $r7;

        r0 := @this: com.android.internal.app.LocalePicker;

        r1 := @parameter0: android.widget.ListView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.app.LocalePicker: android.widget.ListAdapter getListAdapter()>();

        $r6 = interfaceinvoke $r5.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        $r7 = (com.android.internal.app.LocalePicker$LocaleInfo) $r6;

        r3 = $r7.<com.android.internal.app.LocalePicker$LocaleInfo: java.util.Locale locale>;

        $r8 = r0.<com.android.internal.app.LocalePicker: com.android.internal.app.LocalePicker$LocaleSelectionListener mListener>;

        interfaceinvoke $r8.<com.android.internal.app.LocalePicker$LocaleSelectionListener: void onLocaleSelected(java.util.Locale)>(r3);

     label1:
        return;
    }

    public static void updateLocale(java.util.Locale)
    {
        java.util.Locale r0;
        android.app.IActivityManager r1;
        android.content.res.Configuration r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: java.util.Locale;

     label1:
        r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r2 = interfaceinvoke r1.<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r2.<android.content.res.Configuration: void setLocale(java.util.Locale)>(r0);

        interfaceinvoke r1.<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>(r2);

        staticinvoke <android.app.backup.BackupManager: void dataChanged(java.lang.String)>("com.android.providers.settings");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.internal.app.LocalePicker: boolean DEBUG> = 0;

        <com.android.internal.app.LocalePicker: java.lang.String TAG> = "LocalePicker";

        return;
    }
}
