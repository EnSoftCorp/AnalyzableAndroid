public final class com.android.server.LocalServices extends java.lang.Object
{
    private static final android.util.ArrayMap sLocalServiceObjects;

    private void <init>()
    {
        com.android.server.LocalServices r0;

        r0 := @this: com.android.server.LocalServices;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getService(java.lang.Class)
    {
        java.lang.Class r0;
        android.util.ArrayMap r1, $r3, $r4;
        java.lang.Throwable r2, $r6;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.Class;

        $r3 = <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void addService(java.lang.Class, java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object r1;
        android.util.ArrayMap r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r9;
        boolean $z0;
        java.lang.IllegalStateException $r8;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        $r4 = <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Overriding service registration");

        throw $r8;

     label2:
        $r6 = <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void <clinit>()
    {
        android.util.ArrayMap $r0;

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>()>();

        <com.android.server.LocalServices: android.util.ArrayMap sLocalServiceObjects> = $r0;

        return;
    }
}
