public class android.transition.TransitionUtils extends java.lang.Object
{
    private static int MAX_IMAGE_SIZE;

    public void <init>()
    {
        android.transition.TransitionUtils r0;

        r0 := @this: android.transition.TransitionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.animation.Animator mergeAnimators(android.animation.Animator, android.animation.Animator)
    {
        android.animation.Animator r0, r1;
        android.animation.AnimatorSet r2, $r3;
        android.animation.Animator[] $r4;

        r0 := @parameter0: android.animation.Animator;

        r1 := @parameter1: android.animation.Animator;

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 != null goto label2;

        return r0;

     label2:
        $r3 = new android.animation.AnimatorSet;

        specialinvoke $r3.<android.animation.AnimatorSet: void <init>()>();

        r2 = $r3;

        $r4 = newarray (android.animation.Animator)[2];

        $r4[0] = r0;

        $r4[1] = r1;

        virtualinvoke r2.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r4);

        return r2;
    }

    public static transient android.transition.Transition mergeTransitions(android.transition.Transition[])
    {
        android.transition.Transition[] r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.transition.TransitionSet $r1, r7;
        android.transition.Transition $r2, $r3, $r5, $r6;

        r0 := @parameter0: android.transition.Transition[];

        i0 = 0;

        i1 = -1;

        i2 = 0;

     label1:
        $i4 = lengthof r0;

        if i2 >= $i4 goto label3;

        $r6 = r0[i2];

        if $r6 == null goto label2;

        i0 = i0 + 1;

        i1 = i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if i0 != 0 goto label4;

        return null;

     label4:
        if i0 != 1 goto label5;

        $r5 = r0[i1];

        return $r5;

     label5:
        $r1 = new android.transition.TransitionSet;

        specialinvoke $r1.<android.transition.TransitionSet: void <init>()>();

        r7 = $r1;

        i3 = 0;

     label6:
        $i5 = lengthof r0;

        if i3 >= $i5 goto label8;

        $r2 = r0[i3];

        if $r2 == null goto label7;

        $r3 = r0[i3];

        virtualinvoke r7.<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>($r3);

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return r7;
    }

    public static android.view.View copyViewImage(android.view.ViewGroup, android.view.View, android.view.View)
    {
        android.view.ViewGroup r0;
        android.view.View r1, r2;
        android.graphics.Matrix r3, $r7;
        android.graphics.RectF r4, $r8;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.widget.ImageView r5, $r10;
        android.graphics.Bitmap r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.widget.ImageView$ScaleType $r9;
        android.content.Context $r11;

        r0 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.View;

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        r3 = $r7;

        $i6 = virtualinvoke r2.<android.view.View: int getScrollX()>();

        $i7 = neg $i6;

        $f0 = (float) $i7;

        $i8 = virtualinvoke r2.<android.view.View: int getScrollY()>();

        $i9 = neg $i8;

        $f1 = (float) $i9;

        virtualinvoke r3.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        virtualinvoke r1.<android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>(r3);

        virtualinvoke r0.<android.view.ViewGroup: void transformMatrixToLocal(android.graphics.Matrix)>(r3);

        $r8 = new android.graphics.RectF;

        $i10 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $f2 = (float) $i10;

        $i11 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $f3 = (float) $i11;

        specialinvoke $r8.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f2, $f3);

        r4 = $r8;

        virtualinvoke r3.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r4);

        $f4 = r4.<android.graphics.RectF: float left>;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f4);

        $f5 = r4.<android.graphics.RectF: float top>;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $f7 = r4.<android.graphics.RectF: float right>;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f7);

        $f6 = r4.<android.graphics.RectF: float bottom>;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f6);

        $r10 = new android.widget.ImageView;

        $r11 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r10.<android.widget.ImageView: void <init>(android.content.Context)>($r11);

        r5 = $r10;

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke r5.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r9);

        r6 = staticinvoke <android.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)>(r1, r3, r4);

        if r6 == null goto label1;

        virtualinvoke r5.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r6);

     label1:
        $i13 = i2 - i0;

        i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);

        $i12 = i3 - i1;

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

        virtualinvoke r5.<android.widget.ImageView: void measure(int,int)>(i4, i5);

        virtualinvoke r5.<android.widget.ImageView: void layout(int,int,int,int)>(i0, i1, i2, i3);

        return r5;
    }

    public static android.graphics.Bitmap createViewBitmap(android.view.View, android.graphics.Matrix, android.graphics.RectF)
    {
        android.view.View r0;
        android.graphics.Matrix r1;
        android.graphics.RectF r2;
        android.graphics.Bitmap r3;
        int i0, i1, $i2, $i3, i4, i5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.graphics.Canvas r4, $r6;
        android.graphics.Bitmap$Config $r5;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.Matrix;

        r2 := @parameter2: android.graphics.RectF;

        r3 = null;

        $f1 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $f2 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        if i0 <= 0 goto label1;

        if i1 <= 0 goto label1;

        $i2 = <android.transition.TransitionUtils: int MAX_IMAGE_SIZE>;

        $f4 = (float) $i2;

        $i3 = i0 * i1;

        $f3 = (float) $i3;

        $f5 = $f4 / $f3;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f5);

        $f7 = (float) i0;

        $f6 = $f7 * f0;

        i4 = (int) $f6;

        $f9 = (float) i1;

        $f8 = $f9 * f0;

        i5 = (int) $f8;

        $f11 = r2.<android.graphics.RectF: float left>;

        $f12 = neg $f11;

        $f10 = r2.<android.graphics.RectF: float top>;

        $f13 = neg $f10;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f12, $f13);

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f0);

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i4, i5, $r5);

        $r6 = new android.graphics.Canvas;

        specialinvoke $r6.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r6;

        virtualinvoke r4.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r1);

        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r4);

     label1:
        return r3;
    }

    static void <clinit>()
    {
        <android.transition.TransitionUtils: int MAX_IMAGE_SIZE> = 1048576;

        return;
    }
}
