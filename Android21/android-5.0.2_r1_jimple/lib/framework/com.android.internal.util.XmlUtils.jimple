public class com.android.internal.util.XmlUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.internal.util.XmlUtils r0;

        r0 := @this: com.android.internal.util.XmlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void skipCurrentTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label2;

        if i1 != 3 goto label1;

        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label2;

        goto label1;

     label2:
        return;
    }

    public static final int convertValueToList(java.lang.CharSequence, java.lang.String[], int)
    {
        java.lang.CharSequence r0;
        java.lang.String[] r1;
        int i0, i1, $i2;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        if null == r0 goto label3;

        i1 = 0;

     label1:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label3;

        $r2 = r1[i1];

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static final boolean convertValueToBoolean(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0, z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        z1 = 0;

        if null != r0 goto label1;

        return z0;

     label1:
        $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("1");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("true");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>("TRUE");

        if $z4 == 0 goto label3;

     label2:
        z1 = 1;

     label3:
        return z1;
    }

    public static final int convertValueToInt(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0, i2, i3, $i9, $i10, $i11, $i12;
        java.lang.String r1, $r2;
        byte b1, b4;
        char c5, $c6, $c7, $c8;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        if null != r0 goto label1;

        return i0;

     label1:
        r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        b1 = 1;

        i2 = 0;

        i3 = virtualinvoke r1.<java.lang.String: int length()>();

        b4 = 10;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if 45 != $c6 goto label2;

        b1 = -1;

        i2 = i2 + 1;

     label2:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if 48 != $c7 goto label7;

        $i12 = i3 - 1;

        if i2 != $i12 goto label3;

        return 0;

     label3:
        $i11 = i2 + 1;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i11);

        if 120 == c5 goto label4;

        if 88 != c5 goto label5;

     label4:
        i2 = i2 + 2;

        b4 = 16;

        goto label6;

     label5:
        i2 = i2 + 1;

        b4 = 8;

     label6:
        goto label8;

     label7:
        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if 35 != $c8 goto label8;

        i2 = i2 + 1;

        b4 = 16;

     label8:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i2);

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, b4);

        $i9 = $i10 * b1;

        return $i9;
    }

    public static int convertValueToUnsignedInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if null != r0 goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>(r0);

        return $i1;
    }

    public static int parseUnsignedIntAttribute(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.String r1, $r2;
        int i0, i1, $i7, $i8, $i9;
        byte b2;
        char c3, $c4, $c5;
        long $l6;

        r0 := @parameter0: java.lang.CharSequence;

        r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        b2 = 10;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if 48 != $c4 goto label5;

        $i7 = i1 - 1;

        if i0 != $i7 goto label1;

        return 0;

     label1:
        $i9 = i0 + 1;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        if 120 == c3 goto label2;

        if 88 != c3 goto label3;

     label2:
        i0 = i0 + 2;

        b2 = 16;

        goto label4;

     label3:
        i0 = i0 + 1;

        b2 = 8;

     label4:
        goto label6;

     label5:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if 35 != $c5 goto label6;

        i0 = i0 + 1;

        b2 = 16;

     label6:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r2, b2);

        $i8 = (int) $l6;

        return $i8;
    }

    public static final void writeMapXml(java.util.Map, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.io.OutputStream r1;
        com.android.internal.util.FastXmlSerializer r2, $r3;
        java.lang.Boolean $r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.OutputStream;

        $r3 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r3.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r3;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r4);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeListXml(java.util.List, java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.io.OutputStream r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.OutputStream;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, null, r2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r1, r2, null);

        return;
    }

    public static final void writeMapXml(java.util.Map, java.lang.String, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        com.android.internal.util.XmlUtils$WriteMapCallback r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        r3 := @parameter3: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "map");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r2, r3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "map");

        return;
    }

    public static final void writeMapXml(java.util.Map, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Map r0;
        org.xmlpull.v1.XmlSerializer r1;
        com.android.internal.util.XmlUtils$WriteMapCallback r2;
        java.util.Set r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter2: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r0 != null goto label1;

        return;

     label1:
        r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>($r7, $r9, r1, r2);

        goto label2;

     label3:
        return;
    }

    public static final void writeListXml(java.util.List, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.List r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        java.lang.Object $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "list");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r5, null, r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "list");

        return;
    }

    public static final void writeSetXml(java.util.Set, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.util.Set r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        boolean $z0;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "set");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r4, null, r2);

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "set");

        return;
    }

    public static final void writeByteArrayXml(byte[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        byte[] r0;
        java.lang.String r1, $r5, $r9;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder r3, $r7;
        byte b2, b3;
        short s10;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "byte-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r5);

        $r7 = new java.lang.StringBuilder;

        $i4 = lengthof r0;

        $i5 = $i4 * 2;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i5);

        r3 = $r7;

        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        b2 = r0[i1];

        b3 = b2 >> 4;

        if b3 < 10 goto label4;

        $i9 = 97 + b3;

        $i6 = $i9 - 10;

        goto label5;

     label4:
        $i6 = 48 + b3;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        s10 = b2 & 255;

        if s10 < 10 goto label6;

        $i8 = 97 + s10;

        $i7 = $i8 - 10;

        goto label7;

     label6:
        $i7 = 48 + s10;

     label7:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        i1 = i1 + 1;

        goto label3;

     label8:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r9);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "byte-array");

        return;
    }

    public static final void writeIntArrayXml(int[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1, $i2;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "int-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $i2 = r0[i1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "int-array");

        return;
    }

    public static final void writeLongArrayXml(long[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        long[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        long $l2;

        r0 := @parameter0: long[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "long-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $l2 = r0[i1];

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "long-array");

        return;
    }

    public static final void writeDoubleArrayXml(double[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        double[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;
        double $d0;

        r0 := @parameter0: double[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "double-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $d0 = r0[i1];

        $r8 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "double-array");

        return;
    }

    public static final void writeStringArrayXml(java.lang.String[], java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1, $r4, $r8;
        org.xmlpull.v1.XmlSerializer r2;
        int i0, i1;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        if r0 != null goto label1;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string-array");

        if r1 == null goto label2;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label2:
        i0 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "num", $r4);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        $r8 = r0[i1];

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        i1 = i1 + 1;

        goto label3;

     label4:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string-array");

        return;
    }

    public static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        staticinvoke <com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>(r0, r1, r2, null);

        return;
    }

    private static final void writeValueXml(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer, com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object r0;
        java.lang.String r1, r4, $r10, $r12, $r29, $r31;
        org.xmlpull.v1.XmlSerializer r2;
        com.android.internal.util.XmlUtils$WriteMapCallback r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.RuntimeException $r6;
        java.util.List $r15;
        java.util.Set $r16;
        java.lang.String[] $r17, $r20;
        double[] $r18, $r23;
        java.util.Map $r19;
        long[] $r21, $r24;
        int[] $r22, $r27;
        byte[] $r25, $r28;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xmlpull.v1.XmlSerializer;

        r3 := @parameter3: com.android.internal.util.XmlUtils$WriteMapCallback;

        if r0 != null goto label02;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "null");

        if r1 == null goto label01;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label01:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "null");

        return;

     label02:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r1 == null goto label03;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label03:
        $r31 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r31);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label04:
        $z1 = r0 instanceof java.lang.Integer;

        if $z1 == 0 goto label05;

        r4 = "int";

        goto label21;

     label05:
        $z2 = r0 instanceof java.lang.Long;

        if $z2 == 0 goto label06;

        r4 = "long";

        goto label21;

     label06:
        $z3 = r0 instanceof java.lang.Float;

        if $z3 == 0 goto label07;

        r4 = "float";

        goto label21;

     label07:
        $z4 = r0 instanceof java.lang.Double;

        if $z4 == 0 goto label08;

        r4 = "double";

        goto label21;

     label08:
        $z5 = r0 instanceof java.lang.Boolean;

        if $z5 == 0 goto label09;

        r4 = "boolean";

        goto label21;

     label09:
        $z6 = r0 instanceof byte[];

        if $z6 == 0 goto label10;

        $r28 = (byte[]) r0;

        $r25 = (byte[]) $r28;

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r25, r1, r2);

        return;

     label10:
        $z7 = r0 instanceof int[];

        if $z7 == 0 goto label11;

        $r22 = (int[]) r0;

        $r27 = (int[]) $r22;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r27, r1, r2);

        return;

     label11:
        $z8 = r0 instanceof long[];

        if $z8 == 0 goto label12;

        $r24 = (long[]) r0;

        $r21 = (long[]) $r24;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongArrayXml(long[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r21, r1, r2);

        return;

     label12:
        $z9 = r0 instanceof double[];

        if $z9 == 0 goto label13;

        $r18 = (double[]) r0;

        $r23 = (double[]) $r18;

        staticinvoke <com.android.internal.util.XmlUtils: void writeDoubleArrayXml(double[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r23, r1, r2);

        return;

     label13:
        $z10 = r0 instanceof java.lang.String[];

        if $z10 == 0 goto label14;

        $r20 = (java.lang.String[]) r0;

        $r17 = (java.lang.String[]) $r20;

        staticinvoke <com.android.internal.util.XmlUtils: void writeStringArrayXml(java.lang.String[],java.lang.String,org.xmlpull.v1.XmlSerializer)>($r17, r1, r2);

        return;

     label14:
        $z12 = r0 instanceof java.util.Map;

        if $z12 == 0 goto label15;

        $r19 = (java.util.Map) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r19, r1, r2);

        return;

     label15:
        $z11 = r0 instanceof java.util.List;

        if $z11 == 0 goto label16;

        $r15 = (java.util.List) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r15, r1, r2);

        return;

     label16:
        $z14 = r0 instanceof java.util.Set;

        if $z14 == 0 goto label17;

        $r16 = (java.util.Set) r0;

        staticinvoke <com.android.internal.util.XmlUtils: void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer)>($r16, r1, r2);

        return;

     label17:
        $z13 = r0 instanceof java.lang.CharSequence;

        if $z13 == 0 goto label19;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "string");

        if r1 == null goto label18;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label18:
        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r12);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "string");

        return;

     label19:
        if r3 == null goto label20;

        interfaceinvoke r3.<com.android.internal.util.XmlUtils$WriteMapCallback: void writeUnknownObject(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>(r0, r1, r2);

        return;

     label20:
        $r6 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeValueXml: unable to write value ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label21:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r4);

        if r1 == null goto label22;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r1);

     label22:
        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r29);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r4);

        return;
    }

    public static final java.util.HashMap readMapXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.HashMap) $r3;

        return $r4;
    }

    public static final java.util.ArrayList readListXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }

    public static final java.util.HashSet readSetXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.io.InputStream r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String[] $r2;
        java.lang.Object $r3;
        java.util.HashSet $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>(r1, $r2);

        $r4 = (java.util.HashSet) $r3;

        return $r4;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.HashMap $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, null);

        return $r3;
    }

    public static final java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r12, $r13, $r18, $r20, $r22;
        java.lang.String[] r2;
        com.android.internal.util.XmlUtils$ReadMapCallback r3;
        java.util.HashMap r4, $r6;
        int i0;
        java.lang.Object r5;
        org.xmlpull.v1.XmlPullParserException $r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r16, $r17, $r19, $r21;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r4 = $r6;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r2, r3);

        $r22 = r2[0];

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r5);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r18 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label4:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.ArrayList $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, null);

        return $r3;
    }

    private static final java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r12, $r13, $r18, $r20;
        java.lang.String[] r2;
        com.android.internal.util.XmlUtils$ReadMapCallback r3;
        java.util.ArrayList r4, $r6;
        int i0;
        java.lang.Object r5;
        org.xmlpull.v1.XmlPullParserException $r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r16, $r17, $r19, $r21;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r4 = $r6;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r2, r3);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r18 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label4:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public static final java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.HashSet $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        $r3 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, null);

        return $r3;
    }

    private static final java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r12, $r13, $r18, $r20;
        java.lang.String[] r2;
        com.android.internal.util.XmlUtils$ReadMapCallback r3;
        java.util.HashSet r4, $r6;
        int i0;
        java.lang.Object r5;
        org.xmlpull.v1.XmlPullParserException $r7, $r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r16, $r17, $r19, $r21;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: com.android.internal.util.XmlUtils$ReadMapCallback;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r4 = $r6;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        r5 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r2, r3);

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

        goto label4;

     label2:
        if i0 != 3 goto label4;

        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r18 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label4:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        $r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r7;
    }

    public static final int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r5, $r11, $r12, $r13, $r20, $r21, $r22, $r26, $r27, $r28;
        java.lang.String[] r2;
        int i0, i1, i2, $i4;
        org.xmlpull.v1.XmlPullParserException $r6, $r14, $r25, $r30, $r33, $r35, $r37;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r29;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r31, $r36;
        java.lang.NullPointerException $r32, $r34;
        int[] r39;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        goto label05;

     label03:
        $r34 := @caughtexception;

        $r37 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r37.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in byte-array");

        throw $r37;

     label04:
        $r31 := @caughtexception;

        $r35 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in byte-array");

        throw $r35;

     label05:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r39 = newarray (int)[i0];

        i1 = 0;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if i2 != 2 goto label12;

        $r21 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label11;

     label07:
        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        r39[i1] = $i4;

     label08:
        goto label15;

     label09:
        $r32 := @caughtexception;

        $r30 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        throw $r30;

     label10:
        $r36 := @caughtexception;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        throw $r33;

     label11:
        $r25 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r28 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label12:
        if i2 != 3 goto label15;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label13;

        return r39;

     label13:
        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label14;

        i1 = i1 + 1;

        goto label15;

     label14:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r20 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label15:
        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label06;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label01 to label02 with label04;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public static final long[] readThisLongArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r5, $r11, $r12, $r13, $r20, $r21, $r22, $r26, $r27, $r28;
        java.lang.String[] r2;
        int i0, i1, i2;
        org.xmlpull.v1.XmlPullParserException $r6, $r14, $r25, $r30, $r33, $r35, $r37;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r29;
        boolean $z0, $z1, $z2;
        java.lang.NullPointerException $r31, $r34;
        long $l4;
        java.lang.NumberFormatException $r32, $r36;
        long[] r39;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        goto label05;

     label03:
        $r31 := @caughtexception;

        $r35 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in long-array");

        throw $r35;

     label04:
        $r36 := @caughtexception;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in long-array");

        throw $r33;

     label05:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r39 = newarray (long)[i0];

        i1 = 0;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if i2 != 2 goto label12;

        $r21 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label11;

     label07:
        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r27);

        r39[i1] = $l4;

     label08:
        goto label15;

     label09:
        $r34 := @caughtexception;

        $r37 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r37.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        throw $r37;

     label10:
        $r32 := @caughtexception;

        $r30 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        throw $r30;

     label11:
        $r25 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r28 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label12:
        if i2 != 3 goto label15;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label13;

        return r39;

     label13:
        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label14;

        i1 = i1 + 1;

        goto label15;

     label14:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r20 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label15:
        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label06;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label01 to label02 with label04;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public static final double[] readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r5, $r11, $r12, $r13, $r20, $r21, $r22, $r26, $r27, $r28;
        java.lang.String[] r2;
        int i0, i1, i2;
        org.xmlpull.v1.XmlPullParserException $r6, $r14, $r25, $r30, $r33, $r35, $r37;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r29;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r31, $r36;
        double $d0;
        java.lang.NullPointerException $r32, $r34;
        double[] r39;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        goto label05;

     label03:
        $r34 := @caughtexception;

        $r37 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r37.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in double-array");

        throw $r37;

     label04:
        $r36 := @caughtexception;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in double-array");

        throw $r33;

     label05:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r39 = newarray (double)[i0];

        i1 = 0;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if i2 != 2 goto label12;

        $r21 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label11;

     label07:
        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r27);

        r39[i1] = $d0;

     label08:
        goto label15;

     label09:
        $r32 := @caughtexception;

        $r30 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        throw $r30;

     label10:
        $r31 := @caughtexception;

        $r35 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        throw $r35;

     label11:
        $r25 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r28 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label12:
        if i2 != 3 goto label15;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label13;

        return r39;

     label13:
        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label14;

        i1 = i1 + 1;

        goto label15;

     label14:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r20 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label15:
        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label06;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label01 to label02 with label04;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public static final java.lang.String[] readThisStringArrayXml(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r5, $r11, $r12, $r13, $r20, $r21, $r22, $r26, $r27, $r28;
        java.lang.String[] r2, r39;
        int i0, i1, i2;
        org.xmlpull.v1.XmlPullParserException $r6, $r14, $r25, $r31, $r33, $r35, $r37;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r29;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r30, $r34;
        java.lang.NullPointerException $r32, $r36;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        $r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "num");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        goto label05;

     label03:
        $r32 := @caughtexception;

        $r33 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need num attribute in string-array");

        throw $r33;

     label04:
        $r30 := @caughtexception;

        $r31 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r31.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in num attribute in string-array");

        throw $r31;

     label05:
        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r39 = newarray (java.lang.String)[i0];

        i1 = 0;

        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if i2 != 2 goto label12;

        $r21 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z2 == 0 goto label11;

     label07:
        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r39[i1] = $r27;

     label08:
        goto label15;

     label09:
        $r36 := @caughtexception;

        $r37 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r37.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Need value attribute in item");

        throw $r37;

     label10:
        $r34 := @caughtexception;

        $r35 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Not a number in value attribute in item");

        throw $r35;

     label11:
        $r25 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected item tag at: ");

        $r28 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label12:
        if i2 != 3 goto label15;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label13;

        return r39;

     label13:
        $r13 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 == 0 goto label14;

        i1 = i1 + 1;

        goto label15;

     label14:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag at: ");

        $r20 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label15:
        i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label06;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document ended before ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end tag");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

        catch java.lang.NullPointerException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label01 to label02 with label04;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public static final java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1;
        int i0;
        org.xmlpull.v1.XmlPullParserException $r2, $r3, $r9;
        java.lang.StringBuilder $r4, $r5, $r7, $r10, $r11, $r14;
        java.lang.String $r6, $r8, $r12, $r13;
        java.lang.Object $r15;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String[];

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label1:
        if i0 != 2 goto label2;

        $r15 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, null);

        return $r15;

     label2:
        if i0 != 3 goto label3;

        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag at: ");

        $r12 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label3:
        if i0 != 4 goto label4;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text: ");

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label4:
        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label1;

        $r2 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r2.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document");

        throw $r2;
    }

    private static final java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String[], com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String[] r1, r65;
        com.android.internal.util.XmlUtils$ReadMapCallback r2;
        java.lang.String r3, r4, r6, $r12, $r16, $r25, $r27, $r32, $r33, $r35, $r39, $r44, $r46, $r49, $r52, $r56, $r59, $r60;
        java.lang.Object r5, $r7, r69;
        int i0, $i4, $i5, i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r28, $r29, $r30, $r31, $r34, $r36, $r37, $r42, $r43, $r45, $r47, $r48, $r50, $r51, $r53, $r54, $r57, $r58, $r61;
        org.xmlpull.v1.XmlPullParserException $r9, $r15, $r17, $r24, $r38, $r40, $r41, $r55;
        int[] r62;
        long[] r63;
        double[] r64;
        java.util.HashMap r66;
        java.util.ArrayList r67;
        java.util.HashSet r68;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: com.android.internal.util.XmlUtils$ReadMapCallback;

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label01;

        r5 = null;

        goto label17;

     label01:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z1 == 0 goto label07;

        r6 = "";

     label02:
        $i5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i5;

        if $i5 == 1 goto label06;

        if i0 != 3 goto label04;

        $r59 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z10 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z10 == 0 goto label03;

        r1[0] = r3;

        return r6;

     label03:
        $r55 = new org.xmlpull.v1.XmlPullParserException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <string>: ");

        $r56 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r61 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r60);

        throw $r55;

     label04:
        if i0 != 4 goto label05;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r49 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $r58 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        r6 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label05:
        if i0 != 2 goto label02;

        $r41 = new org.xmlpull.v1.XmlPullParserException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <string>: ");

        $r52 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r46 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r46);

        throw $r41;

     label06:
        $r40 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r40.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Unexpected end of document in <string>");

        throw $r40;

     label07:
        $r7 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r4);

        r5 = $r7;

        if $r7 == null goto label08;

        goto label17;

     label08:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("int-array");

        if $z2 == 0 goto label09;

        r62 = staticinvoke <com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "int-array", r1);

        r1[0] = r3;

        return r62;

     label09:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("long-array");

        if $z3 == 0 goto label10;

        r63 = staticinvoke <com.android.internal.util.XmlUtils: long[] readThisLongArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "long-array", r1);

        r1[0] = r3;

        return r63;

     label10:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("double-array");

        if $z4 == 0 goto label11;

        r64 = staticinvoke <com.android.internal.util.XmlUtils: double[] readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "double-array", r1);

        r1[0] = r3;

        return r64;

     label11:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("string-array");

        if $z6 == 0 goto label12;

        r65 = staticinvoke <com.android.internal.util.XmlUtils: java.lang.String[] readThisStringArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "string-array", r1);

        r1[0] = r3;

        return r65;

     label12:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z5 == 0 goto label13;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r66 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "map", r1);

        r1[0] = r3;

        return r66;

     label13:
        $z8 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z8 == 0 goto label14;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r67 = staticinvoke <com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "list", r1);

        r1[0] = r3;

        return r67;

     label14:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z7 == 0 goto label15;

        interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        r68 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>(r0, "set", r1);

        r1[0] = r3;

        return r68;

     label15:
        if r2 == null goto label16;

        r69 = interfaceinvoke r2.<com.android.internal.util.XmlUtils$ReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r4);

        r1[0] = r3;

        return r69;

     label16:
        $r9 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label17:
        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i6 = $i4;

        if $i4 == 1 goto label21;

        if i6 != 3 goto label19;

        $r32 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label18;

        r1[0] = r3;

        return r5;

     label18:
        $r38 = new org.xmlpull.v1.XmlPullParserException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end tag in <");

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r44 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r39 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r39);

        throw $r38;

     label19:
        if i6 != 4 goto label20;

        $r24 = new org.xmlpull.v1.XmlPullParserException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected text in <");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r35 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r33);

        throw $r24;

     label20:
        if i6 != 2 goto label17;

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag in <");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r27 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r17;

     label21:
        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of document in <");

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r16);

        throw $r15;
    }

    private static final java.lang.Object readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r3, $r6, $r8, $r9, $r11, $r18, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Boolean $r4;
        java.lang.Double $r5;
        java.lang.Float $r7;
        java.lang.Long $r10;
        int $i0;
        java.lang.NullPointerException $r12;
        java.lang.Integer $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r22, $r23, $r24, $r25;
        org.xmlpull.v1.XmlPullParserException $r15, $r20;
        java.lang.NumberFormatException $r21;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label03;

        $r11 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label02:
        return $r13;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z1 == 0 goto label05;

        $r9 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r9);

     label04:
        return $r10;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z2 == 0 goto label07;

        $r7 = new java.lang.Float;

        $r8 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke $r7.<java.lang.Float: void <init>(java.lang.String)>($r8);

     label06:
        return $r7;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z3 == 0 goto label09;

        $r5 = new java.lang.Double;

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        specialinvoke $r5.<java.lang.Double: void <init>(java.lang.String)>($r6);

     label08:
        return $r5;

     label09:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z4 == 0 goto label11;

        $r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

     label10:
        return $r4;

     label11:
        return null;

     label12:
        $r12 := @caughtexception;

        $r15 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need value attribute in <");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label13:
        $r21 := @caughtexception;

        $r20 = new org.xmlpull.v1.XmlPullParserException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a number in value attribute in <");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r26);

        throw $r20;

        catch java.lang.NullPointerException from label01 to label02 with label12;
        catch java.lang.NullPointerException from label03 to label04 with label12;
        catch java.lang.NullPointerException from label05 to label06 with label12;
        catch java.lang.NullPointerException from label07 to label08 with label12;
        catch java.lang.NullPointerException from label09 to label10 with label12;
        catch java.lang.NumberFormatException from label01 to label02 with label13;
        catch java.lang.NumberFormatException from label03 to label04 with label13;
        catch java.lang.NumberFormatException from label05 to label06 with label13;
        catch java.lang.NumberFormatException from label07 to label08 with label13;
        catch java.lang.NumberFormatException from label09 to label10 with label13;
    }

    public static final void beginDocument(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2, $r6, $r10;
        int i0, $i1;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r11 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r11;

     label3:
        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag: found ");

        $r6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label4:
        return;
    }

    public static final void nextElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        return;
    }

    public static boolean nextElementWithin(org.xmlpull.v1.XmlPullParser, int) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

     label1:
        i1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label2;

        if i1 != 3 goto label3;

        $i4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 != i0 goto label3;

     label2:
        return 0;

     label3:
        if i1 != 2 goto label4;

        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i3 = i0 + 1;

        if $i2 != $i3 goto label4;

        return 1;

     label4:
        goto label1;
    }

    public static int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        int i0, $i1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r12;
        int $i0;
        java.lang.NumberFormatException $r4;
        java.net.ProtocolException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as int");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void writeIntAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, int) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        long l0, $l1;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return $l1;

     label3:
        $r4 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r12;
        long $l0;
        java.lang.NumberFormatException $r4;
        java.net.ProtocolException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

     label2:
        return $l0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as long");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void writeLongAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, long) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        long l0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static float readFloatAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2, $r12;
        float $f0;
        java.lang.NumberFormatException $r4;
        java.net.ProtocolException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

     label2:
        return $f0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as long");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void writeFloatAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, float) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        float f0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        return $z0;
    }

    public static boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        boolean z0, $z1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 != null goto label1;

        return z0;

     label1:
        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        return $z1;
    }

    public static void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, boolean) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r2;
        boolean z0;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r2);

        return;
    }

    public static android.net.Uri readUriAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        android.net.Uri $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 == null goto label1;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public static void writeUriAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, android.net.Uri) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        android.net.Uri r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

     label1:
        return;
    }

    public static java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r2;
    }

    public static void writeStringAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, r2);

     label1:
        return;
    }

    public static byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        byte[] $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        if r2 == null goto label1;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r2, 0);

        return $r3;

     label1:
        return null;
    }

    public static void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, byte[]) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1, $r3;
        byte[] r2;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        if r2 == null goto label1;

        $r3 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r2, 0);

        interfaceinvoke r0.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r1, $r3);

     label1:
        return;
    }

    public static android.graphics.Bitmap readBitmapAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1;
        byte[] r2;
        int $i0;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, r1);

        if r2 == null goto label1;

        $i0 = lengthof r2;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r2, 0, $i0);

        return $r3;

     label1:
        return null;
    }

    public static void writeBitmapAttribute(org.xmlpull.v1.XmlSerializer, java.lang.String, android.graphics.Bitmap) throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer r0;
        java.lang.String r1;
        android.graphics.Bitmap r2;
        java.io.ByteArrayOutputStream r3, $r4;
        android.graphics.Bitmap$CompressFormat $r5;
        byte[] $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Bitmap;

        if r2 == null goto label1;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r3 = $r4;

        $r5 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, 90, r3);

        $r6 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.android.internal.util.XmlUtils: void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>(r0, r1, $r6);

     label1:
        return;
    }
}
