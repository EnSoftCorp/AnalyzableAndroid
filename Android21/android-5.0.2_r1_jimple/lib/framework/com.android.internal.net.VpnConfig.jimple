public class com.android.internal.net.VpnConfig extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String SERVICE_INTERFACE;
    public static final java.lang.String DIALOGS_PACKAGE;
    public static final java.lang.String LEGACY_VPN;
    public java.lang.String user;
    public java.lang.String interfaze;
    public java.lang.String session;
    public int mtu;
    public java.util.List addresses;
    public java.util.List routes;
    public java.util.List dnsServers;
    public java.util.List searchDomains;
    public java.util.List allowedApplications;
    public java.util.List disallowedApplications;
    public android.app.PendingIntent configureIntent;
    public long startTime;
    public boolean legacy;
    public boolean blocking;
    public boolean allowBypass;
    public boolean allowIPv4;
    public boolean allowIPv6;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        com.android.internal.net.VpnConfig r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.net.VpnConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.net.VpnConfig: int mtu> = -1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.net.VpnConfig: java.util.List addresses> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.net.VpnConfig: java.util.List routes> = $r2;

        r0.<com.android.internal.net.VpnConfig: long startTime> = -1L;

        return;
    }

    public static android.content.Intent getIntentForConfirmation()
    {
        android.content.Intent r0, $r2;
        android.content.ComponentName r1;
        android.content.res.Resources $r3;
        java.lang.String $r4, $r5, $r6;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r0 = $r2;

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039426);

        r1 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r0.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r5, $r6);

        return r0;
    }

    public static android.app.PendingIntent getIntentForStatusPanel(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.app.PendingIntent $r6;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.vpndialogs", "com.android.vpndialogs.ManageDialog");

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1350565888);

        $r5 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        $r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>(r0, 0, r1, 0, null, $r5);

        return $r6;
    }

    public static java.lang.CharSequence getVpnLabel(android.content.Context, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, $r5;
        java.util.List r4;
        android.content.pm.ApplicationInfo $r7;
        java.lang.CharSequence $r8, $r11;
        int $i0;
        java.lang.Object $r9;
        android.content.pm.ResolveInfo $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.net.VpnService");

        r3 = $r5;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 0);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (android.content.pm.ResolveInfo) $r9;

        $r11 = virtualinvoke $r10.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        return $r11;

     label1:
        $r7 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r8 = virtualinvoke $r7.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        return $r8;
    }

    public void updateAllowedFamilies(java.net.InetAddress)
    {
        com.android.internal.net.VpnConfig r0;
        java.net.InetAddress r1;
        boolean $z0;

        r0 := @this: com.android.internal.net.VpnConfig;

        r1 := @parameter0: java.net.InetAddress;

        $z0 = r1 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.net.VpnConfig: boolean allowIPv4> = 1;

        goto label2;

     label1:
        r0.<com.android.internal.net.VpnConfig: boolean allowIPv6> = 1;

     label2:
        return;
    }

    public void addLegacyRoutes(java.lang.String)
    {
        com.android.internal.net.VpnConfig r0;
        java.lang.String r1, r4, $r7, $r8, $r12, $r13;
        java.lang.String[] r2, r3, r5;
        int i0, i1, $i2;
        android.net.RouteInfo r6, $r9;
        boolean $z0;
        android.net.LinkAddress $r10;
        java.net.InetAddress $r11, $r15;
        java.util.List $r14;
        android.net.IpPrefix $r16;

        r0 := @this: com.android.internal.net.VpnConfig;

        r1 := @parameter0: java.lang.String;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r9 = new android.net.RouteInfo;

        $r10 = new android.net.LinkAddress;

        $r12 = r5[0];

        $r11 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>($r12);

        $r13 = r5[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        specialinvoke $r10.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r11, $i2);

        specialinvoke $r9.<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>($r10, null);

        r6 = $r9;

        $r14 = r0.<com.android.internal.net.VpnConfig: java.util.List routes>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r16 = virtualinvoke r6.<android.net.RouteInfo: android.net.IpPrefix getDestination()>();

        $r15 = virtualinvoke $r16.<android.net.IpPrefix: java.net.InetAddress getAddress()>();

        virtualinvoke r0.<com.android.internal.net.VpnConfig: void updateAllowedFamilies(java.net.InetAddress)>($r15);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void addLegacyAddresses(java.lang.String)
    {
        com.android.internal.net.VpnConfig r0;
        java.lang.String r1, r4, $r7, $r8, $r10, $r11;
        java.lang.String[] r2, r3, r5;
        int i0, i1, $i2;
        android.net.LinkAddress r6, $r9;
        boolean $z0;
        java.net.InetAddress $r12, $r14;
        java.util.List $r13;

        r0 := @this: com.android.internal.net.VpnConfig;

        r1 := @parameter0: java.lang.String;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r9 = new android.net.LinkAddress;

        $r10 = r5[0];

        $r12 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>($r10);

        $r11 = r5[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        specialinvoke $r9.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r12, $i2);

        r6 = $r9;

        $r13 = r0.<com.android.internal.net.VpnConfig: java.util.List addresses>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r6);

        $r14 = virtualinvoke r6.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        virtualinvoke r0.<com.android.internal.net.VpnConfig: void updateAllowedFamilies(java.net.InetAddress)>($r14);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public int describeContents()
    {
        com.android.internal.net.VpnConfig r0;

        r0 := @this: com.android.internal.net.VpnConfig;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.net.VpnConfig r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2, $r3, $r4;
        java.util.List $r5, $r6, $r7, $r8, $r9, $r10;
        android.app.PendingIntent $r11;
        long $l2;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b3, $b4, $b5, $b6, $b7;

        r0 := @this: com.android.internal.net.VpnConfig;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.net.VpnConfig: java.lang.String user>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<com.android.internal.net.VpnConfig: java.lang.String interfaze>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<com.android.internal.net.VpnConfig: java.lang.String session>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $i1 = r0.<com.android.internal.net.VpnConfig: int mtu>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r5 = r0.<com.android.internal.net.VpnConfig: java.util.List addresses>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r5);

        $r6 = r0.<com.android.internal.net.VpnConfig: java.util.List routes>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r6);

        $r7 = r0.<com.android.internal.net.VpnConfig: java.util.List dnsServers>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r7);

        $r8 = r0.<com.android.internal.net.VpnConfig: java.util.List searchDomains>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r8);

        $r9 = r0.<com.android.internal.net.VpnConfig: java.util.List allowedApplications>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r9);

        $r10 = r0.<com.android.internal.net.VpnConfig: java.util.List disallowedApplications>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r10);

        $r11 = r0.<com.android.internal.net.VpnConfig: android.app.PendingIntent configureIntent>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r11, i0);

        $l2 = r0.<com.android.internal.net.VpnConfig: long startTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $z0 = r0.<com.android.internal.net.VpnConfig: boolean legacy>;

        if $z0 == 0 goto label01;

        $b7 = 1;

        goto label02;

     label01:
        $b7 = 0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b7);

        $z2 = r0.<com.android.internal.net.VpnConfig: boolean blocking>;

        if $z2 == 0 goto label03;

        $b5 = 1;

        goto label04;

     label03:
        $b5 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b5);

        $z1 = r0.<com.android.internal.net.VpnConfig: boolean allowBypass>;

        if $z1 == 0 goto label05;

        $b6 = 1;

        goto label06;

     label05:
        $b6 = 0;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b6);

        $z4 = r0.<com.android.internal.net.VpnConfig: boolean allowIPv4>;

        if $z4 == 0 goto label07;

        $b3 = 1;

        goto label08;

     label07:
        $b3 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b3);

        $z3 = r0.<com.android.internal.net.VpnConfig: boolean allowIPv6>;

        if $z3 == 0 goto label09;

        $b4 = 1;

        goto label10;

     label09:
        $b4 = 0;

     label10:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b4);

        return;
    }

    static void <clinit>()
    {
        com.android.internal.net.VpnConfig$1 $r0;

        <com.android.internal.net.VpnConfig: java.lang.String LEGACY_VPN> = "[Legacy VPN]";

        <com.android.internal.net.VpnConfig: java.lang.String DIALOGS_PACKAGE> = "com.android.vpndialogs";

        <com.android.internal.net.VpnConfig: java.lang.String SERVICE_INTERFACE> = "android.net.VpnService";

        $r0 = new com.android.internal.net.VpnConfig$1;

        specialinvoke $r0.<com.android.internal.net.VpnConfig$1: void <init>()>();

        <com.android.internal.net.VpnConfig: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
