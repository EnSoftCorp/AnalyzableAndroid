public class android.text.StaticLayout extends android.text.Layout
{
    static final java.lang.String TAG;
    private int mLineCount;
    private int mTopPadding;
    private int mBottomPadding;
    private int mColumns;
    private int mEllipsizedWidth;
    private static final int COLUMNS_NORMAL;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int START;
    private static final int DIR;
    private static final int TAB;
    private static final int TOP;
    private static final int DESCENT;
    private static final int ELLIPSIS_START;
    private static final int ELLIPSIS_COUNT;
    private int[] mLines;
    private android.text.Layout$Directions[] mLineDirections;
    private int mMaximumVisibleLineCount;
    private static final int START_MASK;
    private static final int DIR_SHIFT;
    private static final int TAB_MASK;
    private static final int TAB_INCREMENT;
    private static final char CHAR_NEW_LINE;
    private static final char CHAR_TAB;
    private static final char CHAR_SPACE;
    private static final char CHAR_ZWSP;
    private static final double EXTRA_ROUNDING;
    private static final int CHAR_FIRST_HIGH_SURROGATE;
    private static final int CHAR_LAST_LOW_SURROGATE;
    private android.text.MeasuredText mMeasured;
    private android.graphics.Paint$FontMetricsInt mFontMetricsInt;

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, 0, $i1, r2, i0, r3, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        r4 := @parameter4: android.text.TextDirectionHeuristic;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>(r1, 0, $i1, r2, i0, r3, r4, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, i0, i1, r2, i2, r3, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        r4 := @parameter6: android.text.TextDirectionHeuristic;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        z0 := @parameter9: boolean;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r1, i0, i1, r2, i2, r3, r4, f0, f1, z0, null, 0, 2147483647);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r4;
        android.text.TextDirectionHeuristic $r5;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        r4 := @parameter9: android.text.TextUtils$TruncateAt;

        i3 := @parameter10: int;

        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r1, i0, i1, r2, i2, r3, $r5, f0, f1, z0, r4, i3, 2147483647);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, android.text.TextUtils$TruncateAt, int, int)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1, $r8, $r15;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1, $f2;
        boolean z0, $z1;
        android.text.TextUtils$TruncateAt r5;
        android.text.Layout$Ellipsizer r6, r18;
        android.text.Layout$Directions[] $r9, $r11;
        java.lang.Object[] $r10;
        android.text.MeasuredText $r12, $r14, $r16;
        int[] $r13;
        android.text.Layout$SpannedEllipsizer r17;
        android.graphics.Paint$FontMetricsInt r19;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        r4 := @parameter6: android.text.TextDirectionHeuristic;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        z0 := @parameter9: boolean;

        r5 := @parameter10: android.text.TextUtils$TruncateAt;

        i3 := @parameter11: int;

        i4 := @parameter12: int;

        if r5 != null goto label1;

        $r8 = r1;

        goto label3;

     label1:
        $z1 = r1 instanceof android.text.Spanned;

        if $z1 == 0 goto label2;

        r17 = new android.text.Layout$SpannedEllipsizer;

        $r8 = r17;

        specialinvoke r17.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r1);

        goto label3;

     label2:
        r18 = new android.text.Layout$Ellipsizer;

        $r8 = r18;

        specialinvoke r18.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r1);

     label3:
        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>($r8, r2, i2, r3, r4, f0, f1);

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        r19 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke r19.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = r19;

        if r5 == null goto label4;

        $r15 = virtualinvoke r0.<android.text.StaticLayout: java.lang.CharSequence getText()>();

        r6 = (android.text.Layout$Ellipsizer) $r15;

        r6.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        r6.<android.text.Layout$Ellipsizer: int mWidth> = i3;

        r6.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = r5;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i3;

        r0.<android.text.StaticLayout: int mColumns> = 5;

        goto label5;

     label4:
        r0.<android.text.StaticLayout: int mColumns> = 3;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i2;

     label5:
        $i6 = r0.<android.text.StaticLayout: int mColumns>;

        $i5 = 2 * $i6;

        $r10 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "android/text/Layout$Directions", $i5);

        $r9 = (android.text.Layout$Directions[]) $r10;

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r9;

        $r11 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i7 = lengthof $r11;

        $r13 = newarray (int)[$i7];

        r0.<android.text.StaticLayout: int[] mLines> = $r13;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = i4;

        $r12 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r12;

        $f2 = (float) i3;

        virtualinvoke r0.<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt)>(r1, i0, i1, r2, i2, r4, f0, f1, z0, z0, $f2, r5);

        $r14 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        $r16 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>($r14);

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r16;

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = null;

        return;
    }

    void <init>(java.lang.CharSequence)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.graphics.Paint$FontMetricsInt $r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        android.text.Layout$Directions[] $r4, $r5;
        int[] $r6;
        android.text.MeasuredText $r7;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>(r1, null, 0, null, 0.0F, 0.0F);

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        $r2 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r2.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = $r2;

        r0.<android.text.StaticLayout: int mColumns> = 5;

        $i0 = r0.<android.text.StaticLayout: int mColumns>;

        $i1 = 2 * $i0;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "android/text/Layout$Directions", $i1);

        $r4 = (android.text.Layout$Directions[]) $r3;

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r4;

        $r5 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i2 = lengthof $r5;

        $r6 = newarray (int)[$i2];

        r0.<android.text.StaticLayout: int[] mLines> = $r6;

        $r7 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r7;

        return;
    }

    void generate(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.TextDirectionHeuristic, float, float, boolean, boolean, float, android.text.TextUtils$TruncateAt)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i28, i29, i30, i32, i33, i34, $i35, $i36, $i37, $i38, $i39, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i55, $i56, $i57, $i58, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i93, i94, i95, i96, i97, i98, i99, i100, i101, i102, i103;
        android.text.TextPaint r2, r17;
        android.text.TextDirectionHeuristic r3;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z17, z18;
        android.text.TextUtils$TruncateAt r4;
        int[] r5, r9;
        java.lang.String r6;
        android.graphics.Paint$FontMetricsInt r7;
        android.text.MeasuredText r8;
        android.text.Spanned r10;
        android.text.style.LeadingMarginSpan[] r11;
        android.text.style.LineHeightSpan[] r12;
        android.text.style.LeadingMarginSpan r13, $r30, $r31;
        android.text.style.LeadingMarginSpan$LeadingMarginSpan2 r14;
        android.text.Layout$TabStops r15, $r29;
        android.text.style.MetricAffectingSpan[] r16, r35;
        char c27, $c41;
        android.graphics.Bitmap r18;
        android.text.style.TabStopSpan[] r19;
        java.util.Locale $r20;
        byte $b31, $b60, $b69, $b86;
        byte[] $r21, r34;
        java.lang.Object[] $r22, $r23, $r25, $r26, $r28;
        android.emoji.EmojiFactory $r24;
        android.text.style.LineHeightSpan $r27;
        char[] r32;
        float[] r33;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.TextDirectionHeuristic;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        f2 := @parameter10: float;

        r4 := @parameter11: android.text.TextUtils$TruncateAt;

        r5 = null;

        $r20 = virtualinvoke r2.<android.text.TextPaint: java.util.Locale getTextLocale()>();

        r6 = virtualinvoke $r20.<java.util.Locale: java.lang.String toLanguageTag()>();

        r0.<android.text.StaticLayout: int mLineCount> = 0;

        i3 = 0;

        $b31 = f0 cmpl 1.0F;

        if $b31 != 0 goto label01;

        $b86 = f1 cmpl 0.0F;

        if $b86 == 0 goto label02;

     label01:
        $z14 = 1;

        goto label03;

     label02:
        $z14 = 0;

     label03:
        z2 = $z14;

        r7 = r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt>;

        r9 = null;

        r8 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        r10 = null;

        $z5 = r1 instanceof android.text.Spanned;

        if $z5 == 0 goto label04;

        r10 = (android.text.Spanned) r1;

     label04:
        i6 = i0;

     label05:
        if i6 > i1 goto label71;

        i4 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>(r1, 10, i6, i1);

        if i4 >= 0 goto label06;

        i94 = i1;

        goto label07;

     label06:
        i94 = i4 + 1;

     label07:
        $i43 = r0.<android.text.StaticLayout: int mLineCount>;

        i5 = $i43 + 1;

        i8 = i2;

        i7 = i2;

        r12 = null;

        if r10 == null goto label16;

        $r25 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r10, i6, i94, class "android/text/style/LeadingMarginSpan");

        r11 = (android.text.style.LeadingMarginSpan[]) $r25;

        i9 = 0;

     label08:
        $i78 = lengthof r11;

        if i9 >= $i78 goto label10;

        r13 = r11[i9];

        $r31 = r11[i9];

        $i92 = interfaceinvoke $r31.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(1);

        i8 = i8 - $i92;

        $r30 = r11[i9];

        $i85 = interfaceinvoke $r30.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(0);

        i7 = i7 - $i85;

        $z13 = r13 instanceof android.text.style.LeadingMarginSpan$LeadingMarginSpan2;

        if $z13 == 0 goto label09;

        r14 = (android.text.style.LeadingMarginSpan$LeadingMarginSpan2) r13;

        $i84 = interfaceinvoke r10.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r14);

        i10 = virtualinvoke r0.<android.text.StaticLayout: int getLineForOffset(int)>($i84);

        $i88 = interfaceinvoke r14.<android.text.style.LeadingMarginSpan$LeadingMarginSpan2: int getLeadingMarginLineCount()>();

        $i87 = i10 + $i88;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i87);

     label09:
        i9 = i9 + 1;

        goto label08;

     label10:
        $r26 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r10, i6, i94, class "android/text/style/LineHeightSpan");

        r12 = (android.text.style.LineHeightSpan[]) $r26;

        $i79 = lengthof r12;

        if $i79 == 0 goto label16;

        if r9 == null goto label11;

        $i93 = lengthof r9;

        $i89 = lengthof r12;

        if $i93 >= $i89 goto label12;

     label11:
        $i80 = lengthof r12;

        r9 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i80);

     label12:
        i95 = 0;

     label13:
        $i81 = lengthof r12;

        if i95 >= $i81 goto label16;

        $r27 = r12[i95];

        i96 = interfaceinvoke r10.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r27);

        if i96 >= i6 goto label14;

        $i91 = virtualinvoke r0.<android.text.StaticLayout: int getLineForOffset(int)>(i96);

        $i90 = virtualinvoke r0.<android.text.StaticLayout: int getLineTop(int)>($i91);

        r9[i95] = $i90;

        goto label15;

     label14:
        r9[i95] = i3;

     label15:
        i95 = i95 + 1;

        goto label13;

     label16:
        virtualinvoke r8.<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r1, i6, i94, r3);

        r32 = r8.<android.text.MeasuredText: char[] mChars>;

        r33 = r8.<android.text.MeasuredText: float[] mWidths>;

        r34 = r8.<android.text.MeasuredText: byte[] mLevels>;

        i97 = r8.<android.text.MeasuredText: int mDir>;

        z15 = r8.<android.text.MeasuredText: boolean mEasy>;

        $i42 = i94 - i6;

        r5 = staticinvoke <android.text.StaticLayout: int[] nLineBreakOpportunities(java.lang.String,char[],int,int[])>(r6, r32, $i42, r5);

        i12 = 0;

        i13 = i8;

        f3 = 0.0F;

        i11 = i6;

        i16 = i6;

        f4 = f3;

        i14 = 0;

        i15 = 0;

        i18 = 0;

        i19 = 0;

        i17 = i6;

        f5 = f3;

        i22 = 0;

        i23 = 0;

        i20 = 0;

        i21 = 0;

        f6 = f3;

        z4 = 0;

        z3 = 0;

        r15 = null;

        i26 = i6;

     label17:
        if i26 >= i94 goto label65;

        if r10 != null goto label18;

        i25 = i94;

        i24 = i25 - i26;

        virtualinvoke r8.<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt)>(r2, i24, r7);

        goto label19;

     label18:
        i25 = interfaceinvoke r10.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>(i26, i94, class "android/text/style/MetricAffectingSpan");

        i98 = i25 - i26;

        $r22 = interfaceinvoke r10.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i26, i25, class "android/text/style/MetricAffectingSpan");

        r16 = (android.text.style.MetricAffectingSpan[]) $r22;

        $r23 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>(r16, r10, class "android/text/style/MetricAffectingSpan");

        r35 = (android.text.style.MetricAffectingSpan[]) $r23;

        virtualinvoke r8.<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)>(r2, r35, i98, r7);

     label19:
        i99 = r7.<android.graphics.Paint$FontMetricsInt: int top>;

        i100 = r7.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i30 = r7.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i29 = r7.<android.graphics.Paint$FontMetricsInt: int descent>;

        i28 = i26;

     label20:
        if i28 >= i25 goto label64;

        $i53 = i28 - i6;

        c27 = r32[$i53];

        if c27 != 10 goto label21;

        goto label32;

     label21:
        if c27 != 9 goto label24;

        if z3 != 0 goto label22;

        z3 = 1;

        z4 = 1;

        if r10 == null goto label22;

        $r28 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r10, i6, i94, class "android/text/style/TabStopSpan");

        r19 = (android.text.style.TabStopSpan[]) $r28;

        $i83 = lengthof r19;

        if $i83 <= 0 goto label22;

        $r29 = new android.text.Layout$TabStops;

        specialinvoke $r29.<android.text.Layout$TabStops: void <init>(int,java.lang.Object[])>(20, r19);

        r15 = $r29;

     label22:
        if r15 == null goto label23;

        f3 = virtualinvoke r15.<android.text.Layout$TabStops: float nextTab(float)>(f3);

        goto label32;

     label23:
        f3 = staticinvoke <android.text.Layout$TabStops: float nextDefaultStop(float,int)>(f3, 20);

        goto label32;

     label24:
        if c27 < 55296 goto label31;

        if c27 > 57343 goto label31;

        $i74 = i28 + 1;

        if $i74 >= i25 goto label31;

        $i73 = i28 - i6;

        i101 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>(r32, $i73);

        $i75 = <android.text.StaticLayout: int MIN_EMOJI>;

        if i101 < $i75 goto label29;

        $i77 = <android.text.StaticLayout: int MAX_EMOJI>;

        if i101 > $i77 goto label29;

        $r24 = <android.text.StaticLayout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r18 = virtualinvoke $r24.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i101);

        if r18 == null goto label27;

        if r10 != null goto label25;

        r17 = r2;

        goto label26;

     label25:
        r17 = r0.<android.text.StaticLayout: android.text.TextPaint mWorkPaint>;

     label26:
        $i72 = virtualinvoke r18.<android.graphics.Bitmap: int getWidth()>();

        $f15 = (float) $i72;

        $f14 = virtualinvoke r17.<android.graphics.Paint: float ascent()>();

        $f17 = neg $f14;

        $f16 = $f15 * $f17;

        $i82 = virtualinvoke r18.<android.graphics.Bitmap: int getHeight()>();

        $f19 = (float) $i82;

        f7 = $f16 / $f19;

        f3 = f3 + f7;

        z4 = 1;

        i28 = i28 + 1;

        goto label28;

     label27:
        $i71 = i28 - i6;

        $f13 = r33[$i71];

        f3 = f3 + $f13;

     label28:
        goto label30;

     label29:
        $i76 = i28 - i6;

        $f18 = r33[$i76];

        f3 = f3 + $f18;

     label30:
        goto label32;

     label31:
        $i52 = i28 - i6;

        $f9 = r33[$i52];

        f3 = f3 + $f9;

     label32:
        if c27 == 32 goto label33;

        if c27 == 9 goto label33;

        if c27 != 8203 goto label34;

     label33:
        $z10 = 1;

        goto label35;

     label34:
        $z10 = 0;

     label35:
        z16 = $z10;

        $f11 = (float) i13;

        $b60 = f3 cmpg $f11;

        if $b60 <= 0 goto label36;

        if z16 == 0 goto label49;

     label36:
        f5 = f3;

        if z16 != 0 goto label37;

        f6 = f3;

     label37:
        i17 = i28 + 1;

        if i99 >= i20 goto label38;

        i20 = i99;

     label38:
        if i30 >= i22 goto label39;

        i22 = i30;

     label39:
        if i29 <= i23 goto label40;

        i23 = i29;

     label40:
        if i100 <= i21 goto label41;

        i21 = i100;

     label41:
        $i58 = r5[i12];

        if $i58 == -1 goto label42;

        $i64 = r5[i12];

        $i66 = i28 - i6;

        $i65 = $i66 + 1;

        if $i64 >= $i65 goto label42;

        i12 = i12 + 1;

        goto label41;

     label42:
        $i59 = lengthof r5;

        if i12 >= $i59 goto label43;

        $i55 = r5[i12];

        $i56 = i28 - i6;

        $i57 = $i56 + 1;

        if $i55 != $i57 goto label43;

        $z8 = 1;

        goto label44;

     label43:
        $z8 = 0;

     label44:
        z17 = $z8;

        if z17 == 0 goto label48;

        f4 = f6;

        i16 = i28 + 1;

        if i20 >= i18 goto label45;

        i18 = i20;

     label45:
        if i22 >= i14 goto label46;

        i14 = i22;

     label46:
        if i23 <= i15 goto label47;

        i15 = i23;

     label47:
        if i21 <= i19 goto label48;

        i19 = i21;

     label48:
        goto label63;

     label49:
        if i16 == i11 goto label52;

        i102 = i16;

        i103 = i14;

        i32 = i15;

        i33 = i18;

        i34 = i19;

        f8 = f4;

        $i67 = i28 + 1;

        if $i67 >= i25 goto label50;

        $z11 = 1;

        goto label51;

     label50:
        $z11 = 0;

     label51:
        z18 = $z11;

        goto label60;

     label52:
        if i17 == i11 goto label55;

        i102 = i17;

        i103 = i22;

        i32 = i23;

        i33 = i20;

        i34 = i21;

        f8 = f5;

        $i68 = i28 + 1;

        if $i68 >= i25 goto label53;

        $z12 = 1;

        goto label54;

     label53:
        $z12 = 0;

     label54:
        z18 = $z12;

        goto label60;

     label55:
        i102 = i11 + 1;

     label56:
        if i102 >= i25 goto label57;

        $i70 = i102 - i6;

        $f12 = r33[$i70];

        $b69 = $f12 cmpl 0.0F;

        if $b69 != 0 goto label57;

        i102 = i102 + 1;

        goto label56;

     label57:
        i103 = i30;

        i32 = i29;

        i33 = i99;

        i34 = i100;

        $i63 = i11 - i6;

        f8 = r33[$i63];

        if i102 >= i25 goto label58;

        $z9 = 1;

        goto label59;

     label58:
        $z9 = 0;

     label59:
        z18 = $z9;

     label60:
        i3 = specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i11, i102, i103, i32, i33, i34, i3, f0, f1, r12, r9, r7, z4, z2, r34, i97, z15, i1, z0, z1, r32, r33, i6, r4, f2, f8, r2, z18);

        i11 = i102;

        i28 = i11 - 1;

        i17 = i11;

        i16 = i11;

        f3 = 0.0F;

        f6 = f3;

        i21 = 0;

        i20 = 0;

        i23 = 0;

        i22 = 0;

        i19 = 0;

        i18 = 0;

        i15 = 0;

        i14 = 0;

        i5 = i5 + -1;

        if i5 > 0 goto label61;

        i13 = i7;

     label61:
        if i11 >= i26 goto label62;

        virtualinvoke r8.<android.text.MeasuredText: void setPos(int)>(i11);

        i25 = i11;

        goto label64;

     label62:
        $i61 = r0.<android.text.StaticLayout: int mLineCount>;

        $i62 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i61 < $i62 goto label63;

        return;

     label63:
        i28 = i28 + 1;

        goto label20;

     label64:
        i26 = i25;

        goto label17;

     label65:
        if i94 == i11 goto label69;

        $i51 = r0.<android.text.StaticLayout: int mLineCount>;

        $i49 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i51 >= $i49 goto label69;

        $i50 = i20 | i21;

        $i48 = $i50 | i23;

        $i47 = $i48 | i22;

        if $i47 != 0 goto label66;

        virtualinvoke r2.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r7);

        i20 = r7.<android.graphics.Paint$FontMetricsInt: int top>;

        i21 = r7.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i22 = r7.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i23 = r7.<android.graphics.Paint$FontMetricsInt: int descent>;

     label66:
        if i94 == i1 goto label67;

        $z7 = 1;

        goto label68;

     label67:
        $z7 = 0;

     label68:
        i3 = specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i11, i94, i22, i23, i20, i21, i3, f0, f1, r12, r9, r7, z4, z2, r34, i97, z15, i1, z0, z1, r32, r33, i6, r4, f2, f3, r2, $z7);

     label69:
        if i94 != i1 goto label70;

        goto label71;

     label70:
        i6 = i94;

        goto label05;

     label71:
        if i1 == i0 goto label72;

        $i46 = i1 - 1;

        $c41 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i46);

        if $c41 != 10 goto label73;

     label72:
        $i39 = r0.<android.text.StaticLayout: int mLineCount>;

        $i38 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i39 >= $i38 goto label73;

        virtualinvoke r8.<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r1, i0, i1, r3);

        virtualinvoke r2.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r7);

        $i44 = r7.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i45 = r7.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i37 = r7.<android.graphics.Paint$FontMetricsInt: int top>;

        $i36 = r7.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $r21 = r8.<android.text.MeasuredText: byte[] mLevels>;

        $i35 = r8.<android.text.MeasuredText: int mDir>;

        $z6 = r8.<android.text.MeasuredText: boolean mEasy>;

        specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i1, i1, $i44, $i45, $i37, $i36, i3, f0, f1, null, null, r7, 0, z2, $r21, $i35, $z6, i1, z0, z1, null, null, i0, r4, f2, 0.0F, r2, 0);

     label73:
        return;
    }

    private int out(java.lang.CharSequence, int, int, int, int, int, int, int, float, float, android.text.style.LineHeightSpan[], int[], android.graphics.Paint$FontMetricsInt, boolean, boolean, byte[], int, boolean, int, boolean, boolean, char[], float[], int, android.text.TextUtils$TruncateAt, float, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i60, i61;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.text.style.LineHeightSpan[] r2;
        int[] r3, r11, r12;
        android.graphics.Paint$FontMetricsInt r4;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16;
        byte[] r5;
        float[] r6;
        char[] r7;
        android.text.TextUtils$TruncateAt r8, $r13, $r17;
        android.text.TextPaint r9;
        android.text.Layout$Directions[] r10, $r14, $r16, $r21, $r22;
        double d0, $d1, $d2, $d3;
        android.text.Layout$Directions $r15, r25;
        byte $b46;
        android.text.style.LineHeightSpan $r18, $r19, $r20;
        java.lang.Object[] $r23;
        android.text.style.LineHeightSpan$WithDensity $r24;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        r2 := @parameter10: android.text.style.LineHeightSpan[];

        r3 := @parameter11: int[];

        r4 := @parameter12: android.graphics.Paint$FontMetricsInt;

        z0 := @parameter13: boolean;

        z1 := @parameter14: boolean;

        r5 := @parameter15: byte[];

        i7 := @parameter16: int;

        z2 := @parameter17: boolean;

        i8 := @parameter18: int;

        z4 := @parameter19: boolean;

        z3 := @parameter20: boolean;

        r7 := @parameter21: char[];

        r6 := @parameter22: float[];

        i9 := @parameter23: int;

        r8 := @parameter24: android.text.TextUtils$TruncateAt;

        f3 := @parameter25: float;

        f2 := @parameter26: float;

        r9 := @parameter27: android.text.TextPaint;

        z5 := @parameter28: boolean;

        i11 = r0.<android.text.StaticLayout: int mLineCount>;

        $i16 = r0.<android.text.StaticLayout: int mColumns>;

        i10 = i11 * $i16;

        $i14 = r0.<android.text.StaticLayout: int mColumns>;

        $i15 = i10 + $i14;

        i12 = $i15 + 1;

        r12 = r0.<android.text.StaticLayout: int[] mLines>;

        $i19 = lengthof r12;

        if i12 < $i19 goto label01;

        $i58 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>(i12);

        $r23 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "android/text/Layout$Directions", $i58);

        r10 = (android.text.Layout$Directions[]) $r23;

        $r21 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r22 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i57 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r10, 0, $i57);

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = r10;

        $i56 = lengthof r10;

        r11 = newarray (int)[$i56];

        $i59 = lengthof r12;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r12, 0, r11, 0, $i59);

        r0.<android.text.StaticLayout: int[] mLines> = r11;

        r12 = r11;

     label01:
        if r2 == null goto label06;

        r4.<android.graphics.Paint$FontMetricsInt: int ascent> = i2;

        r4.<android.graphics.Paint$FontMetricsInt: int descent> = i3;

        r4.<android.graphics.Paint$FontMetricsInt: int top> = i4;

        r4.<android.graphics.Paint$FontMetricsInt: int bottom> = i5;

        i60 = 0;

     label02:
        $i55 = lengthof r2;

        if i60 >= $i55 goto label05;

        $r20 = r2[i60];

        $z13 = $r20 instanceof android.text.style.LineHeightSpan$WithDensity;

        if $z13 == 0 goto label03;

        $r18 = r2[i60];

        $r24 = (android.text.style.LineHeightSpan$WithDensity) $r18;

        $i53 = r3[i60];

        interfaceinvoke $r24.<android.text.style.LineHeightSpan$WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r1, i0, i1, $i53, i6, r4, r9);

        goto label04;

     label03:
        $r19 = r2[i60];

        $i54 = r3[i60];

        interfaceinvoke $r19.<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)>(r1, i0, i1, $i54, i6, r4);

     label04:
        i60 = i60 + 1;

        goto label02;

     label05:
        i2 = r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i3 = r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        i4 = r4.<android.graphics.Paint$FontMetricsInt: int top>;

        i5 = r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

     label06:
        if i11 != 0 goto label07;

        $z14 = 1;

        goto label08;

     label07:
        $z14 = 0;

     label08:
        z15 = $z14;

        $i17 = i11 + 1;

        $i20 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i17 != $i20 goto label09;

        $z11 = 1;

        goto label10;

     label09:
        $z11 = 0;

     label10:
        z16 = $z11;

        if z16 != 0 goto label11;

        if i1 != i8 goto label12;

     label11:
        $z12 = 1;

        goto label13;

     label12:
        $z12 = 0;

     label13:
        z7 = $z12;

        if z15 == 0 goto label15;

        if z3 == 0 goto label14;

        $i50 = i4 - i2;

        r0.<android.text.StaticLayout: int mTopPadding> = $i50;

     label14:
        if z4 == 0 goto label15;

        i2 = i4;

     label15:
        if z7 == 0 goto label17;

        if z3 == 0 goto label16;

        $i51 = i5 - i3;

        r0.<android.text.StaticLayout: int mBottomPadding> = $i51;

     label16:
        if z4 == 0 goto label17;

        i3 = i5;

     label17:
        if z1 == 0 goto label20;

        if z7 != 0 goto label20;

        $i49 = i3 - i2;

        $f5 = (float) $i49;

        $f7 = f0 - 1.0F;

        $f4 = $f5 * $f7;

        $f6 = $f4 + f1;

        d0 = (double) $f6;

        $b46 = d0 cmpl 0.0;

        if $b46 < 0 goto label18;

        $d3 = d0 + 0.5;

        i13 = (int) $d3;

        goto label19;

     label18:
        $d2 = neg d0;

        $d1 = $d2 + 0.5;

        $i52 = (int) $d1;

        i13 = neg $i52;

     label19:
        goto label21;

     label20:
        i13 = 0;

     label21:
        $i18 = i10 + 0;

        r12[$i18] = i0;

        $i24 = i10 + 1;

        r12[$i24] = i6;

        $i22 = i10 + 2;

        $i23 = i3 + i13;

        r12[$i22] = $i23;

        $i21 = i3 - i2;

        $i28 = $i21 + i13;

        i61 = i6 + $i28;

        $i27 = r0.<android.text.StaticLayout: int mColumns>;

        $i26 = i10 + $i27;

        $i25 = $i26 + 0;

        r12[$i25] = i1;

        $i32 = r0.<android.text.StaticLayout: int mColumns>;

        $i31 = i10 + $i32;

        $i30 = $i31 + 1;

        r12[$i30] = i61;

        if z0 == 0 goto label22;

        $i43 = i10 + 0;

        $i48 = r12[$i43];

        $i47 = $i48 | 536870912;

        r12[$i43] = $i47;

     label22:
        $i29 = i10 + 0;

        $i35 = r12[$i29];

        $i36 = i7 << 30;

        $i34 = $i35 | $i36;

        r12[$i29] = $i34;

        r25 = <android.text.StaticLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if z2 == 0 goto label23;

        $r16 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r16[i11] = r25;

        goto label24;

     label23:
        $r14 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i41 = i0 - i9;

        $i40 = i0 - i9;

        $i33 = i1 - i0;

        $r15 = staticinvoke <android.text.AndroidBidi: android.text.Layout$Directions directions(int,byte[],int,char[],int,int)>(i7, r5, $i41, r7, $i40, $i33);

        $r14[i11] = $r15;

     label24:
        if r8 == null goto label34;

        if z5 == 0 goto label25;

        $i44 = r0.<android.text.StaticLayout: int mLineCount>;

        $i42 = $i44 + 1;

        $i45 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i42 != $i45 goto label25;

        $z9 = 1;

        goto label26;

     label25:
        $z9 = 0;

     label26:
        z6 = $z9;

        $i39 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i39 != 1 goto label27;

        if z5 != 0 goto label28;

     label27:
        if z15 == 0 goto label29;

        if z5 != 0 goto label29;

     label28:
        $r17 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r8 != $r17 goto label31;

     label29:
        if z15 != 0 goto label32;

        if z16 != 0 goto label30;

        if z5 != 0 goto label32;

     label30:
        $r13 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r8 != $r13 goto label32;

     label31:
        $z10 = 1;

        goto label33;

     label32:
        $z10 = 0;

     label33:
        z8 = $z10;

        if z8 == 0 goto label34;

        specialinvoke r0.<android.text.StaticLayout: void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean)>(i0, i1, r6, i9, f3, r8, i11, f2, r9, z6);

     label34:
        $i37 = r0.<android.text.StaticLayout: int mLineCount>;

        $i38 = $i37 + 1;

        r0.<android.text.StaticLayout: int mLineCount> = $i38;

        return i61;
    }

    private void calculateEllipsis(int, int, float[], int, float, android.text.TextUtils$TruncateAt, int, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i22, $i23, $i24, $i25, $i26, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, i40, i41, i42;
        float[] r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17, f18, f19, f20;
        android.text.TextUtils$TruncateAt r2, $r4, $r6, $r7, $r10, $r11;
        android.text.TextPaint r3;
        boolean z0, $z1, $z2;
        byte $b9, $b19, $b21, $b29, $b36;
        char[] $r5;
        int[] $r8, $r9, $r12, $r13;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        r2 := @parameter5: android.text.TextUtils$TruncateAt;

        i3 := @parameter6: int;

        f1 := @parameter7: float;

        r3 := @parameter8: android.text.TextPaint;

        z0 := @parameter9: boolean;

        $b9 = f1 cmpg f0;

        if $b9 > 0 goto label01;

        if z0 != 0 goto label01;

        $r12 = r0.<android.text.StaticLayout: int[] mLines>;

        $i37 = r0.<android.text.StaticLayout: int mColumns>;

        $i38 = $i37 * i3;

        $i33 = $i38 + 3;

        $r12[$i33] = 0;

        $r13 = r0.<android.text.StaticLayout: int[] mLines>;

        $i34 = r0.<android.text.StaticLayout: int mColumns>;

        $i35 = $i34 * i3;

        $i39 = $i35 + 4;

        $r13[$i39] = 0;

        return;

     label01:
        $r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        if r2 != $r4 goto label02;

        $r5 = <android.text.StaticLayout: char[] ELLIPSIS_TWO_DOTS>;

        goto label03;

     label02:
        $r5 = <android.text.StaticLayout: char[] ELLIPSIS_NORMAL>;

     label03:
        f2 = virtualinvoke r3.<android.text.TextPaint: float measureText(char[],int,int)>($r5, 0, 1);

        i4 = 0;

        i5 = 0;

        i6 = i1 - i0;

        $r7 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        if r2 != $r7 goto label08;

        $i28 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i28 != 1 goto label07;

        f3 = 0.0F;

        i7 = i6;

     label04:
        if i7 < 0 goto label06;

        $i32 = i7 - 1;

        $i31 = $i32 + i0;

        $i30 = $i31 - i2;

        f4 = r1[$i30];

        $f14 = f4 + f3;

        $f15 = $f14 + f2;

        $b36 = $f15 cmpl f0;

        if $b36 <= 0 goto label05;

        goto label06;

     label05:
        f3 = f3 + f4;

        i7 = i7 + -1;

        goto label04;

     label06:
        i4 = 0;

        i5 = i7;

        goto label22;

     label07:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        if $z2 == 0 goto label22;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Start Ellipsis only supported with one line");

        goto label22;

     label08:
        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r2 == $r6 goto label09;

        $r11 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r2 == $r11 goto label09;

        $r10 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        if r2 != $r10 goto label14;

     label09:
        f16 = 0.0F;

        i40 = 0;

     label10:
        if i40 >= i6 goto label12;

        $i16 = i40 + i0;

        $i17 = $i16 - i2;

        f17 = r1[$i17];

        $f8 = f17 + f16;

        $f9 = $f8 + f2;

        $b19 = $f9 cmpl f0;

        if $b19 <= 0 goto label11;

        goto label12;

     label11:
        f16 = f16 + f17;

        i40 = i40 + 1;

        goto label10;

     label12:
        i4 = i40;

        i5 = i6 - i40;

        if z0 == 0 goto label13;

        if i5 != 0 goto label13;

        if i6 <= 0 goto label13;

        i4 = i6 - 1;

        i5 = 1;

     label13:
        goto label22;

     label14:
        $i18 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i18 != 1 goto label21;

        f18 = 0.0F;

        f19 = 0.0F;

        $f10 = f0 - f2;

        f5 = $f10 / 2.0F;

        i41 = i6;

     label15:
        if i41 < 0 goto label17;

        $i26 = i41 - 1;

        $i25 = $i26 + i0;

        $i24 = $i25 - i2;

        f7 = r1[$i24];

        $f13 = f7 + f19;

        $b29 = $f13 cmpl f5;

        if $b29 <= 0 goto label16;

        goto label17;

     label16:
        f19 = f19 + f7;

        i41 = i41 + -1;

        goto label15;

     label17:
        $f11 = f0 - f2;

        f20 = $f11 - f19;

        i42 = 0;

     label18:
        if i42 >= i41 goto label20;

        $i23 = i42 + i0;

        $i22 = $i23 - i2;

        f6 = r1[$i22];

        $f12 = f6 + f18;

        $b21 = $f12 cmpl f20;

        if $b21 <= 0 goto label19;

        goto label20;

     label19:
        f18 = f18 + f6;

        i42 = i42 + 1;

        goto label18;

     label20:
        i4 = i42;

        i5 = i41 - i42;

        goto label22;

     label21:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        if $z1 == 0 goto label22;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Middle Ellipsis only supported with one line");

     label22:
        $r8 = r0.<android.text.StaticLayout: int[] mLines>;

        $i11 = r0.<android.text.StaticLayout: int mColumns>;

        $i10 = $i11 * i3;

        $i12 = $i10 + 3;

        $r8[$i12] = i4;

        $r9 = r0.<android.text.StaticLayout: int[] mLines>;

        $i14 = r0.<android.text.StaticLayout: int mColumns>;

        $i15 = $i14 * i3;

        $i13 = $i15 + 4;

        $r9[$i13] = i5;

        return;
    }

    public int getLineForVertical(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 = r0.<android.text.StaticLayout: int mLineCount>;

        i2 = -1;

        r1 = r0.<android.text.StaticLayout: int[] mLines>;

     label1:
        $i4 = i1 - i2;

        if $i4 <= 1 goto label3;

        $i5 = i1 + i2;

        i3 = $i5 >> 1;

        $i6 = r0.<android.text.StaticLayout: int mColumns>;

        $i7 = $i6 * i3;

        $i8 = $i7 + 1;

        $i9 = r1[$i8];

        if $i9 <= i0 goto label2;

        i1 = i3;

        goto label1;

     label2:
        i2 = i3;

        goto label1;

     label3:
        if i2 >= 0 goto label4;

        return 0;

     label4:
        return i2;
    }

    public int getLineCount()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mLineCount>;

        return $i0;
    }

    public int getLineTop(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = $i2 * i0;

        $i4 = $i3 + 1;

        i1 = $r1[$i4];

        $i5 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i5 <= 0 goto label1;

        $i6 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if i0 < $i6 goto label1;

        $i7 = r0.<android.text.StaticLayout: int mLineCount>;

        if i0 == $i7 goto label1;

        $i8 = virtualinvoke r0.<android.text.StaticLayout: int getBottomPadding()>();

        i1 = i1 + $i8;

     label1:
        return i1;
    }

    public int getLineDescent(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = $i2 * i0;

        $i4 = $i3 + 2;

        i1 = $r1[$i4];

        $i5 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i5 <= 0 goto label1;

        $i6 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        $i7 = $i6 - 1;

        if i0 < $i7 goto label1;

        $i8 = r0.<android.text.StaticLayout: int mLineCount>;

        if i0 == $i8 goto label1;

        $i9 = virtualinvoke r0.<android.text.StaticLayout: int getBottomPadding()>();

        i1 = i1 + $i9;

     label1:
        return i1;
    }

    public int getLineStart(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 0;

        $i4 = $r1[$i3];

        $i5 = $i4 & 536870911;

        return $i5;
    }

    public int getParagraphDirection(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 0;

        $i4 = $r1[$i3];

        $i5 = $i4 >> 30;

        return $i5;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;
        boolean $z0;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = $i1 * i0;

        $i3 = $i2 + 0;

        $i4 = $r1[$i3];

        $i5 = $i4 & 536870912;

        if $i5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.StaticLayout r0;
        int i0;
        android.text.Layout$Directions[] $r1;
        android.text.Layout$Directions $r2;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getTopPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mTopPadding>;

        return $i0;
    }

    public int getBottomPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        if $i1 >= 5 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = $i2 * i0;

        $i4 = $i3 + 4;

        $i5 = $r1[$i4];

        return $i5;
    }

    public int getEllipsisStart(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        if $i1 >= 5 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = $i2 * i0;

        $i4 = $i3 + 3;

        $i5 = $r1[$i4];

        return $i5;
    }

    public int getEllipsizedWidth()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mEllipsizedWidth>;

        return $i0;
    }

    void prepare()
    {
        android.text.StaticLayout r0;
        android.text.MeasuredText $r1;

        r0 := @this: android.text.StaticLayout;

        $r1 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r1;

        return;
    }

    void finish()
    {
        android.text.StaticLayout r0;
        android.text.MeasuredText $r1, $r2;

        r0 := @this: android.text.StaticLayout;

        $r1 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        $r2 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>($r1);

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r2;

        return;
    }

    private static native int[] nLineBreakOpportunities(java.lang.String, char[], int, int[]);

    public static void <clinit>()
    {
        <android.text.StaticLayout: int CHAR_LAST_LOW_SURROGATE> = 57343;

        <android.text.StaticLayout: int CHAR_FIRST_HIGH_SURROGATE> = 55296;

        <android.text.StaticLayout: double EXTRA_ROUNDING> = 0.5;

        <android.text.StaticLayout: char CHAR_ZWSP> = 8203;

        <android.text.StaticLayout: char CHAR_SPACE> = 32;

        <android.text.StaticLayout: char CHAR_TAB> = 9;

        <android.text.StaticLayout: char CHAR_NEW_LINE> = 10;

        <android.text.StaticLayout: int TAB_INCREMENT> = 20;

        <android.text.StaticLayout: int TAB_MASK> = 536870912;

        <android.text.StaticLayout: int DIR_SHIFT> = 30;

        <android.text.StaticLayout: int START_MASK> = 536870911;

        <android.text.StaticLayout: int ELLIPSIS_COUNT> = 4;

        <android.text.StaticLayout: int ELLIPSIS_START> = 3;

        <android.text.StaticLayout: int DESCENT> = 2;

        <android.text.StaticLayout: int TOP> = 1;

        <android.text.StaticLayout: int TAB> = 0;

        <android.text.StaticLayout: int DIR> = 0;

        <android.text.StaticLayout: int START> = 0;

        <android.text.StaticLayout: int COLUMNS_ELLIPSIZE> = 5;

        <android.text.StaticLayout: int COLUMNS_NORMAL> = 3;

        <android.text.StaticLayout: java.lang.String TAG> = "StaticLayout";

        return;
    }
}
