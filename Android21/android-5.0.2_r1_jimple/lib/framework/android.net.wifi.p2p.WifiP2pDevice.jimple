public class android.net.wifi.p2p.WifiP2pDevice extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    public java.lang.String deviceName;
    public java.lang.String deviceAddress;
    public java.lang.String primaryDeviceType;
    public java.lang.String secondaryDeviceType;
    private static final int WPS_CONFIG_DISPLAY;
    private static final int WPS_CONFIG_PUSHBUTTON;
    private static final int WPS_CONFIG_KEYPAD;
    private static final int DEVICE_CAPAB_SERVICE_DISCOVERY;
    private static final int DEVICE_CAPAB_CLIENT_DISCOVERABILITY;
    private static final int DEVICE_CAPAB_CONCURRENT_OPER;
    private static final int DEVICE_CAPAB_INFRA_MANAGED;
    private static final int DEVICE_CAPAB_DEVICE_LIMIT;
    private static final int DEVICE_CAPAB_INVITATION_PROCEDURE;
    private static final int GROUP_CAPAB_GROUP_OWNER;
    private static final int GROUP_CAPAB_PERSISTENT_GROUP;
    private static final int GROUP_CAPAB_GROUP_LIMIT;
    private static final int GROUP_CAPAB_INTRA_BSS_DIST;
    private static final int GROUP_CAPAB_CROSS_CONN;
    private static final int GROUP_CAPAB_PERSISTENT_RECONN;
    private static final int GROUP_CAPAB_GROUP_FORMATION;
    public int wpsConfigMethodsSupported;
    public int deviceCapability;
    public int groupCapability;
    public static final int CONNECTED;
    public static final int INVITED;
    public static final int FAILED;
    public static final int AVAILABLE;
    public static final int UNAVAILABLE;
    public int status;
    public android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo;
    private static final java.util.regex.Pattern detailedDevicePattern;
    private static final java.util.regex.Pattern twoTokenPattern;
    private static final java.util.regex.Pattern threeTokenPattern;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = 4;

        return;
    }

    public void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.String r1, r4, $r6, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23;
        java.lang.String[] r2;
        java.util.regex.Matcher r3, r26, r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.regex.Pattern $r5, $r8, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r7, $r9, $r24, $r25;
        android.net.wifi.p2p.WifiP2pWfdInfo $r20;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = 4;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ \n]");

        $i0 = lengthof r2;

        if $i0 >= 1 goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r24;

     label01:
        $i1 = lengthof r2;

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label05;
            default: goto label07;
        };

     label02:
        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = r1;

        return;

     label03:
        $r8 = <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern twoTokenPattern>;

        r3 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z1 != 0 goto label04;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r9;

     label04:
        $r10 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = $r10;

        return;

     label05:
        $r5 = <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern threeTokenPattern>;

        r26 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r26.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label06;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r7;

     label06:
        $r6 = virtualinvoke r26.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = $r6;

        return;

     label07:
        $r11 = <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern detailedDevicePattern>;

        r27 = virtualinvoke $r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z2 = virtualinvoke r27.<java.util.regex.Matcher: boolean find()>();

        if $z2 != 0 goto label08;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r25;

     label08:
        $r12 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = $r12;

        $r14 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType> = $r14;

        $r13 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = $r13;

        $r15 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        $i2 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r15);

        r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported> = $i2;

        $r16 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        $i3 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r16);

        r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability> = $i3;

        $r17 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(8);

        $i4 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r17);

        r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability> = $i4;

        $r19 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        if $r19 == null goto label09;

        r4 = virtualinvoke r27.<java.util.regex.Matcher: java.lang.String group(int)>(10);

        $r20 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        $r21 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i6 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r21);

        $r23 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(4, 8);

        $i5 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r23);

        $r22 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(8, 12);

        $i7 = specialinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)>($r22);

        specialinvoke $r20.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(int,int,int)>($i6, $i5, $i7);

        r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo> = $r20;

     label09:
        $r18 = r2[0];

        $z3 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-DEVICE-FOUND");

        if $z3 == 0 goto label10;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = 3;

     label10:
        return;
    }

    public boolean wpsPbcSupported()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        $i1 = $i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean wpsKeypadSupported()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean wpsDisplaySupported()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isServiceDiscoveryCapable()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInvitationCapable()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDeviceLimit()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isGroupOwner()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isGroupLimit()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void update(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0, r1;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        virtualinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)>(r1);

        $i0 = r1.<android.net.wifi.p2p.WifiP2pDevice: int status>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = $i0;

        return;
    }

    public void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        int $i0, $i1, $i2;
        android.net.wifi.p2p.WifiP2pWfdInfo $r8;
        java.lang.IllegalArgumentException $r9, $r10, $r11;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("device is null");

        throw $r11;

     label1:
        $r2 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        if $r2 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("deviceAddress is null");

        throw $r10;

     label2:
        $r4 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r3 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("deviceAddress does not match");

        throw $r9;

     label3:
        $r5 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = $r5;

        $r6 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType> = $r6;

        $r7 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType> = $r7;

        $i0 = r1.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported> = $i0;

        $i1 = r1.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability> = $i1;

        $i2 = r1.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability> = $i2;

        $r8 = r1.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo> = $r8;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.p2p.WifiP2pDevice r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.net.wifi.p2p.WifiP2pDevice;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.net.wifi.p2p.WifiP2pDevice) r1;

        if r2 == null goto label3;

        $r4 = r2.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        if $r4 != null goto label6;

     label3:
        $r3 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        if $r3 != null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;

     label6:
        $r6 = r2.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r5 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z2;
    }

    public java.lang.String toString()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.StringBuffer r1, $r2, $r3, $r6, $r9, $r12, $r15, $r17, $r18, $r21, $r22;
        java.lang.String $r4, $r7, $r10, $r13, $r26;
        int $i0, $i1, $i2, $i3;
        android.net.wifi.p2p.WifiP2pWfdInfo $r25;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Device: ");

        $r4 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n deviceAddress: ");

        $r7 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n primary type: ");

        $r10 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n secondary type: ");

        $r13 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n wps: ");

        $i0 = r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r17 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n grpcapab: ");

        $i1 = r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r18 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n devcapab: ");

        $i2 = r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r21 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n status: ");

        $i3 = r0.<android.net.wifi.p2p.WifiP2pDevice: int status>;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r22 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n wfdInfo: ");

        $r25 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r25);

        $r26 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r26;
    }

    public int describeContents()
    {
        android.net.wifi.p2p.WifiP2pDevice r0;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        return 0;
    }

    public void <init>(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0, r1;
        java.lang.String $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        android.net.wifi.p2p.WifiP2pWfdInfo $r6, $r7;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = "";

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = 4;

        if r1 == null goto label1;

        $r2 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName> = $r2;

        $r3 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = $r3;

        $r4 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType> = $r4;

        $r5 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType> = $r5;

        $i0 = r1.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported> = $i0;

        $i1 = r1.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability> = $i1;

        $i2 = r1.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability> = $i2;

        $i3 = r1.<android.net.wifi.p2p.WifiP2pDevice: int status>;

        r0.<android.net.wifi.p2p.WifiP2pDevice: int status> = $i3;

        $r6 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        $r7 = r1.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        specialinvoke $r6.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(android.net.wifi.p2p.WifiP2pWfdInfo)>($r7);

        r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo> = $r6;

     label1:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r3, $r4, $r5;
        android.net.wifi.p2p.WifiP2pWfdInfo $r6, $r7;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String primaryDeviceType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String secondaryDeviceType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $i1 = r0.<android.net.wifi.p2p.WifiP2pDevice: int wpsConfigMethodsSupported>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.wifi.p2p.WifiP2pDevice: int deviceCapability>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.wifi.p2p.WifiP2pDevice: int groupCapability>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.net.wifi.p2p.WifiP2pDevice: int status>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r6 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        if $r6 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r7 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        virtualinvoke $r7.<android.net.wifi.p2p.WifiP2pWfdInfo: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    private int parseHex(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.String r1, $r7;
        int i0;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.net.wifi.p2p.WifiP2pDevice;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0X");

        if $z1 == 0 goto label2;

     label1:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r1, 16);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse hex string ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiP2pDevice", $r7);

     label5:
        return i0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;
        android.net.wifi.p2p.WifiP2pDevice$1 $r3;

        <android.net.wifi.p2p.WifiP2pDevice: int UNAVAILABLE> = 4;

        <android.net.wifi.p2p.WifiP2pDevice: int AVAILABLE> = 3;

        <android.net.wifi.p2p.WifiP2pDevice: int FAILED> = 2;

        <android.net.wifi.p2p.WifiP2pDevice: int INVITED> = 1;

        <android.net.wifi.p2p.WifiP2pDevice: int CONNECTED> = 0;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_GROUP_FORMATION> = 64;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_PERSISTENT_RECONN> = 32;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_CROSS_CONN> = 16;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_INTRA_BSS_DIST> = 8;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_GROUP_LIMIT> = 4;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_PERSISTENT_GROUP> = 2;

        <android.net.wifi.p2p.WifiP2pDevice: int GROUP_CAPAB_GROUP_OWNER> = 1;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_INVITATION_PROCEDURE> = 32;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_DEVICE_LIMIT> = 16;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_INFRA_MANAGED> = 8;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_CONCURRENT_OPER> = 4;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_CLIENT_DISCOVERABILITY> = 2;

        <android.net.wifi.p2p.WifiP2pDevice: int DEVICE_CAPAB_SERVICE_DISCOVERY> = 1;

        <android.net.wifi.p2p.WifiP2pDevice: int WPS_CONFIG_KEYPAD> = 256;

        <android.net.wifi.p2p.WifiP2pDevice: int WPS_CONFIG_PUSHBUTTON> = 128;

        <android.net.wifi.p2p.WifiP2pDevice: int WPS_CONFIG_DISPLAY> = 8;

        <android.net.wifi.p2p.WifiP2pDevice: java.lang.String TAG> = "WifiP2pDevice";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((?:[0-9a-f]{2}:){5}[0-9a-f]{2}) (\\d+ )?p2p_dev_addr=((?:[0-9a-f]{2}:){5}[0-9a-f]{2}) pri_dev_type=(\\d+-[0-9a-fA-F]+-\\d+) name=\'(.*)\' config_methods=(0x[0-9a-fA-F]+) dev_capab=(0x[0-9a-fA-F]+) group_capab=(0x[0-9a-fA-F]+)( wfd_dev_info=0x([0-9a-fA-F]{12}))?");

        <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern detailedDevicePattern> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(p2p_dev_addr=)?((?:[0-9a-f]{2}:){5}[0-9a-f]{2})");

        <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern twoTokenPattern> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:[0-9a-f]{2}:){5}[0-9a-f]{2} p2p_dev_addr=((?:[0-9a-f]{2}:){5}[0-9a-f]{2})");

        <android.net.wifi.p2p.WifiP2pDevice: java.util.regex.Pattern threeTokenPattern> = $r2;

        $r3 = new android.net.wifi.p2p.WifiP2pDevice$1;

        specialinvoke $r3.<android.net.wifi.p2p.WifiP2pDevice$1: void <init>()>();

        <android.net.wifi.p2p.WifiP2pDevice: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }
}
