public final class android.bluetooth.BluetoothHeadsetClient extends java.lang.Object implements android.bluetooth.BluetoothProfile
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean VDBG;
    public static final java.lang.String ACTION_CONNECTION_STATE_CHANGED;
    public static final java.lang.String ACTION_AUDIO_STATE_CHANGED;
    public static final java.lang.String ACTION_AG_EVENT;
    public static final java.lang.String ACTION_CALL_CHANGED;
    public static final java.lang.String ACTION_RESULT;
    public static final java.lang.String ACTION_LAST_VTAG;
    public static final int STATE_AUDIO_DISCONNECTED;
    public static final int STATE_AUDIO_CONNECTING;
    public static final int STATE_AUDIO_CONNECTED;
    public static final java.lang.String EXTRA_AUDIO_WBS;
    public static final java.lang.String EXTRA_NETWORK_STATUS;
    public static final java.lang.String EXTRA_NETWORK_SIGNAL_STRENGTH;
    public static final java.lang.String EXTRA_NETWORK_ROAMING;
    public static final java.lang.String EXTRA_BATTERY_LEVEL;
    public static final java.lang.String EXTRA_OPERATOR_NAME;
    public static final java.lang.String EXTRA_VOICE_RECOGNITION;
    public static final java.lang.String EXTRA_IN_BAND_RING;
    public static final java.lang.String EXTRA_SUBSCRIBER_INFO;
    public static final java.lang.String EXTRA_CALL;
    public static final java.lang.String EXTRA_NUMBER;
    public static final java.lang.String EXTRA_RESULT_CODE;
    public static final java.lang.String EXTRA_CME_CODE;
    public static final java.lang.String EXTRA_AG_FEATURE_3WAY_CALLING;
    public static final java.lang.String EXTRA_AG_FEATURE_VOICE_RECOGNITION;
    public static final java.lang.String EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT;
    public static final java.lang.String EXTRA_AG_FEATURE_REJECT_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_ECC;
    public static final java.lang.String EXTRA_AG_FEATURE_RESPONSE_AND_HOLD;
    public static final java.lang.String EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL;
    public static final java.lang.String EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT;
    public static final java.lang.String EXTRA_AG_FEATURE_MERGE;
    public static final java.lang.String EXTRA_AG_FEATURE_MERGE_AND_DETACH;
    public static final int ACTION_RESULT_OK;
    public static final int ACTION_RESULT_ERROR;
    public static final int ACTION_RESULT_ERROR_NO_CARRIER;
    public static final int ACTION_RESULT_ERROR_BUSY;
    public static final int ACTION_RESULT_ERROR_NO_ANSWER;
    public static final int ACTION_RESULT_ERROR_DELAYED;
    public static final int ACTION_RESULT_ERROR_BLACKLISTED;
    public static final int ACTION_RESULT_ERROR_CME;
    public static final int CME_PHONE_FAILURE;
    public static final int CME_NO_CONNECTION_TO_PHONE;
    public static final int CME_OPERATION_NOT_ALLOWED;
    public static final int CME_OPERATION_NOT_SUPPORTED;
    public static final int CME_PHSIM_PIN_REQUIRED;
    public static final int CME_PHFSIM_PIN_REQUIRED;
    public static final int CME_PHFSIM_PUK_REQUIRED;
    public static final int CME_SIM_NOT_INSERTED;
    public static final int CME_SIM_PIN_REQUIRED;
    public static final int CME_SIM_PUK_REQUIRED;
    public static final int CME_SIM_FAILURE;
    public static final int CME_SIM_BUSY;
    public static final int CME_SIM_WRONG;
    public static final int CME_INCORRECT_PASSWORD;
    public static final int CME_SIM_PIN2_REQUIRED;
    public static final int CME_SIM_PUK2_REQUIRED;
    public static final int CME_MEMORY_FULL;
    public static final int CME_INVALID_INDEX;
    public static final int CME_NOT_FOUND;
    public static final int CME_MEMORY_FAILURE;
    public static final int CME_TEXT_STRING_TOO_LONG;
    public static final int CME_INVALID_CHARACTER_IN_TEXT_STRING;
    public static final int CME_DIAL_STRING_TOO_LONG;
    public static final int CME_INVALID_CHARACTER_IN_DIAL_STRING;
    public static final int CME_NO_NETWORK_SERVICE;
    public static final int CME_NETWORK_TIMEOUT;
    public static final int CME_EMERGENCY_SERVICE_ONLY;
    public static final int CME_NO_SIMULTANOUS_VOIP_CS_CALLS;
    public static final int CME_NOT_SUPPORTED_FOR_VOIP;
    public static final int CME_SIP_RESPONSE_CODE;
    public static final int CME_NETWORK_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_NETWORK_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_NETWORK_SUBSET_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_NETWORK_SUBSET_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_SERVICE_PROVIDER_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_SERVICE_PROVIDER_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_CORPORATE_PERSONALIZATION_PIN_REQUIRED;
    public static final int CME_CORPORATE_PERSONALIZATION_PUK_REQUIRED;
    public static final int CME_HIDDEN_KEY_REQUIRED;
    public static final int CME_EAP_NOT_SUPPORTED;
    public static final int CME_INCORRECT_PARAMETERS;
    public static final int CALL_ACCEPT_NONE;
    public static final int CALL_ACCEPT_HOLD;
    public static final int CALL_ACCEPT_TERMINATE;
    private android.content.Context mContext;
    private android.bluetooth.BluetoothProfile$ServiceListener mServiceListener;
    private android.bluetooth.IBluetoothHeadsetClient mService;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private final android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback;
    private android.content.ServiceConnection mConnection;

    void <init>(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.content.Context r1;
        android.bluetooth.BluetoothProfile$ServiceListener r2;
        android.bluetooth.IBluetoothManager r3;
        android.os.RemoteException r4, $r10;
        android.bluetooth.BluetoothHeadsetClient$1 $r5;
        android.bluetooth.BluetoothHeadsetClient$2 $r6;
        android.bluetooth.BluetoothAdapter $r7, $r8;
        android.bluetooth.IBluetoothStateChangeCallback $r9;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.bluetooth.BluetoothProfile$ServiceListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.bluetooth.BluetoothHeadsetClient$1;

        specialinvoke $r5.<android.bluetooth.BluetoothHeadsetClient$1: void <init>(android.bluetooth.BluetoothHeadsetClient)>(r0);

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback> = $r5;

        $r6 = new android.bluetooth.BluetoothHeadsetClient$2;

        specialinvoke $r6.<android.bluetooth.BluetoothHeadsetClient$2: void <init>(android.bluetooth.BluetoothHeadsetClient)>(r0);

        r0.<android.bluetooth.BluetoothHeadsetClient: android.content.ServiceConnection mConnection> = $r6;

        r0.<android.bluetooth.BluetoothHeadsetClient: android.content.Context mContext> = r1;

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = r2;

        $r7 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter> = $r7;

        $r8 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter>;

        r3 = virtualinvoke $r8.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r3 == null goto label4;

     label1:
        $r9 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r3.<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadsetClient", "", r4);

     label4:
        virtualinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean doBind()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean doBind()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.content.Intent r1, $r3;
        android.content.ComponentName r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r12;
        android.content.Context $r6, $r14;
        android.content.pm.PackageManager $r7;
        java.lang.StringBuilder $r9, $r10, $r11;
        android.content.ServiceConnection $r13;
        android.os.UserHandle $r15;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r3 = new android.content.Intent;

        $r4 = class "android/bluetooth/IBluetoothHeadsetClient";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>($r5);

        r1 = $r3;

        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r7, 0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r2);

        if r2 == null goto label1;

        $r14 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.Context mContext>;

        $r13 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.ServiceConnection mConnection>;

        $r15 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $z0 = virtualinvoke $r14.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, $r13, 0, $r15);

        if $z0 != 0 goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not bind to Bluetooth Headset Client Service with ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r12);

        return 0;

     label2:
        return 1;
    }

    void close()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothManager r1;
        java.lang.Exception r2, r3, $r11, $r12;
        java.lang.Throwable r4, $r13;
        android.bluetooth.BluetoothAdapter $r5;
        android.content.ServiceConnection $r6, $r8, r14;
        android.bluetooth.IBluetoothHeadsetClient $r7;
        android.content.Context $r9;
        android.bluetooth.IBluetoothStateChangeCallback $r10;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter>;

        r1 = virtualinvoke $r5.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()>();

        if r1 == null goto label04;

     label01:
        $r10 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothStateChangeCallback mBluetoothStateChangeCallback>;

        interfaceinvoke r1.<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>($r10);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        r2 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadsetClient", "", r2);

     label04:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.ServiceConnection mConnection>;

        r14 = $r6;

        entermonitor $r6;

     label05:
        $r7 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r7 == null goto label09;

     label06:
        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService> = null;

        $r9 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.Context mContext>;

        $r8 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.ServiceConnection mConnection>;

        virtualinvoke $r9.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r8);

     label07:
        goto label09;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothHeadsetClient", "", r3);

     label09:
        exitmonitor r14;

     label10:
        goto label13;

     label11:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r14;

     label12:
        throw r4;

     label13:
        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener> = null;

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public boolean connect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7, $r13;
        android.bluetooth.IBluetoothHeadsetClient $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r7);

        $r8 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r8 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r10 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r10.<android.bluetooth.IBluetoothHeadsetClient: boolean connect(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.Throwable;

        specialinvoke $r12.<java.lang.Throwable: void <init>()>();

        $r13 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r12);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r13);

        return 0;

     label4:
        $r9 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r9 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7, $r13;
        android.bluetooth.IBluetoothHeadsetClient $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r11;
        java.lang.Throwable $r12;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disconnect(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r7);

        $r8 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r8 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r10 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r10.<android.bluetooth.IBluetoothHeadsetClient: boolean disconnect(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.Throwable;

        specialinvoke $r12.<java.lang.Throwable: void <init>()>();

        $r13 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r12);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r13);

        return 0;

     label4:
        $r9 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r9 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConnectedDevices()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient $r2, $r3, $r5;
        java.util.ArrayList $r4, $r10;
        boolean $z0;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        java.lang.String $r9;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r2 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r2 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $r6 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getConnectedDevices()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.Throwable;

        specialinvoke $r8.<java.lang.Throwable: void <init>()>();

        $r9 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r9);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        return $r10;

     label4:
        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getDevicesMatchingConnectionStates(int[])
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        int[] r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r6;
        java.util.ArrayList $r5, $r11;
        boolean $z0;
        java.util.List $r7;
        android.os.RemoteException $r8;
        java.lang.Throwable $r9;
        java.lang.String $r10;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: int[];

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $r7 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>(r1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.Throwable;

        specialinvoke $r9.<java.lang.Throwable: void <init>()>();

        $r10 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r9);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r10);

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        return $r11;

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getConnectionState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $i1 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $i1;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        return 0;

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setPriority(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9, $r15;
        android.bluetooth.IBluetoothHeadsetClient $r10, $r11, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r13;
        android.os.RemoteException $r14;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPriority(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>($r9);

        $r10 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r10 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

        if i0 == 0 goto label1;

        if i0 == 100 goto label1;

        return 0;

     label1:
        $r12 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r12.<android.bluetooth.IBluetoothHeadsetClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        return $z2;

     label3:
        $r14 := @caughtexception;

        $r13 = new java.lang.Throwable;

        specialinvoke $r13.<java.lang.Throwable: void <init>()>();

        $r15 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r13);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r15);

        return 0;

     label4:
        $r11 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r11 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPriority(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1;
        int $i1;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $i1 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $i1;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        return 0;

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("startVoiceRecognition()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("stopVoiceRecognition()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1;
        java.util.List $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        java.lang.String $r9;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getCurrentCalls()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $r6 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.Throwable;

        specialinvoke $r8.<java.lang.Throwable: void <init>()>();

        $r9 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r9);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1;
        android.os.Bundle $r6;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;
        java.lang.String $r9;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getCurrentCalls()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $r6 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.Throwable;

        specialinvoke $r8.<java.lang.Throwable: void <init>()>();

        $r9 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r9);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean acceptCall(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("acceptCall()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean acceptCall(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean holdCall(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("holdCall()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean holdCall(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean rejectCall(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("rejectCall()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean rejectCall(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean terminateCall(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("terminateCall()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean terminateCall(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enterPrivateMode(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("enterPrivateMode()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean enterPrivateMode(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("explicitCallTransfer()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean redial(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("redial()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean redial(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean dial(android.bluetooth.BluetoothDevice, java.lang.String)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2, $r9;
        android.bluetooth.IBluetoothHeadsetClient $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r7;
        java.lang.Throwable $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: java.lang.String;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("dial()");

        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: boolean dial(android.bluetooth.BluetoothDevice,java.lang.String)>(r1, r2);

     label2:
        return $z2;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.Throwable;

        specialinvoke $r8.<java.lang.Throwable: void <init>()>();

        $r9 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r8);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r9);

     label4:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r5 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean dialMemory(android.bluetooth.BluetoothDevice, int)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("dialMemory()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean dialMemory(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean sendDTMF(android.bluetooth.BluetoothDevice, byte)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        byte b0;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        b0 := @parameter1: byte;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("sendDTMF()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)>(r1, b0);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("getLastVoiceTagNumber()");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isValidDevice(android.bluetooth.BluetoothDevice)>(r1);

        if $z1 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z2 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

     label4:
        $r4 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r4 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.RemoteException r2, $r7;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("acceptIncomingConnect");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z1 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z1;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.RemoteException r2, $r7;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        staticinvoke <android.bluetooth.BluetoothHeadsetClient: void log(java.lang.String)>("rejectIncomingConnect");

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z0 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $z0;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getAudioState(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.RemoteException r2, $r7;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r8;
        boolean $z0;
        int $i2;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $i2 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $i2;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r8);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean connectAudio()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.os.RemoteException r1, $r6;
        android.bluetooth.IBluetoothHeadsetClient $r2, $r5;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r7;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r2 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r2 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z1 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean connectAudio()>();

     label2:
        return $z1;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r7);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disconnectAudio()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.os.RemoteException r1, $r6;
        android.bluetooth.IBluetoothHeadsetClient $r2, $r5;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r7;
        boolean $z0, $z1;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r2 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r2 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $z1 = interfaceinvoke $r5.<android.bluetooth.IBluetoothHeadsetClient: boolean disconnectAudio()>();

     label2:
        return $z1;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r7);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r4);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.RemoteException r2, $r8;
        android.bluetooth.IBluetoothHeadsetClient $r3, $r6;
        java.lang.Throwable $r4;
        java.lang.String $r5, $r9;
        boolean $z0;
        android.os.Bundle $r7;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $r3 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        if $r3 == null goto label4;

        $z0 = specialinvoke r0.<android.bluetooth.BluetoothHeadsetClient: boolean isEnabled()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        $r7 = interfaceinvoke $r6.<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>(r1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r9);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", "Proxy not attached to service");

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        $r5 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", $r5);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean isEnabled()
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothAdapter $r1;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothAdapter mAdapter>;

        $i0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 != 12 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isValidDevice(android.bluetooth.BluetoothDevice)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothHeadsetClient", r0);

        return;
    }

    static android.content.ServiceConnection access$000(android.bluetooth.BluetoothHeadsetClient)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.content.ServiceConnection $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.ServiceConnection mConnection>;

        return $r1;
    }

    static android.bluetooth.IBluetoothHeadsetClient access$102(android.bluetooth.BluetoothHeadsetClient, android.bluetooth.IBluetoothHeadsetClient)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadsetClient;

        r1 := @parameter1: android.bluetooth.IBluetoothHeadsetClient;

        r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService> = r1;

        return r1;
    }

    static android.content.Context access$200(android.bluetooth.BluetoothHeadsetClient)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.content.Context $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.content.Context mContext>;

        return $r1;
    }

    static android.bluetooth.IBluetoothHeadsetClient access$100(android.bluetooth.BluetoothHeadsetClient)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.IBluetoothHeadsetClient $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.IBluetoothHeadsetClient mService>;

        return $r1;
    }

    static android.bluetooth.BluetoothProfile$ServiceListener access$300(android.bluetooth.BluetoothHeadsetClient)
    {
        android.bluetooth.BluetoothHeadsetClient r0;
        android.bluetooth.BluetoothProfile$ServiceListener $r1;

        r0 := @parameter0: android.bluetooth.BluetoothHeadsetClient;

        $r1 = r0.<android.bluetooth.BluetoothHeadsetClient: android.bluetooth.BluetoothProfile$ServiceListener mServiceListener>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_TERMINATE> = 2;

        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_HOLD> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int CALL_ACCEPT_NONE> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INCORRECT_PARAMETERS> = 50;

        <android.bluetooth.BluetoothHeadsetClient: int CME_EAP_NOT_SUPPORTED> = 49;

        <android.bluetooth.BluetoothHeadsetClient: int CME_HIDDEN_KEY_REQUIRED> = 48;

        <android.bluetooth.BluetoothHeadsetClient: int CME_CORPORATE_PERSONALIZATION_PUK_REQUIRED> = 47;

        <android.bluetooth.BluetoothHeadsetClient: int CME_CORPORATE_PERSONALIZATION_PIN_REQUIRED> = 46;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SERVICE_PROVIDER_PERSONALIZATION_PUK_REQUIRED> = 45;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SERVICE_PROVIDER_PERSONALIZATION_PIN_REQUIRED> = 44;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_SUBSET_PERSONALIZATION_PUK_REQUIRED> = 43;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_SUBSET_PERSONALIZATION_PIN_REQUIRED> = 42;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_PERSONALIZATION_PUK_REQUIRED> = 41;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_PERSONALIZATION_PIN_REQUIRED> = 40;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIP_RESPONSE_CODE> = 35;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NOT_SUPPORTED_FOR_VOIP> = 34;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_SIMULTANOUS_VOIP_CS_CALLS> = 33;

        <android.bluetooth.BluetoothHeadsetClient: int CME_EMERGENCY_SERVICE_ONLY> = 32;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NETWORK_TIMEOUT> = 31;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_NETWORK_SERVICE> = 30;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_CHARACTER_IN_DIAL_STRING> = 27;

        <android.bluetooth.BluetoothHeadsetClient: int CME_DIAL_STRING_TOO_LONG> = 26;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_CHARACTER_IN_TEXT_STRING> = 25;

        <android.bluetooth.BluetoothHeadsetClient: int CME_TEXT_STRING_TOO_LONG> = 24;

        <android.bluetooth.BluetoothHeadsetClient: int CME_MEMORY_FAILURE> = 23;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NOT_FOUND> = 22;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INVALID_INDEX> = 21;

        <android.bluetooth.BluetoothHeadsetClient: int CME_MEMORY_FULL> = 20;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PUK2_REQUIRED> = 18;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PIN2_REQUIRED> = 17;

        <android.bluetooth.BluetoothHeadsetClient: int CME_INCORRECT_PASSWORD> = 16;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_WRONG> = 15;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_BUSY> = 14;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_FAILURE> = 13;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PUK_REQUIRED> = 12;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_PIN_REQUIRED> = 11;

        <android.bluetooth.BluetoothHeadsetClient: int CME_SIM_NOT_INSERTED> = 10;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHFSIM_PUK_REQUIRED> = 7;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHFSIM_PIN_REQUIRED> = 6;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHSIM_PIN_REQUIRED> = 5;

        <android.bluetooth.BluetoothHeadsetClient: int CME_OPERATION_NOT_SUPPORTED> = 4;

        <android.bluetooth.BluetoothHeadsetClient: int CME_OPERATION_NOT_ALLOWED> = 3;

        <android.bluetooth.BluetoothHeadsetClient: int CME_NO_CONNECTION_TO_PHONE> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int CME_PHONE_FAILURE> = 0;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_CME> = 7;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_BLACKLISTED> = 6;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_DELAYED> = 5;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_NO_ANSWER> = 4;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_BUSY> = 3;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR_NO_CARRIER> = 2;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_ERROR> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int ACTION_RESULT_OK> = 0;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_MERGE_AND_DETACH> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_MERGE_AND_DETACH";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_MERGE> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_MERGE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RELEASE_AND_ACCEPT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RELEASE_HELD_OR_WAITING_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ACCEPT_HELD_OR_WAITING_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_RESPONSE_AND_HOLD> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_RESPONSE_AND_HOLD";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ECC> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ECC";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_REJECT_CALL> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_REJECT_CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_ATTACH_NUMBER_TO_VT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_VOICE_RECOGNITION> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_VOICE_RECOGNITION";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AG_FEATURE_3WAY_CALLING> = "android.bluetooth.headsetclient.extra.EXTRA_AG_FEATURE_3WAY_CALLING";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_CME_CODE> = "android.bluetooth.headsetclient.extra.CME_CODE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_RESULT_CODE> = "android.bluetooth.headsetclient.extra.RESULT_CODE";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NUMBER> = "android.bluetooth.headsetclient.extra.NUMBER";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_CALL> = "android.bluetooth.headsetclient.extra.CALL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_SUBSCRIBER_INFO> = "android.bluetooth.headsetclient.extra.SUBSCRIBER_INFO";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_IN_BAND_RING> = "android.bluetooth.headsetclient.extra.IN_BAND_RING";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_VOICE_RECOGNITION> = "android.bluetooth.headsetclient.extra.VOICE_RECOGNITION";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_OPERATOR_NAME> = "android.bluetooth.headsetclient.extra.OPERATOR_NAME";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_BATTERY_LEVEL> = "android.bluetooth.headsetclient.extra.BATTERY_LEVEL";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_ROAMING> = "android.bluetooth.headsetclient.extra.NETWORK_ROAMING";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_SIGNAL_STRENGTH> = "android.bluetooth.headsetclient.extra.NETWORK_SIGNAL_STRENGTH";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_NETWORK_STATUS> = "android.bluetooth.headsetclient.extra.NETWORK_STATUS";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String EXTRA_AUDIO_WBS> = "android.bluetooth.headsetclient.extra.AUDIO_WBS";

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_CONNECTED> = 2;

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_CONNECTING> = 1;

        <android.bluetooth.BluetoothHeadsetClient: int STATE_AUDIO_DISCONNECTED> = 0;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_LAST_VTAG> = "android.bluetooth.headsetclient.profile.action.LAST_VTAG";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_RESULT> = "android.bluetooth.headsetclient.profile.action.RESULT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_CALL_CHANGED> = "android.bluetooth.headsetclient.profile.action.AG_CALL_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_AG_EVENT> = "android.bluetooth.headsetclient.profile.action.AG_EVENT";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_AUDIO_STATE_CHANGED> = "android.bluetooth.headsetclient.profile.action.AUDIO_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String ACTION_CONNECTION_STATE_CHANGED> = "android.bluetooth.headsetclient.profile.action.CONNECTION_STATE_CHANGED";

        <android.bluetooth.BluetoothHeadsetClient: boolean VDBG> = 0;

        <android.bluetooth.BluetoothHeadsetClient: boolean DBG> = 1;

        <android.bluetooth.BluetoothHeadsetClient: java.lang.String TAG> = "BluetoothHeadsetClient";

        return;
    }
}
