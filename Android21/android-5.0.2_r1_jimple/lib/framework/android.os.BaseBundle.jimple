public class android.os.BaseBundle extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final boolean DEBUG;
    static final int BUNDLE_MAGIC;
    static final android.os.Parcel EMPTY_PARCEL;
    android.util.ArrayMap mMap;
    android.os.Parcel mParcelledData;
    private java.lang.ClassLoader mClassLoader;

    void <init>(java.lang.ClassLoader, int)
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader r1, $r4;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Class $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        if i0 <= 0 goto label1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>(int)>(i0);

        goto label2;

     label1:
        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

     label2:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r2;

        if r1 != null goto label3;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label4;

     label3:
        $r4 = r1;

     label4:
        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = $r4;

        return;
    }

    void <init>()
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        $r1 = (java.lang.ClassLoader) null;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r1, 0);

        return;
    }

    void <init>(android.os.Parcel)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        virtualinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        specialinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(r1, i0);

        return;
    }

    void <init>(java.lang.ClassLoader)
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>(r1, 0);

        return;
    }

    void <init>(int)
    {
        android.os.BaseBundle r0;
        int i0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        i0 := @parameter0: int;

        $r1 = (java.lang.ClassLoader) null;

        specialinvoke r0.<android.os.BaseBundle: void <init>(java.lang.ClassLoader,int)>($r1, i0);

        return;
    }

    void <init>(android.os.BaseBundle)
    {
        android.os.BaseBundle r0, r1;
        android.os.Parcel $r2, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.util.ArrayMap $r3, $r5, $r6;
        java.lang.ClassLoader $r4;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.BaseBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        $r2 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r2 == null goto label2;

        $r8 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r7 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r8 != $r7 goto label1;

        $r14 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r14;

        goto label3;

     label1:
        $r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r9;

        $r11 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r12 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r10 = r1.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r10.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r11.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r12, 0, $i0);

        $r13 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r13.<android.os.Parcel: void setDataPosition(int)>(0);

        goto label3;

     label2:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

     label3:
        $r3 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r3 == null goto label4;

        $r5 = new android.util.ArrayMap;

        $r6 = r1.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        specialinvoke $r5.<android.util.ArrayMap: void <init>(android.util.ArrayMap)>($r6);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r5;

        goto label5;

     label4:
        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = null;

     label5:
        $r4 = r1.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = $r4;

        return;
    }

    public java.lang.String getPairValue()
    {
        android.os.BaseBundle r0;
        int i0;
        java.lang.Object r1;
        java.lang.ClassCastException r2, $r6;
        android.util.ArrayMap $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        i0 = virtualinvoke $r3.<android.util.ArrayMap: int size()>();

        if i0 <= 1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", "getPairValue() used on Bundle with multiple pairs.");

     label1:
        if i0 != 0 goto label2;

        return null;

     label2:
        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r1 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object valueAt(int)>(0);

     label3:
        $r5 = (java.lang.String) r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>("getPairValue()", r1, "String", r2);

        return null;

        catch java.lang.ClassCastException from label3 to label4 with label5;
    }

    void setClassLoader(java.lang.ClassLoader)
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader r1;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader> = r1;

        return;
    }

    java.lang.ClassLoader getClassLoader()
    {
        android.os.BaseBundle r0;
        java.lang.ClassLoader $r1;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        return $r1;
    }

    synchronized void unparcel()
    {
        android.os.BaseBundle r0;
        int i0;
        android.os.Parcel $r1, $r2, $r3, $r4, $r10, $r11;
        android.util.ArrayMap $r5, $r6, $r7, $r9, $r12, $r13, $r14, $r15;
        java.lang.ClassLoader $r8;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r2 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r3 != $r2 goto label4;

        $r13 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r13 != null goto label2;

        $r14 = new android.util.ArrayMap;

        specialinvoke $r14.<android.util.ArrayMap: void <init>(int)>(1);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r14;

        goto label3;

     label2:
        $r15 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r15.<android.util.ArrayMap: void erase()>();

     label3:
        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        return;

     label4:
        $r4 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        i0 = virtualinvoke $r4.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label5;

        return;

     label5:
        $r5 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r5 != null goto label6;

        $r12 = new android.util.ArrayMap;

        specialinvoke $r12.<android.util.ArrayMap: void <init>(int)>(i0);

        r0.<android.os.BaseBundle: android.util.ArrayMap mMap> = $r12;

        goto label7;

     label6:
        $r6 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r6.<android.util.ArrayMap: void erase()>();

        $r7 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r7.<android.util.ArrayMap: void ensureCapacity(int)>(i0);

     label7:
        $r10 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r9 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r8 = r0.<android.os.BaseBundle: java.lang.ClassLoader mClassLoader>;

        virtualinvoke $r10.<android.os.Parcel: void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader)>($r9, i0, $r8);

        $r11 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke $r11.<android.os.Parcel: void recycle()>();

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = null;

        return;
    }

    public boolean isParcelled()
    {
        android.os.BaseBundle r0;
        android.os.Parcel $r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        $r1 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $i0 = virtualinvoke $r1.<android.util.ArrayMap: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r1.<android.util.ArrayMap: boolean isEmpty()>();

        return $z0;
    }

    public void clear()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $z0 = virtualinvoke $r2.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;
        java.lang.Object $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void remove(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void putAll(android.os.PersistableBundle)
    {
        android.os.BaseBundle r0;
        android.os.PersistableBundle r1;
        android.util.ArrayMap $r2, $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.PersistableBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        virtualinvoke r1.<android.os.PersistableBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r2 = r1.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>($r2);

        return;
    }

    void putAll(java.util.Map)
    {
        android.os.BaseBundle r0;
        java.util.Map r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r2.<android.util.ArrayMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.util.Set keySet()
    {
        android.os.BaseBundle r0;
        android.util.ArrayMap $r1;
        java.util.Set $r2;

        r0 := @this: android.os.BaseBundle;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r1 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r2 = virtualinvoke $r1.<android.util.ArrayMap: java.util.Set keySet()>();

        return $r2;
    }

    void putBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean z0;
        android.util.ArrayMap $r2;
        java.lang.Boolean $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putByte(java.lang.String, byte)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte b0;
        android.util.ArrayMap $r2;
        java.lang.Byte $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putChar(java.lang.String, char)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char c0;
        android.util.ArrayMap $r2;
        java.lang.Character $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putShort(java.lang.String, short)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short s0;
        android.util.ArrayMap $r2;
        java.lang.Short $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putInt(java.lang.String, int)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap $r2;
        java.lang.Integer $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putLong(java.lang.String, long)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long l0;
        android.util.ArrayMap $r2;
        java.lang.Long $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    void putFloat(java.lang.String, float)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float f0;
        android.util.ArrayMap $r2;
        java.lang.Float $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putDouble(java.lang.String, double)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double d0;
        android.util.ArrayMap $r2;
        java.lang.Double $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void putString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putIntegerArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putStringArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequenceArrayList(java.lang.String, java.util.ArrayList)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putSerializable(java.lang.String, java.io.Serializable)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.io.Serializable r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Serializable;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putBooleanArray(java.lang.String, boolean[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: boolean[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putByteArray(java.lang.String, byte[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putShortArray(java.lang.String, short[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: short[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharArray(java.lang.String, char[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putIntArray(java.lang.String, int[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putLongArray(java.lang.String, long[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: long[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putFloatArray(java.lang.String, float[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putDoubleArray(java.lang.String, double[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void putStringArray(java.lang.String, java.lang.String[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putCharSequenceArray(java.lang.String, java.lang.CharSequence[])
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.CharSequence[] r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence[];

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    boolean getBoolean(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $z0 = virtualinvoke r0.<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object, java.lang.ClassCastException)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r3, $r14, $r19;
        java.lang.Object r2, r4;
        java.lang.ClassCastException r5;
        java.lang.StringBuilder r6, $r7;
        java.lang.Class $r13;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.ClassCastException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r6 = $r7;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but value was a ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  The default value ");

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was returned.");

        $r19 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Bundle", $r19);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Bundle", "Attempt to cast generated internal exception:", r5);

        return;
    }

    void typeWarning(java.lang.String, java.lang.Object, java.lang.String, java.lang.ClassCastException)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r3;
        java.lang.Object r2;
        java.lang.ClassCastException r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.ClassCastException;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, r3, "<null>", r4);

        return;
    }

    boolean getBoolean(java.lang.String, boolean)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Boolean $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return z0;

     label1:
        $r5 = (java.lang.Boolean) r2;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Boolean", $r7, r3);

        return z0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte getByte(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Byte $r2;
        byte $b0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r2 = virtualinvoke r0.<android.os.BaseBundle: java.lang.Byte getByte(java.lang.String,byte)>(r1, 0);

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

    java.lang.Byte getByte(java.lang.String, byte)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        byte b0;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        java.lang.Byte $r5, $r6, $r8, $r9;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        return $r6;

     label1:
        $r5 = (java.lang.Byte) r2;

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Byte", $r8, r3);

        $r9 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        return $r9;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char getChar(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char $c0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $c0 = virtualinvoke r0.<android.os.BaseBundle: char getChar(java.lang.String,char)>(r1, 0);

        return $c0;
    }

    char getChar(java.lang.String, char)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        char c0, $c1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Character $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return c0;

     label1:
        $r5 = (java.lang.Character) r2;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

     label2:
        return $c1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Character", $r7, r3);

        return c0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short getShort(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short $s0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $s0 = virtualinvoke r0.<android.os.BaseBundle: short getShort(java.lang.String,short)>(r1, 0);

        return $s0;
    }

    short getShort(java.lang.String, short)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        short s0, $s1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Short $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return s0;

     label1:
        $r5 = (java.lang.Short) r2;

        $s1 = virtualinvoke $r5.<java.lang.Short: short shortValue()>();

     label2:
        return $s1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Short", $r7, r3);

        return s0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int getInt(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $i0 = virtualinvoke r0.<android.os.BaseBundle: int getInt(java.lang.String,int)>(r1, 0);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Integer $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $r5 = (java.lang.Integer) r2;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label2:
        return $i1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Integer", $r7, r3);

        return i0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long getLong(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $l0 = virtualinvoke r0.<android.os.BaseBundle: long getLong(java.lang.String,long)>(r1, 0L);

        return $l0;
    }

    public long getLong(java.lang.String, long)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        long l0, $l1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Long $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $r5 = (java.lang.Long) r2;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

     label2:
        return $l1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Long", $r7, r3);

        return l0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float getFloat(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float $f0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $f0 = virtualinvoke r0.<android.os.BaseBundle: float getFloat(java.lang.String,float)>(r1, 0.0F);

        return $f0;
    }

    float getFloat(java.lang.String, float)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        float f0, $f1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Float $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return f0;

     label1:
        $r5 = (java.lang.Float) r2;

        $f1 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

     label2:
        return $f1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Float", $r7, r3);

        return f0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double getDouble(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $d0 = virtualinvoke r0.<android.os.BaseBundle: double getDouble(java.lang.String,double)>(r1, 0.0);

        return $d0;
    }

    public double getDouble(java.lang.String, double)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        double d0, $d1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.Double $r5, $r7;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return d0;

     label1:
        $r5 = (java.lang.Double) r2;

        $d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

     label2:
        return $d1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException)>(r1, r2, "Double", $r7, r3);

        return d0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, $r5;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        $r5 = (java.lang.String) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "String", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<android.os.BaseBundle: java.lang.String getString(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    java.lang.CharSequence getCharSequence(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.lang.CharSequence $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        $r5 = (java.lang.CharSequence) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "CharSequence", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence getCharSequence(java.lang.String, java.lang.CharSequence)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.CharSequence r2, r3, $r4;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.CharSequence;

        r3 = virtualinvoke r0.<android.os.BaseBundle: java.lang.CharSequence getCharSequence(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = r3;

     label2:
        return $r4;
    }

    java.io.Serializable getSerializable(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.io.Serializable $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.io.Serializable) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "Serializable", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getIntegerArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<Integer>", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getStringArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<String>", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.util.ArrayList getCharSequenceArrayList(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.util.ArrayList) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "ArrayList<CharSequence>", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    boolean[] getBooleanArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        boolean[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (boolean[]) r2;

        $r6 = (boolean[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "byte[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    byte[] getByteArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        byte[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (byte[]) r2;

        $r6 = (byte[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "byte[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    short[] getShortArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        short[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (short[]) r2;

        $r6 = (short[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "short[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    char[] getCharArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        char[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (char[]) r2;

        $r6 = (char[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "char[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public int[] getIntArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        int[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (int[]) r2;

        $r6 = (int[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "int[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public long[] getLongArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        long[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (long[]) r2;

        $r6 = (long[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "long[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    float[] getFloatArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        float[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (float[]) r2;

        $r6 = (float[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "float[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        double[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (double[]) r2;

        $r6 = (double[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "double[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        java.lang.String[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.lang.String[]) r2;

        $r6 = (java.lang.String[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "String[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    java.lang.CharSequence[] getCharSequenceArray(java.lang.String)
    {
        android.os.BaseBundle r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r7;
        android.util.ArrayMap $r4;
        java.lang.CharSequence[] $r5, $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.BaseBundle: void unparcel()>();

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (java.lang.CharSequence[]) r2;

        $r6 = (java.lang.CharSequence[]) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r0.<android.os.BaseBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "CharSequence[]", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    void writeToParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1, $r2, $r6, $r7, $r8, $r9;
        int i0, i1, i2, i3, i4, $i5, i6;
        android.util.ArrayMap $r3, $r4, $r5;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        if $r2 == null goto label2;

        $r8 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        $r6 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r8 != $r6 goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label5;

     label1:
        $r7 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        i1 = virtualinvoke $r7.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1279544898);

        $r9 = r0.<android.os.BaseBundle: android.os.Parcel mParcelledData>;

        virtualinvoke r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r9, 0, i1);

        goto label5;

     label2:
        $r3 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        if $r3 == null goto label3;

        $r4 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        $i5 = virtualinvoke $r4.<android.util.ArrayMap: int size()>();

        if $i5 > 0 goto label4;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label4:
        i6 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1279544898);

        i2 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        $r5 = r0.<android.os.BaseBundle: android.util.ArrayMap mMap>;

        virtualinvoke r1.<android.os.Parcel: void writeArrayMapInternal(android.util.ArrayMap)>($r5);

        i3 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(i6);

        i4 = i3 - i2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(i3);

     label5:
        return;
    }

    void readFromParcelInner(android.os.Parcel)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1;
        int i0;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad length in parcel: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        specialinvoke r0.<android.os.BaseBundle: void readFromParcelInner(android.os.Parcel,int)>(r1, i0);

        return;
    }

    private void readFromParcelInner(android.os.Parcel, int)
    {
        android.os.BaseBundle r0;
        android.os.Parcel r1, r2, $r9;
        int i0, i1, i2, $i3;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.os.BaseBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r9 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = $r9;

        return;

     label1:
        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 == 1279544898 goto label2;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad magic number for Bundle: 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        i2 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        $i3 = i2 + i0;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>($i3);

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r2.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r2.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r1, i2, i0);

        virtualinvoke r2.<android.os.Parcel: void setDataPosition(int)>(0);

        r0.<android.os.BaseBundle: android.os.Parcel mParcelledData> = r2;

        return;
    }

    static void <clinit>()
    {
        android.os.Parcel $r0;

        <android.os.BaseBundle: int BUNDLE_MAGIC> = 1279544898;

        <android.os.BaseBundle: boolean DEBUG> = 0;

        <android.os.BaseBundle: java.lang.String TAG> = "Bundle";

        $r0 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL> = $r0;

        return;
    }
}
