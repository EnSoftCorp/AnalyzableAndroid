public abstract class android.view.ActionProvider extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener;
    private android.view.ActionProvider$VisibilityListener mVisibilityListener;

    public void <init>(android.content.Context)
    {
        android.view.ActionProvider r0;
        android.content.Context r1;

        r0 := @this: android.view.ActionProvider;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract android.view.View onCreateActionView();

    public android.view.View onCreateActionView(android.view.MenuItem)
    {
        android.view.ActionProvider r0;
        android.view.MenuItem r1;
        android.view.View $r2;

        r0 := @this: android.view.ActionProvider;

        r1 := @parameter0: android.view.MenuItem;

        $r2 = virtualinvoke r0.<android.view.ActionProvider: android.view.View onCreateActionView()>();

        return $r2;
    }

    public boolean overridesItemVisibility()
    {
        android.view.ActionProvider r0;

        r0 := @this: android.view.ActionProvider;

        return 0;
    }

    public boolean isVisible()
    {
        android.view.ActionProvider r0;

        r0 := @this: android.view.ActionProvider;

        return 1;
    }

    public void refreshVisibility()
    {
        android.view.ActionProvider r0;
        android.view.ActionProvider$VisibilityListener $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.view.ActionProvider;

        $r1 = r0.<android.view.ActionProvider: android.view.ActionProvider$VisibilityListener mVisibilityListener>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.view.ActionProvider: boolean overridesItemVisibility()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.view.ActionProvider: android.view.ActionProvider$VisibilityListener mVisibilityListener>;

        $z1 = virtualinvoke r0.<android.view.ActionProvider: boolean isVisible()>();

        interfaceinvoke $r2.<android.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)>($z1);

     label1:
        return;
    }

    public boolean onPerformDefaultAction()
    {
        android.view.ActionProvider r0;

        r0 := @this: android.view.ActionProvider;

        return 0;
    }

    public boolean hasSubMenu()
    {
        android.view.ActionProvider r0;

        r0 := @this: android.view.ActionProvider;

        return 0;
    }

    public void onPrepareSubMenu(android.view.SubMenu)
    {
        android.view.ActionProvider r0;
        android.view.SubMenu r1;

        r0 := @this: android.view.ActionProvider;

        r1 := @parameter0: android.view.SubMenu;

        return;
    }

    public void subUiVisibilityChanged(boolean)
    {
        android.view.ActionProvider r0;
        boolean z0;
        android.view.ActionProvider$SubUiVisibilityListener $r1, $r2;

        r0 := @this: android.view.ActionProvider;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.ActionProvider: android.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.ActionProvider: android.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener>;

        interfaceinvoke $r2.<android.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)>(z0);

     label1:
        return;
    }

    public void setSubUiVisibilityListener(android.view.ActionProvider$SubUiVisibilityListener)
    {
        android.view.ActionProvider r0;
        android.view.ActionProvider$SubUiVisibilityListener r1;

        r0 := @this: android.view.ActionProvider;

        r1 := @parameter0: android.view.ActionProvider$SubUiVisibilityListener;

        r0.<android.view.ActionProvider: android.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener> = r1;

        return;
    }

    public void setVisibilityListener(android.view.ActionProvider$VisibilityListener)
    {
        android.view.ActionProvider r0;
        android.view.ActionProvider$VisibilityListener r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r0 := @this: android.view.ActionProvider;

        r1 := @parameter0: android.view.ActionProvider$VisibilityListener;

        $r2 = r0.<android.view.ActionProvider: android.view.ActionProvider$VisibilityListener mVisibilityListener>;

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setVisibilityListener: Setting a new ActionProvider.VisibilityListener when one is already set. Are you reusing this ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instance while it is still in use somewhere else?");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActionProvider", $r9);

     label1:
        r0.<android.view.ActionProvider: android.view.ActionProvider$VisibilityListener mVisibilityListener> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.view.ActionProvider: java.lang.String TAG> = "ActionProvider";

        return;
    }
}
