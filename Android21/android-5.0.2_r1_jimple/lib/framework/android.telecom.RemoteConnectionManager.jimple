public class android.telecom.RemoteConnectionManager extends java.lang.Object
{
    private final java.util.Map mRemoteConnectionServices;
    private final android.telecom.ConnectionService mOurConnectionServiceImpl;

    public void <init>(android.telecom.ConnectionService)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.ConnectionService r1;
        java.util.HashMap $r2;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r1 := @parameter0: android.telecom.ConnectionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices> = $r2;

        r0.<android.telecom.RemoteConnectionManager: android.telecom.ConnectionService mOurConnectionServiceImpl> = r1;

        return;
    }

    void addConnectionService(android.content.ComponentName, com.android.internal.telecom.IConnectionService)
    {
        android.telecom.RemoteConnectionManager r0;
        android.content.ComponentName r1;
        com.android.internal.telecom.IConnectionService r2;
        android.telecom.RemoteConnectionService r3, $r5;
        java.util.Map $r4, $r7;
        boolean $z0;
        android.telecom.ConnectionService $r6;
        android.os.RemoteException $r9;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: com.android.internal.telecom.IConnectionService;

        $r4 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label4;

     label1:
        $r5 = new android.telecom.RemoteConnectionService;

        $r6 = r0.<android.telecom.RemoteConnectionManager: android.telecom.ConnectionService mOurConnectionServiceImpl>;

        specialinvoke $r5.<android.telecom.RemoteConnectionService: void <init>(com.android.internal.telecom.IConnectionService,android.telecom.ConnectionService)>(r2, $r6);

        r3 = $r5;

        $r7 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest, boolean)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.PhoneAccountHandle r1, r3, $r6;
        android.telecom.ConnectionRequest r2;
        boolean z0, $z1;
        android.content.ComponentName r4;
        android.telecom.RemoteConnectionService r5;
        java.util.Map $r7, $r8;
        java.lang.Object $r9;
        android.telecom.RemoteConnection $r10;
        java.lang.UnsupportedOperationException $r11;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.String $r14;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r2.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>();

        if r3 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accountHandle must be specified.");

        throw $r16;

     label1:
        $r6 = virtualinvoke r2.<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>();

        r4 = virtualinvoke $r6.<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>();

        $r7 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

        $r11 = new java.lang.UnsupportedOperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accountHandle not supported: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label2:
        $r8 = r0.<android.telecom.RemoteConnectionManager: java.util.Map mRemoteConnectionServices>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.telecom.RemoteConnectionService) $r9;

        if r5 == null goto label3;

        $r10 = virtualinvoke r5.<android.telecom.RemoteConnectionService: android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest,boolean)>(r1, r2, z0);

        return $r10;

     label3:
        return null;
    }

    public void conferenceRemoteConnections(android.telecom.RemoteConnection, android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConnectionManager r0;
        android.telecom.RemoteConnection r1, r2;
        com.android.internal.telecom.IConnectionService $r4, $r5, $r7, $r9, $r12;
        java.lang.Object[] $r6;
        java.lang.String $r8, $r10, $r11, $r14;
        android.os.RemoteException $r13;

        r0 := @this: android.telecom.RemoteConnectionManager;

        r1 := @parameter0: android.telecom.RemoteConnection;

        r2 := @parameter1: android.telecom.RemoteConnection;

        $r4 = virtualinvoke r1.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r5 = virtualinvoke r2.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        if $r4 != $r5 goto label4;

     label1:
        $r12 = virtualinvoke r1.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r11 = virtualinvoke r1.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r14 = virtualinvoke r2.<android.telecom.RemoteConnection: java.lang.String getId()>();

        interfaceinvoke $r12.<com.android.internal.telecom.IConnectionService: void conference(java.lang.String,java.lang.String)>($r11, $r14);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        goto label5;

     label4:
        $r6 = newarray (java.lang.Object)[4];

        $r7 = virtualinvoke r1.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r6[0] = $r7;

        $r8 = virtualinvoke r1.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r6[1] = $r8;

        $r9 = virtualinvoke r2.<android.telecom.RemoteConnection: com.android.internal.telecom.IConnectionService getConnectionService()>();

        $r6[2] = $r9;

        $r10 = virtualinvoke r2.<android.telecom.RemoteConnection: java.lang.String getId()>();

        $r6[3] = $r10;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Request to conference incompatible remote connections (%s,%s) (%s,%s)", $r6);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
