class android.provider.MediaStore$InternalThumbnails extends java.lang.Object implements android.provider.BaseColumns
{
    private static final int MINI_KIND;
    private static final int FULL_SCREEN_KIND;
    private static final int MICRO_KIND;
    private static final java.lang.String[] PROJECTION;
    static final int DEFAULT_GROUP_ID;
    private static final java.lang.Object sThumbBufLock;
    private static byte[] sThumbBuf;

    private void <init>()
    {
        android.provider.MediaStore$InternalThumbnails r0;

        r0 := @this: android.provider.MediaStore$InternalThumbnails;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor, android.net.Uri, android.content.ContentResolver, android.graphics.BitmapFactory$Options)
    {
        android.database.Cursor r0;
        android.net.Uri r1, r5;
        android.content.ContentResolver r2;
        android.graphics.BitmapFactory$Options r3;
        android.graphics.Bitmap r4;
        long l0;
        android.os.ParcelFileDescriptor r7;
        java.io.FileDescriptor $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28;
        java.lang.OutOfMemoryError $r10, r32;
        java.lang.String $r14, $r24, $r29;
        java.io.FileNotFoundException $r16, r30;
        java.io.IOException $r22, r31;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.content.ContentResolver;

        r3 := @parameter3: android.graphics.BitmapFactory$Options;

        r4 = null;

        r5 = null;

     label1:
        l0 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(0);

        interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        r5 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l0);

        r7 = virtualinvoke r2.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r5, "r");

        $r8 = virtualinvoke r7.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r8, null, r3);

        virtualinvoke r7.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        goto label6;

     label3:
        $r16 := @caughtexception;

        r30 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t open thumbnail ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaStore", $r24);

        goto label6;

     label4:
        $r22 := @caughtexception;

        r31 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t open thumbnail ");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaStore", $r29);

        goto label6;

     label5:
        $r10 := @caughtexception;

        r32 = $r10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to allocate memory for thumbnail ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaStore", $r14);

     label6:
        return r4;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.OutOfMemoryError from label1 to label2 with label5;
    }

    static void cancelThumbnailRequest(android.content.ContentResolver, long, android.net.Uri, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        android.net.Uri r1, r2;
        java.lang.Throwable r3, $r11;
        android.net.Uri$Builder $r4, $r5, $r7, $r9;
        java.lang.String $r6, $r8;
        java.lang.String[] $r10;
        android.database.Cursor r12;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        r1 := @parameter2: android.net.Uri;

        l1 := @parameter3: long;

        $r4 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("cancel", "1");

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r7 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("orig_id", $r6);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        $r9 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("group_id", $r8);

        r2 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri build()>();

     label1:
        $r10 = <android.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION>;

        r12 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r10, null, null, null);

     label2:
        if r12 == null goto label6;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

        goto label6;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

     label4:
        goto label5;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static android.graphics.Bitmap getThumbnail(android.content.ContentResolver, long, long, int, android.graphics.BitmapFactory$Options, android.net.Uri, boolean)
    {
        android.content.ContentResolver r0;
        long l0, l1, l3;
        int i2, $i5, $i6;
        android.graphics.BitmapFactory$Options r1;
        android.net.Uri r2, $r12, r67, r69;
        boolean z0, $z1, $z2, $z3;
        android.graphics.Bitmap r3, r64, r66;
        java.lang.String r4, $r16, $r17, $r22, $r32, $r34, $r35, $r36, $r49, $r56, r65;
        android.media.MiniThumbFile r5, $r10;
        android.database.Cursor r6;
        java.lang.Object r7, $r39, $r53, r68;
        java.lang.Throwable r8, r9, r11, $r57, $r61, $r62;
        android.net.Uri$Builder $r13, $r14, $r15, $r18, $r33, $r37;
        byte $b4;
        java.lang.IllegalArgumentException $r19;
        java.lang.StringBuilder $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r47, $r48, $r51;
        java.lang.String[] $r21, $r38, $r46;
        byte[] $r40, $r41, $r42, $r43, $r44, $r45, $r50, $r52, $r54, $r55, $r58, $r59, $r60;
        android.database.sqlite.SQLiteException $r63, r70;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        r1 := @parameter4: android.graphics.BitmapFactory$Options;

        r2 := @parameter5: android.net.Uri;

        z0 := @parameter6: boolean;

        r3 = null;

        r4 = null;

        $r10 = new android.media.MiniThumbFile;

        if z0 == 0 goto label01;

        $r12 = <android.provider.MediaStore$Video$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        goto label02;

     label01:
        $r12 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

     label02:
        specialinvoke $r10.<android.media.MiniThumbFile: void <init>(android.net.Uri)>($r12);

        r5 = $r10;

        r6 = null;

     label03:
        l3 = virtualinvoke r5.<android.media.MiniThumbFile: long getMagic(long)>(l0);

        $b4 = l3 cmp 0L;

        if $b4 == 0 goto label18;

        if i2 != 3 goto label13;

        $r53 = <android.provider.MediaStore$InternalThumbnails: java.lang.Object sThumbBufLock>;

        r7 = $r53;

        entermonitor $r53;

     label04:
        $r52 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        if $r52 != null goto label05;

        $r58 = newarray (byte)[10000];

        <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf> = $r58;

     label05:
        $r55 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $r54 = virtualinvoke r5.<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>(l0, $r55);

        if $r54 == null goto label06;

        $r60 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $r59 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $i6 = lengthof $r59;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r60, 0, $i6);

        if r3 != null goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaStore", "couldn\'t decode byte array.");

     label06:
        exitmonitor r7;

     label07:
        goto label10;

     label08:
        $r61 := @caughtexception;

        r9 = $r61;

        exitmonitor r7;

     label09:
        throw r9;

     label10:
        r64 = r3;

     label11:
        if r6 == null goto label12;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label12:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        return r64;

     label13:
        if i2 != 1 goto label18;

        if z0 == 0 goto label14;

        $r56 = "video_id=";

        goto label15;

     label14:
        $r56 = "image_id=";

     label15:
        r65 = $r56;

        $r46 = <android.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r46, $r49, null, null);

        if r6 == null goto label18;

        $z3 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z3 == 0 goto label18;

        r3 = staticinvoke <android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options)>(r6, r2, r0, r1);

        if r3 == null goto label18;

        r66 = r3;

     label16:
        if r6 == null goto label17;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label17:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        return r66;

     label18:
        $r13 = virtualinvoke r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r14 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("blocking", "1");

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r15 = virtualinvoke $r14.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("orig_id", $r16);

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        $r18 = virtualinvoke $r15.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("group_id", $r17);

        r67 = virtualinvoke $r18.<android.net.Uri$Builder: android.net.Uri build()>();

        if r6 == null goto label19;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label19:
        $r21 = <android.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION>;

        r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r67, $r21, null, null, null);

        if r6 != null goto label22;

     label20:
        if r6 == null goto label21;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label21:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        return null;

     label22:
        if i2 != 3 goto label30;

        $r39 = <android.provider.MediaStore$InternalThumbnails: java.lang.Object sThumbBufLock>;

        r68 = $r39;

        entermonitor $r39;

     label23:
        $r42 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        if $r42 != null goto label24;

        $r50 = newarray (byte)[10000];

        <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf> = $r50;

     label24:
        $r43 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r43, 0);

        $r44 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $r45 = virtualinvoke r5.<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>(l0, $r44);

        if $r45 == null goto label25;

        $r41 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $r40 = <android.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf>;

        $i5 = lengthof $r40;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r41, 0, $i5);

        if r3 != null goto label25;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaStore", "couldn\'t decode byte array.");

     label25:
        exitmonitor r68;

     label26:
        goto label29;

     label27:
        $r62 := @caughtexception;

        r8 = $r62;

        exitmonitor r68;

     label28:
        throw r8;

     label29:
        goto label32;

     label30:
        if i2 != 1 goto label31;

        $z1 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label32;

        r3 = staticinvoke <android.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options)>(r6, r2, r0, r1);

        goto label32;

     label31:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported kind: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label32:
        if r3 != null goto label39;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create the thumbnail in memory: origId=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", kind=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isVideo=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaStore", $r34);

        $r33 = virtualinvoke r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r37 = virtualinvoke $r33.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r32);

        $r36 = virtualinvoke $r37.<android.net.Uri$Builder: java.lang.String toString()>();

        $r35 = virtualinvoke $r36.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("thumbnails", "media");

        r69 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r35);

        if r4 != null goto label37;

        if r6 == null goto label33;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label33:
        $r38 = <android.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION>;

        r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r69, $r38, null, null, null);

        if r6 == null goto label34;

        $z2 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 != 0 goto label36;

     label34:
        if r6 == null goto label35;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label35:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        return null;

     label36:
        r4 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(1);

     label37:
        if z0 == 0 goto label38;

        r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>(r4, i2);

        goto label39;

     label38:
        r3 = staticinvoke <android.media.ThumbnailUtils: android.graphics.Bitmap createImageThumbnail(java.lang.String,int)>(r4, i2);

     label39:
        if r6 == null goto label40;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label40:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        goto label47;

     label41:
        $r63 := @caughtexception;

        r70 = $r63;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("MediaStore", r70);

     label42:
        if r6 == null goto label43;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label43:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        goto label47;

     label44:
        $r57 := @caughtexception;

        r11 = $r57;

     label45:
        if r6 == null goto label46;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label46:
        virtualinvoke r5.<android.media.MiniThumbFile: void deactivate()>();

        throw r11;

     label47:
        return r3;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label23 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
        catch android.database.sqlite.SQLiteException from label03 to label11 with label41;
        catch android.database.sqlite.SQLiteException from label13 to label16 with label41;
        catch android.database.sqlite.SQLiteException from label18 to label20 with label41;
        catch android.database.sqlite.SQLiteException from label22 to label34 with label41;
        catch android.database.sqlite.SQLiteException from label36 to label39 with label41;
        catch java.lang.Throwable from label03 to label11 with label44;
        catch java.lang.Throwable from label13 to label16 with label44;
        catch java.lang.Throwable from label18 to label20 with label44;
        catch java.lang.Throwable from label22 to label34 with label44;
        catch java.lang.Throwable from label36 to label39 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label44 to label45 with label44;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.Object $r1;

        <android.provider.MediaStore$InternalThumbnails: int DEFAULT_GROUP_ID> = 0;

        <android.provider.MediaStore$InternalThumbnails: int MICRO_KIND> = 3;

        <android.provider.MediaStore$InternalThumbnails: int FULL_SCREEN_KIND> = 2;

        <android.provider.MediaStore$InternalThumbnails: int MINI_KIND> = 1;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "_id";

        $r0[1] = "_data";

        <android.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.provider.MediaStore$InternalThumbnails: java.lang.Object sThumbBufLock> = $r1;

        return;
    }
}
