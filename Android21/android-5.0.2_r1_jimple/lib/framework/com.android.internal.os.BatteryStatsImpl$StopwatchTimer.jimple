public final class com.android.internal.os.BatteryStatsImpl$StopwatchTimer extends com.android.internal.os.BatteryStatsImpl$Timer
{
    final com.android.internal.os.BatteryStatsImpl$Uid mUid;
    final java.util.ArrayList mTimerPool;
    int mNesting;
    long mUpdateTime;
    long mAcquireTime;
    long mTimeout;
    boolean mInList;

    void <init>(com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        int i0;
        java.util.ArrayList r2;
        com.android.internal.os.BatteryStatsImpl$TimeBase r3;
        android.os.Parcel r4;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r4 := @parameter4: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(i0, r3, r4);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool> = r2;

        $l1 = virtualinvoke r4.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = $l1;

        return;
    }

    void <init>(com.android.internal.os.BatteryStatsImpl$Uid, int, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        int i0;
        java.util.ArrayList r2;
        com.android.internal.os.BatteryStatsImpl$TimeBase r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$Uid;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,com.android.internal.os.BatteryStatsImpl$TimeBase)>(i0, r3);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool> = r2;

        return;
    }

    void setTimeout(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout> = l0;

        return;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.os.Parcel r1;
        long l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, l1, l2;
        int $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i3 <= 0 goto label1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStopped(long,long,long)>(l0, l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l2;

     label1:
        return;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.util.Printer r1;
        java.lang.String r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNesting=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUpdateTime=");

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAcquireTime=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r11);

        return;
    }

    void startRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, l1, $l4, $l7;
        int $i2, $i3, $i5, $i6;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        $i3 = $i2 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = $i3;

        if $i2 != 0 goto label2;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l4 = l0 * 1000L;

        l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l4);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l1, $r3, null);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        $i6 = $i5 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount> = $i6;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = $l7;

     label2:
        return;
    }

    boolean isRunningLocked()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    long checkpointRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, l1, l2, $l4, $l5, $l6, $l7, $l8;
        int $i3;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i3 <= 0 goto label2;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l4 = l0 * 1000L;

        l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l4);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        $l8 = staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l1, $r3, r0);

        return $l8;

     label1:
        $l5 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        l2 = l1 - $l5;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l1;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l7 = $l6 + l2;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l7;

        return l2;

     label2:
        return 0L;
    }

    void stopRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, l1, $l5, $l6, $l7, $l8;
        int $i2, $i3, $i4, $i10, $i11;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        java.util.ArrayList $r2, $r3, $r4;
        byte $b9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i2 != 0 goto label1;

        return;

     label1:
        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        $i4 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = $i4;

        if $i4 != 0 goto label4;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l5 = l0 * 1000L;

        l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l5);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        staticinvoke <com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)>(l1, $r3, null);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        goto label3;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 1;

        $l6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long computeRunTimeLocked(long)>(l1);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l6;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 0;

     label3:
        $l8 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime>;

        $b9 = $l8 cmp $l7;

        if $b9 != 0 goto label4;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        $i10 = $i11 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount> = $i10;

     label4:
        return;
    }

    void stopAllRunningLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i1 <= 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    private static long refreshTimersLocked(long, java.util.ArrayList, com.android.internal.os.BatteryStatsImpl$StopwatchTimer)
    {
        long l0, l1, l4, l5, $l6, $l7, $l9, $l10;
        java.util.ArrayList r0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1, r2;
        int i2, i3;
        java.lang.Object $r3;
        byte $b8;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.ArrayList;

        r1 := @parameter2: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l1 = 0L;

        i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label4;

        $r3 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r3;

        $l6 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        l4 = l0 - $l6;

        $b8 = l4 cmp 0L;

        if $b8 <= 0 goto label3;

        $l7 = (long) i2;

        l5 = l4 / $l7;

        if r2 != r1 goto label2;

        l1 = l5;

     label2:
        $l10 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $l9 = $l10 + l5;

        r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime> = $l9;

     label3:
        r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = l0;

        i3 = i3 + -1;

        goto label1;

     label4:
        return l1;
    }

    protected long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        long l0, $l1, $l4, $l5, $l6, $l7, $l8, $l9, $l11, $l12, $l13, $l14, $l16;
        byte $b2, $b15;
        int $i3, $i10;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label1;

        $l13 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout>;

        $l12 = $l13 + $l11;

        $b15 = l0 cmp $l12;

        if $b15 <= 0 goto label1;

        $l16 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        $l14 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTimeout>;

        l0 = $l16 + $l14;

     label1:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i3 <= 0 goto label4;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime>;

        $l8 = l0 - $l6;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        $i10 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        goto label3;

     label2:
        $i10 = 1;

     label3:
        $l7 = (long) $i10;

        $l9 = $l8 / $l7;

        goto label5;

     label4:
        $l9 = 0L;

     label5:
        $l5 = $l4 + $l9;

        return $l5;
    }

    protected int computeCurrentCountLocked()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mCount>;

        return $i0;
    }

    boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        boolean z0, z1, $z3, $z4;
        int $i0, $i1;
        long $l2, $l3, $l4, $l5;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        z0 := @parameter0: boolean;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i0 > 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        if z1 == 0 goto label3;

        if z0 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(boolean)>($z3);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting>;

        if $i1 <= 0 goto label5;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$TimeBase mTimeBase>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = $l3 * 1000L;

        $l5 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>($l4);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mUpdateTime> = $l5;

     label5:
        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long mAcquireTime> = $l2;

        return z1;
    }

    void detach()
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void detach()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: java.util.ArrayList mTimerPool>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

     label1:
        return;
    }

    void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int mNesting> = 0;

        return;
    }
}
