public class android.graphics.drawable.GradientDrawable extends android.graphics.drawable.Drawable
{
    public static final int RECTANGLE;
    public static final int OVAL;
    public static final int LINE;
    public static final int RING;
    public static final int LINEAR_GRADIENT;
    public static final int RADIAL_GRADIENT;
    public static final int SWEEP_GRADIENT;
    private static final int RADIUS_TYPE_PIXELS;
    private static final int RADIUS_TYPE_FRACTION;
    private static final int RADIUS_TYPE_FRACTION_PARENT;
    private static final float DEFAULT_INNER_RADIUS_RATIO;
    private static final float DEFAULT_THICKNESS_RATIO;
    private android.graphics.drawable.GradientDrawable$GradientState mGradientState;
    private final android.graphics.Paint mFillPaint;
    private android.graphics.Rect mPadding;
    private android.graphics.Paint mStrokePaint;
    private android.graphics.ColorFilter mColorFilter;
    private int mAlpha;
    private final android.graphics.Path mPath;
    private final android.graphics.RectF mRect;
    private android.graphics.Paint mLayerPaint;
    private boolean mGradientIsDirty;
    private boolean mMutated;
    private android.graphics.Path mRingPath;
    private boolean mPathIsDirty;
    private float mGradientRadius;

    public void <init>()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r2 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>($r2, null);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources$Theme)>($r1, null);

        return;
    }

    public void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        int[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        r2 := @parameter1: int[];

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>(r1, r2);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources$Theme)>($r3, null);

        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable r0;
        float[] r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)>(f0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setStroke(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>(i0, i1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, r1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i1);

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, $r2, f0, f1);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void setStrokeInternal(int,int,float,float)>(i0, i1, f0, f1);

        return;
    }

    public void setStroke(int, android.content.res.ColorStateList, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        android.content.res.ColorStateList r1;
        float f0, f1;
        int[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.ColorStateList;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,android.content.res.ColorStateList,float,float)>(i0, r1, f0, f1);

        if r1 != null goto label1;

        i1 = 0;

        goto label2;

     label1:
        r2 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        i1 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r2, 0);

     label2:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void setStrokeInternal(int,int,float,float)>(i0, i1, f0, f1);

        return;
    }

    private void setStrokeInternal(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        float f0, f1, $f2;
        android.graphics.DashPathEffect r1, $r7;
        android.graphics.Paint $r2, $r3, $r4, $r5, $r9, $r10;
        byte $b2;
        float[] $r8;
        android.graphics.Paint$Style $r11;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r2 != null goto label1;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r9;

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

     label1:
        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f2 = (float) i0;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f2);

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i1);

        r1 = null;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

        $r7 = new android.graphics.DashPathEffect;

        $r8 = newarray (float)[2];

        $r8[0] = f0;

        $r8[1] = f1;

        specialinvoke $r7.<android.graphics.DashPathEffect: void <init>(float[],float)>($r8, 0.0F);

        r1 = $r7;

     label2:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r1);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)>(i0, i1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)>(f0, f1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float,int)>(f0, 0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public float getGradientRadius()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;
        float $f0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i0 == 1 goto label1;

        return 0.0F;

     label1:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        $f0 = r0.<android.graphics.drawable.GradientDrawable: float mGradientRadius>;

        return $f0;
    }

    public void setUseLevel(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>($r1, z0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    private int modulateAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $i4 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i2 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i3 = $i2 >> 7;

        i1 = $i4 + $i3;

        $i5 = i0 * i1;

        $i6 = $i5 >> 8;

        return $i6;
    }

    public android.graphics.drawable.GradientDrawable$Orientation getOrientation()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        return $r2;
    }

    public void setOrientation(android.graphics.drawable.GradientDrawable$Orientation)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = r1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setColors(int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setColors(int[])>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19;
        android.graphics.Paint $r3, $r4, $r5, $r7, $r9, $r12, $r13, $r14, $r15, $r17, $r18, $r25, $r27, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r40, $r42, $r43, $r44, $r45, $r48, $r51, $r52, $r55, $r59, $r60, $r61, $r64, $r65, $r66;
        android.graphics.ColorFilter $r6, $r10, $r21, $r37, $r53, $r62;
        float[] $r11;
        byte $b5, $b14;
        android.graphics.RectF $r16, $r20, $r22, $r23, $r24, $r26, $r39, $r41, $r50, $r54, $r56, $r57, r67;
        android.graphics.Shader $r19;
        android.graphics.Path $r28, $r30, r68;
        android.content.res.ColorStateList $r47;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $z3 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        if $z3 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        i0 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r4 == null goto label02;

        $r65 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i13 = virtualinvoke $r65.<android.graphics.Paint: int getAlpha()>();

        goto label03;

     label02:
        $i13 = 0;

     label03:
        i1 = $i13;

        i2 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i0);

        i3 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i1);

        if i3 <= 0 goto label04;

        $r61 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r61 == null goto label04;

        $r66 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f18 = virtualinvoke $r66.<android.graphics.Paint: float getStrokeWidth()>();

        $b14 = $f18 cmpl 0.0F;

        if $b14 <= 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z0 = $z9;

        if i2 <= 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z1 = $z7;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if z0 == 0 goto label09;

        if z1 == 0 goto label09;

        $i11 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i11 == 2 goto label09;

        if i3 >= 255 goto label09;

        $i12 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if $i12 < 255 goto label08;

        $r62 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r62 == null goto label09;

     label08:
        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        z2 = $z8;

        if z2 == 0 goto label12;

        $r44 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        if $r44 != null goto label11;

        $r64 = new android.graphics.Paint;

        specialinvoke $r64.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint> = $r64;

     label11:
        $r45 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $z6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r45.<android.graphics.Paint: void setDither(boolean)>($z6);

        $r51 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $i9 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        virtualinvoke $r51.<android.graphics.Paint: void setAlpha(int)>($i9);

        $r52 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $r53 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r52.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r53);

        $r48 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        f0 = virtualinvoke $r48.<android.graphics.Paint: float getStrokeWidth()>();

        $r50 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f12 = $r50.<android.graphics.RectF: float left>;

        $f15 = $f12 - f0;

        $r56 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f13 = $r56.<android.graphics.RectF: float top>;

        $f14 = $f13 - f0;

        $r57 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f10 = $r57.<android.graphics.RectF: float right>;

        $f17 = $f10 + f0;

        $r54 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f11 = $r54.<android.graphics.RectF: float bottom>;

        $f16 = $f11 + f0;

        $r55 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f15, $f14, $f17, $f16, $r55, 4);

        $r60 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r60.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        $r59 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r59.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        goto label14;

     label12:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i2);

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $z4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r7.<android.graphics.Paint: void setDither(boolean)>($z4);

        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r9.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r6);

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r10 == null goto label13;

        $r47 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        if $r47 != null goto label13;

        $r43 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i7 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i8 = $i7 << 24;

        virtualinvoke $r43.<android.graphics.Paint: void setColor(int)>($i8);

     label13:
        if z0 == 0 goto label14;

        $r42 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r42.<android.graphics.Paint: void setAlpha(int)>(i3);

        $r36 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $z5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        virtualinvoke $r36.<android.graphics.Paint: void setDither(boolean)>($z5);

        $r38 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r37 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r38.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r37);

     label14:
        $i4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        tableswitch($i4)
        {
            case 0: goto label15;
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label23;
            default: goto label24;
        };

     label15:
        $r11 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r11 == null goto label16;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void buildPathIfDirty()>();

        $r30 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r31 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r30, $r31);

        if z0 == 0 goto label24;

        $r28 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r29 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r28, $r29);

        goto label24;

     label16:
        $f2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b5 = $f2 cmpl 0.0F;

        if $b5 <= 0 goto label18;

        $f4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $r23 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f3 = virtualinvoke $r23.<android.graphics.RectF: float width()>();

        $r22 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f6 = virtualinvoke $r22.<android.graphics.RectF: float height()>();

        $f7 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f6);

        $f5 = $f7 * 0.5F;

        f19 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f5);

        $r26 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r27 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r26, f19, f19, $r27);

        if z0 == 0 goto label17;

        $r24 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r25 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r24, f19, f19, $r25);

     label17:
        goto label24;

     label18:
        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i6 = virtualinvoke $r12.<android.graphics.Paint: int getColor()>();

        if $i6 != 0 goto label19;

        $r21 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r21 != null goto label19;

        $r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r19 = virtualinvoke $r18.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if $r19 == null goto label20;

     label19:
        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r13 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r16, $r13);

     label20:
        if z0 == 0 goto label24;

        $r20 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r20, $r15);

        goto label24;

     label21:
        $r39 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r34 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r39, $r34);

        if z0 == 0 goto label24;

        $r41 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r40 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r41, $r40);

        goto label24;

     label22:
        r67 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        f1 = virtualinvoke r67.<android.graphics.RectF: float centerY()>();

        if z0 == 0 goto label24;

        $f8 = r67.<android.graphics.RectF: float left>;

        $f9 = r67.<android.graphics.RectF: float right>;

        $r35 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f8, f1, $f9, f1, $r35);

        goto label24;

     label23:
        r68 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $r33 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r68, $r33);

        if z0 == 0 goto label24;

        $r32 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r68, $r32);

     label24:
        if z2 == 0 goto label25;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        goto label26;

     label25:
        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setAlpha(int)>(i0);

        if z0 == 0 goto label26;

        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r14.<android.graphics.Paint: void setAlpha(int)>(i1);

     label26:
        return;
    }

    private void buildPathIfDirty()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        boolean $z0;
        android.graphics.Path $r2, $r6;
        android.graphics.Path$Direction $r3;
        float[] $r4;
        android.graphics.RectF $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void reset()>();

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r3 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r6.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>($r5, $r4, $r3);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

     label1:
        return;
    }

    private android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.graphics.RectF r2, r3, $r6, $r7, $r8, $r9, r17;
        android.graphics.Path r4, $r5, $r10, $r11, $r15, $r16;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i4, $i5, $i6;
        android.graphics.Path$Direction $r12, $r14;
        byte $b2, $b3;
        android.graphics.Path$FillType $r13;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r5 == null goto label02;

        $z2 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        if $z2 == 0 goto label01;

        $z1 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z1 != 0 goto label02;

     label01:
        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        return $r16;

     label02:
        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        if $z0 == 0 goto label03;

        $i6 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f21 = (float) $i6;

        $f22 = 360.0F * $f21;

        $f23 = $f22 / 10000.0F;

        goto label04;

     label03:
        $f23 = 360.0F;

     label04:
        f0 = $f23;

        $r6 = new android.graphics.RectF;

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        specialinvoke $r6.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r7);

        r2 = $r6;

        $f5 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f1 = $f5 / 2.0F;

        $f6 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f2 = $f6 / 2.0F;

        $i0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i0 == -1 goto label05;

        $i4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        $f19 = (float) $i4;

        goto label06;

     label05:
        $f7 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $f8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        $f19 = $f7 / $f8;

     label06:
        f3 = $f19;

        $i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i1 == -1 goto label07;

        $i5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        $f20 = (float) $i5;

        goto label08;

     label07:
        $f10 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $f9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        $f20 = $f10 / $f9;

     label08:
        f4 = $f20;

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r2);

        r3 = $r8;

        $f12 = f1 - f4;

        $f11 = f2 - f4;

        virtualinvoke r3.<android.graphics.RectF: void inset(float,float)>($f12, $f11);

        $r9 = new android.graphics.RectF;

        specialinvoke $r9.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r3);

        r17 = $r9;

        $f13 = neg f3;

        $f14 = neg f3;

        virtualinvoke r17.<android.graphics.RectF: void inset(float,float)>($f13, $f14);

        $r11 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r11 != null goto label09;

        $r15 = new android.graphics.Path;

        specialinvoke $r15.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = $r15;

        goto label10;

     label09:
        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        virtualinvoke $r10.<android.graphics.Path: void reset()>();

     label10:
        r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        $b2 = f0 cmpg 360.0F;

        if $b2 >= 0 goto label11;

        $b3 = f0 cmpl -360.0F;

        if $b3 <= 0 goto label11;

        $r13 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        virtualinvoke r4.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r13);

        $f15 = f1 + f4;

        virtualinvoke r4.<android.graphics.Path: void moveTo(float,float)>($f15, f2);

        $f17 = f1 + f4;

        $f18 = $f17 + f3;

        virtualinvoke r4.<android.graphics.Path: void lineTo(float,float)>($f18, f2);

        virtualinvoke r4.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>(r17, 0.0F, f0, 0);

        $f16 = neg f0;

        virtualinvoke r4.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>(r3, f0, $f16, 0);

        virtualinvoke r4.<android.graphics.Path: void close()>();

        goto label12;

     label11:
        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke r4.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>(r17, $r12);

        $r14 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke r4.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>(r3, $r14);

     label12:
        return r4;
    }

    public void setColor(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.content.res.ColorStateList $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setColorStateList(android.content.res.ColorStateList)>($r2);

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setColor(android.content.res.ColorStateList)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.ColorStateList r1;
        int i0;
        int[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;
        android.graphics.Paint $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void setColorStateList(android.content.res.ColorStateList)>(r1);

        if r1 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        r2 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        i0 = virtualinvoke r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r2, 0);

     label2:
        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;
        boolean z0;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.ColorStateList r3, r7;
        int i0, i1, i2, i3;
        android.graphics.Paint $r4, $r5, r6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        z0 = 0;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        if r3 == null goto label1;

        i0 = virtualinvoke r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r1, 0);

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        i1 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        if i1 == i0 goto label1;

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(i0);

        z0 = 1;

     label1:
        r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if r6 == null goto label2;

        r7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

        if r7 == null goto label2;

        i2 = virtualinvoke r7.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r1, 0);

        i3 = virtualinvoke r6.<android.graphics.Paint: int getColor()>();

        if i3 == i2 goto label2;

        virtualinvoke r6.<android.graphics.Paint: void setColor(int)>(i2);

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return 1;

     label3:
        return 0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        boolean $z0, $z1, $z2, $z3;
        android.content.res.ColorStateList $r2, $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 != 0 goto label2;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        if $r2 == null goto label1;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        $z3 = virtualinvoke $r5.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z3 != 0 goto label2;

     label1:
        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

        if $r3 == null goto label3;

        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

        $z2 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z2 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, $i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if i0 == $i1 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = i0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        return $i0;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z1 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        if z0 == $z1 goto label1;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = z0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.ColorFilter r1, $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if r1 == $r2 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter> = r1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public int getOpacity()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        boolean $z0, $z1;
        byte $b1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if $i0 != 255 goto label1;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean isOpaqueForState()>();

        if $z1 == 0 goto label1;

        $b1 = -1;

        goto label2;

     label1:
        $b1 = -3;

     label2:
        return $b1;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return 1;
    }

    private boolean ensureValidRect()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, f66, f67, f68, f69, f70;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int[] r3, $r14, $r22, r28;
        android.graphics.RectF r4, $r6, $r8;
        float[] r5, $r15, $r26;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Paint $r7, $r10, $r12, $r17, $r25, $r27;
        android.content.res.ColorStateList $r9;
        android.graphics.SweepGradient $r13;
        byte $b22;
        android.graphics.Shader$TileMode $r18, $r21;
        android.graphics.RadialGradient $r19;
        android.graphics.LinearGradient $r20;
        android.graphics.drawable.GradientDrawable$Orientation $r23;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty>;

        if $z0 == 0 goto label27;

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 0;

        r1 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect getBounds()>();

        f0 = 0.0F;

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r7 == null goto label01;

        $r27 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f65 = virtualinvoke $r27.<android.graphics.Paint: float getStrokeWidth()>();

        f0 = $f65 * 0.5F;

     label01:
        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i2 = r1.<android.graphics.Rect: int left>;

        $f8 = (float) $i2;

        $f15 = $f8 + f0;

        $i3 = r1.<android.graphics.Rect: int top>;

        $f9 = (float) $i3;

        $f14 = $f9 + f0;

        $i4 = r1.<android.graphics.Rect: int right>;

        $f10 = (float) $i4;

        $f12 = $f10 - f0;

        $i5 = r1.<android.graphics.Rect: int bottom>;

        $f11 = (float) $i5;

        $f13 = $f11 - f0;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>($f15, $f14, $f12, $f13);

        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if r3 == null goto label27;

        r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i6 != 0 goto label13;

        $z5 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $z5 == 0 goto label02;

        $i28 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f57 = (float) $i28;

        $f64 = $f57 / 10000.0F;

        goto label03;

     label02:
        $f64 = 1.0F;

     label03:
        f5 = $f64;

        $r22 = <android.graphics.drawable.GradientDrawable$1: int[] $SwitchMap$android$graphics$drawable$GradientDrawable$Orientation>;

        $r23 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        $i27 = virtualinvoke $r23.<android.graphics.drawable.GradientDrawable$Orientation: int ordinal()>();

        $i26 = $r22[$i27];

        tableswitch($i26)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            default: goto label11;
        };

     label04:
        f1 = r4.<android.graphics.RectF: float left>;

        f3 = r4.<android.graphics.RectF: float top>;

        f2 = f1;

        $f51 = r4.<android.graphics.RectF: float bottom>;

        f4 = f5 * $f51;

        goto label12;

     label05:
        f1 = r4.<android.graphics.RectF: float right>;

        f3 = r4.<android.graphics.RectF: float top>;

        $f61 = r4.<android.graphics.RectF: float left>;

        f2 = f5 * $f61;

        $f60 = r4.<android.graphics.RectF: float bottom>;

        f4 = f5 * $f60;

        goto label12;

     label06:
        f1 = r4.<android.graphics.RectF: float right>;

        f3 = r4.<android.graphics.RectF: float top>;

        $f62 = r4.<android.graphics.RectF: float left>;

        f2 = f5 * $f62;

        f4 = f3;

        goto label12;

     label07:
        f1 = r4.<android.graphics.RectF: float right>;

        f3 = r4.<android.graphics.RectF: float bottom>;

        $f52 = r4.<android.graphics.RectF: float left>;

        f2 = f5 * $f52;

        $f63 = r4.<android.graphics.RectF: float top>;

        f4 = f5 * $f63;

        goto label12;

     label08:
        f1 = r4.<android.graphics.RectF: float left>;

        f3 = r4.<android.graphics.RectF: float bottom>;

        f2 = f1;

        $f53 = r4.<android.graphics.RectF: float top>;

        f4 = f5 * $f53;

        goto label12;

     label09:
        f1 = r4.<android.graphics.RectF: float left>;

        f3 = r4.<android.graphics.RectF: float bottom>;

        $f55 = r4.<android.graphics.RectF: float right>;

        f2 = f5 * $f55;

        $f54 = r4.<android.graphics.RectF: float top>;

        f4 = f5 * $f54;

        goto label12;

     label10:
        f1 = r4.<android.graphics.RectF: float left>;

        f3 = r4.<android.graphics.RectF: float top>;

        $f56 = r4.<android.graphics.RectF: float right>;

        f2 = f5 * $f56;

        f4 = f3;

        goto label12;

     label11:
        f1 = r4.<android.graphics.RectF: float left>;

        f3 = r4.<android.graphics.RectF: float top>;

        $f59 = r4.<android.graphics.RectF: float right>;

        f2 = f5 * $f59;

        $f58 = r4.<android.graphics.RectF: float bottom>;

        f4 = f5 * $f58;

     label12:
        $r25 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r20 = new android.graphics.LinearGradient;

        $r26 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r21 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r20.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f1, f3, f2, f4, r3, $r26, $r21);

        virtualinvoke $r25.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r20);

        goto label26;

     label13:
        $i7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i7 != 1 goto label18;

        $f39 = r4.<android.graphics.RectF: float left>;

        $f38 = r4.<android.graphics.RectF: float right>;

        $f37 = r4.<android.graphics.RectF: float left>;

        $f33 = $f38 - $f37;

        $f34 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $f35 = $f33 * $f34;

        f66 = $f39 + $f35;

        $f41 = r4.<android.graphics.RectF: float top>;

        $f42 = r4.<android.graphics.RectF: float bottom>;

        $f36 = r4.<android.graphics.RectF: float top>;

        $f44 = $f42 - $f36;

        $f43 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $f40 = $f44 * $f43;

        f67 = $f41 + $f40;

        f68 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$500(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $i20 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: int access$600(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $i20 != 1 goto label14;

        $i25 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        $i24 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i25, $i24);

        $f46 = (float) $i23;

        f68 = f68 * $f46;

        goto label15;

     label14:
        $i19 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: int access$600(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $i19 != 2 goto label15;

        $f50 = virtualinvoke r4.<android.graphics.RectF: float width()>();

        $f47 = virtualinvoke r4.<android.graphics.RectF: float height()>();

        $f48 = staticinvoke <java.lang.Math: float min(float,float)>($f50, $f47);

        f68 = f68 * $f48;

     label15:
        $z4 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $z4 == 0 goto label16;

        $i21 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f45 = (float) $i21;

        $f49 = $f45 / 10000.0F;

        f68 = f68 * $f49;

     label16:
        r0.<android.graphics.drawable.GradientDrawable: float mGradientRadius> = f68;

        $b22 = f68 cmpl 0.0F;

        if $b22 != 0 goto label17;

        f68 = 0.001F;

     label17:
        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r19 = new android.graphics.RadialGradient;

        $r18 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r19.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f66, f67, f68, r3, null, $r18);

        virtualinvoke $r17.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r19);

        goto label26;

     label18:
        $i8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i8 != 2 goto label26;

        $f16 = r4.<android.graphics.RectF: float left>;

        $f19 = r4.<android.graphics.RectF: float right>;

        $f18 = r4.<android.graphics.RectF: float left>;

        $f17 = $f19 - $f18;

        $f22 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $f23 = $f17 * $f22;

        f69 = $f16 + $f23;

        $f27 = r4.<android.graphics.RectF: float top>;

        $f21 = r4.<android.graphics.RectF: float bottom>;

        $f20 = r4.<android.graphics.RectF: float top>;

        $f26 = $f21 - $f20;

        $f25 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $f24 = $f26 * $f25;

        f70 = $f27 + $f24;

        r28 = r3;

        r5 = null;

        $z3 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $z3 == 0 goto label25;

        r28 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors>;

        i0 = lengthof r3;

        if r28 == null goto label19;

        $i18 = lengthof r28;

        $i16 = i0 + 1;

        if $i18 == $i16 goto label20;

     label19:
        $i11 = i0 + 1;

        $r14 = newarray (int)[$i11];

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors> = $r14;

        r28 = $r14;

     label20:
        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r3, 0, r28, 0, i0);

        $i10 = i0 - 1;

        $i9 = r3[$i10];

        r28[i0] = $i9;

        r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions>;

        $i13 = i0 - 1;

        $f28 = (float) $i13;

        f6 = 1.0F / $f28;

        if r5 == null goto label21;

        $i15 = lengthof r5;

        $i14 = i0 + 1;

        if $i15 == $i14 goto label22;

     label21:
        $i12 = i0 + 1;

        $r15 = newarray (float)[$i12];

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions> = $r15;

        r5 = $r15;

     label22:
        $i17 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f30 = (float) $i17;

        f7 = $f30 / 10000.0F;

        i1 = 0;

     label23:
        if i1 >= i0 goto label24;

        $f31 = (float) i1;

        $f32 = $f31 * f6;

        $f29 = $f32 * f7;

        r5[i1] = $f29;

        i1 = i1 + 1;

        goto label23;

     label24:
        r5[i0] = 1.0F;

     label25:
        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r13 = new android.graphics.SweepGradient;

        specialinvoke $r13.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>(f69, f70, r28, r5);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r13);

     label26:
        $r9 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        if $r9 != null goto label27;

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(-16777216);

     label27:
        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $z2 = virtualinvoke $r6.<android.graphics.RectF: boolean isEmpty()>();

        if $z2 != 0 goto label28;

        $z1 = 1;

        goto label29;

     label28:
        $z1 = 0;

     label29:
        return $z1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;
        android.graphics.drawable.GradientDrawable$GradientState $r7;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r6 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        r5 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 1);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: void access$700(android.graphics.drawable.GradientDrawable$GradientState)>($r7);

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.TypedArray r3;
        int[] $r4, $r5, $r6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if r2 == null goto label1;

        $r4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        if $r4 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        $r5 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r6, $r5);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void applyThemeChildElements(android.content.res.Resources$Theme)>(r1);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: void access$700(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r3;
        boolean $z0, $z1, $z2, $z4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs> = $r3;

        $i3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(2, $i3);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = $i4;

        $z0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, $z0);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: boolean mDither> = $z1;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i5 != 3 goto label3;

        $i6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        $i7 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, $i6);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i7;

        $i8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i8 != -1 goto label1;

        $f3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        $f2 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f3);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f2;

     label1:
        $i9 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        $i11 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, $i9);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i11;

        $i10 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i10 != -1 goto label2;

        $f1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        $f0 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(4, $f1);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f0;

     label2:
        $z2 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $z4 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, $z2);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$102(android.graphics.drawable.GradientDrawable$GradientState,boolean)>(r2, $z4);

     label3:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if r1 == null goto label2;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mThemeAttrs>;

        if $r2 != null goto label1;

        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        if $r3 != null goto label1;

        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        if $r4 != null goto label1;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        if $r5 != null goto label1;

        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        if $r6 != null goto label1;

        $r7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        if $r7 != null goto label1;

        $r8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        if $r8 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void applyThemeChildElements(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.TypedArray r3, r28, r29, r30, r31, r32;
        org.xmlpull.v1.XmlPullParserException r4, $r26;
        java.lang.Throwable r5, $r25;
        int[] $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24;
        android.content.res.Resources $r22;
        java.lang.RuntimeException $r27;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        if $r6 == null goto label01;

        $r23 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize>;

        $r24 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r23, $r24);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSize(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label01:
        $r7 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        if $r7 == null goto label07;

        $r20 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient>;

        $r21 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        r28 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r20, $r21);

     label02:
        $r22 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.Resources getResources()>();

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray)>($r22, r28);

     label03:
        virtualinvoke r28.<android.content.res.TypedArray: void recycle()>();

        goto label07;

     label04:
        $r26 := @caughtexception;

        r4 = $r26;

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r27;

     label05:
        $r25 := @caughtexception;

        r5 = $r25;

     label06:
        virtualinvoke r28.<android.content.res.TypedArray: void recycle()>();

        throw r5;

     label07:
        $r8 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        if $r8 == null goto label08;

        $r19 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid>;

        $r18 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        r29 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r19, $r18);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSolid(android.content.res.TypedArray)>(r29);

        virtualinvoke r29.<android.content.res.TypedArray: void recycle()>();

     label08:
        $r9 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        if $r9 == null goto label09;

        $r16 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke>;

        $r17 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        r30 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r16, $r17);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableStroke(android.content.res.TypedArray)>(r30);

        virtualinvoke r30.<android.content.res.TypedArray: void recycle()>();

     label09:
        $r10 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        if $r10 == null goto label10;

        $r15 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners>;

        $r14 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r31 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r15, $r14);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateDrawableCorners(android.content.res.TypedArray)>(r31);

        virtualinvoke r31.<android.content.res.TypedArray: void recycle()>();

     label10:
        $r11 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        if $r11 == null goto label11;

        $r13 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding>;

        $r12 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        r32 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r13, $r12);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawablePadding(android.content.res.TypedArray)>(r32);

        virtualinvoke r32.<android.content.res.TypedArray: void recycle()>();

     label11:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label06 with label05;
    }

    private void inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5, r17, r18, r19, r20, r21;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r6, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r7, $r8, $r9;
        int[] $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = $i3 + 1;

     label01:
        $i4 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i4;

        if $i4 == 1 goto label12;

        $i5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i5;

        if $i5 >= i1 goto label02;

        if i0 == 3 goto label12;

     label02:
        if i0 == 2 goto label03;

        goto label01;

     label03:
        if i2 <= i1 goto label04;

        goto label01;

     label04:
        r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z0 == 0 goto label05;

        $r16 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        r5 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r16);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSize(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label05:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z1 == 0 goto label06;

        $r14 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        r17 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r14);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray)>(r1, r17);

        virtualinvoke r17.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label06:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("solid");

        if $z3 == 0 goto label07;

        $r15 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        r18 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r15);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableSolid(android.content.res.TypedArray)>(r18);

        virtualinvoke r18.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label07:
        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("stroke");

        if $z2 == 0 goto label08;

        $r13 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        r19 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r13);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawableStroke(android.content.res.TypedArray)>(r19);

        virtualinvoke r19.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label08:
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z5 == 0 goto label09;

        $r12 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r20 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r12);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateDrawableCorners(android.content.res.TypedArray)>(r20);

        virtualinvoke r20.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label09:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z4 == 0 goto label10;

        $r11 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        r21 = staticinvoke <android.graphics.drawable.GradientDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r11);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void updateGradientDrawablePadding(android.content.res.TypedArray)>(r21);

        virtualinvoke r21.<android.content.res.TypedArray: void recycle()>();

        goto label11;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <shape>: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r10);

     label11:
        goto label01;

     label12:
        return;
    }

    private void updateGradientDrawablePadding(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.graphics.Rect r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrPadding> = $r4;

        $r5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if $r5 != null goto label1;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r6;

     label1:
        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        $i3 = r3.<android.graphics.Rect: int left>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(0, $i3);

        $i5 = r3.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, $i5);

        $i7 = r3.<android.graphics.Rect: int right>;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, $i7);

        $i9 = r3.<android.graphics.Rect: int bottom>;

        $i10 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, $i9);

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i6, $i8, $i10);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = r3;

        return;
    }

    private void updateDrawableCorners(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        int[] $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        float[] $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i7 = $i5 | $i6;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i7;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrCorners> = $r3;

        $f0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $i8 = (int) $f0;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i8);

        $f1 = (float) i0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>($f1);

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, i0);

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, i0);

        i3 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, i0);

        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, i0);

        if i1 != i0 goto label1;

        if i2 != i0 goto label1;

        if i3 != i0 goto label1;

        if i4 == i0 goto label2;

     label1:
        $r4 = newarray (float)[8];

        $f2 = (float) i1;

        $r4[0] = $f2;

        $f4 = (float) i1;

        $r4[1] = $f4;

        $f3 = (float) i2;

        $r4[2] = $f3;

        $f6 = (float) i2;

        $r4[3] = $f6;

        $f5 = (float) i4;

        $r4[4] = $f5;

        $f8 = (float) i4;

        $r4[5] = $f8;

        $f7 = (float) i3;

        $r4[6] = $f7;

        $f9 = (float) i3;

        $r4[7] = $f9;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>($r4);

     label2:
        return;
    }

    private void updateGradientDrawableStroke(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        float f0, f1, $f2, $f3;
        android.content.res.ColorStateList r3;
        int[] $r4;
        byte $b6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i4;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrStroke> = $r4;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, i0);

        $f2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(2, $f2);

        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(1);

        if r3 != null goto label1;

        r3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

     label1:
        $b6 = f0 cmpl 0.0F;

        if $b6 == 0 goto label2;

        $f3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        f1 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f3);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>(i1, r3, f0, f1);

        goto label3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>(i1, r3);

     label3:
        return;
    }

    private void updateGradientDrawableSolid(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.content.res.ColorStateList r3;
        int $i0, $i1, $i2;
        int[] $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSolid> = $r4;

        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(0);

        if r3 == null goto label1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>(r3);

     label1:
        return;
    }

    private void updateGradientDrawableGradient(android.content.res.Resources, android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        android.content.res.TypedArray r2;
        android.graphics.drawable.GradientDrawable$GradientState r3;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, i21;
        boolean z0, $z1, $z3;
        float f0, $f1, $f3, $f4, $f6, $f8, $f9, $f10, $f11;
        byte b4, $b20;
        int[] $r4, $r5, $r6, $r7, $r29, $r30, $r35, $r36;
        java.lang.String $r8, $r12, $r22, $r34;
        java.lang.StringBuilder $r9, $r11, $r13, $r14, $r21, $r23, $r24, $r33;
        org.xmlpull.v1.XmlPullParserException $r10, $r28;
        android.util.DisplayMetrics $r15;
        android.graphics.drawable.GradientDrawable$Orientation $r16, $r17, $r18, $r19, $r20, $r25, $r26, $r27;
        float[] $r31, $r32, $r37, $r38;
        android.util.TypedValue r39;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i6 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i7 = virtualinvoke r2.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i8 = $i6 | $i7;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i8;

        $r4 = virtualinvoke r2.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrGradient> = $r4;

        $f1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f3 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r2, 5, $f1);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$302(android.graphics.drawable.GradientDrawable$GradientState,float)>(r3, $f3);

        $f4 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f6 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r2, 6, $f4);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$402(android.graphics.drawable.GradientDrawable$GradientState,float)>(r3, $f6);

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z1);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>(r3, $z3);

        $i10 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        $i9 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(4, $i10);

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = $i9;

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(8);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(8, 0);

        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        if z0 == 0 goto label03;

        $r35 = newarray (int)[3];

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r35;

        $r36 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r36[0] = i0;

        $r29 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r29[1] = i1;

        $r30 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r30[2] = i2;

        $r31 = newarray (float)[3];

        r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r31;

        $r32 = r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r32[0] = 0.0F;

        $r38 = r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f11 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $b20 = $f11 cmpl 0.5F;

        if $b20 == 0 goto label01;

        $f10 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        goto label02;

     label01:
        $f10 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

     label02:
        $r38[1] = $f10;

        $r37 = r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r37[2] = 1.0F;

        goto label04;

     label03:
        $r5 = newarray (int)[2];

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r5;

        $r6 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r6[0] = i0;

        $r7 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r7[1] = i2;

     label04:
        $i12 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i12 != 0 goto label15;

        $i15 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle>;

        $f9 = (float) $i15;

        $f8 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f9);

        i3 = (int) $f8;

        i21 = i3 % 360;

        $i18 = i21 % 45;

        if $i18 == 0 goto label05;

        $r28 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'angle\' attribute to ");

        $r33 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("be a multiple of 45");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label05:
        r3.<android.graphics.drawable.GradientDrawable$GradientState: int mAngle> = i21;

        lookupswitch(i21)
        {
            case 0: goto label06;
            case 45: goto label07;
            case 90: goto label08;
            case 135: goto label09;
            case 180: goto label10;
            case 225: goto label11;
            case 270: goto label12;
            case 315: goto label13;
            default: goto label14;
        };

     label06:
        $r27 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation LEFT_RIGHT>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r27;

        goto label14;

     label07:
        $r26 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BL_TR>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r26;

        goto label14;

     label08:
        $r25 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BOTTOM_TOP>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r25;

        goto label14;

     label09:
        $r17 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BR_TL>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r17;

        goto label14;

     label10:
        $r18 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation RIGHT_LEFT>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r18;

        goto label14;

     label11:
        $r19 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TR_BL>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r19;

        goto label14;

     label12:
        $r20 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r20;

        goto label14;

     label13:
        $r16 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TL_BR>;

        r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r16;

     label14:
        goto label21;

     label15:
        r39 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(7);

        if r39 == null goto label20;

        $i13 = r39.<android.util.TypedValue: int type>;

        if $i13 != 6 goto label18;

        f0 = virtualinvoke r39.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        $i17 = r39.<android.util.TypedValue: int data>;

        $i16 = $i17 >> 0;

        i5 = $i16 & 15;

        if i5 != 1 goto label16;

        b4 = 2;

        goto label17;

     label16:
        b4 = 1;

     label17:
        goto label19;

     label18:
        $r15 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = virtualinvoke r39.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r15);

        b4 = 0;

     label19:
        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$502(android.graphics.drawable.GradientDrawable$GradientState,float)>(r3, f0);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: int access$602(android.graphics.drawable.GradientDrawable$GradientState,int)>(r3, b4);

        goto label21;

     label20:
        $i11 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i11 != 1 goto label21;

        $r10 = new org.xmlpull.v1.XmlPullParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'gradientRadius\' ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute with radial type");

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label21:
        return;
    }

    private void updateGradientDrawableSize(android.content.res.TypedArray)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.TypedArray r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i2;

        $r3 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int[] mAttrSize> = $r3;

        $i3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i3);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = $i4;

        $i5 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i5);

        r2.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = $i6;

        return;
    }

    private static float getFloatOrFraction(android.content.res.TypedArray, int, float)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        float f0, f1, $f2;
        android.util.TypedValue r1;
        boolean z0, $z1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        f1 = f0;

        if r1 == null goto label5;

        $i1 = r1.<android.util.TypedValue: int type>;

        if $i1 != 6 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $f2 = virtualinvoke r1.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        goto label4;

     label3:
        $f2 = virtualinvoke r1.<android.util.TypedValue: float getFloat()>();

     label4:
        f1 = $f2;

     label5:
        return f1;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        return $r2;
    }

    private boolean isOpaqueForState()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0, $i1, $i2;
        android.graphics.Paint $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i0 < 0 goto label1;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r3 == null goto label1;

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i2 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>($i2);

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i1 = virtualinvoke $r2.<android.graphics.Paint: int getColor()>();

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable: boolean isOpaque(int)>($i1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Outline r1;
        android.graphics.drawable.GradientDrawable$GradientState r2;
        android.graphics.Rect r3;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;
        float[] $r4;
        byte $b3;
        android.graphics.Paint $r5, $r7;
        android.graphics.Path $r6;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Outline;

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        r3 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect getBounds()>();

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$800(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        if $z0 == 0 goto label01;

        $z1 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean isOpaqueForState()>();

        if $z1 == 0 goto label01;

        $i10 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $f11 = (float) $i10;

        $f12 = $f11 / 255.0F;

        goto label02;

     label01:
        $f12 = 0.0F;

     label02:
        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>($f12);

        $i2 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        tableswitch($i2)
        {
            case 0: goto label03;
            case 1: goto label06;
            case 2: goto label07;
            default: goto label10;
        };

     label03:
        $r4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r4 == null goto label04;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void buildPathIfDirty()>();

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke r1.<android.graphics.Outline: void setConvexPath(android.graphics.Path)>($r6);

        return;

     label04:
        f0 = 0.0F;

        $f3 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b3 = $f3 cmpl 0.0F;

        if $b3 <= 0 goto label05;

        $f4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $i5 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $i4 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $f5 = (float) $i6;

        $f6 = $f5 * 0.5F;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f4, $f6);

     label05:
        virtualinvoke r1.<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>(r3, f0);

        return;

     label06:
        virtualinvoke r1.<android.graphics.Outline: void setOval(android.graphics.Rect)>(r3);

        return;

     label07:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r5 != null goto label08;

        $f10 = 1.0E-4F;

        goto label09;

     label08:
        $r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f7 = virtualinvoke $r7.<android.graphics.Paint: float getStrokeWidth()>();

        $f10 = $f7 * 0.5F;

     label09:
        f1 = $f10;

        $i7 = virtualinvoke r3.<android.graphics.Rect: int centerY()>();

        f2 = (float) $i7;

        $f8 = f2 - f1;

        $d1 = (double) $f8;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        i0 = (int) $d0;

        $f9 = f2 + f1;

        $d2 = (double) $f9;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i1 = (int) $d3;

        $i8 = r3.<android.graphics.Rect: int left>;

        $i9 = r3.<android.graphics.Rect: int right>;

        virtualinvoke r1.<android.graphics.Outline: void setRect(int,int,int,int)>($i8, i0, $i9, i1);

        return;

     label10:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r3);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r2;

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    static boolean isOpaque(int)
    {
        int i0, $i1, $i2;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        $i2 = $i1 & 255;

        if $i2 != 255 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1, $r6;
        android.content.res.Resources$Theme r2;
        android.graphics.Paint $r3;
        android.graphics.Path $r4;
        android.graphics.RectF $r5;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint> = $r3;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = 255;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect> = $r5;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        $r6 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r6.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r6;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources$Theme)>(r2);

        goto label2;

     label1:
        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = r1;

     label2:
        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mGradientIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 0;

        return;
    }

    private void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        int[] r2, $r4, r21;
        int i0, $i1, $i2, i4;
        android.content.res.ColorStateList $r3, $r11, $r16, $r19;
        android.graphics.Paint $r5, $r7, $r9, $r10, $r15, $r17, $r18, $r20;
        android.graphics.Rect $r6;
        android.graphics.Paint$Style $r8;
        float $f0, $f1, $f2, $f3;
        byte $b3;
        float[] $r12;
        android.graphics.DashPathEffect $r13, r22;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        if $r3 == null goto label1;

        r2 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        $r19 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mColorStateList>;

        i0 = virtualinvoke $r19.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r2, 0);

        $r20 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r20.<android.graphics.Paint: void setColor(int)>(i0);

        goto label3;

     label1:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if $r4 != null goto label2;

        $r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r18.<android.graphics.Paint: void setColor(int)>(0);

        goto label3;

     label2:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(-16777216);

     label3:
        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r6;

        $i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i1 < 0 goto label5;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r7;

        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        $f0 = (float) $i2;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r11 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

        if $r11 == null goto label4;

        r21 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int[] getState()>();

        $r16 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.content.res.ColorStateList mStrokeColorStateList>;

        i4 = virtualinvoke $r16.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r21, 0);

        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>(i4);

     label4:
        $f1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $b3 = $f1 cmpl 0.0F;

        if $b3 == 0 goto label5;

        $r13 = new android.graphics.DashPathEffect;

        $r12 = newarray (float)[2];

        $f3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $r12[0] = $f3;

        $f2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        $r12[1] = $f2;

        specialinvoke $r13.<android.graphics.DashPathEffect: void <init>(float[],float)>($r12, 0.0F);

        r22 = $r13;

        $r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r15.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r22);

     label5:
        return;
    }

    void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.content.res.Resources$Theme, android.graphics.drawable.GradientDrawable$1)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.content.res.Resources$Theme r2;
        android.graphics.drawable.GradientDrawable$1 r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.content.res.Resources$Theme;

        r3 := @parameter2: android.graphics.drawable.GradientDrawable$1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.content.res.Resources$Theme)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.GradientDrawable: float DEFAULT_THICKNESS_RATIO> = 9.0F;

        <android.graphics.drawable.GradientDrawable: float DEFAULT_INNER_RADIUS_RATIO> = 3.0F;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_FRACTION_PARENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_FRACTION> = 1;

        <android.graphics.drawable.GradientDrawable: int RADIUS_TYPE_PIXELS> = 0;

        <android.graphics.drawable.GradientDrawable: int SWEEP_GRADIENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RADIAL_GRADIENT> = 1;

        <android.graphics.drawable.GradientDrawable: int LINEAR_GRADIENT> = 0;

        <android.graphics.drawable.GradientDrawable: int RING> = 3;

        <android.graphics.drawable.GradientDrawable: int LINE> = 2;

        <android.graphics.drawable.GradientDrawable: int OVAL> = 1;

        <android.graphics.drawable.GradientDrawable: int RECTANGLE> = 0;

        return;
    }
}
