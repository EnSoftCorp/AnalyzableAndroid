class android.graphics.drawable.VectorDrawable$VPathRenderer extends java.lang.Object
{
    private final android.graphics.Path mPath;
    private final android.graphics.Path mRenderPath;
    private static final android.graphics.Matrix IDENTITY_MATRIX;
    private final android.graphics.Matrix mFinalPathMatrix;
    private android.graphics.Paint mStrokePaint;
    private android.graphics.Paint mFillPaint;
    private android.graphics.PathMeasure mPathMeasure;
    private int mChangingConfigurations;
    private final android.graphics.drawable.VectorDrawable$VGroup mRootGroup;
    float mBaseWidth;
    float mBaseHeight;
    float mViewportWidth;
    float mViewportHeight;
    int mRootAlpha;
    java.lang.String mRootName;
    final android.util.ArrayMap mVGTargetsMap;

    public void <init>()
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Matrix $r1;
        android.util.ArrayMap $r2;
        android.graphics.drawable.VectorDrawable$VGroup $r3;
        android.graphics.Path $r4, $r5;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r1;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseHeight> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportHeight> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha> = 255;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName> = null;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.util.ArrayMap mVGTargetsMap> = $r2;

        $r3 = new android.graphics.drawable.VectorDrawable$VGroup;

        specialinvoke $r3.<android.graphics.drawable.VectorDrawable$VGroup: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath> = $r4;

        $r5 = new android.graphics.Path;

        specialinvoke $r5.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath> = $r5;

        return;
    }

    public void setRootAlpha(int)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        int i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha> = i0;

        return;
    }

    public int getRootAlpha()
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        int $i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $i0 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha>;

        return $i0;
    }

    public void setAlpha(float)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        float f0, $f1;
        int $i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        f0 := @parameter0: float;

        $f1 = f0 * 255.0F;

        $i0 = (int) $f1;

        virtualinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void setRootAlpha(int)>($i0);

        return;
    }

    public float getAlpha()
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $i0 = virtualinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int getRootAlpha()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 255.0F;

        return $f1;
    }

    public void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0, r1;
        android.graphics.Matrix $r2;
        android.util.ArrayMap $r3, $r5, $r15;
        android.graphics.drawable.VectorDrawable$VGroup $r4, $r6;
        android.graphics.Path $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1;
        java.lang.String $r11, $r12, $r13;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r2;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseHeight> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportHeight> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha> = 255;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName> = null;

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.util.ArrayMap mVGTargetsMap> = $r3;

        $r4 = new android.graphics.drawable.VectorDrawable$VGroup;

        $r6 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup>;

        $r5 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.util.ArrayMap mVGTargetsMap>;

        specialinvoke $r4.<android.graphics.drawable.VectorDrawable$VGroup: void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap)>($r6, $r5);

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup> = $r4;

        $r7 = new android.graphics.Path;

        $r8 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath>;

        specialinvoke $r7.<android.graphics.Path: void <init>(android.graphics.Path)>($r8);

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath> = $r7;

        $r9 = new android.graphics.Path;

        $r10 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        specialinvoke $r9.<android.graphics.Path: void <init>(android.graphics.Path)>($r10);

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath> = $r9;

        $f0 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseWidth>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseWidth> = $f0;

        $f1 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseHeight>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mBaseHeight> = $f1;

        $f2 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportWidth>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportWidth> = $f2;

        $f3 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportHeight>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportHeight> = $f3;

        $i0 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mChangingConfigurations>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mChangingConfigurations> = $i0;

        $i1 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: int mRootAlpha> = $i1;

        $r11 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName>;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName> = $r11;

        $r13 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName>;

        if $r13 == null goto label1;

        $r15 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.util.ArrayMap mVGTargetsMap>;

        $r12 = r1.<android.graphics.drawable.VectorDrawable$VPathRenderer: java.lang.String mRootName>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r0);

     label1:
        return;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $r1 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup>;

        $z0 = specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup)>($r1);

        return $z0;
    }

    private boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup r1, r4;
        java.util.ArrayList r2;
        int i0, $i1;
        java.lang.Object r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.graphics.drawable.VectorDrawable$VPath r5;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VGroup;

        r2 = r1.<android.graphics.drawable.VectorDrawable$VGroup: java.util.ArrayList mChildren>;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label6;

        r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z0 = r3 instanceof android.graphics.drawable.VectorDrawable$VGroup;

        if $z0 == 0 goto label4;

        r4 = (android.graphics.drawable.VectorDrawable$VGroup) r3;

        $z3 = virtualinvoke r4.<android.graphics.drawable.VectorDrawable$VGroup: boolean canApplyTheme()>();

        if $z3 != 0 goto label2;

        $z4 = specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup)>(r4);

        if $z4 == 0 goto label3;

     label2:
        return 1;

     label3:
        goto label5;

     label4:
        $z1 = r3 instanceof android.graphics.drawable.VectorDrawable$VPath;

        if $z1 == 0 goto label5;

        r5 = (android.graphics.drawable.VectorDrawable$VPath) r3;

        $z2 = virtualinvoke r5.<android.graphics.drawable.VectorDrawable$VPath: boolean canApplyTheme()>();

        if $z2 == 0 goto label5;

        return 1;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return 0;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.VectorDrawable$VGroup $r2;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup>;

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme)>($r2, r1);

        return;
    }

    private void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup r1, r5;
        android.content.res.Resources$Theme r2;
        java.util.ArrayList r3;
        int i0, $i1;
        java.lang.Object r4;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.drawable.VectorDrawable$VPath r6;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VGroup;

        r2 := @parameter1: android.content.res.Resources$Theme;

        r3 = r1.<android.graphics.drawable.VectorDrawable$VGroup: java.util.ArrayList mChildren>;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label5;

        r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $z0 = r4 instanceof android.graphics.drawable.VectorDrawable$VGroup;

        if $z0 == 0 goto label3;

        r5 = (android.graphics.drawable.VectorDrawable$VGroup) r4;

        $z3 = virtualinvoke r5.<android.graphics.drawable.VectorDrawable$VGroup: boolean canApplyTheme()>();

        if $z3 == 0 goto label2;

        virtualinvoke r5.<android.graphics.drawable.VectorDrawable$VGroup: void applyTheme(android.content.res.Resources$Theme)>(r2);

     label2:
        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme)>(r5, r2);

        goto label4;

     label3:
        $z1 = r4 instanceof android.graphics.drawable.VectorDrawable$VPath;

        if $z1 == 0 goto label4;

        r6 = (android.graphics.drawable.VectorDrawable$VPath) r4;

        $z2 = virtualinvoke r6.<android.graphics.drawable.VectorDrawable$VPath: boolean canApplyTheme()>();

        if $z2 == 0 goto label4;

        virtualinvoke r6.<android.graphics.drawable.VectorDrawable$VPath: void applyTheme(android.content.res.Resources$Theme)>(r2);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return;
    }

    private void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup, android.graphics.Matrix, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup r1, r6;
        android.graphics.Matrix r2, $r7, $r8, $r9, $r12;
        android.graphics.Canvas r3;
        int i0, i1, i2, $i3;
        android.graphics.ColorFilter r4;
        java.lang.Object r5;
        java.util.ArrayList $r10, $r11;
        boolean $z1, $z2;
        android.graphics.drawable.VectorDrawable$VPath r13;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VGroup;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.Canvas;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.graphics.ColorFilter;

        $r7 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup)>(r1);

        virtualinvoke $r7.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r2);

        $r8 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup)>(r1);

        $r9 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup)>(r1);

        virtualinvoke $r8.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r9);

        i2 = 0;

     label1:
        $r10 = r1.<android.graphics.drawable.VectorDrawable$VGroup: java.util.ArrayList mChildren>;

        $i3 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label4;

        $r11 = r1.<android.graphics.drawable.VectorDrawable$VGroup: java.util.ArrayList mChildren>;

        r5 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $z2 = r5 instanceof android.graphics.drawable.VectorDrawable$VGroup;

        if $z2 == 0 goto label2;

        r6 = (android.graphics.drawable.VectorDrawable$VGroup) r5;

        $r12 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup)>(r1);

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>(r6, $r12, r3, i0, i1, r4);

        goto label3;

     label2:
        $z1 = r5 instanceof android.graphics.drawable.VectorDrawable$VPath;

        if $z1 == 0 goto label3;

        r13 = (android.graphics.drawable.VectorDrawable$VPath) r5;

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>(r1, r13, r3, i0, i1, r4);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void draw(android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Canvas r1;
        int i0, i1;
        android.graphics.ColorFilter r2;
        android.graphics.Matrix $r3;
        android.graphics.drawable.VectorDrawable$VGroup $r4;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.ColorFilter;

        $r4 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup>;

        $r3 = <android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r4, $r3, r1, i0, i1, r2);

        return;
    }

    private void drawPath(android.graphics.drawable.VectorDrawable$VGroup, android.graphics.drawable.VectorDrawable$VPath, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup r1;
        android.graphics.drawable.VectorDrawable$VPath r2;
        android.graphics.Canvas r3;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.ColorFilter r4;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23, f24;
        android.graphics.Path r5, $r10, $r11, $r14, $r19, $r25, $r31, $r40, $r43;
        android.graphics.drawable.VectorDrawable$VFullPath r6;
        android.graphics.Matrix $r7, $r8, $r9, $r16, $r41;
        boolean $z1;
        byte $b2, $b3, $b10;
        android.graphics.PathMeasure $r12, $r13, $r15, $r17, $r35, $r36, $r39;
        android.graphics.Paint $r18, $r26, $r27, $r29, $r32, $r34, $r37, $r38, r44, r45;
        android.graphics.Paint$Cap $r20, $r24;
        android.graphics.Paint$Join $r21, $r23;
        android.graphics.Paint$Style $r28, $r33;
        android.graphics.Region$Op $r42;

        r0 := @this: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VGroup;

        r2 := @parameter1: android.graphics.drawable.VectorDrawable$VPath;

        r3 := @parameter2: android.graphics.Canvas;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: android.graphics.ColorFilter;

        $f8 = (float) i0;

        $f6 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportWidth>;

        f0 = $f8 / $f6;

        $f9 = (float) i1;

        $f7 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: float mViewportHeight>;

        f1 = $f9 / $f7;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        $r8 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        $r7 = staticinvoke <android.graphics.drawable.VectorDrawable$VGroup: android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup)>(r1);

        virtualinvoke $r8.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r7);

        $r9 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r9.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f1);

        $r11 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke r2.<android.graphics.drawable.VectorDrawable$VPath: void toPath(android.graphics.Path)>($r11);

        r5 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath>;

        $r10 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r10.<android.graphics.Path: void reset()>();

        $z1 = virtualinvoke r2.<android.graphics.drawable.VectorDrawable$VPath: boolean isClipPath()>();

        if $z1 == 0 goto label01;

        $r43 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        $r41 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r43.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(r5, $r41);

        $r40 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        $r42 = <android.graphics.Region$Op: android.graphics.Region$Op REPLACE>;

        virtualinvoke r3.<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>($r40, $r42);

        goto label12;

     label01:
        r6 = (android.graphics.drawable.VectorDrawable$VFullPath) r2;

        $f10 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart>;

        $b2 = $f10 cmpl 0.0F;

        if $b2 != 0 goto label02;

        $f22 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd>;

        $b10 = $f22 cmpl 1.0F;

        if $b10 == 0 goto label06;

     label02:
        $f13 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart>;

        $f11 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset>;

        $f12 = $f13 + $f11;

        f3 = $f12 % 1.0F;

        $f16 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd>;

        $f15 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset>;

        $f14 = $f16 + $f15;

        f4 = $f14 % 1.0F;

        $r12 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        if $r12 != null goto label03;

        $r36 = new android.graphics.PathMeasure;

        specialinvoke $r36.<android.graphics.PathMeasure: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure> = $r36;

     label03:
        $r15 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        $r14 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $r15.<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>($r14, 0);

        $r13 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        f5 = virtualinvoke $r13.<android.graphics.PathMeasure: float getLength()>();

        f23 = f3 * f5;

        f24 = f4 * f5;

        virtualinvoke r5.<android.graphics.Path: void reset()>();

        $b3 = f23 cmpl f24;

        if $b3 <= 0 goto label04;

        $r39 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r39.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(f23, f5, r5, 1);

        $r35 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r35.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(0.0F, f24, r5, 1);

        goto label05;

     label04:
        $r17 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r17.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(f23, f24, r5, 1);

     label05:
        virtualinvoke r5.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F);

     label06:
        $r19 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        $r16 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r19.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>(r5, $r16);

        $i5 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor>;

        if $i5 == 0 goto label08;

        $r34 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint>;

        if $r34 != null goto label07;

        $r32 = new android.graphics.Paint;

        specialinvoke $r32.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint> = $r32;

        $r37 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint>;

        $r33 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r37.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r33);

        $r38 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint>;

        virtualinvoke $r38.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label07:
        r44 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint>;

        $i8 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor>;

        $f21 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha>;

        $i9 = staticinvoke <android.graphics.drawable.VectorDrawable: int access$800(int,float)>($i8, $f21);

        virtualinvoke r44.<android.graphics.Paint: void setColor(int)>($i9);

        virtualinvoke r44.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r4);

        $r31 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r31, r44);

     label08:
        $i4 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor>;

        if $i4 == 0 goto label12;

        $r18 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint>;

        if $r18 != null goto label09;

        $r29 = new android.graphics.Paint;

        specialinvoke $r29.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint> = $r29;

        $r27 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r28 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r27.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r28);

        $r26 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r26.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label09:
        r45 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r21 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        if $r21 == null goto label10;

        $r23 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        virtualinvoke r45.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r23);

     label10:
        $r20 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        if $r20 == null goto label11;

        $r24 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        virtualinvoke r45.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r24);

     label11:
        $f18 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit>;

        virtualinvoke r45.<android.graphics.Paint: void setStrokeMiter(float)>($f18);

        $i7 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor>;

        $f17 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha>;

        $i6 = staticinvoke <android.graphics.drawable.VectorDrawable: int access$800(int,float)>($i7, $f17);

        virtualinvoke r45.<android.graphics.Paint: void setColor(int)>($i6);

        virtualinvoke r45.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r4);

        $f19 = r6.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth>;

        $f20 = $f19 * f2;

        virtualinvoke r45.<android.graphics.Paint: void setStrokeWidth(float)>($f20);

        $r25 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r25, r45);

     label12:
        return;
    }

    static android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.drawable.VectorDrawable$VGroup $r1;

        r0 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $r1 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.drawable.VectorDrawable$VGroup mRootGroup>;

        return $r1;
    }

    static android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Paint $r1;

        r0 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $r1 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint>;

        return $r1;
    }

    static android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer, android.graphics.Paint)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Paint r1;

        r0 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter1: android.graphics.Paint;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mFillPaint> = r1;

        return r1;
    }

    static android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Paint $r1;

        r0 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        $r1 = r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint>;

        return $r1;
    }

    static android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer, android.graphics.Paint)
    {
        android.graphics.drawable.VectorDrawable$VPathRenderer r0;
        android.graphics.Paint r1;

        r0 := @parameter0: android.graphics.drawable.VectorDrawable$VPathRenderer;

        r1 := @parameter1: android.graphics.Paint;

        r0.<android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Paint mStrokePaint> = r1;

        return r1;
    }

    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        <android.graphics.drawable.VectorDrawable$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> = $r0;

        return;
    }
}
