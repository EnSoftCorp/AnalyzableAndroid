class android.net.wifi.RttManager$ServiceHandler extends android.os.Handler
{

    void <init>(android.os.Looper)
    {
        android.net.wifi.RttManager$ServiceHandler r0;
        android.os.Looper r1;

        r0 := @this: android.net.wifi.RttManager$ServiceHandler;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.net.wifi.RttManager$ServiceHandler r0;
        android.os.Message r1;
        java.lang.Object r2;
        int $i0, $i1, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13;
        java.util.concurrent.CountDownLatch $r4;
        com.android.internal.util.AsyncChannel $r5;
        android.os.Looper $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r15, $r17, $r19, $r20, $r21, $r22;
        java.lang.String $r10, $r18, $r23;
        android.net.wifi.RttManager$RttListener $r13;

        r0 := @this: android.net.wifi.RttManager$ServiceHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 69632: goto label01;
            case 69633: goto label06;
            case 69634: goto label04;
            case 69635: goto label06;
            case 69636: goto label05;
            default: goto label06;
        };

     label01:
        $i1 = r1.<android.os.Message: int arg1>;

        if $i1 != 0 goto label02;

        $r5 = staticinvoke <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel access$000()>();

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void sendMessage(int)>(69633);

        goto label03;

     label02:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RttManager", "Failed to set up channel connection");

        staticinvoke <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel access$002(com.android.internal.util.AsyncChannel)>(null);

     label03:
        $r4 = staticinvoke <android.net.wifi.RttManager: java.util.concurrent.CountDownLatch access$100()>();

        virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;

     label04:
        return;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RttManager", "Channel connection lost");

        staticinvoke <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel access$002(com.android.internal.util.AsyncChannel)>(null);

        $r7 = virtualinvoke r0.<android.net.wifi.RttManager$ServiceHandler: android.os.Looper getLooper()>();

        virtualinvoke $r7.<android.os.Looper: void quit()>();

        return;

     label06:
        $i4 = r1.<android.os.Message: int arg2>;

        r2 = staticinvoke <android.net.wifi.RttManager: java.lang.Object access$200(int)>($i4);

        if r2 != null goto label07;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid listener key = ");

        $i13 = r1.<android.os.Message: int arg2>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RttManager", $r23);

        return;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listener key = ");

        $i5 = r1.<android.os.Message: int arg2>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RttManager", $r10);

        $i6 = r1.<android.os.Message: int what>;

        tableswitch($i6)
        {
            case 160258: goto label09;
            case 160259: goto label08;
            case 160260: goto label10;
            default: goto label11;
        };

     label08:
        virtualinvoke r0.<android.net.wifi.RttManager$ServiceHandler: void reportSuccess(java.lang.Object,android.os.Message)>(r2, r1);

        $i8 = r1.<android.os.Message: int arg2>;

        staticinvoke <android.net.wifi.RttManager: java.lang.Object access$300(int)>($i8);

        goto label12;

     label09:
        virtualinvoke r0.<android.net.wifi.RttManager$ServiceHandler: void reportFailure(java.lang.Object,android.os.Message)>(r2, r1);

        $i10 = r1.<android.os.Message: int arg2>;

        staticinvoke <android.net.wifi.RttManager: java.lang.Object access$300(int)>($i10);

        goto label12;

     label10:
        $r13 = (android.net.wifi.RttManager$RttListener) r2;

        interfaceinvoke $r13.<android.net.wifi.RttManager$RttListener: void onAborted()>();

        $i9 = r1.<android.os.Message: int arg2>;

        staticinvoke <android.net.wifi.RttManager: java.lang.Object access$300(int)>($i9);

        goto label12;

     label11:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring message ");

        $i12 = r1.<android.os.Message: int what>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RttManager", $r18);

        return;

     label12:
        return;
    }

    void reportSuccess(java.lang.Object, android.os.Message)
    {
        android.net.wifi.RttManager$ServiceHandler r0;
        java.lang.Object r1, $r5;
        android.os.Message r2;
        android.net.wifi.RttManager$RttListener r3, $r7;
        android.net.wifi.RttManager$ParcelableRttResults r4;
        android.net.wifi.RttManager$RttResult[] $r6;

        r0 := @this: android.net.wifi.RttManager$ServiceHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Message;

        r3 = (android.net.wifi.RttManager$RttListener) r1;

        $r5 = r2.<android.os.Message: java.lang.Object obj>;

        r4 = (android.net.wifi.RttManager$ParcelableRttResults) $r5;

        $r7 = (android.net.wifi.RttManager$RttListener) r1;

        $r6 = r4.<android.net.wifi.RttManager$ParcelableRttResults: android.net.wifi.RttManager$RttResult[] mResults>;

        interfaceinvoke $r7.<android.net.wifi.RttManager$RttListener: void onSuccess(android.net.wifi.RttManager$RttResult[])>($r6);

        return;
    }

    void reportFailure(java.lang.Object, android.os.Message)
    {
        android.net.wifi.RttManager$ServiceHandler r0;
        java.lang.Object r1, $r5;
        android.os.Message r2;
        android.net.wifi.RttManager$RttListener r3, $r6;
        android.os.Bundle r4;
        int $i0;
        java.lang.String $r7;

        r0 := @this: android.net.wifi.RttManager$ServiceHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.os.Message;

        r3 = (android.net.wifi.RttManager$RttListener) r1;

        $r5 = r2.<android.os.Message: java.lang.Object obj>;

        r4 = (android.os.Bundle) $r5;

        $r6 = (android.net.wifi.RttManager$RttListener) r1;

        $i0 = r2.<android.os.Message: int arg1>;

        $r7 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.net.wifi.RttManager.Description");

        interfaceinvoke $r6.<android.net.wifi.RttManager$RttListener: void onFailure(int,java.lang.String)>($i0, $r7);

        return;
    }
}
