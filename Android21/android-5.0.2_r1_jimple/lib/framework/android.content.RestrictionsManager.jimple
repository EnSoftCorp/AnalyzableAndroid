public class android.content.RestrictionsManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String ACTION_PERMISSION_RESPONSE_RECEIVED;
    public static final java.lang.String ACTION_REQUEST_PERMISSION;
    public static final java.lang.String ACTION_REQUEST_LOCAL_APPROVAL;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_REQUEST_TYPE;
    public static final java.lang.String EXTRA_REQUEST_ID;
    public static final java.lang.String EXTRA_REQUEST_BUNDLE;
    public static final java.lang.String EXTRA_RESPONSE_BUNDLE;
    public static final java.lang.String REQUEST_TYPE_APPROVAL;
    public static final java.lang.String REQUEST_KEY_ID;
    public static final java.lang.String REQUEST_KEY_DATA;
    public static final java.lang.String REQUEST_KEY_TITLE;
    public static final java.lang.String REQUEST_KEY_MESSAGE;
    public static final java.lang.String REQUEST_KEY_ICON;
    public static final java.lang.String REQUEST_KEY_APPROVE_LABEL;
    public static final java.lang.String REQUEST_KEY_DENY_LABEL;
    public static final java.lang.String REQUEST_KEY_NEW_REQUEST;
    public static final java.lang.String RESPONSE_KEY_RESULT;
    public static final int RESULT_APPROVED;
    public static final int RESULT_DENIED;
    public static final int RESULT_NO_RESPONSE;
    public static final int RESULT_UNKNOWN_REQUEST;
    public static final int RESULT_ERROR;
    public static final int RESULT_ERROR_BAD_REQUEST;
    public static final int RESULT_ERROR_NETWORK;
    public static final int RESULT_ERROR_INTERNAL;
    public static final java.lang.String RESPONSE_KEY_ERROR_CODE;
    public static final java.lang.String RESPONSE_KEY_MESSAGE;
    public static final java.lang.String RESPONSE_KEY_RESPONSE_TIMESTAMP;
    public static final java.lang.String META_DATA_APP_RESTRICTIONS;
    private static final java.lang.String TAG_RESTRICTION;
    private final android.content.Context mContext;
    private final android.content.IRestrictionsManager mService;

    public void <init>(android.content.Context, android.content.IRestrictionsManager)
    {
        android.content.RestrictionsManager r0;
        android.content.Context r1;
        android.content.IRestrictionsManager r2;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.IRestrictionsManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.RestrictionsManager: android.content.Context mContext> = r1;

        r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService> = r2;

        return;
    }

    public android.os.Bundle getApplicationRestrictions()
    {
        android.content.RestrictionsManager r0;
        android.content.IRestrictionsManager $r2, $r4;
        android.content.Context $r3;
        java.lang.String $r5;
        android.os.Bundle $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r2 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r2 == null goto label3;

        $r4 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $r3 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = interfaceinvoke $r4.<android.content.IRestrictionsManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>($r5);

     label2:
        return $r6;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "Couldn\'t reach service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean hasRestrictionsProvider()
    {
        android.content.RestrictionsManager r0;
        android.content.IRestrictionsManager $r2, $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r2 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r2 == null goto label3;

        $r3 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $z0 = interfaceinvoke $r3.<android.content.IRestrictionsManager: boolean hasRestrictionsProvider()>();

     label2:
        return $z0;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "Couldn\'t reach service");

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void requestPermission(java.lang.String, java.lang.String, android.os.PersistableBundle)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1, r2, $r8;
        android.os.PersistableBundle r3;
        android.content.IRestrictionsManager $r5, $r7;
        android.content.Context $r6;
        java.lang.NullPointerException $r9, $r10, $r11;
        android.os.RemoteException $r12;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.PersistableBundle;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestType cannot be null");

        throw $r11;

     label1:
        if r2 != null goto label2;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestId cannot be null");

        throw $r10;

     label2:
        if r3 != null goto label3;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("request cannot be null");

        throw $r9;

     label3:
        $r5 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r5 == null goto label4;

        $r7 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $r6 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r7.<android.content.IRestrictionsManager: void requestPermission(java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>($r8, r1, r2, r3);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "Couldn\'t reach service");

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.content.Intent createLocalApprovalIntent()
    {
        android.content.RestrictionsManager r0;
        android.content.IRestrictionsManager $r2, $r3;
        android.content.Intent $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.content.RestrictionsManager;

     label1:
        $r2 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r2 == null goto label3;

        $r3 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        $r4 = interfaceinvoke $r3.<android.content.IRestrictionsManager: android.content.Intent createLocalApprovalIntent()>();

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "Couldn\'t reach service");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void notifyPermissionResponse(java.lang.String, android.os.PersistableBundle)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1;
        android.os.PersistableBundle r2;
        boolean $z0, $z1;
        android.content.IRestrictionsManager $r4, $r5;
        java.lang.IllegalArgumentException $r6, $r7;
        java.lang.NullPointerException $r8, $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.PersistableBundle;

        if r1 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("packageName cannot be null");

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("request cannot be null");

        throw $r8;

     label2:
        $z0 = virtualinvoke r2.<android.os.PersistableBundle: boolean containsKey(java.lang.String)>("android.request.id");

        if $z0 != 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("REQUEST_KEY_ID must be specified");

        throw $r7;

     label3:
        $z1 = virtualinvoke r2.<android.os.PersistableBundle: boolean containsKey(java.lang.String)>("android.response.result");

        if $z1 != 0 goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("RESPONSE_KEY_RESULT must be specified");

        throw $r6;

     label4:
        $r4 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        if $r4 == null goto label5;

        $r5 = r0.<android.content.RestrictionsManager: android.content.IRestrictionsManager mService>;

        interfaceinvoke $r5.<android.content.IRestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>(r1, r2);

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "Couldn\'t reach service");

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.util.List getManifestRestrictions(java.lang.String)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1, $r12;
        java.util.List r2;
        android.content.Context $r3, $r6;
        android.content.pm.PackageManager $r4, $r7;
        android.os.Bundle $r5;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        android.content.pm.ApplicationInfo r14;
        android.content.res.XmlResourceParser r15;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r14 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 128);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label4:
        if r14 == null goto label5;

        $r5 = r14.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r5.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.content.APP_RESTRICTIONS");

        if $z0 != 0 goto label6;

     label5:
        return null;

     label6:
        $r6 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r15 = virtualinvoke r14.<android.content.pm.ApplicationInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r7, "android.content.APP_RESTRICTIONS");

        r2 = specialinvoke r0.<android.content.RestrictionsManager: java.util.List loadManifestRestrictions(java.lang.String,android.content.res.XmlResourceParser)>(r1, r15);

        return r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private java.util.List loadManifestRestrictions(java.lang.String, android.content.res.XmlResourceParser)
    {
        android.content.RestrictionsManager r0;
        java.lang.String r1, $r10, $r16, $r20;
        android.content.res.XmlResourceParser r2;
        android.content.Context r3, $r8;
        android.content.RestrictionEntry r5;
        int i0;
        android.util.AttributeSet r6;
        android.content.res.TypedArray r7;
        java.util.ArrayList $r9, r23;
        boolean $z0;
        int[] $r11;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        java.lang.StringBuilder $r13, $r15, $r17, $r19, $r21, $r22;
        org.xmlpull.v1.XmlPullParserException $r14, r24;
        java.io.IOException $r18, r25;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.XmlResourceParser;

     label01:
        $r8 = r0.<android.content.RestrictionsManager: android.content.Context mContext>;

        r3 = virtualinvoke $r8.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>(r1, 0);

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        return null;

     label04:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r23 = $r9;

     label05:
        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

     label06:
        if i0 == 1 goto label08;

        if i0 != 2 goto label07;

        $r10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("restriction");

        if $z0 == 0 goto label07;

        r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        if r6 == null goto label07;

        $r11 = <com.android.internal.R$styleable: int[] RestrictionEntry>;

        r7 = virtualinvoke r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r6, $r11);

        r5 = specialinvoke r0.<android.content.RestrictionsManager: android.content.RestrictionEntry loadRestriction(android.content.Context,android.content.res.TypedArray)>(r3, r7);

        if r5 == null goto label07;

        virtualinvoke r23.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label07:
        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        goto label06;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        r24 = $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading restriction metadata for ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RestrictionsManager", $r16, r24);

        return null;

     label10:
        $r18 := @caughtexception;

        r25 = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading restriction metadata for ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RestrictionsManager", $r20, r25);

        return null;

     label11:
        return r23;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label08 with label09;
        catch java.io.IOException from label05 to label08 with label10;
    }

    private android.content.RestrictionEntry loadRestriction(android.content.Context, android.content.res.TypedArray)
    {
        android.content.RestrictionsManager r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        java.lang.String r3, r4, r5, $r8, $r14;
        int i0, i1, i2, i3, $i4;
        android.content.RestrictionEntry r6, $r7;
        android.content.res.Resources $r9;
        boolean $z0;
        java.lang.String[] $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: android.content.RestrictionsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(6, -1);

        r4 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r5 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        if i0 != -1 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "restrictionType cannot be omitted");

        return null;

     label01:
        if r3 != null goto label02;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", "key cannot be omitted");

        return null;

     label02:
        $r7 = new android.content.RestrictionEntry;

        specialinvoke $r7.<android.content.RestrictionEntry: void <init>(int,java.lang.String)>(i0, r3);

        r6 = $r7;

        virtualinvoke r6.<android.content.RestrictionEntry: void setTitle(java.lang.String)>(r4);

        virtualinvoke r6.<android.content.RestrictionEntry: void setDescription(java.lang.String)>(r5);

        if i1 == 0 goto label03;

        virtualinvoke r6.<android.content.RestrictionEntry: void setChoiceEntries(android.content.Context,int)>(r1, i1);

     label03:
        if i2 == 0 goto label04;

        virtualinvoke r6.<android.content.RestrictionEntry: void setChoiceValues(android.content.Context,int)>(r1, i2);

     label04:
        tableswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label08;
            case 2: goto label05;
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label06;
            case 6: goto label05;
            default: goto label09;
        };

     label05:
        $r8 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        virtualinvoke r6.<android.content.RestrictionEntry: void setSelectedString(java.lang.String)>($r8);

        goto label10;

     label06:
        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(4, 0);

        virtualinvoke r6.<android.content.RestrictionEntry: void setIntValue(int)>($i4);

        goto label10;

     label07:
        i3 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        if i3 == 0 goto label10;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i3);

        virtualinvoke r6.<android.content.RestrictionEntry: void setAllSelectedStrings(java.lang.String[])>($r10);

        goto label10;

     label08:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke r6.<android.content.RestrictionEntry: void setSelectedState(boolean)>($z0);

        goto label10;

     label09:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown restriction type ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RestrictionsManager", $r14);

     label10:
        return r6;
    }

    public static void <clinit>()
    {
        <android.content.RestrictionsManager: java.lang.String TAG_RESTRICTION> = "restriction";

        <android.content.RestrictionsManager: java.lang.String META_DATA_APP_RESTRICTIONS> = "android.content.APP_RESTRICTIONS";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_RESPONSE_TIMESTAMP> = "android.response.timestamp";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_MESSAGE> = "android.response.msg";

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_ERROR_CODE> = "android.response.errorcode";

        <android.content.RestrictionsManager: int RESULT_ERROR_INTERNAL> = 3;

        <android.content.RestrictionsManager: int RESULT_ERROR_NETWORK> = 2;

        <android.content.RestrictionsManager: int RESULT_ERROR_BAD_REQUEST> = 1;

        <android.content.RestrictionsManager: int RESULT_ERROR> = 5;

        <android.content.RestrictionsManager: int RESULT_UNKNOWN_REQUEST> = 4;

        <android.content.RestrictionsManager: int RESULT_NO_RESPONSE> = 3;

        <android.content.RestrictionsManager: int RESULT_DENIED> = 2;

        <android.content.RestrictionsManager: int RESULT_APPROVED> = 1;

        <android.content.RestrictionsManager: java.lang.String RESPONSE_KEY_RESULT> = "android.response.result";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_NEW_REQUEST> = "android.request.new_request";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_DENY_LABEL> = "android.request.deny_label";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_APPROVE_LABEL> = "android.request.approve_label";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_ICON> = "android.request.icon";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_MESSAGE> = "android.request.mesg";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_TITLE> = "android.request.title";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_DATA> = "android.request.data";

        <android.content.RestrictionsManager: java.lang.String REQUEST_KEY_ID> = "android.request.id";

        <android.content.RestrictionsManager: java.lang.String REQUEST_TYPE_APPROVAL> = "android.request.type.approval";

        <android.content.RestrictionsManager: java.lang.String EXTRA_RESPONSE_BUNDLE> = "android.content.extra.RESPONSE_BUNDLE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_BUNDLE> = "android.content.extra.REQUEST_BUNDLE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_ID> = "android.content.extra.REQUEST_ID";

        <android.content.RestrictionsManager: java.lang.String EXTRA_REQUEST_TYPE> = "android.content.extra.REQUEST_TYPE";

        <android.content.RestrictionsManager: java.lang.String EXTRA_PACKAGE_NAME> = "android.content.extra.PACKAGE_NAME";

        <android.content.RestrictionsManager: java.lang.String ACTION_REQUEST_LOCAL_APPROVAL> = "android.content.action.REQUEST_LOCAL_APPROVAL";

        <android.content.RestrictionsManager: java.lang.String ACTION_REQUEST_PERMISSION> = "android.content.action.REQUEST_PERMISSION";

        <android.content.RestrictionsManager: java.lang.String ACTION_PERMISSION_RESPONSE_RECEIVED> = "android.content.action.PERMISSION_RESPONSE_RECEIVED";

        <android.content.RestrictionsManager: java.lang.String TAG> = "RestrictionsManager";

        return;
    }
}
