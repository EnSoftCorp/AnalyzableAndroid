public class android.gesture.GestureStroke extends java.lang.Object
{
    static final float TOUCH_TOLERANCE;
    public final android.graphics.RectF boundingBox;
    public final float length;
    public final float[] points;
    private final long[] timestamps;
    private android.graphics.Path mCachedPath;

    public void <init>(java.util.ArrayList)
    {
        android.gesture.GestureStroke r0;
        java.util.ArrayList r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        float[] r2;
        long[] r3;
        android.graphics.RectF r4, $r7;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        android.gesture.GesturePoint r5;
        java.lang.Object $r6;
        long $l8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: android.gesture.GestureStroke;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $i3 = i0 * 2;

        r2 = newarray (float)[$i3];

        r3 = newarray (long)[i0];

        r4 = null;

        f0 = 0.0F;

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (android.gesture.GesturePoint) $r6;

        $i4 = i2 * 2;

        $f1 = r5.<android.gesture.GesturePoint: float x>;

        r2[$i4] = $f1;

        $i5 = i2 * 2;

        $i6 = $i5 + 1;

        $f2 = r5.<android.gesture.GesturePoint: float y>;

        r2[$i6] = $f2;

        $l8 = r5.<android.gesture.GesturePoint: long timestamp>;

        r3[i1] = $l8;

        if r4 != null goto label2;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r4 = $r7;

        $f13 = r5.<android.gesture.GesturePoint: float y>;

        r4.<android.graphics.RectF: float top> = $f13;

        $f11 = r5.<android.gesture.GesturePoint: float x>;

        r4.<android.graphics.RectF: float left> = $f11;

        $f12 = r5.<android.gesture.GesturePoint: float x>;

        r4.<android.graphics.RectF: float right> = $f12;

        $f14 = r5.<android.gesture.GesturePoint: float y>;

        r4.<android.graphics.RectF: float bottom> = $f14;

        f0 = 0.0F;

        goto label3;

     label2:
        $d0 = (double) f0;

        $f5 = r5.<android.gesture.GesturePoint: float x>;

        $i7 = i2 - 1;

        $i9 = $i7 * 2;

        $f3 = r2[$i9];

        $f4 = $f5 - $f3;

        $d1 = (double) $f4;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 2.0);

        $f6 = r5.<android.gesture.GesturePoint: float y>;

        $i10 = i2 - 1;

        $i12 = $i10 * 2;

        $i11 = $i12 + 1;

        $f7 = r2[$i11];

        $f8 = $f6 - $f7;

        $d5 = (double) $f8;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.0);

        $d4 = $d2 + $d3;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d7 = $d0 + $d6;

        f0 = (float) $d7;

        $f10 = r5.<android.gesture.GesturePoint: float x>;

        $f9 = r5.<android.gesture.GesturePoint: float y>;

        virtualinvoke r4.<android.graphics.RectF: void union(float,float)>($f10, $f9);

     label3:
        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label1;

     label4:
        r0.<android.gesture.GestureStroke: long[] timestamps> = r3;

        r0.<android.gesture.GestureStroke: float[] points> = r2;

        r0.<android.gesture.GestureStroke: android.graphics.RectF boundingBox> = r4;

        r0.<android.gesture.GestureStroke: float length> = f0;

        return;
    }

    private void <init>(android.graphics.RectF, float, float[], long[])
    {
        android.gesture.GestureStroke r0;
        android.graphics.RectF r1, $r4;
        float f0, $f1, $f2, $f3, $f4;
        float[] r2, $r6;
        long[] r3, $r8;
        java.lang.Object $r5, $r7;

        r0 := @this: android.gesture.GestureStroke;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        r2 := @parameter2: float[];

        r3 := @parameter3: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.RectF;

        $f4 = r1.<android.graphics.RectF: float left>;

        $f3 = r1.<android.graphics.RectF: float top>;

        $f2 = r1.<android.graphics.RectF: float right>;

        $f1 = r1.<android.graphics.RectF: float bottom>;

        specialinvoke $r4.<android.graphics.RectF: void <init>(float,float,float,float)>($f4, $f3, $f2, $f1);

        r0.<android.gesture.GestureStroke: android.graphics.RectF boundingBox> = $r4;

        r0.<android.gesture.GestureStroke: float length> = f0;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (float[]) $r5;

        r0.<android.gesture.GestureStroke: float[] points> = $r6;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (long[]) $r7;

        r0.<android.gesture.GestureStroke: long[] timestamps> = $r8;

        return;
    }

    public java.lang.Object clone()
    {
        android.gesture.GestureStroke r0, $r1;
        long[] $r2;
        float[] $r3;
        float $f0;
        android.graphics.RectF $r4;

        r0 := @this: android.gesture.GestureStroke;

        $r1 = new android.gesture.GestureStroke;

        $r4 = r0.<android.gesture.GestureStroke: android.graphics.RectF boundingBox>;

        $f0 = r0.<android.gesture.GestureStroke: float length>;

        $r3 = r0.<android.gesture.GestureStroke: float[] points>;

        $r2 = r0.<android.gesture.GestureStroke: long[] timestamps>;

        specialinvoke $r1.<android.gesture.GestureStroke: void <init>(android.graphics.RectF,float,float[],long[])>($r4, $f0, $r3, $r2);

        return $r1;
    }

    void draw(android.graphics.Canvas, android.graphics.Paint)
    {
        android.gesture.GestureStroke r0;
        android.graphics.Canvas r1;
        android.graphics.Paint r2;
        android.graphics.Path $r3, $r4;

        r0 := @this: android.gesture.GestureStroke;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Paint;

        $r3 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.gesture.GestureStroke: void makePath()>();

     label1:
        $r4 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r4, r2);

        return;
    }

    public android.graphics.Path getPath()
    {
        android.gesture.GestureStroke r0;
        android.graphics.Path $r1, $r2;

        r0 := @this: android.gesture.GestureStroke;

        $r1 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.gesture.GestureStroke: void makePath()>();

     label1:
        $r2 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        return $r2;
    }

    private void makePath()
    {
        android.gesture.GestureStroke r0;
        float[] r1;
        int i0, i1, $i2;
        android.graphics.Path r2, $r3;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b3, $b4;

        r0 := @this: android.gesture.GestureStroke;

        r1 = r0.<android.gesture.GestureStroke: float[] points>;

        i0 = lengthof r1;

        r2 = null;

        f0 = 0.0F;

        f1 = 0.0F;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        f2 = r1[i1];

        $i2 = i1 + 1;

        f3 = r1[$i2];

        if r2 != null goto label2;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f2, f3);

        f0 = f2;

        f1 = f3;

        goto label4;

     label2:
        $f6 = f2 - f0;

        f4 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f7 = f3 - f1;

        f5 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $b3 = f4 cmpl 3.0F;

        if $b3 >= 0 goto label3;

        $b4 = f5 cmpl 3.0F;

        if $b4 < 0 goto label4;

     label3:
        $f8 = f2 + f0;

        $f11 = $f8 / 2.0F;

        $f10 = f3 + f1;

        $f9 = $f10 / 2.0F;

        virtualinvoke r2.<android.graphics.Path: void quadTo(float,float,float,float)>(f0, f1, $f11, $f9);

        f0 = f2;

        f1 = f3;

     label4:
        i1 = i1 + 2;

        goto label1;

     label5:
        r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath> = r2;

        return;
    }

    public android.graphics.Path toPath(float, float, int)
    {
        android.gesture.GestureStroke r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int i0, i1, i2, $i4;
        float[] r1;
        android.graphics.RectF r2;
        android.graphics.Path r3, $r6;
        byte $b3, $b5, $b6;

        r0 := @this: android.gesture.GestureStroke;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        r1 = staticinvoke <android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>(r0, i0);

        r2 = r0.<android.gesture.GestureStroke: android.graphics.RectF boundingBox>;

        $f11 = r2.<android.graphics.RectF: float left>;

        $f14 = neg $f11;

        $f13 = r2.<android.graphics.RectF: float top>;

        $f12 = neg $f13;

        staticinvoke <android.gesture.GestureUtils: float[] translate(float[],float,float)>(r1, $f14, $f12);

        $f16 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f2 = f0 / $f16;

        $f15 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f3 = f1 / $f15;

        $b3 = f2 cmpl f3;

        if $b3 <= 0 goto label1;

        $f23 = f3;

        goto label2;

     label1:
        $f23 = f2;

     label2:
        f4 = $f23;

        staticinvoke <android.gesture.GestureUtils: float[] scale(float[],float,float)>(r1, f4, f4);

        f5 = 0.0F;

        f6 = 0.0F;

        r3 = null;

        i1 = lengthof r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label7;

        f7 = r1[i2];

        $i4 = i2 + 1;

        f8 = r1[$i4];

        if r3 != null goto label4;

        $r6 = new android.graphics.Path;

        specialinvoke $r6.<android.graphics.Path: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>(f7, f8);

        f5 = f7;

        f6 = f8;

        goto label6;

     label4:
        $f17 = f7 - f5;

        f10 = staticinvoke <java.lang.Math: float abs(float)>($f17);

        $f18 = f8 - f6;

        f9 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        $b5 = f10 cmpl 3.0F;

        if $b5 >= 0 goto label5;

        $b6 = f9 cmpl 3.0F;

        if $b6 < 0 goto label6;

     label5:
        $f19 = f7 + f5;

        $f22 = $f19 / 2.0F;

        $f20 = f8 + f6;

        $f21 = $f20 / 2.0F;

        virtualinvoke r3.<android.graphics.Path: void quadTo(float,float,float,float)>(f5, f6, $f22, $f21);

        f5 = f7;

        f6 = f8;

     label6:
        i2 = i2 + 2;

        goto label3;

     label7:
        return r3;
    }

    void serialize(java.io.DataOutputStream) throws java.io.IOException
    {
        android.gesture.GestureStroke r0;
        java.io.DataOutputStream r1;
        float[] r2, $r4;
        long[] r3;
        int i0, i1, $i2, $i3, $i4;
        float $f0, $f1;
        long $l5;

        r0 := @this: android.gesture.GestureStroke;

        r1 := @parameter0: java.io.DataOutputStream;

        r2 = r0.<android.gesture.GestureStroke: float[] points>;

        r3 = r0.<android.gesture.GestureStroke: long[] timestamps>;

        $r4 = r0.<android.gesture.GestureStroke: float[] points>;

        i0 = lengthof $r4;

        $i2 = i0 / 2;

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i2);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r2[i1];

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f0);

        $i3 = i1 + 1;

        $f1 = r2[$i3];

        virtualinvoke r1.<java.io.DataOutputStream: void writeFloat(float)>($f1);

        $i4 = i1 / 2;

        $l5 = r3[$i4];

        virtualinvoke r1.<java.io.DataOutputStream: void writeLong(long)>($l5);

        i1 = i1 + 2;

        goto label1;

     label2:
        return;
    }

    static android.gesture.GestureStroke deserialize(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1;
        java.util.ArrayList r1, $r2;
        android.gesture.GestureStroke $r3;
        android.gesture.GesturePoint $r4;

        r0 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r1 = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = staticinvoke <android.gesture.GesturePoint: android.gesture.GesturePoint deserialize(java.io.DataInputStream)>(r0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = new android.gesture.GestureStroke;

        specialinvoke $r3.<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>(r1);

        return $r3;
    }

    public void clearPath()
    {
        android.gesture.GestureStroke r0;
        android.graphics.Path $r1, $r2;

        r0 := @this: android.gesture.GestureStroke;

        $r1 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        if $r1 == null goto label1;

        $r2 = r0.<android.gesture.GestureStroke: android.graphics.Path mCachedPath>;

        virtualinvoke $r2.<android.graphics.Path: void rewind()>();

     label1:
        return;
    }

    public android.gesture.OrientedBoundingBox computeOrientedBoundingBox()
    {
        android.gesture.GestureStroke r0;
        float[] $r1;
        android.gesture.OrientedBoundingBox $r2;

        r0 := @this: android.gesture.GestureStroke;

        $r1 = r0.<android.gesture.GestureStroke: float[] points>;

        $r2 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.gesture.GestureStroke: float TOUCH_TOLERANCE> = 3.0F;

        return;
    }
}
