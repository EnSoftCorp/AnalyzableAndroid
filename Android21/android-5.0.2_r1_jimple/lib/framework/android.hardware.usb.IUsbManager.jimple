public interface  android.hardware.usb.IUsbManager extends java.lang.Object implements android.os.IInterface
{

    public abstract void getDeviceList(android.os.Bundle) throws android.os.RemoteException;

    public abstract android.os.ParcelFileDescriptor openDevice(java.lang.String) throws android.os.RemoteException;

    public abstract android.hardware.usb.UsbAccessory getCurrentAccessory() throws android.os.RemoteException;

    public abstract android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory) throws android.os.RemoteException;

    public abstract void setDevicePackage(android.hardware.usb.UsbDevice, java.lang.String, int) throws android.os.RemoteException;

    public abstract void setAccessoryPackage(android.hardware.usb.UsbAccessory, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean hasDevicePermission(android.hardware.usb.UsbDevice) throws android.os.RemoteException;

    public abstract boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory) throws android.os.RemoteException;

    public abstract void requestDevicePermission(android.hardware.usb.UsbDevice, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException;

    public abstract void requestAccessoryPermission(android.hardware.usb.UsbAccessory, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException;

    public abstract void grantDevicePermission(android.hardware.usb.UsbDevice, int) throws android.os.RemoteException;

    public abstract void grantAccessoryPermission(android.hardware.usb.UsbAccessory, int) throws android.os.RemoteException;

    public abstract boolean hasDefaults(java.lang.String, int) throws android.os.RemoteException;

    public abstract void clearDefaults(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setCurrentFunction(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void setMassStorageBackingFile(java.lang.String) throws android.os.RemoteException;

    public abstract void allowUsbDebugging(boolean, java.lang.String) throws android.os.RemoteException;

    public abstract void denyUsbDebugging() throws android.os.RemoteException;

    public abstract void clearUsbDebuggingKeys() throws android.os.RemoteException;
}
