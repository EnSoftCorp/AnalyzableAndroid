public abstract class android.provider.SearchIndexablesProvider extends android.content.ContentProvider
{
    private static final java.lang.String TAG;
    private java.lang.String mAuthority;
    private android.content.UriMatcher mMatcher;
    private static final int MATCH_RES_CODE;
    private static final int MATCH_RAW_CODE;
    private static final int MATCH_NON_INDEXABLE_KEYS_CODE;

    public void <init>()
    {
        android.provider.SearchIndexablesProvider r0;

        r0 := @this: android.provider.SearchIndexablesProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.provider.SearchIndexablesProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r12;
        android.content.UriMatcher $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r13, $r14, $r15;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        $r3 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority> = $r3;

        $r4 = new android.content.UriMatcher;

        specialinvoke $r4.<android.content.UriMatcher: void <init>(int)>(-1);

        r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher> = $r4;

        $r6 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r5 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r6.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r5, "settings/indexables_xml_res", 1);

        $r8 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r7 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r8.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r7, "settings/indexables_raw", 2);

        $r10 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $r9 = r0.<android.provider.SearchIndexablesProvider: java.lang.String mAuthority>;

        virtualinvoke $r10.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r9, "settings/non_indexables_key", 3);

        $z0 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z0 != 0 goto label1;

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must be exported");

        throw $r15;

     label1:
        $z1 = r2.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z1 != 0 goto label2;

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must grantUriPermissions");

        throw $r13;

     label2:
        $r12 = "android.permission.READ_SEARCH_INDEXABLES";

        $r11 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label3;

        $r14 = new java.lang.SecurityException;

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>("Provider must be protected by READ_SEARCH_INDEXABLES");

        throw $r14;

     label3:
        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>(r1, r2);

        return;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r14;
        android.content.UriMatcher $r6;
        int $i0;
        android.database.Cursor $r7, $r8, $r9;
        java.lang.UnsupportedOperationException $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $i0 = virtualinvoke $r6.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r7 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryXmlResources(java.lang.String[])>(null);

        return $r7;

     label2:
        $r9 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryRawData(java.lang.String[])>(null);

        return $r9;

     label3:
        $r8 = virtualinvoke r0.<android.provider.SearchIndexablesProvider: android.database.Cursor queryNonIndexableKeys(java.lang.String[])>(null);

        return $r8;

     label4:
        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Uri ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r10;
    }

    public abstract android.database.Cursor queryXmlResources(java.lang.String[]);

    public abstract android.database.Cursor queryRawData(java.lang.String[]);

    public abstract android.database.Cursor queryNonIndexableKeys(java.lang.String[]);

    public java.lang.String getType(android.net.Uri)
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        android.content.UriMatcher $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<android.provider.SearchIndexablesProvider: android.content.UriMatcher mMatcher>;

        $i0 = virtualinvoke $r2.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return "vnd.android.cursor.dir/indexables_xml_res";

     label2:
        return "vnd.android.cursor.dir/indexables_raw";

     label3:
        return "vnd.android.cursor.dir/non_indexables_key";

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public final android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Insert not supported");

        throw $r3;
    }

    public final int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Delete not supported");

        throw $r4;
    }

    public final int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.provider.SearchIndexablesProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.provider.SearchIndexablesProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Update not supported");

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.provider.SearchIndexablesProvider: int MATCH_NON_INDEXABLE_KEYS_CODE> = 3;

        <android.provider.SearchIndexablesProvider: int MATCH_RAW_CODE> = 2;

        <android.provider.SearchIndexablesProvider: int MATCH_RES_CODE> = 1;

        <android.provider.SearchIndexablesProvider: java.lang.String TAG> = "IndexablesProvider";

        return;
    }
}
