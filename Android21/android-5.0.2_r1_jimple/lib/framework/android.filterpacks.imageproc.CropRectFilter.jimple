public class android.filterpacks.imageproc.CropRectFilter extends android.filterfw.core.Filter
{
    private int mXorigin;
    private int mYorigin;
    private int mOutputWidth;
    private int mOutputHeight;
    private int mTileSize;
    private android.filterfw.core.Program mProgram;
    private int mWidth;
    private int mHeight;
    private int mTarget;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.CropRectFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.CropRectFilter: int mTarget> = 0;

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, $i1;
        android.filterfw.core.ShaderProgram r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        r2 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        $i1 = r0.<android.filterpacks.imageproc.CropRectFilter: int mTileSize>;

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Program mProgram> = r2;

        goto label3;

     label2:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        r0.<android.filterpacks.imageproc.CropRectFilter: int mTarget> = i0;

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;
        int $i0, $i1;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        $i1 = r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth>;

        $i0 = r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight>;

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void updateSourceRect(int,int)>($i1, $i0);

     label1:
        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r5;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.MutableFrameFormat r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.filterfw.core.FrameManager $r6;
        android.filterfw.core.Program $r7, $r8;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i1 = r0.<android.filterpacks.imageproc.CropRectFilter: int mOutputWidth>;

        $i0 = r0.<android.filterpacks.imageproc.CropRectFilter: int mOutputHeight>;

        r4 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i1, $i0, 3, 3);

        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r5 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r4);

        $r7 = r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Program mProgram>;

        if $r7 == null goto label1;

        $i8 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i10 = r0.<android.filterpacks.imageproc.CropRectFilter: int mTarget>;

        if $i8 == $i10 goto label2;

     label1:
        $i2 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r1, $i2);

     label2:
        $i3 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i5 = r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth>;

        if $i3 != $i5 goto label3;

        $i7 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i9 = r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight>;

        if $i7 == $i9 goto label4;

     label3:
        $i4 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i6 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void updateSourceRect(int,int)>($i4, $i6);

     label4:
        $r8 = r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r8.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r5);

        virtualinvoke r0.<android.filterpacks.imageproc.CropRectFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r5);

        virtualinvoke r5.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    void updateSourceRect(int, int)
    {
        android.filterpacks.imageproc.CropRectFilter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.filterfw.core.Program $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.filterfw.core.ShaderProgram $r2;

        r0 := @this: android.filterpacks.imageproc.CropRectFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth> = i0;

        r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight> = i1;

        $r1 = r0.<android.filterpacks.imageproc.CropRectFilter: android.filterfw.core.Program mProgram>;

        $r2 = (android.filterfw.core.ShaderProgram) $r1;

        $i2 = r0.<android.filterpacks.imageproc.CropRectFilter: int mXorigin>;

        $f1 = (float) $i2;

        $i3 = r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth>;

        $f0 = (float) $i3;

        $f10 = $f1 / $f0;

        $i4 = r0.<android.filterpacks.imageproc.CropRectFilter: int mYorigin>;

        $f3 = (float) $i4;

        $i5 = r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight>;

        $f2 = (float) $i5;

        $f11 = $f3 / $f2;

        $i6 = r0.<android.filterpacks.imageproc.CropRectFilter: int mOutputWidth>;

        $f5 = (float) $i6;

        $i7 = r0.<android.filterpacks.imageproc.CropRectFilter: int mWidth>;

        $f4 = (float) $i7;

        $f8 = $f5 / $f4;

        $i9 = r0.<android.filterpacks.imageproc.CropRectFilter: int mOutputHeight>;

        $f6 = (float) $i9;

        $i8 = r0.<android.filterpacks.imageproc.CropRectFilter: int mHeight>;

        $f7 = (float) $i8;

        $f9 = $f6 / $f7;

        virtualinvoke $r2.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>($f10, $f11, $f8, $f9);

        return;
    }
}
