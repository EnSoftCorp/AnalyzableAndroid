class android.media.CCParser extends java.lang.Object
{
    public static final int MAX_ROWS;
    public static final int MAX_COLS;
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int INVALID;
    private static final int RCL;
    private static final int BS;
    private static final int AOF;
    private static final int AON;
    private static final int DER;
    private static final int RU2;
    private static final int RU3;
    private static final int RU4;
    private static final int FON;
    private static final int RDC;
    private static final int TR;
    private static final int RTD;
    private static final int EDM;
    private static final int CR;
    private static final int ENM;
    private static final int EOC;
    private static final char TS;
    private static final int MODE_UNKNOWN;
    private static final int MODE_PAINT_ON;
    private static final int MODE_ROLL_UP;
    private static final int MODE_POP_ON;
    private static final int MODE_TEXT;
    private final android.media.CCParser$DisplayListener mListener;
    private int mMode;
    private int mRollUpSize;
    private android.media.CCParser$CCMemory mDisplay;
    private android.media.CCParser$CCMemory mNonDisplay;
    private android.media.CCParser$CCMemory mTextMem;

    void <init>(android.media.CCParser$DisplayListener)
    {
        android.media.CCParser r0;
        android.media.CCParser$DisplayListener r1;
        android.media.CCParser$CCMemory $r2, $r3, $r4;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$DisplayListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.CCParser: int mMode> = 1;

        r0.<android.media.CCParser: int mRollUpSize> = 4;

        $r2 = new android.media.CCParser$CCMemory;

        specialinvoke $r2.<android.media.CCParser$CCMemory: void <init>()>();

        r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay> = $r2;

        $r3 = new android.media.CCParser$CCMemory;

        specialinvoke $r3.<android.media.CCParser$CCMemory: void <init>()>();

        r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay> = $r3;

        $r4 = new android.media.CCParser$CCMemory;

        specialinvoke $r4.<android.media.CCParser$CCMemory: void <init>()>();

        r0.<android.media.CCParser: android.media.CCParser$CCMemory mTextMem> = $r4;

        r0.<android.media.CCParser: android.media.CCParser$DisplayListener mListener> = r1;

        return;
    }

    void parse(byte[])
    {
        android.media.CCParser r0;
        byte[] r1;
        android.media.CCParser$CCData[] r2;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.media.CCParser$CCData $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: byte[];

        r2 = staticinvoke <android.media.CCParser$CCData: android.media.CCParser$CCData[] fromByteArray(byte[])>(r1);

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label5;

        $z0 = <android.media.CCParser: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r8 = r2[i0];

        $r9 = virtualinvoke $r8.<android.media.CCParser$CCData: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CCParser", $r9);

     label2:
        $r3 = r2[i0];

        $z1 = specialinvoke r0.<android.media.CCParser: boolean handleCtrlCode(android.media.CCParser$CCData)>($r3);

        if $z1 != 0 goto label4;

        $r4 = r2[i0];

        $z2 = specialinvoke r0.<android.media.CCParser: boolean handleTabOffsets(android.media.CCParser$CCData)>($r4);

        if $z2 != 0 goto label4;

        $r5 = r2[i0];

        $z3 = specialinvoke r0.<android.media.CCParser: boolean handlePACCode(android.media.CCParser$CCData)>($r5);

        if $z3 != 0 goto label4;

        $r6 = r2[i0];

        $z4 = specialinvoke r0.<android.media.CCParser: boolean handleMidRowCode(android.media.CCParser$CCData)>($r6);

        if $z4 == 0 goto label3;

        goto label4;

     label3:
        $r7 = r2[i0];

        specialinvoke r0.<android.media.CCParser: boolean handleDisplayableChars(android.media.CCParser$CCData)>($r7);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return;
    }

    private android.media.CCParser$CCMemory getMemory()
    {
        android.media.CCParser r0;
        int $i0, $i1;
        android.media.CCParser$CCMemory $r1, $r2, $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.CCParser;

        $i0 = r0.<android.media.CCParser: int mMode>;

        tableswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label4;
        };

     label1:
        $r1 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay>;

        return $r1;

     label2:
        $r2 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mTextMem>;

        return $r2;

     label3:
        $r3 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        return $r3;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unrecoginized mode: ");

        $i1 = r0.<android.media.CCParser: int mMode>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CCParser", $r7);

        $r8 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        return $r8;
    }

    private boolean handleDisplayableChars(android.media.CCParser$CCData)
    {
        android.media.CCParser r0;
        android.media.CCParser$CCData r1;
        boolean $z0, $z1;
        android.media.CCParser$CCMemory $r2, $r4;
        java.lang.String $r3;
        int $i0, $i1;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$CCData;

        $z0 = virtualinvoke r1.<android.media.CCParser$CCData: boolean isDisplayableChar()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <android.media.CCParser$CCData: boolean access$000(android.media.CCParser$CCData)>(r1);

        if $z1 == 0 goto label2;

        $r4 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r4.<android.media.CCParser$CCMemory: void bs()>();

     label2:
        $r2 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        $r3 = virtualinvoke r1.<android.media.CCParser$CCData: java.lang.String getDisplayText()>();

        virtualinvoke $r2.<android.media.CCParser$CCMemory: void writeText(java.lang.String)>($r3);

        $i0 = r0.<android.media.CCParser: int mMode>;

        if $i0 == 1 goto label3;

        $i1 = r0.<android.media.CCParser: int mMode>;

        if $i1 != 2 goto label4;

     label3:
        specialinvoke r0.<android.media.CCParser: void updateDisplay()>();

     label4:
        return 1;
    }

    private boolean handleMidRowCode(android.media.CCParser$CCData)
    {
        android.media.CCParser r0;
        android.media.CCParser$CCData r1;
        android.media.CCParser$StyleCode r2;
        android.media.CCParser$CCMemory $r3;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$CCData;

        r2 = virtualinvoke r1.<android.media.CCParser$CCData: android.media.CCParser$StyleCode getMidRow()>();

        if r2 == null goto label1;

        $r3 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r3.<android.media.CCParser$CCMemory: void writeMidRowCode(android.media.CCParser$StyleCode)>(r2);

        return 1;

     label1:
        return 0;
    }

    private boolean handlePACCode(android.media.CCParser$CCData)
    {
        android.media.CCParser r0;
        android.media.CCParser$CCData r1;
        android.media.CCParser$PAC r2;
        int $i0, $i1, $i2;
        android.media.CCParser$CCMemory $r3, $r4;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$CCData;

        r2 = virtualinvoke r1.<android.media.CCParser$CCData: android.media.CCParser$PAC getPAC()>();

        if r2 == null goto label2;

        $i0 = r0.<android.media.CCParser: int mMode>;

        if $i0 != 2 goto label1;

        $r4 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        $i1 = virtualinvoke r2.<android.media.CCParser$PAC: int getRow()>();

        $i2 = r0.<android.media.CCParser: int mRollUpSize>;

        staticinvoke <android.media.CCParser$CCMemory: void access$100(android.media.CCParser$CCMemory,int,int)>($r4, $i1, $i2);

     label1:
        $r3 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r3.<android.media.CCParser$CCMemory: void writePAC(android.media.CCParser$PAC)>(r2);

        return 1;

     label2:
        return 0;
    }

    private boolean handleTabOffsets(android.media.CCParser$CCData)
    {
        android.media.CCParser r0;
        android.media.CCParser$CCData r1;
        int i0;
        android.media.CCParser$CCMemory $r2;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$CCData;

        i0 = virtualinvoke r1.<android.media.CCParser$CCData: int getTabOffset()>();

        if i0 <= 0 goto label1;

        $r2 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r2.<android.media.CCParser$CCMemory: void tab(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    private boolean handleCtrlCode(android.media.CCParser$CCData)
    {
        android.media.CCParser r0;
        android.media.CCParser$CCData r1;
        int i0, $i1, $i2, $i3, $i5, $i6;
        android.media.CCParser$CCMemory $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.media.CCParser;

        r1 := @parameter0: android.media.CCParser$CCData;

        i0 = virtualinvoke r1.<android.media.CCParser$CCData: int getCtrlCode()>();

        tableswitch(i0)
        {
            case -1: goto label16;
            case 0: goto label16;
            case 1: goto label16;
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label16;
            case 5: goto label16;
            case 6: goto label16;
            case 7: goto label16;
            case 8: goto label16;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label16;
            case 13: goto label16;
            case 14: goto label16;
            case 15: goto label16;
            case 16: goto label16;
            case 17: goto label16;
            case 18: goto label16;
            case 19: goto label16;
            case 20: goto label16;
            case 21: goto label16;
            case 22: goto label16;
            case 23: goto label16;
            case 24: goto label16;
            case 25: goto label16;
            case 26: goto label16;
            case 27: goto label16;
            case 28: goto label16;
            case 29: goto label16;
            case 30: goto label16;
            case 31: goto label16;
            case 32: goto label01;
            case 33: goto label02;
            case 34: goto label16;
            case 35: goto label16;
            case 36: goto label03;
            case 37: goto label04;
            case 38: goto label04;
            case 39: goto label04;
            case 40: goto label06;
            case 41: goto label07;
            case 42: goto label08;
            case 43: goto label09;
            case 44: goto label10;
            case 45: goto label11;
            case 46: goto label14;
            case 47: goto label15;
            default: goto label16;
        };

     label01:
        r0.<android.media.CCParser: int mMode> = 3;

        goto label17;

     label02:
        $r10 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r10.<android.media.CCParser$CCMemory: void bs()>();

        goto label17;

     label03:
        $r8 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r8.<android.media.CCParser$CCMemory: void der()>();

        goto label17;

     label04:
        $i5 = i0 - 35;

        r0.<android.media.CCParser: int mRollUpSize> = $i5;

        $i6 = r0.<android.media.CCParser: int mMode>;

        if $i6 == 2 goto label05;

        $r7 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        virtualinvoke $r7.<android.media.CCParser$CCMemory: void erase()>();

        $r9 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay>;

        virtualinvoke $r9.<android.media.CCParser$CCMemory: void erase()>();

     label05:
        r0.<android.media.CCParser: int mMode> = 2;

        goto label17;

     label06:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CCParser", "Flash On");

        goto label17;

     label07:
        r0.<android.media.CCParser: int mMode> = 1;

        goto label17;

     label08:
        r0.<android.media.CCParser: int mMode> = 4;

        $r6 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mTextMem>;

        virtualinvoke $r6.<android.media.CCParser$CCMemory: void erase()>();

        goto label17;

     label09:
        r0.<android.media.CCParser: int mMode> = 4;

        goto label17;

     label10:
        $r5 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        virtualinvoke $r5.<android.media.CCParser$CCMemory: void erase()>();

        specialinvoke r0.<android.media.CCParser: void updateDisplay()>();

        goto label17;

     label11:
        $i1 = r0.<android.media.CCParser: int mMode>;

        if $i1 != 2 goto label12;

        $r4 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        $i3 = r0.<android.media.CCParser: int mRollUpSize>;

        virtualinvoke $r4.<android.media.CCParser$CCMemory: void rollUp(int)>($i3);

        goto label13;

     label12:
        $r3 = specialinvoke r0.<android.media.CCParser: android.media.CCParser$CCMemory getMemory()>();

        virtualinvoke $r3.<android.media.CCParser$CCMemory: void cr()>();

     label13:
        $i2 = r0.<android.media.CCParser: int mMode>;

        if $i2 != 2 goto label17;

        specialinvoke r0.<android.media.CCParser: void updateDisplay()>();

        goto label17;

     label14:
        $r2 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay>;

        virtualinvoke $r2.<android.media.CCParser$CCMemory: void erase()>();

        goto label17;

     label15:
        specialinvoke r0.<android.media.CCParser: void swapMemory()>();

        r0.<android.media.CCParser: int mMode> = 3;

        specialinvoke r0.<android.media.CCParser: void updateDisplay()>();

        goto label17;

     label16:
        return 0;

     label17:
        return 1;
    }

    private void updateDisplay()
    {
        android.media.CCParser r0;
        android.view.accessibility.CaptioningManager$CaptionStyle r1;
        android.media.CCParser$DisplayListener $r2, $r3, $r5;
        android.media.CCParser$CCMemory $r4;
        android.text.SpannableStringBuilder[] $r6;

        r0 := @this: android.media.CCParser;

        $r2 = r0.<android.media.CCParser: android.media.CCParser$DisplayListener mListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.CCParser: android.media.CCParser$DisplayListener mListener>;

        r1 = interfaceinvoke $r3.<android.media.CCParser$DisplayListener: android.view.accessibility.CaptioningManager$CaptionStyle getCaptionStyle()>();

        $r5 = r0.<android.media.CCParser: android.media.CCParser$DisplayListener mListener>;

        $r4 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        $r6 = virtualinvoke $r4.<android.media.CCParser$CCMemory: android.text.SpannableStringBuilder[] getStyledText(android.view.accessibility.CaptioningManager$CaptionStyle)>(r1);

        interfaceinvoke $r5.<android.media.CCParser$DisplayListener: void onDisplayChanged(android.text.SpannableStringBuilder[])>($r6);

     label1:
        return;
    }

    private void swapMemory()
    {
        android.media.CCParser r0;
        android.media.CCParser$CCMemory r1, $r2;

        r0 := @this: android.media.CCParser;

        r1 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay>;

        $r2 = r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay>;

        r0.<android.media.CCParser: android.media.CCParser$CCMemory mDisplay> = $r2;

        r0.<android.media.CCParser: android.media.CCParser$CCMemory mNonDisplay> = r1;

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        <android.media.CCParser: int MODE_TEXT> = 4;

        <android.media.CCParser: int MODE_POP_ON> = 3;

        <android.media.CCParser: int MODE_ROLL_UP> = 2;

        <android.media.CCParser: int MODE_PAINT_ON> = 1;

        <android.media.CCParser: int MODE_UNKNOWN> = 0;

        <android.media.CCParser: char TS> = 160;

        <android.media.CCParser: int EOC> = 47;

        <android.media.CCParser: int ENM> = 46;

        <android.media.CCParser: int CR> = 45;

        <android.media.CCParser: int EDM> = 44;

        <android.media.CCParser: int RTD> = 43;

        <android.media.CCParser: int TR> = 42;

        <android.media.CCParser: int RDC> = 41;

        <android.media.CCParser: int FON> = 40;

        <android.media.CCParser: int RU4> = 39;

        <android.media.CCParser: int RU3> = 38;

        <android.media.CCParser: int RU2> = 37;

        <android.media.CCParser: int DER> = 36;

        <android.media.CCParser: int AON> = 35;

        <android.media.CCParser: int AOF> = 34;

        <android.media.CCParser: int BS> = 33;

        <android.media.CCParser: int RCL> = 32;

        <android.media.CCParser: int INVALID> = -1;

        <android.media.CCParser: java.lang.String TAG> = "CCParser";

        <android.media.CCParser: int MAX_COLS> = 32;

        <android.media.CCParser: int MAX_ROWS> = 15;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CCParser", 3);

        <android.media.CCParser: boolean DEBUG> = $z0;

        return;
    }
}
