public class android.hardware.camera2.legacy.RequestQueue extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final long INVALID_FRAME;
    private android.hardware.camera2.legacy.BurstHolder mRepeatingRequest;
    private final java.util.ArrayDeque mRequestQueue;
    private long mCurrentFrameNumber;
    private long mCurrentRepeatingFrameNumber;
    private int mCurrentRequestId;
    private final java.util.List mJpegSurfaceIds;

    public void <init>(java.util.List)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        java.util.List r1;
        java.util.ArrayDeque $r2;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = null;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue> = $r2;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber> = 0L;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId> = 0;

        r0.<android.hardware.camera2.legacy.RequestQueue: java.util.List mJpegSurfaceIds> = r1;

        return;
    }

    public synchronized android.util.Pair getNext()
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        android.hardware.camera2.legacy.BurstHolder r1, $r7;
        android.util.Pair r2, $r5;
        java.util.ArrayDeque $r3;
        java.lang.Object $r4;
        long $l0, $l1, $l3, $l4, $l5, $l7, $l8;
        java.lang.Long $r6;
        int $i2, $i6;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        $r3 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayDeque: java.lang.Object poll()>();

        r1 = (android.hardware.camera2.legacy.BurstHolder) $r4;

        if r1 != null goto label1;

        $r7 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r7 == null goto label1;

        r1 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $i6 = virtualinvoke r1.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l7 = (long) $i6;

        $l8 = $l5 + $l7;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = $l8;

     label1:
        if r1 != null goto label2;

        return null;

     label2:
        $r5 = new android.util.Pair;

        $l0 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r6);

        r2 = $r5;

        $l1 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $i2 = virtualinvoke r1.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l3 = (long) $i2;

        $l4 = $l1 + $l3;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber> = $l4;

        return r2;
    }

    public synchronized long stopRepeating(int)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        int i0, $i3;
        long l1, $l4, $l6, $l7;
        android.hardware.camera2.legacy.BurstHolder $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        byte $b5;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        i0 := @parameter0: int;

        l1 = -1L;

        $r1 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r1 == null goto label3;

        $r6 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $i3 = virtualinvoke $r6.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        if $i3 != i0 goto label3;

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = null;

        $l4 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $b5 = $l4 cmp -1L;

        if $b5 != 0 goto label1;

        $l7 = -1L;

        goto label2;

     label1:
        $l6 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $l7 = $l6 - 1L;

     label2:
        l1 = $l7;

        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RequestQueue", "Repeating capture request cancelled.");

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancel failed: no repeating request exists for request id: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RequestQueue", $r5);

     label4:
        return l1;
    }

    public synchronized long stopRepeating()
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        android.hardware.camera2.legacy.BurstHolder $r1, $r2;
        int $i0;
        long $l1;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        $r1 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RequestQueue", "cancel failed: no repeating request exists.");

        return -1L;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        $i0 = virtualinvoke $r2.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        $l1 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestQueue: long stopRepeating(int)>($i0);

        return $l1;
    }

    public synchronized int submit(java.util.List, boolean, android.hardware.camera2.utils.LongParcelable)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        java.util.List r1, $r5;
        boolean z0, $z1;
        android.hardware.camera2.utils.LongParcelable r2;
        int i0, $i2, $i3, $i4;
        android.hardware.camera2.legacy.BurstHolder r3, $r4, $r7;
        long l1, $l6, $l7, $l9;
        java.util.ArrayDeque $r6;
        byte $b8;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.hardware.camera2.utils.LongParcelable;

        $i2 = r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId>;

        $i3 = $i2 + 1;

        r0.<android.hardware.camera2.legacy.RequestQueue: int mCurrentRequestId> = $i3;

        i0 = $i2;

        $r4 = new android.hardware.camera2.legacy.BurstHolder;

        $r5 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.List mJpegSurfaceIds>;

        specialinvoke $r4.<android.hardware.camera2.legacy.BurstHolder: void <init>(int,boolean,java.util.List,java.util.Collection)>(i0, z0, r1, $r5);

        r3 = $r4;

        l1 = -1L;

        $z1 = virtualinvoke r3.<android.hardware.camera2.legacy.BurstHolder: boolean isRepeating()>();

        if $z1 == 0 goto label4;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RequestQueue", "Repeating capture request set.");

        $r7 = r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest>;

        if $r7 == null goto label3;

        $l6 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $b8 = $l6 cmp -1L;

        if $b8 != 0 goto label1;

        $l9 = -1L;

        goto label2;

     label1:
        $l7 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber>;

        $l9 = $l7 - 1L;

     label2:
        l1 = $l9;

     label3:
        r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentRepeatingFrameNumber> = -1L;

        r0.<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.legacy.BurstHolder mRepeatingRequest> = r3;

        goto label5;

     label4:
        $r6 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        virtualinvoke $r6.<java.util.ArrayDeque: boolean offer(java.lang.Object)>(r3);

        $i4 = virtualinvoke r3.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        l1 = specialinvoke r0.<android.hardware.camera2.legacy.RequestQueue: long calculateLastFrame(int)>($i4);

     label5:
        virtualinvoke r2.<android.hardware.camera2.utils.LongParcelable: void setNumber(long)>(l1);

        return i0;
    }

    private long calculateLastFrame(int)
    {
        android.hardware.camera2.legacy.RequestQueue r0;
        int i0, $i2, $i4;
        long l1, $l3, $l5;
        java.util.Iterator r1;
        android.hardware.camera2.legacy.BurstHolder r2;
        java.util.ArrayDeque $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.Object $r5;

        r0 := @this: android.hardware.camera2.legacy.RequestQueue;

        i0 := @parameter0: int;

        l1 = r0.<android.hardware.camera2.legacy.RequestQueue: long mCurrentFrameNumber>;

        $r3 = r0.<android.hardware.camera2.legacy.RequestQueue: java.util.ArrayDeque mRequestQueue>;

        r1 = virtualinvoke $r3.<java.util.ArrayDeque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.hardware.camera2.legacy.BurstHolder) $r5;

        $i2 = virtualinvoke r2.<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>();

        $l3 = (long) $i2;

        l1 = l1 + $l3;

        $i4 = virtualinvoke r2.<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>();

        if $i4 != i0 goto label2;

        $l5 = l1 - 1L;

        return $l5;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("At least one request must be in the queue to calculate frame number");

        throw $r4;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.RequestQueue: long INVALID_FRAME> = -1L;

        <android.hardware.camera2.legacy.RequestQueue: java.lang.String TAG> = "RequestQueue";

        return;
    }
}
