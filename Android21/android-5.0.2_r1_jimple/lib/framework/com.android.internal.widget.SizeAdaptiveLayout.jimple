public class com.android.internal.widget.SizeAdaptiveLayout extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean REPORT_BAD_BOUNDS;
    private static final long CROSSFADE_TIME;
    private static final int MIN_VALID_HEIGHT;
    private static final int MAX_VALID_HEIGHT;
    private android.view.View mActiveChild;
    private android.view.View mLastActive;
    private android.animation.AnimatorSet mTransitionAnimation;
    private android.animation.Animator$AnimatorListener mAnimatorListener;
    private android.animation.ObjectAnimator mFadePanel;
    private android.animation.ObjectAnimator mFadeView;
    private int mCanceledAnimationCount;
    private android.view.View mEnteringView;
    private android.view.View mLeavingView;
    private android.view.View mModestyPanel;
    private int mModestyPanelTop;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void initialize()>();

        return;
    }

    private void initialize()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.StateListDrawable r2;
        android.view.View $r3, $r6, $r7, $r9, $r23;
        android.content.Context $r4;
        boolean $z0, $z1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r5, r26;
        float[] $r8, $r11;
        android.animation.ObjectAnimator $r10, $r12, $r16, $r17;
        android.animation.AnimatorSet $r13, $r15, $r19, $r24;
        com.android.internal.widget.SizeAdaptiveLayout$BringToFrontOnEnd $r14;
        android.animation.AnimatorSet$Builder $r18;
        android.animation.Animator$AnimatorListener $r21;
        int[] $r25;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        $r3 = new android.view.View;

        $r4 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.content.Context getContext()>();

        specialinvoke $r3.<android.view.View: void <init>(android.content.Context)>($r4);

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel> = $r3;

        r1 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.graphics.drawable.Drawable getBackground()>();

        $z0 = r1 instanceof android.graphics.drawable.StateListDrawable;

        if $z0 == 0 goto label1;

        r2 = (android.graphics.drawable.StateListDrawable) r1;

        $r25 = <android.util.StateSet: int[] WILD_CARD>;

        virtualinvoke r2.<android.graphics.drawable.StateListDrawable: boolean setState(int[])>($r25);

        r1 = virtualinvoke r2.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getCurrent()>();

     label1:
        $z1 = r1 instanceof android.graphics.drawable.ColorDrawable;

        if $z1 == 0 goto label2;

        $r23 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke $r23.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        $r5 = new com.android.internal.widget.SizeAdaptiveLayout$LayoutParams;

        specialinvoke $r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        r26 = $r5;

        $r6 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke $r6.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r26);

        $r7 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void addView(android.view.View)>($r7);

        $r9 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        $r8 = newarray (float)[1];

        $r8[0] = 0.0F;

        $r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r9, "alpha", $r8);

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadePanel> = $r10;

        $r11 = newarray (float)[1];

        $r11[0] = 0.0F;

        $r12 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(null, "alpha", $r11);

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadeView> = $r12;

        $r14 = new com.android.internal.widget.SizeAdaptiveLayout$BringToFrontOnEnd;

        specialinvoke $r14.<com.android.internal.widget.SizeAdaptiveLayout$BringToFrontOnEnd: void <init>(com.android.internal.widget.SizeAdaptiveLayout)>(r0);

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.Animator$AnimatorListener mAnimatorListener> = $r14;

        $r13 = new android.animation.AnimatorSet;

        specialinvoke $r13.<android.animation.AnimatorSet: void <init>()>();

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation> = $r13;

        $r15 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        $r16 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadeView>;

        $r18 = virtualinvoke $r15.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>($r16);

        $r17 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadePanel>;

        virtualinvoke $r18.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>($r17);

        $r19 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        virtualinvoke $r19.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(250L);

        $r24 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        $r21 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.Animator$AnimatorListener mAnimatorListener>;

        virtualinvoke $r24.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r21);

        return;
    }

    public android.animation.Animator getTransitionAnimation()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        return $r1;
    }

    public android.view.View getModestyPanel()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        return $r1;
    }

    public void onAttachedToWindow()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int i0, $i1;
        android.view.View $r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLastActive> = null;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: int getChildCount()>();

        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View getChildAt(int)>(i0);

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        android.view.View r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View selectActiveChild(int)>(i1);

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void setMeasuredDimension(int,int)>(0, 0);

        return;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.SizeAdaptiveLayout$LayoutParams) $r3;

        virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void measureChild(android.view.View,int,int)>(r1, i0, i1);

        i2 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredState()>();

        i4 = staticinvoke <com.android.internal.widget.SizeAdaptiveLayout: int combineMeasuredStates(int,int)>(0, $i8);

        i5 = staticinvoke <com.android.internal.widget.SizeAdaptiveLayout: int resolveSizeAndState(int,int,int)>(i3, i0, i4);

        i6 = staticinvoke <com.android.internal.widget.SizeAdaptiveLayout: int resolveSizeAndState(int,int,int)>(i2, i1, i4);

        i7 = specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: int clampSizeToBounds(int,android.view.View)>(i6, r1);

        virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: void setMeasuredDimension(int,int)>(i5, i7);

        return;
    }

    private int clampSizeToBounds(int, android.view.View)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int i0, i1, i2, $i3, $i4, $i6;
        android.view.View r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.widget.SizeAdaptiveLayout$LayoutParams) $r3;

        i1 = 16777215 & i0;

        $i3 = r2.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int minHeight>;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i3);

        $i4 = r2.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        if $i4 == -1 goto label1;

        $i6 = r2.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i6);

     label1:
        if i1 == i2 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child view ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("measured out of bounds at ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clamped to ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SizeAdaptiveLayout", $r15);

     label2:
        return i2;
    }

    private android.view.View selectActiveChild(int)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View r1, r2, r3, r4, $r7;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams r5;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        r1 = null;

        r2 = null;

        i3 = 0;

        r3 = null;

        i4 = 2147483647;

        i5 = 0;

     label1:
        $i6 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: int getChildCount()>();

        if i5 >= $i6 goto label6;

        r4 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View getChildAt(int)>(i5);

        $r7 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        if r4 == $r7 goto label5;

        $r6 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (com.android.internal.widget.SizeAdaptiveLayout$LayoutParams) $r6;

        $i8 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        if $i8 != -1 goto label2;

        if r1 != null goto label2;

        r1 = r4;

     label2:
        $i7 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        if $i7 <= i3 goto label3;

        i3 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        r2 = r4;

     label3:
        $i10 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int minHeight>;

        if $i10 >= i4 goto label4;

        i4 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int minHeight>;

        r3 = r4;

     label4:
        if i1 == 0 goto label5;

        $i9 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int minHeight>;

        if i2 < $i9 goto label5;

        $i11 = r5.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: int maxHeight>;

        if i2 > $i11 goto label5;

        return r4;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        if r1 == null goto label7;

        r2 = r1;

     label7:
        if i1 == 0 goto label8;

        if i2 <= i3 goto label9;

     label8:
        return r2;

     label9:
        return r3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        android.animation.ObjectAnimator $r21, $r24, $r26;
        android.animation.AnimatorSet $r22, $r27, $r28, $r29;
        float[] $r23, $r25;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLastActive> = $r1;

        $i7 = i3 - i1;

        i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i7, 1073741824);

        $r2 = specialinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View selectActiveChild(int)>(i4);

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild> = $r2;

        $r3 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(0);

        $r7 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLastActive>;

        $r5 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        if $r7 == $r5 goto label3;

        $r12 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLastActive>;

        if $r12 == null goto label3;

        $r11 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mEnteringView> = $r11;

        $r14 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLastActive>;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView> = $r14;

        $r13 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mEnteringView>;

        virtualinvoke $r13.<android.view.View: void setAlpha(float)>(1.0F);

        $r16 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke $r16.<android.view.View: void setAlpha(float)>(1.0F);

        $r15 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke $r15.<android.view.View: void bringToFront()>();

        $r19 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView>;

        $i11 = virtualinvoke $r19.<android.view.View: int getHeight()>();

        r0.<com.android.internal.widget.SizeAdaptiveLayout: int mModestyPanelTop> = $i11;

        $r17 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        virtualinvoke $r17.<android.view.View: void setVisibility(int)>(0);

        $r18 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView>;

        virtualinvoke $r18.<android.view.View: void bringToFront()>();

        $r22 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        $z1 = virtualinvoke $r22.<android.animation.AnimatorSet: boolean isRunning()>();

        if $z1 == 0 goto label2;

        $r27 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        virtualinvoke $r27.<android.animation.AnimatorSet: void cancel()>();

     label2:
        $r21 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadeView>;

        $r20 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView>;

        virtualinvoke $r21.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>($r20);

        $r26 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadeView>;

        $r25 = newarray (float)[1];

        $r25[0] = 0.0F;

        virtualinvoke $r26.<android.animation.ObjectAnimator: void setFloatValues(float[])>($r25);

        $r24 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.ObjectAnimator mFadePanel>;

        $r23 = newarray (float)[1];

        $r23[0] = 0.0F;

        virtualinvoke $r24.<android.animation.ObjectAnimator: void setFloatValues(float[])>($r23);

        $r28 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        virtualinvoke $r28.<android.animation.AnimatorSet: void setupStartValues()>();

        $r29 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.animation.AnimatorSet mTransitionAnimation>;

        virtualinvoke $r29.<android.animation.AnimatorSet: void start()>();

     label3:
        $r6 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        i5 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $r8 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        i6 = virtualinvoke $r8.<android.view.View: int getMeasuredHeight()>();

        $r9 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mActiveChild>;

        virtualinvoke $r9.<android.view.View: void layout(int,int,int,int)>(0, 0, i5, i6);

        $r10 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        $i10 = r0.<com.android.internal.widget.SizeAdaptiveLayout: int mModestyPanelTop>;

        $i9 = r0.<com.android.internal.widget.SizeAdaptiveLayout: int mModestyPanelTop>;

        $i8 = $i9 + i6;

        virtualinvoke $r10.<android.view.View: void layout(int,int,int,int)>(0, $i10, i5, $i8);

        return;
    }

    public com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.internal.widget.SizeAdaptiveLayout$LayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r2;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new com.android.internal.widget.SizeAdaptiveLayout$LayoutParams;

        specialinvoke $r2.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = new com.android.internal.widget.SizeAdaptiveLayout$LayoutParams;

        specialinvoke $r1.<com.android.internal.widget.SizeAdaptiveLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.widget.SizeAdaptiveLayout$LayoutParams;

        return $z0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r1;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r2;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.util.AttributeSet r1;
        com.android.internal.widget.SizeAdaptiveLayout$LayoutParams $r2;

        r0 := @this: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    static int access$000(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $i0 = r0.<com.android.internal.widget.SizeAdaptiveLayout: int mCanceledAnimationCount>;

        return $i0;
    }

    static android.view.View access$100(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView>;

        return $r1;
    }

    static android.view.View access$200(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mModestyPanel>;

        return $r1;
    }

    static android.view.View access$300(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $r1 = r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mEnteringView>;

        return $r1;
    }

    static android.view.View access$302(com.android.internal.widget.SizeAdaptiveLayout, android.view.View)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View r1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter1: android.view.View;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mEnteringView> = r1;

        return r1;
    }

    static android.view.View access$102(com.android.internal.widget.SizeAdaptiveLayout, android.view.View)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        android.view.View r1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        r1 := @parameter1: android.view.View;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: android.view.View mLeavingView> = r1;

        return r1;
    }

    static int access$010(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $i0 = r0.<com.android.internal.widget.SizeAdaptiveLayout: int mCanceledAnimationCount>;

        $i1 = $i0 - 1;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: int mCanceledAnimationCount> = $i1;

        return $i0;
    }

    static int access$008(com.android.internal.widget.SizeAdaptiveLayout)
    {
        com.android.internal.widget.SizeAdaptiveLayout r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.internal.widget.SizeAdaptiveLayout;

        $i0 = r0.<com.android.internal.widget.SizeAdaptiveLayout: int mCanceledAnimationCount>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.widget.SizeAdaptiveLayout: int mCanceledAnimationCount> = $i1;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.SizeAdaptiveLayout: int MAX_VALID_HEIGHT> = 0;

        <com.android.internal.widget.SizeAdaptiveLayout: int MIN_VALID_HEIGHT> = 1;

        <com.android.internal.widget.SizeAdaptiveLayout: long CROSSFADE_TIME> = 250L;

        <com.android.internal.widget.SizeAdaptiveLayout: boolean REPORT_BAD_BOUNDS> = 1;

        <com.android.internal.widget.SizeAdaptiveLayout: boolean DEBUG> = 0;

        <com.android.internal.widget.SizeAdaptiveLayout: java.lang.String TAG> = "SizeAdaptiveLayout";

        return;
    }
}
