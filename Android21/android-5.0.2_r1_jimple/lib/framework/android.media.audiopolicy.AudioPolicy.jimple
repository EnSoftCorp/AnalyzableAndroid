public class android.media.audiopolicy.AudioPolicy extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int POLICY_STATUS_INVALID;
    public static final int POLICY_STATUS_UNREGISTERED;
    public static final int POLICY_STATUS_REGISTERED;
    private int mStatus;
    private android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener mStatusListener;
    private final android.os.IBinder mToken;
    private android.media.audiopolicy.AudioPolicyConfig mConfig;

    public android.os.IBinder token()
    {
        android.media.audiopolicy.AudioPolicy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        $r1 = r0.<android.media.audiopolicy.AudioPolicy: android.os.IBinder mToken>;

        return $r1;
    }

    public android.media.audiopolicy.AudioPolicyConfig getConfig()
    {
        android.media.audiopolicy.AudioPolicy r0;
        android.media.audiopolicy.AudioPolicyConfig $r1;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        $r1 = r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig mConfig>;

        return $r1;
    }

    private void <init>(android.media.audiopolicy.AudioPolicyConfig)
    {
        android.media.audiopolicy.AudioPolicy r0;
        android.media.audiopolicy.AudioPolicyConfig r1, $r3;
        android.os.Binder $r2;
        java.util.ArrayList $r4;
        boolean $z0;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        r1 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener mStatusListener> = null;

        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        r0.<android.media.audiopolicy.AudioPolicy: android.os.IBinder mToken> = $r2;

        r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig mConfig> = r1;

        $r3 = r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig mConfig>;

        $r4 = $r3.<android.media.audiopolicy.AudioPolicyConfig: java.util.ArrayList mMixes>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r0.<android.media.audiopolicy.AudioPolicy: int mStatus> = 0;

        goto label2;

     label1:
        r0.<android.media.audiopolicy.AudioPolicy: int mStatus> = 1;

     label2:
        return;
    }

    public int getStatus()
    {
        android.media.audiopolicy.AudioPolicy r0;
        int $i0;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        $i0 = r0.<android.media.audiopolicy.AudioPolicy: int mStatus>;

        return $i0;
    }

    void setStatusListener(android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener)
    {
        android.media.audiopolicy.AudioPolicy r0;
        android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener r1;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        r1 := @parameter0: android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener;

        r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener mStatusListener> = r1;

        return;
    }

    public java.lang.String toString()
    {
        android.media.audiopolicy.AudioPolicy r0;
        java.lang.String r1, $r2, $r7, r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r8;
        android.media.audiopolicy.AudioPolicyConfig $r6;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>("android.media.audiopolicy.AudioPolicy:\n");

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("config=");

        $r6 = r0.<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig mConfig>;

        $r7 = virtualinvoke $r6.<android.media.audiopolicy.AudioPolicyConfig: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return r9;
    }

    void <init>(android.media.audiopolicy.AudioPolicyConfig, android.media.audiopolicy.AudioPolicy$1)
    {
        android.media.audiopolicy.AudioPolicy r0;
        android.media.audiopolicy.AudioPolicyConfig r1;
        android.media.audiopolicy.AudioPolicy$1 r2;

        r0 := @this: android.media.audiopolicy.AudioPolicy;

        r1 := @parameter0: android.media.audiopolicy.AudioPolicyConfig;

        r2 := @parameter1: android.media.audiopolicy.AudioPolicy$1;

        specialinvoke r0.<android.media.audiopolicy.AudioPolicy: void <init>(android.media.audiopolicy.AudioPolicyConfig)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.media.audiopolicy.AudioPolicy: int POLICY_STATUS_REGISTERED> = 2;

        <android.media.audiopolicy.AudioPolicy: int POLICY_STATUS_UNREGISTERED> = 1;

        <android.media.audiopolicy.AudioPolicy: int POLICY_STATUS_INVALID> = 0;

        <android.media.audiopolicy.AudioPolicy: java.lang.String TAG> = "AudioPolicy";

        return;
    }
}
