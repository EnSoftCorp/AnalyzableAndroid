public class android.filterpacks.imageproc.VignetteFilter extends android.filterfw.core.Filter
{
    private float mScale;
    private int mTileSize;
    private android.filterfw.core.Program mProgram;
    private int mWidth;
    private int mHeight;
    private int mTarget;
    private final float mSlope;
    private final float mShade;
    private final java.lang.String mVignetteShader;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.VignetteFilter: float mScale> = 0.0F;

        r0.<android.filterpacks.imageproc.VignetteFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.VignetteFilter: int mTarget> = 0;

        r0.<android.filterpacks.imageproc.VignetteFilter: float mSlope> = 20.0F;

        r0.<android.filterpacks.imageproc.VignetteFilter: float mShade> = 0.85F;

        r0.<android.filterpacks.imageproc.VignetteFilter: java.lang.String mVignetteShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform float range;\nuniform float inv_max_dist;\nuniform float shade;\nuniform vec2 scale;\nvarying vec2 v_texcoord;\nvoid main() {\n  const float slope = 20.0;\n  vec2 coord = v_texcoord - vec2(0.5, 0.5);\n  float dist = length(coord * scale);\n  float lumen = shade / (1.0 + exp((dist * inv_max_dist - range) * slope)) + (1.0 - shade);\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  gl_FragColor = vec4(color.rgb * lumen, color.a);\n}\n";

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, $i1;
        android.filterfw.core.ShaderProgram r2, $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r3.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r1, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform float range;\nuniform float inv_max_dist;\nuniform float shade;\nuniform vec2 scale;\nvarying vec2 v_texcoord;\nvoid main() {\n  const float slope = 20.0;\n  vec2 coord = v_texcoord - vec2(0.5, 0.5);\n  float dist = length(coord * scale);\n  float lumen = shade / (1.0 + exp((dist * inv_max_dist - range) * slope)) + (1.0 - shade);\n  vec4 color = texture2D(tex_sampler_0, v_texcoord);\n  gl_FragColor = vec4(color.rgb * lumen, color.a);\n}\n");

        r2 = $r3;

        $i1 = r0.<android.filterpacks.imageproc.VignetteFilter: int mTileSize>;

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram> = r2;

        goto label3;

     label2:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        r0.<android.filterpacks.imageproc.VignetteFilter: int mTarget> = i0;

        return;
    }

    private void initParameters()
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        float[] r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.filterfw.core.Program $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1;
        java.lang.Float $r5, $r7;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        $r2 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        if $r2 == null goto label3;

        r1 = newarray (float)[2];

        $i1 = r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth>;

        $i0 = r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight>;

        if $i1 <= $i0 goto label1;

        r1[0] = 1.0F;

        $i4 = r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight>;

        $f14 = (float) $i4;

        $i5 = r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth>;

        $f13 = (float) $i5;

        $f15 = $f14 / $f13;

        r1[1] = $f15;

        goto label2;

     label1:
        $i2 = r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth>;

        $f2 = (float) $i2;

        $i3 = r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight>;

        $f1 = (float) $i3;

        $f3 = $f2 / $f1;

        r1[0] = $f3;

        r1[1] = 1.0F;

     label2:
        $f5 = r1[0];

        $f4 = r1[0];

        $f10 = $f5 * $f4;

        $f7 = r1[1];

        $f6 = r1[1];

        $f8 = $f7 * $f6;

        $f9 = $f10 + $f8;

        $d1 = (double) $f9;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        $f11 = (float) $d0;

        f0 = $f11 * 0.5F;

        $r3 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r3.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("scale", r1);

        $r4 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        $f12 = 1.0F / f0;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f12);

        virtualinvoke $r4.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("inv_max_dist", $r5);

        $r6 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.85F);

        virtualinvoke $r6.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("shade", $r7);

        specialinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void updateParameters()>();

     label3:
        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1;
        android.filterfw.core.Program $r1;
        java.lang.Float $r2;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        $r1 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        $f0 = r0.<android.filterpacks.imageproc.VignetteFilter: float mScale>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d1;

        $f2 = $f1 * 0.7F;

        $f3 = 1.3F - $f2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        virtualinvoke $r1.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("range", $r2);

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void updateParameters()>();

     label1:
        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.VignetteFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r4;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.Program $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.filterfw.core.FrameManager $r6;

        r0 := @this: android.filterpacks.imageproc.VignetteFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r5 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        if $r5 == null goto label1;

        $i6 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i8 = r0.<android.filterpacks.imageproc.VignetteFilter: int mTarget>;

        if $i6 == $i8 goto label2;

     label1:
        $i0 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r1, $i0);

     label2:
        $i1 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i2 = r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth>;

        if $i1 != $i2 goto label3;

        $i5 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i7 = r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight>;

        if $i5 == $i7 goto label4;

     label3:
        $i3 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.VignetteFilter: int mWidth> = $i3;

        $i4 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.VignetteFilter: int mHeight> = $i4;

        specialinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void initParameters()>();

     label4:
        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r4 = virtualinvoke $r6.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r3);

        $r7 = r0.<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r7.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r4);

        virtualinvoke r0.<android.filterpacks.imageproc.VignetteFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r4);

        virtualinvoke r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }
}
