public class android.app.ActivityView extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    android.util.DisplayMetrics mMetrics;
    private final android.view.TextureView mTextureView;
    private android.app.ActivityView$ActivityContainerWrapper mActivityContainer;
    private android.app.Activity mActivity;
    private int mWidth;
    private int mHeight;
    private android.view.Surface mSurface;
    private int mLastVisibility;
    private android.app.ActivityView$ActivityViewCallback mActivityViewCallback;
    android.content.IIntentSender mQueuedPendingIntent;
    android.content.Intent mQueuedIntent;

    public void <init>(android.content.Context)
    {
        android.app.ActivityView r0;
        android.content.Context r1;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.app.ActivityView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.app.ActivityView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        android.os.RemoteException r3, $r24;
        boolean $z0, $z1;
        android.app.Activity $r4, $r7, $r14, $r22;
        android.app.ActivityView$ActivityContainerWrapper $r5;
        android.app.IActivityManager $r6;
        android.os.IBinder $r8;
        android.app.ActivityView$ActivityContainerCallback $r9;
        android.app.IActivityContainer $r10;
        android.view.TextureView $r11, $r13, $r15;
        android.app.ActivityView$ActivityViewSurfaceTextureListener $r12;
        android.util.DisplayMetrics $r16, $r18;
        java.lang.Object $r17;
        android.view.Display $r19;
        java.lang.IllegalStateException $r20;
        android.content.ContextWrapper $r21;
        java.lang.RuntimeException $r23;
        java.lang.StringBuilder $r25, $r26, $r27;
        java.lang.String $r28;
        android.view.WindowManager r29;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

     label1:
        $z0 = r1 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label3;

        $z1 = r1 instanceof android.app.Activity;

        if $z1 == 0 goto label2;

        $r22 = (android.app.Activity) r1;

        r0.<android.app.ActivityView: android.app.Activity mActivity> = $r22;

        goto label3;

     label2:
        $r21 = (android.content.ContextWrapper) r1;

        r1 = virtualinvoke $r21.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label1;

     label3:
        $r4 = r0.<android.app.ActivityView: android.app.Activity mActivity>;

        if $r4 != null goto label4;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The ActivityView\'s Context is not an Activity.");

        throw $r20;

     label4:
        $r5 = new android.app.ActivityView$ActivityContainerWrapper;

        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<android.app.ActivityView: android.app.Activity mActivity>;

        $r8 = virtualinvoke $r7.<android.app.Activity: android.os.IBinder getActivityToken()>();

        $r9 = new android.app.ActivityView$ActivityContainerCallback;

        specialinvoke $r9.<android.app.ActivityView$ActivityContainerCallback: void <init>(android.app.ActivityView)>(r0);

        $r10 = interfaceinvoke $r6.<android.app.IActivityManager: android.app.IActivityContainer createActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>($r8, $r9);

        specialinvoke $r5.<android.app.ActivityView$ActivityContainerWrapper: void <init>(android.app.IActivityContainer)>($r10);

        r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer> = $r5;

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

        r3 = $r24;

        $r23 = new java.lang.RuntimeException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to create ActivityContainer. ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label7:
        $r11 = new android.view.TextureView;

        specialinvoke $r11.<android.view.TextureView: void <init>(android.content.Context)>(r1);

        r0.<android.app.ActivityView: android.view.TextureView mTextureView> = $r11;

        $r13 = r0.<android.app.ActivityView: android.view.TextureView mTextureView>;

        $r12 = new android.app.ActivityView$ActivityViewSurfaceTextureListener;

        specialinvoke $r12.<android.app.ActivityView$ActivityViewSurfaceTextureListener: void <init>(android.app.ActivityView,android.app.ActivityView$1)>(r0, null);

        virtualinvoke $r13.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>($r12);

        $r15 = r0.<android.app.ActivityView: android.view.TextureView mTextureView>;

        virtualinvoke r0.<android.app.ActivityView: void addView(android.view.View)>($r15);

        $r14 = r0.<android.app.ActivityView: android.app.Activity mActivity>;

        $r17 = virtualinvoke $r14.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("window");

        r29 = (android.view.WindowManager) $r17;

        $r16 = new android.util.DisplayMetrics;

        specialinvoke $r16.<android.util.DisplayMetrics: void <init>()>();

        r0.<android.app.ActivityView: android.util.DisplayMetrics mMetrics> = $r16;

        $r19 = interfaceinvoke r29.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r18 = r0.<android.app.ActivityView: android.util.DisplayMetrics mMetrics>;

        virtualinvoke $r19.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r18);

        $i1 = virtualinvoke r0.<android.app.ActivityView: int getVisibility()>();

        r0.<android.app.ActivityView: int mLastVisibility> = $i1;

        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.app.ActivityView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5;
        android.view.TextureView $r1;

        r0 := @this: android.app.ActivityView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = r0.<android.app.ActivityView: android.view.TextureView mTextureView>;

        $i5 = i2 - i0;

        $i4 = i3 - i1;

        virtualinvoke $r1.<android.view.TextureView: void layout(int,int,int,int)>(0, 0, $i5, $i4);

        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.app.ActivityView r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.RemoteException r2, $r8;
        android.view.Surface $r3, $r5;
        android.util.DisplayMetrics $r4, $r7;
        android.app.ActivityView$ActivityContainerWrapper $r6, $r9;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.lang.RuntimeException $r11;
        java.lang.String $r14;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $r3 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r3 == null goto label5;

     label1:
        if i0 != 8 goto label2;

        $r9 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $i7 = r0.<android.app.ActivityView: int mWidth>;

        $i6 = r0.<android.app.ActivityView: int mHeight>;

        $r7 = r0.<android.app.ActivityView: android.util.DisplayMetrics mMetrics>;

        $i5 = $r7.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke $r9.<android.app.ActivityView$ActivityContainerWrapper: void setSurface(android.view.Surface,int,int,int)>(null, $i7, $i6, $i5);

        goto label3;

     label2:
        $i1 = r0.<android.app.ActivityView: int mLastVisibility>;

        if $i1 != 8 goto label3;

        $r6 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $r5 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        $i4 = r0.<android.app.ActivityView: int mWidth>;

        $i3 = r0.<android.app.ActivityView: int mHeight>;

        $r4 = r0.<android.app.ActivityView: android.util.DisplayMetrics mMetrics>;

        $i2 = $r4.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke $r6.<android.app.ActivityView$ActivityContainerWrapper: void setSurface(android.view.Surface,int,int,int)>($r5, $i4, $i3, $i2);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        $r11 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to set surface of ActivityContainer. ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label5:
        r0.<android.app.ActivityView: int mLastVisibility> = i0;

        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private boolean injectInputEvent(android.view.InputEvent)
    {
        android.app.ActivityView r0;
        android.view.InputEvent r1;
        android.app.ActivityView$ActivityContainerWrapper $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.view.InputEvent;

        $r2 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $z0 = virtualinvoke $r3.<android.app.ActivityView$ActivityContainerWrapper: boolean injectEvent(android.view.InputEvent)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.app.ActivityView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.app.ActivityView: boolean injectInputEvent(android.view.InputEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.app.ActivityView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isFromSource(int)>(2);

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<android.app.ActivityView: boolean injectInputEvent(android.view.InputEvent)>(r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void onAttachedToWindow()
    {
        android.app.ActivityView r0;

        r0 := @this: android.app.ActivityView;

        return;
    }

    public void onDetachedFromWindow()
    {
        android.app.ActivityView r0;

        r0 := @this: android.app.ActivityView;

        return;
    }

    public boolean isAttachedToDisplay()
    {
        android.app.ActivityView r0;
        android.view.Surface $r1;
        boolean $z0;

        r0 := @this: android.app.ActivityView;

        $r1 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void startActivity(android.content.Intent)
    {
        android.app.ActivityView r0;
        android.content.Intent r1;
        android.app.ActivityView$ActivityContainerWrapper $r2, $r4, $r5;
        android.view.Surface $r3;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempt to call startActivity after release");

        throw $r6;

     label1:
        $r3 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r3 == null goto label2;

        $r5 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r5.<android.app.ActivityView$ActivityContainerWrapper: int startActivity(android.content.Intent)>(r1);

        goto label3;

     label2:
        $r4 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r4.<android.app.ActivityView$ActivityContainerWrapper: void checkEmbeddedAllowed(android.content.Intent)>(r1);

        r0.<android.app.ActivityView: android.content.Intent mQueuedIntent> = r1;

        r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent> = null;

     label3:
        return;
    }

    public void startActivity(android.content.IntentSender)
    {
        android.app.ActivityView r0;
        android.content.IntentSender r1;
        android.content.IIntentSender r2;
        android.app.ActivityView$ActivityContainerWrapper $r3, $r5, $r6;
        android.view.Surface $r4;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.content.IntentSender;

        $r3 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        if $r3 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempt to call startActivity after release");

        throw $r7;

     label1:
        r2 = virtualinvoke r1.<android.content.IntentSender: android.content.IIntentSender getTarget()>();

        $r4 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r4 == null goto label2;

        $r6 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r6.<android.app.ActivityView$ActivityContainerWrapper: int startActivityIntentSender(android.content.IIntentSender)>(r2);

        goto label3;

     label2:
        $r5 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r5.<android.app.ActivityView$ActivityContainerWrapper: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>(r2);

        r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent> = r2;

        r0.<android.app.ActivityView: android.content.Intent mQueuedIntent> = null;

     label3:
        return;
    }

    public void startActivity(android.app.PendingIntent)
    {
        android.app.ActivityView r0;
        android.app.PendingIntent r1;
        android.content.IIntentSender r2;
        android.app.ActivityView$ActivityContainerWrapper $r3, $r5, $r6;
        android.view.Surface $r4;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.app.PendingIntent;

        $r3 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        if $r3 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attempt to call startActivity after release");

        throw $r7;

     label1:
        r2 = virtualinvoke r1.<android.app.PendingIntent: android.content.IIntentSender getTarget()>();

        $r4 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r4 == null goto label2;

        $r6 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r6.<android.app.ActivityView$ActivityContainerWrapper: int startActivityIntentSender(android.content.IIntentSender)>(r2);

        goto label3;

     label2:
        $r5 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r5.<android.app.ActivityView$ActivityContainerWrapper: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>(r2);

        r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent> = r2;

        r0.<android.app.ActivityView: android.content.Intent mQueuedIntent> = null;

     label3:
        return;
    }

    public void release()
    {
        android.app.ActivityView r0;
        android.app.ActivityView$ActivityContainerWrapper $r1, $r2;
        android.view.Surface $r3, $r5;
        android.view.TextureView $r4;

        r0 := @this: android.app.ActivityView;

        $r1 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityView", "Duplicate call to release");

        return;

     label1:
        $r2 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        virtualinvoke $r2.<android.app.ActivityView$ActivityContainerWrapper: void release()>();

        r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer> = null;

        $r3 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r3 == null goto label2;

        $r5 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        virtualinvoke $r5.<android.view.Surface: void release()>();

        r0.<android.app.ActivityView: android.view.Surface mSurface> = null;

     label2:
        $r4 = r0.<android.app.ActivityView: android.view.TextureView mTextureView>;

        virtualinvoke $r4.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>(null);

        return;
    }

    private void attachToSurfaceWhenReady()
    {
        android.app.ActivityView r0;
        android.graphics.SurfaceTexture r1;
        android.os.RemoteException r2, $r15;
        android.view.TextureView $r3;
        android.view.Surface $r4, $r5, $r7, $r17;
        android.util.DisplayMetrics $r6;
        int $i0, $i1, $i2;
        android.app.ActivityView$ActivityContainerWrapper $r8, $r12, $r13;
        android.content.Intent $r9, $r14;
        android.content.IIntentSender $r10, $r11;
        java.lang.RuntimeException $r16;
        java.lang.StringBuilder $r18, $r19, $r21;
        java.lang.String $r20;

        r0 := @this: android.app.ActivityView;

        $r3 = r0.<android.app.ActivityView: android.view.TextureView mTextureView>;

        r1 = virtualinvoke $r3.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        if r1 == null goto label1;

        $r4 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        if $r4 == null goto label2;

     label1:
        return;

     label2:
        $r5 = new android.view.Surface;

        specialinvoke $r5.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r1);

        r0.<android.app.ActivityView: android.view.Surface mSurface> = $r5;

     label3:
        $r8 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $r7 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        $i2 = r0.<android.app.ActivityView: int mWidth>;

        $i1 = r0.<android.app.ActivityView: int mHeight>;

        $r6 = r0.<android.app.ActivityView: android.util.DisplayMetrics mMetrics>;

        $i0 = $r6.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke $r8.<android.app.ActivityView$ActivityContainerWrapper: void setSurface(android.view.Surface,int,int,int)>($r7, $i2, $i1, $i0);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        r2 = $r15;

        $r17 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        virtualinvoke $r17.<android.view.Surface: void release()>();

        r0.<android.app.ActivityView: android.view.Surface mSurface> = null;

        $r16 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to create ActivityContainer. ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label6:
        $r9 = r0.<android.app.ActivityView: android.content.Intent mQueuedIntent>;

        if $r9 == null goto label7;

        $r13 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $r14 = r0.<android.app.ActivityView: android.content.Intent mQueuedIntent>;

        virtualinvoke $r13.<android.app.ActivityView$ActivityContainerWrapper: int startActivity(android.content.Intent)>($r14);

        r0.<android.app.ActivityView: android.content.Intent mQueuedIntent> = null;

        goto label8;

     label7:
        $r10 = r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent>;

        if $r10 == null goto label8;

        $r12 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        $r11 = r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent>;

        virtualinvoke $r12.<android.app.ActivityView$ActivityContainerWrapper: int startActivityIntentSender(android.content.IIntentSender)>($r11);

        r0.<android.app.ActivityView: android.content.IIntentSender mQueuedPendingIntent> = null;

     label8:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setCallback(android.app.ActivityView$ActivityViewCallback)
    {
        android.app.ActivityView r0;
        android.app.ActivityView$ActivityViewCallback r1;

        r0 := @this: android.app.ActivityView;

        r1 := @parameter0: android.app.ActivityView$ActivityViewCallback;

        r0.<android.app.ActivityView: android.app.ActivityView$ActivityViewCallback mActivityViewCallback> = r1;

        return;
    }

    static android.app.ActivityView$ActivityContainerWrapper access$100(android.app.ActivityView)
    {
        android.app.ActivityView r0;
        android.app.ActivityView$ActivityContainerWrapper $r1;

        r0 := @parameter0: android.app.ActivityView;

        $r1 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityContainerWrapper mActivityContainer>;

        return $r1;
    }

    static int access$202(android.app.ActivityView, int)
    {
        android.app.ActivityView r0;
        int i0;

        r0 := @parameter0: android.app.ActivityView;

        i0 := @parameter1: int;

        r0.<android.app.ActivityView: int mWidth> = i0;

        return i0;
    }

    static int access$302(android.app.ActivityView, int)
    {
        android.app.ActivityView r0;
        int i0;

        r0 := @parameter0: android.app.ActivityView;

        i0 := @parameter1: int;

        r0.<android.app.ActivityView: int mHeight> = i0;

        return i0;
    }

    static void access$400(android.app.ActivityView)
    {
        android.app.ActivityView r0;

        r0 := @parameter0: android.app.ActivityView;

        specialinvoke r0.<android.app.ActivityView: void attachToSurfaceWhenReady()>();

        return;
    }

    static android.view.Surface access$500(android.app.ActivityView)
    {
        android.app.ActivityView r0;
        android.view.Surface $r1;

        r0 := @parameter0: android.app.ActivityView;

        $r1 = r0.<android.app.ActivityView: android.view.Surface mSurface>;

        return $r1;
    }

    static android.view.Surface access$502(android.app.ActivityView, android.view.Surface)
    {
        android.app.ActivityView r0;
        android.view.Surface r1;

        r0 := @parameter0: android.app.ActivityView;

        r1 := @parameter1: android.view.Surface;

        r0.<android.app.ActivityView: android.view.Surface mSurface> = r1;

        return r1;
    }

    static int access$200(android.app.ActivityView)
    {
        android.app.ActivityView r0;
        int $i0;

        r0 := @parameter0: android.app.ActivityView;

        $i0 = r0.<android.app.ActivityView: int mWidth>;

        return $i0;
    }

    static int access$300(android.app.ActivityView)
    {
        android.app.ActivityView r0;
        int $i0;

        r0 := @parameter0: android.app.ActivityView;

        $i0 = r0.<android.app.ActivityView: int mHeight>;

        return $i0;
    }

    static android.app.ActivityView$ActivityViewCallback access$600(android.app.ActivityView)
    {
        android.app.ActivityView r0;
        android.app.ActivityView$ActivityViewCallback $r1;

        r0 := @parameter0: android.app.ActivityView;

        $r1 = r0.<android.app.ActivityView: android.app.ActivityView$ActivityViewCallback mActivityViewCallback>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.app.ActivityView: boolean DEBUG> = 0;

        <android.app.ActivityView: java.lang.String TAG> = "ActivityView";

        return;
    }
}
