class android.view.ThreadedRenderer$AtlasInitializer extends java.lang.Object
{
    static android.view.ThreadedRenderer$AtlasInitializer sInstance;
    private boolean mInitialized;

    private void <init>()
    {
        android.view.ThreadedRenderer$AtlasInitializer r0;

        r0 := @this: android.view.ThreadedRenderer$AtlasInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ThreadedRenderer$AtlasInitializer: boolean mInitialized> = 0;

        return;
    }

    synchronized void init(android.content.Context, long)
    {
        android.view.ThreadedRenderer$AtlasInitializer r0;
        android.content.Context r1;
        long l0;
        android.os.IBinder r2;
        android.view.IAssetAtlas r3;
        android.view.GraphicBuffer r4;
        long[] r5;
        boolean $z0, $z1;
        int $i1;
        java.lang.Class $r6, $r8;
        android.os.RemoteException $r7, r9;

        r0 := @this: android.view.ThreadedRenderer$AtlasInitializer;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $z0 = r0.<android.view.ThreadedRenderer$AtlasInitializer: boolean mInitialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("assetatlas");

        if r2 != null goto label2;

        return;

     label2:
        r3 = staticinvoke <android.view.IAssetAtlas$Stub: android.view.IAssetAtlas asInterface(android.os.IBinder)>(r2);

     label3:
        $i1 = staticinvoke <android.os.Process: int myPpid()>();

        $z1 = interfaceinvoke r3.<android.view.IAssetAtlas: boolean isCompatible(int)>($i1);

        if $z1 == 0 goto label5;

        r4 = interfaceinvoke r3.<android.view.IAssetAtlas: android.view.GraphicBuffer getBuffer()>();

        if r4 == null goto label5;

        r5 = interfaceinvoke r3.<android.view.IAssetAtlas: long[] getMap()>();

        if r5 == null goto label4;

        staticinvoke <android.view.ThreadedRenderer$AtlasInitializer: void validateMap(android.content.Context,long[])>(r1, r5);

        staticinvoke <android.view.ThreadedRenderer: void access$000(long,android.view.GraphicBuffer,long[])>(l0, r4, r5);

        r0.<android.view.ThreadedRenderer$AtlasInitializer: boolean mInitialized> = 1;

     label4:
        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r6 == $r8 goto label5;

        virtualinvoke r4.<android.view.GraphicBuffer: void destroy()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("HardwareRenderer", "Could not acquire atlas", r9);

     label7:
        return;

        catch android.os.RemoteException from label3 to label5 with label6;
    }

    private static void validateMap(android.content.Context, long[])
    {
        android.content.Context r0;
        long[] r1;
        java.util.HashSet r2, $r6;
        android.content.res.Resources r3;
        android.util.LongSparseArray r4;
        int i0, i1, $i3, i8;
        android.graphics.Bitmap r5;
        long $l4, $l5, $l7;
        java.lang.Long $r7, $r10, $r15;
        java.lang.Object[] $r8;
        boolean $z0;
        java.lang.String $r9;
        java.lang.Object $r11;
        android.graphics.drawable.Drawable$ConstantState $r12;
        android.graphics.Bitmap$Config $r13, $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: long[];

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Atlas", "Validating map...");

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r2 = $r6;

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.util.LongSparseArray getPreloadedDrawables()>();

        i0 = virtualinvoke r4.<android.util.LongSparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r11 = virtualinvoke r4.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i1);

        $r12 = (android.graphics.drawable.Drawable$ConstantState) $r11;

        r5 = virtualinvoke $r12.<android.graphics.drawable.Drawable$ConstantState: android.graphics.Bitmap getBitmap()>();

        if r5 == null goto label2;

        $r14 = virtualinvoke r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r13 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        if $r14 != $r13 goto label2;

        $l7 = r5.<android.graphics.Bitmap: long mNativeBitmap>;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r15);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i8 = 0;

     label4:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label6;

        $l4 = r1[i8];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z0 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        $r8 = newarray (java.lang.Object)[1];

        $l5 = r1[i8];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r8[0] = $r10;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Pointer 0x%X, not in getPreloadedDrawables?", $r8);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Atlas", $r9);

        r1[i8] = 0L;

     label5:
        i8 = i8 + 4;

        goto label4;

     label6:
        return;
    }

    static void <clinit>()
    {
        android.view.ThreadedRenderer$AtlasInitializer $r0;

        $r0 = new android.view.ThreadedRenderer$AtlasInitializer;

        specialinvoke $r0.<android.view.ThreadedRenderer$AtlasInitializer: void <init>()>();

        <android.view.ThreadedRenderer$AtlasInitializer: android.view.ThreadedRenderer$AtlasInitializer sInstance> = $r0;

        return;
    }
}
