public class android.renderscript.ProgramVertex$Builder extends android.renderscript.Program$BaseProgramBuilder
{

    public void <init>(android.renderscript.RenderScript)
    {
        android.renderscript.ProgramVertex$Builder r0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ProgramVertex$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.Program$BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>(r1);

        return;
    }

    public android.renderscript.ProgramVertex$Builder addInput(android.renderscript.Element) throws java.lang.IllegalStateException
    {
        android.renderscript.ProgramVertex$Builder r0;
        android.renderscript.Element r1;
        int $i0, $i1, $i2;
        boolean $z0;
        android.renderscript.Element[] $r2;
        android.renderscript.RSIllegalArgumentException $r3, $r4;

        r0 := @this: android.renderscript.ProgramVertex$Builder;

        r1 := @parameter0: android.renderscript.Element;

        $i0 = r0.<android.renderscript.ProgramVertex$Builder: int mInputCount>;

        if $i0 < 8 goto label1;

        $r4 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Max input count exceeded.");

        throw $r4;

     label1:
        $z0 = virtualinvoke r1.<android.renderscript.Element: boolean isComplex()>();

        if $z0 == 0 goto label2;

        $r3 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r3.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Complex elements not allowed.");

        throw $r3;

     label2:
        $r2 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.Element[] mInputs>;

        $i1 = r0.<android.renderscript.ProgramVertex$Builder: int mInputCount>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.ProgramVertex$Builder: int mInputCount> = $i2;

        $r2[$i1] = r1;

        return r0;
    }

    public android.renderscript.ProgramVertex create()
    {
        android.renderscript.ProgramVertex$Builder r0;
        long[] r1;
        java.lang.String[] r2, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i18, $i19, $i23, $i26, i28, i29, i30, i31, i32, i33, i34;
        android.renderscript.ProgramVertex r3, $r8;
        android.renderscript.RenderScript $r4, $r6, $r7, $r16, $r21, $r24;
        java.lang.String $r5, $r14;
        android.renderscript.Program$ProgramParam $r9, $r13, $r17, $r22;
        long $l15, $l17, $l20, $l21, $l22, $l24, $l25, $l27, l35;
        android.renderscript.Program$TextureType[] $r10;
        android.renderscript.Program$TextureType $r12;
        android.renderscript.Type[] $r15;
        android.renderscript.Type $r18;
        android.renderscript.Element[] $r19, $r25;
        android.renderscript.Element $r20, $r23;

        r0 := @this: android.renderscript.ProgramVertex$Builder;

        $r4 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        virtualinvoke $r4.<android.renderscript.RenderScript: void validate()>();

        $i3 = r0.<android.renderscript.ProgramVertex$Builder: int mInputCount>;

        $i2 = r0.<android.renderscript.ProgramVertex$Builder: int mOutputCount>;

        $i5 = $i3 + $i2;

        $i4 = r0.<android.renderscript.ProgramVertex$Builder: int mConstantCount>;

        $i7 = $i5 + $i4;

        $i6 = r0.<android.renderscript.ProgramVertex$Builder: int mTextureCount>;

        $i8 = $i7 + $i6;

        $i9 = $i8 * 2;

        r1 = newarray (long)[$i9];

        $i11 = r0.<android.renderscript.ProgramVertex$Builder: int mTextureCount>;

        r2 = newarray (java.lang.String)[$i11];

        i0 = 0;

        i1 = 0;

     label1:
        $i10 = r0.<android.renderscript.ProgramVertex$Builder: int mInputCount>;

        if i1 >= $i10 goto label2;

        i28 = i0 + 1;

        $r22 = <android.renderscript.Program$ProgramParam: android.renderscript.Program$ProgramParam INPUT>;

        $i26 = $r22.<android.renderscript.Program$ProgramParam: int mID>;

        $l25 = (long) $i26;

        r1[i0] = $l25;

        i0 = i28 + 1;

        $r25 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.Element[] mInputs>;

        $r23 = $r25[i1];

        $r24 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        $l27 = virtualinvoke $r23.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>($r24);

        r1[i28] = $l27;

        i1 = i1 + 1;

        goto label1;

     label2:
        i29 = 0;

     label3:
        $i13 = r0.<android.renderscript.ProgramVertex$Builder: int mOutputCount>;

        if i29 >= $i13 goto label4;

        i30 = i0 + 1;

        $r17 = <android.renderscript.Program$ProgramParam: android.renderscript.Program$ProgramParam OUTPUT>;

        $i23 = $r17.<android.renderscript.Program$ProgramParam: int mID>;

        $l22 = (long) $i23;

        r1[i0] = $l22;

        i0 = i30 + 1;

        $r19 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.Element[] mOutputs>;

        $r20 = $r19[i29];

        $r21 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        $l24 = virtualinvoke $r20.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>($r21);

        r1[i30] = $l24;

        i29 = i29 + 1;

        goto label3;

     label4:
        i31 = 0;

     label5:
        $i12 = r0.<android.renderscript.ProgramVertex$Builder: int mConstantCount>;

        if i31 >= $i12 goto label6;

        i32 = i0 + 1;

        $r13 = <android.renderscript.Program$ProgramParam: android.renderscript.Program$ProgramParam CONSTANT>;

        $i19 = $r13.<android.renderscript.Program$ProgramParam: int mID>;

        $l20 = (long) $i19;

        r1[i0] = $l20;

        i0 = i32 + 1;

        $r15 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.Type[] mConstants>;

        $r18 = $r15[i31];

        $r16 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        $l21 = virtualinvoke $r18.<android.renderscript.Type: long getID(android.renderscript.RenderScript)>($r16);

        r1[i32] = $l21;

        i31 = i31 + 1;

        goto label5;

     label6:
        i33 = 0;

     label7:
        $i14 = r0.<android.renderscript.ProgramVertex$Builder: int mTextureCount>;

        if i33 >= $i14 goto label8;

        i34 = i0 + 1;

        $r9 = <android.renderscript.Program$ProgramParam: android.renderscript.Program$ProgramParam TEXTURE_TYPE>;

        $i16 = $r9.<android.renderscript.Program$ProgramParam: int mID>;

        $l15 = (long) $i16;

        r1[i0] = $l15;

        i0 = i34 + 1;

        $r10 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$TextureType[] mTextureTypes>;

        $r12 = $r10[i33];

        $i18 = $r12.<android.renderscript.Program$TextureType: int mID>;

        $l17 = (long) $i18;

        r1[i34] = $l17;

        $r11 = r0.<android.renderscript.ProgramVertex$Builder: java.lang.String[] mTextureNames>;

        $r14 = $r11[i33];

        r2[i33] = $r14;

        i33 = i33 + 1;

        goto label7;

     label8:
        $r6 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        $r5 = r0.<android.renderscript.ProgramVertex$Builder: java.lang.String mShader>;

        l35 = virtualinvoke $r6.<android.renderscript.RenderScript: long nProgramVertexCreate(java.lang.String,java.lang.String[],long[])>($r5, r2, r1);

        $r8 = new android.renderscript.ProgramVertex;

        $r7 = r0.<android.renderscript.ProgramVertex$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r8.<android.renderscript.ProgramVertex: void <init>(long,android.renderscript.RenderScript)>(l35, $r7);

        r3 = $r8;

        virtualinvoke r0.<android.renderscript.ProgramVertex$Builder: void initProgram(android.renderscript.Program)>(r3);

        return r3;
    }
}
