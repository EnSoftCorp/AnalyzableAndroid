public class android.telephony.SubscriptionManager extends java.lang.Object implements android.provider.BaseColumns
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private static final boolean VDBG;
    public static final int INVALID_PHONE_ID;
    public static final int DEFAULT_PHONE_ID;
    public static final int INVALID_SLOT_ID;
    public static final int DEFAULT_SLOT_ID;
    public static final long ASK_USER_SUB_ID;
    public static final long INVALID_SUB_ID;
    public static final long DEFAULT_SUB_ID;
    public static final android.net.Uri CONTENT_URI;
    public static final int DEFAULT_INT_VALUE;
    public static final java.lang.String DEFAULT_STRING_VALUE;
    public static final int EXTRA_VALUE_NEW_SIM;
    public static final int EXTRA_VALUE_REMOVE_SIM;
    public static final int EXTRA_VALUE_REPOSITION_SIM;
    public static final int EXTRA_VALUE_NOCHANGE;
    public static final java.lang.String INTENT_KEY_DETECT_STATUS;
    public static final java.lang.String INTENT_KEY_SIM_COUNT;
    public static final java.lang.String INTENT_KEY_NEW_SIM_SLOT;
    public static final java.lang.String INTENT_KEY_NEW_SIM_STATUS;
    public static final java.lang.String ICC_ID;
    public static final java.lang.String SIM_ID;
    public static final int SIM_NOT_INSERTED;
    public static final java.lang.String DISPLAY_NAME;
    public static final int DEFAULT_NAME_RES;
    public static final java.lang.String NAME_SOURCE;
    public static final int NAME_SOURCE_UNDEFINDED;
    public static final int NAME_SOURCE_DEFAULT_SOURCE;
    public static final int NAME_SOURCE_SIM_SOURCE;
    public static final int NAME_SOURCE_USER_INPUT;
    public static final java.lang.String COLOR;
    public static final int COLOR_1;
    public static final int COLOR_2;
    public static final int COLOR_3;
    public static final int COLOR_4;
    public static final int COLOR_DEFAULT;
    public static final java.lang.String NUMBER;
    public static final java.lang.String DISPLAY_NUMBER_FORMAT;
    public static final int DISPLAY_NUMBER_NONE;
    public static final int DISPLAY_NUMBER_FIRST;
    public static final int DISPLAY_NUMBER_LAST;
    public static final int DISLPAY_NUMBER_DEFAULT;
    public static final java.lang.String DATA_ROAMING;
    public static final int DATA_ROAMING_ENABLE;
    public static final int DATA_ROAMING_DISABLE;
    public static final int DATA_ROAMING_DEFAULT;
    public static final java.lang.String MCC;
    public static final java.lang.String MNC;
    private static final int RES_TYPE_BACKGROUND_DARK;
    private static final int RES_TYPE_BACKGROUND_LIGHT;
    private static final int[] sSimBackgroundDarkRes;
    public static final java.lang.String SUB_DEFAULT_CHANGED_ACTION;

    public void <init>()
    {
        android.telephony.SubscriptionManager r0;

        r0 := @this: android.telephony.SubscriptionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("SubscriptionManager created");

        return;
    }

    public static android.telephony.SubInfoRecord getSubInfoForSubscriber(long)
    {
        long l0;
        android.telephony.SubInfoRecord r0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSubInfoForSubscriberx]- invalid subId");

        return null;

     label1:
        r0 = null;

     label2:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>(l0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return r0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static java.util.List getSubInfoUsingIccId(java.lang.String)
    {
        java.lang.String r0;
        java.util.List r1;
        com.android.internal.telephony.ISub r2;
        android.os.IBinder $r3;
        java.util.ArrayList $r4;
        android.os.RemoteException $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSubInfoUsingIccId]- null iccid");

        return null;

     label1:
        r1 = null;

     label2:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r2 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r3);

        if r2 == null goto label3;

        r1 = interfaceinvoke r2.<com.android.internal.telephony.ISub: java.util.List getSubInfoUsingIccId(java.lang.String)>(r0);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        if r1 != null goto label6;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

     label6:
        return r1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static java.util.List getSubInfoUsingSlotId(int)
    {
        int i0;
        java.util.List r0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        java.util.ArrayList $r3;
        android.os.RemoteException $r4;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotId(int)>(i0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSubInfoUsingSlotId]- invalid slotId");

        return null;

     label1:
        r0 = null;

     label2:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getSubInfoUsingSlotId(int)>(i0);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        if r0 != null goto label6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0 = $r3;

     label6:
        return r0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static java.util.List getAllSubInfoList()
    {
        java.util.List r0;
        com.android.internal.telephony.ISub r1;
        android.os.IBinder $r2;
        java.util.ArrayList $r3;
        android.os.RemoteException $r4;

        r0 = null;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label2;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getAllSubInfoList()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        if r0 != null goto label5;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0 = $r3;

     label5:
        return r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.util.List getActiveSubInfoList()
    {
        java.util.List r0;
        com.android.internal.telephony.ISub r1;
        android.os.IBinder $r2;
        java.util.ArrayList $r3;
        android.os.RemoteException $r4;

        r0 = null;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label2;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: java.util.List getActiveSubInfoList()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        if r0 != null goto label5;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0 = $r3;

     label5:
        return r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getAllSubInfoCount()
    {
        int i0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        i0 = 0;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        i0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int getAllSubInfoCount()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getActiveSubInfoCount()
    {
        int i0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        i0 = 0;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        i0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int getActiveSubInfoCount()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.net.Uri addSubInfoRecord(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[addSubInfoRecord]- null iccId");

     label1:
        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotId(int)>(i0);

        if $z0 != 0 goto label2;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[addSubInfoRecord]- invalid slotId");

     label2:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        interfaceinvoke r1.<com.android.internal.telephony.ISub: int addSubInfoRecord(java.lang.String,int)>(r0, i0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static int setColor(int, long)
    {
        int i0, i2, i3;
        long l1;
        com.android.internal.telephony.ISub r0;
        int[] $r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = <android.telephony.SubscriptionManager: int[] sSimBackgroundDarkRes>;

        i2 = lengthof $r1;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l1);

        if $z0 == 0 goto label1;

        if i0 < 0 goto label1;

        if i0 < i2 goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setColor]- fail");

        return -1;

     label2:
        i3 = 0;

     label3:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r0 == null goto label4;

        i3 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int setColor(int,long)>(i0, l1);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        return i3;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int setDisplayName(java.lang.String, long)
    {
        java.lang.String r0;
        long l0;
        int $i1;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,long,long)>(r0, l0, -1L);

        return $i1;
    }

    public static int setDisplayName(java.lang.String, long, long)
    {
        java.lang.String r0;
        long l0, l1;
        int i2;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setDisplayName]- fail");

        return -1;

     label1:
        i2 = 0;

     label2:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        i2 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int setDisplayNameUsingSrc(java.lang.String,long,long)>(r0, l0, l1);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return i2;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static int setDisplayNumber(java.lang.String, long)
    {
        java.lang.String r0;
        long l0;
        int i1;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        if r0 == null goto label1;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l0);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setDisplayNumber]- fail");

        return -1;

     label2:
        i1 = 0;

     label3:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label4;

        i1 = interfaceinvoke r1.<com.android.internal.telephony.ISub: int setDisplayNumber(java.lang.String,long)>(r0, l0);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        return i1;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int setDisplayNumberFormat(int, long)
    {
        int i0, i2;
        long l1;
        com.android.internal.telephony.ISub r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 < 0 goto label1;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l1);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setDisplayNumberFormat]- fail, return -1");

        return -1;

     label2:
        i2 = 0;

     label3:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label4;

        i2 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int setDisplayNumberFormat(int,long)>(i0, l1);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

     label6:
        return i2;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int setDataRoaming(int, long)
    {
        int i0, i2;
        long l1;
        com.android.internal.telephony.ISub r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        if i0 < 0 goto label1;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l1);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[setDataRoaming]- fail");

        return -1;

     label2:
        i2 = 0;

     label3:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label4;

        i2 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int setDataRoaming(int,long)>(i0, l1);

     label4:
        goto label6;

     label5:
        $r2 := @caughtexception;

     label6:
        return i2;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static int getSlotId(long)
    {
        long l0;
        int i1;
        com.android.internal.telephony.ISub r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSlotId]- fail");

     label1:
        i1 = -1000;

     label2:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label3;

        i1 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int getSlotId(long)>(l0);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        return i1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static long[] getSubId(int)
    {
        int i0;
        long[] r0;
        com.android.internal.telephony.ISub r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSlotId(int)>(i0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getSubId]- fail");

        return null;

     label1:
        r0 = null;

     label2:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: long[] getSubId(int)>(i0);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return r0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static int getPhoneId(long)
    {
        long l0;
        int i1;
        com.android.internal.telephony.ISub r0;
        boolean $z0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("[getPhoneId]- fail");

        return -1000;

     label1:
        i1 = -1000;

     label2:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label3;

        i1 = interfaceinvoke r0.<com.android.internal.telephony.ISub: int getPhoneId(long)>(l0);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        return i1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private static int[] setSimResource(int)
    {
        int i0;
        int[] r0, $r1, $r2;

        i0 := @parameter0: int;

        r0 = null;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = newarray (int)[4];

        $r2[0] = 17303045;

        $r2[1] = 17303047;

        $r2[2] = 17303046;

        $r2[3] = 17303048;

        r0 = $r2;

        goto label3;

     label2:
        $r1 = newarray (int)[4];

        $r1[0] = 17303049;

        $r1[1] = 17303051;

        $r1[2] = 17303050;

        $r1[3] = 17303052;

        r0 = $r1;

     label3:
        return r0;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SubManager] ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SUB", $r4);

        return;
    }

    public static long getDefaultSubId()
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 = -1000L;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        l0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: long getDefaultSubId()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return l0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static long getDefaultVoiceSubId()
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 = -1000L;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        l0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: long getDefaultVoiceSubId()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return l0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setDefaultVoiceSubId(long)
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 := @parameter0: long;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        interfaceinvoke r0.<com.android.internal.telephony.ISub: void setDefaultVoiceSubId(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.telephony.SubInfoRecord getDefaultVoiceSubInfo()
    {
        long $l0;
        android.telephony.SubInfoRecord $r0;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultVoiceSubId()>();

        $r0 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>($l0);

        return $r0;
    }

    public static int getDefaultVoicePhoneId()
    {
        long $l0;
        int $i1;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultVoiceSubId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>($l0);

        return $i1;
    }

    public static long getDefaultSmsSubId()
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 = -1000L;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        l0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: long getDefaultSmsSubId()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return l0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setDefaultSmsSubId(long)
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 := @parameter0: long;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        interfaceinvoke r0.<com.android.internal.telephony.ISub: void setDefaultSmsSubId(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.telephony.SubInfoRecord getDefaultSmsSubInfo()
    {
        long $l0;
        android.telephony.SubInfoRecord $r0;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultSmsSubId()>();

        $r0 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>($l0);

        return $r0;
    }

    public static int getDefaultSmsPhoneId()
    {
        long $l0;
        int $i1;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultSmsSubId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>($l0);

        return $i1;
    }

    public static long getDefaultDataSubId()
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 = -1000L;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        l0 = interfaceinvoke r0.<com.android.internal.telephony.ISub: long getDefaultDataSubId()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return l0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setDefaultDataSubId(long)
    {
        long l0;
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

        l0 := @parameter0: long;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        interfaceinvoke r0.<com.android.internal.telephony.ISub: void setDefaultDataSubId(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static android.telephony.SubInfoRecord getDefaultDataSubInfo()
    {
        long $l0;
        android.telephony.SubInfoRecord $r0;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultDataSubId()>();

        $r0 = staticinvoke <android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>($l0);

        return $r0;
    }

    public static int getDefaultDataPhoneId()
    {
        long $l0;
        int $i1;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultDataSubId()>();

        $i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>($l0);

        return $i1;
    }

    public static void clearSubInfo()
    {
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        interfaceinvoke r0.<com.android.internal.telephony.ISub: int clearSubInfo()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean allDefaultsSelected()
    {
        long $l0, $l2, $l4;
        byte $b1, $b3, $b5;

        $l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultDataSubId()>();

        $b1 = $l0 cmp -1000L;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        $l2 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultSmsSubId()>();

        $b3 = $l2 cmp -1000L;

        if $b3 != 0 goto label2;

        return 0;

     label2:
        $l4 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultVoiceSubId()>();

        $b5 = $l4 cmp -1000L;

        if $b5 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static void clearDefaultsForInactiveSubIds()
    {
        com.android.internal.telephony.ISub r0;
        android.os.IBinder $r1;
        android.os.RemoteException $r2;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r0 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r1);

        if r0 == null goto label2;

        interfaceinvoke r0.<com.android.internal.telephony.ISub: void clearDefaultsForInactiveSubIds()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static boolean isValidSubId(long)
    {
        long l0;
        byte $b1;
        boolean $z0;

        l0 := @parameter0: long;

        $b1 = l0 cmp -1000L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidSlotId(int)
    {
        int i0, $i1;
        android.telephony.TelephonyManager $r0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == -1000 goto label1;

        if i0 < 0 goto label1;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getSimCount()>();

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidPhoneId(int)
    {
        int i0, $i1;
        android.telephony.TelephonyManager $r0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == -1000 goto label1;

        if i0 < 0 goto label1;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void putPhoneIdAndSubIdExtra(android.content.Intent, int)
    {
        android.content.Intent r0;
        int i0, $i1;
        long[] r1;
        long $l2;

        r0 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.telephony.SubscriptionManager: long[] getSubId(int)>(i0);

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $l2 = r1[0];

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int,long)>(r0, i0, $l2);

        goto label2;

     label1:
        staticinvoke <android.telephony.SubscriptionManager: void logd(java.lang.String)>("putPhoneIdAndSubIdExtra: no valid subs");

     label2:
        return;
    }

    public static void putPhoneIdAndSubIdExtra(android.content.Intent, int, long)
    {
        android.content.Intent r0;
        int i0;
        long l1;

        r0 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l1);

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("phone", i0);

        virtualinvoke r0.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("slot", i0);

        return;
    }

    public static long[] getActiveSubIdList()
    {
        long[] r0;
        com.android.internal.telephony.ISub r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 = null;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isub");

        r1 = staticinvoke <com.android.internal.telephony.ISub$Stub: com.android.internal.telephony.ISub asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label2;

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISub: long[] getActiveSubIdList()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        if r0 != null goto label5;

        r0 = newarray (long)[0];

     label5:
        return r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        android.net.Uri $r0;
        int[] $r1;

        <android.telephony.SubscriptionManager: java.lang.String SUB_DEFAULT_CHANGED_ACTION> = "android.intent.action.SUB_DEFAULT_CHANGED";

        <android.telephony.SubscriptionManager: int RES_TYPE_BACKGROUND_LIGHT> = 1;

        <android.telephony.SubscriptionManager: int RES_TYPE_BACKGROUND_DARK> = 0;

        <android.telephony.SubscriptionManager: java.lang.String MNC> = "mnc";

        <android.telephony.SubscriptionManager: java.lang.String MCC> = "mcc";

        <android.telephony.SubscriptionManager: int DATA_ROAMING_DEFAULT> = 0;

        <android.telephony.SubscriptionManager: int DATA_ROAMING_DISABLE> = 0;

        <android.telephony.SubscriptionManager: int DATA_ROAMING_ENABLE> = 1;

        <android.telephony.SubscriptionManager: java.lang.String DATA_ROAMING> = "data_roaming";

        <android.telephony.SubscriptionManager: int DISLPAY_NUMBER_DEFAULT> = 1;

        <android.telephony.SubscriptionManager: int DISPLAY_NUMBER_LAST> = 2;

        <android.telephony.SubscriptionManager: int DISPLAY_NUMBER_FIRST> = 1;

        <android.telephony.SubscriptionManager: int DISPLAY_NUMBER_NONE> = 0;

        <android.telephony.SubscriptionManager: java.lang.String DISPLAY_NUMBER_FORMAT> = "display_number_format";

        <android.telephony.SubscriptionManager: java.lang.String NUMBER> = "number";

        <android.telephony.SubscriptionManager: int COLOR_DEFAULT> = 0;

        <android.telephony.SubscriptionManager: int COLOR_4> = 3;

        <android.telephony.SubscriptionManager: int COLOR_3> = 2;

        <android.telephony.SubscriptionManager: int COLOR_2> = 1;

        <android.telephony.SubscriptionManager: int COLOR_1> = 0;

        <android.telephony.SubscriptionManager: java.lang.String COLOR> = "color";

        <android.telephony.SubscriptionManager: int NAME_SOURCE_USER_INPUT> = 2;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_SIM_SOURCE> = 1;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_DEFAULT_SOURCE> = 0;

        <android.telephony.SubscriptionManager: int NAME_SOURCE_UNDEFINDED> = -1;

        <android.telephony.SubscriptionManager: java.lang.String NAME_SOURCE> = "name_source";

        <android.telephony.SubscriptionManager: int DEFAULT_NAME_RES> = 17039374;

        <android.telephony.SubscriptionManager: java.lang.String DISPLAY_NAME> = "display_name";

        <android.telephony.SubscriptionManager: int SIM_NOT_INSERTED> = -1;

        <android.telephony.SubscriptionManager: java.lang.String SIM_ID> = "sim_id";

        <android.telephony.SubscriptionManager: java.lang.String ICC_ID> = "icc_id";

        <android.telephony.SubscriptionManager: java.lang.String INTENT_KEY_NEW_SIM_STATUS> = "newSIMStatus";

        <android.telephony.SubscriptionManager: java.lang.String INTENT_KEY_NEW_SIM_SLOT> = "newSIMSlot";

        <android.telephony.SubscriptionManager: java.lang.String INTENT_KEY_SIM_COUNT> = "simCount";

        <android.telephony.SubscriptionManager: java.lang.String INTENT_KEY_DETECT_STATUS> = "simDetectStatus";

        <android.telephony.SubscriptionManager: int EXTRA_VALUE_NOCHANGE> = 4;

        <android.telephony.SubscriptionManager: int EXTRA_VALUE_REPOSITION_SIM> = 3;

        <android.telephony.SubscriptionManager: int EXTRA_VALUE_REMOVE_SIM> = 2;

        <android.telephony.SubscriptionManager: int EXTRA_VALUE_NEW_SIM> = 1;

        <android.telephony.SubscriptionManager: java.lang.String DEFAULT_STRING_VALUE> = "N/A";

        <android.telephony.SubscriptionManager: int DEFAULT_INT_VALUE> = -100;

        <android.telephony.SubscriptionManager: long DEFAULT_SUB_ID> = 9223372036854775807L;

        <android.telephony.SubscriptionManager: long INVALID_SUB_ID> = -1000L;

        <android.telephony.SubscriptionManager: long ASK_USER_SUB_ID> = -1001L;

        <android.telephony.SubscriptionManager: int DEFAULT_SLOT_ID> = 2147483647;

        <android.telephony.SubscriptionManager: int INVALID_SLOT_ID> = -1000;

        <android.telephony.SubscriptionManager: int DEFAULT_PHONE_ID> = 2147483647;

        <android.telephony.SubscriptionManager: int INVALID_PHONE_ID> = -1000;

        <android.telephony.SubscriptionManager: boolean VDBG> = 0;

        <android.telephony.SubscriptionManager: boolean DBG> = 1;

        <android.telephony.SubscriptionManager: java.lang.String LOG_TAG> = "SUB";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://telephony/siminfo");

        <android.telephony.SubscriptionManager: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.telephony.SubscriptionManager: int[] setSimResource(int)>(0);

        <android.telephony.SubscriptionManager: int[] sSimBackgroundDarkRes> = $r1;

        return;
    }
}
