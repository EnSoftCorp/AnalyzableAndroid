final class android.app.ApplicationPackageManager extends android.content.pm.PackageManager
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean DEBUG_ICONS;
    private static final int sDefaultFlags;
    private final java.lang.Object mLock;
    private android.os.UserManager mUserManager;
    private android.content.pm.PackageInstaller mInstaller;
    int mCachedSafeMode;
    private final android.app.ContextImpl mContext;
    private final android.content.pm.IPackageManager mPM;
    private static final java.lang.Object sSync;
    private static android.util.ArrayMap sIconCache;
    private static android.util.ArrayMap sStringCache;

    android.os.UserManager getUserManager()
    {
        android.app.ApplicationPackageManager r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        android.os.UserManager $r4, $r5, $r7;
        android.app.ContextImpl $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        $r3 = r0.<android.app.ApplicationPackageManager: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.os.UserManager mUserManager>;

        if $r4 != null goto label2;

        $r6 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r7 = staticinvoke <android.os.UserManager: android.os.UserManager get(android.content.Context)>($r6);

        r0.<android.app.ApplicationPackageManager: android.os.UserManager mUserManager> = $r7;

     label2:
        $r5 = r0.<android.app.ApplicationPackageManager: android.os.UserManager mUserManager>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.PackageInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        android.os.RemoteException $r6, r8;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r8);

        throw $r7;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1, $r4;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1, $r4;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Intent getLaunchIntentForPackage(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r16, $r20;
        android.content.Intent r2, r4, $r5, $r10;
        java.util.List r3;
        int $i0, $i1;
        java.lang.Object $r12, $r15;
        android.content.pm.ActivityInfo $r13, $r17;
        android.content.pm.ResolveInfo $r14, $r18;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.INFO");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 0);

        if r3 == null goto label1;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 > 0 goto label2;

     label1:
        virtualinvoke r2.<android.content.Intent: void removeCategory(java.lang.String)>("android.intent.category.INFO");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 0);

     label2:
        if r3 == null goto label3;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 > 0 goto label4;

     label3:
        return null;

     label4:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r4 = $r10;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (android.content.pm.ResolveInfo) $r12;

        $r13 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (android.content.pm.ResolveInfo) $r15;

        $r17 = $r18.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r20 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r16, $r20);

        return r4;
    }

    public android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r13, $r16;
        android.content.Intent r2, r4, $r5, $r8;
        java.util.List r3;
        int $i0;
        java.lang.Object $r10, $r15;
        android.content.pm.ResolveInfo $r11, $r14;
        android.content.pm.ActivityInfo $r12, $r17;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LEANBACK_LAUNCHER");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 0);

        if r3 == null goto label1;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 > 0 goto label2;

     label1:
        return null;

     label2:
        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r4 = $r8;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (android.content.pm.ResolveInfo) $r10;

        $r12 = $r11.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (android.content.pm.ResolveInfo) $r15;

        $r17 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r13, $r16);

        return r4;
    }

    public int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int[] r2;
        android.content.pm.IPackageManager $r3;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String)>(r1);

        if r2 == null goto label2;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r7);

        throw $r6;

     label5:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getPackageUid(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, i1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        android.os.RemoteException $r4, r6;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i0);

        if i1 < 0 goto label3;

     label2:
        return i1;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r6);

        throw $r5;

     label5:
        $r3 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r3.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PermissionInfo r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r1, i0);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r7);

        throw $r6;

     label5:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        java.util.List r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>(r1, i0);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r7);

        throw $r6;

     label5:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.content.pm.PermissionGroupInfo r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>(r1, i0);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r7);

        throw $r6;

     label5:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.ApplicationInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        android.os.RemoteException $r6, r8;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

        staticinvoke <android.app.ApplicationPackageManager: void maybeAdjustApplicationInfo(android.content.pm.ApplicationInfo)>(r2);

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r8);

        throw $r7;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private static void maybeAdjustApplicationInfo(android.content.pm.ApplicationInfo)
    {
        android.content.pm.ApplicationInfo r0;
        java.lang.String r1, r2, $r3, $r4, $r6, $r7;
        dalvik.system.VMRuntime $r5;
        boolean $z0;

        r0 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = r0.<android.content.pm.ApplicationInfo: java.lang.String primaryCpuAbi>;

        if $r3 == null goto label1;

        $r4 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        if $r4 == null goto label1;

        $r5 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        r1 = virtualinvoke $r5.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

        $r6 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryCpuAbi>;

        r2 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>($r6);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.content.pm.ApplicationInfo: java.lang.String secondaryNativeLibraryDir>;

        r0.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir> = $r7;

     label1:
        return;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.content.pm.ActivityInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7, r9;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r9);

        throw $r8;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.content.pm.ActivityInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7, r9;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r9);

        throw $r8;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.content.pm.ServiceInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7, r9;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r9);

        throw $r8;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.content.pm.ProviderInfo r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r6;
        android.os.RemoteException $r7, r9;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r9);

        throw $r8;

     label5:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        java.lang.String[] $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.FeatureInfo[] getSystemAvailableFeatures()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        android.content.pm.FeatureInfo[] $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasSystemFeature(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        boolean $z0;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.PermissionInfo r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        boolean $z0;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.PermissionInfo;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addPermissionAsync(android.content.pm.PermissionInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.PermissionInfo r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        boolean $z0;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.PermissionInfo;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePermission(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void removePermission(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void grantPermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void grantPermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void revokePermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void revokePermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkSignatures(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1, $i2;
        android.os.RemoteException r1, $r3;
        android.content.pm.IPackageManager $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i2 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int checkUidSignatures(int,int)>(i0, i1);

     label2:
        return $i2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        java.lang.String[] $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getNameForUid(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.content.pm.IPackageManager $r2;
        java.lang.String $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.lang.String getNameForUid(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUidForSharedUser(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r7;
        int i0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        android.os.RemoteException $r8, r10;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int getUidForSharedUser(java.lang.String)>(r1);

        if i0 == -1 goto label3;

     label2:
        return i0;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r10);

        throw $r9;

     label5:
        $r3 = new android.content.pm.PackageManager$NameNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No shared userid for user:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getInstalledPackages(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, $i1;
        android.app.ContextImpl $r1;
        java.util.List $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r1.<android.app.ContextImpl: int getUserId()>();

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)>(i0, $i1);

        return $r2;
    }

    public java.util.List getInstalledPackages(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.content.pm.ParceledListSlice r1;
        android.content.pm.IPackageManager $r2;
        java.util.List $r3;
        android.os.RemoteException $r4, r6;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(i0, i1);

        $r3 = virtualinvoke r1.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPackagesHoldingPermissions(java.lang.String[], int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1;
        int i0, i1;
        android.content.pm.ParceledListSlice r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        java.util.List $r5;
        android.os.RemoteException $r6, r8;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>(r1, i0, i1);

        $r5 = virtualinvoke r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r8);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getInstalledApplications(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.content.pm.ParceledListSlice r1;
        android.app.ContextImpl $r2;
        android.content.pm.IPackageManager $r3;
        java.util.List $r4;
        android.os.RemoteException $r5, r7;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r1 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>(i0, i1);

        $r4 = virtualinvoke r1.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        android.content.pm.ResolveInfo $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        android.content.pm.ResolveInfo $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, i1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivities(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryIntentActivitiesAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        java.util.List $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, i1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.Intent[] r2;
        android.content.Intent r3, r6;
        int i0, i1, i2, $i3;
        android.content.ContentResolver r4;
        java.lang.String[] r5;
        java.lang.String r7, $r10;
        android.app.ContextImpl $r8, $r11;
        android.content.pm.IPackageManager $r9;
        java.util.List $r12;
        android.os.RemoteException $r13, r15;
        java.lang.RuntimeException $r14;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent[];

        r3 := @parameter2: android.content.Intent;

        i0 := @parameter3: int;

        $r8 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        r4 = virtualinvoke $r8.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        r5 = null;

        if r2 == null goto label4;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r6 = r2[i2];

        if r6 == null goto label3;

        r7 = virtualinvoke r6.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>(r4);

        if r7 == null goto label3;

        if r5 != null goto label2;

        r5 = newarray (java.lang.String)[i1];

     label2:
        r5[i2] = r7;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r9 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r10 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>(r4);

        $r11 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i3 = virtualinvoke $r11.<android.app.ContextImpl: int getUserId()>();

        $r12 = interfaceinvoke $r9.<android.content.pm.IPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>(r1, r2, r5, r3, $r10, i0, $i3);

     label5:
        return $r12;

     label6:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r15);

        throw $r14;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.util.List queryBroadcastReceivers(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        java.util.List $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, i1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryBroadcastReceivers(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.RemoteException r2, $r9;
        android.app.ContextImpl $r3, $r7;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        android.content.pm.ResolveInfo $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r7.<android.app.ContextImpl: int getUserId()>();

        $r8 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, $i1);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentServicesAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        java.util.List $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, i1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentServices(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryIntentContentProvidersAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.ContentResolver $r5;
        java.lang.String $r6;
        java.util.List $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r5);

        $r7 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>(r1, $r6, i0, i1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentContentProviders(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        android.content.pm.ProviderInfo $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String, int, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        android.content.pm.ProviderInfo $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        java.util.List $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0;
        android.content.pm.InstrumentationInfo r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6, r8;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>(r1, i0);

        if r2 == null goto label3;

     label2:
        return r2;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r8);

        throw $r7;

     label5:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        java.util.List $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>(r1, i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r11, $r14, $r19, $r20, $r22, $r27, $r30;
        int i0;
        android.content.pm.ApplicationInfo r2;
        android.app.ApplicationPackageManager$ResourceName r3, $r6;
        android.graphics.drawable.Drawable r4, r32;
        java.lang.RuntimeException $r7, r35;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15, $r17, $r18, $r21, $r23, $r25, $r28, $r29;
        android.content.res.Resources$NotFoundException $r16, r34;
        android.content.pm.PackageManager$NameNotFoundException $r24, $r26;
        android.content.res.Resources r31;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        $r6 = new android.app.ApplicationPackageManager$ResourceName;

        specialinvoke $r6.<android.app.ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r6;

        r4 = specialinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)>(r3);

        if r4 == null goto label01;

        return r4;

     label01:
        if r2 != null goto label05;

     label02:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

     label03:
        goto label05;

     label04:
        $r26 := @caughtexception;

        return null;

     label05:
        r31 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        r32 = virtualinvoke r31.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        specialinvoke r0.<android.app.ApplicationPackageManager: void putCachedIcon(android.app.ApplicationPackageManager$ResourceName,android.graphics.drawable.Drawable)>(r3, r32);

     label06:
        return r32;

     label07:
        $r24 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for ");

        $r27 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r30);

        goto label10;

     label08:
        $r16 := @caughtexception;

        r34 = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for ");

        $r19 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke r34.<android.content.res.Resources$NotFoundException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r22);

        goto label10;

     label09:
        $r7 := @caughtexception;

        r35 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving icon 0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r14, r35);

     label10:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label04;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label07;
        catch android.content.res.Resources$NotFoundException from label05 to label06 with label08;
        catch java.lang.RuntimeException from label05 to label06 with label09;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 1024);

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.content.pm.ActivityInfo $r6;
        android.graphics.drawable.Drawable $r7, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>($r8);

        return $r9;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r1, 65536);

        if r2 == null goto label2;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r7;

     label2:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(0);

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public android.graphics.drawable.Drawable getDefaultActivityIcon()
    {
        android.app.ApplicationPackageManager r0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301651);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 1024);

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>(r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityBanner(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.content.pm.ActivityInfo $r6;
        android.graphics.drawable.Drawable $r7, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>($r8);

        return $r9;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r1, 65536);

        if r2 == null goto label2;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>(r0);

        return $r7;

     label2:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(0);

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationBanner(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 1024);

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.content.pm.ActivityInfo $r6;
        android.graphics.drawable.Drawable $r7, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>($r8);

        return $r9;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r1, 65536);

        if r2 == null goto label2;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r7;

     label2:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(0);

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        android.graphics.drawable.Drawable r1, r3, $r4;
        android.os.UserHandle r2;
        int i0, $i1;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        i0 = specialinvoke r0.<android.app.ApplicationPackageManager: int getBadgeResIdForUser(int)>($i1);

        if i0 != 0 goto label1;

        return r1;

     label1:
        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>("system", i0, null);

        $r4 = specialinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.Rect,boolean)>(r1, r3, null, 1);

        return $r4;
    }

    public android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int)
    {
        android.app.ApplicationPackageManager r0;
        android.graphics.drawable.Drawable r1, r4, $r5;
        android.os.UserHandle r2;
        android.graphics.Rect r3;
        int i0;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        r4 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>(r2, i0);

        if r4 != null goto label1;

        return r1;

     label1:
        $r5 = specialinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.Rect,boolean)>(r1, r4, r3, 1);

        return $r5;
    }

    public android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle, int)
    {
        android.app.ApplicationPackageManager r0;
        android.os.UserHandle r1;
        int i0, $i1;
        android.content.pm.UserInfo r2;
        boolean $z0;
        android.content.res.Resources $r3, $r6;
        android.graphics.drawable.Drawable $r4;
        android.app.ContextImpl $r5;
        android.util.DisplayMetrics $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.os.UserHandle;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        r2 = specialinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.UserInfo getUserIfProfile(int)>($i1);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label2;

        if i0 > 0 goto label1;

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r5.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r7.<android.util.DisplayMetrics: int densityDpi>;

     label1:
        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>(17302356, i0);

        return $r4;

     label2:
        return null;
    }

    public java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.CharSequence r1;
        android.os.UserHandle r2;
        android.content.pm.UserInfo r3;
        int $i0;
        boolean $z0;
        android.content.res.Resources $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.os.UserHandle;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        r3 = specialinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.UserInfo getUserIfProfile(int)>($i0);

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17041005, $r5);

        return $r6;

     label1:
        return r1;
    }

    public android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.res.Resources $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 1024);

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        return $r4;
    }

    public android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        boolean z0, $z1, $z2;
        android.content.res.Resources r2, $r20;
        java.lang.String $r3, $r10, $r16, $r17;
        int $i0, $i1;
        android.app.ContextImpl $r4, $r5, $r19, $r21;
        android.app.LoadedApk $r6;
        java.lang.String[] $r7, $r8, $r9;
        android.app.ActivityThread $r11, $r18;
        android.content.pm.PackageManager$NameNotFoundException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z1 == 0 goto label1;

        $r19 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r18 = $r19.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        $r21 = virtualinvoke $r18.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r20 = virtualinvoke $r21.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        return $r20;

     label1:
        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != $i1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r11 = $r4.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        if z0 == 0 goto label4;

        $r10 = r1.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        goto label5;

     label4:
        $r10 = r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

     label5:
        if z0 == 0 goto label6;

        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String[] splitSourceDirs>;

        goto label7;

     label6:
        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String[] splitPublicSourceDirs>;

     label7:
        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String[] resourceDirs>;

        $r7 = r1.<android.content.pm.ApplicationInfo: java.lang.String[] sharedLibraryFiles>;

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = $r5.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        r2 = virtualinvoke $r11.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.app.LoadedApk)>($r10, $r9, $r8, $r7, 0, null, $r6);

        if r2 == null goto label8;

        return r2;

     label8:
        $r12 = new android.content.pm.PackageManager$NameNotFoundException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        $r16 = r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r17);

        throw $r12;
    }

    public android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r3, $r10, $r19;
        int i0;
        android.content.pm.ApplicationInfo r2;
        boolean $z0;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r17, $r18, $r20;
        android.content.res.Resources $r11, $r16;
        android.app.ContextImpl $r12, $r13;
        android.app.ActivityThread $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.RuntimeException $r21;
        android.os.RemoteException $r22, r23;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call does not support special user #");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label1:
        $r3 = "system";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r12 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r14 = $r12.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        $r13 = virtualinvoke $r14.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r16 = virtualinvoke $r13.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        return $r16;

     label2:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 1024, i0);

        if r2 == null goto label4;

        $r11 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

     label3:
        return $r11;

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        r23 = $r22;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r23);

        throw $r21;

     label6:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public boolean isSafeMode()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r2;
        byte $b2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $i0 = r0.<android.app.ApplicationPackageManager: int mCachedSafeMode>;

        if $i0 >= 0 goto label4;

        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z1 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean isSafeMode()>();

        if $z1 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        r0.<android.app.ApplicationPackageManager: int mCachedSafeMode> = $b2;

     label4:
        $i1 = r0.<android.app.ApplicationPackageManager: int mCachedSafeMode>;

        if $i1 == 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;

     label7:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label6 with label7;
    }

    static void configurationChanged()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r5;
        android.util.ArrayMap $r3, $r4;

        $r2 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

        $r4 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label4:
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void <init>(android.app.ContextImpl, android.content.pm.IPackageManager)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ContextImpl r1;
        android.content.pm.IPackageManager r2;
        java.lang.Object $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ContextImpl;

        r2 := @parameter1: android.content.pm.IPackageManager;

        specialinvoke r0.<android.content.pm.PackageManager: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.app.ApplicationPackageManager: java.lang.Object mLock> = $r3;

        r0.<android.app.ApplicationPackageManager: int mCachedSafeMode> = -1;

        r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext> = r1;

        r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM> = r2;

        return;
    }

    private android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.Object r2, $r6, $r8, $r9;
        java.lang.ref.WeakReference r3;
        android.graphics.drawable.Drawable$ConstantState r4;
        java.lang.Throwable r5, $r13;
        android.util.ArrayMap $r7, $r10;
        android.graphics.drawable.Drawable $r12;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        $r6 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.ref.WeakReference) $r8;

        if r3 == null goto label4;

        $r9 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.graphics.drawable.Drawable$ConstantState) $r9;

        if r4 == null goto label3;

        $r12 = virtualinvoke r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        exitmonitor r2;

     label2:
        return $r12;

     label3:
        $r10 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void putCachedIcon(android.app.ApplicationPackageManager$ResourceName, android.graphics.drawable.Drawable)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        android.graphics.drawable.Drawable r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r10;
        java.lang.ref.WeakReference $r6;
        android.util.ArrayMap $r7;
        android.graphics.drawable.Drawable$ConstantState $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        $r5 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r6 = new java.lang.ref.WeakReference;

        $r8 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r8);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void handlePackageBroadcast(int, java.lang.String[], boolean)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        java.lang.String[] r0, r1;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r2, $r13, $r18;
        java.lang.Object r3, $r9, $r11, $r16;
        android.app.ApplicationPackageManager$ResourceName r4, r22;
        java.lang.Throwable r5, $r19;
        android.app.ActivityThread $r6;
        java.lang.Runtime $r7;
        android.util.ArrayMap $r8, $r10, $r12, $r15, $r17, $r20;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z1 = 0;

        if i0 != 1 goto label01;

        z1 = 1;

     label01:
        if r0 == null goto label17;

        $i4 = lengthof r0;

        if $i4 <= 0 goto label17;

        z2 = 0;

        r1 = r0;

        i1 = lengthof r1;

        i2 = 0;

     label02:
        if i2 >= i1 goto label14;

        r2 = r1[i2];

        $r9 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r3 = $r9;

        entermonitor $r9;

     label03:
        $r8 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $i5 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i3 = $i5 - 1;

     label04:
        if i3 < 0 goto label06;

        $r17 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r16 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r4 = (android.app.ApplicationPackageManager$ResourceName) $r16;

        $r18 = r4.<android.app.ApplicationPackageManager$ResourceName: java.lang.String packageName>;

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label05;

        $r20 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

        z2 = 1;

     label05:
        i3 = i3 + -1;

        goto label04;

     label06:
        $r10 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $i6 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        i7 = $i6 - 1;

     label07:
        if i7 < 0 goto label09;

        $r12 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i7);

        r22 = (android.app.ApplicationPackageManager$ResourceName) $r11;

        $r13 = r22.<android.app.ApplicationPackageManager$ResourceName: java.lang.String packageName>;

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label08;

        $r15 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i7);

        z2 = 1;

     label08:
        i7 = i7 + -1;

        goto label07;

     label09:
        exitmonitor r3;

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r3;

     label12:
        throw r5;

     label13:
        i2 = i2 + 1;

        goto label02;

     label14:
        if z2 != 0 goto label15;

        if z0 == 0 goto label17;

     label15:
        if z1 == 0 goto label16;

        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r7.<java.lang.Runtime: void gc()>();

        goto label17;

     label16:
        $r6 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        virtualinvoke $r6.<android.app.ActivityThread: void scheduleGcIdler()>();

     label17:
        return;

        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.Object r2, $r6, $r8, $r9;
        java.lang.ref.WeakReference r3;
        java.lang.CharSequence r4;
        java.lang.Throwable r5, $r12;
        android.util.ArrayMap $r7, $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        $r6 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.ref.WeakReference) $r8;

        if r3 == null goto label4;

        $r9 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (java.lang.CharSequence) $r9;

        if r4 == null goto label3;

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r10 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void putCachedString(android.app.ApplicationPackageManager$ResourceName, java.lang.CharSequence)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.CharSequence r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.lang.ref.WeakReference $r6;
        android.util.ArrayMap $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 := @parameter1: java.lang.CharSequence;

        $r5 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r10, $r12, $r16, $r20;
        int i0;
        android.content.pm.ApplicationInfo r2;
        android.app.ApplicationPackageManager$ResourceName r3, $r6;
        java.lang.CharSequence r4, r23;
        android.content.pm.PackageManager$NameNotFoundException $r7, $r8;
        java.lang.StringBuilder $r9, $r11, $r13, $r15, $r17, $r18, $r19, $r21;
        java.lang.RuntimeException $r14, r25;
        android.content.res.Resources r22;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        $r6 = new android.app.ApplicationPackageManager$ResourceName;

        specialinvoke $r6.<android.app.ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r6;

        r4 = specialinvoke r0.<android.app.ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)>(r3);

        if r4 == null goto label1;

        return r4;

     label1:
        if r2 != null goto label5;

     label2:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        return null;

     label5:
        r22 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        r23 = virtualinvoke r22.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        specialinvoke r0.<android.app.ApplicationPackageManager: void putCachedString(android.app.ApplicationPackageManager$ResourceName,java.lang.CharSequence)>(r3, r23);

     label6:
        return r23;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for ");

        $r10 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r12);

        goto label9;

     label8:
        $r14 := @caughtexception;

        r25 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving text 0x");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r20, r25);

     label9:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
        catch java.lang.RuntimeException from label5 to label6 with label8;
    }

    public android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r9, $r12, $r16, $r18;
        int i0;
        android.content.pm.ApplicationInfo r2;
        android.content.res.XmlResourceParser $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5, $r14;
        java.lang.RuntimeException $r6, r21;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r15, $r17, $r19;
        android.content.res.Resources r20;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        if r2 != null goto label4;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 1024);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        r20 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        $r4 = virtualinvoke r20.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label5:
        return $r4;

     label6:
        $r6 := @caughtexception;

        r21 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving xml 0x");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r12, r21);

        goto label8;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for ");

        $r16 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

     label8:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label4 to label5 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
    }

    public java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.VerificationParams r4, $r5;
        android.content.pm.PackageManager$LegacyPackageInstallObserver $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $r5 = new android.content.pm.VerificationParams;

        specialinvoke $r5.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(null, null, null, -1, null);

        r4 = $r5;

        $r6 = new android.content.pm.PackageManager$LegacyPackageInstallObserver;

        specialinvoke $r6.<android.content.pm.PackageManager$LegacyPackageInstallObserver: void <init>(android.content.pm.IPackageInstallObserver)>(r2);

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, $r6, i0, r3, r4, null);

        return;
    }

    public void installPackageWithVerification(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1, r4;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.ManifestDigest r5;
        android.content.pm.ContainerEncryptionParams r6;
        android.content.pm.VerificationParams r7, $r8;
        android.content.pm.PackageManager$LegacyPackageInstallObserver $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.Uri;

        r5 := @parameter5: android.content.pm.ManifestDigest;

        r6 := @parameter6: android.content.pm.ContainerEncryptionParams;

        $r8 = new android.content.pm.VerificationParams;

        specialinvoke $r8.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(r4, null, null, -1, r5);

        r7 = $r8;

        $r9 = new android.content.pm.PackageManager$LegacyPackageInstallObserver;

        specialinvoke $r9.<android.content.pm.PackageManager$LegacyPackageInstallObserver: void <init>(android.content.pm.IPackageInstallObserver)>(r2);

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, $r9, i0, r3, r7, r6);

        return;
    }

    public void installPackageWithVerificationAndEncryption(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.VerificationParams r4;
        android.content.pm.ContainerEncryptionParams r5;
        android.content.pm.PackageManager$LegacyPackageInstallObserver $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: android.content.pm.ContainerEncryptionParams;

        $r6 = new android.content.pm.PackageManager$LegacyPackageInstallObserver;

        specialinvoke $r6.<android.content.pm.PackageManager$LegacyPackageInstallObserver: void <init>(android.content.pm.IPackageInstallObserver)>(r2);

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, $r6, i0, r3, r4, r5);

        return;
    }

    public void installPackage(android.net.Uri, android.app.PackageInstallObserver, int, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.app.PackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.VerificationParams r4, $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.app.PackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $r5 = new android.content.pm.VerificationParams;

        specialinvoke $r5.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(null, null, null, -1, null);

        r4 = $r5;

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, r4, null);

        return;
    }

    public void installPackageWithVerification(android.net.Uri, android.app.PackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1, r4;
        android.app.PackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.ManifestDigest r5;
        android.content.pm.ContainerEncryptionParams r6;
        android.content.pm.VerificationParams r7, $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.app.PackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.Uri;

        r5 := @parameter5: android.content.pm.ManifestDigest;

        r6 := @parameter6: android.content.pm.ContainerEncryptionParams;

        $r8 = new android.content.pm.VerificationParams;

        specialinvoke $r8.<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>(r4, null, null, -1, r5);

        r7 = $r8;

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, r7, r6);

        return;
    }

    public void installPackageWithVerificationAndEncryption(android.net.Uri, android.app.PackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.app.PackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.VerificationParams r4;
        android.content.pm.ContainerEncryptionParams r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.app.PackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: android.content.pm.ContainerEncryptionParams;

        specialinvoke r0.<android.app.ApplicationPackageManager: void installCommon(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, r4, r5);

        return;
    }

    private void installCommon(android.net.Uri, android.app.PackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.app.PackageInstallObserver r2;
        int i0;
        java.lang.String r3, r6, $r8, $r9;
        android.content.pm.VerificationParams r4;
        android.content.pm.ContainerEncryptionParams r5;
        boolean $z0;
        android.content.pm.IPackageManager $r10;
        android.content.pm.IPackageInstallObserver2 $r11;
        java.lang.UnsupportedOperationException $r12, $r14;
        android.os.RemoteException $r13;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.app.PackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: android.content.pm.ContainerEncryptionParams;

        $r8 = "file";

        $r9 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $r14 = new java.lang.UnsupportedOperationException;

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only file:// URIs are supported");

        throw $r14;

     label1:
        if r5 == null goto label2;

        $r12 = new java.lang.UnsupportedOperationException;

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ContainerEncryptionParams not supported");

        throw $r12;

     label2:
        r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

     label3:
        $r10 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r11 = virtualinvoke r2.<android.app.PackageInstallObserver: android.content.pm.IPackageInstallObserver2 getBinder()>();

        interfaceinvoke $r10.<android.content.pm.IPackageManager: void installPackage(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String)>(r6, $r11, i0, r3, r4, null);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int installExistingPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r8, $r15;
        int i0, $i1;
        android.content.pm.IPackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r3, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14;
        android.os.RemoteException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int installExistingPackageAsUser(java.lang.String,int)>(r1, $i1);

        if i0 != -3 goto label2;

        $r3 = new android.content.pm.PackageManager$NameNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        return i0;

     label3:
        $r9 := @caughtexception;

        $r10 = new android.content.pm.PackageManager$NameNotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void verifyPendingInstall(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void verifyPendingInstall(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void extendVerificationTimeout(int, int, long)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        long l2;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void extendVerificationTimeout(int,int,long)>(i0, i1, l2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageMoveObserver r2;
        int i0;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageMoveObserver;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>(r1, r2, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getInstallerPackageName(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r4;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDeleteObserver r2;
        int i0, $i1;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>(r1, r2, $i1, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        int $i0;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r1, r2, $i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        long l0;
        android.content.pm.IPackageDataObserver r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>(l0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorage(long, android.content.IntentSender)
    {
        android.app.ApplicationPackageManager r0;
        long l0;
        android.content.IntentSender r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.IntentSender;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void freeStorage(long,android.content.IntentSender)>(l0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getPackageSizeInfo(java.lang.String, int, android.content.pm.IPackageStatsObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.content.pm.IPackageStatsObserver r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.IPackageStatsObserver;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>(r1, i0, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void addPackageToPreferred(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void removePackageFromPreferred(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPreferredPackages(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.content.pm.IPackageManager $r2;
        java.util.List $r3;
        android.os.RemoteException $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: java.util.List getPreferredPackages(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, $i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.app.ContextImpl $r5;
        android.content.pm.IPackageManager $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

     label1:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r5.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r6.<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, $i1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, $i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, $i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void replacePreferredActivityAsUser(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.util.List r1, r2;
        java.lang.String r3;
        android.content.pm.IPackageManager $r5;
        int $i0;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = interfaceinvoke $r5.<android.content.pm.IPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>(r1, r2, r3);

     label2:
        return $i0;

     label3:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.ComponentName getHomeActivities(java.util.List)
    {
        android.app.ApplicationPackageManager r0;
        java.util.List r1;
        android.content.pm.IPackageManager $r3;
        android.content.ComponentName $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.util.List;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i2 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r1, i0, i1, $i2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getComponentEnabledSetting(android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        int $i0, $i1;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        $i1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r1, $i0);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r6;
        int i0, i1, $i2;
        android.app.ContextImpl $r3, $r5;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i2 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r5.<android.app.ContextImpl: java.lang.String getOpPackageName()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r1, i0, i1, $i2, $r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getApplicationEnabledSetting(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        int $i0, $i1;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        $i1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r1, $i0);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setApplicationHiddenSettingAsUser(java.lang.String, boolean, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        boolean z0, $z1;
        android.os.UserHandle r2;
        android.content.pm.IPackageManager $r4;
        int $i0;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.UserHandle;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $z1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>(r1, z0, $i0);

     label2:
        return $z1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getApplicationHiddenSettingAsUser(java.lang.String, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        android.content.pm.IPackageManager $r4;
        int $i0;
        boolean $z0;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $z0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>(r1, $i0);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.KeySet getKeySetByAlias(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.content.pm.KeySet r3;
        android.content.pm.IPackageManager $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

     label1:
        $r7 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r7.<android.content.pm.IPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        return null;

     label4:
        return r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.KeySet getSigningKeySet(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.KeySet r2;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        return r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSignedBy(java.lang.String, android.content.pm.KeySet)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.KeySet r2;
        android.content.pm.IPackageManager $r6;
        boolean $z0;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.KeySet;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

     label1:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r6.<android.content.pm.IPackageManager: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>(r1, r2);

     label2:
        return $z0;

     label3:
        $r7 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSignedByExactly(java.lang.String, android.content.pm.KeySet)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.KeySet r2;
        android.content.pm.IPackageManager $r6;
        boolean $z0;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.KeySet;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

     label1:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r6.<android.content.pm.IPackageManager: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>(r1, r2);

     label2:
        return $z0;

     label3:
        $r7 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.IPackageManager $r2;
        android.content.pm.VerifierDeviceIdentity $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = interfaceinvoke $r2.<android.content.pm.IPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PackageInstaller getPackageInstaller()
    {
        android.app.ApplicationPackageManager r0;
        java.lang.Object r1, $r4;
        android.os.RemoteException r2, $r16;
        java.lang.Throwable r3, $r14;
        android.content.pm.PackageInstaller $r5, $r6, $r7;
        android.content.pm.IPackageManager $r8;
        android.app.ContextImpl $r9, $r11, $r13;
        android.content.pm.IPackageInstaller $r10;
        java.lang.String $r12;
        int $i0;
        java.lang.RuntimeException $r15;

        r0 := @this: android.app.ApplicationPackageManager;

        $r4 = r0.<android.app.ApplicationPackageManager: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller mInstaller>;

        if $r5 != null goto label5;

     label2:
        $r7 = new android.content.pm.PackageInstaller;

        $r9 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r8 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r10 = interfaceinvoke $r8.<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>();

        $r11 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r12 = virtualinvoke $r11.<android.app.ContextImpl: java.lang.String getPackageName()>();

        $r13 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r13.<android.app.ContextImpl: int getUserId()>();

        specialinvoke $r7.<android.content.pm.PackageInstaller: void <init>(android.content.Context,android.content.pm.PackageManager,android.content.pm.IPackageInstaller,java.lang.String,int)>($r9, r0, $r10, $r12, $i0);

        r0.<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller mInstaller> = $r7;

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r2 = $r16;

        $r15 = virtualinvoke r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r15;

     label5:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller mInstaller>;

        exitmonitor r1;

     label6:
        return $r6;

     label7:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r1;

     label8:
        throw r3;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean isPackageAvailable(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        int $i0;
        boolean $z0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        $z0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean isPackageAvailable(java.lang.String,int)>(r1, $i0);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = virtualinvoke r2.<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>();

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addCrossProfileIntentFilter(android.content.IntentFilter, int, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1, i2, $i3;
        android.app.ContextImpl $r3, $r6;
        android.content.pm.IPackageManager $r4;
        java.lang.String $r5;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r5 = virtualinvoke $r3.<android.app.ContextImpl: java.lang.String getOpPackageName()>();

        $r6 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i3 = virtualinvoke $r6.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int,int)>(r1, $r5, $i3, i0, i1, i2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearCrossProfileIntentFilters(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, $i1;
        android.app.ContextImpl $r2, $r5;
        android.content.pm.IPackageManager $r3;
        java.lang.String $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r4 = virtualinvoke $r2.<android.app.ContextImpl: java.lang.String getOpPackageName()>();

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r5.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void clearCrossProfileIntentFilters(int,java.lang.String,int)>(i0, $r4, $i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.PackageItemInfo r1;
        android.content.pm.ApplicationInfo r2;
        android.graphics.Bitmap r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4, $r8;
        android.os.UserHandle $r5;
        android.app.ContextImpl $r6;
        android.graphics.drawable.Drawable $r7, $r11, r12;
        android.os.UserManager $r9;
        android.graphics.drawable.BitmapDrawable $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.PackageItemInfo;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.PackageItemInfo: int showUserIcon>;

        if $i0 == -10000 goto label2;

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.os.UserManager getUserManager()>();

        $i3 = r1.<android.content.pm.PackageItemInfo: int showUserIcon>;

        r3 = virtualinvoke $r9.<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>($i3);

        if r3 != null goto label1;

        $i4 = r1.<android.content.pm.PackageItemInfo: int showUserIcon>;

        $r11 = staticinvoke <com.android.internal.util.UserIcons: android.graphics.drawable.Drawable getDefaultUserIcon(int,boolean)>($i4, 0);

        return $r11;

     label1:
        $r10 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r10.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r3);

        return $r10;

     label2:
        r12 = null;

        $r4 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        if $r4 == null goto label3;

        $r8 = r1.<android.content.pm.PackageItemInfo: java.lang.String packageName>;

        $i2 = r1.<android.content.pm.PackageItemInfo: int icon>;

        r12 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>($r8, $i2, r2);

     label3:
        if r12 != null goto label4;

        r12 = virtualinvoke r1.<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>(r0);

     label4:
        $r5 = new android.os.UserHandle;

        $r6 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r6.<android.app.ContextImpl: int getUserId()>();

        specialinvoke $r5.<android.os.UserHandle: void <init>(int)>($i1);

        $r7 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>(r12, $r5);

        return $r7;
    }

    private android.graphics.drawable.Drawable getBadgedDrawable(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.Rect, boolean)
    {
        android.app.ApplicationPackageManager r0;
        android.graphics.drawable.Drawable r1, r2;
        android.graphics.Rect r3, $r18;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11;
        android.graphics.Bitmap r4, $r13, $r24;
        android.graphics.Canvas r5, $r10;
        android.graphics.drawable.BitmapDrawable r6, r7, $r9, $r22, $r23;
        android.graphics.Bitmap$Config $r8;
        android.content.res.Resources $r11;
        android.app.ContextImpl $r12;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r21;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r20;
        float $f0, $f1;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if z0 == 0 goto label01;

        $z3 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z3 == 0 goto label01;

        $r22 = (android.graphics.drawable.BitmapDrawable) r1;

        $r24 = virtualinvoke $r22.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $z5 = virtualinvoke $r24.<android.graphics.Bitmap: boolean isMutable()>();

        if $z5 == 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z1 = $z4;

        if z1 == 0 goto label03;

        $r23 = (android.graphics.drawable.BitmapDrawable) r1;

        r4 = virtualinvoke $r23.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        goto label04;

     label03:
        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r8);

     label04:
        $r10 = new android.graphics.Canvas;

        specialinvoke $r10.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        r5 = $r10;

        if z1 != 0 goto label05;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r5);

     label05:
        if r3 == null goto label08;

        $i2 = r3.<android.graphics.Rect: int left>;

        if $i2 < 0 goto label06;

        $i5 = r3.<android.graphics.Rect: int top>;

        if $i5 < 0 goto label06;

        $i6 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        if $i6 > i0 goto label06;

        $i4 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        if $i4 <= i1 goto label07;

     label06:
        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Badge location ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in badged drawable bounds ");

        $r18 = new android.graphics.Rect;

        specialinvoke $r18.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, i0, i1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label07:
        $i9 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $i7 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i9, $i7);

        virtualinvoke r5.<android.graphics.Canvas: int save()>();

        $i10 = r3.<android.graphics.Rect: int left>;

        $f1 = (float) $i10;

        $i11 = r3.<android.graphics.Rect: int top>;

        $f0 = (float) $i11;

        virtualinvoke r5.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r5);

        virtualinvoke r5.<android.graphics.Canvas: void restore()>();

        goto label09;

     label08:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r5);

     label09:
        if z1 != 0 goto label11;

        $r9 = new android.graphics.drawable.BitmapDrawable;

        $r12 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r11 = virtualinvoke $r12.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        specialinvoke $r9.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r11, r4);

        r6 = $r9;

        $z2 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z2 == 0 goto label10;

        r7 = (android.graphics.drawable.BitmapDrawable) r1;

        $r13 = virtualinvoke r7.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $i3 = virtualinvoke $r13.<android.graphics.Bitmap: int getDensity()>();

        virtualinvoke r6.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>($i3);

     label10:
        return r6;

     label11:
        return r1;
    }

    private int getBadgeResIdForUser(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.content.pm.UserInfo r1;
        boolean $z0;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.UserInfo getUserIfProfile(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        if $z0 == 0 goto label1;

        return 17302358;

     label1:
        return 0;
    }

    private android.content.pm.UserInfo getUserIfProfile(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, $i1, $i2;
        java.util.List r1;
        java.util.Iterator r2;
        android.content.pm.UserInfo r3;
        android.os.UserManager $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        $r4 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.os.UserManager getUserManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke $r4.<android.os.UserManager: java.util.List getProfiles(int)>($i1);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.UserInfo) $r5;

        $i2 = r3.<android.content.pm.UserInfo: int id>;

        if $i2 != i0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.ArrayMap $r1, $r2;

        <android.app.ApplicationPackageManager: int sDefaultFlags> = 1024;

        <android.app.ApplicationPackageManager: boolean DEBUG_ICONS> = 0;

        <android.app.ApplicationPackageManager: boolean DEBUG> = 0;

        <android.app.ApplicationPackageManager: java.lang.String TAG> = "ApplicationPackageManager";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.app.ApplicationPackageManager: java.lang.Object sSync> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache> = $r2;

        return;
    }
}
