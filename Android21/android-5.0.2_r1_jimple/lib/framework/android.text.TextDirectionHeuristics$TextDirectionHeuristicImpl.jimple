abstract class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl extends java.lang.Object implements android.text.TextDirectionHeuristic
{
    private final android.text.TextDirectionHeuristics$TextDirectionAlgorithm mAlgorithm;

    public void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm)
    {
        android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl r0;
        android.text.TextDirectionHeuristics$TextDirectionAlgorithm r1;

        r0 := @this: android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl;

        r1 := @parameter0: android.text.TextDirectionHeuristics$TextDirectionAlgorithm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: android.text.TextDirectionHeuristics$TextDirectionAlgorithm mAlgorithm> = r1;

        return;
    }

    protected abstract boolean defaultIsRtl();

    public boolean isRtl(char[], int, int)
    {
        android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl r0;
        char[] r1;
        int i0, i1;
        java.nio.CharBuffer $r2;
        boolean $z0;

        r0 := @this: android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>(r1);

        $z0 = virtualinvoke r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>($r2, i0, i1);

        return $z0;
    }

    public boolean isRtl(java.lang.CharSequence, int, int)
    {
        android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2;
        android.text.TextDirectionHeuristics$TextDirectionAlgorithm $r3;
        boolean $z0, $z1;

        r0 := @this: android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i3 = $i2 - i1;

        if $i3 >= i0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        $r3 = r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: android.text.TextDirectionHeuristics$TextDirectionAlgorithm mAlgorithm>;

        if $r3 != null goto label3;

        $z1 = virtualinvoke r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $z1;

     label3:
        $z0 = specialinvoke r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $z0;
    }

    private boolean doCheck(java.lang.CharSequence, int, int)
    {
        android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2;
        android.text.TextDirectionHeuristics$TextDirectionAlgorithm $r2;
        boolean $z0;

        r0 := @this: android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: android.text.TextDirectionHeuristics$TextDirectionAlgorithm mAlgorithm>;

        $i2 = interfaceinvoke $r2.<android.text.TextDirectionHeuristics$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>(r1, i0, i1);

        lookupswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r0.<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $z0;
    }
}
