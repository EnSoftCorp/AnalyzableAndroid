public abstract class android.net.PskKeyManager extends java.lang.Object implements com.android.org.conscrypt.PSKKeyManager
{
    public static final int MAX_IDENTITY_HINT_LENGTH_BYTES;
    public static final int MAX_IDENTITY_LENGTH_BYTES;
    public static final int MAX_KEY_LENGTH_BYTES;

    public void <init>()
    {
        android.net.PskKeyManager r0;

        r0 := @this: android.net.PskKeyManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String chooseServerKeyIdentityHint(java.net.Socket)
    {
        android.net.PskKeyManager r0;
        java.net.Socket r1;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: java.net.Socket;

        return null;
    }

    public java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)
    {
        android.net.PskKeyManager r0;
        javax.net.ssl.SSLEngine r1;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: javax.net.ssl.SSLEngine;

        return null;
    }

    public java.lang.String chooseClientKeyIdentity(java.lang.String, java.net.Socket)
    {
        android.net.PskKeyManager r0;
        java.lang.String r1;
        java.net.Socket r2;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.Socket;

        return "";
    }

    public java.lang.String chooseClientKeyIdentity(java.lang.String, javax.net.ssl.SSLEngine)
    {
        android.net.PskKeyManager r0;
        java.lang.String r1;
        javax.net.ssl.SSLEngine r2;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.net.ssl.SSLEngine;

        return "";
    }

    public javax.crypto.SecretKey getKey(java.lang.String, java.lang.String, java.net.Socket)
    {
        android.net.PskKeyManager r0;
        java.lang.String r1, r2;
        java.net.Socket r3;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.net.Socket;

        return null;
    }

    public javax.crypto.SecretKey getKey(java.lang.String, java.lang.String, javax.net.ssl.SSLEngine)
    {
        android.net.PskKeyManager r0;
        java.lang.String r1, r2;
        javax.net.ssl.SSLEngine r3;

        r0 := @this: android.net.PskKeyManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        return null;
    }

    public static void <clinit>()
    {
        <android.net.PskKeyManager: int MAX_KEY_LENGTH_BYTES> = 256;

        <android.net.PskKeyManager: int MAX_IDENTITY_LENGTH_BYTES> = 128;

        <android.net.PskKeyManager: int MAX_IDENTITY_HINT_LENGTH_BYTES> = 128;

        return;
    }
}
