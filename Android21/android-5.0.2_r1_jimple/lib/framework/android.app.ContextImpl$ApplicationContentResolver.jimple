final class android.app.ContextImpl$ApplicationContentResolver extends android.content.ContentResolver
{
    private final android.app.ActivityThread mMainThread;
    private final android.os.UserHandle mUser;

    public void <init>(android.content.Context, android.app.ActivityThread, android.os.UserHandle)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.Context r1;
        android.app.ActivityThread r2, $r5;
        android.os.UserHandle r3, $r7;
        java.lang.Object $r4, $r6;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.ActivityThread;

        r3 := @parameter2: android.os.UserHandle;

        specialinvoke r0.<android.content.ContentResolver: void <init>(android.content.Context)>(r1);

        $r4 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (android.app.ActivityThread) $r4;

        r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread> = $r5;

        $r6 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r7 = (android.os.UserHandle) $r6;

        r0.<android.app.ContextImpl$ApplicationContentResolver: android.os.UserHandle mUser> = $r7;

        return;
    }

    protected android.content.IContentProvider acquireProvider(android.content.Context, java.lang.String)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.Context r1;
        java.lang.String r2, $r4;
        android.app.ActivityThread $r3;
        int $i0;
        android.content.IContentProvider $r5;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $r4 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>(r2);

        $i0 = virtualinvoke r0.<android.app.ContextImpl$ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,int,boolean)>(r1, $r4, $i0, 1);

        return $r5;
    }

    protected android.content.IContentProvider acquireExistingProvider(android.content.Context, java.lang.String)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.Context r1;
        java.lang.String r2, $r4;
        android.app.ActivityThread $r3;
        int $i0;
        android.content.IContentProvider $r5;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $r4 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>(r2);

        $i0 = virtualinvoke r0.<android.app.ContextImpl$ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean)>(r1, $r4, $i0, 1);

        return $r5;
    }

    public boolean releaseProvider(android.content.IContentProvider)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.IContentProvider r1;
        android.app.ActivityThread $r2;
        boolean $z0;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.IContentProvider;

        $r2 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $z0 = virtualinvoke $r2.<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)>(r1, 1);

        return $z0;
    }

    protected android.content.IContentProvider acquireUnstableProvider(android.content.Context, java.lang.String)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.Context r1;
        java.lang.String r2, $r4;
        android.app.ActivityThread $r3;
        int $i0;
        android.content.IContentProvider $r5;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $r4 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>(r2);

        $i0 = virtualinvoke r0.<android.app.ContextImpl$ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>(r2);

        $r5 = virtualinvoke $r3.<android.app.ActivityThread: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,int,boolean)>(r1, $r4, $i0, 0);

        return $r5;
    }

    public boolean releaseUnstableProvider(android.content.IContentProvider)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.IContentProvider r1;
        android.app.ActivityThread $r2;
        boolean $z0;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.IContentProvider;

        $r2 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $z0 = virtualinvoke $r2.<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)>(r1, 0);

        return $z0;
    }

    public void unstableProviderDied(android.content.IContentProvider)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.IContentProvider r1;
        android.app.ActivityThread $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.IContentProvider;

        $r2 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $r3 = interfaceinvoke r1.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<android.app.ActivityThread: void handleUnstableProviderDied(android.os.IBinder,boolean)>($r3, 1);

        return;
    }

    public void appNotRespondingViaProvider(android.content.IContentProvider)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        android.content.IContentProvider r1;
        android.app.ActivityThread $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: android.content.IContentProvider;

        $r2 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.app.ActivityThread mMainThread>;

        $r3 = interfaceinvoke r1.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<android.app.ActivityThread: void appNotRespondingViaProvider(android.os.IBinder)>($r3);

        return;
    }

    protected int resolveUserIdFromAuthority(java.lang.String)
    {
        android.app.ContextImpl$ApplicationContentResolver r0;
        java.lang.String r1;
        android.os.UserHandle $r2;
        int $i0, $i1;

        r0 := @this: android.app.ContextImpl$ApplicationContentResolver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.ContextImpl$ApplicationContentResolver: android.os.UserHandle mUser>;

        $i0 = virtualinvoke $r2.<android.os.UserHandle: int getIdentifier()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>(r1, $i0);

        return $i1;
    }
}
