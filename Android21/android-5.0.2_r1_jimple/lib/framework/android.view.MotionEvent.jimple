public final class android.view.MotionEvent extends android.view.InputEvent implements android.os.Parcelable
{
    private static final long NS_PER_MS;
    private static final java.lang.String LABEL_PREFIX;
    public static final int INVALID_POINTER_ID;
    public static final int ACTION_MASK;
    public static final int ACTION_DOWN;
    public static final int ACTION_UP;
    public static final int ACTION_MOVE;
    public static final int ACTION_CANCEL;
    public static final int ACTION_OUTSIDE;
    public static final int ACTION_POINTER_DOWN;
    public static final int ACTION_POINTER_UP;
    public static final int ACTION_HOVER_MOVE;
    public static final int ACTION_SCROLL;
    public static final int ACTION_HOVER_ENTER;
    public static final int ACTION_HOVER_EXIT;
    public static final int ACTION_POINTER_INDEX_MASK;
    public static final int ACTION_POINTER_INDEX_SHIFT;
    public static final int ACTION_POINTER_1_DOWN;
    public static final int ACTION_POINTER_2_DOWN;
    public static final int ACTION_POINTER_3_DOWN;
    public static final int ACTION_POINTER_1_UP;
    public static final int ACTION_POINTER_2_UP;
    public static final int ACTION_POINTER_3_UP;
    public static final int ACTION_POINTER_ID_MASK;
    public static final int ACTION_POINTER_ID_SHIFT;
    public static final int FLAG_WINDOW_IS_OBSCURED;
    public static final int FLAG_TAINTED;
    public static final int EDGE_TOP;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int AXIS_X;
    public static final int AXIS_Y;
    public static final int AXIS_PRESSURE;
    public static final int AXIS_SIZE;
    public static final int AXIS_TOUCH_MAJOR;
    public static final int AXIS_TOUCH_MINOR;
    public static final int AXIS_TOOL_MAJOR;
    public static final int AXIS_TOOL_MINOR;
    public static final int AXIS_ORIENTATION;
    public static final int AXIS_VSCROLL;
    public static final int AXIS_HSCROLL;
    public static final int AXIS_Z;
    public static final int AXIS_RX;
    public static final int AXIS_RY;
    public static final int AXIS_RZ;
    public static final int AXIS_HAT_X;
    public static final int AXIS_HAT_Y;
    public static final int AXIS_LTRIGGER;
    public static final int AXIS_RTRIGGER;
    public static final int AXIS_THROTTLE;
    public static final int AXIS_RUDDER;
    public static final int AXIS_WHEEL;
    public static final int AXIS_GAS;
    public static final int AXIS_BRAKE;
    public static final int AXIS_DISTANCE;
    public static final int AXIS_TILT;
    public static final int AXIS_GENERIC_1;
    public static final int AXIS_GENERIC_2;
    public static final int AXIS_GENERIC_3;
    public static final int AXIS_GENERIC_4;
    public static final int AXIS_GENERIC_5;
    public static final int AXIS_GENERIC_6;
    public static final int AXIS_GENERIC_7;
    public static final int AXIS_GENERIC_8;
    public static final int AXIS_GENERIC_9;
    public static final int AXIS_GENERIC_10;
    public static final int AXIS_GENERIC_11;
    public static final int AXIS_GENERIC_12;
    public static final int AXIS_GENERIC_13;
    public static final int AXIS_GENERIC_14;
    public static final int AXIS_GENERIC_15;
    public static final int AXIS_GENERIC_16;
    private static final android.util.SparseArray AXIS_SYMBOLIC_NAMES;
    public static final int BUTTON_PRIMARY;
    public static final int BUTTON_SECONDARY;
    public static final int BUTTON_TERTIARY;
    public static final int BUTTON_BACK;
    public static final int BUTTON_FORWARD;
    private static final java.lang.String[] BUTTON_SYMBOLIC_NAMES;
    public static final int TOOL_TYPE_UNKNOWN;
    public static final int TOOL_TYPE_FINGER;
    public static final int TOOL_TYPE_STYLUS;
    public static final int TOOL_TYPE_MOUSE;
    public static final int TOOL_TYPE_ERASER;
    private static final android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES;
    private static final int HISTORY_CURRENT;
    private static final int MAX_RECYCLED;
    private static final java.lang.Object gRecyclerLock;
    private static int gRecyclerUsed;
    private static android.view.MotionEvent gRecyclerTop;
    private static final java.lang.Object gSharedTempLock;
    private static android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords;
    private static android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties;
    private static int[] gSharedTempPointerIndexMap;
    private long mNativePtr;
    private android.view.MotionEvent mNext;
    public static final android.os.Parcelable$Creator CREATOR;

    private static final void ensureSharedTempPointerCapacity(int)
    {
        int i0, i1, $i2, $i3;
        android.view.MotionEvent$PointerCoords[] $r0, $r1, $r2, $r5, $r6;
        android.view.MotionEvent$PointerProperties[] $r3;
        int[] $r4;

        i0 := @parameter0: int;

        $r0 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if $r0 == null goto label1;

        $r6 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $i3 = lengthof $r6;

        if $i3 >= i0 goto label6;

     label1:
        $r1 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if $r1 == null goto label2;

        $r5 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $i2 = lengthof $r5;

        goto label3;

     label2:
        $i2 = 8;

     label3:
        i1 = $i2;

     label4:
        if i1 >= i0 goto label5;

        i1 = i1 * 2;

        goto label4;

     label5:
        $r2 = staticinvoke <android.view.MotionEvent$PointerCoords: android.view.MotionEvent$PointerCoords[] createArray(int)>(i1);

        <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords> = $r2;

        $r3 = staticinvoke <android.view.MotionEvent$PointerProperties: android.view.MotionEvent$PointerProperties[] createArray(int)>(i1);

        <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties> = $r3;

        $r4 = newarray (int)[i1];

        <android.view.MotionEvent: int[] gSharedTempPointerIndexMap> = $r4;

     label6:
        return;
    }

    private static native long nativeInitialize(long, int, int, int, int, int, int, int, float, float, float, float, long, long, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[]);

    private static native long nativeCopy(long, long, boolean);

    private static native void nativeDispose(long);

    private static native void nativeAddBatch(long, long, android.view.MotionEvent$PointerCoords[], int);

    private static native int nativeGetDeviceId(long);

    private static native int nativeGetSource(long);

    private static native int nativeSetSource(long, int);

    private static native int nativeGetAction(long);

    private static native void nativeSetAction(long, int);

    private static native boolean nativeIsTouchEvent(long);

    private static native int nativeGetFlags(long);

    private static native void nativeSetFlags(long, int);

    private static native int nativeGetEdgeFlags(long);

    private static native void nativeSetEdgeFlags(long, int);

    private static native int nativeGetMetaState(long);

    private static native int nativeGetButtonState(long);

    private static native void nativeOffsetLocation(long, float, float);

    private static native float nativeGetXOffset(long);

    private static native float nativeGetYOffset(long);

    private static native float nativeGetXPrecision(long);

    private static native float nativeGetYPrecision(long);

    private static native long nativeGetDownTimeNanos(long);

    private static native void nativeSetDownTimeNanos(long, long);

    private static native int nativeGetPointerCount(long);

    private static native int nativeGetPointerId(long, int);

    private static native int nativeGetToolType(long, int);

    private static native int nativeFindPointerIndex(long, int);

    private static native int nativeGetHistorySize(long);

    private static native long nativeGetEventTimeNanos(long, int);

    private static native float nativeGetRawAxisValue(long, int, int, int);

    private static native float nativeGetAxisValue(long, int, int, int);

    private static native void nativeGetPointerCoords(long, int, int, android.view.MotionEvent$PointerCoords);

    private static native void nativeGetPointerProperties(long, int, android.view.MotionEvent$PointerProperties);

    private static native void nativeScale(long, float);

    private static native void nativeTransform(long, android.graphics.Matrix);

    private static native long nativeReadFromParcel(long, android.os.Parcel);

    private static native void nativeWriteToParcel(long, android.os.Parcel);

    private static native java.lang.String nativeAxisToString(int);

    private static native int nativeAxisFromString(java.lang.String);

    private void <init>()
    {
        android.view.MotionEvent r0;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.MotionEvent r0;
        java.lang.Throwable r1, $r2;
        long $l0, $l2;
        byte $b1;

        r0 := @this: android.view.MotionEvent;

     label1:
        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeDispose(long)>($l2);

        r0.<android.view.MotionEvent: long mNativePtr> = 0L;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static android.view.MotionEvent obtain()
    {
        android.view.MotionEvent r0, $r4, $r5;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        int $i0, $i1;

        $r3 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

        if r0 != null goto label3;

        $r5 = new android.view.MotionEvent;

        specialinvoke $r5.<android.view.MotionEvent: void <init>()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r4 = r0.<android.view.MotionEvent: android.view.MotionEvent mNext>;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = $r4;

        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i1 = $i0 - 1;

        <android.view.MotionEvent: int gRecyclerUsed> = $i1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        r0.<android.view.MotionEvent: android.view.MotionEvent mNext> = null;

        virtualinvoke r0.<android.view.MotionEvent: void prepareForReuse()>();

        return r0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[], int, int, float, float, int, int, int, int)
    {
        long l0, l1, $l10, $l11, $l12, $l13;
        int i2, i3, i4, i5, i6, i7, i8, i9;
        android.view.MotionEvent$PointerProperties[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        android.view.MotionEvent r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: android.view.MotionEvent$PointerProperties[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        i9 := @parameter13: int;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l13 = r2.<android.view.MotionEvent: long mNativePtr>;

        $l10 = l0 * 1000000L;

        $l11 = l1 * 1000000L;

        $l12 = staticinvoke <android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($l13, i6, i8, i2, i9, i7, i4, i5, 0.0F, 0.0F, f0, f1, $l10, $l11, i3, r0, r1);

        r2.<android.view.MotionEvent: long mNativePtr> = $l12;

        return r2;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, int[], android.view.MotionEvent$PointerCoords[], int, float, float, int, int, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i10;
        int[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        java.lang.Object r2, $r4;
        android.view.MotionEvent$PointerProperties[] r3;
        java.lang.Throwable r5, $r8;
        android.view.MotionEvent $r6;
        android.view.MotionEvent$PointerProperties $r7, $r9;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: int[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        $r4 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i3);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        i9 = 0;

     label2:
        if i9 >= i3 goto label3;

        $r7 = r3[i9];

        virtualinvoke $r7.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r9 = r3[i9];

        $i10 = r0[i9];

        $r9.<android.view.MotionEvent$PointerProperties: int id> = $i10;

        i9 = i9 + 1;

        goto label2;

     label3:
        $r6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, l1, i2, i3, r3, r1, i4, 0, f0, f1, i5, i6, i7, i8);

        exitmonitor r2;

     label4:
        return $r6;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r2;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1, $l6, $l7, $l8, $l9;
        int i2, i3, i4, i5;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent r0;
        java.lang.Object r1, $r6;
        android.view.MotionEvent$PointerCoords[] r2;
        android.view.MotionEvent$PointerProperties[] r3;
        java.lang.Throwable r4, $r13;
        android.view.MotionEvent$PointerProperties $r5, $r8;
        android.view.MotionEvent$PointerCoords $r7, $r9, $r10, $r11, $r12;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        i3 := @parameter7: int;

        f4 := @parameter8: float;

        f5 := @parameter9: float;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $r6 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        $r5 = r3[0];

        virtualinvoke $r5.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r8 = r3[0];

        $r8.<android.view.MotionEvent$PointerProperties: int id> = 0;

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r7 = r2[0];

        virtualinvoke $r7.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r10 = r2[0];

        $r10.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r9 = r2[0];

        $r9.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r12 = r2[0];

        $r12.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r11 = r2[0];

        $r11.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $l9 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l6 = l0 * 1000000L;

        $l7 = l1 * 1000000L;

        $l8 = staticinvoke <android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($l9, i4, 0, i2, 0, i5, i3, 0, 0.0F, 0.0F, f4, f5, $l6, $l7, 1, r3, r2);

        r0.<android.view.MotionEvent: long mNativePtr> = $l8;

        exitmonitor r1;

     label2:
        return r0;

     label3:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r1;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        f3 := @parameter7: float;

        i4 := @parameter8: int;

        f4 := @parameter9: float;

        f5 := @parameter10: float;

        i5 := @parameter11: int;

        i6 := @parameter12: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, f2, f3, i4, f4, f5, i5, i6);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, int)
    {
        long l0, l1;
        int i2, i3;
        float f0, f1;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i3 := @parameter5: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, 1.0F, 1.0F, i3, 1.0F, 1.0F, 0, 0);

        return $r0;
    }

    public static android.view.MotionEvent obtain(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        long $l0, $l1, $l2;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;

     label1:
        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l1 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeCopy(long,long,boolean)>($l1, $l0, 1);

        r1.<android.view.MotionEvent: long mNativePtr> = $l2;

        return r1;
    }

    public static android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        long $l0, $l1, $l2;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;

     label1:
        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l1 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeCopy(long,long,boolean)>($l1, $l0, 0);

        r1.<android.view.MotionEvent: long mNativePtr> = $l2;

        return r1;
    }

    public android.view.MotionEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r0);

        return $r1;
    }

    public final void recycle()
    {
        android.view.MotionEvent r0, $r4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        int $i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void recycle()>();

        $r3 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        if $i0 >= 10 goto label2;

        $i1 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i2 = $i1 + 1;

        <android.view.MotionEvent: int gRecyclerUsed> = $i2;

        $r4 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

        r0.<android.view.MotionEvent: android.view.MotionEvent mNext> = $r4;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = r0;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void scale(float)
    {
        android.view.MotionEvent r0;
        float f0;
        byte $b0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeScale(long,float)>($l1, f0);

     label1:
        return;
    }

    public final int getDeviceId()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l0);

        return $i1;
    }

    public final int getSource()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l0);

        return $i1;
    }

    public final void setSource(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: int nativeSetSource(long,int)>($l1, i0);

        return;
    }

    public final int getAction()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        return $i1;
    }

    public final int getActionMasked()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        $i2 = $i1 & 255;

        return $i2;
    }

    public final int getActionIndex()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1, $i2, $i3;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l0);

        $i2 = $i1 & 65280;

        $i3 = $i2 >> 8;

        return $i3;
    }

    public final boolean isTouchEvent()
    {
        android.view.MotionEvent r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $z0 = staticinvoke <android.view.MotionEvent: boolean nativeIsTouchEvent(long)>($l0);

        return $z0;
    }

    public final int getFlags()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l0);

        return $i1;
    }

    public final boolean isTainted()
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i1 = i0 & -2147483648;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setTainted(boolean)
    {
        android.view.MotionEvent r0;
        boolean z0;
        int i0, $i1;
        long $l2;

        r0 := @this: android.view.MotionEvent;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        if z0 == 0 goto label1;

        $i1 = i0 | -2147483648;

        goto label2;

     label1:
        $i1 = i0 & 2147483647;

     label2:
        staticinvoke <android.view.MotionEvent: void nativeSetFlags(long,int)>($l2, $i1);

        return;
    }

    public final long getDownTime()
    {
        android.view.MotionEvent r0;
        long $l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l0);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final void setDownTime(long)
    {
        android.view.MotionEvent r0;
        long l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = l0 * 1000000L;

        staticinvoke <android.view.MotionEvent: void nativeSetDownTimeNanos(long,long)>($l2, $l1);

        return;
    }

    public final long getEventTime()
    {
        android.view.MotionEvent r0;
        long $l0, $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l0, -2147483648);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final long getEventTimeNano()
    {
        android.view.MotionEvent r0;
        long $l0, $l1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l0, -2147483648);

        return $l1;
    }

    public final float getX()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 0, 0, -2147483648);

        return $f0;
    }

    public final float getY()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 1, 0, -2147483648);

        return $f0;
    }

    public final float getPressure()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 2, 0, -2147483648);

        return $f0;
    }

    public final float getSize()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 3, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMajor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 4, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 5, 0, -2147483648);

        return $f0;
    }

    public final float getToolMajor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 6, 0, -2147483648);

        return $f0;
    }

    public final float getToolMinor()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 7, 0, -2147483648);

        return $f0;
    }

    public final float getOrientation()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l0, 8, 0, -2147483648);

        return $f0;
    }

    public final float getAxisValue(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, i0, 0, -2147483648);

        return $f0;
    }

    public final int getPointerCount()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l0);

        return $i1;
    }

    public final int getPointerId(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(long,int)>($l1, i0);

        return $i2;
    }

    public final int getToolType(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetToolType(long,int)>($l1, i0);

        return $i2;
    }

    public final int findPointerIndex(int)
    {
        android.view.MotionEvent r0;
        int i0, $i2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeFindPointerIndex(long,int)>($l1, i0);

        return $i2;
    }

    public final float getX(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 0, i0, -2147483648);

        return $f0;
    }

    public final float getY(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 1, i0, -2147483648);

        return $f0;
    }

    public final float getPressure(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 2, i0, -2147483648);

        return $f0;
    }

    public final float getSize(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 3, i0, -2147483648);

        return $f0;
    }

    public final float getTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 4, i0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 5, i0, -2147483648);

        return $f0;
    }

    public final float getToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 6, i0, -2147483648);

        return $f0;
    }

    public final float getToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 7, i0, -2147483648);

        return $f0;
    }

    public final float getOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 8, i0, -2147483648);

        return $f0;
    }

    public final float getAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, i0, i1, -2147483648);

        return $f0;
    }

    public final void getPointerCoords(int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0;
        android.view.MotionEvent$PointerCoords r1;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l1, i0, -2147483648, r1);

        return;
    }

    public final void getPointerProperties(int, android.view.MotionEvent$PointerProperties)
    {
        android.view.MotionEvent r0;
        int i0;
        android.view.MotionEvent$PointerProperties r1;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerProperties;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l1, i0, r1);

        return;
    }

    public final int getMetaState()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l0);

        return $i1;
    }

    public final int getButtonState()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l0);

        return $i1;
    }

    public final float getRawX()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l0, 0, 0, -2147483648);

        return $f0;
    }

    public final float getRawY()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(long,int,int,int)>($l0, 1, 0, -2147483648);

        return $f0;
    }

    public final float getXPrecision()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l0);

        return $f0;
    }

    public final float getYPrecision()
    {
        android.view.MotionEvent r0;
        long $l0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l0);

        return $f0;
    }

    public final int getHistorySize()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l0);

        return $i1;
    }

    public final long getHistoricalEventTime(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1, $l2, $l3;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l1, i0);

        $l3 = $l2 / 1000000L;

        return $l3;
    }

    public final long getHistoricalEventTimeNano(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l1, i0);

        return $l2;
    }

    public final float getHistoricalX(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 0, 0, i0);

        return $f0;
    }

    public final float getHistoricalY(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 1, 0, i0);

        return $f0;
    }

    public final float getHistoricalPressure(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 2, 0, i0);

        return $f0;
    }

    public final float getHistoricalSize(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 3, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 4, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 5, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 6, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 7, 0, i0);

        return $f0;
    }

    public final float getHistoricalOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l1, 8, 0, i0);

        return $f0;
    }

    public final float getHistoricalAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, i0, 0, i1);

        return $f0;
    }

    public final float getHistoricalX(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 0, i0, i1);

        return $f0;
    }

    public final float getHistoricalY(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 1, i0, i1);

        return $f0;
    }

    public final float getHistoricalPressure(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 2, i0, i1);

        return $f0;
    }

    public final float getHistoricalSize(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 3, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 4, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 5, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 6, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 7, i0, i1);

        return $f0;
    }

    public final float getHistoricalOrientation(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        long $l2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l2, 8, i0, i1);

        return $f0;
    }

    public final float getHistoricalAxisValue(int, int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, i2;
        long $l3;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l3, i0, i1, i2);

        return $f0;
    }

    public final void getHistoricalPointerCoords(int, int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0, i1;
        android.view.MotionEvent$PointerCoords r1;
        long $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent$PointerCoords;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l2, i0, i1, r1);

        return;
    }

    public final int getEdgeFlags()
    {
        android.view.MotionEvent r0;
        long $l0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l0);

        return $i1;
    }

    public final void setEdgeFlags(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetEdgeFlags(long,int)>($l1, i0);

        return;
    }

    public final void setAction(int)
    {
        android.view.MotionEvent r0;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetAction(long,int)>($l1, i0);

        return;
    }

    public final void offsetLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1;
        byte $b0, $b2;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $b2 = f1 cmpl 0.0F;

        if $b2 == 0 goto label2;

     label1:
        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeOffsetLocation(long,float,float)>($l1, f0, f1);

     label2:
        return;
    }

    public final void setLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, f2, f3, $f4, $f5;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 = virtualinvoke r0.<android.view.MotionEvent: float getX()>();

        f3 = virtualinvoke r0.<android.view.MotionEvent: float getY()>();

        $f5 = f0 - f2;

        $f4 = f1 - f3;

        virtualinvoke r0.<android.view.MotionEvent: void offsetLocation(float,float)>($f5, $f4);

        return;
    }

    public final void transform(android.graphics.Matrix)
    {
        android.view.MotionEvent r0;
        android.graphics.Matrix r1;
        long $l0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("matrix must not be null");

        throw $r2;

     label1:
        $l0 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeTransform(long,android.graphics.Matrix)>($l0, r1);

        return;
    }

    public final void addBatch(long, float, float, float, float, int)
    {
        android.view.MotionEvent r0;
        long l0, $l2, $l3;
        float f0, f1, f2, f3;
        int i1;
        java.lang.Object r1, $r4;
        android.view.MotionEvent$PointerCoords[] r2;
        java.lang.Throwable r3, $r10;
        android.view.MotionEvent$PointerCoords $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i1 := @parameter5: int;

        $r4 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r5 = r2[0];

        virtualinvoke $r5.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r6 = r2[0];

        $r6.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r7 = r2[0];

        $r7.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r8 = r2[0];

        $r8.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r9 = r2[0];

        $r9.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = l0 * 1000000L;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l3, $l2, r2, i1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void addBatch(long, android.view.MotionEvent$PointerCoords[], int)
    {
        android.view.MotionEvent r0;
        long l0, $l2, $l3;
        android.view.MotionEvent$PointerCoords[] r1;
        int i1;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords[];

        i1 := @parameter2: int;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l2 = l0 * 1000000L;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l3, $l2, r1, i1);

        return;
    }

    public final boolean addBatch(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i23, $i25, $i30, i34;
        java.lang.Object r2, $r6;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords[] r4;
        java.lang.Throwable r5, $r11;
        long $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l21, $l22, $l24, $l26, $l27, $l28, $l29, $l31, $l32, $l33, l35;
        android.view.MotionEvent$PointerProperties $r7, $r9, $r10, $r12;
        android.view.MotionEvent$PointerCoords $r8;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.view.MotionEvent;

        $l7 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l7);

        if i0 == 2 goto label01;

        if i0 == 7 goto label01;

        return 0;

     label01:
        $l9 = r1.<android.view.MotionEvent: long mNativePtr>;

        $i8 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l9);

        if i0 == $i8 goto label02;

        return 0;

     label02:
        $l11 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i10 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l11);

        $l13 = r1.<android.view.MotionEvent: long mNativePtr>;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l13);

        if $i10 != $i12 goto label03;

        $l15 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i14 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l15);

        $l17 = r1.<android.view.MotionEvent: long mNativePtr>;

        $i16 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l17);

        if $i14 != $i16 goto label03;

        $l19 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i18 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l19);

        $l21 = r1.<android.view.MotionEvent: long mNativePtr>;

        $i20 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l21);

        if $i18 == $i20 goto label04;

     label03:
        return 0;

     label04:
        $l22 = r0.<android.view.MotionEvent: long mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l22);

        $l24 = r1.<android.view.MotionEvent: long mNativePtr>;

        $i25 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l24);

        if i1 == $i25 goto label05;

        return 0;

     label05:
        $r6 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r2 = $r6;

        entermonitor $r6;

     label06:
        $i23 = staticinvoke <java.lang.Math: int max(int,int)>(i1, 2);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>($i23);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        i2 = 0;

     label07:
        if i2 >= i1 goto label10;

        $l33 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r7 = r3[0];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l33, i2, $r7);

        $l32 = r1.<android.view.MotionEvent: long mNativePtr>;

        $r10 = r3[1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l32, i2, $r10);

        $r12 = r3[0];

        $r9 = r3[1];

        $z0 = staticinvoke <android.view.MotionEvent$PointerProperties: boolean access$000(android.view.MotionEvent$PointerProperties,android.view.MotionEvent$PointerProperties)>($r12, $r9);

        if $z0 != 0 goto label09;

        exitmonitor r2;

     label08:
        return 0;

     label09:
        i2 = i2 + 1;

        goto label07;

     label10:
        $l27 = r1.<android.view.MotionEvent: long mNativePtr>;

        i34 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l27);

        $l26 = r1.<android.view.MotionEvent: long mNativePtr>;

        i3 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l26);

        i4 = 0;

     label11:
        if i4 > i3 goto label16;

        if i4 != i3 goto label12;

        $i30 = -2147483648;

        goto label13;

     label12:
        $i30 = i4;

     label13:
        i5 = $i30;

        i6 = 0;

     label14:
        if i6 >= i1 goto label15;

        $l31 = r1.<android.view.MotionEvent: long mNativePtr>;

        $r8 = r4[i6];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l31, i6, i5, $r8);

        i6 = i6 + 1;

        goto label14;

     label15:
        $l29 = r1.<android.view.MotionEvent: long mNativePtr>;

        l35 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l29, i5);

        $l28 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l28, l35, r4, i34);

        i4 = i4 + 1;

        goto label11;

     label16:
        exitmonitor r2;

     label17:
        goto label20;

     label18:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label19:
        throw r5;

     label20:
        return 1;

        catch java.lang.Throwable from label06 to label08 with label18;
        catch java.lang.Throwable from label09 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public final boolean isWithinBoundsNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, f2, f3, f4, f5;
        int i0, i1;
        long $l2, $l3, $l4;
        byte $b5, $b6, $b7, $b8;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l2);

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        f4 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l3, 0, i1, -2147483648);

        $l4 = r0.<android.view.MotionEvent: long mNativePtr>;

        f5 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(long,int,int,int)>($l4, 1, i1, -2147483648);

        $b5 = f4 cmpg f0;

        if $b5 < 0 goto label2;

        $b7 = f4 cmpl f2;

        if $b7 > 0 goto label2;

        $b6 = f5 cmpg f1;

        if $b6 < 0 goto label2;

        $b8 = f5 cmpl f3;

        if $b8 <= 0 goto label3;

     label2:
        return 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 1;
    }

    private static final float clamp(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        return f1;

     label1:
        $b1 = f0 cmpl f2;

        if $b1 <= 0 goto label2;

        return f2;

     label2:
        return f0;
    }

    public final android.view.MotionEvent clampNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0, r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.Object r2, $r6;
        int i0, i1, $i6, $i8, $i10, $i12, $i14, $i16, $i18;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords[] r4;
        java.lang.Throwable r5, $r13;
        long $l2, $l3, $l4, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28;
        android.view.MotionEvent$PointerCoords $r7, $r9, $r10, $r11, $r12;
        android.view.MotionEvent$PointerProperties $r8;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $r6 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $l2 = r0.<android.view.MotionEvent: long mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l2);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i0);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $l27 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r8 = r3[i1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l27, i1, $r8);

        $l28 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r7 = r4[i1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l28, i1, -2147483648, $r7);

        $r9 = r4[i1];

        $r10 = r4[i1];

        $f8 = $r10.<android.view.MotionEvent$PointerCoords: float x>;

        $f10 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>($f8, f0, f2);

        $r9.<android.view.MotionEvent$PointerCoords: float x> = $f10;

        $r11 = r4[i1];

        $r12 = r4[i1];

        $f9 = $r12.<android.view.MotionEvent$PointerCoords: float y>;

        $f11 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>($f9, f1, f3);

        $r11.<android.view.MotionEvent$PointerCoords: float y> = $f11;

        i1 = i1 + 1;

        goto label2;

     label3:
        $l3 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l4 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i6 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l4);

        $l5 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i8 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l5);

        $l7 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i10 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l7);

        $l9 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l9);

        $l11 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i14 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l11);

        $l13 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i16 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l13);

        $l15 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i18 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l15);

        $l17 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f5 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(long)>($l17);

        $l20 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f4 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(long)>($l20);

        $l19 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f7 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l19);

        $l22 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f6 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l22);

        $l21 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l25 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l21);

        $l26 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l23 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l26, -2147483648);

        $l24 = staticinvoke <android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($l3, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $f5, $f4, $f7, $f6, $l25, $l23, i0, r3, r4);

        r1.<android.view.MotionEvent: long mNativePtr> = $l24;

        exitmonitor r2;

     label4:
        return r1;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r2;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final int getPointerIdBits()
    {
        android.view.MotionEvent r0;
        int i0, i1, i2, $i5, $i6;
        long $l3, $l4;

        r0 := @this: android.view.MotionEvent;

        i0 = 0;

        $l3 = r0.<android.view.MotionEvent: long mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l3);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $l4 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i5 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(long,int)>($l4, i2);

        $i6 = 1 << $i5;

        i0 = i0 | $i6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    public final android.view.MotionEvent split(int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, i12, $i15, $i17, $i22, $i24, $i26, $i28, $i30, $i32, $i41, $i43, $i44, $i45, i47, i48;
        java.lang.Object r2, $r7;
        android.view.MotionEvent$PointerProperties[] r3;
        android.view.MotionEvent$PointerCoords[] r4;
        int[] r5;
        java.lang.Throwable r6, $r9;
        long $l13, $l14, $l16, $l18, $l19, $l20, $l21, $l23, $l25, $l27, $l29, $l31, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l42, $l46, l49;
        float $f0, $f1, $f2, $f3;
        android.view.MotionEvent$PointerCoords $r8;
        byte $b40;
        java.lang.IllegalArgumentException $r10;
        android.view.MotionEvent$PointerProperties $r11, $r12;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $r7 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        $l13 = r0.<android.view.MotionEvent: long mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(long)>($l13);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i1);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        r5 = <android.view.MotionEvent: int[] gSharedTempPointerIndexMap>;

        $l14 = r0.<android.view.MotionEvent: long mNativePtr>;

        i2 = staticinvoke <android.view.MotionEvent: int nativeGetAction(long)>($l14);

        i3 = i2 & 255;

        $i15 = i2 & 65280;

        i4 = $i15 >> 8;

        i5 = -1;

        i6 = 0;

        i8 = 0;

     label02:
        if i8 >= i1 goto label05;

        $l46 = r0.<android.view.MotionEvent: long mNativePtr>;

        $r11 = r3[i6];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties)>($l46, i8, $r11);

        $r12 = r3[i6];

        $i44 = $r12.<android.view.MotionEvent$PointerProperties: int id>;

        i9 = 1 << $i44;

        $i45 = i9 & i0;

        if $i45 == 0 goto label04;

        if i8 != i4 goto label03;

        i5 = i6;

     label03:
        r5[i6] = i8;

        i6 = i6 + 1;

     label04:
        i8 = i8 + 1;

        goto label02;

     label05:
        if i6 != 0 goto label06;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("idBits did not match any ids in the event");

        throw $r10;

     label06:
        if i3 == 5 goto label07;

        if i3 != 6 goto label12;

     label07:
        if i5 >= 0 goto label08;

        i47 = 2;

        goto label13;

     label08:
        if i6 != 1 goto label11;

        if i3 != 5 goto label09;

        $b40 = 0;

        goto label10;

     label09:
        $b40 = 1;

     label10:
        i47 = $b40;

        goto label13;

     label11:
        $i17 = i5 << 8;

        i47 = i3 | $i17;

        goto label13;

     label12:
        i47 = i2;

     label13:
        $l16 = r0.<android.view.MotionEvent: long mNativePtr>;

        i48 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(long)>($l16);

        i11 = 0;

     label14:
        if i11 > i48 goto label21;

        if i11 != i48 goto label15;

        $i41 = -2147483648;

        goto label16;

     label15:
        $i41 = i11;

     label16:
        i10 = $i41;

        i12 = 0;

     label17:
        if i12 >= i6 goto label18;

        $l42 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i43 = r5[i12];

        $r8 = r4[i12];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords)>($l42, $i43, i10, $r8);

        i12 = i12 + 1;

        goto label17;

     label18:
        $l20 = r0.<android.view.MotionEvent: long mNativePtr>;

        l49 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(long,int)>($l20, i10);

        if i11 != 0 goto label19;

        $l23 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l19 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i24 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(long)>($l19);

        $l21 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i22 = staticinvoke <android.view.MotionEvent: int nativeGetSource(long)>($l21);

        $l27 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i28 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(long)>($l27);

        $l25 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i26 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(long)>($l25);

        $l31 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i32 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(long)>($l31);

        $l29 = r0.<android.view.MotionEvent: long mNativePtr>;

        $i30 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(long)>($l29);

        $l34 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f1 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(long)>($l34);

        $l33 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(long)>($l33);

        $l36 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f3 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(long)>($l36);

        $l35 = r0.<android.view.MotionEvent: long mNativePtr>;

        $f2 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(long)>($l35);

        $l39 = r0.<android.view.MotionEvent: long mNativePtr>;

        $l38 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(long)>($l39);

        $l37 = staticinvoke <android.view.MotionEvent: long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($l23, $i24, $i22, i47, $i28, $i26, $i32, $i30, $f1, $f0, $f3, $f2, $l38, l49, i6, r3, r4);

        r1.<android.view.MotionEvent: long mNativePtr> = $l37;

        goto label20;

     label19:
        $l18 = r1.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int)>($l18, l49, r4, 0);

     label20:
        i11 = i11 + 1;

        goto label14;

     label21:
        exitmonitor r2;

     label22:
        return r1;

     label23:
        $r9 := @caughtexception;

        r6 = $r9;

        exitmonitor r2;

     label24:
        throw r6;

        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public java.lang.String toString()
    {
        android.view.MotionEvent r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r9, $r12, $r15, $r19, $r20, $r21, $r23, $r27, $r30, $r31, $r32, $r35, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13;
        java.lang.String $r4, $r7, $r11, $r14, $r17, $r28, $r34, $r48;
        long $l8, $l9;
        float $f0, $f1;

        r0 := @this: android.view.MotionEvent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MotionEvent { action=");

        $i2 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        $r4 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r31 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id[");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $i12 = virtualinvoke r0.<android.view.MotionEvent: int getPointerId(int)>(i1);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r35 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", x[");

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $f0 = virtualinvoke r0.<android.view.MotionEvent: float getX(int)>(i1);

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r43 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y[");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $f1 = virtualinvoke r0.<android.view.MotionEvent: float getY(int)>(i1);

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r46 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toolType[");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $i13 = virtualinvoke r0.<android.view.MotionEvent: int getToolType(int)>(i1);

        $r48 = staticinvoke <android.view.MotionEvent: java.lang.String toolTypeToString(int)>($i13);

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", buttonState=");

        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $r7 = staticinvoke <android.view.MotionEvent: java.lang.String buttonStateToString(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metaState=");

        $i4 = virtualinvoke r0.<android.view.MotionEvent: int getMetaState()>();

        $r11 = staticinvoke <android.view.KeyEvent: java.lang.String metaStateToString(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags=0x");

        $i5 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", edgeFlags=0x");

        $i6 = virtualinvoke r0.<android.view.MotionEvent: int getEdgeFlags()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pointerCount=");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", historySize=");

        $i7 = virtualinvoke r0.<android.view.MotionEvent: int getHistorySize()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTime=");

        $l9 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", downTime=");

        $l8 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r27 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceId=");

        $i10 = virtualinvoke r0.<android.view.MotionEvent: int getDeviceId()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", source=0x");

        $i11 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r34 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r34;
    }

    public static java.lang.String actionToString(int)
    {
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        java.lang.String $r4, $r9, $r10;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label06;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            default: goto label10;
        };

     label01:
        return "ACTION_DOWN";

     label02:
        return "ACTION_UP";

     label03:
        return "ACTION_CANCEL";

     label04:
        return "ACTION_OUTSIDE";

     label05:
        return "ACTION_MOVE";

     label06:
        return "ACTION_HOVER_MOVE";

     label07:
        return "ACTION_SCROLL";

     label08:
        return "ACTION_HOVER_ENTER";

     label09:
        return "ACTION_HOVER_EXIT";

     label10:
        $i2 = i0 & 65280;

        i1 = $i2 >> 8;

        $i3 = i0 & 255;

        lookupswitch($i3)
        {
            case 5: goto label11;
            case 6: goto label12;
            default: goto label13;
        };

     label11:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_DOWN(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label12:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_UP(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label13:
        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r10;
    }

    public static java.lang.String axisToString(int)
    {
        int i0;
        java.lang.String r0, $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        i0 := @parameter0: int;

        r0 = staticinvoke <android.view.MotionEvent: java.lang.String nativeAxisToString(int)>(i0);

        if r0 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AXIS_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label2:
        return $r1;
    }

    public static int axisFromString(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("AXIS_");

        if $z0 == 0 goto label1;

        $r1 = "AXIS_";

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        i0 = staticinvoke <android.view.MotionEvent: int nativeAxisFromString(java.lang.String)>(r0);

        if i0 < 0 goto label1;

        return i0;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 10);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String buttonStateToString(int)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder r0, $r6;
        boolean z0, $z1;
        java.lang.String r1, $r2;
        java.lang.String[] $r3;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "0";

     label1:
        r0 = null;

        i1 = 0;

     label2:
        if i0 == 0 goto label8;

        $i2 = i0 & 1;

        if $i2 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        i0 = i0 >>> 1;

        if z0 == 0 goto label7;

        $r3 = <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES>;

        r1 = $r3[i1];

        if r0 != null goto label6;

        if i0 != 0 goto label5;

        return r1;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r0 = $r6;

        goto label7;

     label6:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label7:
        i1 = i1 + 1;

        goto label2;

     label8:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toolTypeToString(int)
    {
        int i0;
        java.lang.String r0, $r3;
        android.util.SparseArray $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r1 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r0 = (java.lang.String) $r2;

        if r0 == null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

     label2:
        return $r3;
    }

    public final boolean isButtonPressed(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $i2 = $i1 & i0;

        if $i2 != i0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static android.view.MotionEvent createFromParcelBody(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.view.MotionEvent r1;
        long $l0, $l1;

        r0 := @parameter0: android.os.Parcel;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $l0 = r1.<android.view.MotionEvent: long mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeReadFromParcel(long,android.os.Parcel)>($l0, r0);

        r1.<android.view.MotionEvent: long mNativePtr> = $l1;

        return r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.MotionEvent r0;
        android.os.Parcel r1;
        int i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $l1 = r0.<android.view.MotionEvent: long mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeWriteToParcel(long,android.os.Parcel)>($l1, r1);

        return;
    }

    public volatile android.view.InputEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = virtualinvoke r0.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        return $r1;
    }

    static void <clinit>()
    {
        android.util.SparseArray r0, $r1, $r3, r7;
        java.lang.String[] $r2;
        java.lang.Object $r4, $r5;
        android.view.MotionEvent$1 $r6;

        <android.view.MotionEvent: int MAX_RECYCLED> = 10;

        <android.view.MotionEvent: int HISTORY_CURRENT> = -2147483648;

        <android.view.MotionEvent: int TOOL_TYPE_ERASER> = 4;

        <android.view.MotionEvent: int TOOL_TYPE_MOUSE> = 3;

        <android.view.MotionEvent: int TOOL_TYPE_STYLUS> = 2;

        <android.view.MotionEvent: int TOOL_TYPE_FINGER> = 1;

        <android.view.MotionEvent: int TOOL_TYPE_UNKNOWN> = 0;

        <android.view.MotionEvent: int BUTTON_FORWARD> = 16;

        <android.view.MotionEvent: int BUTTON_BACK> = 8;

        <android.view.MotionEvent: int BUTTON_TERTIARY> = 4;

        <android.view.MotionEvent: int BUTTON_SECONDARY> = 2;

        <android.view.MotionEvent: int BUTTON_PRIMARY> = 1;

        <android.view.MotionEvent: int AXIS_GENERIC_16> = 47;

        <android.view.MotionEvent: int AXIS_GENERIC_15> = 46;

        <android.view.MotionEvent: int AXIS_GENERIC_14> = 45;

        <android.view.MotionEvent: int AXIS_GENERIC_13> = 44;

        <android.view.MotionEvent: int AXIS_GENERIC_12> = 43;

        <android.view.MotionEvent: int AXIS_GENERIC_11> = 42;

        <android.view.MotionEvent: int AXIS_GENERIC_10> = 41;

        <android.view.MotionEvent: int AXIS_GENERIC_9> = 40;

        <android.view.MotionEvent: int AXIS_GENERIC_8> = 39;

        <android.view.MotionEvent: int AXIS_GENERIC_7> = 38;

        <android.view.MotionEvent: int AXIS_GENERIC_6> = 37;

        <android.view.MotionEvent: int AXIS_GENERIC_5> = 36;

        <android.view.MotionEvent: int AXIS_GENERIC_4> = 35;

        <android.view.MotionEvent: int AXIS_GENERIC_3> = 34;

        <android.view.MotionEvent: int AXIS_GENERIC_2> = 33;

        <android.view.MotionEvent: int AXIS_GENERIC_1> = 32;

        <android.view.MotionEvent: int AXIS_TILT> = 25;

        <android.view.MotionEvent: int AXIS_DISTANCE> = 24;

        <android.view.MotionEvent: int AXIS_BRAKE> = 23;

        <android.view.MotionEvent: int AXIS_GAS> = 22;

        <android.view.MotionEvent: int AXIS_WHEEL> = 21;

        <android.view.MotionEvent: int AXIS_RUDDER> = 20;

        <android.view.MotionEvent: int AXIS_THROTTLE> = 19;

        <android.view.MotionEvent: int AXIS_RTRIGGER> = 18;

        <android.view.MotionEvent: int AXIS_LTRIGGER> = 17;

        <android.view.MotionEvent: int AXIS_HAT_Y> = 16;

        <android.view.MotionEvent: int AXIS_HAT_X> = 15;

        <android.view.MotionEvent: int AXIS_RZ> = 14;

        <android.view.MotionEvent: int AXIS_RY> = 13;

        <android.view.MotionEvent: int AXIS_RX> = 12;

        <android.view.MotionEvent: int AXIS_Z> = 11;

        <android.view.MotionEvent: int AXIS_HSCROLL> = 10;

        <android.view.MotionEvent: int AXIS_VSCROLL> = 9;

        <android.view.MotionEvent: int AXIS_ORIENTATION> = 8;

        <android.view.MotionEvent: int AXIS_TOOL_MINOR> = 7;

        <android.view.MotionEvent: int AXIS_TOOL_MAJOR> = 6;

        <android.view.MotionEvent: int AXIS_TOUCH_MINOR> = 5;

        <android.view.MotionEvent: int AXIS_TOUCH_MAJOR> = 4;

        <android.view.MotionEvent: int AXIS_SIZE> = 3;

        <android.view.MotionEvent: int AXIS_PRESSURE> = 2;

        <android.view.MotionEvent: int AXIS_Y> = 1;

        <android.view.MotionEvent: int AXIS_X> = 0;

        <android.view.MotionEvent: int EDGE_RIGHT> = 8;

        <android.view.MotionEvent: int EDGE_LEFT> = 4;

        <android.view.MotionEvent: int EDGE_BOTTOM> = 2;

        <android.view.MotionEvent: int EDGE_TOP> = 1;

        <android.view.MotionEvent: int FLAG_TAINTED> = -2147483648;

        <android.view.MotionEvent: int FLAG_WINDOW_IS_OBSCURED> = 1;

        <android.view.MotionEvent: int ACTION_POINTER_ID_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_ID_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_POINTER_3_UP> = 518;

        <android.view.MotionEvent: int ACTION_POINTER_2_UP> = 262;

        <android.view.MotionEvent: int ACTION_POINTER_1_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_3_DOWN> = 517;

        <android.view.MotionEvent: int ACTION_POINTER_2_DOWN> = 261;

        <android.view.MotionEvent: int ACTION_POINTER_1_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_HOVER_EXIT> = 10;

        <android.view.MotionEvent: int ACTION_HOVER_ENTER> = 9;

        <android.view.MotionEvent: int ACTION_SCROLL> = 8;

        <android.view.MotionEvent: int ACTION_HOVER_MOVE> = 7;

        <android.view.MotionEvent: int ACTION_POINTER_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_OUTSIDE> = 4;

        <android.view.MotionEvent: int ACTION_CANCEL> = 3;

        <android.view.MotionEvent: int ACTION_MOVE> = 2;

        <android.view.MotionEvent: int ACTION_UP> = 1;

        <android.view.MotionEvent: int ACTION_DOWN> = 0;

        <android.view.MotionEvent: int ACTION_MASK> = 255;

        <android.view.MotionEvent: int INVALID_POINTER_ID> = -1;

        <android.view.MotionEvent: java.lang.String LABEL_PREFIX> = "AXIS_";

        <android.view.MotionEvent: long NS_PER_MS> = 1000000L;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES> = $r1;

        r0 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "AXIS_X");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "AXIS_Y");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "AXIS_PRESSURE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "AXIS_SIZE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "AXIS_TOUCH_MAJOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(5, "AXIS_TOUCH_MINOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(6, "AXIS_TOOL_MAJOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(7, "AXIS_TOOL_MINOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(8, "AXIS_ORIENTATION");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(9, "AXIS_VSCROLL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(10, "AXIS_HSCROLL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(11, "AXIS_Z");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(12, "AXIS_RX");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(13, "AXIS_RY");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(14, "AXIS_RZ");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(15, "AXIS_HAT_X");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(16, "AXIS_HAT_Y");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(17, "AXIS_LTRIGGER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(18, "AXIS_RTRIGGER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(19, "AXIS_THROTTLE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(20, "AXIS_RUDDER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(21, "AXIS_WHEEL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(22, "AXIS_GAS");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(23, "AXIS_BRAKE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(24, "AXIS_DISTANCE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(25, "AXIS_TILT");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(32, "AXIS_GENERIC_1");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(33, "AXIS_GENERIC_2");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(34, "AXIS_GENERIC_3");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(35, "AXIS_GENERIC_4");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(36, "AXIS_GENERIC_5");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(37, "AXIS_GENERIC_6");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(38, "AXIS_GENERIC_7");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(39, "AXIS_GENERIC_8");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(40, "AXIS_GENERIC_9");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(41, "AXIS_GENERIC_10");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(42, "AXIS_GENERIC_11");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(43, "AXIS_GENERIC_12");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(44, "AXIS_GENERIC_13");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(45, "AXIS_GENERIC_14");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(46, "AXIS_GENERIC_15");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(47, "AXIS_GENERIC_16");

        $r2 = newarray (java.lang.String)[32];

        $r2[0] = "BUTTON_PRIMARY";

        $r2[1] = "BUTTON_SECONDARY";

        $r2[2] = "BUTTON_TERTIARY";

        $r2[3] = "BUTTON_BACK";

        $r2[4] = "BUTTON_FORWARD";

        $r2[5] = "0x00000020";

        $r2[6] = "0x00000040";

        $r2[7] = "0x00000080";

        $r2[8] = "0x00000100";

        $r2[9] = "0x00000200";

        $r2[10] = "0x00000400";

        $r2[11] = "0x00000800";

        $r2[12] = "0x00001000";

        $r2[13] = "0x00002000";

        $r2[14] = "0x00004000";

        $r2[15] = "0x00008000";

        $r2[16] = "0x00010000";

        $r2[17] = "0x00020000";

        $r2[18] = "0x00040000";

        $r2[19] = "0x00080000";

        $r2[20] = "0x00100000";

        $r2[21] = "0x00200000";

        $r2[22] = "0x00400000";

        $r2[23] = "0x00800000";

        $r2[24] = "0x01000000";

        $r2[25] = "0x02000000";

        $r2[26] = "0x04000000";

        $r2[27] = "0x08000000";

        $r2[28] = "0x10000000";

        $r2[29] = "0x20000000";

        $r2[30] = "0x40000000";

        $r2[31] = "0x80000000";

        <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES> = $r3;

        r7 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "TOOL_TYPE_UNKNOWN");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "TOOL_TYPE_FINGER");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "TOOL_TYPE_STYLUS");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "TOOL_TYPE_MOUSE");

        virtualinvoke r7.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "TOOL_TYPE_ERASER");

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gRecyclerLock> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gSharedTempLock> = $r5;

        $r6 = new android.view.MotionEvent$1;

        specialinvoke $r6.<android.view.MotionEvent$1: void <init>()>();

        <android.view.MotionEvent: android.os.Parcelable$Creator CREATOR> = $r6;

        return;
    }
}
