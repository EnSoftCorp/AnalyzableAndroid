public final class android.graphics.Outline extends java.lang.Object
{
    public android.graphics.Path mPath;
    public android.graphics.Rect mRect;
    public float mRadius;
    public float mAlpha;

    public void <init>()
    {
        android.graphics.Outline r0;

        r0 := @this: android.graphics.Outline;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.graphics.Outline)
    {
        android.graphics.Outline r0, r1;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Outline;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.graphics.Outline: void set(android.graphics.Outline)>(r1);

        return;
    }

    public void setEmpty()
    {
        android.graphics.Outline r0;

        r0 := @this: android.graphics.Outline;

        r0.<android.graphics.Outline: android.graphics.Path mPath> = null;

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = null;

        r0.<android.graphics.Outline: float mRadius> = 0.0F;

        return;
    }

    public boolean isEmpty()
    {
        android.graphics.Outline r0;
        android.graphics.Rect $r1;
        android.graphics.Path $r2;
        boolean $z0;

        r0 := @this: android.graphics.Outline;

        $r1 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        if $r1 != null goto label1;

        $r2 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean canClip()
    {
        android.graphics.Outline r0;
        boolean $z0, $z1;
        android.graphics.Rect $r1;

        r0 := @this: android.graphics.Outline;

        $z0 = virtualinvoke r0.<android.graphics.Outline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setAlpha(float)
    {
        android.graphics.Outline r0;
        float f0;

        r0 := @this: android.graphics.Outline;

        f0 := @parameter0: float;

        r0.<android.graphics.Outline: float mAlpha> = f0;

        return;
    }

    public float getAlpha()
    {
        android.graphics.Outline r0;
        float $f0;

        r0 := @this: android.graphics.Outline;

        $f0 = r0.<android.graphics.Outline: float mAlpha>;

        return $f0;
    }

    public void set(android.graphics.Outline)
    {
        android.graphics.Outline r0, r1;
        android.graphics.Path $r2, $r8, $r9, $r10, $r11;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7;
        float $f0, $f1;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Outline;

        $r2 = r1.<android.graphics.Outline: android.graphics.Path mPath>;

        if $r2 == null goto label2;

        $r8 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        if $r8 != null goto label1;

        $r11 = new android.graphics.Path;

        specialinvoke $r11.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.Outline: android.graphics.Path mPath> = $r11;

     label1:
        $r10 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        $r9 = r1.<android.graphics.Outline: android.graphics.Path mPath>;

        virtualinvoke $r10.<android.graphics.Path: void set(android.graphics.Path)>($r9);

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = null;

     label2:
        $r3 = r1.<android.graphics.Outline: android.graphics.Rect mRect>;

        if $r3 == null goto label4;

        $r4 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        if $r4 != null goto label3;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = $r7;

     label3:
        $r6 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        $r5 = r1.<android.graphics.Outline: android.graphics.Rect mRect>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

     label4:
        $f0 = r1.<android.graphics.Outline: float mRadius>;

        r0.<android.graphics.Outline: float mRadius> = $f0;

        $f1 = r1.<android.graphics.Outline: float mAlpha>;

        r0.<android.graphics.Outline: float mAlpha> = $f1;

        return;
    }

    public void setRect(int, int, int, int)
    {
        android.graphics.Outline r0;
        int i0, i1, i2, i3;

        r0 := @this: android.graphics.Outline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(i0, i1, i2, i3, 0.0F);

        return;
    }

    public void setRect(android.graphics.Rect)
    {
        android.graphics.Outline r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Rect;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.graphics.Outline: void setRect(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setRoundRect(int, int, int, int, float)
    {
        android.graphics.Outline r0;
        int i0, i1, i2, i3;
        float f0;
        android.graphics.Rect $r1, $r2, $r3;

        r0 := @this: android.graphics.Outline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        f0 := @parameter4: float;

        if i0 >= i2 goto label1;

        if i1 < i3 goto label2;

     label1:
        virtualinvoke r0.<android.graphics.Outline: void setEmpty()>();

        return;

     label2:
        $r1 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        if $r1 != null goto label3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = $r3;

     label3:
        $r2 = r0.<android.graphics.Outline: android.graphics.Rect mRect>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.graphics.Outline: float mRadius> = f0;

        r0.<android.graphics.Outline: android.graphics.Path mPath> = null;

        return;
    }

    public void setRoundRect(android.graphics.Rect, float)
    {
        android.graphics.Outline r0;
        android.graphics.Rect r1;
        float f0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Rect;

        f0 := @parameter1: float;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>($i3, $i2, $i1, $i0, f0);

        return;
    }

    public void setOval(int, int, int, int)
    {
        android.graphics.Outline r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.graphics.Path $r1, $r2, $r4, $r5;
        android.graphics.Path$Direction $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.graphics.Outline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i0 >= i2 goto label1;

        if i1 < i3 goto label2;

     label1:
        virtualinvoke r0.<android.graphics.Outline: void setEmpty()>();

        return;

     label2:
        $i5 = i3 - i1;

        $i4 = i2 - i0;

        if $i5 != $i4 goto label3;

        $i6 = i3 - i1;

        $f4 = (float) $i6;

        $f5 = $f4 / 2.0F;

        virtualinvoke r0.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>(i0, i1, i2, i3, $f5);

        return;

     label3:
        $r1 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        if $r1 != null goto label4;

        $r5 = new android.graphics.Path;

        specialinvoke $r5.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.Outline: android.graphics.Path mPath> = $r5;

     label4:
        $r2 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void reset()>();

        $r4 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        $f3 = (float) i0;

        $f2 = (float) i1;

        $f1 = (float) i2;

        $f0 = (float) i3;

        $r3 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r4.<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path$Direction)>($f3, $f2, $f1, $f0, $r3);

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = null;

        return;
    }

    public void setOval(android.graphics.Rect)
    {
        android.graphics.Outline r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Rect;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.graphics.Outline: void setOval(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setConvexPath(android.graphics.Path)
    {
        android.graphics.Outline r0;
        android.graphics.Path r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.graphics.Outline;

        r1 := @parameter0: android.graphics.Path;

        $z0 = virtualinvoke r1.<android.graphics.Path: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.graphics.Outline: void setEmpty()>();

        return;

     label1:
        $z1 = virtualinvoke r1.<android.graphics.Path: boolean isConvex()>();

        if $z1 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("path must be convex");

        throw $r5;

     label2:
        $r2 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        if $r2 != null goto label3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.Outline: android.graphics.Path mPath> = $r4;

     label3:
        $r3 = r0.<android.graphics.Outline: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void set(android.graphics.Path)>(r1);

        r0.<android.graphics.Outline: android.graphics.Rect mRect> = null;

        r0.<android.graphics.Outline: float mRadius> = -1.0F;

        return;
    }
}
