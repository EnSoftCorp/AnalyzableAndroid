public abstract class android.content.ContentProvider extends java.lang.Object implements android.content.ComponentCallbacks2
{
    private static final java.lang.String TAG;
    private android.content.Context mContext;
    private int mMyUid;
    private java.lang.String mAuthority;
    private java.lang.String[] mAuthorities;
    private java.lang.String mReadPermission;
    private java.lang.String mWritePermission;
    private android.content.pm.PathPermission[] mPathPermissions;
    private boolean mExported;
    private boolean mNoPerms;
    private boolean mSingleUser;
    private final java.lang.ThreadLocal mCallingPackage;
    private android.content.ContentProvider$Transport mTransport;

    public void <init>()
    {
        android.content.ContentProvider r0;
        java.lang.ThreadLocal $r1;
        android.content.ContentProvider$Transport $r2;

        r0 := @this: android.content.ContentProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProvider: android.content.Context mContext> = null;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage> = $r1;

        $r2 = new android.content.ContentProvider$Transport;

        specialinvoke $r2.<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>(r0);

        r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, java.lang.String, android.content.pm.PathPermission[])
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        android.content.pm.PathPermission[] r4;
        java.lang.ThreadLocal $r5;
        android.content.ContentProvider$Transport $r6;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.PathPermission[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProvider: android.content.Context mContext> = null;

        $r5 = new java.lang.ThreadLocal;

        specialinvoke $r5.<java.lang.ThreadLocal: void <init>()>();

        r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage> = $r5;

        $r6 = new android.content.ContentProvider$Transport;

        specialinvoke $r6.<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>(r0);

        r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport> = $r6;

        r0.<android.content.ContentProvider: android.content.Context mContext> = r1;

        r0.<android.content.ContentProvider: java.lang.String mReadPermission> = r2;

        r0.<android.content.ContentProvider: java.lang.String mWritePermission> = r3;

        r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions> = r4;

        return;
    }

    public static android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)
    {
        android.content.IContentProvider r0;
        boolean $z0;
        android.content.ContentProvider$Transport $r1;
        android.content.ContentProvider $r2;

        r0 := @parameter0: android.content.IContentProvider;

        $z0 = r0 instanceof android.content.ContentProvider$Transport;

        if $z0 == 0 goto label1;

        $r1 = (android.content.ContentProvider$Transport) r0;

        $r2 = virtualinvoke $r1.<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>();

        return $r2;

     label1:
        return null;
    }

    boolean checkUser(int, int, android.content.Context)
    {
        android.content.ContentProvider r0;
        int i0, i1, $i2, $i3, $i4;
        android.content.Context r1;
        boolean $z0, $z1;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Context;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        $i3 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        if $i2 == $i3 goto label1;

        $z0 = r0.<android.content.ContentProvider: boolean mSingleUser>;

        if $z0 != 0 goto label1;

        $i4 = virtualinvoke r1.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.INTERACT_ACROSS_USERS", i0, i1);

        if $i4 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void enforceReadPermissionInner(android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.content.Context r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r3, r4, r6, r9, $r13, $r25, $r28, r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.PathPermission[] r5, r7;
        android.content.pm.PathPermission r8;
        java.lang.SecurityException $r10;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27;
        java.lang.Class $r14;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = null;

        $i4 = r0.<android.content.ContentProvider: int mMyUid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i1, $i4);

        if $z1 == 0 goto label01;

        return;

     label01:
        $z2 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z2 == 0 goto label10;

        $z4 = virtualinvoke r0.<android.content.ContentProvider: boolean checkUser(int,int,android.content.Context)>(i0, i1, r2);

        if $z4 == 0 goto label10;

        r4 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getReadPermission()>();

        if r4 == null goto label03;

        $i6 = virtualinvoke r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r4, i0, i1);

        if $i6 != 0 goto label02;

        return;

     label02:
        r3 = r4;

     label03:
        if r4 != null goto label04;

        $z6 = 1;

        goto label05;

     label04:
        $z6 = 0;

     label05:
        z0 = $z6;

        r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>();

        if r5 == null goto label09;

        r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        r7 = r5;

        i2 = lengthof r7;

        i3 = 0;

     label06:
        if i3 >= i2 goto label09;

        r8 = r7[i3];

        r9 = virtualinvoke r8.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        if r9 == null goto label08;

        $z5 = virtualinvoke r8.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r6);

        if $z5 == 0 goto label08;

        $i7 = virtualinvoke r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r9, i0, i1);

        if $i7 != 0 goto label07;

        return;

     label07:
        z0 = 0;

        r3 = r9;

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        if z0 == 0 goto label10;

        return;

     label10:
        $i5 = virtualinvoke r2.<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>(r1, i0, i1, 1);

        if $i5 != 0 goto label11;

        return;

     label11:
        $z3 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z3 == 0 goto label12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or grantUriPermission()");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label12:
        $r28 = " requires the provider be exported, or grantUriPermission()";

     label13:
        r29 = $r28;

        $r10 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: reading ");

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r25);

        throw $r10;
    }

    protected void enforceWritePermissionInner(android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.content.Context r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r3, r4, r6, r9, $r13, $r25, $r28, r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.PathPermission[] r5, r7;
        android.content.pm.PathPermission r8;
        java.lang.SecurityException $r10;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27;
        java.lang.Class $r14;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<android.content.ContentProvider: android.content.Context getContext()>();

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = null;

        $i4 = r0.<android.content.ContentProvider: int mMyUid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i1, $i4);

        if $z1 == 0 goto label01;

        return;

     label01:
        $z2 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z2 == 0 goto label10;

        $z4 = virtualinvoke r0.<android.content.ContentProvider: boolean checkUser(int,int,android.content.Context)>(i0, i1, r2);

        if $z4 == 0 goto label10;

        r4 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getWritePermission()>();

        if r4 == null goto label03;

        $i6 = virtualinvoke r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r4, i0, i1);

        if $i6 != 0 goto label02;

        return;

     label02:
        r3 = r4;

     label03:
        if r4 != null goto label04;

        $z6 = 1;

        goto label05;

     label04:
        $z6 = 0;

     label05:
        z0 = $z6;

        r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>();

        if r5 == null goto label09;

        r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        r7 = r5;

        i2 = lengthof r7;

        i3 = 0;

     label06:
        if i3 >= i2 goto label09;

        r8 = r7[i3];

        r9 = virtualinvoke r8.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        if r9 == null goto label08;

        $z5 = virtualinvoke r8.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r6);

        if $z5 == 0 goto label08;

        $i7 = virtualinvoke r2.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r9, i0, i1);

        if $i7 != 0 goto label07;

        return;

     label07:
        z0 = 0;

        r3 = r9;

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        if z0 == 0 goto label10;

        return;

     label10:
        $i5 = virtualinvoke r2.<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>(r1, i0, i1, 2);

        if $i5 != 0 goto label11;

        return;

     label11:
        $z3 = r0.<android.content.ContentProvider: boolean mExported>;

        if $z3 == 0 goto label12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or grantUriPermission()");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label12:
        $r28 = " requires the provider be exported, or grantUriPermission()";

     label13:
        r29 = $r28;

        $r10 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: writing ");

        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r25);

        throw $r10;
    }

    public final android.content.Context getContext()
    {
        android.content.ContentProvider r0;
        android.content.Context $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        return $r1;
    }

    private java.lang.String setCallingPackage(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, r2;
        java.lang.ThreadLocal $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.String) $r4;

        $r5 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>(r1);

        return r2;
    }

    public final java.lang.String getCallingPackage()
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        android.content.ContentProvider$Transport $r4;
        android.app.AppOpsManager $r5;
        int $i0;

        r0 := @this: android.content.ContentProvider;

        $r2 = r0.<android.content.ContentProvider: java.lang.ThreadLocal mCallingPackage>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (java.lang.String) $r3;

        if r1 == null goto label1;

        $r4 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r5 = $r4.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r5.<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>($i0, r1);

     label1:
        return r1;
    }

    protected final void setAuthorities(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;
        int $i0;
        java.lang.String[] $r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        if $i0 != -1 goto label1;

        r0.<android.content.ContentProvider: java.lang.String mAuthority> = r1;

        r0.<android.content.ContentProvider: java.lang.String[] mAuthorities> = null;

        goto label2;

     label1:
        r0.<android.content.ContentProvider: java.lang.String mAuthority> = null;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        r0.<android.content.ContentProvider: java.lang.String[] mAuthorities> = $r2;

     label2:
        return;
    }

    protected final boolean matchesOurAuthorities(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, $r2, $r6, $r7;
        int i0, i1;
        java.lang.String[] $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        if $r2 == null goto label1;

        $r7 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z1;

     label1:
        $r3 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        if $r3 == null goto label4;

        $r4 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r5 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        $r6 = $r5[i1];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    protected final void setReadPermission(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.ContentProvider: java.lang.String mReadPermission> = r1;

        return;
    }

    public final java.lang.String getReadPermission()
    {
        android.content.ContentProvider r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: java.lang.String mReadPermission>;

        return $r1;
    }

    protected final void setWritePermission(java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.ContentProvider: java.lang.String mWritePermission> = r1;

        return;
    }

    public final java.lang.String getWritePermission()
    {
        android.content.ContentProvider r0;
        java.lang.String $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: java.lang.String mWritePermission>;

        return $r1;
    }

    protected final void setPathPermissions(android.content.pm.PathPermission[])
    {
        android.content.ContentProvider r0;
        android.content.pm.PathPermission[] r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.pm.PathPermission[];

        r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions> = r1;

        return;
    }

    public final android.content.pm.PathPermission[] getPathPermissions()
    {
        android.content.ContentProvider r0;
        android.content.pm.PathPermission[] $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.pm.PathPermission[] mPathPermissions>;

        return $r1;
    }

    public final void setAppOps(int, int)
    {
        android.content.ContentProvider r0;
        int i0, i1;
        boolean $z0;
        android.content.ContentProvider$Transport $r1, $r2;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.content.ContentProvider: boolean mNoPerms>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r1.<android.content.ContentProvider$Transport: int mReadOp> = i0;

        $r2 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r2.<android.content.ContentProvider$Transport: int mWriteOp> = i1;

     label1:
        return;
    }

    public android.app.AppOpsManager getAppOpsManager()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$Transport $r1;
        android.app.AppOpsManager $r2;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r2 = $r1.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        return $r2;
    }

    public abstract boolean onCreate();

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.ContentProvider r0;
        android.content.res.Configuration r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public void onLowMemory()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        return;
    }

    public void onTrimMemory(int)
    {
        android.content.ContentProvider r0;
        int i0;

        r0 := @this: android.content.ContentProvider;

        i0 := @parameter0: int;

        return;
    }

    public android.database.Cursor rejectQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, r12;
        android.os.CancellationSignal r6;
        android.database.Cursor $r7;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r12 = "\'A\' = \'B\'";

        goto label3;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'A\' = \'B\' AND (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r7 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r1, r2, r12, r4, r5, r6);

        return $r7;
    }

    public abstract android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String);

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.os.CancellationSignal r6;
        android.database.Cursor $r7;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        $r7 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    public abstract java.lang.String getType(android.net.Uri);

    public android.net.Uri canonicalize(android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    public android.net.Uri uncanonicalize(android.net.Uri)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        return r1;
    }

    public android.net.Uri rejectInsert(android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1, $r5;
        android.content.ContentValues r2;
        android.net.Uri$Builder $r3, $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("0");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public abstract android.net.Uri insert(android.net.Uri, android.content.ContentValues);

    public int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues[] r2;
        int i0, i1;
        android.content.ContentValues $r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues[];

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke r0.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r1, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public abstract int delete(android.net.Uri, java.lang.String, java.lang.String[]);

    public abstract int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]);

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, $r7;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No files supported by provider at ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.CancellationSignal r3;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = virtualinvoke r0.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>(r1, r2);

        return $r4;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.ParcelFileDescriptor r3;
        android.content.res.AssetFileDescriptor $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>(r1, r2);

        if r3 == null goto label1;

        $r4 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r4.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>(r3, 0L, -1L);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.CancellationSignal r3;
        android.content.res.AssetFileDescriptor $r4;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        $r4 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, r2);

        return $r4;
    }

    protected final android.os.ParcelFileDescriptor openFileHelper(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r4, $r10, $r13, $r19;
        android.database.Cursor r3;
        int i0, i1, i2, $i3;
        java.lang.String[] $r5;
        java.io.File $r6;
        android.os.ParcelFileDescriptor $r7;
        java.io.FileNotFoundException $r8, $r9, $r16;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17, $r18;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_data";

        r3 = virtualinvoke r0.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r5, null, null, null);

        if r3 == null goto label1;

        $i3 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        goto label2;

     label1:
        $i3 = 0;

     label2:
        i0 = $i3;

        if i0 == 1 goto label5;

        if r3 == null goto label3;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label3:
        if i0 != 0 goto label4;

        $r16 = new java.io.FileNotFoundException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry for ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label4:
        $r9 = new java.io.FileNotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple items at ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label5:
        interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        i1 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        if i1 < 0 goto label6;

        $r10 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i1);

        goto label7;

     label6:
        $r10 = null;

     label7:
        r4 = $r10;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        if r4 != null goto label8;

        $r8 = new java.io.FileNotFoundException;

        specialinvoke $r8.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Column _data not found.");

        throw $r8;

     label8:
        i2 = staticinvoke <android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>(r2);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r4);

        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r6, i2);

        return $r7;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String)
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r4, $r5, $r12;
        android.os.Bundle r3;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        android.content.res.AssetFileDescriptor $r13, $r14;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r5 = "*/*";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, "r");

        return $r13;

     label1:
        r4 = virtualinvoke r0.<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>(r1);

        if r4 == null goto label2;

        $z1 = staticinvoke <android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>(r4, r2);

        if $z1 == 0 goto label2;

        $r14 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, "r");

        return $r14;

     label2:
        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t open ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r12);

        throw $r6;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;
        android.content.res.AssetFileDescriptor $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.CancellationSignal;

        $r5 = virtualinvoke r0.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>(r1, r2, r3);

        return $r5;
    }

    public android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri, java.lang.String, android.os.Bundle, java.lang.Object, android.content.ContentProvider$PipeDataWriter) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3;
        java.lang.Object r4;
        android.content.ContentProvider$PipeDataWriter r5;
        android.os.ParcelFileDescriptor[] r6;
        android.content.ContentProvider$1 r7, $r8;
        java.lang.Object[] $r9;
        java.util.concurrent.Executor $r10;
        android.os.ParcelFileDescriptor $r12;
        java.io.IOException $r13;
        java.io.FileNotFoundException $r14;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: android.content.ContentProvider$PipeDataWriter;

     label1:
        r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        $r8 = new android.content.ContentProvider$1;

        specialinvoke $r8.<android.content.ContentProvider$1: void <init>(android.content.ContentProvider,android.content.ContentProvider$PipeDataWriter,android.os.ParcelFileDescriptor[],android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>(r0, r5, r6, r1, r2, r3, r4);

        r7 = $r8;

        $r10 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r9 = (java.lang.Object[]) null;

        virtualinvoke r7.<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r10, $r9);

        $r12 = r6[0];

     label2:
        return $r12;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.io.FileNotFoundException;

        specialinvoke $r14.<java.io.FileNotFoundException: void <init>(java.lang.String)>("failure making pipe");

        throw $r14;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected boolean isTemporary()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        return 0;
    }

    public android.content.IContentProvider getIContentProvider()
    {
        android.content.ContentProvider r0;
        android.content.ContentProvider$Transport $r1;

        r0 := @this: android.content.ContentProvider;

        $r1 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        return $r1;
    }

    public void attachInfoForTesting(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo,boolean)>(r1, r2, 1);

        return;
    }

    public void attachInfo(android.content.Context, android.content.pm.ProviderInfo)
    {
        android.content.ContentProvider r0;
        android.content.Context r1;
        android.content.pm.ProviderInfo r2;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        specialinvoke r0.<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo,boolean)>(r1, r2, 0);

        return;
    }

    private void attachInfo(android.content.Context, android.content.pm.ProviderInfo, boolean)
    {
        android.content.ContentProvider r0;
        android.content.Context r1, $r3;
        android.content.pm.ProviderInfo r2;
        boolean z0, $z2, $z3;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r5, $r7;
        android.content.pm.PathPermission[] $r6;
        android.content.ContentProvider$Transport $r8;
        android.app.AppOpsManager $r9;
        java.lang.Object $r10;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        z0 := @parameter2: boolean;

        staticinvoke <android.os.AsyncTask: void init()>();

        r0.<android.content.ContentProvider: boolean mNoPerms> = z0;

        $r3 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        if $r3 != null goto label5;

        r0.<android.content.ContentProvider: android.content.Context mContext> = r1;

        if r1 == null goto label1;

        $r8 = r0.<android.content.ContentProvider: android.content.ContentProvider$Transport mTransport>;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r9 = (android.app.AppOpsManager) $r10;

        $r8.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager> = $r9;

     label1:
        $i0 = staticinvoke <android.os.Process: int myUid()>();

        r0.<android.content.ContentProvider: int mMyUid> = $i0;

        if r2 == null goto label4;

        $r4 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        virtualinvoke r0.<android.content.ContentProvider: void setReadPermission(java.lang.String)>($r4);

        $r5 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        virtualinvoke r0.<android.content.ContentProvider: void setWritePermission(java.lang.String)>($r5);

        $r6 = r2.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        virtualinvoke r0.<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>($r6);

        $z2 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        r0.<android.content.ContentProvider: boolean mExported> = $z2;

        $i1 = r2.<android.content.pm.ProviderInfo: int flags>;

        $i2 = $i1 & 1073741824;

        if $i2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r0.<android.content.ContentProvider: boolean mSingleUser> = $z3;

        $r7 = r2.<android.content.pm.ProviderInfo: java.lang.String authority>;

        virtualinvoke r0.<android.content.ContentProvider: void setAuthorities(java.lang.String)>($r7);

     label4:
        virtualinvoke r0.<android.content.ContentProvider: boolean onCreate()>();

     label5:
        return;
    }

    public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) throws android.content.OperationApplicationException
    {
        android.content.ContentProvider r0;
        java.util.ArrayList r1;
        int i0, i1;
        android.content.ContentProviderResult[] r2;
        java.lang.Object $r3;
        android.content.ContentProviderOperation $r4;
        android.content.ContentProviderResult $r5;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (android.content.ContentProviderResult)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.content.ContentProviderOperation) $r3;

        $r5 = virtualinvoke $r4.<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>(r0, r2, i1);

        r2[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, r2;
        android.os.Bundle r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        return null;
    }

    public void shutdown()
    {
        android.content.ContentProvider r0;

        r0 := @this: android.content.ContentProvider;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentProvider", "implement ContentProvider shutdown() to make sure all database connections are gracefully shutdown");

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.content.ContentProvider r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("nothing to dump");

        return;
    }

    private void validateIncomingUri(android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r3, $r4, $r10, $r19, $r28, r29;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r16, $r17, $r18, $r22, $r23, $r24, $r25, $r27;
        java.lang.String[] $r14;
        java.lang.SecurityException $r15, $r21;
        android.content.Context $r20, $r26;

        r0 := @this: android.content.ContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>(r2, -2);

        if i0 == -2 goto label1;

        $r20 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        $i1 = virtualinvoke $r20.<android.content.Context: int getUserId()>();

        if i0 == $i1 goto label1;

        $r21 = new java.lang.SecurityException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to query a ContentProvider in user ");

        $r26 = r0.<android.content.ContentProvider: android.content.Context mContext>;

        $i2 = virtualinvoke $r26.<android.content.Context: int getUserId()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with a uri belonging to user ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String)>($r28);

        throw $r21;

     label1:
        $r4 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<android.content.ContentProvider: boolean matchesOurAuthorities(java.lang.String)>($r4);

        if $z0 != 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The authority of the uri ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match the one of the ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contentProvider: ");

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        if $r10 == null goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = r0.<android.content.ContentProvider: java.lang.String mAuthority>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r29 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = r0.<android.content.ContentProvider: java.lang.String[] mAuthorities>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        r29 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>(r29);

        throw $r15;

     label4:
        return;
    }

    public static int getUserIdFromAuthority(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, $i2;
        java.lang.NumberFormatException r2, $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return i0;

     label1:
        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(64);

        if i1 != -1 goto label2;

        return i0;

     label2:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label3:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label4:
        return $i2;

     label5:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentProvider", "Error parsing userId.", r2);

        return -10000;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public static int getUserIdFromAuthority(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>(r0, -2);

        return $i0;
    }

    public static int getUserIdFromUri(android.net.Uri, int)
    {
        android.net.Uri r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return i0;

     label1:
        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $i1 = staticinvoke <android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>($r1, i0);

        return $i1;
    }

    public static int getUserIdFromUri(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;

        r0 := @parameter0: android.net.Uri;

        $i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r0, -2);

        return $i0;
    }

    public static java.lang.String getAuthorityWithoutUserId(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(64);

        $i1 = i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static android.net.Uri getUriWithoutUserId(android.net.Uri)
    {
        android.net.Uri r0, $r5;
        android.net.Uri$Builder r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: android.net.Uri;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $r3 = staticinvoke <android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>($r2);

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public static boolean uriHasUserId(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getUserInfo()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static android.net.Uri maybeAddUserId(android.net.Uri, int)
    {
        android.net.Uri r0, $r12;
        int i0;
        android.net.Uri$Builder r1;
        java.lang.String $r2, $r3, $r8, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;

        r0 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        if i0 == -2 goto label2;

        $r2 = "content";

        $r3 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.content.ContentProvider: boolean uriHasUserId(android.net.Uri)>(r0);

        if $z1 != 0 goto label2;

        r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r8 = virtualinvoke r0.<android.net.Uri: java.lang.String getEncodedAuthority()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r12;

     label2:
        return r0;
    }

    static void access$000(android.content.ContentProvider, android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider r0;
        android.net.Uri r1;

        r0 := @parameter0: android.content.ContentProvider;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<android.content.ContentProvider: void validateIncomingUri(android.net.Uri)>(r1);

        return;
    }

    static java.lang.String access$100(android.content.ContentProvider, java.lang.String)
    {
        android.content.ContentProvider r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: android.content.ContentProvider;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<android.content.ContentProvider: java.lang.String setCallingPackage(java.lang.String)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.content.ContentProvider: java.lang.String TAG> = "ContentProvider";

        return;
    }
}
