public class android.security.AndroidKeyStore extends java.security.KeyStoreSpi
{
    public static final java.lang.String NAME;
    private android.security.KeyStore mKeyStore;

    public void <init>()
    {
        android.security.AndroidKeyStore r0;

        r0 := @this: android.security.AndroidKeyStore;

        specialinvoke r0.<java.security.KeyStoreSpi: void <init>()>();

        return;
    }

    public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r9;
        char[] r2;
        com.android.org.conscrypt.OpenSSLEngine r3;
        java.security.InvalidKeyException r4, $r11;
        java.security.UnrecoverableKeyException r5, $r12;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.security.PrivateKey $r10;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.org.conscrypt.OpenSSLEngine: com.android.org.conscrypt.OpenSSLEngine getInstance(java.lang.String)>("keystore");

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r3.<com.android.org.conscrypt.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)>($r9);

     label3:
        return $r10;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new java.security.UnrecoverableKeyException;

        specialinvoke $r12.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Can\'t get key");

        r5 = $r12;

        virtualinvoke r5.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        throw r5;

        catch java.security.InvalidKeyException from label2 to label3 with label4;
    }

    public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r12;
        java.security.cert.X509Certificate r2;
        java.security.cert.Certificate[] r3;
        byte[] r4;
        java.util.Collection r5;
        java.util.Iterator r6;
        int i0, $i1, $i2, $i3;
        java.security.cert.Certificate $r7, $r15;
        java.lang.StringBuilder $r8, $r10, $r11;
        android.security.KeyStore $r9;
        boolean $z0;
        java.lang.Object $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r14;

     label1:
        $r7 = virtualinvoke r0.<android.security.AndroidKeyStore: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r1);

        r2 = (java.security.cert.X509Certificate) $r7;

        if r2 != null goto label2;

        return null;

     label2:
        $r9 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke $r9.<android.security.KeyStore: byte[] get(java.lang.String)>($r12);

        if r4 == null goto label5;

        r5 = staticinvoke <android.security.AndroidKeyStore: java.util.Collection toCertificates(byte[])>(r4);

        $i2 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $i1 = $i2 + 1;

        r3 = newarray (java.security.cert.Certificate)[$i1];

        r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

        i0 = 1;

     label3:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i3 = i0;

        i0 = i0 + 1;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.security.cert.Certificate) $r13;

        r3[$i3] = $r15;

        goto label3;

     label4:
        goto label6;

     label5:
        r3 = newarray (java.security.cert.Certificate)[1];

     label6:
        r3[0] = r2;

        return r3;
    }

    public java.security.cert.Certificate engineGetCertificate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r7, $r12;
        byte[] r2, r16;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r11;
        android.security.KeyStore $r4, $r9;
        java.security.cert.X509Certificate $r13, $r15;
        java.lang.NullPointerException $r14;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r14;

     label1:
        $r4 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke $r4.<android.security.KeyStore: byte[] get(java.lang.String)>($r7);

        if r2 == null goto label2;

        $r15 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r2);

        return $r15;

     label2:
        $r9 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = virtualinvoke $r9.<android.security.KeyStore: byte[] get(java.lang.String)>($r12);

        if r16 == null goto label3;

        $r13 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r16);

        return $r13;

     label3:
        return null;
    }

    private static java.security.cert.X509Certificate toCertificate(byte[])
    {
        byte[] r0;
        java.security.cert.CertificateFactory r1;
        java.io.ByteArrayInputStream $r2;
        java.security.cert.Certificate $r3;
        java.security.cert.X509Certificate $r4;
        java.security.cert.CertificateException $r5, r6;

        r0 := @parameter0: byte[];

     label1:
        r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r3 = virtualinvoke r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        $r4 = (java.security.cert.X509Certificate) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidKeyStore", "Couldn\'t parse certificate in keystore", r6);

        return null;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private static java.util.Collection toCertificates(byte[])
    {
        byte[] r0;
        java.security.cert.CertificateFactory r1;
        java.io.ByteArrayInputStream $r2;
        java.util.Collection $r3;
        java.security.cert.CertificateException $r4, r6;
        java.util.ArrayList $r5;

        r0 := @parameter0: byte[];

     label1:
        r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r3 = virtualinvoke r1.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidKeyStore", "Couldn\'t parse certificates in keystore", r6);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private java.util.Date getModificationDate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        long l0;
        android.security.KeyStore $r2;
        byte $b1;
        java.util.Date $r3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        l0 = virtualinvoke $r2.<android.security.KeyStore: long getmtime(java.lang.String)>(r1);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>(l0);

        return $r3;
    }

    public java.util.Date engineGetCreationDate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6, $r10, $r15;
        java.util.Date r2, $r14, r17;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13;
        java.lang.NullPointerException $r16;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r16;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r6);

        if r2 == null goto label2;

        return r2;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r10);

        if r17 == null goto label3;

        return r17;

     label3:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r15);

        return $r14;
    }

    public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        java.security.Key r2;
        char[] r3;
        java.security.cert.Certificate[] r4;
        boolean $z0;
        java.security.KeyStoreException $r5, $r7;
        java.security.PrivateKey $r6;
        int $i0;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Key;

        r3 := @parameter2: char[];

        r4 := @parameter3: java.security.cert.Certificate[];

        if r3 == null goto label1;

        $i0 = lengthof r3;

        if $i0 <= 0 goto label1;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.String)>("entries cannot be protected with passwords");

        throw $r7;

     label1:
        $z0 = r2 instanceof java.security.PrivateKey;

        if $z0 == 0 goto label2;

        $r6 = (java.security.PrivateKey) r2;

        specialinvoke r0.<android.security.AndroidKeyStore: void setPrivateKeyEntry(java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],android.security.KeyStoreParameter)>(r1, $r6, r4, null);

        goto label3;

     label2:
        $r5 = new java.security.KeyStoreException;

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>("Only PrivateKeys are supported");

        throw $r5;

     label3:
        return;
    }

    private void setPrivateKeyEntry(java.lang.String, java.security.PrivateKey, java.security.cert.Certificate[], android.security.KeyStoreParameter) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, r6, r7, $r11, $r22, $r23, $r32, $r47, $r48, $r50, $r57, $r58, $r61, $r76, r78;
        java.security.PrivateKey r2;
        java.security.cert.Certificate[] r3;
        android.security.KeyStoreParameter r4;
        byte[] r5, $r39, $r40, $r41, $r42, r80, r81;
        boolean z0, $z1, $z2, $z4, $z5, $z8, $z11, $z12, $z13, $z14;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        java.security.cert.CertificateEncodingException r8, r10, $r71, $r73;
        byte[][] r9;
        java.security.KeyStoreException $r12, $r13, $r26, $r31, $r36, $r49, $r54, $r60, $r67, $r72, $r74;
        java.security.cert.X509Certificate $r14, $r38, $r45;
        android.security.KeyStore $r15, $r19, $r21, $r27, $r28, $r29, $r35, $r37;
        java.lang.StringBuilder $r16, $r17, $r18, $r20, $r24, $r25, $r30, $r33, $r34, $r51, $r52, $r53, $r55, $r56, $r59, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r77;
        java.security.cert.Certificate $r43, $r44, $r46;
        com.android.org.conscrypt.OpenSSLKeyHolder $r62;
        com.android.org.conscrypt.OpenSSLKey $r75;
        java.security.cert.X509Certificate[] r79;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.PrivateKey;

        r3 := @parameter2: java.security.cert.Certificate[];

        r4 := @parameter3: android.security.KeyStoreParameter;

        r5 = null;

        $z1 = r2 instanceof com.android.org.conscrypt.OpenSSLKeyHolder;

        if $z1 == 0 goto label01;

        $r62 = (com.android.org.conscrypt.OpenSSLKeyHolder) r2;

        $r75 = interfaceinvoke $r62.<com.android.org.conscrypt.OpenSSLKeyHolder: com.android.org.conscrypt.OpenSSLKey getOpenSSLKey()>();

        r6 = virtualinvoke $r75.<com.android.org.conscrypt.OpenSSLKey: java.lang.String getAlias()>();

        goto label02;

     label01:
        r6 = null;

     label02:
        if r6 == null goto label04;

        $z14 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("USRPKEY_");

        if $z14 == 0 goto label04;

        $r57 = "USRPKEY_";

        $i15 = virtualinvoke $r57.<java.lang.String: int length()>();

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i15);

        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z13 != 0 goto label03;

        $r67 = new java.security.KeyStoreException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only replace keys with same alias: ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.security.KeyStoreException: void <init>(java.lang.String)>($r61);

        throw $r67;

     label03:
        z0 = 0;

        goto label08;

     label04:
        r78 = interfaceinvoke r2.<java.security.PrivateKey: java.lang.String getFormat()>();

        if r78 == null goto label05;

        $r11 = "PKCS#8";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r78);

        if $z2 != 0 goto label06;

     label05:
        $r12 = new java.security.KeyStoreException;

        specialinvoke $r12.<java.security.KeyStoreException: void <init>(java.lang.String)>("Only PrivateKeys that can be encoded into PKCS#8 are supported");

        throw $r12;

     label06:
        r5 = interfaceinvoke r2.<java.security.PrivateKey: byte[] getEncoded()>();

        if r5 != null goto label07;

        $r60 = new java.security.KeyStoreException;

        specialinvoke $r60.<java.security.KeyStoreException: void <init>(java.lang.String)>("PrivateKey has no encoding");

        throw $r60;

     label07:
        z0 = 1;

     label08:
        if r3 == null goto label09;

        $i4 = lengthof r3;

        if $i4 != 0 goto label10;

     label09:
        $r13 = new java.security.KeyStoreException;

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.String)>("Must supply at least one Certificate with PrivateKey");

        throw $r13;

     label10:
        $i6 = lengthof r3;

        r79 = newarray (java.security.cert.X509Certificate)[$i6];

        i0 = 0;

     label11:
        $i5 = lengthof r3;

        if i0 >= $i5 goto label14;

        $r47 = "X.509";

        $r46 = r3[i0];

        $r48 = virtualinvoke $r46.<java.security.cert.Certificate: java.lang.String getType()>();

        $z12 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r48);

        if $z12 != 0 goto label12;

        $r49 = new java.security.KeyStoreException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificates must be in X.509 format: invalid cert #");

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<java.security.KeyStoreException: void <init>(java.lang.String)>($r58);

        throw $r49;

     label12:
        $r43 = r3[i0];

        $z11 = $r43 instanceof java.security.cert.X509Certificate;

        if $z11 != 0 goto label13;

        $r54 = new java.security.KeyStoreException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificates must be in X.509 format: invalid cert #");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.security.KeyStoreException: void <init>(java.lang.String)>($r50);

        throw $r54;

     label13:
        $r44 = r3[i0];

        $r45 = (java.security.cert.X509Certificate) $r44;

        r79[i0] = $r45;

        i0 = i0 + 1;

        goto label11;

     label14:
        $r14 = r79[0];

        r80 = virtualinvoke $r14.<java.security.cert.X509Certificate: byte[] getEncoded()>();

     label15:
        goto label17;

     label16:
        $r73 := @caughtexception;

        r8 = $r73;

        $r74 = new java.security.KeyStoreException;

        specialinvoke $r74.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t encode certificate #1", r8);

        throw $r74;

     label17:
        $i7 = lengthof r3;

        if $i7 <= 1 goto label26;

        $i11 = lengthof r79;

        $i10 = $i11 - 1;

        r9 = newarray (byte[])[$i10];

        i1 = 0;

        i2 = 0;

     label18:
        $i9 = lengthof r9;

        if i2 >= $i9 goto label23;

     label19:
        $i14 = i2 + 1;

        $r38 = r79[$i14];

        $r39 = virtualinvoke $r38.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        r9[i2] = $r39;

        $r40 = r9[i2];

        $i12 = lengthof $r40;

        i1 = i1 + $i12;

     label20:
        goto label22;

     label21:
        $r71 := @caughtexception;

        r10 = $r71;

        $r72 = new java.security.KeyStoreException;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t encode Certificate #");

        $r77 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r72.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r76, r10);

        throw $r72;

     label22:
        i2 = i2 + 1;

        goto label18;

     label23:
        r81 = newarray (byte)[i1];

        i16 = 0;

        i17 = 0;

     label24:
        $i13 = lengthof r9;

        if i17 >= $i13 goto label25;

        $r41 = r9[i17];

        i3 = lengthof $r41;

        $r42 = r9[i17];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r42, 0, r81, i16, i3);

        i16 = i16 + i3;

        r9[i17] = null;

        i17 = i17 + 1;

        goto label24;

     label25:
        goto label27;

     label26:
        r81 = null;

     label27:
        if z0 == 0 goto label28;

        $r35 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r35, r1);

        goto label29;

     label28:
        $r15 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteCertificateTypesForAlias(android.security.KeyStore,java.lang.String)>($r15, r1);

     label29:
        if r4 != null goto label30;

        $i8 = 0;

        goto label31;

     label30:
        $i8 = virtualinvoke r4.<android.security.KeyStoreParameter: int getFlags()>();

     label31:
        i18 = $i8;

        if z0 == 0 goto label32;

        $r29 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $z8 = virtualinvoke $r29.<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>($r32, r5, -1, i18);

        if $z8 != 0 goto label32;

        $r37 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r37, r1);

        $r36 = new java.security.KeyStoreException;

        specialinvoke $r36.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put private key in keystore");

        throw $r36;

     label32:
        $r19 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = virtualinvoke $r19.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r22, r80, -1, i18);

        if $z4 != 0 goto label33;

        $r27 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r27, r1);

        $r31 = new java.security.KeyStoreException;

        specialinvoke $r31.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put certificate #1 in keystore");

        throw $r31;

     label33:
        if r81 == null goto label34;

        $r21 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke $r21.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r23, r81, -1, i18);

        if $z5 != 0 goto label34;

        $r28 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r28, r1);

        $r26 = new java.security.KeyStoreException;

        specialinvoke $r26.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put certificate chain in keystore");

        throw $r26;

     label34:
        return;

        catch java.security.cert.CertificateEncodingException from label14 to label15 with label16;
        catch java.security.cert.CertificateEncodingException from label19 to label20 with label21;
    }

    public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        byte[] r2;
        java.security.cert.Certificate[] r3;
        java.security.KeyStoreException $r4;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.security.cert.Certificate[];

        $r4 = new java.security.KeyStoreException;

        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String)>("Operation not supported because key encoding is unknown");

        throw $r4;
    }

    public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r9;
        java.security.cert.Certificate r2;
        byte[] r3;
        java.security.cert.CertificateEncodingException r4, $r14;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8;
        android.security.KeyStore $r6;
        java.security.KeyStoreException $r10, $r12, $r13;
        java.lang.NullPointerException $r11;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.Certificate;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r12 = new java.security.KeyStoreException;

        specialinvoke $r12.<java.security.KeyStoreException: void <init>(java.lang.String)>("Entry exists and is not a trusted certificate");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("cert == null");

        throw $r11;

     label2:
        r3 = virtualinvoke r2.<java.security.cert.Certificate: byte[] getEncoded()>();

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

        $r13 = new java.security.KeyStoreException;

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r4);

        throw $r13;

     label5:
        $r6 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r9, r3, -1, 0);

        if $z1 != 0 goto label6;

        $r10 = new java.security.KeyStoreException;

        specialinvoke $r10.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t insert certificate; is KeyStore initialized?");

        throw $r10;

     label6:
        return;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }

    public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2;
        android.security.KeyStore $r2;
        java.security.KeyStoreException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isCertificateEntry(java.lang.String)>(r1);

        if $z2 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $z1 = staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r2, r1);

        if $z1 != 0 goto label2;

        $r3 = new java.security.KeyStoreException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such entry ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.KeyStoreException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return;
    }

    private java.util.Set getUniqueAliases()
    {
        android.security.AndroidKeyStore r0;
        java.lang.String[] r1, r3;
        java.util.HashSet r2, $r6, $r13;
        int i0, i1, i2, $i3, $i4, $i6;
        java.lang.String r4, $r9, $r11, $r12;
        android.security.KeyStore $r5;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: android.security.AndroidKeyStore;

        $r5 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r1 = virtualinvoke $r5.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("");

        if r1 != null goto label1;

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        return $r13;

     label1:
        $r6 = new java.util.HashSet;

        $i3 = lengthof r1;

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>($i3);

        r2 = $r6;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r4 = r3[i1];

        i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(95);

        if i2 == -1 goto label3;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i4 > i2 goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid alias: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AndroidKeyStore", $r9);

        goto label5;

     label4:
        $r11 = new java.lang.String;

        $i6 = i2 + 1;

        $r12 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i6);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r12);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return r2;
    }

    public java.util.Enumeration engineAliases()
    {
        android.security.AndroidKeyStore r0;
        java.util.Set $r1;
        java.util.Enumeration $r2;

        r0 := @this: android.security.AndroidKeyStore;

        $r1 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r1);

        return $r2;
    }

    public boolean engineContainsAlias(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6, $r11, $r16;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15;
        android.security.KeyStore $r3, $r8, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.NullPointerException $r17;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r17;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        if $z0 != 0 goto label2;

        $r8 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r8.<android.security.KeyStore: boolean contains(java.lang.String)>($r11);

        if $z1 != 0 goto label2;

        $r13 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r13.<android.security.KeyStore: boolean contains(java.lang.String)>($r16);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int engineSize()
    {
        android.security.AndroidKeyStore r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: android.security.AndroidKeyStore;

        $r1 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public boolean engineIsKeyEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        return $z0;
    }

    private boolean isKeyEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        android.security.KeyStore $r3;
        boolean $z0;
        java.lang.NullPointerException $r7;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r7;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        return $z0;
    }

    private boolean isCertificateEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        android.security.KeyStore $r3;
        boolean $z0;
        java.lang.NullPointerException $r7;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r7;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        return $z0;
    }

    public boolean engineIsCertificateEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isCertificateEntry(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)
    {
        android.security.AndroidKeyStore r0;
        java.security.cert.Certificate r1;
        java.util.HashSet r2, $r9;
        java.lang.String[] r3, r4, r28, r29;
        int i0, i1, i2, i3;
        java.lang.String r5, $r15, $r20, $r25, r30;
        byte[] r6, $r22, r31;
        java.security.cert.X509Certificate r7, r8;
        android.security.KeyStore $r10, $r11, $r14, $r19, $r26;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r18, $r21, $r23, $r24, $r27;
        boolean $z0, $z1, $z3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.security.cert.Certificate;

        if r1 != null goto label01;

        return null;

     label01:
        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r2 = $r9;

        $r10 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r3 = virtualinvoke $r10.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("USRCERT_");

        if r3 == null goto label05;

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label02:
        if i1 >= i0 goto label05;

        r5 = r4[i1];

        $r26 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke $r26.<android.security.KeyStore: byte[] get(java.lang.String)>($r25);

        if r6 != null goto label03;

        goto label04;

     label03:
        r7 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r6);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5);

        $z3 = virtualinvoke r1.<java.security.cert.Certificate: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label04;

        return r5;

     label04:
        i1 = i1 + 1;

        goto label02;

     label05:
        $r11 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r28 = virtualinvoke $r11.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("CACERT_");

        if r3 == null goto label10;

        r29 = r28;

        i2 = lengthof r29;

        i3 = 0;

     label06:
        if i3 >= i2 goto label10;

        r30 = r29[i3];

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r30);

        if $z0 == 0 goto label07;

        goto label09;

     label07:
        $r14 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r31 = virtualinvoke $r14.<android.security.KeyStore: byte[] get(java.lang.String)>($r15);

        if r31 != null goto label08;

        goto label09;

     label08:
        $r19 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke $r19.<android.security.KeyStore: byte[] get(java.lang.String)>($r20);

        r8 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>($r22);

        $z1 = virtualinvoke r1.<java.security.cert.Certificate: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label09;

        return r30;

     label09:
        i3 = i3 + 1;

        goto label06;

     label10:
        return null;
    }

    public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        android.security.AndroidKeyStore r0;
        java.io.OutputStream r1;
        char[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: char[];

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Can not serialize AndroidKeyStore to OutputStream");

        throw $r3;
    }

    public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        android.security.AndroidKeyStore r0;
        java.io.InputStream r1;
        char[] r2;
        android.security.KeyStore $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: char[];

        if r1 == null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream not supported");

        throw $r5;

     label1:
        if r2 == null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("password not supported");

        throw $r4;

     label2:
        $r3 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore> = $r3;

        return;
    }

    public void engineSetEntry(java.lang.String, java.security.KeyStore$Entry, java.security.KeyStore$ProtectionParameter) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r9, $r16, $r18;
        java.security.KeyStore$Entry r2;
        java.security.KeyStore$ProtectionParameter r3;
        java.security.KeyStore$TrustedCertificateEntry r4;
        boolean $z0, $z1, $z2, $z3;
        java.security.KeyStoreException $r5, $r13, $r20;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r19;
        java.security.PrivateKey $r10;
        java.security.cert.Certificate[] $r11;
        android.security.KeyStoreParameter $r12;
        java.lang.Class $r17;
        java.security.cert.Certificate $r21;
        java.security.KeyStore$PrivateKeyEntry r22;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.KeyStore$Entry;

        r3 := @parameter2: java.security.KeyStore$ProtectionParameter;

        if r2 != null goto label1;

        $r20 = new java.security.KeyStoreException;

        specialinvoke $r20.<java.security.KeyStoreException: void <init>(java.lang.String)>("entry == null");

        throw $r20;

     label1:
        $z0 = virtualinvoke r0.<android.security.AndroidKeyStore: boolean engineContainsAlias(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.security.AndroidKeyStore: void engineDeleteEntry(java.lang.String)>(r1);

     label2:
        $z1 = r2 instanceof java.security.KeyStore$TrustedCertificateEntry;

        if $z1 == 0 goto label3;

        r4 = (java.security.KeyStore$TrustedCertificateEntry) r2;

        $r21 = virtualinvoke r4.<java.security.KeyStore$TrustedCertificateEntry: java.security.cert.Certificate getTrustedCertificate()>();

        virtualinvoke r0.<android.security.AndroidKeyStore: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>(r1, $r21);

        return;

     label3:
        if r3 == null goto label4;

        $z3 = r3 instanceof android.security.KeyStoreParameter;

        if $z3 != 0 goto label4;

        $r13 = new java.security.KeyStoreException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protParam should be android.security.KeyStoreParameter; was: ");

        $r17 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label4:
        $z2 = r2 instanceof java.security.KeyStore$PrivateKeyEntry;

        if $z2 == 0 goto label5;

        r22 = (java.security.KeyStore$PrivateKeyEntry) r2;

        $r10 = virtualinvoke r22.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        $r11 = virtualinvoke r22.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r12 = (android.security.KeyStoreParameter) r3;

        specialinvoke r0.<android.security.AndroidKeyStore: void setPrivateKeyEntry(java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],android.security.KeyStoreParameter)>(r1, $r10, $r11, $r12);

        return;

     label5:
        $r5 = new java.security.KeyStoreException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry must be a PrivateKeyEntry or TrustedCertificateEntry; was ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.security.AndroidKeyStore: java.lang.String NAME> = "AndroidKeyStore";

        return;
    }
}
