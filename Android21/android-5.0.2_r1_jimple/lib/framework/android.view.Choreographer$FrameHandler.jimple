final class android.view.Choreographer$FrameHandler extends android.os.Handler
{
    final android.view.Choreographer this$0;

    public void <init>(android.view.Choreographer, android.os.Looper)
    {
        android.view.Choreographer$FrameHandler r0;
        android.view.Choreographer r1;
        android.os.Looper r2;

        r0 := @this: android.view.Choreographer$FrameHandler;

        r1 := @parameter0: android.view.Choreographer;

        r2 := @parameter1: android.os.Looper;

        r0.<android.view.Choreographer$FrameHandler: android.view.Choreographer this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.view.Choreographer$FrameHandler r0;
        android.os.Message r1;
        int $i0, $i2;
        android.view.Choreographer $r2, $r3, $r4;
        long $l1;

        r0 := @this: android.view.Choreographer$FrameHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = r0.<android.view.Choreographer$FrameHandler: android.view.Choreographer this$0>;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        virtualinvoke $r2.<android.view.Choreographer: void doFrame(long,int)>($l1, 0);

        goto label4;

     label2:
        $r4 = r0.<android.view.Choreographer$FrameHandler: android.view.Choreographer this$0>;

        virtualinvoke $r4.<android.view.Choreographer: void doScheduleVsync()>();

        goto label4;

     label3:
        $r3 = r0.<android.view.Choreographer$FrameHandler: android.view.Choreographer this$0>;

        $i2 = r1.<android.os.Message: int arg1>;

        virtualinvoke $r3.<android.view.Choreographer: void doScheduleCallback(int)>($i2);

     label4:
        return;
    }
}
