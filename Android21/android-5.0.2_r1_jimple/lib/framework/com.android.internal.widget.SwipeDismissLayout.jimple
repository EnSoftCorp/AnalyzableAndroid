public class com.android.internal.widget.SwipeDismissLayout extends android.widget.FrameLayout
{
    private static final java.lang.String TAG;
    private static final float DISMISS_MIN_DRAG_WIDTH_RATIO;
    private int mSlop;
    private int mMinFlingVelocity;
    private int mMaxFlingVelocity;
    private long mAnimationTime;
    private android.animation.TimeInterpolator mCancelInterpolator;
    private android.animation.TimeInterpolator mDismissInterpolator;
    private int mActiveTouchId;
    private float mDownX;
    private float mDownY;
    private boolean mSwiping;
    private boolean mDismissed;
    private boolean mDiscardIntercept;
    private android.view.VelocityTracker mVelocityTracker;
    private float mTranslationX;
    private com.android.internal.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener;
    private com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener;
    private float mLastX;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void init(android.content.Context)>(r1);

        return;
    }

    private void init(android.content.Context)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.content.Context r1, $r3, $r4;
        android.view.ViewConfiguration r2;
        int $i0, $i1, $i2, $i3;
        android.content.res.Resources $r5;
        long $l4;
        android.view.animation.DecelerateInterpolator $r6;
        android.view.animation.AccelerateInterpolator $r7;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: android.content.Context getContext()>();

        r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        $i0 = virtualinvoke r2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: int mSlop> = $i0;

        $i1 = virtualinvoke r2.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: int mMinFlingVelocity> = $i1;

        $i2 = virtualinvoke r2.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: int mMaxFlingVelocity> = $i2;

        $r4 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694720);

        $l4 = (long) $i3;

        r0.<com.android.internal.widget.SwipeDismissLayout: long mAnimationTime> = $l4;

        $r6 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r6.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.5F);

        r0.<com.android.internal.widget.SwipeDismissLayout: android.animation.TimeInterpolator mCancelInterpolator> = $r6;

        $r7 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r7.<android.view.animation.AccelerateInterpolator: void <init>(float)>(1.5F);

        r0.<com.android.internal.widget.SwipeDismissLayout: android.animation.TimeInterpolator mDismissInterpolator> = $r7;

        return;
    }

    public void setOnDismissedListener(com.android.internal.widget.SwipeDismissLayout$OnDismissedListener)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        com.android.internal.widget.SwipeDismissLayout$OnDismissedListener r1;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: com.android.internal.widget.SwipeDismissLayout$OnDismissedListener;

        r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener> = r1;

        return;
    }

    public void setOnSwipeProgressChangedListener(com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener r1;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener;

        r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener> = r1;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i8, $i9, i12, i13;
        byte b2, $b7, $b11;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        android.view.VelocityTracker $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $f3 = r0.<com.android.internal.widget.SwipeDismissLayout: float mTranslationX>;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f3, 0.0F);

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i3)
        {
            case 0: goto label01;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label11;
            case 5: goto label02;
            case 6: goto label03;
            default: goto label11;
        };

     label01:
        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void resetMembers()>();

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX> = $f4;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: float mDownY> = $f5;

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<com.android.internal.widget.SwipeDismissLayout: int mActiveTouchId> = $i4;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker> = $r2;

        $r3 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        goto label11;

     label02:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        r0.<com.android.internal.widget.SwipeDismissLayout: int mActiveTouchId> = $i8;

        goto label11;

     label03:
        i12 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i12);

        $i6 = r0.<com.android.internal.widget.SwipeDismissLayout: int mActiveTouchId>;

        if i1 != $i6 goto label11;

        if i12 != 0 goto label04;

        $b7 = 1;

        goto label05;

     label04:
        $b7 = 0;

     label05:
        b2 = $b7;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b2);

        r0.<com.android.internal.widget.SwipeDismissLayout: int mActiveTouchId> = $i5;

        goto label11;

     label06:
        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void resetMembers()>();

        goto label11;

     label07:
        $r4 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r4 == null goto label11;

        $z3 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDiscardIntercept>;

        if $z3 == 0 goto label08;

        goto label11;

     label08:
        $i9 = r0.<com.android.internal.widget.SwipeDismissLayout: int mActiveTouchId>;

        i13 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i9);

        if i13 != -1 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SwipeDismissLayout", "Invalid pointer index: ignoring.");

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 1;

        goto label11;

     label09:
        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f7 = r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f6 - $f7;

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i13);

        f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i13);

        $b11 = f0 cmpl 0.0F;

        if $b11 == 0 goto label10;

        $z4 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: boolean canScroll(android.view.View,boolean,float,float,float)>(r0, 0, f0, f1, f2);

        if $z4 == 0 goto label10;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 1;

        goto label11;

     label10:
        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void updateSwiping(android.view.MotionEvent)>(r1);

     label11:
        $z0 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDiscardIntercept>;

        if $z0 != 0 goto label12;

        $z2 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z2 == 0 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        return $z1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        android.view.VelocityTracker $r2, $r3;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label1;

        $z3 = specialinvoke r0.<android.widget.FrameLayout: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z3;

     label1:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label5;
            default: goto label7;
        };

     label2:
        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void updateDismiss(android.view.MotionEvent)>(r1);

        $z0 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void dismiss()>();

        goto label4;

     label3:
        $z1 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void cancel()>();

     label4:
        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void resetMembers()>();

        goto label7;

     label5:
        virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void cancel()>();

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void resetMembers()>();

        goto label7;

     label6:
        $r3 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<com.android.internal.widget.SwipeDismissLayout: float mLastX> = $f0;

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void updateSwiping(android.view.MotionEvent)>(r1);

        $z2 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z2 == 0 goto label7;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f2 = r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX>;

        $f3 = $f1 - $f2;

        specialinvoke r0.<com.android.internal.widget.SwipeDismissLayout: void setProgress(float)>($f3);

     label7:
        return 1;
    }

    private void setProgress(float)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        float f0, $f1, $f2;
        com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener $r1, $r2;
        byte $b0;
        int $i1;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        f0 := @parameter0: float;

        r0.<com.android.internal.widget.SwipeDismissLayout: float mTranslationX> = f0;

        $r1 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        if $r1 == null goto label1;

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        $i1 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: int getWidth()>();

        $f1 = (float) $i1;

        $f2 = f0 / $f1;

        interfaceinvoke $r2.<com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener: void onSwipeProgressChanged(com.android.internal.widget.SwipeDismissLayout,float,float)>(r0, $f2, f0);

     label1:
        return;
    }

    private void dismiss()
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        com.android.internal.widget.SwipeDismissLayout$OnDismissedListener $r1, $r2;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        $r1 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnDismissedListener mDismissedListener>;

        interfaceinvoke $r2.<com.android.internal.widget.SwipeDismissLayout$OnDismissedListener: void onDismissed(com.android.internal.widget.SwipeDismissLayout)>(r0);

     label1:
        return;
    }

    protected void cancel()
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener $r1, $r2;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        $r1 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener mProgressListener>;

        interfaceinvoke $r2.<com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener: void onSwipeCancelled(com.android.internal.widget.SwipeDismissLayout)>(r0);

     label1:
        return;
    }

    private void resetMembers()
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        $r1 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

     label1:
        r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker> = null;

        r0.<com.android.internal.widget.SwipeDismissLayout: float mTranslationX> = 0.0F;

        r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX> = 0.0F;

        r0.<com.android.internal.widget.SwipeDismissLayout: float mDownY> = 0.0F;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping> = 0;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed> = 0;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDiscardIntercept> = 0;

        return;
    }

    private void updateSwiping(android.view.MotionEvent)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8;
        byte $b4, $b6, $b9;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z0 != 0 goto label4;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f3 = r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f2 - $f3;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f5 = r0.<com.android.internal.widget.SwipeDismissLayout: float mDownY>;

        f1 = $f4 - $f5;

        $f7 = f0 * f0;

        $f6 = f1 * f1;

        $f9 = $f7 + $f6;

        $i1 = r0.<com.android.internal.widget.SwipeDismissLayout: int mSlop>;

        $i0 = r0.<com.android.internal.widget.SwipeDismissLayout: int mSlop>;

        $i2 = $i1 * $i0;

        $f8 = (float) $i2;

        $b4 = $f9 cmpl $f8;

        if $b4 <= 0 goto label3;

        $i3 = r0.<com.android.internal.widget.SwipeDismissLayout: int mSlop>;

        $i5 = $i3 * 2;

        $f10 = (float) $i5;

        $b6 = f0 cmpl $f10;

        if $b6 <= 0 goto label1;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i8 = r0.<com.android.internal.widget.SwipeDismissLayout: int mSlop>;

        $i7 = $i8 * 2;

        $f12 = (float) $i7;

        $b9 = $f11 cmpg $f12;

        if $b9 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping> = $z1;

        goto label4;

     label3:
        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping> = 0;

     label4:
        return;
    }

    private void updateDismiss(android.view.MotionEvent)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean $z0, $z1, $z2;
        int $i0, $i2;
        byte $b1, $b3, $b4;
        android.view.VelocityTracker $r2, $r3;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f2 = r0.<com.android.internal.widget.SwipeDismissLayout: float mDownX>;

        f0 = $f1 - $f2;

        $z0 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $r3 = r0.<com.android.internal.widget.SwipeDismissLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $i2 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: int getWidth()>();

        $f5 = (float) $i2;

        $f6 = $f5 * 0.33F;

        $b3 = f0 cmpl $f6;

        if $b3 <= 0 goto label1;

        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f7 = r0.<com.android.internal.widget.SwipeDismissLayout: float mLastX>;

        $b4 = $f8 cmpl $f7;

        if $b4 < 0 goto label1;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed> = 1;

     label1:
        $z1 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.internal.widget.SwipeDismissLayout: boolean mSwiping>;

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: int getWidth()>();

        $f3 = (float) $i0;

        $f4 = $f3 * 0.33F;

        $b1 = f0 cmpg $f4;

        if $b1 >= 0 goto label2;

        r0.<com.android.internal.widget.SwipeDismissLayout: boolean mDismissed> = 0;

     label2:
        return;
    }

    protected boolean canScroll(android.view.View, boolean, float, float, float)
    {
        com.android.internal.widget.SwipeDismissLayout r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.view.ViewGroup r2;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i10, $i11, $i13, $i14;
        byte $b6, $b8, $b9, $b12;

        r0 := @this: com.android.internal.widget.SwipeDismissLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i0 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i1 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i2 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i3);

        $f4 = (float) i0;

        $f5 = f1 + $f4;

        $i5 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f6 = (float) $i5;

        $b6 = $f5 cmpl $f6;

        if $b6 < 0 goto label2;

        $f8 = (float) i0;

        $f7 = f1 + $f8;

        $i7 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f9 = (float) $i7;

        $b8 = $f7 cmpg $f9;

        if $b8 >= 0 goto label2;

        $f10 = (float) i1;

        $f12 = f2 + $f10;

        $i10 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f11 = (float) $i10;

        $b9 = $f12 cmpl $f11;

        if $b9 < 0 goto label2;

        $f14 = (float) i1;

        $f15 = f2 + $f14;

        $i11 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f13 = (float) $i11;

        $b12 = $f15 cmpg $f13;

        if $b12 >= 0 goto label2;

        $f17 = (float) i0;

        $f16 = f1 + $f17;

        $i13 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f20 = (float) $i13;

        $f19 = $f16 - $f20;

        $f18 = (float) i1;

        $f23 = f2 + $f18;

        $i14 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f22 = (float) $i14;

        $f21 = $f23 - $f22;

        $z4 = virtualinvoke r0.<com.android.internal.widget.SwipeDismissLayout: boolean canScroll(android.view.View,boolean,float,float,float)>(r3, 1, f0, $f19, $f21);

        if $z4 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $f3 = neg f0;

        $i4 = (int) $f3;

        $z2 = virtualinvoke r1.<android.view.View: boolean canScrollHorizontally(int)>($i4);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.SwipeDismissLayout: float DISMISS_MIN_DRAG_WIDTH_RATIO> = 0.33F;

        <com.android.internal.widget.SwipeDismissLayout: java.lang.String TAG> = "SwipeDismissLayout";

        return;
    }
}
