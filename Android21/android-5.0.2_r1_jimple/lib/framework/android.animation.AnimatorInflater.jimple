public class android.animation.AnimatorInflater extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int TOGETHER;
    private static final int SEQUENTIALLY;
    private static final int VALUE_TYPE_FLOAT;
    private static final int VALUE_TYPE_INT;
    private static final int VALUE_TYPE_PATH;
    private static final int VALUE_TYPE_COLOR;
    private static final int VALUE_TYPE_CUSTOM;
    private static final boolean DBG_ANIMATOR_INFLATER;

    public void <init>()
    {
        android.animation.AnimatorInflater r0;

        r0 := @this: android.animation.AnimatorInflater;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.animation.Animator loadAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.animation.Animator $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int)>($r1, $r2, i0);

        return $r3;
    }

    public static android.animation.Animator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        int i0;
        android.animation.Animator $r2;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float)>(r0, r1, i0, 1.0F);

        return $r2;
    }

    public static android.animation.Animator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, int, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        int i0;
        float f0;
        android.content.res.XmlResourceParser r2;
        android.animation.Animator r3;
        android.content.res.Resources$NotFoundException r4, $r7, $r14, r25;
        java.lang.Throwable r5, $r22;
        org.xmlpull.v1.XmlPullParserException $r6, r23;
        java.lang.StringBuilder $r8, $r9, $r11, $r16, $r17, $r18;
        java.lang.String $r10, $r13, $r19, $r21;
        java.io.IOException $r15, r24;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        r2 = null;

     label1:
        r2 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>(r0, r1, r2, f0);

     label2:
        if r2 == null goto label3;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r3;

     label4:
        $r6 := @caughtexception;

        r23 = $r6;

        $r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

        r4 = $r7;

        virtualinvoke r4.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);

        throw r4;

     label5:
        $r15 := @caughtexception;

        r24 = $r15;

        $r14 = new android.content.res.Resources$NotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r21);

        r25 = $r14;

        virtualinvoke r25.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r24);

        throw r25;

     label6:
        $r22 := @caughtexception;

        r5 = $r22;

     label7:
        if r2 == null goto label8;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r5;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    public static android.animation.StateListAnimator loadStateListAnimator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.animation.StateListAnimator r2;
        android.content.res.Resources$NotFoundException r3, $r8, $r15, r26;
        java.lang.Throwable r4, $r23;
        android.content.res.Resources $r5;
        android.util.AttributeSet $r6;
        java.io.IOException $r7, r25;
        java.lang.StringBuilder $r9, $r10, $r12, $r17, $r18, $r19;
        java.lang.String $r11, $r14, $r20, $r22;
        org.xmlpull.v1.XmlPullParserException $r16, r24;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label1:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        $r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, $r6);

     label2:
        if r1 == null goto label3;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r2;

     label4:
        $r16 := @caughtexception;

        r24 = $r16;

        $r15 = new android.content.res.Resources$NotFoundException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load state list animator resource ID #0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r22);

        r3 = $r15;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r24);

        throw r3;

     label5:
        $r7 := @caughtexception;

        r25 = $r7;

        $r8 = new android.content.res.Resources$NotFoundException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load state list animator resource ID #0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        r26 = $r8;

        virtualinvoke r26.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r25);

        throw r26;

     label6:
        $r23 := @caughtexception;

        r4 = $r23;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    private static android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.animation.StateListAnimator r3, $r6;
        android.animation.Animator r4;
        int[] r5, $r9;
        java.lang.String $r7, $r8;
        boolean $z0, $z1;
        android.content.res.Resources $r10;
        android.content.res.Resources$NotFoundException $r11;
        android.content.res.Resources$Theme $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        $r6 = new android.animation.StateListAnimator;

        specialinvoke $r6.<android.animation.StateListAnimator: void <init>()>();

        r3 = $r6;

     label01:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        tableswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label02;
            default: goto label12;
        };

     label02:
        return r3;

     label03:
        r4 = null;

        $r7 = "item";

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label12;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        r5 = newarray (int)[i1];

        i2 = 0;

        i3 = 0;

     label04:
        if i3 >= i1 goto label09;

        i4 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeNameResource(int)>(i3);

        if i4 != 16843213 goto label05;

        $i7 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>(i3, 0);

        r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r0, $i7);

        goto label08;

     label05:
        $i5 = i2;

        i2 = i2 + 1;

        $z1 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i3, 0);

        if $z1 == 0 goto label06;

        $i6 = i4;

        goto label07;

     label06:
        $i6 = neg i4;

     label07:
        r5[$i5] = $i6;

     label08:
        i3 = i3 + 1;

        goto label04;

     label09:
        if r4 != null goto label10;

        $r10 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)>($r10, $r12, r1, 1.0F);

     label10:
        if r4 != null goto label11;

        $r11 = new android.content.res.Resources$NotFoundException;

        specialinvoke $r11.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>("animation state item must have a valid animation");

        throw $r11;

     label11:
        $r9 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r5, i2);

        virtualinvoke r3.<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>($r9, r4);

     label12:
        goto label01;
    }

    private static void parseAnimatorFromTypeArray(android.animation.ValueAnimator, android.content.res.TypedArray, android.content.res.TypedArray, float)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1, r2;
        float f0;
        long l0, l1;
        int i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10;
        android.animation.TypeEvaluator r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        android.util.TypedValue r4, r5;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        r2 := @parameter2: android.content.res.TypedArray;

        f0 := @parameter3: float;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(1, 300);

        l0 = (long) $i4;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        l1 = (long) $i6;

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r3 = null;

        if i2 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z0 = $z7;

        r4 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(5);

        if r4 == null goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        if z1 == 0 goto label05;

        $i10 = r4.<android.util.TypedValue: int type>;

        goto label06;

     label05:
        $i10 = 0;

     label06:
        i3 = $i10;

        r5 = virtualinvoke r1.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(6);

        if r5 == null goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z2 = $z5;

        if z2 == 0 goto label09;

        $i9 = r5.<android.util.TypedValue: int type>;

        goto label10;

     label09:
        $i9 = 0;

     label10:
        i5 = $i9;

        if i2 != 2 goto label11;

        r3 = staticinvoke <android.animation.AnimatorInflater: android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray)>(r0, r1);

        goto label15;

     label11:
        if z1 == 0 goto label12;

        if i3 < 28 goto label12;

        if i3 <= 31 goto label13;

     label12:
        if z2 == 0 goto label14;

        if i5 < 28 goto label14;

        if i5 > 31 goto label14;

     label13:
        z0 = 0;

        r3 = staticinvoke <android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>();

     label14:
        staticinvoke <android.animation.AnimatorInflater: void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int)>(r0, r1, z0, z1, i3, z2, i5);

     label15:
        virtualinvoke r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        virtualinvoke r0.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if $z3 == 0 goto label16;

        $i8 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        virtualinvoke r0.<android.animation.ValueAnimator: void setRepeatCount(int)>($i8);

     label16:
        $z4 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>(4);

        if $z4 == 0 goto label17;

        $i7 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(4, 1);

        virtualinvoke r0.<android.animation.ValueAnimator: void setRepeatMode(int)>($i7);

     label17:
        if r3 == null goto label18;

        virtualinvoke r0.<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>(r3);

     label18:
        if r2 == null goto label19;

        staticinvoke <android.animation.AnimatorInflater: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float)>(r0, r2, z0, f0);

     label19:
        return;
    }

    private static android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator, android.content.res.TypedArray)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1;
        android.animation.AnimatorInflater$PathDataEvaluator r2, $r8, $r11;
        java.lang.String r3, r4, $r15, $r21;
        android.util.PathParser$PathDataNode[] r5, r6, $r9, $r13;
        java.lang.Object[] $r7, $r10, $r12;
        android.view.InflateException $r14;
        boolean $z0;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        r2 = null;

        r3 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        r4 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(6);

        r5 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>(r3);

        r6 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>(r4);

        if r5 == null goto label3;

        if r6 == null goto label1;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r5;

        $r12[1] = r6;

        virtualinvoke r0.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r12);

        $z0 = staticinvoke <android.util.PathParser: boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[])>(r5, r6);

        if $z0 != 0 goto label2;

        $r14 = new android.view.InflateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Can\'t morph from ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.view.InflateException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label1:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r5;

        virtualinvoke r0.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r10);

     label2:
        $r11 = new android.animation.AnimatorInflater$PathDataEvaluator;

        $r13 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[])>(r5);

        specialinvoke $r11.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.util.PathParser$PathDataNode[])>($r13);

        r2 = $r11;

        goto label4;

     label3:
        if r6 == null goto label4;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r6;

        virtualinvoke r0.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r7);

        $r8 = new android.animation.AnimatorInflater$PathDataEvaluator;

        $r9 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[])>(r6);

        specialinvoke $r8.<android.animation.AnimatorInflater$PathDataEvaluator: void <init>(android.util.PathParser$PathDataNode[])>($r9);

        r2 = $r8;

     label4:
        return r2;
    }

    private static void setupObjectAnimator(android.animation.ValueAnimator, android.content.res.TypedArray, boolean, float)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1;
        boolean z0;
        float f0, f1;
        android.animation.ObjectAnimator r2;
        java.lang.String r3, r4, r5, $r18, $r19, r21;
        android.graphics.Path r6;
        android.animation.PathKeyframes r7;
        android.animation.Keyframes r8, r9;
        android.animation.PropertyValuesHolder r10, r11;
        android.animation.PropertyValuesHolder[] $r12, $r13, $r14;
        java.lang.StringBuilder $r15, $r17, $r20;
        android.view.InflateException $r16;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        z0 := @parameter2: boolean;

        f0 := @parameter3: float;

        r2 = (android.animation.ObjectAnimator) r0;

        r3 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        if r3 == null goto label09;

        r4 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        r5 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        if r4 != null goto label01;

        if r5 != null goto label01;

        $r16 = new android.view.InflateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" propertyXName or propertyYName is needed for PathData");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.view.InflateException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label01:
        r6 = staticinvoke <android.util.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>(r3);

        f1 = 0.5F * f0;

        r7 = staticinvoke <android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path,float)>(r6, f1);

        if z0 == 0 goto label02;

        r8 = virtualinvoke r7.<android.animation.PathKeyframes: android.animation.Keyframes$FloatKeyframes createXFloatKeyframes()>();

        r9 = virtualinvoke r7.<android.animation.PathKeyframes: android.animation.Keyframes$FloatKeyframes createYFloatKeyframes()>();

        goto label03;

     label02:
        r8 = virtualinvoke r7.<android.animation.PathKeyframes: android.animation.Keyframes$IntKeyframes createXIntKeyframes()>();

        r9 = virtualinvoke r7.<android.animation.PathKeyframes: android.animation.Keyframes$IntKeyframes createYIntKeyframes()>();

     label03:
        r10 = null;

        r11 = null;

        if r4 == null goto label04;

        r10 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>(r4, r8);

     label04:
        if r5 == null goto label05;

        r11 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes)>(r5, r9);

     label05:
        if r10 != null goto label06;

        $r13 = newarray (android.animation.PropertyValuesHolder)[1];

        $r13[0] = r11;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r13);

        goto label08;

     label06:
        if r11 != null goto label07;

        $r14 = newarray (android.animation.PropertyValuesHolder)[1];

        $r14[0] = r10;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r14);

        goto label08;

     label07:
        $r12 = newarray (android.animation.PropertyValuesHolder)[2];

        $r12[0] = r10;

        $r12[1] = r11;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setValues(android.animation.PropertyValuesHolder[])>($r12);

     label08:
        goto label10;

     label09:
        r21 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r2.<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>(r21);

     label10:
        return;
    }

    private static void setupValues(android.animation.ValueAnimator, android.content.res.TypedArray, boolean, boolean, int, boolean, int)
    {
        android.animation.ValueAnimator r0;
        android.content.res.TypedArray r1;
        boolean z0, z1, z2;
        int i0, i1, i4, i5, i6;
        byte b2, b3;
        float f0, f1, $f2, $f3, $f4, f5;
        int[] $r2, $r3, $r4;
        float[] $r5, $r6, $r7;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.content.res.TypedArray;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        z2 := @parameter5: boolean;

        i1 := @parameter6: int;

        b2 = 5;

        b3 = 6;

        if z0 == 0 goto label10;

        if z1 == 0 goto label06;

        if i0 != 5 goto label01;

        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b2, 0.0F);

        goto label02;

     label01:
        f0 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(b2, 0.0F);

     label02:
        if z2 == 0 goto label05;

        if i1 != 5 goto label03;

        f1 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b3, 0.0F);

        goto label04;

     label03:
        f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(b3, 0.0F);

     label04:
        $r7 = newarray (float)[2];

        $r7[0] = f0;

        $r7[1] = f1;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r7);

        goto label09;

     label05:
        $r6 = newarray (float)[1];

        $r6[0] = f0;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r6);

        goto label09;

     label06:
        if i1 != 5 goto label07;

        f5 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b3, 0.0F);

        goto label08;

     label07:
        f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(b3, 0.0F);

     label08:
        $r5 = newarray (float)[1];

        $r5[0] = f5;

        virtualinvoke r0.<android.animation.ValueAnimator: void setFloatValues(float[])>($r5);

     label09:
        goto label22;

     label10:
        if z1 == 0 goto label18;

        if i0 != 5 goto label11;

        $f4 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b2, 0.0F);

        i4 = (int) $f4;

        goto label13;

     label11:
        if i0 < 28 goto label12;

        if i0 > 31 goto label12;

        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(b2, 0);

        goto label13;

     label12:
        i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(b2, 0);

     label13:
        if z2 == 0 goto label17;

        if i1 != 5 goto label14;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b3, 0.0F);

        i5 = (int) $f3;

        goto label16;

     label14:
        if i1 < 28 goto label15;

        if i1 > 31 goto label15;

        i5 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(b3, 0);

        goto label16;

     label15:
        i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(b3, 0);

     label16:
        $r4 = newarray (int)[2];

        $r4[0] = i4;

        $r4[1] = i5;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r4);

        goto label22;

     label17:
        $r3 = newarray (int)[1];

        $r3[0] = i4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r3);

        goto label22;

     label18:
        if z2 == 0 goto label22;

        if i1 != 5 goto label19;

        $f2 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(b3, 0.0F);

        i6 = (int) $f2;

        goto label21;

     label19:
        if i1 < 28 goto label20;

        if i1 > 31 goto label20;

        i6 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(b3, 0);

        goto label21;

     label20:
        i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(b3, 0);

     label21:
        $r2 = newarray (int)[1];

        $r2[0] = i6;

        virtualinvoke r0.<android.animation.ValueAnimator: void setIntValues(int[])>($r2);

     label22:
        return;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        org.xmlpull.v1.XmlPullParser r2;
        float f0;
        android.util.AttributeSet $r3;
        android.animation.Animator $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        f0 := @parameter3: float;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        $r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>(r0, r1, r2, $r3, null, 0, f0);

        return $r4;
    }

    private static android.animation.Animator createAnimatorFromXml(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.animation.AnimatorSet, int, float) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.animation.AnimatorSet r4, $r17, $r20;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        float f0;
        android.animation.Animator r5, r9;
        java.util.ArrayList r6, $r19;
        java.lang.String r7, $r13, $r15;
        android.content.res.TypedArray r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r10;
        java.lang.StringBuilder $r11, $r14, $r16;
        java.lang.RuntimeException $r12;
        int[] $r18, $r22;
        android.animation.Animator[] r23;
        java.util.Iterator r24;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: android.animation.AnimatorSet;

        i0 := @parameter5: int;

        f0 := @parameter6: float;

        r5 = null;

        r6 = null;

        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i5;

        if $i5 != 3 goto label02;

        $i7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i7 <= i2 goto label12;

     label02:
        if i1 == 1 goto label12;

        if i1 == 2 goto label03;

        goto label01;

     label03:
        r7 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("objectAnimator");

        if $z1 == 0 goto label04;

        r5 = staticinvoke <android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float)>(r0, r1, r3, f0);

        goto label09;

     label04:
        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("animator");

        if $z3 == 0 goto label05;

        r5 = staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float)>(r0, r1, r3, null, f0);

        goto label09;

     label05:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z2 == 0 goto label08;

        $r17 = new android.animation.AnimatorSet;

        specialinvoke $r17.<android.animation.AnimatorSet: void <init>()>();

        r5 = $r17;

        if r1 == null goto label06;

        $r22 = <com.android.internal.R$styleable: int[] AnimatorSet>;

        r8 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r22, 0, 0);

        goto label07;

     label06:
        $r18 = <com.android.internal.R$styleable: int[] AnimatorSet>;

        r8 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r18);

     label07:
        i3 = virtualinvoke r8.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $r20 = (android.animation.AnimatorSet) r5;

        staticinvoke <android.animation.AnimatorInflater: android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)>(r0, r1, r2, r3, $r20, i3, f0);

        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        goto label09;

     label08:
        $r12 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animator name: ");

        $r13 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label09:
        if r4 == null goto label11;

        if r6 != null goto label10;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r6 = $r19;

     label10:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label11:
        goto label01;

     label12:
        if r4 == null goto label16;

        if r6 == null goto label16;

        $i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        r23 = newarray (android.animation.Animator)[$i4];

        i8 = 0;

        r24 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r10 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r9 = (android.animation.Animator) $r10;

        $i6 = i8;

        i8 = i8 + 1;

        r23[$i6] = r9;

        goto label13;

     label14:
        if i0 != 0 goto label15;

        virtualinvoke r4.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r23);

        goto label16;

     label15:
        virtualinvoke r4.<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>(r23);

     label16:
        return r5;
    }

    private static android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        float f0;
        android.animation.ObjectAnimator r3, $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        f0 := @parameter3: float;

        $r4 = new android.animation.ObjectAnimator;

        specialinvoke $r4.<android.animation.ObjectAnimator: void <init>()>();

        r3 = $r4;

        staticinvoke <android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float)>(r0, r1, r2, r3, f0);

        return r3;
    }

    private static android.animation.ValueAnimator loadAnimator(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, android.animation.ValueAnimator, float) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        android.animation.ValueAnimator r3, $r7;
        float f0;
        android.content.res.TypedArray r4, r11;
        int i0;
        int[] $r5, $r8, $r9, $r10;
        android.view.animation.Interpolator $r6;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.animation.ValueAnimator;

        f0 := @parameter4: float;

        r4 = null;

        if r1 == null goto label1;

        $r10 = <com.android.internal.R$styleable: int[] Animator>;

        r11 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r10, 0, 0);

        goto label2;

     label1:
        $r5 = <com.android.internal.R$styleable: int[] Animator>;

        r11 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r5);

     label2:
        if r3 == null goto label4;

        if r1 == null goto label3;

        $r9 = <com.android.internal.R$styleable: int[] PropertyAnimator>;

        r4 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r9, 0, 0);

        goto label4;

     label3:
        $r8 = <com.android.internal.R$styleable: int[] PropertyAnimator>;

        r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

     label4:
        if r3 != null goto label5;

        $r7 = new android.animation.ValueAnimator;

        specialinvoke $r7.<android.animation.ValueAnimator: void <init>()>();

        r3 = $r7;

     label5:
        staticinvoke <android.animation.AnimatorInflater: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float)>(r3, r11, r4, f0);

        i0 = virtualinvoke r11.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 <= 0 goto label6;

        $r6 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int)>(r0, r1, i0);

        virtualinvoke r3.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

     label6:
        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

        if r4 == null goto label7;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

     label7:
        return r3;
    }

    public static void <clinit>()
    {
        <android.animation.AnimatorInflater: boolean DBG_ANIMATOR_INFLATER> = 0;

        <android.animation.AnimatorInflater: int VALUE_TYPE_CUSTOM> = 5;

        <android.animation.AnimatorInflater: int VALUE_TYPE_COLOR> = 4;

        <android.animation.AnimatorInflater: int VALUE_TYPE_PATH> = 2;

        <android.animation.AnimatorInflater: int VALUE_TYPE_INT> = 1;

        <android.animation.AnimatorInflater: int VALUE_TYPE_FLOAT> = 0;

        <android.animation.AnimatorInflater: int SEQUENTIALLY> = 1;

        <android.animation.AnimatorInflater: int TOGETHER> = 0;

        <android.animation.AnimatorInflater: java.lang.String TAG> = "AnimatorInflater";

        return;
    }
}
