public class android.hardware.camera2.dispatch.InvokeDispatcher extends java.lang.Object implements android.hardware.camera2.dispatch.Dispatchable
{
    private static final java.lang.String TAG;
    private final java.lang.Object mTarget;

    public void <init>(java.lang.Object)
    {
        android.hardware.camera2.dispatch.InvokeDispatcher r0;
        java.lang.Object r1, $r2;

        r0 := @this: android.hardware.camera2.dispatch.InvokeDispatcher;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "target must not be null");

        r0.<android.hardware.camera2.dispatch.InvokeDispatcher: java.lang.Object mTarget> = $r2;

        return;
    }

    public java.lang.Object dispatch(java.lang.reflect.Method, java.lang.Object[])
    {
        android.hardware.camera2.dispatch.InvokeDispatcher r0;
        java.lang.reflect.Method r1;
        java.lang.Object[] r2;
        java.lang.reflect.InvocationTargetException r3, $r12;
        java.lang.Throwable r4;
        java.lang.Object $r5, $r6;
        java.lang.IllegalAccessException $r7, r18;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r15, $r17;
        java.lang.String $r11, $r16;
        java.lang.IllegalArgumentException $r14, r19;

        r0 := @this: android.hardware.camera2.dispatch.InvokeDispatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.Object[];

     label1:
        $r5 = r0.<android.hardware.camera2.dispatch.InvokeDispatcher: java.lang.Object mTarget>;

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, r2);

     label2:
        return $r6;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

        r4 = virtualinvoke r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        staticinvoke <android.hardware.camera2.utils.UncheckedThrow: void throwAnyException(java.lang.Throwable)>(r4);

        goto label6;

     label4:
        $r7 := @caughtexception;

        r18 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException while invoking ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("InvocationSink", $r11, r18);

        goto label6;

     label5:
        $r14 := @caughtexception;

        r19 = $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalArgumentException while invoking ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("InvocationSink", $r16, r19);

     label6:
        return null;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.dispatch.InvokeDispatcher: java.lang.String TAG> = "InvocationSink";

        return;
    }
}
