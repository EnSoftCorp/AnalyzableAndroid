public class android.renderscript.Type$Builder extends java.lang.Object
{
    android.renderscript.RenderScript mRS;
    int mDimX;
    int mDimY;
    int mDimZ;
    boolean mDimMipmaps;
    boolean mDimFaces;
    int mYuv;
    android.renderscript.Element mElement;

    public void <init>(android.renderscript.RenderScript, android.renderscript.Element)
    {
        android.renderscript.Type$Builder r0;
        android.renderscript.RenderScript r1;
        android.renderscript.Element r2;

        r0 := @this: android.renderscript.Type$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        r2 := @parameter1: android.renderscript.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Type$Builder: int mDimX> = 1;

        virtualinvoke r2.<android.renderscript.Element: void checkValid()>();

        r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement> = r2;

        return;
    }

    public android.renderscript.Type$Builder setX(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension X are not valid.");

        throw $r1;

     label1:
        r0.<android.renderscript.Type$Builder: int mDimX> = i0;

        return r0;
    }

    public android.renderscript.Type$Builder setY(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension Y are not valid.");

        throw $r1;

     label1:
        r0.<android.renderscript.Type$Builder: int mDimY> = i0;

        return r0;
    }

    public android.renderscript.Type$Builder setZ(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Values of less than 1 for Dimension Z are not valid.");

        throw $r1;

     label1:
        r0.<android.renderscript.Type$Builder: int mDimZ> = i0;

        return r0;
    }

    public android.renderscript.Type$Builder setMipmaps(boolean)
    {
        android.renderscript.Type$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.Type$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.Type$Builder: boolean mDimMipmaps> = z0;

        return r0;
    }

    public android.renderscript.Type$Builder setFaces(boolean)
    {
        android.renderscript.Type$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.Type$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.Type$Builder: boolean mDimFaces> = z0;

        return r0;
    }

    public android.renderscript.Type$Builder setYuvFormat(int)
    {
        android.renderscript.Type$Builder r0;
        int i0;
        android.renderscript.RSIllegalArgumentException $r1;

        r0 := @this: android.renderscript.Type$Builder;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 35: goto label1;
            case 842094169: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Only ImageFormat.NV21, .YV12, and .YUV_420_888 are supported..");

        throw $r1;

     label3:
        r0.<android.renderscript.Type$Builder: int mYuv> = i0;

        return r0;
    }

    public android.renderscript.Type create()
    {
        android.renderscript.Type$Builder r0;
        long l0, $l4;
        android.renderscript.Type r1, $r5;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.renderscript.RenderScript $r2, $r4, $r7;
        android.renderscript.Element $r3, $r6;
        android.renderscript.RSInvalidStateException $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.renderscript.Type$Builder;

        $i1 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        if $i1 <= 0 goto label3;

        $i17 = r0.<android.renderscript.Type$Builder: int mDimX>;

        if $i17 < 1 goto label1;

        $i16 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i16 >= 1 goto label2;

     label1:
        $r11 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r11.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Both X and Y dimension required when Z is present.");

        throw $r11;

     label2:
        $z7 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z7 == 0 goto label3;

        $r12 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r12.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Cube maps not supported with 3D types.");

        throw $r12;

     label3:
        $i2 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i2 <= 0 goto label4;

        $i14 = r0.<android.renderscript.Type$Builder: int mDimX>;

        if $i14 >= 1 goto label4;

        $r9 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r9.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("X dimension required when Y is present.");

        throw $r9;

     label4:
        $z0 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z0 == 0 goto label5;

        $i15 = r0.<android.renderscript.Type$Builder: int mDimY>;

        if $i15 >= 1 goto label5;

        $r10 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r10.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Cube maps require 2D Types.");

        throw $r10;

     label5:
        $i3 = r0.<android.renderscript.Type$Builder: int mYuv>;

        if $i3 == 0 goto label7;

        $i13 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        if $i13 != 0 goto label6;

        $z6 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        if $z6 != 0 goto label6;

        $z5 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        if $z5 == 0 goto label7;

     label6:
        $r8 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r8.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("YUV only supports basic 2D.");

        throw $r8;

     label7:
        $r4 = r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS>;

        $r3 = r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement>;

        $r2 = r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS>;

        $l4 = virtualinvoke $r3.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>($r2);

        $i7 = r0.<android.renderscript.Type$Builder: int mDimX>;

        $i8 = r0.<android.renderscript.Type$Builder: int mDimY>;

        $i6 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        $z2 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        $z1 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        $i5 = r0.<android.renderscript.Type$Builder: int mYuv>;

        l0 = virtualinvoke $r4.<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>($l4, $i7, $i8, $i6, $z2, $z1, $i5);

        $r5 = new android.renderscript.Type;

        $r7 = r0.<android.renderscript.Type$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r5.<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>(l0, $r7);

        r1 = $r5;

        $r6 = r0.<android.renderscript.Type$Builder: android.renderscript.Element mElement>;

        r1.<android.renderscript.Type: android.renderscript.Element mElement> = $r6;

        $i10 = r0.<android.renderscript.Type$Builder: int mDimX>;

        r1.<android.renderscript.Type: int mDimX> = $i10;

        $i9 = r0.<android.renderscript.Type$Builder: int mDimY>;

        r1.<android.renderscript.Type: int mDimY> = $i9;

        $i11 = r0.<android.renderscript.Type$Builder: int mDimZ>;

        r1.<android.renderscript.Type: int mDimZ> = $i11;

        $z3 = r0.<android.renderscript.Type$Builder: boolean mDimMipmaps>;

        r1.<android.renderscript.Type: boolean mDimMipmaps> = $z3;

        $z4 = r0.<android.renderscript.Type$Builder: boolean mDimFaces>;

        r1.<android.renderscript.Type: boolean mDimFaces> = $z4;

        $i12 = r0.<android.renderscript.Type$Builder: int mYuv>;

        r1.<android.renderscript.Type: int mDimYuv> = $i12;

        virtualinvoke r1.<android.renderscript.Type: void calcElementCount()>();

        return r1;
    }
}
