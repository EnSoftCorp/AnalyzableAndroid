public final class android.graphics.pdf.PdfRenderer$Page extends java.lang.Object implements java.lang.AutoCloseable
{
    private final dalvik.system.CloseGuard mCloseGuard;
    public static final int RENDER_MODE_FOR_DISPLAY;
    public static final int RENDER_MODE_FOR_PRINT;
    private final int mIndex;
    private final int mWidth;
    private final int mHeight;
    private long mNativePage;
    final android.graphics.pdf.PdfRenderer this$0;

    private void <init>(android.graphics.pdf.PdfRenderer, int)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        android.graphics.pdf.PdfRenderer r1;
        int i0, $i3, $i4;
        android.graphics.Point r2;
        dalvik.system.CloseGuard $r3, $r4;
        long $l1, $l2;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r1 := @parameter0: android.graphics.pdf.PdfRenderer;

        i0 := @parameter1: int;

        r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard> = $r3;

        r2 = staticinvoke <android.graphics.pdf.PdfRenderer: android.graphics.Point access$100(android.graphics.pdf.PdfRenderer)>(r1);

        $l1 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$200(android.graphics.pdf.PdfRenderer)>(r1);

        $l2 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$300(long,int,android.graphics.Point)>($l1, i0, r2);

        r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage> = $l2;

        r0.<android.graphics.pdf.PdfRenderer$Page: int mIndex> = i0;

        $i3 = r2.<android.graphics.Point: int x>;

        r0.<android.graphics.pdf.PdfRenderer$Page: int mWidth> = $i3;

        $i4 = r2.<android.graphics.Point: int y>;

        r0.<android.graphics.pdf.PdfRenderer$Page: int mHeight> = $i4;

        $r4 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    public int getIndex()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mIndex>;

        return $i0;
    }

    public int getWidth()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        int $i0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $i0 = r0.<android.graphics.pdf.PdfRenderer$Page: int mHeight>;

        return $i0;
    }

    public void render(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Matrix, int)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2;
        android.graphics.Matrix r3;
        int i0, i1, i2, i3, i4, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        long l5, $l8, $l9, $l10, $l11;
        android.graphics.Bitmap$Config $r4, $r5;
        android.graphics.pdf.PdfRenderer $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Matrix;

        i0 := @parameter3: int;

        $r4 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        if $r4 == $r5 goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported pixel format");

        throw $r11;

     label01:
        if r2 == null goto label03;

        $i14 = r2.<android.graphics.Rect: int left>;

        if $i14 < 0 goto label02;

        $i16 = r2.<android.graphics.Rect: int top>;

        if $i16 < 0 goto label02;

        $i15 = r2.<android.graphics.Rect: int right>;

        $i18 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i15 > $i18 goto label02;

        $i17 = r2.<android.graphics.Rect: int bottom>;

        $i19 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i17 <= $i19 goto label03;

     label02:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("destBounds not in destination");

        throw $r10;

     label03:
        if r3 == null goto label04;

        $z0 = virtualinvoke r3.<android.graphics.Matrix: boolean isAffine()>();

        if $z0 != 0 goto label04;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("transform not affine");

        throw $r9;

     label04:
        if i0 == 2 goto label05;

        if i0 == 1 goto label05;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported render mode");

        throw $r7;

     label05:
        if i0 != 2 goto label06;

        if i0 != 1 goto label06;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only single render mode supported");

        throw $r8;

     label06:
        if r2 == null goto label07;

        $i12 = r2.<android.graphics.Rect: int left>;

        goto label08;

     label07:
        $i12 = 0;

     label08:
        i1 = $i12;

        if r2 == null goto label09;

        $i13 = r2.<android.graphics.Rect: int top>;

        goto label10;

     label09:
        $i13 = 0;

     label10:
        i2 = $i13;

        if r2 == null goto label11;

        $i6 = r2.<android.graphics.Rect: int right>;

        goto label12;

     label11:
        $i6 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

     label12:
        i3 = $i6;

        if r2 == null goto label13;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        goto label14;

     label13:
        $i7 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

     label14:
        i4 = $i7;

        if r3 == null goto label15;

        $l10 = r3.<android.graphics.Matrix: long native_instance>;

        goto label16;

     label15:
        $l10 = 0L;

     label16:
        l5 = $l10;

        $r6 = r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0>;

        $l9 = staticinvoke <android.graphics.pdf.PdfRenderer: long access$200(android.graphics.pdf.PdfRenderer)>($r6);

        $l11 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $l8 = r1.<android.graphics.Bitmap: long mNativeBitmap>;

        staticinvoke <android.graphics.pdf.PdfRenderer: void access$400(long,long,long,int,int,int,int,long,int)>($l9, $l11, $l8, i1, i2, i3, i4, l5, i0);

        return;
    }

    public void close()
    {
        android.graphics.pdf.PdfRenderer$Page r0;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void throwIfClosed()>();

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void doClose()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        java.lang.Throwable r1, $r3;
        dalvik.system.CloseGuard $r2;
        long $l0;
        byte $b1;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

     label1:
        $r2 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void warnIfOpen()>();

        $l0 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void doClose()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void doClose()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        long $l0;
        dalvik.system.CloseGuard $r1;
        android.graphics.pdf.PdfRenderer $r2;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $l0 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        staticinvoke <android.graphics.pdf.PdfRenderer: void access$500(long)>($l0);

        r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage> = 0L;

        $r1 = r0.<android.graphics.pdf.PdfRenderer$Page: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r1.<dalvik.system.CloseGuard: void close()>();

        $r2 = r0.<android.graphics.pdf.PdfRenderer$Page: android.graphics.pdf.PdfRenderer this$0>;

        staticinvoke <android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer$Page access$602(android.graphics.pdf.PdfRenderer,android.graphics.pdf.PdfRenderer$Page)>($r2, null);

        return;
    }

    private void throwIfClosed()
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        long $l0;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        $l0 = r0.<android.graphics.pdf.PdfRenderer$Page: long mNativePage>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already closed");

        throw $r1;

     label1:
        return;
    }

    void <init>(android.graphics.pdf.PdfRenderer, int, android.graphics.pdf.PdfRenderer$1)
    {
        android.graphics.pdf.PdfRenderer$Page r0;
        android.graphics.pdf.PdfRenderer r1;
        int i0;
        android.graphics.pdf.PdfRenderer$1 r2;

        r0 := @this: android.graphics.pdf.PdfRenderer$Page;

        r1 := @parameter0: android.graphics.pdf.PdfRenderer;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.pdf.PdfRenderer$1;

        specialinvoke r0.<android.graphics.pdf.PdfRenderer$Page: void <init>(android.graphics.pdf.PdfRenderer,int)>(r1, i0);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.pdf.PdfRenderer$Page: int RENDER_MODE_FOR_PRINT> = 2;

        <android.graphics.pdf.PdfRenderer$Page: int RENDER_MODE_FOR_DISPLAY> = 1;

        return;
    }
}
