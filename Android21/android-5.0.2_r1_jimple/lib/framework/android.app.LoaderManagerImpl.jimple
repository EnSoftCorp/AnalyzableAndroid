class android.app.LoaderManagerImpl extends android.app.LoaderManager
{
    static final java.lang.String TAG;
    static boolean DEBUG;
    final android.util.SparseArray mLoaders;
    final android.util.SparseArray mInactiveLoaders;
    final java.lang.String mWho;
    android.app.Activity mActivity;
    boolean mStarted;
    boolean mRetaining;
    boolean mRetainingStarted;
    boolean mCreatingLoader;

    void <init>(java.lang.String, android.app.Activity, boolean)
    {
        android.app.LoaderManagerImpl r0;
        java.lang.String r1;
        android.app.Activity r2;
        boolean z0;
        android.util.SparseArray $r3, $r4;

        r0 := @this: android.app.LoaderManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.Activity;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.app.LoaderManager: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(0);

        r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>(int)>(0);

        r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders> = $r4;

        r0.<android.app.LoaderManagerImpl: java.lang.String mWho> = r1;

        r0.<android.app.LoaderManagerImpl: android.app.Activity mActivity> = r2;

        r0.<android.app.LoaderManagerImpl: boolean mStarted> = z0;

        return;
    }

    void updateActivity(android.app.Activity)
    {
        android.app.LoaderManagerImpl r0;
        android.app.Activity r1;

        r0 := @this: android.app.LoaderManagerImpl;

        r1 := @parameter0: android.app.Activity;

        r0.<android.app.LoaderManagerImpl: android.app.Activity mActivity> = r1;

        return;
    }

    private android.app.LoaderManagerImpl$LoaderInfo createLoader(int, android.os.Bundle, android.app.LoaderManager$LoaderCallbacks)
    {
        android.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        android.app.LoaderManager$LoaderCallbacks r2;
        android.app.LoaderManagerImpl$LoaderInfo r3, $r5;
        android.content.Loader r4;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.app.LoaderManager$LoaderCallbacks;

        $r5 = new android.app.LoaderManagerImpl$LoaderInfo;

        specialinvoke $r5.<android.app.LoaderManagerImpl$LoaderInfo: void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(r0, i0, r1, r2);

        r3 = $r5;

        r4 = interfaceinvoke r2.<android.app.LoaderManager$LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>(i0, r1);

        r3.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader> = r4;

        return r3;
    }

    private android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int, android.os.Bundle, android.app.LoaderManager$LoaderCallbacks)
    {
        android.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        android.app.LoaderManager$LoaderCallbacks r2;
        android.app.LoaderManagerImpl$LoaderInfo r3, r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.app.LoaderManager$LoaderCallbacks;

     label1:
        r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader> = 1;

        r3 = specialinvoke r0.<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(i0, r1, r2);

        virtualinvoke r0.<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)>(r3);

        r4 = r3;

     label2:
        r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader> = 0;

        return r4;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

     label4:
        r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader> = 0;

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void installLoader(android.app.LoaderManagerImpl$LoaderInfo)
    {
        android.app.LoaderManagerImpl r0;
        android.app.LoaderManagerImpl$LoaderInfo r1;
        int $i0;
        android.util.SparseArray $r2;
        boolean $z0;

        r0 := @this: android.app.LoaderManagerImpl;

        r1 := @parameter0: android.app.LoaderManagerImpl$LoaderInfo;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = r1.<android.app.LoaderManagerImpl$LoaderInfo: int mId>;

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r1);

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.app.LoaderManagerImpl$LoaderInfo: void start()>();

     label1:
        return;
    }

    public android.content.Loader initLoader(int, android.os.Bundle, android.app.LoaderManager$LoaderCallbacks)
    {
        android.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        android.app.LoaderManager$LoaderCallbacks r2;
        android.app.LoaderManagerImpl$LoaderInfo r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r7;
        android.content.Loader $r6, $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22;
        java.lang.String $r11, $r15, $r20;
        java.lang.IllegalStateException $r23;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.app.LoaderManager$LoaderCallbacks;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader>;

        if $z0 == 0 goto label1;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r23;

     label1:
        $r4 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.app.LoaderManagerImpl$LoaderInfo) $r5;

        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initLoader in ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r20);

     label2:
        if r3 != null goto label3;

        r3 = specialinvoke r0.<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(i0, r1, r2);

        $z5 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z5 == 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Created new loader ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r15);

        goto label5;

     label3:
        $z2 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Re-using existing loader ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r11);

     label4:
        r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManager$LoaderCallbacks mCallbacks> = r2;

     label5:
        $z3 = r3.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z3 == 0 goto label6;

        $z4 = r0.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z4 == 0 goto label6;

        $r8 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        $r7 = r3.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.Object mData>;

        virtualinvoke r3.<android.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>($r8, $r7);

     label6:
        $r6 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        return $r6;
    }

    public android.content.Loader restartLoader(int, android.os.Bundle, android.app.LoaderManager$LoaderCallbacks)
    {
        android.app.LoaderManagerImpl r0;
        int i0;
        android.os.Bundle r1;
        android.app.LoaderManager$LoaderCallbacks r2;
        android.app.LoaderManagerImpl$LoaderInfo r3, r4, $r16, $r17, $r18, $r21, $r25, r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.util.SparseArray $r5, $r8, $r12, $r26, $r28;
        java.lang.Object $r6, $r9;
        android.content.Loader $r7, $r10, $r19, $r27;
        java.lang.StringBuilder $r11, $r13, $r15, $r20, $r22, $r24, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37;
        java.lang.String $r14, $r23, $r33, $r39;
        java.lang.IllegalStateException $r38;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.app.LoaderManager$LoaderCallbacks;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader>;

        if $z0 == 0 goto label01;

        $r38 = new java.lang.IllegalStateException;

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r38;

     label01:
        $r5 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.app.LoaderManagerImpl$LoaderInfo) $r6;

        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label02;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restartLoader in ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r39);

     label02:
        if r3 == null goto label13;

        $r8 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.app.LoaderManagerImpl$LoaderInfo) $r9;

        if r4 == null goto label11;

        $z3 = r3.<android.app.LoaderManagerImpl$LoaderInfo: boolean mHaveData>;

        if $z3 == 0 goto label04;

        $z9 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z9 == 0 goto label03;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Removing last inactive loader: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r33);

     label03:
        r4.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData> = 0;

        virtualinvoke r4.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        $r27 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r27.<android.content.Loader: void abandon()>();

        $r28 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        virtualinvoke $r28.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

        goto label13;

     label04:
        $z5 = r3.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z5 != 0 goto label06;

        $z8 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z8 == 0 goto label05;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Current loader is stopped; replacing");

     label05:
        $r26 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        virtualinvoke $r26.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        virtualinvoke r3.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        goto label13;

     label06:
        $z4 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z4 == 0 goto label07;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Current loader is running; attempting to cancel");

     label07:
        virtualinvoke r3.<android.app.LoaderManagerImpl$LoaderInfo: void cancel()>();

        $r16 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if $r16 == null goto label09;

        $z7 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z7 == 0 goto label08;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Removing pending loader: ");

        $r25 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r23);

     label08:
        $r21 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        virtualinvoke $r21.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader> = null;

     label09:
        $z6 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z6 == 0 goto label10;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", "  Enqueuing as new pending loader");

     label10:
        $r18 = specialinvoke r0.<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(i0, r1, r2);

        r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader> = $r18;

        $r17 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        $r19 = $r17.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        return $r19;

     label11:
        $z2 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Making last loader inactive: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r14);

     label12:
        $r10 = r3.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        virtualinvoke $r10.<android.content.Loader: void abandon()>();

        $r12 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

     label13:
        r40 = specialinvoke r0.<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(i0, r1, r2);

        $r7 = r40.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        return $r7;
    }

    public void destroyLoader(int)
    {
        android.app.LoaderManagerImpl r0;
        int i0, i1, i3;
        android.app.LoaderManagerImpl$LoaderInfo r1, r20;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r2, $r3, $r7, $r9, $r10, $r11;
        android.app.Activity $r4, $r5;
        android.app.FragmentManagerImpl $r6;
        java.lang.Object $r8, $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17;
        java.lang.String $r18;
        java.lang.IllegalStateException $r19;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader>;

        if $z0 == 0 goto label1;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r19;

     label1:
        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroyLoader in ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r18);

     label2:
        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label3;

        $r9 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r12 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.app.LoaderManagerImpl$LoaderInfo) $r12;

        $r11 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        virtualinvoke $r11.<android.util.SparseArray: void removeAt(int)>(i1);

        virtualinvoke r1.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

     label3:
        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        i3 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i3 < 0 goto label4;

        $r7 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r20 = (android.app.LoaderManagerImpl$LoaderInfo) $r8;

        $r10 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        virtualinvoke $r10.<android.util.SparseArray: void removeAt(int)>(i3);

        virtualinvoke r20.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

     label4:
        $r4 = r0.<android.app.LoaderManagerImpl: android.app.Activity mActivity>;

        if $r4 == null goto label5;

        $z2 = virtualinvoke r0.<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>();

        if $z2 != 0 goto label5;

        $r5 = r0.<android.app.LoaderManagerImpl: android.app.Activity mActivity>;

        $r6 = $r5.<android.app.Activity: android.app.FragmentManagerImpl mFragments>;

        virtualinvoke $r6.<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label5:
        return;
    }

    public android.content.Loader getLoader(int)
    {
        android.app.LoaderManagerImpl r0;
        int i0;
        android.app.LoaderManagerImpl$LoaderInfo r1, $r4, $r6;
        boolean $z0;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.content.Loader $r5, $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.app.LoaderManagerImpl;

        i0 := @parameter0: int;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mCreatingLoader>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r8;

     label1:
        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.app.LoaderManagerImpl$LoaderInfo) $r3;

        if r1 == null goto label3;

        $r4 = r1.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        if $r4 == null goto label2;

        $r6 = r1.<android.app.LoaderManagerImpl$LoaderInfo: android.app.LoaderManagerImpl$LoaderInfo mPendingLoader>;

        $r7 = $r6.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        return $r7;

     label2:
        $r5 = r1.<android.app.LoaderManagerImpl$LoaderInfo: android.content.Loader mLoader>;

        return $r5;

     label3:
        return null;
    }

    void doStart()
    {
        android.app.LoaderManagerImpl r0;
        java.lang.RuntimeException r1, $r6;
        boolean $z0, $z1;
        android.util.SparseArray $r2, $r3;
        int $i0, i3;
        java.lang.Object $r4;
        android.app.LoaderManagerImpl$LoaderInfo $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r11, $r14;

        r0 := @this: android.app.LoaderManagerImpl;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting in ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r14);

     label1:
        $z1 = r0.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z1 == 0 goto label2;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        r1 = $r6;

        virtualinvoke r1.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called doStart when already started: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LoaderManager", $r11, r1);

        return;

     label2:
        r0.<android.app.LoaderManagerImpl: boolean mStarted> = 1;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label3:
        if i3 < 0 goto label4;

        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (android.app.LoaderManagerImpl$LoaderInfo) $r4;

        virtualinvoke $r5.<android.app.LoaderManagerImpl$LoaderInfo: void start()>();

        i3 = i3 + -1;

        goto label3;

     label4:
        return;
    }

    void doStop()
    {
        android.app.LoaderManagerImpl r0;
        java.lang.RuntimeException r1, $r6;
        boolean $z0, $z1;
        android.util.SparseArray $r2, $r3;
        int $i0, i3;
        java.lang.Object $r4;
        android.app.LoaderManagerImpl$LoaderInfo $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r11, $r14;

        r0 := @this: android.app.LoaderManagerImpl;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping in ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r14);

     label1:
        $z1 = r0.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z1 != 0 goto label2;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        r1 = $r6;

        virtualinvoke r1.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called doStop when not started: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LoaderManager", $r11, r1);

        return;

     label2:
        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label3:
        if i3 < 0 goto label4;

        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (android.app.LoaderManagerImpl$LoaderInfo) $r4;

        virtualinvoke $r5.<android.app.LoaderManagerImpl$LoaderInfo: void stop()>();

        i3 = i3 + -1;

        goto label3;

     label4:
        r0.<android.app.LoaderManagerImpl: boolean mStarted> = 0;

        return;
    }

    void doRetain()
    {
        android.app.LoaderManagerImpl r0;
        java.lang.RuntimeException r1, $r6;
        boolean $z0, $z1;
        android.util.SparseArray $r2, $r3;
        int $i0, i3;
        java.lang.Object $r4;
        android.app.LoaderManagerImpl$LoaderInfo $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r11, $r14;

        r0 := @this: android.app.LoaderManagerImpl;

        $z0 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retaining in ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r14);

     label1:
        $z1 = r0.<android.app.LoaderManagerImpl: boolean mStarted>;

        if $z1 != 0 goto label2;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        r1 = $r6;

        virtualinvoke r1.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called doRetain when not started: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LoaderManager", $r11, r1);

        return;

     label2:
        r0.<android.app.LoaderManagerImpl: boolean mRetaining> = 1;

        r0.<android.app.LoaderManagerImpl: boolean mStarted> = 0;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i3 = $i0 - 1;

     label3:
        if i3 < 0 goto label4;

        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r5 = (android.app.LoaderManagerImpl$LoaderInfo) $r4;

        virtualinvoke $r5.<android.app.LoaderManagerImpl$LoaderInfo: void retain()>();

        i3 = i3 + -1;

        goto label3;

     label4:
        return;
    }

    void finishRetain()
    {
        android.app.LoaderManagerImpl r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;
        android.app.LoaderManagerImpl$LoaderInfo $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.app.LoaderManagerImpl;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z0 == 0 goto label3;

        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished Retaining in ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r8);

     label1:
        r0.<android.app.LoaderManagerImpl: boolean mRetaining> = 0;

        $r1 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label3;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r4 = (android.app.LoaderManagerImpl$LoaderInfo) $r3;

        virtualinvoke $r4.<android.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>();

        i0 = i0 + -1;

        goto label2;

     label3:
        return;
    }

    void doReportNextStart()
    {
        android.app.LoaderManagerImpl r0;
        int i0, $i1;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;
        android.app.LoaderManagerImpl$LoaderInfo $r4;

        r0 := @this: android.app.LoaderManagerImpl;

        $r1 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r4 = (android.app.LoaderManagerImpl$LoaderInfo) $r3;

        $r4.<android.app.LoaderManagerImpl$LoaderInfo: boolean mReportNextStart> = 1;

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    void doReportStart()
    {
        android.app.LoaderManagerImpl r0;
        int i0, $i1;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;
        android.app.LoaderManagerImpl$LoaderInfo $r4;

        r0 := @this: android.app.LoaderManagerImpl;

        $r1 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r4 = (android.app.LoaderManagerImpl$LoaderInfo) $r3;

        virtualinvoke $r4.<android.app.LoaderManagerImpl$LoaderInfo: void reportStart()>();

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    void doDestroy()
    {
        android.app.LoaderManagerImpl r0;
        int i0, $i1, $i3, i5;
        boolean $z0, $z1, $z2;
        android.util.SparseArray $r1, $r2, $r3, $r10, $r11, $r13;
        java.lang.Object $r4, $r12;
        android.app.LoaderManagerImpl$LoaderInfo $r5, $r15;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r16, $r18;
        java.lang.String $r9, $r17;

        r0 := @this: android.app.LoaderManagerImpl;

        $z0 = r0.<android.app.LoaderManagerImpl: boolean mRetaining>;

        if $z0 != 0 goto label4;

        $z2 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying Active in ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r17);

     label1:
        $r10 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i3 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        i0 = $i3 - 1;

     label2:
        if i0 < 0 goto label3;

        $r13 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r12 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r15 = (android.app.LoaderManagerImpl$LoaderInfo) $r12;

        virtualinvoke $r15.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        i0 = i0 + -1;

        goto label2;

     label3:
        $r11 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        virtualinvoke $r11.<android.util.SparseArray: void clear()>();

     label4:
        $z1 = <android.app.LoaderManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destroying Inactive in ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r9);

     label5:
        $r1 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        i5 = $i1 - 1;

     label6:
        if i5 < 0 goto label7;

        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r5 = (android.app.LoaderManagerImpl$LoaderInfo) $r4;

        virtualinvoke $r5.<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>();

        i5 = i5 + -1;

        goto label6;

     label7:
        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        return;
    }

    public java.lang.String toString()
    {
        android.app.LoaderManagerImpl r0;
        java.lang.StringBuilder r1, $r2;
        int $i0;
        java.lang.String $r4, $r9;
        android.app.Activity $r7;

        r0 := @this: android.app.LoaderManagerImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = r0.<android.app.LoaderManagerImpl: android.app.Activity mActivity>;

        staticinvoke <android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r7, r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.app.LoaderManagerImpl r0;
        java.lang.String r1, r5, $r17, $r24, r25;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.app.LoaderManagerImpl$LoaderInfo r6, r26;
        android.util.SparseArray $r7, $r8, $r12, $r14, $r15, $r20, $r21, $r22;
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r18, $r19;
        java.lang.Object $r13, $r23;

        r0 := @this: android.app.LoaderManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        $r7 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if $i1 <= 0 goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Active Loaders:");

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r5 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = 0;

     label1:
        $r20 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i5 = virtualinvoke $r20.<android.util.SparseArray: int size()>();

        if i0 >= $i5 goto label2;

        $r21 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r23 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r6 = (android.app.LoaderManagerImpl$LoaderInfo) $r23;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        $r22 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $i6 = virtualinvoke $r22.<android.util.SparseArray: int keyAt(int)>(i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r24 = virtualinvoke r6.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        virtualinvoke r6.<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r5, r2, r3, r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r8 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i2 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if $i2 <= 0 goto label4;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Inactive Loaders:");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r25 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i7 = 0;

     label3:
        $r12 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i3 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i7 >= $i3 goto label4;

        $r14 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r26 = (android.app.LoaderManagerImpl$LoaderInfo) $r13;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        $r15 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mInactiveLoaders>;

        $i4 = virtualinvoke $r15.<android.util.SparseArray: int keyAt(int)>(i7);

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r17 = virtualinvoke r26.<android.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        virtualinvoke r26.<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r25, r2, r3, r4);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean hasRunningLoaders()
    {
        android.app.LoaderManagerImpl r0;
        boolean z0, $z1, $z2, $z3;
        int i0, i1;
        android.app.LoaderManagerImpl$LoaderInfo r1;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.app.LoaderManagerImpl;

        z0 = 0;

        $r2 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r3 = r0.<android.app.LoaderManagerImpl: android.util.SparseArray mLoaders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.app.LoaderManagerImpl$LoaderInfo) $r4;

        $z1 = r1.<android.app.LoaderManagerImpl$LoaderInfo: boolean mStarted>;

        if $z1 == 0 goto label2;

        $z2 = r1.<android.app.LoaderManagerImpl$LoaderInfo: boolean mDeliveredData>;

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = z0 | $z3;

        i1 = i1 + 1;

        goto label1;

     label4:
        return z0;
    }

    static void <clinit>()
    {
        <android.app.LoaderManagerImpl: java.lang.String TAG> = "LoaderManager";

        <android.app.LoaderManagerImpl: boolean DEBUG> = 0;

        return;
    }
}
