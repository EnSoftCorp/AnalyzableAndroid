class android.hardware.ICameraService$Stub$Proxy extends java.lang.Object implements android.hardware.ICameraService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        $r1 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.ICameraService$Stub$Proxy r0;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        return "android.hardware.ICameraService";
    }

    public int getNumberOfCameras() throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getCameraInfo(int, android.hardware.CameraInfo) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, $i2;
        android.hardware.CameraInfo r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.CameraInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label2;

        virtualinvoke r1.<android.hardware.CameraInfo: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int connect(android.hardware.ICameraClient, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.ICameraClient r1;
        int i0, i1, i2, $i3;
        java.lang.String r2;
        android.hardware.camera2.utils.BinderHolder r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.ICameraClient;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: android.hardware.camera2.utils.BinderHolder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r8 = interfaceinvoke r1.<android.hardware.ICameraClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label4;

        virtualinvoke r3.<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>(r5);

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r6 = $r9;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return i2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int connectPro(android.hardware.IProCameraCallbacks, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.IProCameraCallbacks r1;
        int i0, i1, i2, $i3;
        java.lang.String r2;
        android.hardware.camera2.utils.BinderHolder r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.IProCameraCallbacks;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: android.hardware.camera2.utils.BinderHolder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r8 = interfaceinvoke r1.<android.hardware.IProCameraCallbacks: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label4;

        virtualinvoke r3.<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>(r5);

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r6 = $r9;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return i2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int connectDevice(android.hardware.camera2.ICameraDeviceCallbacks, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.camera2.ICameraDeviceCallbacks r1;
        int i0, i1, i2, $i3;
        java.lang.String r2;
        android.hardware.camera2.utils.BinderHolder r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.camera2.ICameraDeviceCallbacks;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r3 := @parameter4: android.hardware.camera2.utils.BinderHolder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r8 = interfaceinvoke r1.<android.hardware.camera2.ICameraDeviceCallbacks: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        $i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label4;

        virtualinvoke r3.<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>(r5);

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r6 = $r9;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return i2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int addListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.ICameraServiceListener r1;
        android.os.Parcel r2, r3;
        int i0;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.ICameraServiceListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.hardware.ICameraServiceListener: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int removeListener(android.hardware.ICameraServiceListener) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.ICameraServiceListener r1;
        android.os.Parcel r2, r3;
        int i0;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.ICameraServiceListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.hardware.ICameraServiceListener: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getCameraCharacteristics(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, $i2;
        android.hardware.camera2.impl.CameraMetadataNative r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label2;

        virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getCameraVendorTagDescriptor(android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.camera2.utils.BinderHolder r1;
        android.os.Parcel r2, r3;
        int i0, $i1;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.camera2.utils.BinderHolder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i1 goto label2;

        virtualinvoke r1.<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getLegacyParameters(int, java.lang.String[]) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, $i2;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        if r1 != null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(-1);

        goto label3;

     label2:
        $i2 = lengthof r1;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($i2);

     label3:
        $r5 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        virtualinvoke r3.<android.os.Parcel: void readStringArray(java.lang.String[])>(r1);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return i1;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int supportsCameraApi(int, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int connectLegacy(android.hardware.ICameraClient, int, int, java.lang.String, int, android.hardware.camera2.utils.BinderHolder) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub$Proxy r0;
        android.hardware.ICameraClient r1;
        int i0, i1, i2, i3, $i4;
        java.lang.String r2;
        android.hardware.camera2.utils.BinderHolder r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7, $r9;

        r0 := @this: android.hardware.ICameraService$Stub$Proxy;

        r1 := @parameter0: android.hardware.ICameraClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r3 := @parameter5: android.hardware.camera2.utils.BinderHolder;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $r9 = interfaceinvoke r1.<android.hardware.ICameraClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r9 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r9);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        $r7 = r0.<android.hardware.ICameraService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label4;

        virtualinvoke r3.<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>(r5);

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r6 = $r8;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return i3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
