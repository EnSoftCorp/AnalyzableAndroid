public abstract class android.telecom.Connection$VideoProvider extends java.lang.Object
{
    public static final int SESSION_EVENT_RX_PAUSE;
    public static final int SESSION_EVENT_RX_RESUME;
    public static final int SESSION_EVENT_TX_START;
    public static final int SESSION_EVENT_TX_STOP;
    public static final int SESSION_EVENT_CAMERA_FAILURE;
    public static final int SESSION_EVENT_CAMERA_READY;
    public static final int SESSION_MODIFY_REQUEST_SUCCESS;
    public static final int SESSION_MODIFY_REQUEST_FAIL;
    public static final int SESSION_MODIFY_REQUEST_INVALID;
    private static final int MSG_SET_VIDEO_CALLBACK;
    private static final int MSG_SET_CAMERA;
    private static final int MSG_SET_PREVIEW_SURFACE;
    private static final int MSG_SET_DISPLAY_SURFACE;
    private static final int MSG_SET_DEVICE_ORIENTATION;
    private static final int MSG_SET_ZOOM;
    private static final int MSG_SEND_SESSION_MODIFY_REQUEST;
    private static final int MSG_SEND_SESSION_MODIFY_RESPONSE;
    private static final int MSG_REQUEST_CAMERA_CAPABILITIES;
    private static final int MSG_REQUEST_CALL_DATA_USAGE;
    private static final int MSG_SET_PAUSE_IMAGE;
    private final android.telecom.Connection$VideoProvider$VideoProviderHandler mMessageHandler;
    private final android.telecom.Connection$VideoProvider$VideoProviderBinder mBinder;
    private com.android.internal.telecom.IVideoCallback mVideoCallback;

    public void <init>()
    {
        android.telecom.Connection$VideoProvider r0;
        android.telecom.Connection$VideoProvider$VideoProviderHandler $r1;
        android.telecom.Connection$VideoProvider$VideoProviderBinder $r2;

        r0 := @this: android.telecom.Connection$VideoProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.telecom.Connection$VideoProvider$VideoProviderHandler;

        specialinvoke $r1.<android.telecom.Connection$VideoProvider$VideoProviderHandler: void <init>(android.telecom.Connection$VideoProvider,android.telecom.Connection$1)>(r0, null);

        r0.<android.telecom.Connection$VideoProvider: android.telecom.Connection$VideoProvider$VideoProviderHandler mMessageHandler> = $r1;

        $r2 = new android.telecom.Connection$VideoProvider$VideoProviderBinder;

        specialinvoke $r2.<android.telecom.Connection$VideoProvider$VideoProviderBinder: void <init>(android.telecom.Connection$VideoProvider,android.telecom.Connection$1)>(r0, null);

        r0.<android.telecom.Connection$VideoProvider: android.telecom.Connection$VideoProvider$VideoProviderBinder mBinder> = $r2;

        return;
    }

    public final com.android.internal.telecom.IVideoProvider getInterface()
    {
        android.telecom.Connection$VideoProvider r0;
        android.telecom.Connection$VideoProvider$VideoProviderBinder $r1;

        r0 := @this: android.telecom.Connection$VideoProvider;

        $r1 = r0.<android.telecom.Connection$VideoProvider: android.telecom.Connection$VideoProvider$VideoProviderBinder mBinder>;

        return $r1;
    }

    public abstract void onSetCamera(java.lang.String);

    public abstract void onSetPreviewSurface(android.view.Surface);

    public abstract void onSetDisplaySurface(android.view.Surface);

    public abstract void onSetDeviceOrientation(int);

    public abstract void onSetZoom(float);

    public abstract void onSendSessionModifyRequest(android.telecom.VideoProfile);

    public abstract void onSendSessionModifyResponse(android.telecom.VideoProfile);

    public abstract void onRequestCameraCapabilities();

    public abstract void onRequestCallDataUsage();

    public abstract void onSetPauseImage(java.lang.String);

    public void receiveSessionModifyRequest(android.telecom.VideoProfile)
    {
        android.telecom.Connection$VideoProvider r0;
        android.telecom.VideoProfile r1;
        com.android.internal.telecom.IVideoCallback $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.Connection$VideoProvider;

        r1 := @parameter0: android.telecom.VideoProfile;

        $r3 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r3 == null goto label4;

     label1:
        $r4 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r4.<com.android.internal.telecom.IVideoCallback: void receiveSessionModifyRequest(android.telecom.VideoProfile)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void receiveSessionModifyResponse(int, android.telecom.VideoProfile, android.telecom.VideoProfile)
    {
        android.telecom.Connection$VideoProvider r0;
        int i0;
        android.telecom.VideoProfile r1, r2;
        com.android.internal.telecom.IVideoCallback $r4, $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telecom.Connection$VideoProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telecom.VideoProfile;

        r2 := @parameter2: android.telecom.VideoProfile;

        $r4 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r4 == null goto label4;

     label1:
        $r5 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r5.<com.android.internal.telecom.IVideoCallback: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>(i0, r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void handleCallSessionEvent(int)
    {
        android.telecom.Connection$VideoProvider r0;
        int i0;
        com.android.internal.telecom.IVideoCallback $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.Connection$VideoProvider;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoCallback: void handleCallSessionEvent(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changePeerDimensions(int, int)
    {
        android.telecom.Connection$VideoProvider r0;
        int i0, i1;
        com.android.internal.telecom.IVideoCallback $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.Connection$VideoProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoCallback: void changePeerDimensions(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changeCallDataUsage(int)
    {
        android.telecom.Connection$VideoProvider r0;
        int i0;
        com.android.internal.telecom.IVideoCallback $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.Connection$VideoProvider;

        i0 := @parameter0: int;

        $r2 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r3.<com.android.internal.telecom.IVideoCallback: void changeCallDataUsage(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void changeCameraCapabilities(android.telecom.CameraCapabilities)
    {
        android.telecom.Connection$VideoProvider r0;
        android.telecom.CameraCapabilities r1;
        com.android.internal.telecom.IVideoCallback $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.Connection$VideoProvider;

        r1 := @parameter0: android.telecom.CameraCapabilities;

        $r3 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        if $r3 == null goto label4;

     label1:
        $r4 = r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback>;

        interfaceinvoke $r4.<com.android.internal.telecom.IVideoCallback: void changeCameraCapabilities(android.telecom.CameraCapabilities)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static com.android.internal.telecom.IVideoCallback access$102(android.telecom.Connection$VideoProvider, com.android.internal.telecom.IVideoCallback)
    {
        android.telecom.Connection$VideoProvider r0;
        com.android.internal.telecom.IVideoCallback r1;

        r0 := @parameter0: android.telecom.Connection$VideoProvider;

        r1 := @parameter1: com.android.internal.telecom.IVideoCallback;

        r0.<android.telecom.Connection$VideoProvider: com.android.internal.telecom.IVideoCallback mVideoCallback> = r1;

        return r1;
    }

    static android.telecom.Connection$VideoProvider$VideoProviderHandler access$200(android.telecom.Connection$VideoProvider)
    {
        android.telecom.Connection$VideoProvider r0;
        android.telecom.Connection$VideoProvider$VideoProviderHandler $r1;

        r0 := @parameter0: android.telecom.Connection$VideoProvider;

        $r1 = r0.<android.telecom.Connection$VideoProvider: android.telecom.Connection$VideoProvider$VideoProviderHandler mMessageHandler>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.telecom.Connection$VideoProvider: int MSG_SET_PAUSE_IMAGE> = 11;

        <android.telecom.Connection$VideoProvider: int MSG_REQUEST_CALL_DATA_USAGE> = 10;

        <android.telecom.Connection$VideoProvider: int MSG_REQUEST_CAMERA_CAPABILITIES> = 9;

        <android.telecom.Connection$VideoProvider: int MSG_SEND_SESSION_MODIFY_RESPONSE> = 8;

        <android.telecom.Connection$VideoProvider: int MSG_SEND_SESSION_MODIFY_REQUEST> = 7;

        <android.telecom.Connection$VideoProvider: int MSG_SET_ZOOM> = 6;

        <android.telecom.Connection$VideoProvider: int MSG_SET_DEVICE_ORIENTATION> = 5;

        <android.telecom.Connection$VideoProvider: int MSG_SET_DISPLAY_SURFACE> = 4;

        <android.telecom.Connection$VideoProvider: int MSG_SET_PREVIEW_SURFACE> = 3;

        <android.telecom.Connection$VideoProvider: int MSG_SET_CAMERA> = 2;

        <android.telecom.Connection$VideoProvider: int MSG_SET_VIDEO_CALLBACK> = 1;

        <android.telecom.Connection$VideoProvider: int SESSION_MODIFY_REQUEST_INVALID> = 3;

        <android.telecom.Connection$VideoProvider: int SESSION_MODIFY_REQUEST_FAIL> = 2;

        <android.telecom.Connection$VideoProvider: int SESSION_MODIFY_REQUEST_SUCCESS> = 1;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_CAMERA_READY> = 6;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_CAMERA_FAILURE> = 5;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_TX_STOP> = 4;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_TX_START> = 3;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_RX_RESUME> = 2;

        <android.telecom.Connection$VideoProvider: int SESSION_EVENT_RX_PAUSE> = 1;

        return;
    }
}
