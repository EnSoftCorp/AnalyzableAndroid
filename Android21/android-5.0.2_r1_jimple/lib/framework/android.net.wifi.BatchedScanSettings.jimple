public class android.net.wifi.BatchedScanSettings extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    public static final int UNSPECIFIED;
    public static final int MIN_SCANS_PER_BATCH;
    public static final int MAX_SCANS_PER_BATCH;
    public static final int DEFAULT_SCANS_PER_BATCH;
    public static final int MIN_AP_PER_SCAN;
    public static final int MAX_AP_PER_SCAN;
    public static final int DEFAULT_AP_PER_SCAN;
    public static final int MIN_INTERVAL_SEC;
    public static final int MAX_INTERVAL_SEC;
    public static final int DEFAULT_INTERVAL_SEC;
    public static final int MIN_AP_FOR_DISTANCE;
    public static final int MAX_AP_FOR_DISTANCE;
    public static final int DEFAULT_AP_FOR_DISTANCE;
    public static final int MAX_WIFI_CHANNEL;
    public int maxScansPerBatch;
    public int maxApPerScan;
    public java.util.Collection channelSet;
    public int scanIntervalSec;
    public int maxApForDistance;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.wifi.BatchedScanSettings r0;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.net.wifi.BatchedScanSettings: void clear()>();

        return;
    }

    public void clear()
    {
        android.net.wifi.BatchedScanSettings r0;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch> = 2147483647;

        r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan> = 2147483647;

        r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet> = null;

        r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec> = 2147483647;

        r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance> = 2147483647;

        return;
    }

    public void <init>(android.net.wifi.BatchedScanSettings)
    {
        android.net.wifi.BatchedScanSettings r0, r1;
        int $i0, $i1, $i2, $i3;
        java.util.Collection $r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        r1 := @parameter0: android.net.wifi.BatchedScanSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch> = $i0;

        $i1 = r1.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan> = $i1;

        $r2 = r1.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r2 == null goto label1;

        $r3 = new java.util.ArrayList;

        $r4 = r1.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet> = $r3;

     label1:
        $i2 = r1.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec> = $i2;

        $i3 = r1.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance> = $i3;

        return;
    }

    private boolean channelSetIsValid()
    {
        android.net.wifi.BatchedScanSettings r0;
        java.util.Iterator r1;
        java.lang.String r2;
        int i0;
        java.util.Collection $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6;
        java.lang.NumberFormatException $r7;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        $r3 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r3 == null goto label01;

        $r4 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        return 1;

     label02:
        $r5 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r6;

     label04:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        if i0 <= 0 goto label06;

        if i0 > 196 goto label06;

     label05:
        goto label03;

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

     label08:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("A");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("B");

        if $z3 == 0 goto label09;

        goto label03;

     label09:
        return 0;

     label10:
        return 1;

        catch java.lang.NumberFormatException from label04 to label05 with label07;
    }

    public boolean isInvalid()
    {
        android.net.wifi.BatchedScanSettings r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        $i0 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i0 == 2147483647 goto label2;

        $i10 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i10 < 2 goto label1;

        $i11 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i11 <= 20 goto label2;

     label1:
        return 1;

     label2:
        $i1 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i1 == 2147483647 goto label4;

        $i8 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i8 < 2 goto label3;

        $i9 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i9 <= 16 goto label4;

     label3:
        return 1;

     label4:
        $z0 = specialinvoke r0.<android.net.wifi.BatchedScanSettings: boolean channelSetIsValid()>();

        if $z0 != 0 goto label5;

        return 1;

     label5:
        $i2 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i2 == 2147483647 goto label7;

        $i6 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i6 < 10 goto label6;

        $i7 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i7 <= 500 goto label7;

     label6:
        return 1;

     label7:
        $i3 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i3 == 2147483647 goto label9;

        $i4 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i4 < 0 goto label8;

        $i5 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i5 <= 16 goto label9;

     label8:
        return 1;

     label9:
        return 0;
    }

    public void constrain()
    {
        android.net.wifi.BatchedScanSettings r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        $i0 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i0 != 2147483647 goto label01;

        r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec> = 30;

        goto label03;

     label01:
        $i1 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i1 >= 10 goto label02;

        r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec> = 10;

        goto label03;

     label02:
        $i2 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i2 <= 500 goto label03;

        r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec> = 500;

     label03:
        $i3 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i3 != 2147483647 goto label04;

        r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch> = 20;

        goto label06;

     label04:
        $i4 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i4 >= 2 goto label05;

        r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch> = 2;

        goto label06;

     label05:
        $i5 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i5 <= 20 goto label06;

        r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch> = 20;

     label06:
        $i6 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i6 != 2147483647 goto label07;

        r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan> = 16;

        goto label09;

     label07:
        $i7 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i7 >= 2 goto label08;

        r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan> = 2;

        goto label09;

     label08:
        $i8 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i8 <= 16 goto label09;

        r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan> = 16;

     label09:
        $i9 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i9 != 2147483647 goto label10;

        r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance> = 0;

        goto label12;

     label10:
        $i10 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i10 >= 0 goto label11;

        r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance> = 0;

        goto label12;

     label11:
        $i11 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i11 <= 16 goto label12;

        r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance> = 16;

     label12:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.BatchedScanSettings r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Collection $r3, $r4, $r5, $r6;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.net.wifi.BatchedScanSettings;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (android.net.wifi.BatchedScanSettings) r1;

        $i1 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        $i0 = r2.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i1 != $i0 goto label2;

        $i3 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        $i2 = r2.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i3 != $i2 goto label2;

        $i5 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $i4 = r2.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i5 != $i4 goto label2;

        $i7 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        $i6 = r2.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i7 == $i6 goto label3;

     label2:
        return 0;

     label3:
        $r3 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r3 != null goto label6;

        $r6 = r2.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r6 != null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        $r5 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $r4 = r2.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $z1 = interfaceinvoke $r5.<java.util.Collection: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        android.net.wifi.BatchedScanSettings r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.util.Collection $r1;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        $i2 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        $i0 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        $i1 = $i0 * 3;

        $i5 = $i2 + $i1;

        $i3 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $i4 = $i3 * 5;

        $i8 = $i5 + $i4;

        $i6 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        $i7 = $i6 * 7;

        $i9 = $i8 + $i7;

        $r1 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $i10 = interfaceinvoke $r1.<java.util.Collection: int hashCode()>();

        $i11 = $i10 * 11;

        $i12 = $i9 + $i11;

        return $i12;
    }

    public java.lang.String toString()
    {
        android.net.wifi.BatchedScanSettings r0;
        java.lang.StringBuffer r1, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16;
        java.lang.String r2, r4, $r22, $r27;
        java.util.Iterator r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.Serializable $r7, $r10, $r13, $r17;
        java.util.Collection $r18, $r20;
        boolean $z0;
        java.lang.Object $r23;
        java.lang.StringBuilder $r26, $r28, $r29;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r1 = $r5;

        r2 = "<none>";

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BatchScanSettings [maxScansPerBatch: ");

        $i0 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i0 != 2147483647 goto label01;

        $r7 = r2;

        goto label02;

     label01:
        $i1 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label02:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", maxApPerScan: ");

        $i2 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i2 != 2147483647 goto label03;

        $r10 = r2;

        goto label04;

     label03:
        $i3 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label04:
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", scanIntervalSec: ");

        $i4 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        if $i4 != 2147483647 goto label05;

        $r13 = r2;

        goto label06;

     label05:
        $i5 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

     label06:
        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", maxApForDistance: ");

        $i7 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i7 != 2147483647 goto label07;

        $r17 = r2;

        goto label08;

     label07:
        $i6 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

     label08:
        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", channelSet: ");

        $r18 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r18 != null goto label09;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ALL");

        goto label12;

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r20 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        r3 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r23 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r23;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        goto label10;

     label11:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

     label12:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r22 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;
    }

    public int describeContents()
    {
        android.net.wifi.BatchedScanSettings r0;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.BatchedScanSettings r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r2;
        java.lang.String r3;
        java.util.Collection $r4, $r5, $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: android.net.wifi.BatchedScanSettings;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r4 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r4 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r5 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $i5 = interfaceinvoke $r5.<java.util.Collection: int size()>();

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r6 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r6 == null goto label4;

        $r7 = r0.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        goto label3;

     label4:
        return;
    }

    static void <clinit>()
    {
        android.net.wifi.BatchedScanSettings$1 $r0;

        <android.net.wifi.BatchedScanSettings: int MAX_WIFI_CHANNEL> = 196;

        <android.net.wifi.BatchedScanSettings: int DEFAULT_AP_FOR_DISTANCE> = 0;

        <android.net.wifi.BatchedScanSettings: int MAX_AP_FOR_DISTANCE> = 16;

        <android.net.wifi.BatchedScanSettings: int MIN_AP_FOR_DISTANCE> = 0;

        <android.net.wifi.BatchedScanSettings: int DEFAULT_INTERVAL_SEC> = 30;

        <android.net.wifi.BatchedScanSettings: int MAX_INTERVAL_SEC> = 500;

        <android.net.wifi.BatchedScanSettings: int MIN_INTERVAL_SEC> = 10;

        <android.net.wifi.BatchedScanSettings: int DEFAULT_AP_PER_SCAN> = 16;

        <android.net.wifi.BatchedScanSettings: int MAX_AP_PER_SCAN> = 16;

        <android.net.wifi.BatchedScanSettings: int MIN_AP_PER_SCAN> = 2;

        <android.net.wifi.BatchedScanSettings: int DEFAULT_SCANS_PER_BATCH> = 20;

        <android.net.wifi.BatchedScanSettings: int MAX_SCANS_PER_BATCH> = 20;

        <android.net.wifi.BatchedScanSettings: int MIN_SCANS_PER_BATCH> = 2;

        <android.net.wifi.BatchedScanSettings: int UNSPECIFIED> = 2147483647;

        <android.net.wifi.BatchedScanSettings: java.lang.String TAG> = "BatchedScanSettings";

        $r0 = new android.net.wifi.BatchedScanSettings$1;

        specialinvoke $r0.<android.net.wifi.BatchedScanSettings$1: void <init>()>();

        <android.net.wifi.BatchedScanSettings: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
