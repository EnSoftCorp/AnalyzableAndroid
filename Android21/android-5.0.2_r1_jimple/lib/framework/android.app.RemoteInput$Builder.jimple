public final class android.app.RemoteInput$Builder extends java.lang.Object
{
    private final java.lang.String mResultKey;
    private java.lang.CharSequence mLabel;
    private java.lang.CharSequence[] mChoices;
    private int mFlags;
    private android.os.Bundle mExtras;

    public void <init>(java.lang.String)
    {
        android.app.RemoteInput$Builder r0;
        java.lang.String r1;
        android.os.Bundle $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.app.RemoteInput$Builder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.RemoteInput$Builder: int mFlags> = 1;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.app.RemoteInput$Builder: android.os.Bundle mExtras> = $r2;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Result key can\'t be null");

        throw $r3;

     label1:
        r0.<android.app.RemoteInput$Builder: java.lang.String mResultKey> = r1;

        return;
    }

    public android.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
    {
        android.app.RemoteInput$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.RemoteInput$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.RemoteInput$Builder: java.lang.CharSequence mLabel> = $r2;

        return r0;
    }

    public android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
    {
        android.app.RemoteInput$Builder r0;
        java.lang.CharSequence[] r1, $r2, $r4;
        int i0, $i1, $i2;
        java.lang.CharSequence $r3, $r5;

        r0 := @this: android.app.RemoteInput$Builder;

        r1 := @parameter0: java.lang.CharSequence[];

        if r1 != null goto label1;

        r0.<android.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices> = null;

        goto label3;

     label1:
        $i1 = lengthof r1;

        $r2 = newarray (java.lang.CharSequence)[$i1];

        r0.<android.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices> = $r2;

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label3;

        $r4 = r0.<android.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices>;

        $r3 = r1[i0];

        $r5 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>($r3);

        $r4[i0] = $r5;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r0;
    }

    public android.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
    {
        android.app.RemoteInput$Builder r0;
        boolean z0;
        int $i0;

        r0 := @this: android.app.RemoteInput$Builder;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.app.RemoteInput$Builder: int mFlags>;

        specialinvoke r0.<android.app.RemoteInput$Builder: void setFlag(int,boolean)>($i0, z0);

        return r0;
    }

    public android.app.RemoteInput$Builder addExtras(android.os.Bundle)
    {
        android.app.RemoteInput$Builder r0;
        android.os.Bundle r1, $r2;

        r0 := @this: android.app.RemoteInput$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $r2 = r0.<android.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        virtualinvoke $r2.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label1:
        return r0;
    }

    public android.os.Bundle getExtras()
    {
        android.app.RemoteInput$Builder r0;
        android.os.Bundle $r1;

        r0 := @this: android.app.RemoteInput$Builder;

        $r1 = r0.<android.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        return $r1;
    }

    private void setFlag(int, boolean)
    {
        android.app.RemoteInput$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.app.RemoteInput$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i4 = r0.<android.app.RemoteInput$Builder: int mFlags>;

        $i5 = $i4 | i0;

        r0.<android.app.RemoteInput$Builder: int mFlags> = $i5;

        goto label2;

     label1:
        $i2 = r0.<android.app.RemoteInput$Builder: int mFlags>;

        $i1 = i0 ^ -1;

        $i3 = $i2 & $i1;

        r0.<android.app.RemoteInput$Builder: int mFlags> = $i3;

     label2:
        return;
    }

    public android.app.RemoteInput build()
    {
        android.app.RemoteInput$Builder r0;
        android.app.RemoteInput $r1;
        android.os.Bundle $r2;
        int $i0;
        java.lang.CharSequence[] $r3;
        java.lang.CharSequence $r4;
        java.lang.String $r5;

        r0 := @this: android.app.RemoteInput$Builder;

        $r1 = new android.app.RemoteInput;

        $r5 = r0.<android.app.RemoteInput$Builder: java.lang.String mResultKey>;

        $r4 = r0.<android.app.RemoteInput$Builder: java.lang.CharSequence mLabel>;

        $r3 = r0.<android.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices>;

        $i0 = r0.<android.app.RemoteInput$Builder: int mFlags>;

        $r2 = r0.<android.app.RemoteInput$Builder: android.os.Bundle mExtras>;

        specialinvoke $r1.<android.app.RemoteInput: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle,android.app.RemoteInput$1)>($r5, $r4, $r3, $i0, $r2, null);

        return $r1;
    }
}
