public class android.text.method.Touch extends java.lang.Object
{

    private void <init>()
    {
        android.text.method.Touch r0;

        r0 := @this: android.text.method.Touch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void scrollTo(android.widget.TextView, android.text.Layout, int, int)
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25;
        android.text.Layout$Alignment r2, $r3, $r4, $r5, $r6;
        boolean z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Layout;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i10 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i11 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        i2 = $i10 + $i11;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        i3 = $i12 - i2;

        i4 = virtualinvoke r1.<android.text.Layout: int getLineForVertical(int)>(i1);

        r2 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i4);

        $i13 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i4);

        if $i13 <= 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean getHorizontallyScrolling()>();

        if $z1 == 0 goto label05;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $i21 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        i7 = $i17 + $i21;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i19 = i1 + $i22;

        $i20 = $i19 - i7;

        i8 = virtualinvoke r1.<android.text.Layout: int getLineForVertical(int)>($i20);

        i5 = 2147483647;

        i6 = 0;

        i9 = i4;

     label03:
        if i9 > i8 goto label04;

        $f2 = (float) i5;

        $f0 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i9);

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f0);

        i5 = (int) $f1;

        $f4 = (float) i6;

        $f5 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i9);

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f5);

        i6 = (int) $f3;

        i9 = i9 + 1;

        goto label03;

     label04:
        goto label06;

     label05:
        i5 = 0;

        i6 = i3;

     label06:
        i23 = i6 - i5;

        if i23 >= i3 goto label12;

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r2 != $r4 goto label07;

        $i16 = i3 - i23;

        $i18 = $i16 / 2;

        i24 = i5 - $i18;

        goto label13;

     label07:
        if z0 == 0 goto label08;

        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r2 == $r6 goto label10;

     label08:
        if z0 != 0 goto label09;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r2 == $r5 goto label10;

     label09:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r2 != $r3 goto label11;

     label10:
        $i15 = i3 - i23;

        i24 = i5 - $i15;

        goto label13;

     label11:
        i24 = i5;

        goto label13;

     label12:
        $i14 = i6 - i3;

        i25 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i14);

        i24 = staticinvoke <java.lang.Math: int max(int,int)>(i25, i5);

     label13:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i24, i1);

        return;
    }

    public static boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.view.MotionEvent r2;
        android.text.method.Touch$DragState[] r3, r30, r31;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, i34, i35, i36, i37;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.text.Layout r4;
        java.lang.Object[] $r5, $r8, $r28;
        android.text.method.Touch$DragState $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.content.Context $r19;
        android.view.ViewConfiguration $r20;
        byte $b29, $b33;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        r2 := @parameter2: android.view.MotionEvent;

        $i6 = virtualinvoke r2.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i6)
        {
            case 0: goto label01;
            case 1: goto label04;
            case 2: goto label08;
            default: goto label20;
        };

     label01:
        $i7 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r5 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i7, class "android/text/method/Touch$DragState");

        r3 = (android.text.method.Touch$DragState[]) $r5;

        i0 = 0;

     label02:
        $i8 = lengthof r3;

        if i0 >= $i8 goto label03;

        $r7 = r3[i0];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label02;

     label03:
        $r6 = new android.text.method.Touch$DragState;

        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $i9 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $i10 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        specialinvoke $r6.<android.text.method.Touch$DragState: void <init>(float,float,int,int)>($f2, $f3, $i9, $i10);

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, 0, 0, 17);

        return 1;

     label04:
        $i32 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r28 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i32, class "android/text/method/Touch$DragState");

        r30 = (android.text.method.Touch$DragState[]) $r28;

        i34 = 0;

     label05:
        $i30 = lengthof r30;

        if i34 >= $i30 goto label06;

        $r29 = r30[i34];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r29);

        i34 = i34 + 1;

        goto label05;

     label06:
        $i31 = lengthof r30;

        if $i31 <= 0 goto label07;

        $r27 = r30[0];

        $z7 = $r27.<android.text.method.Touch$DragState: boolean mUsed>;

        if $z7 == 0 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $i11 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r8 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i11, class "android/text/method/Touch$DragState");

        r31 = (android.text.method.Touch$DragState[]) $r8;

        $i12 = lengthof r31;

        if $i12 <= 0 goto label20;

        $r10 = r31[0];

        $r10.<android.text.method.Touch$DragState: boolean mIsSelectionStarted> = 0;

        $r9 = r31[0];

        $z0 = $r9.<android.text.method.Touch$DragState: boolean mFarEnough>;

        if $z0 != 0 goto label10;

        $r19 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r20 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r19);

        i35 = virtualinvoke $r20.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $f14 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r23 = r31[0];

        $f16 = $r23.<android.text.method.Touch$DragState: float mX>;

        $f18 = $f14 - $f16;

        $f17 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        $f15 = (float) i35;

        $b29 = $f17 cmpl $f15;

        if $b29 >= 0 goto label09;

        $f23 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r26 = r31[0];

        $f20 = $r26.<android.text.method.Touch$DragState: float mY>;

        $f19 = $f23 - $f20;

        $f22 = staticinvoke <java.lang.Math: float abs(float)>($f19);

        $f21 = (float) i35;

        $b33 = $f22 cmpl $f21;

        if $b33 < 0 goto label10;

     label09:
        $r22 = r31[0];

        $r22.<android.text.method.Touch$DragState: boolean mFarEnough> = 1;

        $z6 = virtualinvoke r2.<android.view.MotionEvent: boolean isButtonPressed(int)>(1);

        if $z6 == 0 goto label10;

        $r25 = r31[0];

        $r25.<android.text.method.Touch$DragState: boolean mIsActivelySelecting> = 1;

        $r24 = r31[0];

        $r24.<android.text.method.Touch$DragState: boolean mIsSelectionStarted> = 1;

     label10:
        $r11 = r31[0];

        $z1 = $r11.<android.text.method.Touch$DragState: boolean mFarEnough>;

        if $z1 == 0 goto label20;

        $r12 = r31[0];

        $r12.<android.text.method.Touch$DragState: boolean mUsed> = 1;

        $i13 = virtualinvoke r2.<android.view.MotionEvent: int getMetaState()>();

        $i14 = $i13 & 1;

        if $i14 != 0 goto label11;

        $i27 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 1);

        if $i27 == 1 goto label11;

        $i28 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 2048);

        if $i28 == 0 goto label12;

     label11:
        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z8 = $z5;

        $z2 = virtualinvoke r2.<android.view.MotionEvent: boolean isButtonPressed(int)>(1);

        if $z2 != 0 goto label14;

        $r21 = r31[0];

        $r21.<android.text.method.Touch$DragState: boolean mIsActivelySelecting> = 0;

     label14:
        if z8 == 0 goto label15;

        $z4 = virtualinvoke r2.<android.view.MotionEvent: boolean isButtonPressed(int)>(1);

        if $z4 == 0 goto label15;

        $f13 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r18 = r31[0];

        $f10 = $r18.<android.text.method.Touch$DragState: float mX>;

        f0 = $f13 - $f10;

        $f11 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r17 = r31[0];

        $f12 = $r17.<android.text.method.Touch$DragState: float mY>;

        f1 = $f11 - $f12;

        goto label16;

     label15:
        $r13 = r31[0];

        $f4 = $r13.<android.text.method.Touch$DragState: float mX>;

        $f5 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f0 = $f4 - $f5;

        $r15 = r31[0];

        $f7 = $r15.<android.text.method.Touch$DragState: float mY>;

        $f6 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        f1 = $f7 - $f6;

     label16:
        $r14 = r31[0];

        $f9 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r14.<android.text.method.Touch$DragState: float mX> = $f9;

        $r16 = r31[0];

        $f8 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r16.<android.text.method.Touch$DragState: float mY> = $f8;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $i19 = (int) f0;

        i1 = $i15 + $i19;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $i17 = (int) f1;

        i2 = $i18 + $i17;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $i22 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        i3 = $i16 + $i22;

        r4 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i21 = virtualinvoke r4.<android.text.Layout: int getHeight()>();

        $i20 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i24 = $i20 - i3;

        $i23 = $i21 - $i24;

        i36 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i23);

        i37 = staticinvoke <java.lang.Math: int max(int,int)>(i36, 0);

        i4 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        i5 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $z3 = virtualinvoke r2.<android.view.MotionEvent: boolean isButtonPressed(int)>(1);

        if $z3 != 0 goto label17;

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r0, r4, i1, i37);

     label17:
        $i25 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        if i4 != $i25 goto label18;

        $i26 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        if i5 == $i26 goto label19;

     label18:
        virtualinvoke r0.<android.widget.TextView: void cancelLongPress()>();

     label19:
        return 1;

     label20:
        return 0;
    }

    public static int getInitialScrollX(android.widget.TextView, android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.method.Touch$DragState[] r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        android.text.method.Touch$DragState $r4;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        $i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r2 = (android.text.method.Touch$DragState[]) $r3;

        $i1 = lengthof r2;

        if $i1 <= 0 goto label1;

        $r4 = r2[0];

        $i2 = $r4.<android.text.method.Touch$DragState: int mScrollX>;

        goto label2;

     label1:
        $i2 = -1;

     label2:
        return $i2;
    }

    public static int getInitialScrollY(android.widget.TextView, android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.method.Touch$DragState[] r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        android.text.method.Touch$DragState $r4;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        $i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r2 = (android.text.method.Touch$DragState[]) $r3;

        $i1 = lengthof r2;

        if $i1 <= 0 goto label1;

        $r4 = r2[0];

        $i2 = $r4.<android.text.method.Touch$DragState: int mScrollY>;

        goto label2;

     label1:
        $i2 = -1;

     label2:
        return $i2;
    }

    static boolean isActivelySelecting(android.text.Spannable)
    {
        android.text.Spannable r0;
        android.text.method.Touch$DragState[] r1;
        int $i0, $i1;
        java.lang.Object[] $r2;
        android.text.method.Touch$DragState $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r1 = (android.text.method.Touch$DragState[]) $r2;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $r3 = r1[0];

        $z0 = $r3.<android.text.method.Touch$DragState: boolean mIsActivelySelecting>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean isSelectionStarted(android.text.Spannable)
    {
        android.text.Spannable r0;
        android.text.method.Touch$DragState[] r1;
        int $i0, $i1;
        java.lang.Object[] $r2;
        android.text.method.Touch$DragState $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r1 = (android.text.method.Touch$DragState[]) $r2;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label1;

        $r3 = r1[0];

        $z0 = $r3.<android.text.method.Touch$DragState: boolean mIsSelectionStarted>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
