public class android.transition.Crossfade extends android.transition.Transition
{
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PROPNAME_BITMAP;
    private static final java.lang.String PROPNAME_DRAWABLE;
    private static final java.lang.String PROPNAME_BOUNDS;
    private static android.animation.RectEvaluator sRectEvaluator;
    private int mFadeBehavior;
    private int mResizeBehavior;
    public static final int FADE_BEHAVIOR_CROSSFADE;
    public static final int FADE_BEHAVIOR_REVEAL;
    public static final int FADE_BEHAVIOR_OUT_IN;
    public static final int RESIZE_BEHAVIOR_NONE;
    public static final int RESIZE_BEHAVIOR_SCALE;

    public void <init>()
    {
        android.transition.Crossfade r0;

        r0 := @this: android.transition.Crossfade;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        r0.<android.transition.Crossfade: int mFadeBehavior> = 1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = 1;

        return;
    }

    public android.transition.Crossfade setFadeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 2 goto label1;

        r0.<android.transition.Crossfade: int mFadeBehavior> = i0;

     label1:
        return r0;
    }

    public int getFadeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    public android.transition.Crossfade setResizeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 1 goto label1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = i0;

     label1:
        return r0;
    }

    public int getResizeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        return $i0;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.view.ViewGroup r1, $r44;
        android.transition.TransitionValues r2, r3;
        boolean z0, $z1, $z2, $z3;
        android.view.View r4;
        java.util.Map r5, r6;
        android.graphics.Rect r7, r8;
        android.graphics.Bitmap r9, r10;
        android.graphics.drawable.BitmapDrawable r11, r12;
        android.view.ViewOverlay r13, $r25;
        android.animation.ObjectAnimator r14, r16, r17, r18;
        android.animation.AnimatorSet r15, $r30;
        java.lang.Object $r19, $r20, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r26, $r43;
        android.transition.Crossfade$1 $r27;
        android.animation.Animator[] $r28, $r35, $r37, $r38;
        android.transition.Crossfade$2 $r29;
        android.animation.RectEvaluator $r31, $r34;
        java.lang.Object[] $r32, $r33;
        float[] $r36, $r40;
        android.util.Property $r39, $r41;
        android.view.ViewParent $r42;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        r3 := @parameter2: android.transition.TransitionValues;

        if r2 == null goto label01;

        if r3 != null goto label02;

     label01:
        return null;

     label02:
        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i0 == 1 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z0 = $z3;

        r4 = r3.<android.transition.TransitionValues: android.view.View view>;

        r5 = r2.<android.transition.TransitionValues: java.util.Map values>;

        r6 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r19 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r7 = (android.graphics.Rect) $r19;

        $r21 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r8 = (android.graphics.Rect) $r21;

        $r20 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r9 = (android.graphics.Bitmap) $r20;

        $r23 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r10 = (android.graphics.Bitmap) $r23;

        $r22 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r11 = (android.graphics.drawable.BitmapDrawable) $r22;

        $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r12 = (android.graphics.drawable.BitmapDrawable) $r24;

        if r11 == null goto label14;

        if r12 == null goto label14;

        $z1 = virtualinvoke r9.<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>(r10);

        if $z1 != 0 goto label14;

        if z0 == 0 goto label05;

        $r42 = virtualinvoke r4.<android.view.View: android.view.ViewParent getParent()>();

        $r44 = (android.view.ViewGroup) $r42;

        $r25 = virtualinvoke $r44.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

        goto label06;

     label05:
        $r25 = virtualinvoke r4.<android.view.View: android.view.ViewOverlay getOverlay()>();

     label06:
        r13 = $r25;

        $i1 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i1 != 1 goto label07;

        virtualinvoke r13.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r12);

     label07:
        virtualinvoke r13.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r11);

        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 != 2 goto label08;

        $r43 = newarray (int)[3];

        $r43[0] = 255;

        $r43[1] = 0;

        $r43[2] = 0;

        r14 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r11, "alpha", $r43);

        goto label09;

     label08:
        $r26 = newarray (int)[1];

        $r26[0] = 0;

        r14 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r11, "alpha", $r26);

     label09:
        $r27 = new android.transition.Crossfade$1;

        specialinvoke $r27.<android.transition.Crossfade$1: void <init>(android.transition.Crossfade,android.view.View,android.graphics.drawable.BitmapDrawable)>(r0, r4, r11);

        virtualinvoke r14.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r27);

        r16 = null;

        $i3 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i3 != 2 goto label10;

        $r39 = <android.view.View: android.util.Property ALPHA>;

        $r40 = newarray (float)[3];

        $r40[0] = 0.0F;

        $r40[1] = 0.0F;

        $r40[2] = 1.0F;

        r16 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r4, $r39, $r40);

        goto label11;

     label10:
        $i4 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i4 != 0 goto label11;

        $r41 = <android.view.View: android.util.Property ALPHA>;

        $r36 = newarray (float)[2];

        $r36[0] = 0.0F;

        $r36[1] = 1.0F;

        r16 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r4, $r41, $r36);

     label11:
        $r29 = new android.transition.Crossfade$2;

        specialinvoke $r29.<android.transition.Crossfade$2: void <init>(android.transition.Crossfade,boolean,android.view.View,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable)>(r0, z0, r4, r11, r12);

        virtualinvoke r14.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r29);

        $r30 = new android.animation.AnimatorSet;

        specialinvoke $r30.<android.animation.AnimatorSet: void <init>()>();

        r15 = $r30;

        $r28 = newarray (android.animation.Animator)[1];

        $r28[0] = r14;

        virtualinvoke r15.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r28);

        if r16 == null goto label12;

        $r37 = newarray (android.animation.Animator)[1];

        $r37[0] = r16;

        virtualinvoke r15.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r37);

     label12:
        $i5 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i5 != 1 goto label13;

        $z2 = virtualinvoke r7.<android.graphics.Rect: boolean equals(java.lang.Object)>(r8);

        if $z2 != 0 goto label13;

        $r31 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = r7;

        $r32[1] = r8;

        r18 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r11, "bounds", $r31, $r32);

        $r35 = newarray (android.animation.Animator)[1];

        $r35[0] = r18;

        virtualinvoke r15.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r35);

        $i6 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i6 != 1 goto label13;

        $r34 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r33 = newarray (java.lang.Object)[2];

        $r33[0] = r7;

        $r33[1] = r8;

        r17 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r12, "bounds", $r34, $r33);

        $r38 = newarray (android.animation.Animator)[1];

        $r38[0] = r17;

        virtualinvoke r15.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r38);

     label13:
        return r15;

     label14:
        return null;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        android.graphics.Rect r3, $r6;
        android.graphics.Bitmap r4;
        android.graphics.Canvas r5, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Map $r7, $r12, $r13;
        android.graphics.Bitmap$Config $r9;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable $r14, r17;
        android.view.TextureView $r15;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r6 = new android.graphics.Rect;

        $i0 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r2.<android.view.View: int getHeight()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        r3 = $r6;

        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 == 1 goto label1;

        $i5 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        virtualinvoke r3.<android.graphics.Rect: void offset(int,int)>($i5, $i6);

     label1:
        $r7 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bounds", r3);

        $i3 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i4 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i3, $i4, $r9);

        $z0 = r2 instanceof android.view.TextureView;

        if $z0 == 0 goto label2;

        $r15 = (android.view.TextureView) r2;

        r4 = virtualinvoke $r15.<android.view.TextureView: android.graphics.Bitmap getBitmap()>();

        goto label3;

     label2:
        $r10 = new android.graphics.Canvas;

        specialinvoke $r10.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        r5 = $r10;

        virtualinvoke r2.<android.view.View: void draw(android.graphics.Canvas)>(r5);

     label3:
        $r12 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bitmap", r4);

        $r14 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r14.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r4);

        r17 = $r14;

        virtualinvoke r17.<android.graphics.drawable.BitmapDrawable: void setBounds(android.graphics.Rect)>(r3);

        $r13 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:drawable", r17);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    static int access$000(android.transition.Crossfade)
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @parameter0: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    static void <clinit>()
    {
        android.animation.RectEvaluator $r0;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_SCALE> = 1;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_NONE> = 0;

        <android.transition.Crossfade: int FADE_BEHAVIOR_OUT_IN> = 2;

        <android.transition.Crossfade: int FADE_BEHAVIOR_REVEAL> = 1;

        <android.transition.Crossfade: int FADE_BEHAVIOR_CROSSFADE> = 0;

        <android.transition.Crossfade: java.lang.String PROPNAME_BOUNDS> = "android:crossfade:bounds";

        <android.transition.Crossfade: java.lang.String PROPNAME_DRAWABLE> = "android:crossfade:drawable";

        <android.transition.Crossfade: java.lang.String PROPNAME_BITMAP> = "android:crossfade:bitmap";

        <android.transition.Crossfade: java.lang.String LOG_TAG> = "Crossfade";

        $r0 = new android.animation.RectEvaluator;

        specialinvoke $r0.<android.animation.RectEvaluator: void <init>()>();

        <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator> = $r0;

        return;
    }
}
