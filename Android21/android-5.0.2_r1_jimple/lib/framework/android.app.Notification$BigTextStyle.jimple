public class android.app.Notification$BigTextStyle extends android.app.Notification$Style
{
    private static final int MAX_LINES;
    private static final int LINES_CONSUMED_BY_ACTIONS;
    private static final int LINES_CONSUMED_BY_SUMMARY;
    private java.lang.CharSequence mBigText;

    public void <init>()
    {
        android.app.Notification$BigTextStyle r0;

        r0 := @this: android.app.Notification$BigTextStyle;

        specialinvoke r0.<android.app.Notification$Style: void <init>()>();

        return;
    }

    public void <init>(android.app.Notification$Builder)
    {
        android.app.Notification$BigTextStyle r0;
        android.app.Notification$Builder r1;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: android.app.Notification$Builder;

        specialinvoke r0.<android.app.Notification$Style: void <init>()>();

        virtualinvoke r0.<android.app.Notification$BigTextStyle: void setBuilder(android.app.Notification$Builder)>(r1);

        return;
    }

    public android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)
    {
        android.app.Notification$BigTextStyle r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.app.Notification$BigTextStyle: void internalSetBigContentTitle(java.lang.CharSequence)>($r2);

        return r0;
    }

    public android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)
    {
        android.app.Notification$BigTextStyle r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.app.Notification$BigTextStyle: void internalSetSummaryText(java.lang.CharSequence)>($r2);

        return r0;
    }

    public android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)
    {
        android.app.Notification$BigTextStyle r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$BigTextStyle: java.lang.CharSequence mBigText> = $r2;

        return r0;
    }

    public void addExtras(android.os.Bundle)
    {
        android.app.Notification$BigTextStyle r0;
        android.os.Bundle r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Notification$Style: void addExtras(android.os.Bundle)>(r1);

        $r2 = r0.<android.app.Notification$BigTextStyle: java.lang.CharSequence mBigText>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.bigText", $r2);

        return;
    }

    protected void restoreFromExtras(android.os.Bundle)
    {
        android.app.Notification$BigTextStyle r0;
        android.os.Bundle r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Notification$Style: void restoreFromExtras(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r1.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.bigText");

        r0.<android.app.Notification$BigTextStyle: java.lang.CharSequence mBigText> = $r2;

        return;
    }

    private android.widget.RemoteViews makeBigContentView()
    {
        android.app.Notification$BigTextStyle r0;
        java.lang.CharSequence r1, $r9, $r11;
        android.widget.RemoteViews r2;
        android.app.Notification$Builder $r3, $r4, $r6, $r7, $r10, $r12, $r13;
        int $i0, $i1;

        r0 := @this: android.app.Notification$BigTextStyle;

        $r3 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        r1 = staticinvoke <android.app.Notification$Builder: java.lang.CharSequence access$1300(android.app.Notification$Builder)>($r3);

        $r4 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        staticinvoke <android.app.Notification$Builder: java.lang.CharSequence access$1302(android.app.Notification$Builder,java.lang.CharSequence)>($r4, null);

        $r6 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $i0 = staticinvoke <android.app.Notification$Builder: int access$1600(android.app.Notification$Builder)>($r6);

        r2 = virtualinvoke r0.<android.app.Notification$BigTextStyle: android.widget.RemoteViews getStandardView(int)>($i0);

        $r7 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        staticinvoke <android.app.Notification$Builder: java.lang.CharSequence access$1302(android.app.Notification$Builder,java.lang.CharSequence)>($r7, r1);

        $r10 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $r9 = r0.<android.app.Notification$BigTextStyle: java.lang.CharSequence mBigText>;

        $r11 = staticinvoke <android.app.Notification$Builder: java.lang.CharSequence access$900(android.app.Notification$Builder,java.lang.CharSequence)>($r10, $r9);

        virtualinvoke r2.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909106, $r11);

        virtualinvoke r2.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909106, 0);

        $i1 = specialinvoke r0.<android.app.Notification$BigTextStyle: int calculateMaxLines()>();

        virtualinvoke r2.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16909106, "setMaxLines", $i1);

        virtualinvoke r2.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908309, 8);

        virtualinvoke r0.<android.app.Notification$BigTextStyle: void applyTopPadding(android.widget.RemoteViews)>(r2);

        $r12 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        staticinvoke <android.app.Notification$Builder: void access$1700(android.app.Notification$Builder,android.widget.RemoteViews)>($r12, r2);

        $r13 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        staticinvoke <android.app.Notification$Builder: boolean access$1400(android.app.Notification$Builder,android.widget.RemoteViews,int)>($r13, r2, 16909107);

        return r2;
    }

    private int calculateMaxLines()
    {
        android.app.Notification$BigTextStyle r0;
        int i0, $i1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.app.Notification$Builder $r1, $r3, $r5;
        java.util.ArrayList $r2;
        java.lang.CharSequence $r4;

        r0 := @this: android.app.Notification$BigTextStyle;

        i0 = 13;

        $r1 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $r2 = staticinvoke <android.app.Notification$Builder: java.util.ArrayList access$1800(android.app.Notification$Builder)>($r1);

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $z2 = r0.<android.app.Notification$BigTextStyle: boolean mSummaryTextSet>;

        if $z2 == 0 goto label3;

        $r4 = r0.<android.app.Notification$BigTextStyle: java.lang.CharSequence mSummaryText>;

        goto label4;

     label3:
        $r3 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $r4 = staticinvoke <android.app.Notification$Builder: java.lang.CharSequence access$800(android.app.Notification$Builder)>($r3);

     label4:
        if $r4 == null goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z1 = $z4;

        if z0 == 0 goto label7;

        i0 = i0 + -3;

     label7:
        if z1 == 0 goto label8;

        i0 = i0 + -2;

     label8:
        $r5 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $z3 = staticinvoke <android.app.Notification$Builder: boolean access$1100(android.app.Notification$Builder)>($r5);

        if $z3 != 0 goto label9;

        i0 = i0 + -1;

     label9:
        return i0;
    }

    public void populateBigContentView(android.app.Notification)
    {
        android.app.Notification$BigTextStyle r0;
        android.app.Notification r1;
        android.app.Notification$Builder $r2;
        android.widget.RemoteViews $r3;

        r0 := @this: android.app.Notification$BigTextStyle;

        r1 := @parameter0: android.app.Notification;

        $r2 = r0.<android.app.Notification$BigTextStyle: android.app.Notification$Builder mBuilder>;

        $r3 = specialinvoke r0.<android.app.Notification$BigTextStyle: android.widget.RemoteViews makeBigContentView()>();

        staticinvoke <android.app.Notification$Builder: void access$1500(android.app.Notification$Builder,android.app.Notification,android.widget.RemoteViews)>($r2, r1, $r3);

        return;
    }

    public static void <clinit>()
    {
        <android.app.Notification$BigTextStyle: int LINES_CONSUMED_BY_SUMMARY> = 2;

        <android.app.Notification$BigTextStyle: int LINES_CONSUMED_BY_ACTIONS> = 3;

        <android.app.Notification$BigTextStyle: int MAX_LINES> = 13;

        return;
    }
}
