class android.animation.AnimatorInflater$PathDataEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
{
    private android.util.PathParser$PathDataNode[] mNodeArray;

    private void <init>()
    {
        android.animation.AnimatorInflater$PathDataEvaluator r0;

        r0 := @this: android.animation.AnimatorInflater$PathDataEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.util.PathParser$PathDataNode[])
    {
        android.animation.AnimatorInflater$PathDataEvaluator r0;
        android.util.PathParser$PathDataNode[] r1;

        r0 := @this: android.animation.AnimatorInflater$PathDataEvaluator;

        r1 := @parameter0: android.util.PathParser$PathDataNode[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray> = r1;

        return;
    }

    public android.util.PathParser$PathDataNode[] evaluate(float, android.util.PathParser$PathDataNode[], android.util.PathParser$PathDataNode[])
    {
        android.animation.AnimatorInflater$PathDataEvaluator r0;
        float f0;
        android.util.PathParser$PathDataNode[] r1, r2, $r3, $r4, $r5, $r6, $r10;
        int i0, $i1;
        boolean $z0, $z1;
        android.util.PathParser$PathDataNode $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: android.animation.AnimatorInflater$PathDataEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: android.util.PathParser$PathDataNode[];

        r2 := @parameter2: android.util.PathParser$PathDataNode[];

        $z0 = staticinvoke <android.util.PathParser: boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[])>(r1, r2);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t interpolate between two incompatible pathData");

        throw $r11;

     label1:
        $r3 = r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray>;

        if $r3 == null goto label2;

        $r10 = r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray>;

        $z1 = staticinvoke <android.util.PathParser: boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[])>($r10, r1);

        if $z1 != 0 goto label3;

     label2:
        $r4 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[])>(r1);

        r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray> = $r4;

     label3:
        i0 = 0;

     label4:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label5;

        $r6 = r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray>;

        $r9 = $r6[i0];

        $r8 = r1[i0];

        $r7 = r2[i0];

        virtualinvoke $r9.<android.util.PathParser$PathDataNode: void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float)>($r8, $r7, f0);

        i0 = i0 + 1;

        goto label4;

     label5:
        $r5 = r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] mNodeArray>;

        return $r5;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        android.animation.AnimatorInflater$PathDataEvaluator r0;
        float f0;
        java.lang.Object r1, r2;
        android.util.PathParser$PathDataNode[] $r3, $r4, $r5;

        r0 := @this: android.animation.AnimatorInflater$PathDataEvaluator;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = (android.util.PathParser$PathDataNode[]) r1;

        $r3 = (android.util.PathParser$PathDataNode[]) r2;

        $r5 = virtualinvoke r0.<android.animation.AnimatorInflater$PathDataEvaluator: android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[])>(f0, $r4, $r3);

        return $r5;
    }
}
