public class android.database.DatabaseUtils$InsertHelper extends java.lang.Object
{
    private final android.database.sqlite.SQLiteDatabase mDb;
    private final java.lang.String mTableName;
    private java.util.HashMap mColumns;
    private java.lang.String mInsertSQL;
    private android.database.sqlite.SQLiteStatement mInsertStatement;
    private android.database.sqlite.SQLiteStatement mReplaceStatement;
    private android.database.sqlite.SQLiteStatement mPreparedStatement;
    public static final int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX;
    public static final int TABLE_INFO_PRAGMA_DEFAULT_INDEX;

    public void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb> = r1;

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName> = r2;

        return;
    }

    private void buildSQL() throws android.database.SQLException
    {
        android.database.DatabaseUtils$InsertHelper r0;
        java.lang.StringBuilder r1, r2, $r7, $r12, $r14, $r15, $r17, $r20;
        int i0, $i1, $i2, $i3;
        android.database.Cursor r3;
        java.lang.String r4, r5, $r9, $r18, $r19, $r22, $r34, $r37;
        java.lang.Throwable r6, $r36;
        android.database.sqlite.SQLiteDatabase $r16;
        java.util.HashMap $r21, $r25;
        boolean $z0;
        java.lang.Integer $r24;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT INTO ");

        $r9 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(128);

        r2 = $r12;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VALUES (");

        i0 = 1;

        r3 = null;

     label01:
        $r16 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA table_info(");

        $r18 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke $r16.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r19, null);

        $r21 = new java.util.HashMap;

        $i1 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r21.<java.util.HashMap: void <init>(int)>($i1);

        r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns> = $r21;

     label02:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label09;

        r4 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(1);

        r5 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r25 = r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r24);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        if r5 != null goto label03;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        goto label04;

     label03:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COALESCE(?, ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label04:
        $i2 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        if i0 != $i2 goto label05;

        $r37 = ") ";

        goto label06;

     label05:
        $r37 = ", ";

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $i3 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        if i0 != $i3 goto label07;

        $r34 = ");";

        goto label08;

     label07:
        $r34 = ", ";

     label08:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        i0 = i0 + 1;

        goto label02;

     label09:
        if r3 == null goto label13;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label13;

     label10:
        $r36 := @caughtexception;

        r6 = $r36;

     label11:
        if r3 == null goto label12;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label12:
        throw r6;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = $r22;

        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private android.database.sqlite.SQLiteStatement getStatement(boolean) throws android.database.SQLException
    {
        android.database.DatabaseUtils$InsertHelper r0;
        boolean z0;
        java.lang.String r1, $r4, $r5, $r10, $r13, $r14;
        android.database.sqlite.SQLiteStatement $r2, $r3, $r7, $r8, $r9, $r16;
        android.database.sqlite.SQLiteDatabase $r6, $r17;
        java.lang.StringBuilder $r11, $r12, $r15;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        $r8 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        if $r8 != null goto label2;

        $r10 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        if $r10 != null goto label1;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: void buildSQL()>();

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT OR REPLACE");

        $r13 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>(6);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        $r16 = virtualinvoke $r17.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>(r1);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = $r16;

     label2:
        $r9 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        return $r9;

     label3:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        if $r2 != null goto label5;

        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        if $r4 != null goto label4;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: void buildSQL()>();

     label4:
        $r6 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        $r5 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL>;

        $r7 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r5);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = $r7;

     label5:
        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        return $r3;
    }

    private long insertInternal(android.content.ContentValues, boolean)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.content.ContentValues r1;
        boolean z0, $z1;
        android.database.sqlite.SQLiteStatement r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r20, $r22;
        int i0;
        java.lang.Throwable r6, $r13;
        android.database.sqlite.SQLiteDatabase $r7, $r9, $r11, $r16, $r24;
        java.util.Set $r8;
        java.lang.Object $r10, $r12, $r14;
        android.database.SQLException $r15, r25;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r23;
        long l2, l3, l4;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.content.ContentValues;

        z0 := @parameter1: boolean;

        $r7 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

     label1:
        r2 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(z0);

        virtualinvoke r2.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        $r8 = virtualinvoke r1.<android.content.ContentValues: java.util.Set valueSet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r12;

        i0 = virtualinvoke r0.<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)>(r5);

        $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>(r2, i0, $r14);

        goto label2;

     label3:
        l2 = virtualinvoke r2.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        $r9 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        l3 = l2;

     label4:
        $r11 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return l3;

     label5:
        $r15 := @caughtexception;

        r25 = $r15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error inserting ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into table  ");

        $r20 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", $r22, r25);

        l4 = -1L;

     label6:
        $r24 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r24.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return l4;

     label7:
        $r13 := @caughtexception;

        r6 = $r13;

     label8:
        $r16 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r16.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r6;

        catch android.database.SQLException from label1 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getColumnIndex(java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        java.lang.String r1, $r11;
        java.lang.Integer r2;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(0);

        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is invalid");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void bind(int, double)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        double d0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindDouble(int,double)>(i0, d0);

        return;
    }

    public void bind(int, float)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        float f0;
        double $d0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        $d0 = (double) f0;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindDouble(int,double)>(i0, $d0);

        return;
    }

    public void bind(int, long)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        long l1;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, l1);

        return;
    }

    public void bind(int, int)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0, i1;
        long $l2;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        $l2 = (long) i1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, $l2);

        return;
    }

    public void bind(int, boolean)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        boolean z0;
        android.database.sqlite.SQLiteStatement $r1;
        long $l1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        if z0 == 0 goto label1;

        $l1 = 1L;

        goto label2;

     label1:
        $l1 = 0L;

     label2:
        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(i0, $l1);

        return;
    }

    public void bindNull(int)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        android.database.sqlite.SQLiteStatement $r1;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        return;
    }

    public void bind(int, byte[])
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        byte[] r1;
        android.database.sqlite.SQLiteStatement $r2, $r3;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        if r1 != null goto label1;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindBlob(int,byte[])>(i0, r1);

     label2:
        return;
    }

    public void bind(int, java.lang.String)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        int i0;
        java.lang.String r1;
        android.database.sqlite.SQLiteStatement $r2, $r3;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(i0, r1);

     label2:
        return;
    }

    public long insert(android.content.ContentValues)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.content.ContentValues r1;
        long $l0;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.content.ContentValues;

        $l0 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)>(r1, 0);

        return $l0;
    }

    public long execute()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        long l0, l1;
        java.lang.Throwable r1, $r11;
        android.database.sqlite.SQLiteStatement $r2, $r3;
        java.lang.IllegalStateException $r4;
        android.database.SQLException $r5, r12;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must prepare this inserter before calling execute");

        throw $r4;

     label1:
        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        l0 = virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

     label2:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        return l0;

     label3:
        $r5 := @caughtexception;

        r12 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error executing InsertHelper with table ");

        $r8 = r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mTableName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DatabaseUtils", $r10, r12);

        l1 = -1L;

     label4:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        return l1;

     label5:
        $r11 := @caughtexception;

        r1 = $r11;

     label6:
        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = null;

        throw r1;

        catch android.database.SQLException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void prepareForInsert()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement $r1, $r2;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r1 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(0);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = $r1;

        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        return;
    }

    public void prepareForReplace()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement $r1, $r2;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r1 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement getStatement(boolean)>(1);

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement> = $r1;

        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mPreparedStatement>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteStatement: void clearBindings()>();

        return;
    }

    public long replace(android.content.ContentValues)
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.content.ContentValues r1;
        long $l0;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        r1 := @parameter0: android.content.ContentValues;

        $l0 = specialinvoke r0.<android.database.DatabaseUtils$InsertHelper: long insertInternal(android.content.ContentValues,boolean)>(r1, 1);

        return $l0;
    }

    public void close()
    {
        android.database.DatabaseUtils$InsertHelper r0;
        android.database.sqlite.SQLiteStatement $r1, $r2, $r3, $r4;

        r0 := @this: android.database.DatabaseUtils$InsertHelper;

        $r1 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        if $r1 == null goto label1;

        $r4 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void close()>();

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mInsertStatement> = null;

     label1:
        $r2 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        if $r2 == null goto label2;

        $r3 = r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void close()>();

        r0.<android.database.DatabaseUtils$InsertHelper: android.database.sqlite.SQLiteStatement mReplaceStatement> = null;

     label2:
        r0.<android.database.DatabaseUtils$InsertHelper: java.lang.String mInsertSQL> = null;

        r0.<android.database.DatabaseUtils$InsertHelper: java.util.HashMap mColumns> = null;

        return;
    }

    public static void <clinit>()
    {
        <android.database.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_DEFAULT_INDEX> = 4;

        <android.database.DatabaseUtils$InsertHelper: int TABLE_INFO_PRAGMA_COLUMNNAME_INDEX> = 1;

        return;
    }
}
