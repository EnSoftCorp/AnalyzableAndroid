class android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener extends java.lang.Object implements android.hardware.camera2.utils.TaskDrainer$DrainListener
{
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;

    private void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDrained()
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        java.lang.Object r1, $r8;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r2, $r6, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r22, $r23, $r31, $r37, $r40, $r48;
        android.hardware.camera2.CameraAccessException r3, $r45;
        java.lang.Throwable r4, r5, $r41, $r47;
        boolean $z0, $z1, $z2, $z4, $z5;
        android.hardware.camera2.impl.CameraDeviceImpl $r7, $r13;
        android.hardware.camera2.utils.TaskSingleDrainer $r12, $r16, $r36;
        android.hardware.camera2.CameraCaptureSession$StateCallback $r19;
        java.lang.StringBuilder $r20, $r24, $r25, $r26, $r27, $r30, $r33, $r35, $r38, $r43, $r44, $r50, $r51;
        java.lang.String $r21, $r28, $r29, $r34, $r39, $r42, $r46, $r49;
        java.lang.IllegalStateException $r32;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$500()>();

        if $z0 == 0 goto label01;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r29 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r31);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onIdleDrained");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraCaptureSession", $r34);

     label01:
        $r6 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r7 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl access$1500(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r6);

        $r8 = $r7.<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.Object mInterfaceLock>;

        r1 = $r8;

        entermonitor $r8;

     label02:
        $r9 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        r2 = $r9;

        entermonitor $r9;

     label03:
        $z1 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$500()>();

        if $z1 == 0 goto label04;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r21 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session drain complete, skip unconfigure: ");

        $r23 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $z4 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$1300(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r23);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraCaptureSession", $r28);

     label04:
        $r10 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $z2 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$1300(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r10);

        if $z2 == 0 goto label07;

        $r17 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r19 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraCaptureSession$StateCallback access$800(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r17);

        $r18 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        virtualinvoke $r19.<android.hardware.camera2.CameraCaptureSession$StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>($r18);

        exitmonitor r2;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $r11 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r12 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$1400(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r11);

        virtualinvoke $r12.<android.hardware.camera2.utils.TaskSingleDrainer: void taskStarted()>();

     label08:
        $r14 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r13 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl access$1500(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r14);

        virtualinvoke $r13.<android.hardware.camera2.impl.CameraDeviceImpl: boolean configureOutputsChecked(java.util.List)>(null);

     label09:
        goto label13;

     label10:
        $r45 := @caughtexception;

        r3 = $r45;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r48 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r49 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r48);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while configuring outputs: ");

        $r46 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CameraCaptureSession", $r46, r3);

        goto label13;

     label11:
        $r32 := @caughtexception;

        $z5 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$500()>();

        if $z5 == 0 goto label12;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r39 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r40);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera was already closed or busy, skipping unconfigure");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraCaptureSession", $r42);

     label12:
        $r37 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r36 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$1400(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r37);

        virtualinvoke $r36.<android.hardware.camera2.utils.TaskSingleDrainer: void taskFinished()>();

     label13:
        $r15 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r16 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$1400(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r15);

        virtualinvoke $r16.<android.hardware.camera2.utils.TaskSingleDrainer: void beginDrain()>();

        exitmonitor r2;

     label14:
        goto label17;

     label15:
        $r41 := @caughtexception;

        r4 = $r41;

        exitmonitor r2;

     label16:
        throw r4;

     label17:
        exitmonitor r1;

     label18:
        goto label21;

     label19:
        $r47 := @caughtexception;

        r5 = $r47;

        exitmonitor r1;

     label20:
        throw r5;

     label21:
        return;

        catch android.hardware.camera2.CameraAccessException from label08 to label09 with label10;
        catch java.lang.IllegalStateException from label08 to label09 with label11;
        catch java.lang.Throwable from label03 to label05 with label15;
        catch java.lang.Throwable from label07 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label02 to label06 with label19;
        catch java.lang.Throwable from label07 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, android.hardware.camera2.impl.CameraCaptureSessionImpl$1)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        specialinvoke r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)>(r1);

        return;
    }
}
