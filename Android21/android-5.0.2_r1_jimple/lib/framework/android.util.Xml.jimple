public class android.util.Xml extends java.lang.Object
{
    public static java.lang.String FEATURE_RELAXED;

    public void <init>()
    {
        android.util.Xml r0;

        r0 := @this: android.util.Xml;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void parse(java.lang.String, org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        java.lang.String r0;
        org.xml.sax.ContentHandler r1;
        org.apache.harmony.xml.ExpatReader r2, $r3;
        org.xml.sax.InputSource $r4;
        java.io.StringReader $r5;
        java.io.IOException $r6, r8;
        java.lang.AssertionError $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.xml.sax.ContentHandler;

     label1:
        $r3 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r2 = $r3;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        $r4 = new org.xml.sax.InputSource;

        $r5 = new java.io.StringReader;

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>(r0);

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r5);

        interfaceinvoke r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);

        throw $r7;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void parse(java.io.Reader, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.io.Reader r0;
        org.xml.sax.ContentHandler r1;
        org.apache.harmony.xml.ExpatReader r2, $r3;
        org.xml.sax.InputSource $r4;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: org.xml.sax.ContentHandler;

        $r3 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r2 = $r3;

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        $r4 = new org.xml.sax.InputSource;

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r0);

        interfaceinvoke r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

        return;
    }

    public static void parse(java.io.InputStream, android.util.Xml$Encoding, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.io.InputStream r0;
        android.util.Xml$Encoding r1;
        org.xml.sax.ContentHandler r2;
        org.apache.harmony.xml.ExpatReader r3, $r5;
        org.xml.sax.InputSource r4, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: android.util.Xml$Encoding;

        r2 := @parameter2: org.xml.sax.ContentHandler;

        $r5 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r5.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r3 = $r5;

        interfaceinvoke r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r2);

        $r6 = new org.xml.sax.InputSource;

        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r0);

        r4 = $r6;

        $r7 = r1.<android.util.Xml$Encoding: java.lang.String expatName>;

        virtualinvoke r4.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>($r7);

        interfaceinvoke r3.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r4);

        return;
    }

    public static org.xmlpull.v1.XmlPullParser newPullParser()
    {
        org.kxml2.io.KXmlParser r0, $r1;
        org.xmlpull.v1.XmlPullParserException $r2;
        java.lang.AssertionError $r3;

     label1:
        $r1 = new org.kxml2.io.KXmlParser;

        specialinvoke $r1.<org.kxml2.io.KXmlParser: void <init>()>();

        r0 = $r1;

        virtualinvoke r0.<org.kxml2.io.KXmlParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-docdecl", 1);

        virtualinvoke r0.<org.kxml2.io.KXmlParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", 1);

     label2:
        return r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public static org.xmlpull.v1.XmlSerializer newSerializer()
    {
        org.xmlpull.v1.XmlPullParserException r0, $r3;
        org.xmlpull.v1.XmlPullParserFactory $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        java.lang.AssertionError $r4;

     label1:
        $r1 = <android.util.Xml$XmlSerializerFactory: org.xmlpull.v1.XmlPullParserFactory instance>;

        $r2 = virtualinvoke $r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0);

        throw $r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public static android.util.Xml$Encoding findEncodingByName(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, $r4;
        android.util.Xml$Encoding[] r1;
        int i0, i1;
        android.util.Xml$Encoding r2, $r5;
        java.io.UnsupportedEncodingException $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = <android.util.Xml$Encoding: android.util.Xml$Encoding UTF_8>;

        return $r5;

     label1:
        r1 = staticinvoke <android.util.Xml$Encoding: android.util.Xml$Encoding[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $r4 = r2.<android.util.Xml$Encoding: java.lang.String expatName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = new java.io.UnsupportedEncodingException;

        specialinvoke $r3.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r0);

        throw $r3;
    }

    public static android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        boolean $z0;
        android.util.AttributeSet $r1;
        android.util.XmlPullAttributes r2;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $z0 = r0 instanceof android.util.AttributeSet;

        if $z0 == 0 goto label1;

        $r1 = (android.util.AttributeSet) r0;

        goto label2;

     label1:
        r2 = new android.util.XmlPullAttributes;

        $r1 = r2;

        specialinvoke r2.<android.util.XmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser)>(r0);

     label2:
        return $r1;
    }

    static void <clinit>()
    {
        <android.util.Xml: java.lang.String FEATURE_RELAXED> = "http://xmlpull.org/v1/doc/features.html#relaxed";

        return;
    }
}
