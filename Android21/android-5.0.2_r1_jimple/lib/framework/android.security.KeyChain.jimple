public final class android.security.KeyChain extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String ACCOUNT_TYPE;
    private static final java.lang.String KEYCHAIN_PACKAGE;
    private static final java.lang.String ACTION_CHOOSER;
    private static final java.lang.String CERT_INSTALLER_PACKAGE;
    public static final java.lang.String EXTRA_RESPONSE;
    public static final java.lang.String EXTRA_HOST;
    public static final java.lang.String EXTRA_PORT;
    public static final java.lang.String EXTRA_ALIAS;
    public static final java.lang.String EXTRA_SENDER;
    private static final java.lang.String ACTION_INSTALL;
    public static final java.lang.String EXTRA_NAME;
    public static final java.lang.String EXTRA_CERTIFICATE;
    public static final java.lang.String EXTRA_PKCS12;
    public static final java.lang.String ACTION_STORAGE_CHANGED;

    public void <init>()
    {
        android.security.KeyChain r0;

        r0 := @this: android.security.KeyChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.Intent createInstallIntent()
    {
        android.content.Intent r0, $r1;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.credentials.INSTALL");

        r0 = $r1;

        virtualinvoke r0.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("com.android.certinstaller", "com.android.certinstaller.CertInstallerMain");

        return r0;
    }

    public static void choosePrivateKeyAlias(android.app.Activity, android.security.KeyChainAliasCallback, java.lang.String[], java.security.Principal[], java.lang.String, int, java.lang.String)
    {
        android.app.Activity r0;
        android.security.KeyChainAliasCallback r1;
        java.lang.String[] r2;
        java.security.Principal[] r3;
        java.lang.String r4, r5;
        int i0;
        android.content.Intent r6, $r7, $r14;
        android.security.KeyChain$AliasResponse $r9;
        android.app.PendingIntent $r15;
        java.lang.NullPointerException $r16, $r18;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.security.KeyChainAliasCallback;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.security.Principal[];

        r4 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        if r0 != null goto label1;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity == null");

        throw $r18;

     label1:
        if r1 != null goto label2;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("response == null");

        throw $r16;

     label2:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("com.android.keychain.CHOOSER");

        r6 = $r7;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.keychain");

        $r9 = new android.security.KeyChain$AliasResponse;

        specialinvoke $r9.<android.security.KeyChain$AliasResponse: void <init>(android.security.KeyChainAliasCallback,android.security.KeyChain$1)>(r1, null);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("response", $r9);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("host", r4);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("port", i0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("alias", r5);

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>()>();

        $r15 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, $r14, 0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("sender", $r15);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r6);

        return;
    }

    public static java.security.PrivateKey getPrivateKey(android.content.Context, java.lang.String) throws android.security.KeyChainException, java.lang.InterruptedException
    {
        android.content.Context r0;
        java.lang.String r1, r4;
        android.security.KeyChain$KeyChainConnection r2;
        android.security.IKeyChainService r3;
        com.android.org.conscrypt.OpenSSLEngine r5;
        java.security.PrivateKey r6;
        java.lang.Throwable r7, $r11;
        android.security.KeyChainException $r8, $r12, $r13, $r15;
        java.lang.NullPointerException $r9;
        java.security.InvalidKeyException $r10, r19;
        android.os.RemoteException $r14, r17;
        java.lang.RuntimeException $r16, r18;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r9;

     label1:
        r2 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bind(android.content.Context)>(r0);

     label2:
        r3 = virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        r4 = interfaceinvoke r3.<android.security.IKeyChainService: java.lang.String requestPrivateKey(java.lang.String)>(r1);

        if r4 != null goto label3;

        $r8 = new android.security.KeyChainException;

        specialinvoke $r8.<android.security.KeyChainException: void <init>(java.lang.String)>("keystore had a problem");

        throw $r8;

     label3:
        r5 = staticinvoke <com.android.org.conscrypt.OpenSSLEngine: com.android.org.conscrypt.OpenSSLEngine getInstance(java.lang.String)>("keystore");

        r6 = virtualinvoke r5.<com.android.org.conscrypt.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)>(r4);

     label4:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        return r6;

     label5:
        $r14 := @caughtexception;

        r17 = $r14;

        $r13 = new android.security.KeyChainException;

        specialinvoke $r13.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r17);

        throw $r13;

     label6:
        $r16 := @caughtexception;

        r18 = $r16;

        $r15 = new android.security.KeyChainException;

        specialinvoke $r15.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r18);

        throw $r15;

     label7:
        $r10 := @caughtexception;

        r19 = $r10;

        $r12 = new android.security.KeyChainException;

        specialinvoke $r12.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r19);

        throw $r12;

     label8:
        $r11 := @caughtexception;

        r7 = $r11;

     label9:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        throw r7;

        catch android.os.RemoteException from label2 to label4 with label5;
        catch java.lang.RuntimeException from label2 to label4 with label6;
        catch java.security.InvalidKeyException from label2 to label4 with label7;
        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label5 to label9 with label8;
    }

    public static java.security.cert.X509Certificate[] getCertificateChain(android.content.Context, java.lang.String) throws android.security.KeyChainException, java.lang.InterruptedException
    {
        android.content.Context r0;
        java.lang.String r1;
        android.security.KeyChain$KeyChainConnection r2;
        android.security.IKeyChainService r3;
        byte[] r4;
        java.util.List r5;
        java.security.cert.X509Certificate[] r6, $r11;
        java.lang.Throwable r7, $r16;
        com.android.org.conscrypt.TrustedCertificateStore $r8, r20;
        java.security.cert.X509Certificate $r9;
        int $i0;
        java.lang.Object[] $r10;
        java.security.cert.CertificateException $r12, r21;
        java.lang.NullPointerException $r13;
        java.lang.RuntimeException $r14, r23;
        android.security.KeyChainException $r15, $r17, $r18;
        android.os.RemoteException $r19, r22;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r13;

     label01:
        r2 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bind(android.content.Context)>(r0);

     label02:
        r3 = virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>();

        r4 = interfaceinvoke r3.<android.security.IKeyChainService: byte[] getCertificate(java.lang.String)>(r1);

        if r4 != null goto label04;

     label03:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        return null;

     label04:
        $r8 = new com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke $r8.<com.android.org.conscrypt.TrustedCertificateStore: void <init>()>();

        r20 = $r8;

        $r9 = staticinvoke <android.security.KeyChain: java.security.cert.X509Certificate toCertificate(byte[])>(r4);

        r5 = virtualinvoke r20.<com.android.org.conscrypt.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)>($r9);

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $r11 = newarray (java.security.cert.X509Certificate)[$i0];

        $r10 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        r6 = (java.security.cert.X509Certificate[]) $r10;

     label05:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        return r6;

     label06:
        $r12 := @caughtexception;

        r21 = $r12;

        $r15 = new android.security.KeyChainException;

        specialinvoke $r15.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r21);

        throw $r15;

     label07:
        $r19 := @caughtexception;

        r22 = $r19;

        $r18 = new android.security.KeyChainException;

        specialinvoke $r18.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r22);

        throw $r18;

     label08:
        $r14 := @caughtexception;

        r23 = $r14;

        $r17 = new android.security.KeyChainException;

        specialinvoke $r17.<android.security.KeyChainException: void <init>(java.lang.Throwable)>(r23);

        throw $r17;

     label09:
        $r16 := @caughtexception;

        r7 = $r16;

     label10:
        virtualinvoke r2.<android.security.KeyChain$KeyChainConnection: void close()>();

        throw r7;

        catch java.security.cert.CertificateException from label02 to label03 with label06;
        catch java.security.cert.CertificateException from label04 to label05 with label06;
        catch android.os.RemoteException from label02 to label03 with label07;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.RuntimeException from label02 to label03 with label08;
        catch java.lang.RuntimeException from label04 to label05 with label08;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label10 with label09;
    }

    public static boolean isKeyAlgorithmSupported(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4, $r5;
        java.util.Locale $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r3 = "DSA";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r4 = "EC";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r5 = "RSA";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static boolean isBoundKeyAlgorithm(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        android.security.KeyStore $r1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        $z1 = virtualinvoke $r1.<android.security.KeyStore: boolean isHardwareBacked(java.lang.String)>(r0);

        return $z1;
    }

    public static java.security.cert.X509Certificate toCertificate(byte[])
    {
        byte[] r0;
        java.security.cert.CertificateFactory r1;
        java.security.cert.Certificate r2;
        java.io.ByteArrayInputStream $r3;
        java.security.cert.X509Certificate $r4;
        java.lang.IllegalArgumentException $r5;
        java.security.cert.CertificateException $r6, r8;
        java.lang.AssertionError $r7;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bytes == null");

        throw $r5;

     label1:
        r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r2 = virtualinvoke r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3);

        $r4 = (java.security.cert.X509Certificate) r2;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);

        throw $r7;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public static android.security.KeyChain$KeyChainConnection bind(android.content.Context) throws java.lang.InterruptedException
    {
        android.content.Context r0;
        android.os.UserHandle $r1;
        android.security.KeyChain$KeyChainConnection $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r2 = staticinvoke <android.security.KeyChain: android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle)>(r0, $r1);

        return $r2;
    }

    public static android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context, android.os.UserHandle) throws java.lang.InterruptedException
    {
        android.content.Context r0;
        android.os.UserHandle r1;
        java.util.concurrent.LinkedBlockingQueue r2, $r6;
        android.security.KeyChain$1 r3, $r7;
        android.content.Intent r4, $r8;
        android.content.ComponentName r5;
        boolean z0;
        java.lang.Class $r9;
        java.lang.String $r10;
        android.content.pm.PackageManager $r11;
        java.lang.Object $r13;
        android.security.KeyChain$KeyChainConnection $r14;
        java.lang.AssertionError $r15;
        android.security.IKeyChainService $r16;
        java.lang.NullPointerException $r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.UserHandle;

        if r0 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("context == null");

        throw $r17;

     label1:
        staticinvoke <android.security.KeyChain: void ensureNotOnMainThread(android.content.Context)>(r0);

        $r6 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1);

        r2 = $r6;

        $r7 = new android.security.KeyChain$1;

        specialinvoke $r7.<android.security.KeyChain$1: void <init>(java.util.concurrent.BlockingQueue)>(r2);

        r3 = $r7;

        $r8 = new android.content.Intent;

        $r9 = class "android/security/IKeyChainService";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>($r10);

        r4 = $r8;

        $r11 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r11, 0);

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r5);

        z0 = virtualinvoke r0.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r4, r3, 1, r1);

        if z0 != 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("could not bind to KeyChainService");

        throw $r15;

     label2:
        $r14 = new android.security.KeyChain$KeyChainConnection;

        $r13 = interfaceinvoke r2.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        $r16 = (android.security.IKeyChainService) $r13;

        specialinvoke $r14.<android.security.KeyChain$KeyChainConnection: void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService,android.security.KeyChain$1)>(r0, r3, $r16, null);

        return $r14;
    }

    private static void ensureNotOnMainThread(android.content.Context)
    {
        android.content.Context r0;
        android.os.Looper r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.content.Context: android.os.Looper getMainLooper()>();

        if r1 != $r2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling this from your main thread can lead to deadlock");

        throw $r3;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.security.KeyChain: java.lang.String ACTION_STORAGE_CHANGED> = "android.security.STORAGE_CHANGED";

        <android.security.KeyChain: java.lang.String EXTRA_PKCS12> = "PKCS12";

        <android.security.KeyChain: java.lang.String EXTRA_CERTIFICATE> = "CERT";

        <android.security.KeyChain: java.lang.String EXTRA_NAME> = "name";

        <android.security.KeyChain: java.lang.String ACTION_INSTALL> = "android.credentials.INSTALL";

        <android.security.KeyChain: java.lang.String EXTRA_SENDER> = "sender";

        <android.security.KeyChain: java.lang.String EXTRA_ALIAS> = "alias";

        <android.security.KeyChain: java.lang.String EXTRA_PORT> = "port";

        <android.security.KeyChain: java.lang.String EXTRA_HOST> = "host";

        <android.security.KeyChain: java.lang.String EXTRA_RESPONSE> = "response";

        <android.security.KeyChain: java.lang.String CERT_INSTALLER_PACKAGE> = "com.android.certinstaller";

        <android.security.KeyChain: java.lang.String ACTION_CHOOSER> = "com.android.keychain.CHOOSER";

        <android.security.KeyChain: java.lang.String KEYCHAIN_PACKAGE> = "com.android.keychain";

        <android.security.KeyChain: java.lang.String ACCOUNT_TYPE> = "com.android.keychain";

        <android.security.KeyChain: java.lang.String TAG> = "KeyChain";

        return;
    }
}
