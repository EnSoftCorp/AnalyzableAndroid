public abstract class android.database.AbstractWindowedCursor extends android.database.AbstractCursor
{
    protected android.database.CursorWindow mWindow;

    public void <init>()
    {
        android.database.AbstractWindowedCursor r0;

        r0 := @this: android.database.AbstractWindowedCursor;

        specialinvoke r0.<android.database.AbstractCursor: void <init>()>();

        return;
    }

    public byte[] getBlob(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        byte[] $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $r2 = virtualinvoke $r1.<android.database.CursorWindow: byte[] getBlob(int,int)>($i1, i0);

        return $r2;
    }

    public java.lang.String getString(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        java.lang.String $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $r2 = virtualinvoke $r1.<android.database.CursorWindow: java.lang.String getString(int,int)>($i1, i0);

        return $r2;
    }

    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CharArrayBuffer r1;
        android.database.CursorWindow $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.CharArrayBuffer;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r2 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        virtualinvoke $r2.<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>($i1, i0, r1);

        return;
    }

    public short getShort(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        short $s2;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $s2 = virtualinvoke $r1.<android.database.CursorWindow: short getShort(int,int)>($i1, i0);

        return $s2;
    }

    public int getInt(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1, $i2;
        android.database.CursorWindow $r1;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $i2 = virtualinvoke $r1.<android.database.CursorWindow: int getInt(int,int)>($i1, i0);

        return $i2;
    }

    public long getLong(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        long $l2;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $l2 = virtualinvoke $r1.<android.database.CursorWindow: long getLong(int,int)>($i1, i0);

        return $l2;
    }

    public float getFloat(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        float $f0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $f0 = virtualinvoke $r1.<android.database.CursorWindow: float getFloat(int,int)>($i1, i0);

        return $f0;
    }

    public double getDouble(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        android.database.CursorWindow $r1;
        double $d0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $d0 = virtualinvoke $r1.<android.database.CursorWindow: double getDouble(int,int)>($i1, i0);

        return $d0;
    }

    public boolean isNull(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1, $i2;
        android.database.CursorWindow $r1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $i2 = virtualinvoke $r1.<android.database.CursorWindow: int getType(int,int)>($i1, i0);

        if $i2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isBlob(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.database.AbstractWindowedCursor: int getType(int)>(i0);

        if $i1 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isString(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.database.AbstractWindowedCursor: int getType(int)>(i0);

        if $i1 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLong(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.database.AbstractWindowedCursor: int getType(int)>(i0);

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFloat(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.database.AbstractWindowedCursor: int getType(int)>(i0);

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getType(int)
    {
        android.database.AbstractWindowedCursor r0;
        int i0, $i1, $i2;
        android.database.CursorWindow $r1;

        r0 := @this: android.database.AbstractWindowedCursor;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        $i1 = r0.<android.database.AbstractWindowedCursor: int mPos>;

        $i2 = virtualinvoke $r1.<android.database.CursorWindow: int getType(int,int)>($i1, i0);

        return $i2;
    }

    protected void checkPosition()
    {
        android.database.AbstractWindowedCursor r0;
        android.database.CursorWindow $r1;
        android.database.StaleDataException $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        specialinvoke r0.<android.database.AbstractCursor: void checkPosition()>();

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r1 != null goto label1;

        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Attempting to access a closed CursorWindow.Most probable cause: cursor is deactivated prior to calling this method.");

        throw $r2;

     label1:
        return;
    }

    public android.database.CursorWindow getWindow()
    {
        android.database.AbstractWindowedCursor r0;
        android.database.CursorWindow $r1;

        r0 := @this: android.database.AbstractWindowedCursor;

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        return $r1;
    }

    public void setWindow(android.database.CursorWindow)
    {
        android.database.AbstractWindowedCursor r0;
        android.database.CursorWindow r1, $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        r1 := @parameter0: android.database.CursorWindow;

        $r2 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if r1 == $r2 goto label1;

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void closeWindow()>();

        r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow> = r1;

     label1:
        return;
    }

    public boolean hasWindow()
    {
        android.database.AbstractWindowedCursor r0;
        android.database.CursorWindow $r1;
        boolean $z0;

        r0 := @this: android.database.AbstractWindowedCursor;

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void closeWindow()
    {
        android.database.AbstractWindowedCursor r0;
        android.database.CursorWindow $r1, $r2;

        r0 := @this: android.database.AbstractWindowedCursor;

        $r1 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r1 == null goto label1;

        $r2 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        virtualinvoke $r2.<android.database.CursorWindow: void close()>();

        r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow> = null;

     label1:
        return;
    }

    protected void clearOrCreateWindow(java.lang.String)
    {
        android.database.AbstractWindowedCursor r0;
        java.lang.String r1;
        android.database.CursorWindow $r2, $r3, $r4;

        r0 := @this: android.database.AbstractWindowedCursor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        if $r2 != null goto label1;

        $r4 = new android.database.CursorWindow;

        specialinvoke $r4.<android.database.CursorWindow: void <init>(java.lang.String)>(r1);

        r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow> = $r4;

        goto label2;

     label1:
        $r3 = r0.<android.database.AbstractWindowedCursor: android.database.CursorWindow mWindow>;

        virtualinvoke $r3.<android.database.CursorWindow: void clear()>();

     label2:
        return;
    }

    protected void onDeactivateOrClose()
    {
        android.database.AbstractWindowedCursor r0;

        r0 := @this: android.database.AbstractWindowedCursor;

        specialinvoke r0.<android.database.AbstractCursor: void onDeactivateOrClose()>();

        virtualinvoke r0.<android.database.AbstractWindowedCursor: void closeWindow()>();

        return;
    }
}
