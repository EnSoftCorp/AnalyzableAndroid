class android.print.IPrintSpooler$Stub$Proxy extends java.lang.Object implements android.print.IPrintSpooler
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        $r1 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.print.IPrintSpooler$Stub$Proxy r0;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        return "android.print.IPrintSpooler";
    }

    public void removeObsoletePrintJobs() throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        $r3 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void getPrintJobInfos(android.print.IPrintSpoolerCallbacks, android.content.ComponentName, int, int, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.IPrintSpoolerCallbacks r1;
        android.content.ComponentName r2;
        int i0, i1, i2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.IPrintSpoolerCallbacks;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r5 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void getPrintJobInfo(android.print.PrintJobId, android.print.IPrintSpoolerCallbacks, int, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobId r1;
        android.print.IPrintSpoolerCallbacks r2;
        int i0, i1;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.PrintJobId;

        r2 := @parameter1: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        if r2 == null goto label4;

        $r6 = interfaceinvoke r2.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

        goto label5;

     label4:
        $r6 = null;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, null, 1);

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void createPrintJob(android.print.PrintJobInfo) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobInfo r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.PrintJobInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setPrintJobState(android.print.PrintJobId, int, java.lang.String, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobId r1;
        int i0, i1;
        java.lang.String r2;
        android.print.IPrintSpoolerCallbacks r3;
        android.os.Parcel r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.print.IPrintSpoolerCallbacks;

        i1 := @parameter4: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label3;

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        if r3 == null goto label4;

        $r7 = interfaceinvoke r3.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

        goto label5;

     label4:
        $r7 = null;

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r4, null, 1);

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setPrintJobTag(android.print.PrintJobId, java.lang.String, android.print.IPrintSpoolerCallbacks, int) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobId r1;
        java.lang.String r2;
        android.print.IPrintSpoolerCallbacks r3;
        int i0;
        android.os.Parcel r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.PrintJobId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.print.IPrintSpoolerCallbacks;

        i0 := @parameter3: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label3;

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        if r3 == null goto label4;

        $r7 = interfaceinvoke r3.<android.print.IPrintSpoolerCallbacks: android.os.IBinder asBinder()>();

        goto label5;

     label4:
        $r7 = null;

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r4, null, 1);

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void writePrintJobData(android.os.ParcelFileDescriptor, android.print.PrintJobId) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.os.ParcelFileDescriptor r1;
        android.print.PrintJobId r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.print.PrintJobId;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r5 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, null, 1);

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r6 := @caughtexception;

        r4 = $r6;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setClient(android.print.IPrintSpoolerClient) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.IPrintSpoolerClient r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.IPrintSpoolerClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.print.IPrintSpoolerClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setPrintJobCancelling(android.print.PrintJobId, boolean) throws android.os.RemoteException
    {
        android.print.IPrintSpooler$Stub$Proxy r0;
        android.print.PrintJobId r1;
        boolean z0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b0;

        r0 := @this: android.print.IPrintSpooler$Stub$Proxy;

        r1 := @parameter0: android.print.PrintJobId;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.print.IPrintSpooler");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        if z0 == 0 goto label4;

        $b0 = 1;

        goto label5;

     label4:
        $b0 = 0;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.print.IPrintSpooler$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
