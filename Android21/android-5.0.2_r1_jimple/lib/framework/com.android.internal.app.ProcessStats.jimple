public final class com.android.internal.app.ProcessStats extends java.lang.Object implements android.os.Parcelable
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final boolean DEBUG_PARCEL;
    public static final java.lang.String SERVICE_NAME;
    public static long COMMIT_PERIOD;
    public static long COMMIT_UPTIME_PERIOD;
    public static final int STATE_NOTHING;
    public static final int STATE_PERSISTENT;
    public static final int STATE_TOP;
    public static final int STATE_IMPORTANT_FOREGROUND;
    public static final int STATE_IMPORTANT_BACKGROUND;
    public static final int STATE_BACKUP;
    public static final int STATE_HEAVY_WEIGHT;
    public static final int STATE_SERVICE;
    public static final int STATE_SERVICE_RESTARTING;
    public static final int STATE_RECEIVER;
    public static final int STATE_HOME;
    public static final int STATE_LAST_ACTIVITY;
    public static final int STATE_CACHED_ACTIVITY;
    public static final int STATE_CACHED_ACTIVITY_CLIENT;
    public static final int STATE_CACHED_EMPTY;
    public static final int STATE_COUNT;
    public static final int PSS_SAMPLE_COUNT;
    public static final int PSS_MINIMUM;
    public static final int PSS_AVERAGE;
    public static final int PSS_MAXIMUM;
    public static final int PSS_USS_MINIMUM;
    public static final int PSS_USS_AVERAGE;
    public static final int PSS_USS_MAXIMUM;
    public static final int PSS_COUNT;
    public static final int SYS_MEM_USAGE_SAMPLE_COUNT;
    public static final int SYS_MEM_USAGE_CACHED_MINIMUM;
    public static final int SYS_MEM_USAGE_CACHED_AVERAGE;
    public static final int SYS_MEM_USAGE_CACHED_MAXIMUM;
    public static final int SYS_MEM_USAGE_FREE_MINIMUM;
    public static final int SYS_MEM_USAGE_FREE_AVERAGE;
    public static final int SYS_MEM_USAGE_FREE_MAXIMUM;
    public static final int SYS_MEM_USAGE_ZRAM_MINIMUM;
    public static final int SYS_MEM_USAGE_ZRAM_AVERAGE;
    public static final int SYS_MEM_USAGE_ZRAM_MAXIMUM;
    public static final int SYS_MEM_USAGE_KERNEL_MINIMUM;
    public static final int SYS_MEM_USAGE_KERNEL_AVERAGE;
    public static final int SYS_MEM_USAGE_KERNEL_MAXIMUM;
    public static final int SYS_MEM_USAGE_NATIVE_MINIMUM;
    public static final int SYS_MEM_USAGE_NATIVE_AVERAGE;
    public static final int SYS_MEM_USAGE_NATIVE_MAXIMUM;
    public static final int SYS_MEM_USAGE_COUNT;
    public static final int ADJ_NOTHING;
    public static final int ADJ_MEM_FACTOR_NORMAL;
    public static final int ADJ_MEM_FACTOR_MODERATE;
    public static final int ADJ_MEM_FACTOR_LOW;
    public static final int ADJ_MEM_FACTOR_CRITICAL;
    public static final int ADJ_MEM_FACTOR_COUNT;
    public static final int ADJ_SCREEN_MOD;
    public static final int ADJ_SCREEN_OFF;
    public static final int ADJ_SCREEN_ON;
    public static final int ADJ_COUNT;
    public static final int FLAG_COMPLETE;
    public static final int FLAG_SHUTDOWN;
    public static final int FLAG_SYSPROPS;
    public static final int[] ALL_MEM_ADJ;
    public static final int[] ALL_SCREEN_ADJ;
    public static final int[] NON_CACHED_PROC_STATES;
    public static final int[] BACKGROUND_PROC_STATES;
    static final int[] PROCESS_STATE_TO_STATE;
    public static final int[] ALL_PROC_STATES;
    static final java.lang.String[] STATE_NAMES;
    public static final java.lang.String[] ADJ_SCREEN_NAMES_CSV;
    public static final java.lang.String[] ADJ_MEM_NAMES_CSV;
    public static final java.lang.String[] STATE_NAMES_CSV;
    static final java.lang.String[] ADJ_SCREEN_TAGS;
    static final java.lang.String[] ADJ_MEM_TAGS;
    static final java.lang.String[] STATE_TAGS;
    static final java.lang.String CSV_SEP;
    private static final int PARCEL_VERSION;
    private static final int MAGIC;
    static int OFFSET_TYPE_SHIFT;
    static int OFFSET_TYPE_MASK;
    static int OFFSET_ARRAY_SHIFT;
    static int OFFSET_ARRAY_MASK;
    static int OFFSET_INDEX_SHIFT;
    static int OFFSET_INDEX_MASK;
    public java.lang.String mReadError;
    public java.lang.String mTimePeriodStartClockStr;
    public int mFlags;
    public final com.android.internal.app.ProcessMap mPackages;
    public final com.android.internal.app.ProcessMap mProcesses;
    public final long[] mMemFactorDurations;
    public int mMemFactor;
    public long mStartTime;
    public int[] mSysMemUsageTable;
    public int mSysMemUsageTableSize;
    public final long[] mSysMemUsageArgs;
    public long mTimePeriodStartClock;
    public long mTimePeriodStartRealtime;
    public long mTimePeriodEndRealtime;
    public long mTimePeriodStartUptime;
    public long mTimePeriodEndUptime;
    java.lang.String mRuntime;
    boolean mRunning;
    static final int LONGS_SIZE;
    final java.util.ArrayList mLongs;
    int mNextLong;
    int[] mAddLongTable;
    int mAddLongTableSize;
    android.util.ArrayMap mCommonStringToIndex;
    java.util.ArrayList mIndexToCommonString;
    public static final android.os.Parcelable$Creator CREATOR;
    static final int[] BAD_TABLE;

    public void <init>(boolean)
    {
        com.android.internal.app.ProcessStats r0;
        boolean z0;
        com.android.internal.app.ProcessMap $r1, $r2;
        long[] $r3, $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.android.internal.app.ProcessStats;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.internal.app.ProcessMap;

        specialinvoke $r1.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages> = $r1;

        $r2 = new com.android.internal.app.ProcessMap;

        specialinvoke $r2.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses> = $r2;

        $r3 = newarray (long)[8];

        r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations> = $r3;

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable> = null;

        r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize> = 0;

        $r4 = newarray (long)[16];

        r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs> = $r5;

        r0.<com.android.internal.app.ProcessStats: boolean mRunning> = z0;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void reset()>();

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        com.android.internal.app.ProcessMap $r2, $r3;
        long[] $r4, $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.internal.app.ProcessMap;

        specialinvoke $r2.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages> = $r2;

        $r3 = new com.android.internal.app.ProcessMap;

        specialinvoke $r3.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses> = $r3;

        $r4 = newarray (long)[8];

        r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations> = $r4;

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable> = null;

        r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize> = 0;

        $r5 = newarray (long)[16];

        r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs> = $r6;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void reset()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public void add(com.android.internal.app.ProcessStats)
    {
        com.android.internal.app.ProcessStats r0, r1;
        android.util.ArrayMap r2, $r28, $r36, $r37, $r38, $r43, $r46, $r53, r56;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i12, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i39, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50, i51, i52;
        java.lang.String r3, $r13, $r20, $r21, $r23, $r26, $r27, $r29, $r34, $r44, $r45, $r48, $r49, $r51;
        android.util.SparseArray r4, r5, r57;
        com.android.internal.app.ProcessStats$PackageState r6, r9, r60;
        com.android.internal.app.ProcessStats$ProcessState r7, r8, $r19, $r42, $r50, r58, r59;
        long l8, $l11, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l26, $l37, $l38, $l40;
        com.android.internal.app.ProcessMap $r10, $r11, $r24, $r30;
        byte $b13;
        int[] $r12;
        java.lang.Object $r14, $r18, $r22, $r25, $r32, $r33, $r39, $r40, $r41, $r47;
        java.util.ArrayList $r15;
        long[] $r16, $r17, r61;
        boolean $z0;
        com.android.internal.app.ProcessStats$ServiceState r54, r55;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: com.android.internal.app.ProcessStats;

        $r10 = r1.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r2 = virtualinvoke $r10.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i0 = 0;

     label01:
        $i9 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        if i0 >= $i9 goto label12;

        $r33 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        r3 = (java.lang.String) $r33;

        $r32 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r4 = (android.util.SparseArray) $r32;

        i1 = 0;

     label02:
        $i43 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        if i1 >= $i43 goto label11;

        i2 = virtualinvoke r4.<android.util.SparseArray: int keyAt(int)>(i1);

        $r39 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r5 = (android.util.SparseArray) $r39;

        i3 = 0;

     label03:
        $i44 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if i3 >= $i44 goto label10;

        i4 = virtualinvoke r5.<android.util.SparseArray: int keyAt(int)>(i3);

        $r40 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r6 = (com.android.internal.app.ProcessStats$PackageState) $r40;

        $r37 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i5 = virtualinvoke $r37.<android.util.ArrayMap: int size()>();

        $r38 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i6 = virtualinvoke $r38.<android.util.ArrayMap: int size()>();

        i7 = 0;

     label04:
        if i7 >= i5 goto label07;

        $r43 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r41 = virtualinvoke $r43.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i7);

        r7 = (com.android.internal.app.ProcessStats$ProcessState) $r41;

        $r42 = r7.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r42 == r7 goto label06;

        $r51 = r7.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        r8 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>(r3, i2, i4, $r51);

        $r50 = r8.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r50 != r8 goto label05;

        r8.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage> = 1;

        l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r9 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,int)>(r3, i2, i4);

        $r49 = r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r8 = virtualinvoke r8.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState clone(java.lang.String,long)>($r49, l8);

        $r53 = r9.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r48 = r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r53.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r8);

     label05:
        virtualinvoke r8.<com.android.internal.app.ProcessStats$ProcessState: void add(com.android.internal.app.ProcessStats$ProcessState)>(r7);

     label06:
        i7 = i7 + 1;

        goto label04;

     label07:
        i45 = 0;

     label08:
        if i45 >= i6 goto label09;

        $r46 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r47 = virtualinvoke $r46.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i45);

        r54 = (com.android.internal.app.ProcessStats$ServiceState) $r47;

        $r45 = r54.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        $r44 = r54.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mName>;

        r55 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>(r3, i2, i4, $r45, $r44);

        virtualinvoke r55.<com.android.internal.app.ProcessStats$ServiceState: void add(com.android.internal.app.ProcessStats$ServiceState)>(r54);

        i45 = i45 + 1;

        goto label08;

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        i1 = i1 + 1;

        goto label02;

     label11:
        i0 = i0 + 1;

        goto label01;

     label12:
        $r11 = r1.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r56 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i46 = 0;

     label13:
        $i10 = virtualinvoke r56.<android.util.ArrayMap: int size()>();

        if i46 >= $i10 goto label17;

        $r18 = virtualinvoke r56.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i46);

        r57 = (android.util.SparseArray) $r18;

        i47 = 0;

     label14:
        $i39 = virtualinvoke r57.<android.util.SparseArray: int size()>();

        if i47 >= $i39 goto label16;

        i48 = virtualinvoke r57.<android.util.SparseArray: int keyAt(int)>(i47);

        $r22 = virtualinvoke r57.<android.util.SparseArray: java.lang.Object valueAt(int)>(i47);

        r58 = (com.android.internal.app.ProcessStats$ProcessState) $r22;

        $r24 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r23 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r25 = virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r23, i48);

        r59 = (com.android.internal.app.ProcessStats$ProcessState) $r25;

        if r59 != null goto label15;

        $r19 = new com.android.internal.app.ProcessStats$ProcessState;

        $r21 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $i41 = r58.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        $r20 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        specialinvoke $r19.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,int,java.lang.String)>(r0, $r21, i48, $i41, $r20);

        r59 = $r19;

        $r30 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r29 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r30.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r29, i48, r59);

        $r26 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $i42 = r58.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        r60 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,int)>($r26, i48, $i42);

        $r28 = r60.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r27 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z0 = virtualinvoke $r28.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>($r27);

        if $z0 != 0 goto label15;

        $r36 = r60.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r34 = r58.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r59);

     label15:
        virtualinvoke r59.<com.android.internal.app.ProcessStats$ProcessState: void add(com.android.internal.app.ProcessStats$ProcessState)>(r58);

        i47 = i47 + 1;

        goto label14;

     label16:
        i46 = i46 + 1;

        goto label13;

     label17:
        i49 = 0;

     label18:
        if i49 >= 8 goto label19;

        $r17 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $l37 = $r17[i49];

        $r16 = r1.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $l38 = $r16[i49];

        $l40 = $l37 + $l38;

        $r17[i49] = $l40;

        i49 = i49 + 1;

        goto label18;

     label19:
        i50 = 0;

     label20:
        $i12 = r1.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        if i50 >= $i12 goto label21;

        $r12 = r1.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        i51 = $r12[i50];

        $i25 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i30 = i51 >> $i25;

        $i29 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i52 = $i30 & $i29;

        $r15 = r1.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i27 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i32 = i51 >> $i27;

        $i28 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i31 = $i32 & $i28;

        $r14 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>($i31);

        r61 = (long[]) $r14;

        $i36 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i34 = i51 >> $i36;

        $i35 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i33 = $i34 & $i35;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void addSysMemUsage(int,long[],int)>(i52, r61, $i33);

        i50 = i50 + 1;

        goto label20;

     label21:
        $l14 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $l11 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $b13 = $l14 cmp $l11;

        if $b13 >= 0 goto label22;

        $l26 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l26;

        $r13 = r1.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr> = $r13;

     label22:
        $l20 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l15 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l16 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l19 = $l15 - $l16;

        $l17 = $l20 + $l19;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l17;

        $l21 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime>;

        $l23 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime>;

        $l18 = r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartUptime>;

        $l24 = $l23 - $l18;

        $l22 = $l21 + $l24;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = $l22;

        return;
    }

    public void addSysMemUsage(long, long, long, long, long)
    {
        com.android.internal.app.ProcessStats r0;
        long l0, l1, l2, l3, l4;
        int i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        $i7 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i7 == -1 goto label3;

        $i8 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        i5 = $i8 * 14;

        $r1 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $r1[0] = 1L;

        i6 = 0;

     label1:
        if i6 >= 3 goto label2;

        $r3 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $i9 = 1 + i6;

        $r3[$i9] = l0;

        $r4 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $i10 = 4 + i6;

        $r4[$i10] = l1;

        $r5 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $i11 = 7 + i6;

        $r5[$i11] = l2;

        $r6 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $i12 = 10 + i6;

        $r6[$i12] = l3;

        $r7 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        $i13 = 13 + i6;

        $r7[$i13] = l4;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.internal.app.ProcessStats: long[] mSysMemUsageArgs>;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void addSysMemUsage(int,long[],int)>(i5, $r2, 0);

     label3:
        return;
    }

    void addSysMemUsage(int, long[], int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        long[] r1, r2;
        int[] $r3, $r4, $r5, $r8;
        java.lang.Object $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        r1 := @parameter1: long[];

        i1 := @parameter2: int;

        $r3 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i4 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        i2 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r3, $i4, i0);

        if i2 < 0 goto label1;

        $r8 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        i3 = $r8[i2];

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable> = $r4;

        $i5 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize> = $i5;

        $i6 = i2 ^ -1;

        i3 = virtualinvoke r0.<com.android.internal.app.ProcessStats: int addLongData(int,int,int)>($i6, i0, 16);

        $r5 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable> = $r5;

        $i7 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize> = $i7;

     label2:
        $r7 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i9 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i11 = i3 >> $i9;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i10 = $i11 & $i8;

        $r6 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i10);

        r2 = (long[]) $r6;

        $i13 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i14 = i3 >> $i13;

        $i12 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        i15 = $i14 & $i12;

        staticinvoke <com.android.internal.app.ProcessStats: void addSysMemUsage(long[],int,long[],int)>(r2, i15, r1, i1);

        return;
    }

    static void addSysMemUsage(long[], int, long[], int)
    {
        long[] r0, r1;
        int i0, i1, i4, $i5, $i6, $i10, $i11, $i13, $i16, $i17, $i19, $i20, $i21, $i24, $i25, $i27, $i29, $i30, $i31, $i32, $i35, $i36, $i38, $i39, $i40, $i41, $i43, i45;
        long l2, l3, $l9, $l12, $l15, $l18, $l22, $l23, $l26, $l28, $l33, $l37, $l42, $l44;
        byte $b7, $b8, $b14, $b34;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        r1 := @parameter2: long[];

        i1 := @parameter3: int;

        $i5 = i0 + 0;

        l2 = r0[$i5];

        $i6 = i1 + 0;

        l3 = r1[$i6];

        $b7 = l2 cmp 0L;

        if $b7 != 0 goto label3;

        $i40 = i0 + 0;

        r0[$i40] = l3;

        i4 = 1;

     label1:
        if i4 >= 16 goto label2;

        $i43 = i0 + i4;

        $i39 = i1 + i4;

        $l44 = r1[$i39];

        r0[$i43] = $l44;

        i4 = i4 + 1;

        goto label1;

     label2:
        goto label7;

     label3:
        $b8 = l3 cmp 0L;

        if $b8 <= 0 goto label7;

        $i10 = i0 + 0;

        $l9 = l2 + l3;

        r0[$i10] = $l9;

        i45 = 1;

     label4:
        if i45 >= 16 goto label7;

        $i11 = i0 + i45;

        $l15 = r0[$i11];

        $i13 = i1 + i45;

        $l12 = r1[$i13];

        $b14 = $l15 cmp $l12;

        if $b14 <= 0 goto label5;

        $i41 = i0 + i45;

        $i35 = i1 + i45;

        $l42 = r1[$i35];

        r0[$i41] = $l42;

     label5:
        $i17 = i0 + i45;

        $i24 = $i17 + 1;

        $i16 = i0 + i45;

        $i19 = $i16 + 1;

        $l18 = r0[$i19];

        $d0 = (double) $l18;

        $d1 = (double) l2;

        $d7 = $d0 * $d1;

        $i21 = i1 + i45;

        $i20 = $i21 + 1;

        $l22 = r1[$i20];

        $d4 = (double) $l22;

        $d2 = (double) l3;

        $d3 = $d4 * $d2;

        $d6 = $d7 + $d3;

        $l23 = l2 + l3;

        $d5 = (double) $l23;

        $d8 = $d6 / $d5;

        $l26 = (long) $d8;

        r0[$i24] = $l26;

        $i25 = i0 + i45;

        $i29 = $i25 + 2;

        $l33 = r0[$i29];

        $i30 = i1 + i45;

        $i27 = $i30 + 2;

        $l28 = r1[$i27];

        $b34 = $l33 cmp $l28;

        if $b34 >= 0 goto label6;

        $i31 = i0 + i45;

        $i36 = $i31 + 2;

        $i32 = i1 + i45;

        $i38 = $i32 + 2;

        $l37 = r1[$i38];

        r0[$i36] = $l37;

     label6:
        i45 = i45 + 3;

        goto label4;

     label7:
        return;
    }

    private static void printScreenLabel(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label2;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("     ");

        goto label5;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("SOff/");

        goto label5;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("SOn /");

        goto label5;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("????/");

     label5:
        return;
    }

    public static void printScreenLabelCsv(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label2;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        goto label5;

     label2:
        $r3 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r4 = $r3[0];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        goto label5;

     label3:
        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r2 = $r1[1];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        goto label5;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("???");

     label5:
        return;
    }

    private static void printMemLabel(java.io.PrintWriter, int, char)
    {
        java.io.PrintWriter r0;
        int i0;
        char c1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        tableswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        goto label7;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Norm");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        goto label7;

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Mod ");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        goto label7;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Low ");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        goto label7;

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Crit");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

        goto label7;

     label6:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("????");

        if c1 == 0 goto label7;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c1);

     label7:
        return;
    }

    public static void printMemLabelCsv(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        if i0 > 3 goto label1;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_NAMES_CSV>;

        $r2 = $r1[i0];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        goto label2;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("???");

     label2:
        return;
    }

    public static long dumpSingleTime(java.io.PrintWriter, java.lang.String, long[], int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r3;
        long[] r2;
        int i0, i4, i5, i6, i7, i8, $i12, $i13;
        long l1, l2, l3, l9, $l14;
        byte $b10, $b11;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        l3 = 0L;

        i4 = -1;

        i5 = 0;

     label01:
        if i5 >= 8 goto label11;

        i6 = -1;

        i7 = 0;

     label02:
        if i7 >= 4 goto label10;

        i8 = i7 + i5;

        l9 = r2[i8];

        r3 = "";

        if i0 != i8 goto label03;

        $l14 = l2 - l1;

        l9 = l9 + $l14;

        if r0 == null goto label03;

        r3 = " (running)";

     label03:
        $b10 = l9 cmp 0L;

        if $b10 == 0 goto label09;

        if r0 == null goto label08;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        if i4 == i5 goto label04;

        $i12 = i5;

        goto label05;

     label04:
        $i12 = -1;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, $i12);

        i4 = i5;

        if i6 == i7 goto label06;

        $i13 = i7;

        goto label07;

     label06:
        $i13 = -1;

     label07:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, $i13, 0);

        i6 = i7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l9, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label08:
        l3 = l3 + l9;

     label09:
        i7 = i7 + 1;

        goto label02;

     label10:
        i5 = i5 + 4;

        goto label01;

     label11:
        $b11 = l3 cmp 0L;

        if $b11 == 0 goto label12;

        if r0 == null goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    TOTAL: ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l3, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label12:
        return l3;
    }

    static void dumpAdjTimesCheckin(java.io.PrintWriter, java.lang.String, long[], int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1;
        long[] r2;
        int i0, i3, i4, i5;
        long l1, l2, l6, $l8;
        byte $b7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        i3 = 0;

     label1:
        if i3 >= 8 goto label6;

        i4 = 0;

     label2:
        if i4 >= 4 goto label5;

        i5 = i4 + i3;

        l6 = r2[i5];

        if i0 != i5 goto label3;

        $l8 = l2 - l1;

        l6 = l6 + $l8;

     label3:
        $b7 = l6 cmp 0L;

        if $b7 == 0 goto label4;

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i5, l6);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        i3 = i3 + 4;

        goto label1;

     label6:
        return;
    }

    static void dumpServiceTimeCheckin(java.io.PrintWriter, java.lang.String, java.lang.String, int, int, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2, i3, i4, i7, i8, i9, i11, $i12, $i14, $i15, $i16, i18;
        com.android.internal.app.ProcessStats$ServiceState r4;
        long l5, l6, l10, $l13, $l17;
        boolean z0;
        int[] $r5;
        com.android.internal.app.ProcessStats $r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: com.android.internal.app.ProcessStats$ServiceState;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        l5 := @parameter10: long;

        l6 := @parameter11: long;

        if i3 > 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i3);

        z0 = 0;

        i7 = 0;

     label2:
        $i12 = r4.<com.android.internal.app.ProcessStats$ServiceState: int mDurationsTableSize>;

        if i7 >= $i12 goto label6;

        $r5 = r4.<com.android.internal.app.ProcessStats$ServiceState: int[] mDurationsTable>;

        i9 = $r5[i7];

        $i15 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i16 = i9 >> $i15;

        $i14 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i8 = $i16 & $i14;

        i11 = i8 / 4;

        i18 = i8 % 4;

        if i18 == i2 goto label3;

        goto label5;

     label3:
        $r6 = r4.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats mStats>;

        l10 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i9, 0);

        if i4 != i11 goto label4;

        z0 = 1;

        $l17 = l6 - l5;

        l10 = l10 + $l17;

     label4:
        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i11, l10);

     label5:
        i7 = i7 + 1;

        goto label2;

     label6:
        if z0 != 0 goto label7;

        if i4 == -1 goto label7;

        $l13 = l6 - l5;

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTagAndValue(java.io.PrintWriter,int,long)>(r0, i4, $l13);

     label7:
        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        return;
    }

    public static void computeProcessData(com.android.internal.app.ProcessStats$ProcessState, com.android.internal.app.ProcessStats$ProcessDataCollection, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        com.android.internal.app.ProcessStats$ProcessDataCollection r1;
        long l0, l5, l6, l7, l8, l9, l10, l11, $l20, $l21, $l23, $l26, $l28, $l29, $l30, $l31, $l32, $l33, $l35, $l36, $l37, $l38, $l40, $l41, $l43, $l44, $l45, $l46;
        int i1, i2, i3, i4, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i22;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b24, $b25, $b27, $b34, $b39, $b42;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessDataCollection;

        l0 := @parameter2: long;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = 0L;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss> = 0L;

        i1 = 0;

     label01:
        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] screenStates>;

        $i13 = lengthof $r2;

        if i1 >= $i13 goto label12;

        i2 = 0;

     label02:
        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] memStates>;

        $i14 = lengthof $r3;

        if i2 >= $i14 goto label11;

        i3 = 0;

     label03:
        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] procStates>;

        $i15 = lengthof $r4;

        if i3 >= $i15 goto label10;

        $r5 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] screenStates>;

        $i18 = $r5[i1];

        $r6 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] memStates>;

        $i16 = $r6[i2];

        $i19 = $i18 + $i16;

        $i22 = $i19 * 14;

        $r7 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: int[] procStates>;

        $i17 = $r7[i3];

        i4 = $i22 + $i17;

        $l23 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime>;

        $l20 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i4, l0);

        $l21 = $l23 + $l20;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime> = $l21;

        l5 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i4);

        $b24 = l5 cmp 0L;

        if $b24 <= 0 goto label09;

        l6 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssMinimum(int)>(i4);

        l7 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i4);

        l8 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssMaximum(int)>(i4);

        l9 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMinimum(int)>(i4);

        l10 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssAverage(int)>(i4);

        l11 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMaximum(int)>(i4);

        $l28 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $b27 = $l28 cmp 0L;

        if $b27 != 0 goto label04;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = l6;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = l7;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = l8;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = l9;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = l10;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = l11;

        goto label08;

     label04:
        $l26 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss>;

        $b25 = l6 cmp $l26;

        if $b25 >= 0 goto label05;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minPss> = l6;

     label05:
        $l30 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss>;

        $d0 = (double) $l30;

        $l29 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $d1 = (double) $l29;

        $d2 = $d0 * $d1;

        $d4 = (double) l7;

        $d5 = (double) l5;

        $d3 = $d4 * $d5;

        $d6 = $d2 + $d3;

        $l32 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l31 = $l32 + l5;

        $d7 = (double) $l31;

        $d8 = $d6 / $d7;

        $l37 = (long) $d8;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgPss> = $l37;

        $l38 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss>;

        $b39 = l8 cmp $l38;

        if $b39 <= 0 goto label06;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxPss> = l8;

     label06:
        $l33 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss>;

        $b34 = l9 cmp $l33;

        if $b34 >= 0 goto label07;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long minUss> = l9;

     label07:
        $l35 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss>;

        $d12 = (double) $l35;

        $l36 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $d11 = (double) $l36;

        $d10 = $d12 * $d11;

        $d14 = (double) l10;

        $d13 = (double) l5;

        $d9 = $d14 * $d13;

        $d15 = $d10 + $d9;

        $l40 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l41 = $l40 + l5;

        $d16 = (double) $l41;

        $d17 = $d15 / $d16;

        $l46 = (long) $d17;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long avgUss> = $l46;

        $l43 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss>;

        $b42 = l11 cmp $l43;

        if $b42 <= 0 goto label08;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long maxUss> = l11;

     label08:
        $l45 = r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $l44 = $l45 + l5;

        r1.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss> = $l44;

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        i2 = i2 + 1;

        goto label02;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return;
    }

    static long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[], long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int[] r1, r2, r3;
        long l0, l1, $l14;
        int i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        l0 := @parameter4: long;

        l1 = 0L;

        i2 = 0;

     label1:
        $i6 = lengthof r1;

        if i2 >= $i6 goto label6;

        i3 = 0;

     label2:
        $i7 = lengthof r2;

        if i3 >= $i7 goto label5;

        i4 = 0;

     label3:
        $i8 = lengthof r3;

        if i4 >= $i8 goto label4;

        $i11 = r1[i2];

        $i9 = r2[i3];

        $i10 = $i11 + $i9;

        $i12 = $i10 * 14;

        $i13 = r3[i4];

        i5 = $i12 + $i13;

        $l14 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i5, l0);

        l1 = l1 + $l14;

        i4 = i4 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        r0.<com.android.internal.app.ProcessStats$ProcessState: long mTmpTotalTime> = l1;

        return l1;
    }

    public void computeTotalMemoryUse(com.android.internal.app.ProcessStats$TotalMemoryUseCollection, long)
    {
        com.android.internal.app.ProcessStats r0;
        com.android.internal.app.ProcessStats$TotalMemoryUseCollection r1;
        long l0, l5, l12, l13, l14, l16, $l21, $l24, $l26, $l29, $l31, $l34, $l38, $l39, $l43, $l45, $l46, $l48, $l49, $l50, $l52, $l54, $l55, $l56, $l58, $l59, $l60, $l62, $l63, $l64, $l66, $l67, $l69, $l70, $l71, $l73, $l74, $l75, $l80, $l81, $l82, $l85, $l86, $l92, $l94, $l95, $l98, $l106, $l109, $l110, $l117, $l118, $l122, l136;
        int i1, i2, i3, i4, i6, i7, i8, i9, i10, i11, i15, $i17, $i18, $i19, $i20, $i23, $i32, $i35, $i36, $i37, $i40, $i41, $i44, $i47, $i51, $i77, $i78, $i79, $i83, $i84, $i87, $i88, $i89, $i90, $i91, $i93, $i96, $i97, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i107, $i108, $i111, $i112, $i113, $i114, $i115, $i116, $i119, $i120, $i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135;
        long[] r2, r4, r5, $r14, $r16, $r19, $r26, $r32, $r34, $r36, $r38, r39;
        com.android.internal.app.ProcessStats$PssAggr r3, $r9, $r10, $r12, r43, r44;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38;
        int[] $r6, $r13, $r15, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r29, $r33, $r35;
        java.lang.Object $r7, $r11, $r28, $r30;
        com.android.internal.app.ProcessMap $r8;
        byte $b22, $b25, $b27, $b28, $b30, $b33, $b42, $b53, $b57, $b61, $b65, $b68, $b72, $b76, $b121;
        double[] $r20, $r37;
        java.util.ArrayList $r27, $r31;
        android.util.ArrayMap r40;
        android.util.SparseArray r41;
        com.android.internal.app.ProcessStats$ProcessState r42;
        boolean z0, z1, z2, z3;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: com.android.internal.app.ProcessStats$TotalMemoryUseCollection;

        l0 := @parameter1: long;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime> = 0L;

        i1 = 0;

     label01:
        if i1 >= 14 goto label02;

        $r37 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double[] processStateWeight>;

        $r37[i1] = 0.0;

        $r38 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] processStatePss>;

        $r38[i1] = 0L;

        $r34 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] processStateTime>;

        $r34[i1] = 0L;

        $r35 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $r35[i1] = 0;

        i1 = i1 + 1;

        goto label01;

     label02:
        i124 = 0;

     label03:
        if i124 >= 16 goto label04;

        $r36 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] sysMemUsage>;

        $r36[i124] = 0L;

        i124 = i124 + 1;

        goto label03;

     label04:
        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemCachedWeight> = 0.0;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemFreeWeight> = 0.0;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemZRamWeight> = 0.0;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemKernelWeight> = 0.0;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemNativeWeight> = 0.0;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples> = 0;

        r39 = newarray (long)[16];

        i2 = 0;

     label05:
        $i17 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        if i2 >= $i17 goto label06;

        $r33 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        i3 = $r33[i2];

        $r31 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i114 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i116 = i3 >> $i114;

        $i113 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i115 = $i116 & $i113;

        $r30 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>($i115);

        r2 = (long[]) $r30;

        $i112 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i123 = i3 >> $i112;

        $i111 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        i4 = $i123 & $i111;

        staticinvoke <com.android.internal.app.ProcessStats: void addSysMemUsage(long[],int,long[],int)>(r39, 0, r2, i4);

        i2 = i2 + 1;

        goto label05;

     label06:
        i125 = 0;

     label07:
        $r6 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] screenStates>;

        $i18 = lengthof $r6;

        if i125 >= $i18 goto label12;

        i126 = 0;

     label08:
        $r23 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] memStates>;

        $i88 = lengthof $r23;

        if i126 >= $i88 goto label11;

        $r24 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] screenStates>;

        $i90 = $r24[i125];

        $r25 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] memStates>;

        $i89 = $r25[i126];

        i127 = $i90 + $i89;

        i128 = i127 * 14;

        $r26 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        l5 = $r26[i127];

        $i83 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i83 != i127 goto label09;

        $l117 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        $l118 = l0 - $l117;

        l5 = l5 + $l118;

     label09:
        $l82 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $l85 = $l82 + l5;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime> = $l85;

        $r22 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i84 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        i6 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r22, $i84, i128);

        r4 = r39;

        i7 = 0;

        if i6 < 0 goto label10;

        $r29 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        i8 = $r29[i6];

        $r27 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i101 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i99 = i8 >> $i101;

        $i102 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i100 = $i99 & $i102;

        $r28 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>($i100);

        r5 = (long[]) $r28;

        $i103 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i120 = i8 >> $i103;

        $i104 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        i10 = $i120 & $i104;

        $i119 = i10 + 0;

        $l122 = r5[$i119];

        $b121 = $l122 cmp 3L;

        if $b121 < 0 goto label10;

        $r32 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] sysMemUsage>;

        staticinvoke <com.android.internal.app.ProcessStats: void addSysMemUsage(long[],int,long[],int)>($r32, 0, r4, i7);

        r4 = r5;

        i7 = i10;

     label10:
        $d23 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemCachedWeight>;

        $i87 = i7 + 2;

        $l86 = r4[$i87];

        $d21 = (double) $l86;

        $d20 = (double) l5;

        $d22 = $d21 * $d20;

        $d24 = $d23 + $d22;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemCachedWeight> = $d24;

        $d16 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemFreeWeight>;

        $i93 = i7 + 5;

        $l94 = r4[$i93];

        $d14 = (double) $l94;

        $d25 = (double) l5;

        $d15 = $d14 * $d25;

        $d17 = $d16 + $d15;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemFreeWeight> = $d17;

        $d33 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemZRamWeight>;

        $i91 = i7 + 8;

        $l92 = r4[$i91];

        $d19 = (double) $l92;

        $d18 = (double) l5;

        $d34 = $d19 * $d18;

        $d32 = $d33 + $d34;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemZRamWeight> = $d32;

        $d27 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemKernelWeight>;

        $i97 = i7 + 11;

        $l98 = r4[$i97];

        $d36 = (double) $l98;

        $d37 = (double) l5;

        $d35 = $d36 * $d37;

        $d26 = $d27 + $d35;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemKernelWeight> = $d26;

        $d28 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemNativeWeight>;

        $i96 = i7 + 14;

        $l95 = r4[$i96];

        $d30 = (double) $l95;

        $d31 = (double) l5;

        $d29 = $d30 * $d31;

        $d38 = $d28 + $d29;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemNativeWeight> = $d38;

        $i107 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        $l109 = (long) $i107;

        $i105 = i7 + 0;

        $l106 = r4[$i105];

        $l110 = $l109 + $l106;

        $i108 = (int) $l110;

        r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples> = $i108;

        i126 = i126 + 1;

        goto label08;

     label11:
        i125 = i125 + 1;

        goto label07;

     label12:
        $r8 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r40 = virtualinvoke $r8.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i129 = 0;

     label13:
        $i19 = virtualinvoke r40.<android.util.ArrayMap: int size()>();

        if i129 >= $i19 goto label35;

        $r7 = virtualinvoke r40.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i129);

        r41 = (android.util.SparseArray) $r7;

        i130 = 0;

     label14:
        $i20 = virtualinvoke r41.<android.util.SparseArray: int size()>();

        if i130 >= $i20 goto label34;

        $r11 = virtualinvoke r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i130);

        r42 = (com.android.internal.app.ProcessStats$ProcessState) $r11;

        $r9 = new com.android.internal.app.ProcessStats$PssAggr;

        specialinvoke $r9.<com.android.internal.app.ProcessStats$PssAggr: void <init>()>();

        r3 = $r9;

        $r10 = new com.android.internal.app.ProcessStats$PssAggr;

        specialinvoke $r10.<com.android.internal.app.ProcessStats$PssAggr: void <init>()>();

        r43 = $r10;

        $r12 = new com.android.internal.app.ProcessStats$PssAggr;

        specialinvoke $r12.<com.android.internal.app.ProcessStats$PssAggr: void <init>()>();

        r44 = $r12;

        z0 = 0;

        i131 = 0;

     label15:
        $i23 = r42.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if i131 >= $i23 goto label19;

        $r21 = r42.<com.android.internal.app.ProcessStats$ProcessState: int[] mDurationsTable>;

        i132 = $r21[i131];

        $i79 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i77 = i132 >> $i79;

        $i78 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i133 = $i77 & $i78;

        i9 = i133 % 14;

        l12 = virtualinvoke r42.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i133);

        $b76 = l12 cmp 0L;

        if $b76 <= 0 goto label18;

        l13 = virtualinvoke r42.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i133);

        z0 = 1;

        if i9 > 2 goto label16;

        virtualinvoke r3.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>(l13, l12);

        goto label18;

     label16:
        if i9 > 8 goto label17;

        virtualinvoke r43.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>(l13, l12);

        goto label18;

     label17:
        virtualinvoke r44.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>(l13, l12);

     label18:
        i131 = i131 + 1;

        goto label15;

     label19:
        if z0 != 0 goto label20;

        goto label33;

     label20:
        z1 = 0;

        z2 = 0;

        z3 = 0;

        $l21 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b22 = $l21 cmp 3L;

        if $b22 >= 0 goto label21;

        $l69 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b68 = $l69 cmp 0L;

        if $b68 <= 0 goto label21;

        z1 = 1;

        $l80 = r43.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l81 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r3.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l80, $l81);

     label21:
        $l26 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b27 = $l26 cmp 3L;

        if $b27 >= 0 goto label22;

        $l73 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b72 = $l73 cmp 0L;

        if $b72 <= 0 goto label22;

        z2 = 1;

        $l70 = r44.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l71 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r3.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l70, $l71);

     label22:
        $l24 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b25 = $l24 cmp 3L;

        if $b25 >= 0 goto label23;

        $l60 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b61 = $l60 cmp 0L;

        if $b61 <= 0 goto label23;

        z3 = 1;

        $l74 = r44.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l75 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r43.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l74, $l75);

     label23:
        $l31 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b30 = $l31 cmp 3L;

        if $b30 >= 0 goto label24;

        if z1 != 0 goto label24;

        $l64 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b65 = $l64 cmp 0L;

        if $b65 <= 0 goto label24;

        $l63 = r3.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l62 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r43.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l63, $l62);

     label24:
        $l29 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b28 = $l29 cmp 3L;

        if $b28 >= 0 goto label25;

        if z3 != 0 goto label25;

        $l52 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b53 = $l52 cmp 0L;

        if $b53 <= 0 goto label25;

        $l67 = r43.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l66 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r44.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l67, $l66);

     label25:
        $l34 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b33 = $l34 cmp 3L;

        if $b33 >= 0 goto label26;

        if z2 != 0 goto label26;

        $l56 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        $b57 = $l56 cmp 0L;

        if $b57 <= 0 goto label26;

        $l55 = r3.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        $l54 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        virtualinvoke r44.<com.android.internal.app.ProcessStats$PssAggr: void add(long,long)>($l55, $l54);

     label26:
        i134 = 0;

     label27:
        $i32 = r42.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if i134 >= $i32 goto label33;

        $r13 = r42.<com.android.internal.app.ProcessStats$ProcessState: int[] mDurationsTable>;

        i135 = $r13[i134];

        $i37 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i35 = i135 >> $i37;

        $i36 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i11 = $i35 & $i36;

        l136 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i135, 0);

        $i40 = r42.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i40 != i11 goto label28;

        $l58 = r42.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l59 = l0 - $l58;

        l136 = l136 + $l59;

     label28:
        i15 = i11 % 14;

        $r14 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] processStateTime>;

        $l39 = $r14[i15];

        $l38 = $l39 + l136;

        $r14[i15] = $l38;

        l14 = virtualinvoke r42.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i11);

        $b42 = l14 cmp 0L;

        if $b42 <= 0 goto label29;

        l16 = virtualinvoke r42.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i11);

        goto label32;

     label29:
        if i15 > 2 goto label30;

        l14 = r3.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        l16 = r3.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        goto label32;

     label30:
        if i15 > 8 goto label31;

        l14 = r43.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        l16 = r43.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

        goto label32;

     label31:
        l14 = r44.<com.android.internal.app.ProcessStats$PssAggr: long samples>;

        l16 = r44.<com.android.internal.app.ProcessStats$PssAggr: long pss>;

     label32:
        $r16 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] processStatePss>;

        $l43 = $r16[i15];

        $d2 = (double) $l43;

        $r15 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i41 = $r15[i15];

        $d1 = (double) $i41;

        $d6 = $d2 * $d1;

        $d4 = (double) l16;

        $d3 = (double) l14;

        $d5 = $d4 * $d3;

        $d7 = $d6 + $d5;

        $r17 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i44 = $r17[i15];

        $l45 = (long) $i44;

        $l46 = $l45 + l14;

        $d8 = (double) $l46;

        d0 = $d7 / $d8;

        $r19 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long[] processStatePss>;

        $l50 = (long) d0;

        $r19[i15] = $l50;

        $r18 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i47 = $r18[i15];

        $l49 = (long) $i47;

        $l48 = $l49 + l14;

        $i51 = (int) $l48;

        $r18[i15] = $i51;

        $r20 = r1.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double[] processStateWeight>;

        $d9 = $r20[i15];

        $d12 = (double) l16;

        $d13 = (double) l136;

        $d10 = $d12 * $d13;

        $d11 = $d9 + $d10;

        $r20[i15] = $d11;

        i134 = i134 + 1;

        goto label27;

     label33:
        i130 = i130 + 1;

        goto label14;

     label34:
        i129 = i129 + 1;

        goto label13;

     label35:
        return;
    }

    static void dumpProcessState(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[], long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r6, $r8;
        com.android.internal.app.ProcessStats$ProcessState r2;
        int[] r3, r4, r5;
        long l0, l1, l10;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26;
        byte $b13, $b23;
        java.lang.String[] $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        l0 := @parameter6: long;

        l1 = 0L;

        i2 = -1;

        i3 = 0;

     label01:
        $i11 = lengthof r3;

        if i3 >= $i11 goto label14;

        i4 = -1;

        i5 = 0;

     label02:
        $i14 = lengthof r4;

        if i5 >= $i14 goto label13;

        i6 = 0;

     label03:
        $i17 = lengthof r5;

        if i6 >= $i17 goto label12;

        i7 = r3[i3];

        i9 = r4[i5];

        $i16 = i7 + i9;

        $i18 = $i16 * 14;

        $i19 = r5[i6];

        i8 = $i18 + $i19;

        l10 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i8, l0);

        r6 = "";

        $i20 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i20 != i8 goto label04;

        r6 = " (running)";

     label04:
        $b23 = l10 cmp 0L;

        if $b23 == 0 goto label11;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $i24 = lengthof r3;

        if $i24 <= 1 goto label07;

        if i2 == i7 goto label05;

        $i26 = i7;

        goto label06;

     label05:
        $i26 = -1;

     label06:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, $i26);

        i2 = i7;

     label07:
        $i21 = lengthof r4;

        if $i21 <= 1 goto label10;

        if i4 == i9 goto label08;

        $i25 = i9;

        goto label09;

     label08:
        $i25 = -1;

     label09:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, $i25, 47);

        i4 = i9;

     label10:
        $r7 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $i22 = r5[i6];

        $r8 = $r7[$i22];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        l1 = l1 + l10;

     label11:
        i6 = i6 + 1;

        goto label03;

     label12:
        i5 = i5 + 1;

        goto label02;

     label13:
        i3 = i3 + 1;

        goto label01;

     label14:
        $b13 = l1 cmp 0L;

        if $b13 == 0 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $i12 = lengthof r3;

        if $i12 <= 1 goto label15;

        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, -1);

     label15:
        $i15 = lengthof r4;

        if $i15 <= 1 goto label16;

        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, -1, 47);

     label16:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("TOTAL  : ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l1, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label17:
        return;
    }

    static void dumpProcessPss(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, int[], int[], int[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r7;
        com.android.internal.app.ProcessStats$ProcessState r2;
        int[] r3, r4, r5;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i41, $i42, $i45;
        long l8, $l14, $l15, $l16, $l17, $l18, $l19, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l43, $l44;
        byte $b29;
        java.lang.String[] $r6;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        z0 = 0;

        i0 = -1;

        i1 = 0;

     label01:
        $i9 = lengthof r3;

        if i1 >= $i9 goto label14;

        i2 = -1;

        i3 = 0;

     label02:
        $i23 = lengthof r4;

        if i3 >= $i23 goto label13;

        i4 = 0;

     label03:
        $i22 = lengthof r5;

        if i4 >= $i22 goto label12;

        i5 = r3[i1];

        i6 = r4[i3];

        $i25 = i5 + i6;

        $i24 = $i25 * 14;

        $i26 = r5[i4];

        i7 = $i24 + $i26;

        l8 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssSampleCount(int)>(i7);

        $b29 = l8 cmp 0L;

        if $b29 <= 0 goto label11;

        if z0 != 0 goto label04;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("PSS/USS (");

        $i45 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i45);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" entries):");

        z0 = 1;

     label04:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $i30 = lengthof r3;

        if $i30 <= 1 goto label07;

        if i0 == i5 goto label05;

        $i41 = i5;

        goto label06;

     label05:
        $i41 = -1;

     label06:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, $i41);

        i0 = i5;

     label07:
        $i27 = lengthof r4;

        if $i27 <= 1 goto label10;

        if i2 == i6 goto label08;

        $i42 = i6;

        goto label09;

     label08:
        $i42 = -1;

     label09:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, $i42, 47);

        i2 = i6;

     label10:
        $r6 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $i28 = r5[i4];

        $r7 = $r6[$i28];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" samples ");

        $l31 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssMinimum(int)>(i7);

        $l32 = $l31 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l32);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l35 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssAverage(int)>(i7);

        $l36 = $l35 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l36);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l33 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssMaximum(int)>(i7);

        $l34 = $l33 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l34);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $l40 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMinimum(int)>(i7);

        $l39 = $l40 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l39);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l38 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssAverage(int)>(i7);

        $l37 = $l38 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l37);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $l44 = virtualinvoke r2.<com.android.internal.app.ProcessStats$ProcessState: long getPssUssMaximum(int)>(i7);

        $l43 = $l44 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l43);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label11:
        i4 = i4 + 1;

        goto label03;

     label12:
        i3 = i3 + 1;

        goto label02;

     label13:
        i1 = i1 + 1;

        goto label01;

     label14:
        $i11 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i11 == 0 goto label15;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed for excessive wake locks: ");

        $i20 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i20);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" times");

     label15:
        $i10 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i10 == 0 goto label16;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed for excessive CPU use: ");

        $i21 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i21);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" times");

     label16:
        $i13 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i13 == 0 goto label17;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Killed from cached state: ");

        $i12 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i12);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" times from pss ");

        $l15 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        $l14 = $l15 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l14);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

        $l17 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        $l16 = $l17 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l16);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

        $l19 = r2.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        $l18 = $l19 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r0, $l18);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label17:
        return;
    }

    long getSysMemUsageValue(int, int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, $i3, $i4;
        int[] $r1, $r2;
        long $l5;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i3 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        i2 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i3, i0);

        if i2 < 0 goto label1;

        $r2 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i4 = $r2[i2];

        $l5 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i4, i1);

        goto label2;

     label1:
        $l5 = 0L;

     label2:
        return $l5;
    }

    void dumpSysMemUsageCategory(java.io.PrintWriter, java.lang.String, java.lang.String, int, int)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3;
        int i0, i1, $i4, $i7;
        long $l2, $l3, $l5, $l6, $l8, $l9;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $l2 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getSysMemUsageValue(int,int)>(i0, i1);

        $l3 = $l2 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r1, $l3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" min, ");

        $i4 = i1 + 1;

        $l5 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getSysMemUsageValue(int,int)>(i0, $i4);

        $l6 = $l5 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r1, $l6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" avg, ");

        $i7 = i1 + 2;

        $l8 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getSysMemUsageValue(int,int)>(i0, $i7);

        $l9 = $l8 * 1024L;

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r1, $l9);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" max");

        return;
    }

    void dumpSysMemUsage(java.io.PrintWriter, java.lang.String, int[], int[])
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int[] r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15;
        long l7;
        byte $b12;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        i0 = -1;

        i1 = 0;

     label01:
        $i8 = lengthof r3;

        if i1 >= $i8 goto label11;

        i2 = -1;

        i3 = 0;

     label02:
        $i9 = lengthof r4;

        if i3 >= $i9 goto label10;

        i4 = r3[i1];

        i5 = r4[i3];

        $i10 = i4 + i5;

        i6 = $i10 * 14;

        l7 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getSysMemUsageValue(int,int)>(i6, 0);

        $b12 = l7 cmp 0L;

        if $b12 <= 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $i11 = lengthof r3;

        if $i11 <= 1 goto label05;

        if i0 == i4 goto label03;

        $i15 = i4;

        goto label04;

     label03:
        $i15 = -1;

     label04:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r1, $i15);

        i0 = i4;

     label05:
        $i14 = lengthof r4;

        if $i14 <= 1 goto label08;

        if i2 == i5 goto label06;

        $i13 = i5;

        goto label07;

     label06:
        $i13 = -1;

     label07:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r1, $i13, 0);

        i2 = i5;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" samples:");

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsageCategory(java.io.PrintWriter,java.lang.String,java.lang.String,int,int)>(r1, r2, "  Cached", i6, 1);

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsageCategory(java.io.PrintWriter,java.lang.String,java.lang.String,int,int)>(r1, r2, "  Free", i6, 4);

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsageCategory(java.io.PrintWriter,java.lang.String,java.lang.String,int,int)>(r1, r2, "  ZRam", i6, 7);

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsageCategory(java.io.PrintWriter,java.lang.String,java.lang.String,int,int)>(r1, r2, "  Kernel", i6, 10);

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsageCategory(java.io.PrintWriter,java.lang.String,java.lang.String,int,int)>(r1, r2, "  Native", i6, 13);

     label09:
        i3 = i3 + 1;

        goto label02;

     label10:
        i1 = i1 + 1;

        goto label01;

     label11:
        return;
    }

    static void dumpStateHeadersCsv(java.io.PrintWriter, java.lang.String, int[], int[], int[])
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r6;
        int[] r2, r3, r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0;
        java.lang.String[] $r5;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        if r2 == null goto label01;

        $i14 = lengthof r2;

        goto label02;

     label01:
        $i14 = 1;

     label02:
        i0 = $i14;

        if r3 == null goto label03;

        $i12 = lengthof r3;

        goto label04;

     label03:
        $i12 = 1;

     label04:
        i1 = $i12;

        if r4 == null goto label05;

        $i13 = lengthof r4;

        goto label06;

     label05:
        $i13 = 1;

     label06:
        i2 = $i13;

        i3 = 0;

     label07:
        if i3 >= i0 goto label17;

        i4 = 0;

     label08:
        if i4 >= i1 goto label16;

        i5 = 0;

     label09:
        if i5 >= i2 goto label15;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        z0 = 0;

        if r2 == null goto label10;

        $i11 = lengthof r2;

        if $i11 <= 1 goto label10;

        $i10 = r2[i3];

        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabelCsv(java.io.PrintWriter,int)>(r0, $i10);

        z0 = 1;

     label10:
        if r3 == null goto label12;

        $i9 = lengthof r3;

        if $i9 <= 1 goto label12;

        if z0 == 0 goto label11;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

     label11:
        $i8 = r3[i4];

        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabelCsv(java.io.PrintWriter,int)>(r0, $i8);

        z0 = 1;

     label12:
        if r4 == null goto label14;

        $i6 = lengthof r4;

        if $i6 <= 1 goto label14;

        if z0 == 0 goto label13;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("-");

     label13:
        $r5 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV>;

        $i7 = r4[i5];

        $r6 = $r5[$i7];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

     label14:
        i5 = i5 + 1;

        goto label09;

     label15:
        i4 = i4 + 1;

        goto label08;

     label16:
        i3 = i3 + 1;

        goto label07;

     label17:
        return;
    }

    static void dumpProcessStateCsv(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, boolean, int[], boolean, int[], boolean, int[], long)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        boolean z0, z1, z2;
        int[] r2, r3, r4;
        long l0, l13, $l28;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i14, i15, i16, i17, i18, i19, $i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        z0 := @parameter2: boolean;

        r2 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r3 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r4 := @parameter7: int[];

        l0 := @parameter8: long;

        if z0 == 0 goto label01;

        $i38 = lengthof r2;

        goto label02;

     label01:
        $i38 = 1;

     label02:
        i1 = $i38;

        if z1 == 0 goto label03;

        $i35 = lengthof r3;

        goto label04;

     label03:
        $i35 = 1;

     label04:
        i2 = $i35;

        if z2 == 0 goto label05;

        $i34 = lengthof r4;

        goto label06;

     label05:
        $i34 = 1;

     label06:
        i3 = $i34;

        i4 = 0;

     label07:
        if i4 >= i1 goto label36;

        i5 = 0;

     label08:
        if i5 >= i2 goto label35;

        i6 = 0;

     label09:
        if i6 >= i3 goto label34;

        if z0 == 0 goto label10;

        $i37 = r2[i4];

        goto label11;

     label10:
        $i37 = 0;

     label11:
        i8 = $i37;

        if z1 == 0 goto label12;

        $i36 = r3[i5];

        goto label13;

     label12:
        $i36 = 0;

     label13:
        i7 = $i36;

        if z2 == 0 goto label14;

        $i31 = r4[i6];

        goto label15;

     label14:
        $i31 = 0;

     label15:
        i10 = $i31;

        if z0 == 0 goto label16;

        $i30 = 1;

        goto label17;

     label16:
        $i30 = lengthof r2;

     label17:
        i9 = $i30;

        if z1 == 0 goto label18;

        $i33 = 1;

        goto label19;

     label18:
        $i33 = lengthof r3;

     label19:
        i12 = $i33;

        if z2 == 0 goto label20;

        $i32 = 1;

        goto label21;

     label20:
        $i32 = lengthof r4;

     label21:
        i11 = $i32;

        l13 = 0L;

        i15 = 0;

     label22:
        if i15 >= i9 goto label33;

        i14 = 0;

     label23:
        if i14 >= i12 goto label32;

        i17 = 0;

     label24:
        if i17 >= i11 goto label31;

        if z0 == 0 goto label25;

        $i27 = 0;

        goto label26;

     label25:
        $i27 = r2[i15];

     label26:
        i16 = $i27;

        if z1 == 0 goto label27;

        $i26 = 0;

        goto label28;

     label27:
        $i26 = r3[i14];

     label28:
        i19 = $i26;

        if z2 == 0 goto label29;

        $i29 = 0;

        goto label30;

     label29:
        $i29 = r4[i17];

     label30:
        i18 = $i29;

        $i20 = i8 + i16;

        $i24 = $i20 + i7;

        $i25 = $i24 + i19;

        $i22 = $i25 * 14;

        $i23 = $i22 + i10;

        i21 = $i23 + i18;

        $l28 = virtualinvoke r1.<com.android.internal.app.ProcessStats$ProcessState: long getDuration(int,long)>(i21, l0);

        l13 = l13 + $l28;

        i17 = i17 + 1;

        goto label24;

     label31:
        i14 = i14 + 1;

        goto label23;

     label32:
        i15 = i15 + 1;

        goto label22;

     label33:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l13);

        i6 = i6 + 1;

        goto label09;

     label34:
        i5 = i5 + 1;

        goto label08;

     label35:
        i4 = i4 + 1;

        goto label07;

     label36:
        return;
    }

    static void dumpProcessList(java.io.PrintWriter, java.lang.String, java.util.ArrayList, int[], int[], int[], long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r6, $r11;
        java.util.ArrayList r2;
        int[] r3, r4, r5;
        long l0;
        int i1, $i2, $i3, $i4, $i5;
        com.android.internal.app.ProcessStats$ProcessState r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.Object $r12;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        l0 := @parameter6: long;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (com.android.internal.app.ProcessStats$ProcessState) $r12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r11 = r7.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $i4 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $i3 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r0, r6, r7, r3, r4, r5, l0);

        $i5 = r7.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i5 <= 0 goto label2;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r0, r6, r7, r3, r4, r5);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    static void dumpProcessSummaryDetails(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, java.lang.String, java.lang.String, int[], int[], int[], long, long, boolean)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        java.lang.String r2, r3;
        int[] r4, r5, r6;
        long l0, l1, $l2, $l5;
        boolean z0;
        com.android.internal.app.ProcessStats$ProcessDataCollection r7, $r8;
        byte $b3, $b4;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        r6 := @parameter6: int[];

        l0 := @parameter7: long;

        l1 := @parameter8: long;

        z0 := @parameter9: boolean;

        $r8 = new com.android.internal.app.ProcessStats$ProcessDataCollection;

        specialinvoke $r8.<com.android.internal.app.ProcessStats$ProcessDataCollection: void <init>(int[],int[],int[])>(r4, r5, r6);

        r7 = $r8;

        staticinvoke <com.android.internal.app.ProcessStats: void computeProcessData(com.android.internal.app.ProcessStats$ProcessState,com.android.internal.app.ProcessStats$ProcessDataCollection,long)>(r1, r7, l0);

        $l2 = r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: long totalTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $l5 = r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: long numPss>;

        $b4 = $l5 cmp 0L;

        if $b4 == 0 goto label4;

     label1:
        if r2 == null goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

     label2:
        if r3 == null goto label3;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

     label3:
        virtualinvoke r7.<com.android.internal.app.ProcessStats$ProcessDataCollection: void print(java.io.PrintWriter,long,boolean)>(r0, l1, z0);

        if r2 == null goto label4;

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label4:
        return;
    }

    static void dumpProcessSummaryLocked(java.io.PrintWriter, java.lang.String, java.util.ArrayList, int[], int[], int[], boolean, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, $r8;
        java.util.ArrayList r2;
        int[] r3, r4, r5, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        boolean z0;
        long l0, l1;
        int i2, $i3, $i4, $i5;
        com.android.internal.app.ProcessStats$ProcessState r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: int[];

        z0 := @parameter6: boolean;

        l0 := @parameter7: long;

        l1 := @parameter8: long;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i3 - 1;

     label1:
        if i2 < 0 goto label2;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r7;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("* ");

        $r8 = r6.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        $i5 = r6.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i5);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" / v");

        $i4 = r6.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "         TOTAL: ", r3, r4, r5, l0, l1, 1);

        $r10 = newarray (int)[1];

        $r10[0] = 0;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    Persistent: ", r3, r4, $r10, l0, l1, 1);

        $r9 = newarray (int)[1];

        $r9[0] = 1;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "           Top: ", r3, r4, $r9, l0, l1, 1);

        $r12 = newarray (int)[1];

        $r12[0] = 2;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Imp Fg: ", r3, r4, $r12, l0, l1, 1);

        $r11 = newarray (int)[1];

        $r11[0] = 3;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Imp Bg: ", r3, r4, $r11, l0, l1, 1);

        $r14 = newarray (int)[1];

        $r14[0] = 4;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        Backup: ", r3, r4, $r14, l0, l1, 1);

        $r13 = newarray (int)[1];

        $r13[0] = 5;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "     Heavy Wgt: ", r3, r4, $r13, l0, l1, 1);

        $r16 = newarray (int)[1];

        $r16[0] = 6;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "       Service: ", r3, r4, $r16, l0, l1, 1);

        $r15 = newarray (int)[1];

        $r15[0] = 7;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    Service Rs: ", r3, r4, $r15, l0, l1, 1);

        $r18 = newarray (int)[1];

        $r18[0] = 8;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "      Receiver: ", r3, r4, $r18, l0, l1, 1);

        $r17 = newarray (int)[1];

        $r17[0] = 9;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "        (Home): ", r3, r4, $r17, l0, l1, 1);

        $r20 = newarray (int)[1];

        $r20[0] = 10;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "    (Last Act): ", r3, r4, $r20, l0, l1, 1);

        $r19 = newarray (int)[3];

        $r19[0] = 11;

        $r19[1] = 12;

        $r19[2] = 13;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryDetails(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,java.lang.String,java.lang.String,int[],int[],int[],long,long,boolean)>(r0, r6, r1, "      (Cached): ", r3, r4, $r19, l0, l1, 1);

        i2 = i2 + -1;

        goto label1;

     label2:
        return;
    }

    static void printPercent(java.io.PrintWriter, double)
    {
        java.io.PrintWriter r0;
        double d0, d1;
        byte $b0, $b1;
        java.lang.Object[] $r1, $r4, $r7;
        java.lang.Double $r2, $r5, $r9;
        java.lang.String $r3, $r6, $r8;

        r0 := @parameter0: java.io.PrintWriter;

        d0 := @parameter1: double;

        d1 = d0 * 100.0;

        $b0 = d1 cmpg 1.0;

        if $b0 >= 0 goto label1;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r7[0] = $r9;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        goto label3;

     label1:
        $b1 = d1 cmpg 10.0;

        if $b1 >= 0 goto label2;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", $r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        goto label3;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r3);

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("%");

        return;
    }

    static void printSizeValue(java.io.PrintWriter, long)
    {
        java.io.PrintWriter r0;
        long l0;
        float f0;
        java.lang.String r1, r2;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.Object[] $r3, $r5, $r7, $r9;
        java.lang.Float $r4, $r6, $r8, $r10;

        r0 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        f0 = (float) l0;

        r1 = "";

        $b1 = f0 cmpl 900.0F;

        if $b1 <= 0 goto label1;

        r1 = "KB";

        f0 = f0 / 1024.0F;

     label1:
        $b2 = f0 cmpl 900.0F;

        if $b2 <= 0 goto label2;

        r1 = "MB";

        f0 = f0 / 1024.0F;

     label2:
        $b3 = f0 cmpl 900.0F;

        if $b3 <= 0 goto label3;

        r1 = "GB";

        f0 = f0 / 1024.0F;

     label3:
        $b4 = f0 cmpl 900.0F;

        if $b4 <= 0 goto label4;

        r1 = "TB";

        f0 = f0 / 1024.0F;

     label4:
        $b5 = f0 cmpl 900.0F;

        if $b5 <= 0 goto label5;

        r1 = "PB";

        f0 = f0 / 1024.0F;

     label5:
        $b6 = f0 cmpg 1.0F;

        if $b6 >= 0 goto label6;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r9[0] = $r10;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r9);

        goto label9;

     label6:
        $b7 = f0 cmpg 10.0F;

        if $b7 >= 0 goto label7;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r7[0] = $r8;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f", $r7);

        goto label9;

     label7:
        $b8 = f0 cmpg 100.0F;

        if $b8 >= 0 goto label8;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r5[0] = $r6;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r5);

        goto label9;

     label8:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r3[0] = $r4;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.0f", $r3);

     label9:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        return;
    }

    public static void dumpProcessListCsv(java.io.PrintWriter, java.util.ArrayList, boolean, int[], boolean, int[], boolean, int[], long)
    {
        java.io.PrintWriter r0;
        java.util.ArrayList r1;
        boolean z0, z1, z2;
        int[] r2, r3, r4, $r8, $r9, $r10;
        long l0;
        int i1, $i2, $i3, $i4;
        com.android.internal.app.ProcessStats$ProcessState r5;
        java.lang.Object $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.util.ArrayList;

        z0 := @parameter2: boolean;

        r2 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r3 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r4 := @parameter7: int[];

        l0 := @parameter8: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("process");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("uid");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("vers");

        if z0 == 0 goto label1;

        $r9 = r2;

        goto label2;

     label1:
        $r9 = null;

     label2:
        if z1 == 0 goto label3;

        $r10 = r3;

        goto label4;

     label3:
        $r10 = null;

     label4:
        if z2 == 0 goto label5;

        $r8 = r4;

        goto label6;

     label5:
        $r8 = null;

     label6:
        staticinvoke <com.android.internal.app.ProcessStats: void dumpStateHeadersCsv(java.io.PrintWriter,java.lang.String,int[],int[],int[])>(r0, "\t", $r9, $r10, $r8);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label7:
        if i1 < 0 goto label8;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.internal.app.ProcessStats$ProcessState) $r6;

        $r7 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        $i3 = r5.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r0, $i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        $i4 = r5.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i4);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessStateCsv(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,boolean,int[],boolean,int[],boolean,int[],long)>(r0, r5, z0, r2, z1, r3, z2, r4, l0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        i1 = i1 + -1;

        goto label7;

     label8:
        return;
    }

    static int printArrayEntry(java.io.PrintWriter, java.lang.String[], int, int)
    {
        java.io.PrintWriter r0;
        java.lang.String[] r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String $r2;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = i0 / i1;

        if i2 < 0 goto label1;

        $i5 = lengthof r1;

        if i2 >= $i5 goto label1;

        $r2 = r1[i2];

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r2);

        goto label2;

     label1:
        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(63);

     label2:
        $i3 = i2 * i1;

        $i4 = i0 - $i3;

        return $i4;
    }

    static void printProcStateTag(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0, i2, i3;
        java.lang.String[] $r1, $r2, $r3;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS>;

        i2 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r1, i0, 56);

        $r2 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS>;

        i3 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r2, i2, 14);

        $r3 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_TAGS>;

        staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r3, i3, 1);

        return;
    }

    static void printAdjTag(java.io.PrintWriter, int)
    {
        java.io.PrintWriter r0;
        int i0, i2;
        java.lang.String[] $r1, $r2;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $r1 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS>;

        i2 = staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r1, i0, 4);

        $r2 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS>;

        staticinvoke <com.android.internal.app.ProcessStats: int printArrayEntry(java.io.PrintWriter,java.lang.String[],int,int)>(r0, $r2, i2, 1);

        return;
    }

    static void printProcStateTagAndValue(java.io.PrintWriter, int, long)
    {
        java.io.PrintWriter r0;
        int i0;
        long l1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTag(java.io.PrintWriter,int)>(r0, i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        return;
    }

    static void printAdjTagAndValue(java.io.PrintWriter, int, long)
    {
        java.io.PrintWriter r0;
        int i0;
        long l1;

        r0 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printAdjTag(java.io.PrintWriter,int)>(r0, i0);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l1);

        return;
    }

    static void dumpAllProcessStateCheckin(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState, long)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        long l0, l4, $l7, $l8, $l14, $l15;
        boolean z0;
        int i1, i2, i3, $i5, $i6, $i9, $i10, $i11, $i12, $i13;
        int[] $r2;
        com.android.internal.app.ProcessStats $r3;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        l0 := @parameter2: long;

        z0 = 0;

        i1 = 0;

     label1:
        $i5 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if i1 >= $i5 goto label3;

        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int[] mDurationsTable>;

        i2 = $r2[i1];

        $i11 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i2 >> $i11;

        $i10 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i3 = $i12 & $i10;

        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 0);

        $i13 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i13 != i3 goto label2;

        z0 = 1;

        $l15 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l14 = l0 - $l15;

        l4 = l4 + $l14;

     label2:
        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTagAndValue(java.io.PrintWriter,int,long)>(r0, i3, l4);

        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $i6 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i6 == -1 goto label4;

        $i9 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        $l7 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l8 = l0 - $l7;

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTagAndValue(java.io.PrintWriter,int,long)>(r0, $i9, $l8);

     label4:
        return;
    }

    static void dumpAllProcessPssCheckin(java.io.PrintWriter, com.android.internal.app.ProcessStats$ProcessState)
    {
        java.io.PrintWriter r0;
        com.android.internal.app.ProcessStats$ProcessState r1;
        int i0, i1, i2, $i10, $i11, $i12, $i13;
        long l3, l4, l5, l6, l7, l8, l9;
        int[] $r2;
        com.android.internal.app.ProcessStats $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.internal.app.ProcessStats$ProcessState;

        i0 = 0;

     label1:
        $i10 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if i0 >= $i10 goto label2;

        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i1 = $r2[i0];

        $i11 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i1 >> $i11;

        $i13 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i2 = $i12 & $i13;

        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l3 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 0);

        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l4 = virtualinvoke $r4.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 1);

        $r5 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l5 = virtualinvoke $r5.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 2);

        $r6 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l6 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 3);

        $r8 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l7 = virtualinvoke $r8.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 4);

        $r7 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l8 = virtualinvoke $r7.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 5);

        $r9 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        l9 = virtualinvoke $r9.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i1, 6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(44);

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTag(java.io.PrintWriter,int)>(r0, i2);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l3);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l4);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l7);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(58);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l9);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void reset()
    {
        com.android.internal.app.ProcessStats r0;
        com.android.internal.app.ProcessMap $r1, $r3;
        android.util.ArrayMap $r2, $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void resetCommon()>();

        $r1 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r2 = virtualinvoke $r1.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        $r3 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke $r4.<android.util.ArrayMap: void clear()>();

        r0.<com.android.internal.app.ProcessStats: int mMemFactor> = -1;

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = 0L;

        return;
    }

    public void resetSafely()
    {
        com.android.internal.app.ProcessStats r0;
        long l0;
        android.util.ArrayMap r1, $r15, $r16, $r17, $r18, $r19, $r21, $r23, $r25, $r27, r35;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27;
        android.util.SparseArray r2, r3, r36, r38;
        com.android.internal.app.ProcessStats$PackageState r4;
        com.android.internal.app.ProcessStats$ProcessState r5, $r28, $r30, $r31, $r34, r39, r40;
        com.android.internal.app.ProcessMap $r6, $r7;
        java.lang.Object $r8, $r9, $r11, $r13, $r14, $r22, $r24, $r29, $r32, $r33;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.app.ProcessStats$ServiceState r37;

        r0 := @this: com.android.internal.app.ProcessStats;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void resetCommon()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r1 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i6 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i1 = $i6 - 1;

     label01:
        if i1 < 0 goto label04;

        $r32 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r2 = (android.util.SparseArray) $r32;

        $i23 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i2 = $i23 - 1;

     label02:
        if i2 < 0 goto label03;

        $r33 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r34 = (com.android.internal.app.ProcessStats$ProcessState) $r33;

        $r34.<com.android.internal.app.ProcessStats$ProcessState: int mTmpNumInUse> = 0;

        i2 = i2 + -1;

        goto label02;

     label03:
        i1 = i1 + -1;

        goto label01;

     label04:
        $r7 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r35 = virtualinvoke $r7.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i7 = virtualinvoke r35.<android.util.ArrayMap: int size()>();

        i24 = $i7 - 1;

     label05:
        if i24 < 0 goto label21;

        $r11 = virtualinvoke r35.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i24);

        r36 = (android.util.SparseArray) $r11;

        $i13 = virtualinvoke r36.<android.util.SparseArray: int size()>();

        i3 = $i13 - 1;

     label06:
        if i3 < 0 goto label19;

        $r13 = virtualinvoke r36.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r3 = (android.util.SparseArray) $r13;

        $i15 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i4 = $i15 - 1;

     label07:
        if i4 < 0 goto label17;

        $r14 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.internal.app.ProcessStats$PackageState) $r14;

        $r15 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $i18 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

        i5 = $i18 - 1;

     label08:
        if i5 < 0 goto label11;

        $r25 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r24 = virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r5 = (com.android.internal.app.ProcessStats$ProcessState) $r24;

        $z4 = virtualinvoke r5.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z4 == 0 goto label09;

        virtualinvoke r5.<com.android.internal.app.ProcessStats$ProcessState: void resetSafely(long)>(l0);

        $r31 = r5.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i22 = $r31.<com.android.internal.app.ProcessStats$ProcessState: int mTmpNumInUse>;

        $i21 = $i22 + 1;

        $r31.<com.android.internal.app.ProcessStats$ProcessState: int mTmpNumInUse> = $i21;

        $r30 = r5.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r30.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mTmpFoundSubProc> = r5;

        goto label10;

     label09:
        $r23 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r29 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        $r28 = (com.android.internal.app.ProcessStats$ProcessState) $r29;

        virtualinvoke $r28.<com.android.internal.app.ProcessStats$ProcessState: void makeDead()>();

        $r27 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i5);

     label10:
        i5 = i5 + -1;

        goto label08;

     label11:
        $r17 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i17 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        i25 = $i17 - 1;

     label12:
        if i25 < 0 goto label15;

        $r18 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r22 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i25);

        r37 = (com.android.internal.app.ProcessStats$ServiceState) $r22;

        $z3 = virtualinvoke r37.<com.android.internal.app.ProcessStats$ServiceState: boolean isInUse()>();

        if $z3 == 0 goto label13;

        virtualinvoke r37.<com.android.internal.app.ProcessStats$ServiceState: void resetSafely(long)>(l0);

        goto label14;

     label13:
        $r21 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i25);

     label14:
        i25 = i25 + -1;

        goto label12;

     label15:
        $r16 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $i20 = virtualinvoke $r16.<android.util.ArrayMap: int size()>();

        if $i20 > 0 goto label16;

        $r19 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i19 = virtualinvoke $r19.<android.util.ArrayMap: int size()>();

        if $i19 > 0 goto label16;

        virtualinvoke r3.<android.util.SparseArray: void removeAt(int)>(i4);

     label16:
        i4 = i4 + -1;

        goto label07;

     label17:
        $i16 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        if $i16 > 0 goto label18;

        virtualinvoke r36.<android.util.SparseArray: void removeAt(int)>(i3);

     label18:
        i3 = i3 + -1;

        goto label06;

     label19:
        $i14 = virtualinvoke r36.<android.util.SparseArray: int size()>();

        if $i14 > 0 goto label20;

        virtualinvoke r35.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i24);

     label20:
        i24 = i24 + -1;

        goto label05;

     label21:
        $i8 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i26 = $i8 - 1;

     label22:
        if i26 < 0 goto label30;

        $r8 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i26);

        r38 = (android.util.SparseArray) $r8;

        $i10 = virtualinvoke r38.<android.util.SparseArray: int size()>();

        i27 = $i10 - 1;

     label23:
        if i27 < 0 goto label28;

        $r9 = virtualinvoke r38.<android.util.SparseArray: java.lang.Object valueAt(int)>(i27);

        r39 = (com.android.internal.app.ProcessStats$ProcessState) $r9;

        $z1 = virtualinvoke r39.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z1 != 0 goto label24;

        $i12 = r39.<com.android.internal.app.ProcessStats$ProcessState: int mTmpNumInUse>;

        if $i12 <= 0 goto label26;

     label24:
        $z0 = r39.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        if $z0 != 0 goto label25;

        $z2 = r39.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z2 == 0 goto label25;

        $i11 = r39.<com.android.internal.app.ProcessStats$ProcessState: int mTmpNumInUse>;

        if $i11 != 1 goto label25;

        r40 = r39.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mTmpFoundSubProc>;

        r40.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess> = r40;

        virtualinvoke r38.<android.util.SparseArray: void setValueAt(int,java.lang.Object)>(i27, r40);

        goto label27;

     label25:
        virtualinvoke r39.<com.android.internal.app.ProcessStats$ProcessState: void resetSafely(long)>(l0);

        goto label27;

     label26:
        virtualinvoke r39.<com.android.internal.app.ProcessStats$ProcessState: void makeDead()>();

        virtualinvoke r38.<android.util.SparseArray: void removeAt(int)>(i27);

     label27:
        i27 = i27 + -1;

        goto label23;

     label28:
        $i9 = virtualinvoke r38.<android.util.SparseArray: int size()>();

        if $i9 > 0 goto label29;

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i26);

     label29:
        i26 = i26 + -1;

        goto label22;

     label30:
        r0.<com.android.internal.app.ProcessStats: long mStartTime> = l0;

        return;
    }

    private void resetCommon()
    {
        com.android.internal.app.ProcessStats r0;
        long $l0, $l1, $l2;
        java.util.ArrayList $r1, $r3;
        long[] $r2, $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l0;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void buildTimePeriodStartClockStr()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l1;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime> = $l1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = $l2;

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartUptime> = $l2;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r2 = newarray (long)[4096];

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = 0;

        $r4 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r4, 0L);

        r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable> = null;

        r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize> = 0;

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = 0L;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = null;

        r0.<com.android.internal.app.ProcessStats: int mFlags> = 0;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: boolean evaluateSystemProperties(boolean)>(1);

        return;
    }

    public boolean evaluateSystemProperties(boolean)
    {
        com.android.internal.app.ProcessStats r0;
        boolean z0, z1, $z2;
        java.lang.String r1, $r3, $r4;
        dalvik.system.VMRuntime $r2;

        r0 := @this: com.android.internal.app.ProcessStats;

        z0 := @parameter0: boolean;

        z1 = 0;

        $r2 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r3 = virtualinvoke $r2.<dalvik.system.VMRuntime: java.lang.String vmLibrary()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("persist.sys.dalvik.vm.lib.2", $r3);

        $r4 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z2 != 0 goto label1;

        z1 = 1;

        if z0 == 0 goto label1;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime> = r1;

     label1:
        return z1;
    }

    private void buildTimePeriodStartClockStr()
    {
        com.android.internal.app.ProcessStats r0;
        long $l0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.app.ProcessStats;

        $l0 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd-HH-mm-ss", $l0);

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr> = $r2;

        return;
    }

    private int[] readTableFromParcel(android.os.Parcel, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2, r3, $r9, $r10, $r16;
        int i0, i1, $i2, $i3, $i4;
        int[] r4, $r18;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r17;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; bad ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" table size: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r16);

        $r18 = <com.android.internal.app.ProcessStats: int[] BAD_TABLE>;

        return $r18;

     label1:
        if i0 != 0 goto label2;

        return null;

     label2:
        r4 = newarray (int)[i0];

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r4[i1] = $i2;

        $i3 = r4[i1];

        $z0 = virtualinvoke r0.<com.android.internal.app.ProcessStats: boolean validateLongOffset(int)>($i3);

        if $z0 != 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; bad ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" table entry: ");

        $i4 = r4[i1];

        $r9 = staticinvoke <com.android.internal.app.ProcessStats: java.lang.String printLongOffset(int)>($i4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r10);

        return null;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return r4;
    }

    private void writeCompactedLongArray(android.os.Parcel, long[], int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        long[] r2;
        int i0, i1, i3, i4, $i9, $i11;
        long l2, $l7, $l8, $l10;
        byte $b5, $b6;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: long[];

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        l2 = r2[i1];

        $b5 = l2 cmp 0L;

        if $b5 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time val negative: ");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r6);

        l2 = 0L;

     label2:
        $b6 = l2 cmp 2147483647L;

        if $b6 > 0 goto label3;

        $i11 = (int) l2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        goto label4;

     label3:
        $l7 = l2 >> 32;

        $l8 = $l7 & 2147483647L;

        $i9 = (int) $l8;

        i3 = $i9 ^ -1;

        $l10 = l2 & 268435455L;

        i4 = (int) $l10;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private void readCompactedLongArray(android.os.Parcel, int, long[], int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        long[] r2;
        long $l7, $l8, $l9, $l10, $l11;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r2 := @parameter2: long[];

        i1 := @parameter3: int;

        if i0 > 10 goto label1;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>(r2);

        return;

     label1:
        i2 = lengthof r2;

        if i1 <= i2 goto label2;

        $r3 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad array lengths: got ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" array is ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        i3 = 0;

     label3:
        if i3 >= i1 goto label6;

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i4 < 0 goto label4;

        $l11 = (long) i4;

        r2[i3] = $l11;

        goto label5;

     label4:
        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = i4 ^ -1;

        $l7 = (long) $i6;

        $l9 = $l7 << 32;

        $l8 = (long) i5;

        $l10 = $l9 | $l8;

        r2[i3] = $l10;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        if i3 >= i2 goto label7;

        r2[i3] = 0L;

        i3 = i3 + 1;

        goto label6;

     label7:
        return;
    }

    private void writeCommonString(android.os.Parcel, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2;
        java.lang.Integer r3, r9;
        android.util.ArrayMap $r4, $r6, $r7;
        java.lang.Object $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.lang.Integer) $r5;

        if r3 == null goto label1;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;

     label1:
        $r6 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        $i0 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r9);

        $i1 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        $i2 = $i1 ^ -1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        return;
    }

    private java.lang.String readCommonString(android.os.Parcel, int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1, $i2, i3;
        java.lang.String r2, $r9, $r10;
        java.util.ArrayList $r3, $r4, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        if i0 > 9 goto label1;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        return $r10;

     label1:
        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 < 0 goto label2;

        $r7 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (java.lang.String) $r8;

        return $r9;

     label2:
        i3 = i1 ^ -1;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

     label3:
        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i2 > i3 goto label4;

        $r6 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label3;

     label4:
        $r4 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i3, r2);

        return r2;
    }

    public int describeContents()
    {
        com.android.internal.app.ProcessStats r0;

        r0 := @this: com.android.internal.app.ProcessStats;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0;
        long $l1;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>(r1, $l1, i0);

        return;
    }

    public void writeToParcel(android.os.Parcel, long, int)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        long l0, $l13, $l14, $l15, $l16, $l18, $l34, $l35, $l39, $l40;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58;
        android.util.ArrayMap r2, $r10, $r11, $r26, $r27, $r30, $r31, $r34, $r36, $r52, $r54, $r55, $r62, r64;
        android.util.SparseArray r3, r4, r65, r68, r70, r71;
        com.android.internal.app.ProcessStats$PackageState r5, r72;
        com.android.internal.app.ProcessStats$ProcessState r6, r8, $r41, $r57, $r60, r69;
        com.android.internal.app.ProcessStats$ServiceState r7, $r63;
        com.android.internal.app.ProcessMap $r9, $r12, $r13;
        java.util.ArrayList $r14, $r16, $r17, $r18, $r50;
        java.lang.String $r15, $r23, $r33, $r35, $r38, $r43, $r46;
        java.lang.Object $r19, $r22, $r24, $r25, $r28, $r29, $r32, $r37, $r39, $r40, $r42, $r44, $r48, $r49, $r51, $r53, $r56, $r58, $r59, $r61;
        long[] $r20, $r21, $r45, r66, r67;
        int[] $r47;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1347638355);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(18);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(14);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(8);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(16);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(4096);

        $r10 = new android.util.ArrayMap;

        $r9 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r11 = $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap mMap>;

        $i12 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        specialinvoke $r10.<android.util.ArrayMap: void <init>(int)>($i12);

        r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex> = $r10;

        $r12 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r2 = virtualinvoke $r12.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label01:
        if i3 >= i2 goto label04;

        $r59 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r3 = (android.util.SparseArray) $r59;

        i4 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i5 = 0;

     label02:
        if i5 >= i4 goto label03;

        $r58 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r57 = (com.android.internal.app.ProcessStats$ProcessState) $r58;

        virtualinvoke $r57.<com.android.internal.app.ProcessStats$ProcessState: void commitStateTime(long)>(l0);

        i5 = i5 + 1;

        goto label02;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        $r13 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r64 = virtualinvoke $r13.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i41 = virtualinvoke r64.<android.util.ArrayMap: int size()>();

        i42 = 0;

     label05:
        if i42 >= i41 goto label15;

        $r49 = virtualinvoke r64.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i42);

        r65 = (android.util.SparseArray) $r49;

        i6 = virtualinvoke r65.<android.util.SparseArray: int size()>();

        i7 = 0;

     label06:
        if i7 >= i6 goto label14;

        $r48 = virtualinvoke r65.<android.util.SparseArray: java.lang.Object valueAt(int)>(i7);

        r4 = (android.util.SparseArray) $r48;

        i8 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i9 = 0;

     label07:
        if i9 >= i8 goto label13;

        $r56 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r5 = (com.android.internal.app.ProcessStats$PackageState) $r56;

        $r55 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i10 = virtualinvoke $r55.<android.util.ArrayMap: int size()>();

        i11 = 0;

     label08:
        if i11 >= i10 goto label10;

        $r62 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r61 = virtualinvoke $r62.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i11);

        r6 = (com.android.internal.app.ProcessStats$ProcessState) $r61;

        $r60 = r6.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r60 == r6 goto label09;

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ProcessState: void commitStateTime(long)>(l0);

     label09:
        i11 = i11 + 1;

        goto label08;

     label10:
        $r54 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i43 = virtualinvoke $r54.<android.util.ArrayMap: int size()>();

        i44 = 0;

     label11:
        if i44 >= i43 goto label12;

        $r52 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r53 = virtualinvoke $r52.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i44);

        $r63 = (com.android.internal.app.ProcessStats$ServiceState) $r53;

        virtualinvoke $r63.<com.android.internal.app.ProcessStats$ServiceState: void commitStateTime(long)>(l0);

        i44 = i44 + 1;

        goto label11;

     label12:
        i9 = i9 + 1;

        goto label07;

     label13:
        i7 = i7 + 1;

        goto label06;

     label14:
        i42 = i42 + 1;

        goto label05;

     label15:
        $l15 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l15);

        $l16 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l16);

        $l13 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l13);

        $l14 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l14);

        $l18 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l18);

        $r15 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        $i17 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $r14 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i20 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i21 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        i45 = 0;

     label16:
        $r16 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i19 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $i23 = $i19 - 1;

        if i45 >= $i23 goto label17;

        $r50 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r51 = virtualinvoke $r50.<java.util.ArrayList: java.lang.Object get(int)>(i45);

        r66 = (long[]) $r51;

        $i38 = lengthof r66;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, r66, $i38);

        i45 = i45 + 1;

        goto label16;

     label17:
        $r17 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r18 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i22 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        $i26 = $i22 - 1;

        $r19 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>($i26);

        r67 = (long[]) $r19;

        $i25 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, r67, $i25);

        $i24 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i24 == -1 goto label18;

        $r45 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i33 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l39 = $r45[$i33];

        $l35 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        $l34 = l0 - $l35;

        $l40 = $l39 + $l34;

        $r45[$i33] = $l40;

        r0.<com.android.internal.app.ProcessStats: long mStartTime> = l0;

     label18:
        $r20 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $r21 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i28 = lengthof $r21;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCompactedLongArray(android.os.Parcel,long[],int)>(r1, $r20, $i28);

        $i27 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        i46 = 0;

     label19:
        $i29 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        if i46 >= $i29 goto label20;

        $r47 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i37 = $r47[i46];

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i37);

        i46 = i46 + 1;

        goto label19;

     label20:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        i47 = 0;

     label21:
        if i47 >= i2 goto label24;

        $r44 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i47);

        $r43 = (java.lang.String) $r44;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r43);

        $r39 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i47);

        r68 = (android.util.SparseArray) $r39;

        i48 = virtualinvoke r68.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i48);

        i49 = 0;

     label22:
        if i49 >= i48 goto label23;

        $i32 = virtualinvoke r68.<android.util.SparseArray: int keyAt(int)>(i49);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $r40 = virtualinvoke r68.<android.util.SparseArray: java.lang.Object valueAt(int)>(i49);

        r69 = (com.android.internal.app.ProcessStats$ProcessState) $r40;

        $r46 = r69.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r46);

        $i36 = r69.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i36);

        virtualinvoke r69.<com.android.internal.app.ProcessStats$ProcessState: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        i49 = i49 + 1;

        goto label22;

     label23:
        i47 = i47 + 1;

        goto label21;

     label24:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i41);

        i50 = 0;

     label25:
        if i50 >= i41 goto label36;

        $r24 = virtualinvoke r64.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i50);

        $r23 = (java.lang.String) $r24;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r23);

        $r22 = virtualinvoke r64.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i50);

        r70 = (android.util.SparseArray) $r22;

        i51 = virtualinvoke r70.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i51);

        i52 = 0;

     label26:
        if i52 >= i51 goto label35;

        $i30 = virtualinvoke r70.<android.util.SparseArray: int keyAt(int)>(i52);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $r25 = virtualinvoke r70.<android.util.SparseArray: java.lang.Object valueAt(int)>(i52);

        r71 = (android.util.SparseArray) $r25;

        i53 = virtualinvoke r71.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i53);

        i54 = 0;

     label27:
        if i54 >= i53 goto label34;

        $i31 = virtualinvoke r71.<android.util.SparseArray: int keyAt(int)>(i54);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r29 = virtualinvoke r71.<android.util.SparseArray: java.lang.Object valueAt(int)>(i54);

        r72 = (com.android.internal.app.ProcessStats$PackageState) $r29;

        $r30 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i55 = virtualinvoke $r30.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        i56 = 0;

     label28:
        if i56 >= i55 goto label31;

        $r31 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r32 = virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i56);

        $r33 = (java.lang.String) $r32;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r33);

        $r34 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r42 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i56);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r42;

        $r41 = r8.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r41 != r8 goto label29;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label30;

     label29:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r8.<com.android.internal.app.ProcessStats$ProcessState: void writeToParcel(android.os.Parcel,long)>(r1, l0);

     label30:
        i56 = i56 + 1;

        goto label28;

     label31:
        $r26 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i57 = virtualinvoke $r26.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i57);

        i58 = 0;

     label32:
        if i58 >= i57 goto label33;

        $r27 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i58);

        $r35 = (java.lang.String) $r28;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r35);

        $r36 = r72.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r37 = virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i58);

        r7 = (com.android.internal.app.ProcessStats$ServiceState) $r37;

        $r38 = r7.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void writeCommonString(android.os.Parcel,java.lang.String)>(r1, $r38);

        virtualinvoke r7.<com.android.internal.app.ProcessStats$ServiceState: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        i58 = i58 + 1;

        goto label32;

     label33:
        i54 = i54 + 1;

        goto label27;

     label34:
        i52 = i52 + 1;

        goto label26;

     label35:
        i50 = i50 + 1;

        goto label25;

     label36:
        r0.<com.android.internal.app.ProcessStats: android.util.ArrayMap mCommonStringToIndex> = null;

        return;
    }

    private boolean readCheckedInt(android.os.Parcel, int, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        java.lang.String r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = $i2;

        if $i2 == i0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r8;

        return 0;

     label1:
        return 1;
    }

    static byte[] readFully(java.io.InputStream, int[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] r2, r3;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: int[];

        i0 = 0;

        i1 = virtualinvoke r0.<java.io.InputStream: int available()>();

        if i1 <= 0 goto label1;

        $i7 = i1 + 1;

        goto label2;

     label1:
        $i7 = 16384;

     label2:
        r2 = newarray (byte)[$i7];

     label3:
        $i3 = lengthof r2;

        $i4 = $i3 - i0;

        i2 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, $i4);

        if i2 >= 0 goto label4;

        r1[0] = i0;

        return r2;

     label4:
        i0 = i0 + i2;

        $i5 = lengthof r2;

        if i0 < $i5 goto label5;

        $i6 = i0 + 16384;

        r3 = newarray (byte)[$i6];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 0, i0);

        r2 = r3;

     label5:
        goto label3;
    }

    public void read(java.io.InputStream)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.InputStream r1;
        int[] r2;
        byte[] r3;
        android.os.Parcel r4;
        int $i0;
        java.io.IOException $r5, r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.InputStream;

     label1:
        r2 = newarray (int)[1];

        r3 = staticinvoke <com.android.internal.app.ProcessStats: byte[] readFully(java.io.InputStream,int[])>(r1, r2);

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = r2[0];

        virtualinvoke r4.<android.os.Parcel: void unmarshall(byte[],int,int)>(r3, 0, $i0);

        virtualinvoke r4.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r1.<java.io.InputStream: void close()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void readFromParcel(android.os.Parcel)>(r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z14;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i15, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27;
        java.lang.String r2, r3, r7, $r13, $r31, $r33, $r46, $r55, $r62, $r66, $r67, $r71, $r79, $r83, $r91, $r95, r105, r106, r107;
        com.android.internal.app.ProcessStats$ProcessState r4, r8, r10, $r41, $r50, $r75, $r87;
        com.android.internal.app.ProcessStats$PackageState r5, $r22;
        android.util.SparseArray r6, $r56;
        com.android.internal.app.ProcessMap $r9, $r24, $r32, $r53, $r74, $r85, $r96;
        android.util.ArrayMap $r11, $r26, $r29, $r37, $r39, $r48, $r97;
        java.util.ArrayList $r12, $r14, $r15, $r98, $r99, $r103;
        long $l11, $l12, $l13, $l14, $l16;
        long[] $r16, $r17, $r101, $r102, r104;
        int[] $r18, $r19, $r20, $r21, $r82;
        java.lang.Object $r23, $r27, $r40, $r47, $r84, $r100;
        com.android.internal.app.ProcessStats$ServiceState $r25, $r28, r108;
        java.lang.StringBuilder $r34, $r35, $r36, $r43, $r44, $r45, $r49, $r51, $r52, $r57, $r58, $r59, $r60, $r61, $r63, $r64, $r65, $r68, $r69, $r70, $r72, $r76, $r77, $r78, $r80, $r81, $r86, $r88, $r89, $r90, $r92, $r93, $r94;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: android.os.Parcel;

        $r9 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r11 = virtualinvoke $r9.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i10 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        if $i10 > 0 goto label01;

        $r96 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r97 = virtualinvoke $r96.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i19 = virtualinvoke $r97.<android.util.ArrayMap: int size()>();

        if $i19 <= 0 goto label02;

     label01:
        $z14 = 1;

        goto label03;

     label02:
        $z14 = 0;

     label03:
        z0 = $z14;

        if z0 == 0 goto label04;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void resetSafely()>();

     label04:
        $z1 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 1347638355, "magic number");

        if $z1 != 0 goto label05;

        return;

     label05:
        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 18 goto label06;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad version: ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r95;

        return;

     label06:
        $z3 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 14, "state count");

        if $z3 != 0 goto label07;

        return;

     label07:
        $z2 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 8, "adj count");

        if $z2 != 0 goto label08;

        return;

     label08:
        $z5 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 7, "pss count");

        if $z5 != 0 goto label09;

        return;

     label09:
        $z4 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 16, "sys mem usage count");

        if $z4 != 0 goto label10;

        return;

     label10:
        $z6 = specialinvoke r0.<com.android.internal.app.ProcessStats: boolean readCheckedInt(android.os.Parcel,int,java.lang.String)>(r1, 4096, "longs size");

        if $z6 != 0 goto label11;

        return;

     label11:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString> = $r12;

        $l13 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock> = $l13;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void buildTimePeriodStartClockStr()>();

        $l14 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime> = $l14;

        $l11 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l11;

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartUptime> = $l12;

        $l16 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = $l16;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime> = $r13;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.app.ProcessStats: int mFlags> = $i15;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r15 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

        i3 = 0;

     label12:
        $i17 = i1 - 1;

        if i3 >= $i17 goto label15;

     label13:
        $r98 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i21 = virtualinvoke $r98.<java.util.ArrayList: int size()>();

        if i3 < $i21 goto label14;

        $r103 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r102 = newarray (long)[4096];

        virtualinvoke $r103.<java.util.ArrayList: boolean add(java.lang.Object)>($r102);

        goto label13;

     label14:
        $r99 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r100 = virtualinvoke $r99.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r101 = (long[]) $r100;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, $r101, 4096);

        i3 = i3 + 1;

        goto label12;

     label15:
        r104 = newarray (long)[4096];

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = i2;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, r104, i2);

        $r14 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r104);

        $r16 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $r17 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i18 = lengthof $r17;

        specialinvoke r0.<com.android.internal.app.ProcessStats: void readCompactedLongArray(android.os.Parcel,int,long[],int)>(r1, i0, $r16, $i18);

        $r21 = specialinvoke r0.<com.android.internal.app.ProcessStats: int[] readTableFromParcel(android.os.Parcel,java.lang.String,java.lang.String)>(r1, "ProcessStats", "sys mem usage");

        r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable> = $r21;

        $r19 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $r20 = <com.android.internal.app.ProcessStats: int[] BAD_TABLE>;

        if $r19 != $r20 goto label16;

        return;

     label16:
        $r18 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        if $r18 == null goto label17;

        $r82 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        $i20 = lengthof $r82;

        goto label18;

     label17:
        $i20 = 0;

     label18:
        r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize> = $i20;

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i4 >= 0 goto label19;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad process count: ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r83;

        return;

     label19:
        if i4 <= 0 goto label29;

        i4 = i4 + -1;

        r2 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r2 != null goto label20;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad process name";

        return;

     label20:
        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i5 >= 0 goto label21;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid count: ");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r79;

        return;

     label21:
        if i5 <= 0 goto label28;

        i5 = i5 + -1;

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i6 >= 0 goto label22;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid: ");

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r91;

        return;

     label22:
        r3 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r3 != null goto label23;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad process package name";

        return;

     label23:
        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if z0 == 0 goto label24;

        $r85 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r84 = virtualinvoke $r85.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r2, i6);

        $r87 = (com.android.internal.app.ProcessStats$ProcessState) $r84;

        goto label25;

     label24:
        $r87 = null;

     label25:
        r4 = $r87;

        if r4 == null goto label26;

        $z11 = virtualinvoke r4.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 0);

        if $z11 != 0 goto label27;

        return;

     label26:
        $r75 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r75.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,int,java.lang.String)>(r0, r3, i6, i7, r2);

        r4 = $r75;

        $z12 = virtualinvoke r4.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 1);

        if $z12 != 0 goto label27;

        return;

     label27:
        $r74 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        virtualinvoke $r74.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r2, i6, r4);

        goto label21;

     label28:
        goto label19;

     label29:
        i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i22 >= 0 goto label30;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package count: ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r67;

        return;

     label30:
        if i22 <= 0 goto label57;

        i22 = i22 + -1;

        r105 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r105 != null goto label31;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package name";

        return;

     label31:
        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i23 >= 0 goto label32;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid count: ");

        $r72 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r71;

        return;

     label32:
        if i23 <= 0 goto label56;

        i23 = i23 + -1;

        i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i24 >= 0 goto label33;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad uid: ");

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r62;

        return;

     label33:
        i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i25 >= 0 goto label34;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad versions count: ");

        $r65 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r66;

        return;

     label34:
        if i25 <= 0 goto label55;

        i25 = i25 + -1;

        i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r22 = new com.android.internal.app.ProcessStats$PackageState;

        specialinvoke $r22.<com.android.internal.app.ProcessStats$PackageState: void <init>(java.lang.String,int)>(r105, i24);

        r5 = $r22;

        $r24 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r23 = virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r105, i24);

        r6 = (android.util.SparseArray) $r23;

        if r6 != null goto label35;

        $r56 = new android.util.SparseArray;

        specialinvoke $r56.<android.util.SparseArray: void <init>()>();

        r6 = $r56;

        $r53 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        virtualinvoke $r53.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r105, i24, r6);

     label35:
        virtualinvoke r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i26, r5);

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i8 >= 0 goto label36;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package process count: ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r55;

        return;

     label36:
        if i8 <= 0 goto label45;

        i8 = i8 + -1;

        r7 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        if r7 != null goto label37;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package process name";

        return;

     label37:
        i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r32 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r40 = virtualinvoke $r32.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r7, i24);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r40;

        if r8 != null goto label38;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no common proc: ");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r46;

        return;

     label38:
        if i9 == 0 goto label43;

        if z0 == 0 goto label39;

        $r48 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r47 = virtualinvoke $r48.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        $r50 = (com.android.internal.app.ProcessStats$ProcessState) $r47;

        goto label40;

     label39:
        $r50 = null;

     label40:
        r10 = $r50;

        if r10 == null goto label41;

        $z10 = virtualinvoke r10.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 0);

        if $z10 != 0 goto label42;

        return;

     label41:
        $r41 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r41.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,int,java.lang.String,long)>(r8, r105, i24, i26, r7, 0L);

        r10 = $r41;

        $z9 = virtualinvoke r10.<com.android.internal.app.ProcessStats$ProcessState: boolean readFromParcel(android.os.Parcel,boolean)>(r1, 1);

        if $z9 != 0 goto label42;

        return;

     label42:
        $r37 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r10);

        goto label44;

     label43:
        $r39 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8);

     label44:
        goto label36;

     label45:
        i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i27 >= 0 goto label46;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad package service count: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r31 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r31;

        return;

     label46:
        if i27 <= 0 goto label54;

        i27 = i27 + -1;

        r106 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r106 != null goto label47;

        r0.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = "bad package service name";

        return;

     label47:
        if i0 <= 9 goto label48;

        $r33 = specialinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String readCommonString(android.os.Parcel,int)>(r1, i0);

        goto label49;

     label48:
        $r33 = null;

     label49:
        r107 = $r33;

        if z0 == 0 goto label50;

        $r26 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r27 = virtualinvoke $r26.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r106);

        $r28 = (com.android.internal.app.ProcessStats$ServiceState) $r27;

        goto label51;

     label50:
        $r28 = null;

     label51:
        r108 = $r28;

        if r108 != null goto label52;

        $r25 = new com.android.internal.app.ProcessStats$ServiceState;

        specialinvoke $r25.<com.android.internal.app.ProcessStats$ServiceState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ProcessState)>(r0, r105, r106, r107, null);

        r108 = $r25;

     label52:
        $z8 = virtualinvoke r108.<com.android.internal.app.ProcessStats$ServiceState: boolean readFromParcel(android.os.Parcel)>(r1);

        if $z8 != 0 goto label53;

        return;

     label53:
        $r29 = r5.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r106, r108);

        goto label46;

     label54:
        goto label34;

     label55:
        goto label32;

     label56:
        goto label30;

     label57:
        r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mIndexToCommonString> = null;

        return;
    }

    int addLongData(int, int, int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = virtualinvoke r0.<com.android.internal.app.ProcessStats: int allocLongData(int)>(i2);

        $r1 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        goto label2;

     label1:
        $r2 = <libcore.util.EmptyArray: int[] INT>;

     label2:
        $i5 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        $i4 = i1 | i3;

        $r3 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>($r2, $i5, i0, $i4);

        r0.<com.android.internal.app.ProcessStats: int[] mAddLongTable> = $r3;

        $i6 = r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        $i7 = $i6 + 1;

        r0.<com.android.internal.app.ProcessStats: int mAddLongTableSize> = $i7;

        return i3;
    }

    int allocLongData(int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long[] r1, r6;
        java.util.ArrayList $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

        $r3 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (long[]) $r4;

        $i4 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i6 = $i4 + i0;

        $i5 = lengthof r1;

        if $i6 <= $i5 goto label1;

        r6 = newarray (long)[4096];

        $r5 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = 0;

     label1:
        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i12 = i1 << $i7;

        $i9 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i10 = $i9 << $i8;

        i2 = $i12 | $i10;

        $i11 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        $i13 = $i11 + i0;

        r0.<com.android.internal.app.ProcessStats: int mNextLong> = $i13;

        return i2;
    }

    boolean validateLongOffset(int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        $i3 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i5 = i0 >> $i3;

        $i4 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        i1 = $i5 & $i4;

        $r1 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i6 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 < $i6 goto label1;

        return 0;

     label1:
        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i9 = i0 >> $i7;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        i2 = $i9 & $i8;

        if i2 < 4096 goto label2;

        return 0;

     label2:
        return 1;
    }

    static java.lang.String printLongOffset(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r7;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(16);

        r0 = $r1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a");

        $i1 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i3 = i0 >> $i1;

        $i2 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i4 = $i3 & $i2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("i");

        $i5 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i7 = i0 >> $i5;

        $i6 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i8 = $i7 & $i6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t");

        $i10 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i12 = i0 >> $i10;

        $i9 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        $i11 = $i12 & $i9;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    void setLong(int, int, long)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        long l2;
        long[] r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r2 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i3 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i5 = i0 >> $i3;

        $i4 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i6 = $i5 & $i4;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        r1 = (long[]) $r3;

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i9 = i0 >> $i7;

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i10 = $i9 & $i8;

        $i11 = i1 + $i10;

        r1[$i11] = l2;

        return;
    }

    long getLong(int, int)
    {
        com.android.internal.app.ProcessStats r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        long[] r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        long $l11;

        r0 := @this: com.android.internal.app.ProcessStats;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i2 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i4 = i0 >> $i2;

        $i3 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i5 = $i4 & $i3;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        r1 = (long[]) $r3;

        $i6 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i8 = i0 >> $i6;

        $i7 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        $i9 = $i8 & $i7;

        $i10 = i1 + $i9;

        $l11 = r1[$i10];

        return $l11;
    }

    static int binarySearch(int[], int, int)
    {
        int[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = i0 - 1;

     label1:
        if i2 > i3 goto label5;

        $i7 = i2 + i3;

        i4 = $i7 >>> 1;

        $i9 = r0[i4];

        $i8 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i11 = $i9 >> $i8;

        $i10 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i5 = $i11 & $i10;

        if i5 >= i1 goto label2;

        i2 = i4 + 1;

        goto label4;

     label2:
        if i5 <= i1 goto label3;

        i3 = i4 - 1;

        goto label4;

     label3:
        return i4;

     label4:
        goto label1;

     label5:
        $i6 = i2 ^ -1;

        return $i6;
    }

    public com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String, int, int)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1;
        int i0, i1;
        android.util.SparseArray r2, $r8;
        com.android.internal.app.ProcessStats$PackageState r3, $r7, r11;
        com.android.internal.app.ProcessMap $r4, $r9;
        java.lang.Object $r5, $r6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        r2 = (android.util.SparseArray) $r5;

        if r2 != null goto label1;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        virtualinvoke $r9.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, i0, r2);

     label1:
        $r6 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (com.android.internal.app.ProcessStats$PackageState) $r6;

        if r3 == null goto label2;

        return r3;

     label2:
        $r7 = new com.android.internal.app.ProcessStats$PackageState;

        specialinvoke $r7.<com.android.internal.app.ProcessStats$PackageState: void <init>(java.lang.String,int)>(r1, i0);

        r11 = $r7;

        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r11);

        return r11;
    }

    public com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String, int, int, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, $r16, $r17, $r22, $r23, $r28, $r29, $r32;
        int i0, i1, i3, $i5, $i7, $i8;
        com.android.internal.app.ProcessStats$PackageState r3, r6;
        com.android.internal.app.ProcessStats$ProcessState r4, r5, r7, $r13, $r27, $r37, $r38, r40;
        long l2, $l4;
        com.android.internal.app.ProcessStats$ServiceState r8;
        android.util.ArrayMap $r9, $r15, $r30, $r34, $r35;
        com.android.internal.app.ProcessMap $r10, $r36;
        java.lang.Object $r11, $r12, $r33;
        boolean $z0, $z1;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r24, $r25, $r26;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,int)>(r1, i0, i1);

        $r9 = r3.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r11 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.android.internal.app.ProcessStats$ProcessState) $r11;

        if r4 == null goto label01;

        return r4;

     label01:
        $r10 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        $r12 = virtualinvoke $r10.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r2, i0);

        r5 = (com.android.internal.app.ProcessStats$ProcessState) $r12;

        if r5 != null goto label02;

        $r37 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r37.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,int,java.lang.String)>(r0, r1, i0, i1, r2);

        r5 = $r37;

        $r36 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        virtualinvoke $r36.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r2, i0, r5);

     label02:
        $z0 = r5.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label09;

        $r16 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 == 0 goto label03;

        $i8 = r5.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        if i1 != $i8 goto label03;

        r40 = r5;

        goto label10;

     label03:
        r5.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage> = 1;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r17 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $i5 = r5.<com.android.internal.app.ProcessStats$ProcessState: int mVersion>;

        r6 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,int)>($r17, i0, $i5);

        if r6 == null goto label07;

        $r28 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        r7 = virtualinvoke r5.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState clone(java.lang.String,long)>($r28, l2);

        $r30 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r32 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, r7);

        $r35 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i7 = virtualinvoke $r35.<android.util.ArrayMap: int size()>();

        i3 = $i7 - 1;

     label04:
        if i3 < 0 goto label06;

        $r34 = r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r33 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r8 = (com.android.internal.app.ProcessStats$ServiceState) $r33;

        $r38 = r8.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats$ProcessState mProc>;

        if $r38 != r5 goto label05;

        r8.<com.android.internal.app.ProcessStats$ServiceState: com.android.internal.app.ProcessStats$ProcessState mProc> = r7;

     label05:
        i3 = i3 + -1;

        goto label04;

     label06:
        goto label08;

     label07:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cloning proc state: no package state ");

        $r22 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for proc ");

        $r23 = r5.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStats", $r29);

     label08:
        $r27 = new com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke $r27.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,int,java.lang.String,long)>(r5, r1, i0, i1, r2, l2);

        r40 = $r27;

        goto label10;

     label09:
        $r13 = new com.android.internal.app.ProcessStats$ProcessState;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r13.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,int,java.lang.String,long)>(r5, r1, i0, i1, r2, $l4);

        r40 = $r13;

     label10:
        $r15 = r3.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r40);

        return r40;
    }

    public com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String, int, int, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, r3;
        int i0, i1;
        com.android.internal.app.ProcessStats$PackageState r4;
        com.android.internal.app.ProcessStats$ServiceState r5, $r9, r13;
        com.android.internal.app.ProcessStats$ProcessState r6, $r12;
        android.util.ArrayMap $r7, $r10;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$PackageState getPackageStateLocked(java.lang.String,int,int)>(r1, i0, i1);

        $r7 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.android.internal.app.ProcessStats$ServiceState) $r8;

        if r5 == null goto label1;

        return r5;

     label1:
        if r2 == null goto label2;

        $r12 = virtualinvoke r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>(r1, i0, i1, r2);

        goto label3;

     label2:
        $r12 = null;

     label3:
        r6 = $r12;

        $r9 = new com.android.internal.app.ProcessStats$ServiceState;

        specialinvoke $r9.<com.android.internal.app.ProcessStats$ServiceState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ProcessState)>(r0, r1, r3, r2, r6);

        r13 = $r9;

        $r10 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r13);

        return r13;
    }

    private void dumpProcessInternalLocked(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ProcessState, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r4, $r6, $r7, $r11, $r13;
        com.android.internal.app.ProcessStats$ProcessState r3, $r5, $r8, $r9, $r10, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.app.ProcessStats$ProcessState;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("myID=");

        $i4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mCommonProcess=");

        $r5 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i5 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mPackage=");

        $r7 = r3.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $z5 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z5 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mMultiPackage=");

        $z6 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z6);

     label1:
        $r9 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if r3 == $r9 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Common Proc: ");

        $r8 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r11 = $r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("/");

        $r10 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i6 = $r10.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" pkg=");

        $r12 = r3.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r13 = $r12.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label2:
        $z1 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mActive=");

        $z4 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z4);

     label3:
        $z2 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        if $z2 == 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDead=");

        $z3 = r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z3);

     label4:
        $i0 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        if $i0 != 0 goto label5;

        $i3 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i3 == 0 goto label6;

     label5:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mNumActiveServices=");

        $i1 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mNumStartedServices=");

        $i2 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

     label6:
        return;
    }

    public void dumpLocked(java.io.PrintWriter, java.lang.String, long, boolean, boolean, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r4, $r22, $r32, $r35, $r41, $r42, $r49, $r51, $r52, $r58, $r60, r75;
        long l0, l1, $l11, $l24, $l25, $l27, $l34;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z30, z31;
        android.util.ArrayMap r3, $r26, $r30, $r33, $r34, $r39, $r40, $r43, $r54, $r59, $r65, r74;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i35, i36, i37, i38, i39, i40, i41, i42, i43;
        android.util.SparseArray r5, r6, r76;
        com.android.internal.app.ProcessStats$PackageState r7;
        com.android.internal.app.ProcessStats$ProcessState r8, $r48, r70, r72, r77;
        long[] $r9;
        int[] $r10, $r17, $r18, $r19, $r20, $r21, $r23, $r45, $r46, $r47, $r55, $r56, $r57, $r63, $r64, $r66, $r68, $r69;
        com.android.internal.app.ProcessMap $r11, $r13;
        java.util.ArrayList $r12, $r62, r71;
        java.lang.Object $r14, $r15, $r16, $r24, $r25, $r27, $r28, $r29, $r31, $r36, $r37, $r38, $r44, $r50, $r53, $r61, $r67;
        com.android.internal.app.ProcessStats$ServiceState r73;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        $r9 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i10 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l11 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        l1 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(null, null, $r9, $i10, $l11, l0);

        z3 = 0;

        $r10 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        if $r10 == null goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("System memory usage:");

        $r69 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r68 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSysMemUsage(java.io.PrintWriter,java.lang.String,int[],int[])>(r1, "  ", $r69, $r68);

        z3 = 1;

     label01:
        $r11 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r3 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        z4 = 0;

        i2 = 0;

     label02:
        $i12 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i2 >= $i12 goto label54;

        $r24 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        r4 = (java.lang.String) $r24;

        $r27 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r5 = (android.util.SparseArray) $r27;

        i4 = 0;

     label03:
        $i22 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if i4 >= $i22 goto label53;

        i3 = virtualinvoke r5.<android.util.SparseArray: int keyAt(int)>(i4);

        $r28 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r6 = (android.util.SparseArray) $r28;

        i5 = 0;

     label04:
        $i21 = virtualinvoke r6.<android.util.SparseArray: int size()>();

        if i5 >= $i21 goto label52;

        i6 = virtualinvoke r6.<android.util.SparseArray: int keyAt(int)>(i5);

        $r25 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r7 = (com.android.internal.app.ProcessStats$PackageState) $r25;

        $r26 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i8 = virtualinvoke $r26.<android.util.ArrayMap: int size()>();

        $r33 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i7 = virtualinvoke $r33.<android.util.ArrayMap: int size()>();

        if r2 == null goto label05;

        $z26 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z26 == 0 goto label06;

     label05:
        $z30 = 1;

        goto label07;

     label06:
        $z30 = 0;

     label07:
        z6 = $z30;

        if z6 != 0 goto label11;

        z5 = 0;

        i9 = 0;

     label08:
        if i9 >= i8 goto label10;

        $r59 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r61 = virtualinvoke $r59.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i9);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r61;

        $r60 = r8.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z27 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z27 == 0 goto label09;

        z5 = 1;

        goto label10;

     label09:
        i9 = i9 + 1;

        goto label08;

     label10:
        if z5 != 0 goto label11;

        goto label51;

     label11:
        if i8 > 0 goto label12;

        if i7 <= 0 goto label15;

     label12:
        if z4 != 0 goto label14;

        if z3 == 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Per-Package Stats:");

        z4 = 1;

        z3 = 1;

     label14:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / v");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label15:
        if z0 == 0 goto label16;

        if z1 == 0 goto label24;

     label16:
        i36 = 0;

     label17:
        if i36 >= i8 goto label23;

        $r40 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r38 = virtualinvoke $r40.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i36);

        r70 = (com.android.internal.app.ProcessStats$ProcessState) $r38;

        if z6 != 0 goto label18;

        $r51 = r70.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z28 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r51);

        if $z28 != 0 goto label18;

        goto label22;

     label18:
        if z2 == 0 goto label19;

        $z23 = virtualinvoke r70.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z23 != 0 goto label19;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        $r54 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r53 = virtualinvoke $r54.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i36);

        $r52 = (java.lang.String) $r53;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r52);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label22;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Process ");

        $r39 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r50 = virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i36);

        $r49 = (java.lang.String) $r50;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r49);

        $r48 = r70.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z22 = $r48.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z22 == 0 goto label20;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (multi, ");

        goto label21;

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (unique, ");

     label21:
        $i35 = r70.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r45 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r46 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r47 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r1, "        ", r70, $r45, $r46, $r47, l0);

        $r55 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r56 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r57 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r1, "        ", r70, $r55, $r56, $r57);

        specialinvoke r0.<com.android.internal.app.ProcessStats: void dumpProcessInternalLocked(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,boolean)>(r1, "        ", r70, z1);

     label22:
        i36 = i36 + 1;

        goto label17;

     label23:
        goto label30;

     label24:
        $r62 = new java.util.ArrayList;

        specialinvoke $r62.<java.util.ArrayList: void <init>()>();

        r71 = $r62;

        i37 = 0;

     label25:
        if i37 >= i8 goto label29;

        $r65 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r67 = virtualinvoke $r65.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i37);

        r72 = (com.android.internal.app.ProcessStats$ProcessState) $r67;

        if z6 != 0 goto label26;

        $r58 = r72.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z25 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z25 != 0 goto label26;

        goto label28;

     label26:
        if z2 == 0 goto label27;

        $z24 = virtualinvoke r72.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z24 != 0 goto label27;

        goto label28;

     label27:
        virtualinvoke r71.<java.util.ArrayList: boolean add(java.lang.Object)>(r72);

     label28:
        i37 = i37 + 1;

        goto label25;

     label29:
        $r66 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r63 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r64 = <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryLocked(java.io.PrintWriter,java.lang.String,java.util.ArrayList,int[],int[],int[],boolean,long,long)>(r1, "      ", r71, $r66, $r63, $r64, 0, l0, l1);

     label30:
        i38 = 0;

     label31:
        if i38 >= i7 goto label51;

        $r34 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r29 = virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i38);

        r73 = (com.android.internal.app.ProcessStats$ServiceState) $r29;

        if z6 != 0 goto label32;

        $r42 = r73.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        $z21 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z21 != 0 goto label32;

        goto label50;

     label32:
        if z2 == 0 goto label33;

        $z15 = virtualinvoke r73.<com.android.internal.app.ProcessStats$ServiceState: boolean isInUse()>();

        if $z15 != 0 goto label33;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        $r43 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r44 = virtualinvoke $r43.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i38);

        $r41 = (java.lang.String) $r44;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r41);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label50;

     label33:
        if z1 == 0 goto label34;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      Service ");

        goto label35;

     label34:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      * ");

     label35:
        $r30 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r31 = virtualinvoke $r30.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i38);

        $r32 = (java.lang.String) $r31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        Process: ");

        $r35 = r73.<com.android.internal.app.ProcessStats$ServiceState: java.lang.String mProcessName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $i28 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mRunCount>;

        $i29 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mRunState>;

        $l27 = r73.<com.android.internal.app.ProcessStats$ServiceState: long mRunStartTime>;

        if z0 == 0 goto label36;

        if z1 == 0 goto label37;

     label36:
        $z14 = 1;

        goto label38;

     label37:
        $z14 = 0;

     label38:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "    ", "Running", r73, $i28, 0, $i29, $l27, l0, l1, $z14);

        $i26 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mStartedCount>;

        $i23 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mStartedState>;

        $l24 = r73.<com.android.internal.app.ProcessStats$ServiceState: long mStartedStartTime>;

        if z0 == 0 goto label39;

        if z1 == 0 goto label40;

     label39:
        $z17 = 1;

        goto label41;

     label40:
        $z17 = 0;

     label41:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "    ", "Started", r73, $i26, 1, $i23, $l24, l0, l1, $z17);

        $i31 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mBoundCount>;

        $i32 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mBoundState>;

        $l25 = r73.<com.android.internal.app.ProcessStats$ServiceState: long mBoundStartTime>;

        if z0 == 0 goto label42;

        if z1 == 0 goto label43;

     label42:
        $z16 = 1;

        goto label44;

     label43:
        $z16 = 0;

     label44:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "      ", "Bound", r73, $i31, 2, $i32, $l25, l0, l1, $z16);

        $i30 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mExecCount>;

        $i33 = r73.<com.android.internal.app.ProcessStats$ServiceState: int mExecState>;

        $l34 = r73.<com.android.internal.app.ProcessStats$ServiceState: long mExecStartTime>;

        if z0 == 0 goto label45;

        if z1 == 0 goto label46;

     label45:
        $z18 = 1;

        goto label47;

     label46:
        $z18 = 0;

     label47:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpServiceStats(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long,long,boolean)>(r1, "        ", "          ", "  ", "Executing", r73, $i30, 3, $i33, $l34, l0, l1, $z18);

        if z1 == 0 goto label50;

        $r36 = r73.<com.android.internal.app.ProcessStats$ServiceState: java.lang.Object mOwner>;

        if $r36 == null goto label48;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        mOwner=");

        $r37 = r73.<com.android.internal.app.ProcessStats$ServiceState: java.lang.Object mOwner>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r37);

     label48:
        $z13 = r73.<com.android.internal.app.ProcessStats$ServiceState: boolean mStarted>;

        if $z13 != 0 goto label49;

        $z20 = r73.<com.android.internal.app.ProcessStats$ServiceState: boolean mRestarting>;

        if $z20 == 0 goto label50;

     label49:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("        mStarted=");

        $z12 = r73.<com.android.internal.app.ProcessStats$ServiceState: boolean mStarted>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mRestarting=");

        $z19 = r73.<com.android.internal.app.ProcessStats$ServiceState: boolean mRestarting>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z19);

     label50:
        i38 = i38 + 1;

        goto label31;

     label51:
        i5 = i5 + 1;

        goto label04;

     label52:
        i4 = i4 + 1;

        goto label03;

     label53:
        i2 = i2 + 1;

        goto label02;

     label54:
        $r13 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r74 = virtualinvoke $r13.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        z31 = 0;

        i39 = 0;

        i40 = 0;

        i41 = 0;

     label55:
        $i13 = virtualinvoke r74.<android.util.ArrayMap: int size()>();

        if i41 >= $i13 goto label65;

        $r14 = virtualinvoke r74.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i41);

        r75 = (java.lang.String) $r14;

        $r16 = virtualinvoke r74.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i41);

        r76 = (android.util.SparseArray) $r16;

        i42 = 0;

     label56:
        $i16 = virtualinvoke r76.<android.util.SparseArray: int size()>();

        if i42 >= $i16 goto label64;

        i43 = virtualinvoke r76.<android.util.SparseArray: int keyAt(int)>(i42);

        i40 = i40 + 1;

        $r15 = virtualinvoke r76.<android.util.SparseArray: java.lang.Object valueAt(int)>(i42);

        r77 = (com.android.internal.app.ProcessStats$ProcessState) $r15;

        $i18 = r77.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if $i18 != 0 goto label57;

        $i20 = r77.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i20 != -1 goto label57;

        $i19 = r77.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i19 != 0 goto label57;

        goto label63;

     label57:
        $z8 = r77.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z8 != 0 goto label58;

        goto label63;

     label58:
        if r2 == null goto label59;

        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r75);

        if $z9 != 0 goto label59;

        $r22 = r77.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z11 != 0 goto label59;

        goto label63;

     label59:
        i39 = i39 + 1;

        if z3 == 0 goto label60;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label60:
        z3 = 1;

        if z31 != 0 goto label61;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Multi-Package Common Processes:");

        z31 = 1;

     label61:
        if z2 == 0 goto label62;

        $z10 = virtualinvoke r77.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z10 != 0 goto label62;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      (Not active: ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r75);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        goto label63;

     label62:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r75);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / ");

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r1, i43);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $i17 = r77.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" entries)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r20 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r21 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r17 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessState(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r1, "        ", r77, $r20, $r21, $r17, l0);

        $r23 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r18 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r19 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessPss(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[])>(r1, "        ", r77, $r23, $r18, $r19);

        specialinvoke r0.<com.android.internal.app.ProcessStats: void dumpProcessInternalLocked(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ProcessState,boolean)>(r1, "        ", r77, z1);

     label63:
        i42 = i42 + 1;

        goto label56;

     label64:
        i41 = i41 + 1;

        goto label55;

     label65:
        if z1 == 0 goto label66;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Total procs: ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i39);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" shown of ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i40);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" total");

     label66:
        if z3 == 0 goto label67;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label67:
        if z0 == 0 goto label68;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Summary:");

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r1, r2, l0, z2);

        goto label69;

     label68:
        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpTotalsLocked(java.io.PrintWriter,long)>(r1, l0);

     label69:
        if z1 == 0 goto label70;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Internal state:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Num long arrays: ");

        $r12 = r0.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i14 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Next long entry: ");

        $i15 = r0.<com.android.internal.app.ProcessStats: int mNextLong>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  mRunning=");

        $z7 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z7);

     label70:
        return;
    }

    public static long dumpSingleServiceTime(java.io.PrintWriter, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, long, long)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r3;
        com.android.internal.app.ProcessStats$ServiceState r2;
        int i0, i1, i5, i6, i7, i8, i9, $i13, $i14;
        long l2, l3, l4, l10;
        byte $b11, $b12;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.ProcessStats$ServiceState;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        l4 = 0L;

        i5 = -1;

        i6 = 0;

     label01:
        if i6 >= 8 goto label11;

        i7 = -1;

        i8 = 0;

     label02:
        if i8 >= 4 goto label10;

        i9 = i8 + i6;

        l10 = staticinvoke <com.android.internal.app.ProcessStats$ServiceState: long access$000(com.android.internal.app.ProcessStats$ServiceState,int,int,long,int,long)>(r2, i0, i1, l2, i9, l3);

        r3 = "";

        if i1 != i9 goto label03;

        if r0 == null goto label03;

        r3 = " (running)";

     label03:
        $b12 = l10 cmp 0L;

        if $b12 == 0 goto label09;

        if r0 == null goto label08;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        if i5 == i6 goto label04;

        $i13 = i6;

        goto label05;

     label04:
        $i13 = -1;

     label05:
        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabel(java.io.PrintWriter,int)>(r0, $i13);

        i5 = i6;

        if i7 == i8 goto label06;

        $i14 = i8;

        goto label07;

     label06:
        $i14 = -1;

     label07:
        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabel(java.io.PrintWriter,int,char)>(r0, $i14, 0);

        i7 = i8;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r3);

     label08:
        l4 = l4 + l10;

     label09:
        i8 = i8 + 1;

        goto label02;

     label10:
        i6 = i6 + 4;

        goto label01;

     label11:
        $b11 = l4 cmp 0L;

        if $b11 == 0 goto label12;

        if r0 == null goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    TOTAL: ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l4, r0);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label12:
        return l4;
    }

    void dumpServiceStats(java.io.PrintWriter, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.android.internal.app.ProcessStats$ServiceState, int, int, int, long, long, long, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, r4, r5;
        com.android.internal.app.ProcessStats$ServiceState r6;
        int i0, i1, i2;
        long l3, l4, l5, l6;
        boolean z0;
        double $d0, $d1, $d2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: com.android.internal.app.ProcessStats$ServiceState;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        l3 := @parameter9: long;

        l4 := @parameter10: long;

        l5 := @parameter11: long;

        z0 := @parameter12: boolean;

        if i0 == 0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" op count ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(":");

        staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleServiceTime(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,long,long)>(r1, r3, r6, i1, i2, l3, l4);

        goto label2;

     label1:
        l6 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleServiceTime(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,long,long)>(null, null, r6, i1, i2, l3, l4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" count ");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" / time ");

        $d0 = (double) l6;

        $d1 = (double) l5;

        $d2 = $d0 / $d1;

        staticinvoke <com.android.internal.app.ProcessStats: void printPercent(java.io.PrintWriter,double)>(r1, $d2);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label2:
        return;
    }

    public void dumpSummaryLocked(java.io.PrintWriter, java.lang.String, long, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        long l0, l1, $l2;
        boolean z0;
        int $i3;
        long[] $r3;
        int[] $r4, $r5, $r6, $r7;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r3 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i3 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l2 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        l1 = staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(null, null, $r3, $i3, $l2, l0);

        $r7 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r6 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        $r5 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        $r4 = <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES>;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpFilteredSummaryLocked(java.io.PrintWriter,java.lang.String,java.lang.String,int[],int[],int[],int[],long,long,java.lang.String,boolean)>(r1, null, "  ", $r7, $r6, $r5, $r4, l0, l1, r2, z0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void dumpTotalsLocked(java.io.PrintWriter,long)>(r1, l0);

        return;
    }

    long printMemoryCategory(java.io.PrintWriter, java.lang.String, java.lang.String, double, long, long, int)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3;
        double d0, $d1, $d2, $d3;
        long l0, l1, l3, $l5;
        int i2;
        byte $b4;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        d0 := @parameter3: double;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        i2 := @parameter6: int;

        $b4 = d0 cmpl 0.0;

        if $b4 == 0 goto label1;

        $d2 = d0 * 1024.0;

        $d1 = (double) l0;

        $d3 = $d2 / $d1;

        l3 = (long) $d3;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r1, l3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" samples)");

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $l5 = l1 + l3;

        return $l5;

     label1:
        return l1;
    }

    void dumpTotalsLocked(java.io.PrintWriter, long)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        long l0, l1, $l3, $l7, $l9, $l11, $l13, $l15, $l17, $l19, $l20, $l21, $l25, $l29, l31, l32, l33, l34, l35;
        com.android.internal.app.ProcessStats$TotalMemoryUseCollection r2, $r4;
        int i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i22, $i23, $i24, $i26, $i27, $i28, $i30;
        long[] $r3;
        int[] $r5, $r6, $r9, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.String[] $r7, $r15;
        double[] $r8, $r14;
        java.lang.String $r10, $r12, $r16;
        java.lang.CharSequence $r11;
        boolean $z0, z1;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Run time Stats:");

        $r3 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i4 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l3 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(r1, "  ", $r3, $i4, $l3, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Memory usage:");

        $r4 = new com.android.internal.app.ProcessStats$TotalMemoryUseCollection;

        $r6 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r5 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        specialinvoke $r4.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: void <init>(int[],int[])>($r6, $r5);

        r2 = $r4;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void computeTotalMemoryUse(com.android.internal.app.ProcessStats$TotalMemoryUseCollection,long)>(r2, l0);

        l1 = 0L;

        $d0 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemKernelWeight>;

        $l7 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $i6 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        l31 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", "Kernel ", $d0, $l7, l1, $i6);

        $d1 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemNativeWeight>;

        $l9 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $i8 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        l32 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", "Native ", $d1, $l9, l31, $i8);

        i2 = 0;

     label1:
        if i2 >= 14 goto label3;

        if i2 == 7 goto label2;

        $r15 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $r16 = $r15[i2];

        $r14 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double[] processStateWeight>;

        $d6 = $r14[i2];

        $l29 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $r13 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i30 = $r13[i2];

        l32 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", $r16, $d6, $l29, l32, $i30);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $d2 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemCachedWeight>;

        $l11 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $i10 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        l33 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", "Cached ", $d2, $l11, l32, $i10);

        $d3 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemFreeWeight>;

        $l13 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $i12 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        l34 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", "Free   ", $d3, $l13, l33, $i12);

        $d4 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemZRamWeight>;

        $l15 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $i14 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        l35 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", "Z-Ram   ", $d4, $l15, l34, $i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  TOTAL  : ");

        staticinvoke <com.android.internal.app.ProcessStats: void printSizeValue(java.io.PrintWriter,long)>(r1, l35);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r7 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES>;

        $r10 = $r7[7];

        $r8 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double[] processStateWeight>;

        $d5 = $r8[7];

        $l17 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        $r9 = r2.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i16 = $r9[7];

        virtualinvoke r0.<com.android.internal.app.ProcessStats: long printMemoryCategory(java.io.PrintWriter,java.lang.String,java.lang.String,double,long,long,int)>(r1, "  ", $r10, $d5, $l17, l35, $i16);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("          Start time: ");

        $l19 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartClock>;

        $r11 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>("yyyy-MM-dd HH:mm:ss", $l19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  Total elapsed time: ");

        $z0 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        if $z0 == 0 goto label4;

        $l21 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        goto label5;

     label4:
        $l21 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

     label5:
        $l20 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l25 = $l21 - $l20;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l25, r1);

        z1 = 1;

        $i24 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i23 = $i24 & 2;

        if $i23 == 0 goto label6;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (shutdown)");

        z1 = 0;

     label6:
        $i22 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i28 = $i22 & 4;

        if $i28 == 0 goto label7;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (sysprops)");

        z1 = 0;

     label7:
        $i27 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i26 = $i27 & 1;

        if $i26 == 0 goto label8;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (complete)");

        z1 = 0;

     label8:
        if z1 == 0 goto label9;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (partial)");

     label9:
        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        $r12 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    void dumpFilteredSummaryLocked(java.io.PrintWriter, java.lang.String, java.lang.String, int[], int[], int[], int[], long, long, java.lang.String, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, r8;
        int[] r4, r5, r6, r7;
        long l0, l1;
        boolean z0;
        java.util.ArrayList r9;
        int $i2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: int[];

        r5 := @parameter4: int[];

        r6 := @parameter5: int[];

        r7 := @parameter6: int[];

        l0 := @parameter7: long;

        l1 := @parameter8: long;

        r8 := @parameter9: java.lang.String;

        z0 := @parameter10: boolean;

        r9 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.util.ArrayList collectProcessesLocked(int[],int[],int[],int[],long,java.lang.String,boolean)>(r4, r5, r6, r7, l0, r8, z0);

        $i2 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        if r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label1:
        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessSummaryLocked(java.io.PrintWriter,java.lang.String,java.util.ArrayList,int[],int[],int[],boolean,long,long)>(r1, r3, r9, r4, r5, r7, 1, l0, l1);

     label2:
        return;
    }

    public java.util.ArrayList collectProcessesLocked(int[], int[], int[], int[], long, java.lang.String, boolean)
    {
        com.android.internal.app.ProcessStats r0;
        int[] r1, r2, r3, r4;
        long l0, $l11;
        java.lang.String r5, r8, $r26;
        boolean z0, z1, $z4, $z5, $z6, $z7;
        android.util.ArraySet r6, $r12;
        android.util.ArrayMap r7, $r21, $r24;
        int i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i13, i14;
        android.util.SparseArray r9, r10;
        com.android.internal.app.ProcessStats$PackageState r11;
        com.android.internal.app.ProcessStats$ProcessState r13, $r23, r28;
        com.android.internal.app.ProcessMap $r14;
        java.util.ArrayList $r15, r27;
        java.lang.Object $r16, $r18, $r19, $r20, $r22, $r25;
        com.android.internal.app.ProcessStats$2 $r17;
        byte $b12;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        l0 := @parameter4: long;

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r12 = new android.util.ArraySet;

        specialinvoke $r12.<android.util.ArraySet: void <init>()>();

        r6 = $r12;

        $r14 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r7 = virtualinvoke $r14.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = 0;

     label01:
        $i7 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i7 goto label14;

        $r19 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r8 = (java.lang.String) $r19;

        $r20 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r9 = (android.util.SparseArray) $r20;

        i2 = 0;

     label02:
        $i13 = virtualinvoke r9.<android.util.SparseArray: int size()>();

        if i2 >= $i13 goto label13;

        $r18 = virtualinvoke r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r10 = (android.util.SparseArray) $r18;

        i4 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        i3 = 0;

     label03:
        if i3 >= i4 goto label12;

        $r22 = virtualinvoke r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r11 = (com.android.internal.app.ProcessStats$PackageState) $r22;

        $r21 = r11.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i5 = virtualinvoke $r21.<android.util.ArrayMap: int size()>();

        if r5 == null goto label04;

        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z4 == 0 goto label05;

     label04:
        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        z1 = $z7;

        i6 = 0;

     label07:
        if i6 >= i5 goto label11;

        $r24 = r11.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r25 = virtualinvoke $r24.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r13 = (com.android.internal.app.ProcessStats$ProcessState) $r25;

        if z1 != 0 goto label08;

        $r26 = r13.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 != 0 goto label08;

        goto label10;

     label08:
        if z0 == 0 goto label09;

        $z6 = virtualinvoke r13.<com.android.internal.app.ProcessStats$ProcessState: boolean isInUse()>();

        if $z6 != 0 goto label09;

        goto label10;

     label09:
        $r23 = r13.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r23);

     label10:
        i6 = i6 + 1;

        goto label07;

     label11:
        i3 = i3 + 1;

        goto label03;

     label12:
        i2 = i2 + 1;

        goto label02;

     label13:
        i1 = i1 + 1;

        goto label01;

     label14:
        $r15 = new java.util.ArrayList;

        $i9 = virtualinvoke r6.<android.util.ArraySet: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i9);

        r27 = $r15;

        i14 = 0;

     label15:
        $i8 = virtualinvoke r6.<android.util.ArraySet: int size()>();

        if i14 >= $i8 goto label17;

        $r16 = virtualinvoke r6.<android.util.ArraySet: java.lang.Object valueAt(int)>(i14);

        r28 = (com.android.internal.app.ProcessStats$ProcessState) $r16;

        $l11 = staticinvoke <com.android.internal.app.ProcessStats: long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r28, r1, r2, r3, l0);

        $b12 = $l11 cmp 0L;

        if $b12 <= 0 goto label16;

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r28);

        if r3 == r4 goto label16;

        staticinvoke <com.android.internal.app.ProcessStats: long computeProcessTimeLocked(com.android.internal.app.ProcessStats$ProcessState,int[],int[],int[],long)>(r28, r1, r2, r4, l0);

     label16:
        i14 = i14 + 1;

        goto label15;

     label17:
        $r17 = new com.android.internal.app.ProcessStats$2;

        specialinvoke $r17.<com.android.internal.app.ProcessStats$2: void <init>(com.android.internal.app.ProcessStats)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r27, $r17);

        return r27;
    }

    java.lang.String collapseString(java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.lang.String r1, r2, $r3;
        int i0, i1;
        boolean $z0;
        char $c2;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != i1 goto label1;

        return "";

     label1:
        if i0 < i1 goto label2;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i1);

        if $c2 != 46 goto label2;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i1);

        return $r3;

     label2:
        return r2;
    }

    public void dumpCheckinLocked(java.io.PrintWriter, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r4, $r11, $r12, $r35, $r36, $r37, $r42, $r43, $r46, $r48, r50, r52;
        long l0, $l9, $l10, $l19, $l21, $l33, $l36, $l37, $l44, $l49, $l50, $l55, $l56, $l64, $l65, $l67;
        android.util.ArrayMap r3, $r28, $r29, $r30, $r33, $r39, $r41, $r45, $r47, r51;
        boolean z0, $z1, $z2;
        int i1, i2, i3, i4, i5, i6, i7, i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i51, $i52, $i53, $i54, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i66, $i68, i69, i70, i71, i72, i73, i74, i75, i76, i77;
        android.util.SparseArray r5, r6, r53;
        com.android.internal.app.ProcessStats$PackageState r7;
        com.android.internal.app.ProcessStats$ProcessState r8, r54;
        com.android.internal.app.ProcessStats$ServiceState r9;
        com.android.internal.app.ProcessMap $r10, $r13;
        int[] $r14, $r17, $r18, $r19, $r21;
        com.android.internal.app.ProcessStats$TotalMemoryUseCollection $r15, r55;
        long[] $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        double[] $r20;
        java.lang.Object $r22, $r23, $r24, $r25, $r26, $r27, $r31, $r32, $r34, $r38, $r40, $r44, $r49;

        r0 := @this: com.android.internal.app.ProcessStats;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r3 = virtualinvoke $r10.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("vers,5");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("period,");

        $r11 = r0.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l9 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $z1 = r0.<com.android.internal.app.ProcessStats: boolean mRunning>;

        if $z1 == 0 goto label01;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        goto label02;

     label01:
        $l10 = r0.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l10);

        z0 = 1;

        $i12 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i11 = $i12 & 2;

        if $i11 == 0 goto label03;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",shutdown");

        z0 = 0;

     label03:
        $i14 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i13 = $i14 & 4;

        if $i13 == 0 goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",sysprops");

        z0 = 0;

     label04:
        $i16 = r0.<com.android.internal.app.ProcessStats: int mFlags>;

        $i17 = $i16 & 1;

        if $i17 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",complete");

        z0 = 0;

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",partial");

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("config,");

        $r12 = r0.<com.android.internal.app.ProcessStats: java.lang.String mRuntime>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        i1 = 0;

     label07:
        $i15 = virtualinvoke r3.<android.util.ArrayMap: int size()>();

        if i1 >= $i15 goto label20;

        $r27 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r4 = (java.lang.String) $r27;

        if r2 == null goto label08;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label08;

        goto label19;

     label08:
        $r25 = virtualinvoke r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r5 = (android.util.SparseArray) $r25;

        i2 = 0;

     label09:
        $i42 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if i2 >= $i42 goto label19;

        i3 = virtualinvoke r5.<android.util.SparseArray: int keyAt(int)>(i2);

        $r26 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r6 = (android.util.SparseArray) $r26;

        i4 = 0;

     label10:
        $i46 = virtualinvoke r6.<android.util.SparseArray: int size()>();

        if i4 >= $i46 goto label18;

        i5 = virtualinvoke r6.<android.util.SparseArray: int keyAt(int)>(i4);

        $r31 = virtualinvoke r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r7 = (com.android.internal.app.ProcessStats$PackageState) $r31;

        $r30 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        i7 = virtualinvoke $r30.<android.util.ArrayMap: int size()>();

        $r28 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        i6 = virtualinvoke $r28.<android.util.ArrayMap: int size()>();

        i8 = 0;

     label11:
        if i8 >= i7 goto label15;

        $r41 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r40 = virtualinvoke $r41.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r8 = (com.android.internal.app.ProcessStats$ProcessState) $r40;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgproc,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r39 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r38 = virtualinvoke $r39.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        $r37 = (java.lang.String) $r38;

        $r36 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r4, $r37);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessStateCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,long)>(r1, r8, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $i58 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i58 <= 0 goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgpss,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r47 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r49 = virtualinvoke $r47.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        $r48 = (java.lang.String) $r49;

        $r46 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r4, $r48);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r46);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessPssCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState)>(r1, r8);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label12:
        $i63 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i63 > 0 goto label13;

        $i66 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i66 > 0 goto label13;

        $i68 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i68 <= 0 goto label14;

     label13:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pkgkills,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r45 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r44 = virtualinvoke $r45.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        $r43 = (java.lang.String) $r44;

        $r42 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r4, $r43);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r42);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i62 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i62);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i61 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i61);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i60 = r8.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i60);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l65 = r8.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l65);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l64 = r8.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l64);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l67 = r8.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l67);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label14:
        i8 = i8 + 1;

        goto label11;

     label15:
        i69 = 0;

     label16:
        if i69 >= i6 goto label17;

        $r29 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r34 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i69);

        $r35 = (java.lang.String) $r34;

        r50 = virtualinvoke r0.<com.android.internal.app.ProcessStats: java.lang.String collapseString(java.lang.String,java.lang.String)>(r4, $r35);

        $r33 = r7.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $r32 = virtualinvoke $r33.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i69);

        r9 = (com.android.internal.app.ProcessStats$ServiceState) $r32;

        $i48 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mRunCount>;

        $i47 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mRunState>;

        $l49 = r9.<com.android.internal.app.ProcessStats$ServiceState: long mRunStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-run", r4, i3, i5, r50, r9, 0, $i48, $i47, $l49, l0);

        $i54 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mStartedCount>;

        $i57 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mStartedState>;

        $l56 = r9.<com.android.internal.app.ProcessStats$ServiceState: long mStartedStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-start", r4, i3, i5, r50, r9, 1, $i54, $i57, $l56, l0);

        $i53 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mBoundCount>;

        $i52 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mBoundState>;

        $l55 = r9.<com.android.internal.app.ProcessStats$ServiceState: long mBoundStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-bound", r4, i3, i5, r50, r9, 2, $i53, $i52, $l55, l0);

        $i59 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mExecCount>;

        $i51 = r9.<com.android.internal.app.ProcessStats$ServiceState: int mExecState>;

        $l50 = r9.<com.android.internal.app.ProcessStats$ServiceState: long mExecStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpServiceTimeCheckin(java.io.PrintWriter,java.lang.String,java.lang.String,int,int,java.lang.String,com.android.internal.app.ProcessStats$ServiceState,int,int,int,long,long)>(r1, "pkgsvc-exec", r4, i3, i5, r50, r9, 3, $i59, $i51, $l50, l0);

        i69 = i69 + 1;

        goto label16;

     label17:
        i4 = i4 + 1;

        goto label10;

     label18:
        i2 = i2 + 1;

        goto label09;

     label19:
        i1 = i1 + 1;

        goto label07;

     label20:
        $r13 = r0.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mProcesses>;

        r51 = virtualinvoke $r13.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i70 = 0;

     label21:
        $i18 = virtualinvoke r51.<android.util.ArrayMap: int size()>();

        if i70 >= $i18 goto label28;

        $r24 = virtualinvoke r51.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i70);

        r52 = (java.lang.String) $r24;

        $r22 = virtualinvoke r51.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i70);

        r53 = (android.util.SparseArray) $r22;

        i71 = 0;

     label22:
        $i30 = virtualinvoke r53.<android.util.SparseArray: int size()>();

        if i71 >= $i30 goto label27;

        i72 = virtualinvoke r53.<android.util.SparseArray: int keyAt(int)>(i71);

        $r23 = virtualinvoke r53.<android.util.SparseArray: java.lang.Object valueAt(int)>(i71);

        r54 = (com.android.internal.app.ProcessStats$ProcessState) $r23;

        $i38 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mDurationsTableSize>;

        if $i38 <= 0 goto label23;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("proc,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i72);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessStateCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState,long)>(r1, r54, l0);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label23:
        $i39 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if $i39 <= 0 goto label24;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pss,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i72);

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAllProcessPssCheckin(java.io.PrintWriter,com.android.internal.app.ProcessStats$ProcessState)>(r1, r54);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label24:
        $i40 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        if $i40 > 0 goto label25;

        $i43 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        if $i43 > 0 goto label25;

        $i45 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i45 <= 0 goto label26;

     label25:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("kills,");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r52);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i72);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i41 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i41);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i34 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i34);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i35 = r54.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l36 = r54.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l36);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l37 = r54.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l37);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $l44 = r54.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l44);

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label26:
        i71 = i71 + 1;

        goto label22;

     label27:
        i70 = i70 + 1;

        goto label21;

     label28:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("total");

        $r16 = r0.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $i20 = r0.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l19 = r0.<com.android.internal.app.ProcessStats: long mStartTime>;

        staticinvoke <com.android.internal.app.ProcessStats: void dumpAdjTimesCheckin(java.io.PrintWriter,java.lang.String,long[],int,long,long)>(r1, ",", $r16, $i20, $l19, l0);

        $r14 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        if $r14 == null goto label33;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("sysmemusage");

        i73 = 0;

     label29:
        $i28 = r0.<com.android.internal.app.ProcessStats: int mSysMemUsageTableSize>;

        if i73 >= $i28 goto label33;

        $r21 = r0.<com.android.internal.app.ProcessStats: int[] mSysMemUsageTable>;

        i74 = $r21[i73];

        $i27 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i32 = i74 >> $i27;

        $i31 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i75 = $i32 & $i31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        staticinvoke <com.android.internal.app.ProcessStats: void printProcStateTag(java.io.PrintWriter,int)>(r1, i75);

        i76 = 0;

     label30:
        if i76 >= 16 goto label32;

        if i76 <= 1 goto label31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

     label31:
        $l33 = virtualinvoke r0.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i74, i76);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l33);

        i76 = i76 + 1;

        goto label30;

     label32:
        i73 = i73 + 1;

        goto label29;

     label33:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $r15 = new com.android.internal.app.ProcessStats$TotalMemoryUseCollection;

        $r18 = <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ>;

        $r17 = <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ>;

        specialinvoke $r15.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: void <init>(int[],int[])>($r18, $r17);

        r55 = $r15;

        virtualinvoke r0.<com.android.internal.app.ProcessStats: void computeTotalMemoryUse(com.android.internal.app.ProcessStats$TotalMemoryUseCollection,long)>(r55, l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("weights,");

        $l21 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: long totalTime>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $d0 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemCachedWeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i23 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $d2 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemFreeWeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i22 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $d1 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemZRamWeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i25 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $d4 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemKernelWeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i24 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i24);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $d3 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double sysMemNativeWeight>;

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $i26 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int sysMemSamples>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i26);

        i77 = 0;

     label34:
        if i77 >= 14 goto label35;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r20 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: double[] processStateWeight>;

        $d5 = $r20[i77];

        virtualinvoke r1.<java.io.PrintWriter: void print(double)>($d5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(":");

        $r19 = r55.<com.android.internal.app.ProcessStats$TotalMemoryUseCollection: int[] processStateSamples>;

        $i29 = $r19[i77];

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i29);

        i77 = i77 + 1;

        goto label34;

     label35:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;
    }

    static int[] access$100(com.android.internal.app.ProcessStats, android.os.Parcel, java.lang.String, java.lang.String)
    {
        com.android.internal.app.ProcessStats r0;
        android.os.Parcel r1;
        java.lang.String r2, r3;
        int[] $r4;

        r0 := @parameter0: com.android.internal.app.ProcessStats;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<com.android.internal.app.ProcessStats: int[] readTableFromParcel(android.os.Parcel,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r14;
        java.lang.String[] $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        com.android.internal.app.ProcessStats$1 $r13;

        <com.android.internal.app.ProcessStats: int LONGS_SIZE> = 4096;

        <com.android.internal.app.ProcessStats: int MAGIC> = 1347638355;

        <com.android.internal.app.ProcessStats: int PARCEL_VERSION> = 18;

        <com.android.internal.app.ProcessStats: java.lang.String CSV_SEP> = "\t";

        <com.android.internal.app.ProcessStats: int FLAG_SYSPROPS> = 4;

        <com.android.internal.app.ProcessStats: int FLAG_SHUTDOWN> = 2;

        <com.android.internal.app.ProcessStats: int FLAG_COMPLETE> = 1;

        <com.android.internal.app.ProcessStats: int ADJ_COUNT> = 8;

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_ON> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_OFF> = 0;

        <com.android.internal.app.ProcessStats: int ADJ_SCREEN_MOD> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_COUNT> = 4;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_CRITICAL> = 3;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_LOW> = 2;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_MODERATE> = 1;

        <com.android.internal.app.ProcessStats: int ADJ_MEM_FACTOR_NORMAL> = 0;

        <com.android.internal.app.ProcessStats: int ADJ_NOTHING> = -1;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_COUNT> = 16;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_NATIVE_MAXIMUM> = 15;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_NATIVE_AVERAGE> = 14;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_NATIVE_MINIMUM> = 13;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_KERNEL_MAXIMUM> = 12;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_KERNEL_AVERAGE> = 11;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_KERNEL_MINIMUM> = 10;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_ZRAM_MAXIMUM> = 9;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_ZRAM_AVERAGE> = 8;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_ZRAM_MINIMUM> = 7;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_FREE_MAXIMUM> = 6;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_FREE_AVERAGE> = 5;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_FREE_MINIMUM> = 4;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_CACHED_MAXIMUM> = 3;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_CACHED_AVERAGE> = 2;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_CACHED_MINIMUM> = 1;

        <com.android.internal.app.ProcessStats: int SYS_MEM_USAGE_SAMPLE_COUNT> = 0;

        <com.android.internal.app.ProcessStats: int PSS_COUNT> = 7;

        <com.android.internal.app.ProcessStats: int PSS_USS_MAXIMUM> = 6;

        <com.android.internal.app.ProcessStats: int PSS_USS_AVERAGE> = 5;

        <com.android.internal.app.ProcessStats: int PSS_USS_MINIMUM> = 4;

        <com.android.internal.app.ProcessStats: int PSS_MAXIMUM> = 3;

        <com.android.internal.app.ProcessStats: int PSS_AVERAGE> = 2;

        <com.android.internal.app.ProcessStats: int PSS_MINIMUM> = 1;

        <com.android.internal.app.ProcessStats: int PSS_SAMPLE_COUNT> = 0;

        <com.android.internal.app.ProcessStats: int STATE_COUNT> = 14;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_EMPTY> = 13;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_ACTIVITY_CLIENT> = 12;

        <com.android.internal.app.ProcessStats: int STATE_CACHED_ACTIVITY> = 11;

        <com.android.internal.app.ProcessStats: int STATE_LAST_ACTIVITY> = 10;

        <com.android.internal.app.ProcessStats: int STATE_HOME> = 9;

        <com.android.internal.app.ProcessStats: int STATE_RECEIVER> = 8;

        <com.android.internal.app.ProcessStats: int STATE_SERVICE_RESTARTING> = 7;

        <com.android.internal.app.ProcessStats: int STATE_SERVICE> = 6;

        <com.android.internal.app.ProcessStats: int STATE_HEAVY_WEIGHT> = 5;

        <com.android.internal.app.ProcessStats: int STATE_BACKUP> = 4;

        <com.android.internal.app.ProcessStats: int STATE_IMPORTANT_BACKGROUND> = 3;

        <com.android.internal.app.ProcessStats: int STATE_IMPORTANT_FOREGROUND> = 2;

        <com.android.internal.app.ProcessStats: int STATE_TOP> = 1;

        <com.android.internal.app.ProcessStats: int STATE_PERSISTENT> = 0;

        <com.android.internal.app.ProcessStats: int STATE_NOTHING> = -1;

        <com.android.internal.app.ProcessStats: java.lang.String SERVICE_NAME> = "procstats";

        <com.android.internal.app.ProcessStats: boolean DEBUG_PARCEL> = 0;

        <com.android.internal.app.ProcessStats: boolean DEBUG> = 0;

        <com.android.internal.app.ProcessStats: java.lang.String TAG> = "ProcessStats";

        <com.android.internal.app.ProcessStats: long COMMIT_PERIOD> = 10800000L;

        <com.android.internal.app.ProcessStats: long COMMIT_UPTIME_PERIOD> = 3600000L;

        $r0 = newarray (int)[4];

        $r0[0] = 0;

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        <com.android.internal.app.ProcessStats: int[] ALL_MEM_ADJ> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 0;

        $r1[1] = 4;

        <com.android.internal.app.ProcessStats: int[] ALL_SCREEN_ADJ> = $r1;

        $r2 = newarray (int)[9];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = 4;

        $r2[5] = 5;

        $r2[6] = 6;

        $r2[7] = 7;

        $r2[8] = 8;

        <com.android.internal.app.ProcessStats: int[] NON_CACHED_PROC_STATES> = $r2;

        $r3 = newarray (int)[7];

        $r3[0] = 2;

        $r3[1] = 3;

        $r3[2] = 4;

        $r3[3] = 5;

        $r3[4] = 6;

        $r3[5] = 7;

        $r3[6] = 8;

        <com.android.internal.app.ProcessStats: int[] BACKGROUND_PROC_STATES> = $r3;

        $r4 = newarray (int)[14];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 1;

        $r4[3] = 2;

        $r4[4] = 3;

        $r4[5] = 4;

        $r4[6] = 5;

        $r4[7] = 6;

        $r4[8] = 8;

        $r4[9] = 9;

        $r4[10] = 10;

        $r4[11] = 11;

        $r4[12] = 12;

        $r4[13] = 13;

        <com.android.internal.app.ProcessStats: int[] PROCESS_STATE_TO_STATE> = $r4;

        $r5 = newarray (int)[14];

        $r5[0] = 0;

        $r5[1] = 1;

        $r5[2] = 2;

        $r5[3] = 3;

        $r5[4] = 4;

        $r5[5] = 5;

        $r5[6] = 6;

        $r5[7] = 7;

        $r5[8] = 8;

        $r5[9] = 9;

        $r5[10] = 10;

        $r5[11] = 11;

        $r5[12] = 12;

        $r5[13] = 13;

        <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES> = $r5;

        $r6 = newarray (java.lang.String)[14];

        $r6[0] = "Persist";

        $r6[1] = "Top    ";

        $r6[2] = "ImpFg  ";

        $r6[3] = "ImpBg  ";

        $r6[4] = "Backup ";

        $r6[5] = "HeavyWt";

        $r6[6] = "Service";

        $r6[7] = "ServRst";

        $r6[8] = "Receivr";

        $r6[9] = "Home   ";

        $r6[10] = "LastAct";

        $r6[11] = "CchAct ";

        $r6[12] = "CchCAct";

        $r6[13] = "CchEmty";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES> = $r6;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "off";

        $r7[1] = "on";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV> = $r7;

        $r8 = newarray (java.lang.String)[4];

        $r8[0] = "norm";

        $r8[1] = "mod";

        $r8[2] = "low";

        $r8[3] = "crit";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_NAMES_CSV> = $r8;

        $r9 = newarray (java.lang.String)[14];

        $r9[0] = "pers";

        $r9[1] = "top";

        $r9[2] = "impfg";

        $r9[3] = "impbg";

        $r9[4] = "backup";

        $r9[5] = "heavy";

        $r9[6] = "service";

        $r9[7] = "service-rs";

        $r9[8] = "receiver";

        $r9[9] = "home";

        $r9[10] = "lastact";

        $r9[11] = "cch-activity";

        $r9[12] = "cch-aclient";

        $r9[13] = "cch-empty";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV> = $r9;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "0";

        $r10[1] = "1";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_TAGS> = $r10;

        $r11 = newarray (java.lang.String)[4];

        $r11[0] = "n";

        $r11[1] = "m";

        $r11[2] = "l";

        $r11[3] = "c";

        <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_TAGS> = $r11;

        $r12 = newarray (java.lang.String)[14];

        $r12[0] = "p";

        $r12[1] = "t";

        $r12[2] = "f";

        $r12[3] = "b";

        $r12[4] = "u";

        $r12[5] = "w";

        $r12[6] = "s";

        $r12[7] = "x";

        $r12[8] = "r";

        $r12[9] = "h";

        $r12[10] = "l";

        $r12[11] = "a";

        $r12[12] = "c";

        $r12[13] = "e";

        <com.android.internal.app.ProcessStats: java.lang.String[] STATE_TAGS> = $r12;

        <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT> = 0;

        <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK> = 255;

        <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT> = 8;

        <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK> = 255;

        <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT> = 16;

        <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK> = 65535;

        $r13 = new com.android.internal.app.ProcessStats$1;

        specialinvoke $r13.<com.android.internal.app.ProcessStats$1: void <init>()>();

        <com.android.internal.app.ProcessStats: android.os.Parcelable$Creator CREATOR> = $r13;

        $r14 = newarray (int)[0];

        <com.android.internal.app.ProcessStats: int[] BAD_TABLE> = $r14;

        return;
    }
}
