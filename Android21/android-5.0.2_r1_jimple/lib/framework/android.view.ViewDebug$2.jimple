final class android.view.ViewDebug$2 extends java.lang.Object implements android.view.ViewDebug$ViewOperation
{
    final android.view.View val$view;

    void <init>(android.view.View)
    {
        android.view.ViewDebug$2 r0;
        android.view.View r1;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: android.view.View;

        r0.<android.view.ViewDebug$2: android.view.View val$view> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void[] pre()
    {
        android.view.ViewDebug$2 r0;
        android.view.View $r1;

        r0 := @this: android.view.ViewDebug$2;

        $r1 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        specialinvoke r0.<android.view.ViewDebug$2: void forceLayout(android.view.View)>($r1);

        return null;
    }

    private void forceLayout(android.view.View)
    {
        android.view.ViewDebug$2 r0;
        android.view.View r1, $r3;
        android.view.ViewGroup r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void forceLayout()>();

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        r2 = (android.view.ViewGroup) r1;

        i0 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<android.view.ViewDebug$2: void forceLayout(android.view.View)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public transient void run(java.lang.Void[])
    {
        android.view.ViewDebug$2 r0;
        java.lang.Void[] r1;
        android.view.View $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: java.lang.Void[];

        $r4 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        $r2 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        $i1 = $r2.<android.view.View: int mOldWidthMeasureSpec>;

        $r3 = r0.<android.view.ViewDebug$2: android.view.View val$view>;

        $i0 = $r3.<android.view.View: int mOldHeightMeasureSpec>;

        virtualinvoke $r4.<android.view.View: void measure(int,int)>($i1, $i0);

        return;
    }

    public transient void post(java.lang.Void[])
    {
        android.view.ViewDebug$2 r0;
        java.lang.Void[] r1;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: java.lang.Void[];

        return;
    }

    public volatile void post(java.lang.Object[])
    {
        android.view.ViewDebug$2 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        virtualinvoke r0.<android.view.ViewDebug$2: void post(java.lang.Void[])>($r2);

        return;
    }

    public volatile void run(java.lang.Object[])
    {
        android.view.ViewDebug$2 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;

        r0 := @this: android.view.ViewDebug$2;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        virtualinvoke r0.<android.view.ViewDebug$2: void run(java.lang.Void[])>($r2);

        return;
    }

    public volatile java.lang.Object[] pre()
    {
        android.view.ViewDebug$2 r0;
        java.lang.Void[] $r1;

        r0 := @this: android.view.ViewDebug$2;

        $r1 = virtualinvoke r0.<android.view.ViewDebug$2: java.lang.Void[] pre()>();

        return $r1;
    }
}
