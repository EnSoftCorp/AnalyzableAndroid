class android.app.trust.ITrustListener$Stub$Proxy extends java.lang.Object implements android.app.trust.ITrustListener
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.trust.ITrustListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.trust.ITrustListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.trust.ITrustListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.trust.ITrustListener$Stub$Proxy;

        $r1 = r0.<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.trust.ITrustListener$Stub$Proxy r0;

        r0 := @this: android.app.trust.ITrustListener$Stub$Proxy;

        return "android.app.trust.ITrustListener";
    }

    public void onTrustChanged(boolean, int, boolean) throws android.os.RemoteException
    {
        android.app.trust.ITrustListener$Stub$Proxy r0;
        boolean z0, z1;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;
        byte $b1, $b2;

        r0 := @this: android.app.trust.ITrustListener$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.trust.ITrustListener");

        if z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        if z1 == 0 goto label4;

        $b1 = 1;

        goto label5;

     label4:
        $b1 = 0;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r3 = r0.<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onTrustManagedChanged(boolean, int) throws android.os.RemoteException
    {
        android.app.trust.ITrustListener$Stub$Proxy r0;
        boolean z0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;
        byte $b1;

        r0 := @this: android.app.trust.ITrustListener$Stub$Proxy;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.trust.ITrustListener");

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.app.trust.ITrustListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, null, 1);

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
