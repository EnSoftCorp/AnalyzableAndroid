public final class android.nfc.tech.MifareClassic extends android.nfc.tech.BasicTagTechnology
{
    private static final java.lang.String TAG;
    public static final byte[] KEY_DEFAULT;
    public static final byte[] KEY_MIFARE_APPLICATION_DIRECTORY;
    public static final byte[] KEY_NFC_FORUM;
    public static final int TYPE_UNKNOWN;
    public static final int TYPE_CLASSIC;
    public static final int TYPE_PLUS;
    public static final int TYPE_PRO;
    public static final int SIZE_1K;
    public static final int SIZE_2K;
    public static final int SIZE_4K;
    public static final int SIZE_MINI;
    public static final int BLOCK_SIZE;
    private static final int MAX_BLOCK_COUNT;
    private static final int MAX_SECTOR_COUNT;
    private boolean mIsEmulated;
    private int mType;
    private int mSize;

    public static android.nfc.tech.MifareClassic get(android.nfc.Tag)
    {
        android.nfc.Tag r0;
        boolean $z0;
        android.nfc.tech.MifareClassic $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: android.nfc.Tag;

        $z0 = virtualinvoke r0.<android.nfc.Tag: boolean hasTech(int)>(8);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new android.nfc.tech.MifareClassic;

        specialinvoke $r2.<android.nfc.tech.MifareClassic: void <init>(android.nfc.Tag)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void <init>(android.nfc.Tag) throws android.os.RemoteException
    {
        android.nfc.tech.MifareClassic r0;
        android.nfc.Tag r1;
        android.nfc.tech.NfcA r2;
        short $s0, $s1;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.nfc.tech.MifareClassic;

        r1 := @parameter0: android.nfc.Tag;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void <init>(android.nfc.Tag,int)>(r1, 8);

        r2 = staticinvoke <android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>(r1);

        r0.<android.nfc.tech.MifareClassic: boolean mIsEmulated> = 0;

        $s0 = virtualinvoke r2.<android.nfc.tech.NfcA: short getSak()>();

        lookupswitch($s0)
        {
            case 1: goto label01;
            case 8: goto label01;
            case 9: goto label02;
            case 16: goto label03;
            case 17: goto label04;
            case 24: goto label05;
            case 40: goto label06;
            case 56: goto label07;
            case 136: goto label08;
            case 152: goto label09;
            case 184: goto label09;
            default: goto label10;
        };

     label01:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 1024;

        goto label11;

     label02:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 320;

        goto label11;

     label03:
        r0.<android.nfc.tech.MifareClassic: int mType> = 1;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 2048;

        goto label11;

     label04:
        r0.<android.nfc.tech.MifareClassic: int mType> = 1;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 4096;

        goto label11;

     label05:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 4096;

        goto label11;

     label06:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 1024;

        r0.<android.nfc.tech.MifareClassic: boolean mIsEmulated> = 1;

        goto label11;

     label07:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 4096;

        r0.<android.nfc.tech.MifareClassic: boolean mIsEmulated> = 1;

        goto label11;

     label08:
        r0.<android.nfc.tech.MifareClassic: int mType> = 0;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 1024;

        goto label11;

     label09:
        r0.<android.nfc.tech.MifareClassic: int mType> = 2;

        r0.<android.nfc.tech.MifareClassic: int mSize> = 4096;

        goto label11;

     label10:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag incorrectly enumerated as MIFARE Classic, SAK = ");

        $s1 = virtualinvoke r2.<android.nfc.tech.NfcA: short getSak()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label11:
        return;
    }

    public int getType()
    {
        android.nfc.tech.MifareClassic r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $i0 = r0.<android.nfc.tech.MifareClassic: int mType>;

        return $i0;
    }

    public int getSize()
    {
        android.nfc.tech.MifareClassic r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $i0 = r0.<android.nfc.tech.MifareClassic: int mSize>;

        return $i0;
    }

    public boolean isEmulated()
    {
        android.nfc.tech.MifareClassic r0;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $z0 = r0.<android.nfc.tech.MifareClassic: boolean mIsEmulated>;

        return $z0;
    }

    public int getSectorCount()
    {
        android.nfc.tech.MifareClassic r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $i0 = r0.<android.nfc.tech.MifareClassic: int mSize>;

        lookupswitch($i0)
        {
            case 320: goto label4;
            case 1024: goto label1;
            case 2048: goto label2;
            case 4096: goto label3;
            default: goto label5;
        };

     label1:
        return 16;

     label2:
        return 32;

     label3:
        return 40;

     label4:
        return 5;

     label5:
        return 0;
    }

    public int getBlockCount()
    {
        android.nfc.tech.MifareClassic r0;
        int $i0, $i1;

        r0 := @this: android.nfc.tech.MifareClassic;

        $i0 = r0.<android.nfc.tech.MifareClassic: int mSize>;

        $i1 = $i0 / 16;

        return $i1;
    }

    public int getBlockCountInSector(int)
    {
        android.nfc.tech.MifareClassic r0;
        int i0;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateSector(int)>(i0);

        if i0 >= 32 goto label1;

        return 4;

     label1:
        return 16;
    }

    public int blockToSector(int)
    {
        android.nfc.tech.MifareClassic r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        if i0 >= 128 goto label1;

        $i4 = i0 / 4;

        return $i4;

     label1:
        $i1 = i0 - 128;

        $i2 = $i1 / 16;

        $i3 = 32 + $i2;

        return $i3;
    }

    public int sectorToBlock(int)
    {
        android.nfc.tech.MifareClassic r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        if i0 >= 32 goto label1;

        $i4 = i0 * 4;

        return $i4;

     label1:
        $i1 = i0 - 32;

        $i2 = $i1 * 16;

        $i3 = 128 + $i2;

        return $i3;
    }

    public boolean authenticateSectorWithKeyA(int, byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0;
        byte[] r1;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $z0 = specialinvoke r0.<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)>(i0, r1, 1);

        return $z0;
    }

    public boolean authenticateSectorWithKeyB(int, byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0;
        byte[] r1;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $z0 = specialinvoke r0.<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)>(i0, r1, 0);

        return $z0;
    }

    private boolean authenticate(int, byte[], boolean) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0, $i1, $i3, $i4;
        byte[] r1, r2, r3, $r6;
        boolean z0;
        android.nfc.TagLostException r4, $r7;
        byte $b2;
        android.nfc.Tag $r5;
        java.io.IOException $r8;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        staticinvoke <android.nfc.tech.MifareClassic: void validateSector(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        r2 = newarray (byte)[12];

        if z0 == 0 goto label1;

        r2[0] = 96;

        goto label2;

     label1:
        r2[0] = 97;

     label2:
        $i1 = virtualinvoke r0.<android.nfc.tech.MifareClassic: int sectorToBlock(int)>(i0);

        $b2 = (byte) $i1;

        r2[1] = $b2;

        $r5 = virtualinvoke r0.<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()>();

        r3 = virtualinvoke $r5.<android.nfc.Tag: byte[] getId()>();

        $i3 = lengthof r3;

        $i4 = $i3 - 4;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r3, $i4, r2, 2, 4);

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r2, 6, 6);

     label3:
        $r6 = virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r2, 0);

        if $r6 == null goto label5;

     label4:
        return 1;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        throw r4;

     label7:
        $r8 := @caughtexception;

     label8:
        return 0;

        catch android.nfc.TagLostException from label3 to label4 with label6;
        catch java.io.IOException from label3 to label4 with label7;
    }

    public byte[] readBlock(int) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0;
        byte[] r1, $r2, $r3;
        byte $b1;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        $r2 = newarray (byte)[2];

        $r2[0] = 48;

        $b1 = (byte) i0;

        $r2[1] = $b1;

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r1, 0);

        return $r3;
    }

    public void writeBlock(int, byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0, $i1, $i2, $i3, $i5;
        byte[] r1, r2;
        byte $b4;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        $i1 = lengthof r1;

        if $i1 == 16 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("must write 16-bytes");

        throw $r4;

     label1:
        $i2 = lengthof r1;

        $i3 = $i2 + 2;

        r2 = newarray (byte)[$i3];

        r2[0] = -96;

        $b4 = (byte) i0;

        r2[1] = $b4;

        $i5 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r2, 2, $i5);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r2, 0);

        return;
    }

    public void increment(int, int) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0, i1;
        java.nio.ByteBuffer r1;
        java.nio.ByteOrder $r2;
        byte $b2;
        byte[] $r7;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        staticinvoke <android.nfc.tech.MifareClassic: void validateValueOperand(int)>(i1);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(6);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(-63);

        $b2 = (byte) i0;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        $r7 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>($r7, 0);

        return;
    }

    public void decrement(int, int) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0, i1;
        java.nio.ByteBuffer r1;
        java.nio.ByteOrder $r2;
        byte $b2;
        byte[] $r7;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        staticinvoke <android.nfc.tech.MifareClassic: void validateValueOperand(int)>(i1);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(6);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>(-64);

        $b2 = (byte) i0;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i1);

        $r7 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>($r7, 0);

        return;
    }

    public void transfer(int) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0;
        byte[] r1, $r2;
        byte $b1;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        $r2 = newarray (byte)[2];

        $r2[0] = -80;

        $b1 = (byte) i0;

        $r2[1] = $b1;

        r1 = $r2;

        virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r1, 0);

        return;
    }

    public void restore(int) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        int i0;
        byte[] r1, $r2;
        byte $b1;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareClassic: void validateBlock(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareClassic: void checkConnected()>();

        $r2 = newarray (byte)[2];

        $r2[0] = -62;

        $b1 = (byte) i0;

        $r2[1] = $b1;

        r1 = $r2;

        virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r1, 0);

        return;
    }

    public byte[] transceive(byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;
        byte[] r1, $r2;

        r0 := @this: android.nfc.tech.MifareClassic;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>(r1, 1);

        return $r2;
    }

    public int getMaxTransceiveLength()
    {
        android.nfc.tech.MifareClassic r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $i0 = virtualinvoke r0.<android.nfc.tech.MifareClassic: int getMaxTransceiveLengthInternal()>();

        return $i0;
    }

    public void setTimeout(int)
    {
        android.nfc.tech.MifareClassic r0;
        int i0, i1;
        android.nfc.Tag $r1;
        android.nfc.INfcTag $r2;
        java.lang.IllegalArgumentException $r3;
        android.os.RemoteException $r4, r5;

        r0 := @this: android.nfc.tech.MifareClassic;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.nfc.tech.MifareClassic: android.nfc.Tag mTag>;

        $r2 = virtualinvoke $r1.<android.nfc.Tag: android.nfc.INfcTag getTagService()>();

        i1 = interfaceinvoke $r2.<android.nfc.INfcTag: int setTimeout(int,int)>(8, i0);

        if i1 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The supplied timeout is not valid");

        throw $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead", r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getTimeout()
    {
        android.nfc.tech.MifareClassic r0;
        android.os.RemoteException r1, $r4;
        android.nfc.Tag $r2;
        android.nfc.INfcTag $r3;
        int $i0;

        r0 := @this: android.nfc.tech.MifareClassic;

     label1:
        $r2 = r0.<android.nfc.tech.MifareClassic: android.nfc.Tag mTag>;

        $r3 = virtualinvoke $r2.<android.nfc.Tag: android.nfc.INfcTag getTagService()>();

        $i0 = interfaceinvoke $r3.<android.nfc.INfcTag: int getTimeout(int)>(8);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static void validateSector(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 < 40 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sector out of bounds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    private static void validateBlock(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 < 256 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("block out of bounds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    private static void validateValueOperand(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value operand negative");

        throw $r0;

     label1:
        return;
    }

    public volatile void close() throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;

        r0 := @this: android.nfc.tech.MifareClassic;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void close()>();

        return;
    }

    public volatile void reconnect() throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;

        r0 := @this: android.nfc.tech.MifareClassic;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void reconnect()>();

        return;
    }

    public volatile void connect() throws java.io.IOException
    {
        android.nfc.tech.MifareClassic r0;

        r0 := @this: android.nfc.tech.MifareClassic;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void connect()>();

        return;
    }

    public volatile boolean isConnected()
    {
        android.nfc.tech.MifareClassic r0;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareClassic;

        $z0 = specialinvoke r0.<android.nfc.tech.BasicTagTechnology: boolean isConnected()>();

        return $z0;
    }

    public volatile android.nfc.Tag getTag()
    {
        android.nfc.tech.MifareClassic r0;
        android.nfc.Tag $r1;

        r0 := @this: android.nfc.tech.MifareClassic;

        $r1 = specialinvoke r0.<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>();

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2;

        <android.nfc.tech.MifareClassic: int MAX_SECTOR_COUNT> = 40;

        <android.nfc.tech.MifareClassic: int MAX_BLOCK_COUNT> = 256;

        <android.nfc.tech.MifareClassic: int BLOCK_SIZE> = 16;

        <android.nfc.tech.MifareClassic: int SIZE_MINI> = 320;

        <android.nfc.tech.MifareClassic: int SIZE_4K> = 4096;

        <android.nfc.tech.MifareClassic: int SIZE_2K> = 2048;

        <android.nfc.tech.MifareClassic: int SIZE_1K> = 1024;

        <android.nfc.tech.MifareClassic: int TYPE_PRO> = 2;

        <android.nfc.tech.MifareClassic: int TYPE_PLUS> = 1;

        <android.nfc.tech.MifareClassic: int TYPE_CLASSIC> = 0;

        <android.nfc.tech.MifareClassic: int TYPE_UNKNOWN> = -1;

        <android.nfc.tech.MifareClassic: java.lang.String TAG> = "NFC";

        $r0 = newarray (byte)[6];

        $r0[0] = -1;

        $r0[1] = -1;

        $r0[2] = -1;

        $r0[3] = -1;

        $r0[4] = -1;

        $r0[5] = -1;

        <android.nfc.tech.MifareClassic: byte[] KEY_DEFAULT> = $r0;

        $r1 = newarray (byte)[6];

        $r1[0] = -96;

        $r1[1] = -95;

        $r1[2] = -94;

        $r1[3] = -93;

        $r1[4] = -92;

        $r1[5] = -91;

        <android.nfc.tech.MifareClassic: byte[] KEY_MIFARE_APPLICATION_DIRECTORY> = $r1;

        $r2 = newarray (byte)[6];

        $r2[0] = -45;

        $r2[1] = -9;

        $r2[2] = -45;

        $r2[3] = -9;

        $r2[4] = -45;

        $r2[5] = -9;

        <android.nfc.tech.MifareClassic: byte[] KEY_NFC_FORUM> = $r2;

        return;
    }
}
