public class android.media.tv.TvView extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int VIDEO_SIZE_VALUE_UNKNOWN;
    private static final int ZORDER_MEDIA;
    private static final int ZORDER_MEDIA_OVERLAY;
    private static final int ZORDER_ON_TOP;
    private static final int CAPTION_DEFAULT;
    private static final int CAPTION_ENABLED;
    private static final int CAPTION_DISABLED;
    private static final java.lang.ref.WeakReference NULL_TV_VIEW;
    private static final java.lang.Object sMainTvViewLock;
    private static java.lang.ref.WeakReference sMainTvView;
    private final android.os.Handler mHandler;
    private android.media.tv.TvInputManager$Session mSession;
    private android.view.SurfaceView mSurfaceView;
    private android.view.Surface mSurface;
    private boolean mOverlayViewCreated;
    private android.graphics.Rect mOverlayViewFrame;
    private final android.media.tv.TvInputManager mTvInputManager;
    private android.media.tv.TvView$MySessionCallback mSessionCallback;
    private android.media.tv.TvView$TvInputCallback mCallback;
    private android.media.tv.TvView$OnUnhandledInputEventListener mOnUnhandledInputEventListener;
    private boolean mHasStreamVolume;
    private float mStreamVolume;
    private int mVideoWidth;
    private int mVideoHeight;
    private boolean mSurfaceChanged;
    private int mSurfaceFormat;
    private int mSurfaceWidth;
    private int mSurfaceHeight;
    private final android.util.AttributeSet mAttrs;
    private final int mDefStyleAttr;
    private int mWindowZOrder;
    private boolean mUseRequestedSurfaceLayout;
    private int mSurfaceViewLeft;
    private int mSurfaceViewRight;
    private int mSurfaceViewTop;
    private int mSurfaceViewBottom;
    private int mCaptionEnabled;
    private final android.view.SurfaceHolder$Callback mSurfaceHolderCallback;
    private final android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback;

    public void <init>(android.content.Context)
    {
        android.media.tv.TvView r0;
        android.content.Context r1;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.media.tv.TvView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.media.tv.TvView r0;
        android.content.Context r1, $r6;
        android.util.AttributeSet r2;
        int i0;
        android.os.Handler $r3;
        android.media.tv.TvView$1 $r4;
        android.media.tv.TvView$2 $r5;
        java.lang.Object $r7;
        android.media.tv.TvInputManager $r8;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<android.media.tv.TvView: android.os.Handler mHandler> = $r3;

        r0.<android.media.tv.TvView: int mVideoWidth> = 0;

        r0.<android.media.tv.TvView: int mVideoHeight> = 0;

        $r4 = new android.media.tv.TvView$1;

        specialinvoke $r4.<android.media.tv.TvView$1: void <init>(android.media.tv.TvView)>(r0);

        r0.<android.media.tv.TvView: android.view.SurfaceHolder$Callback mSurfaceHolderCallback> = $r4;

        $r5 = new android.media.tv.TvView$2;

        specialinvoke $r5.<android.media.tv.TvView$2: void <init>(android.media.tv.TvView)>(r0);

        r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback> = $r5;

        r0.<android.media.tv.TvView: android.util.AttributeSet mAttrs> = r2;

        r0.<android.media.tv.TvView: int mDefStyleAttr> = i0;

        specialinvoke r0.<android.media.tv.TvView: void resetSurfaceView()>();

        $r6 = virtualinvoke r0.<android.media.tv.TvView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        $r8 = (android.media.tv.TvInputManager) $r7;

        r0.<android.media.tv.TvView: android.media.tv.TvInputManager mTvInputManager> = $r8;

        return;
    }

    public void setCallback(android.media.tv.TvView$TvInputCallback)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvView$TvInputCallback r1;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.media.tv.TvView$TvInputCallback;

        r0.<android.media.tv.TvView: android.media.tv.TvView$TvInputCallback mCallback> = r1;

        return;
    }

    public void setMain()
    {
        android.media.tv.TvView r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        java.lang.ref.WeakReference $r4;
        boolean $z0;
        android.media.tv.TvInputManager$Session $r5, $r6;

        r0 := @this: android.media.tv.TvView;

        $r3 = <android.media.tv.TvView: java.lang.Object sMainTvViewLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView> = $r4;

        $z0 = virtualinvoke r0.<android.media.tv.TvView: boolean hasWindowFocus()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r5 == null goto label2;

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r6.<android.media.tv.TvInputManager$Session: void setMain()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setZOrderMediaOverlay(boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;
        android.view.SurfaceView $r1, $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<android.media.tv.TvView: int mWindowZOrder> = 1;

        specialinvoke r0.<android.media.tv.TvView: void removeSessionOverlayView()>();

        goto label2;

     label1:
        r0.<android.media.tv.TvView: int mWindowZOrder> = 0;

        specialinvoke r0.<android.media.tv.TvView: void createSessionOverlayView()>();

     label2:
        $r1 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        if $r1 == null goto label3;

        $r2 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.view.SurfaceView: void setZOrderOnTop(boolean)>(0);

        $r3 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r3.<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>(z0);

     label3:
        return;
    }

    public void setZOrderOnTop(boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;
        android.view.SurfaceView $r1, $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<android.media.tv.TvView: int mWindowZOrder> = 2;

        specialinvoke r0.<android.media.tv.TvView: void removeSessionOverlayView()>();

        goto label2;

     label1:
        r0.<android.media.tv.TvView: int mWindowZOrder> = 0;

        specialinvoke r0.<android.media.tv.TvView: void createSessionOverlayView()>();

     label2:
        $r1 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        if $r1 == null goto label3;

        $r2 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>(0);

        $r3 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r3.<android.view.SurfaceView: void setZOrderOnTop(boolean)>(z0);

     label3:
        return;
    }

    public void setStreamVolume(float)
    {
        android.media.tv.TvView r0;
        float f0;
        android.media.tv.TvInputManager$Session $r1, $r2;

        r0 := @this: android.media.tv.TvView;

        f0 := @parameter0: float;

        r0.<android.media.tv.TvView: boolean mHasStreamVolume> = 1;

        r0.<android.media.tv.TvView: float mStreamVolume> = f0;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r2.<android.media.tv.TvInputManager$Session: void setStreamVolume(float)>(f0);

        return;
    }

    public void tune(java.lang.String, android.net.Uri)
    {
        android.media.tv.TvView r0;
        java.lang.String r1;
        android.net.Uri r2;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        virtualinvoke r0.<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri,android.os.Bundle)>(r1, r2, null);

        return;
    }

    public void tune(java.lang.String, android.net.Uri, android.os.Bundle)
    {
        android.media.tv.TvView r0;
        java.lang.String r1, $r16;
        android.net.Uri r2;
        android.os.Bundle r3;
        java.lang.Object r4, $r6, $r8;
        java.lang.Throwable r5, $r23;
        boolean $z0, $z1;
        java.lang.ref.WeakReference $r7, $r22;
        android.media.tv.TvView$MySessionCallback $r9, $r10, $r13, $r14, $r17, $r20;
        android.media.tv.TvInputManager $r11, $r15;
        android.os.Handler $r12;
        android.media.tv.TvInputManager$Session $r18, $r19;
        java.lang.IllegalArgumentException $r21;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("inputId cannot be null or an empty string");

        throw $r21;

     label01:
        $r6 = <android.media.tv.TvView: java.lang.Object sMainTvViewLock>;

        r4 = $r6;

        entermonitor $r6;

     label02:
        $r7 = <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r8 != null goto label03;

        $r22 = new java.lang.ref.WeakReference;

        specialinvoke $r22.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView> = $r22;

     label03:
        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        $r9 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        if $r9 == null goto label09;

        $r14 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        $r16 = $r14.<android.media.tv.TvView$MySessionCallback: java.lang.String mInputId>;

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label09;

        $r18 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r18 == null goto label08;

        $r19 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r19.<android.media.tv.TvInputManager$Session: void tune(android.net.Uri,android.os.Bundle)>(r2, r3);

        goto label10;

     label08:
        $r17 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        $r17.<android.media.tv.TvView$MySessionCallback: android.net.Uri mChannelUri> = r2;

        $r20 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        $r20.<android.media.tv.TvView$MySessionCallback: android.os.Bundle mTuneParams> = r3;

        goto label10;

     label09:
        specialinvoke r0.<android.media.tv.TvView: void resetInternal()>();

        $r10 = new android.media.tv.TvView$MySessionCallback;

        specialinvoke $r10.<android.media.tv.TvView$MySessionCallback: void <init>(android.media.tv.TvView,java.lang.String,android.net.Uri,android.os.Bundle)>(r0, r1, r2, r3);

        r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback> = $r10;

        $r11 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager mTvInputManager>;

        if $r11 == null goto label10;

        $r15 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager mTvInputManager>;

        $r13 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        $r12 = r0.<android.media.tv.TvView: android.os.Handler mHandler>;

        virtualinvoke $r15.<android.media.tv.TvInputManager: void createSession(java.lang.String,android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r1, $r13, $r12);

     label10:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public void reset()
    {
        android.media.tv.TvView r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r7;
        java.lang.ref.WeakReference $r4, $r6;

        r0 := @this: android.media.tv.TvView;

        $r3 = <android.media.tv.TvView: java.lang.Object sMainTvViewLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if r0 != $r5 goto label2;

        $r6 = <android.media.tv.TvView: java.lang.ref.WeakReference NULL_TV_VIEW>;

        <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView> = $r6;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        specialinvoke r0.<android.media.tv.TvView: void resetInternal()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void resetInternal()
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session $r1;

        r0 := @this: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.media.tv.TvView: void release()>();

        specialinvoke r0.<android.media.tv.TvView: void resetSurfaceView()>();

     label1:
        return;
    }

    public void requestUnblockContent(android.media.tv.TvContentRating)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvContentRating r1;
        android.media.tv.TvInputManager$Session $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.media.tv.TvContentRating;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r3.<android.media.tv.TvInputManager$Session: void requestUnblockContent(android.media.tv.TvContentRating)>(r1);

     label1:
        return;
    }

    public void setCaptionEnabled(boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;
        android.media.tv.TvInputManager$Session $r1, $r2;
        byte $b0;

        r0 := @this: android.media.tv.TvView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        r0.<android.media.tv.TvView: int mCaptionEnabled> = $b0;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 == null goto label3;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r2.<android.media.tv.TvInputManager$Session: void setCaptionEnabled(boolean)>(z0);

     label3:
        return;
    }

    public void selectTrack(int, java.lang.String)
    {
        android.media.tv.TvView r0;
        int i0;
        java.lang.String r1;
        android.media.tv.TvInputManager$Session $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r3.<android.media.tv.TvInputManager$Session: void selectTrack(int,java.lang.String)>(i0, r1);

     label1:
        return;
    }

    public java.util.List getTracks(int)
    {
        android.media.tv.TvView r0;
        int i0;
        android.media.tv.TvInputManager$Session $r1, $r2;
        java.util.List $r3;

        r0 := @this: android.media.tv.TvView;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r3 = virtualinvoke $r2.<android.media.tv.TvInputManager$Session: java.util.List getTracks(int)>(i0);

        return $r3;
    }

    public java.lang.String getSelectedTrack(int)
    {
        android.media.tv.TvView r0;
        int i0;
        android.media.tv.TvInputManager$Session $r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.media.tv.TvView;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r3 = virtualinvoke $r2.<android.media.tv.TvInputManager$Session: java.lang.String getSelectedTrack(int)>(i0);

        return $r3;
    }

    public void sendAppPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.media.tv.TvView r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;
        android.media.tv.TvInputManager$Session $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("action cannot be null or an empty string");

        throw $r5;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r3 == null goto label2;

        $r4 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r4.<android.media.tv.TvInputManager$Session: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>(r1, r2);

     label2:
        return;
    }

    public boolean dispatchUnhandledInputEvent(android.view.InputEvent)
    {
        android.media.tv.TvView r0;
        android.view.InputEvent r1;
        android.media.tv.TvView$OnUnhandledInputEventListener $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.InputEvent;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvView$OnUnhandledInputEventListener mOnUnhandledInputEventListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvView$OnUnhandledInputEventListener mOnUnhandledInputEventListener>;

        $z1 = interfaceinvoke $r3.<android.media.tv.TvView$OnUnhandledInputEventListener: boolean onUnhandledInputEvent(android.view.InputEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.media.tv.TvView: boolean onUnhandledInputEvent(android.view.InputEvent)>(r1);

        return $z0;
    }

    public boolean onUnhandledInputEvent(android.view.InputEvent)
    {
        android.media.tv.TvView r0;
        android.view.InputEvent r1;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.InputEvent;

        return 0;
    }

    public void setOnUnhandledInputEventListener(android.media.tv.TvView$OnUnhandledInputEventListener)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvView$OnUnhandledInputEventListener r1;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.media.tv.TvView$OnUnhandledInputEventListener;

        r0.<android.media.tv.TvView: android.media.tv.TvView$OnUnhandledInputEventListener mOnUnhandledInputEventListener> = r1;

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.media.tv.TvView r0;
        android.view.KeyEvent r1, r2;
        int i0;
        boolean $z0, $z1;
        android.media.tv.TvInputManager$Session $r3, $r6;
        android.os.Handler $r4;
        android.media.tv.TvInputManager$Session$FinishedInputEventCallback $r5;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r3 != null goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r1.<android.view.KeyEvent: android.view.KeyEvent copy()>();

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r5 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback>;

        $r4 = r0.<android.media.tv.TvView: android.os.Handler mHandler>;

        i0 = virtualinvoke $r6.<android.media.tv.TvInputManager$Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager$Session$FinishedInputEventCallback,android.os.Handler)>(r2, r2, $r5, $r4);

        if i0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.media.tv.TvView r0;
        android.view.MotionEvent r1, r2;
        int i0;
        boolean $z0, $z1;
        android.media.tv.TvInputManager$Session $r3, $r6;
        android.os.Handler $r4;
        android.media.tv.TvInputManager$Session$FinishedInputEventCallback $r5;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r3 != null goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r1.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r5 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback>;

        $r4 = r0.<android.media.tv.TvView: android.os.Handler mHandler>;

        i0 = virtualinvoke $r6.<android.media.tv.TvInputManager$Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager$Session$FinishedInputEventCallback,android.os.Handler)>(r2, r2, $r5, $r4);

        if i0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.media.tv.TvView r0;
        android.view.MotionEvent r1, r2;
        int i0;
        boolean $z0, $z1;
        android.media.tv.TvInputManager$Session $r3, $r6;
        android.os.Handler $r4;
        android.media.tv.TvInputManager$Session$FinishedInputEventCallback $r5;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r3 != null goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r1.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r5 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback>;

        $r4 = r0.<android.media.tv.TvView: android.os.Handler mHandler>;

        i0 = virtualinvoke $r6.<android.media.tv.TvInputManager$Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager$Session$FinishedInputEventCallback,android.os.Handler)>(r2, r2, $r5, $r4);

        if i0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.media.tv.TvView r0;
        android.view.MotionEvent r1, r2;
        int i0;
        boolean $z0, $z1;
        android.media.tv.TvInputManager$Session $r3, $r6;
        android.os.Handler $r4;
        android.media.tv.TvInputManager$Session$FinishedInputEventCallback $r5;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r3 != null goto label2;

        return 0;

     label2:
        r2 = virtualinvoke r1.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r5 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session$FinishedInputEventCallback mFinishedInputEventCallback>;

        $r4 = r0.<android.media.tv.TvView: android.os.Handler mHandler>;

        i0 = virtualinvoke $r6.<android.media.tv.TvInputManager$Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager$Session$FinishedInputEventCallback,android.os.Handler)>(r2, r2, $r5, $r4);

        if i0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r8;
        java.lang.ref.WeakReference $r4;
        android.media.tv.TvInputManager$Session $r6, $r7;

        r0 := @this: android.media.tv.TvView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>(z0);

        $r3 = <android.media.tv.TvView: java.lang.Object sMainTvViewLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        if z0 == 0 goto label2;

        $r4 = <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if r0 != $r5 goto label2;

        $r6 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r6 == null goto label2;

        $r7 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r7.<android.media.tv.TvInputManager$Session: void setMain()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void onAttachedToWindow()
    {
        android.media.tv.TvView r0;

        r0 := @this: android.media.tv.TvView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        specialinvoke r0.<android.media.tv.TvView: void createSessionOverlayView()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.media.tv.TvView r0;

        r0 := @this: android.media.tv.TvView;

        specialinvoke r0.<android.media.tv.TvView: void removeSessionOverlayView()>();

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.media.tv.TvView r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.SurfaceView $r1, $r2;

        r0 := @this: android.media.tv.TvView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $z1 = r0.<android.media.tv.TvView: boolean mUseRequestedSurfaceLayout>;

        if $z1 == 0 goto label1;

        $r2 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        $i9 = r0.<android.media.tv.TvView: int mSurfaceViewLeft>;

        $i8 = r0.<android.media.tv.TvView: int mSurfaceViewTop>;

        $i7 = r0.<android.media.tv.TvView: int mSurfaceViewRight>;

        $i6 = r0.<android.media.tv.TvView: int mSurfaceViewBottom>;

        virtualinvoke $r2.<android.view.SurfaceView: void layout(int,int,int,int)>($i9, $i8, $i7, $i6);

        goto label2;

     label1:
        $r1 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        $i5 = i2 - i0;

        $i4 = i3 - i1;

        virtualinvoke $r1.<android.view.SurfaceView: void layout(int,int,int,int)>(0, 0, $i5, $i4);

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.media.tv.TvView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.view.SurfaceView $r1, $r2, $r3, $r4;

        r0 := @this: android.media.tv.TvView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r1.<android.view.SurfaceView: void measure(int,int)>(i0, i1);

        $r2 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        i2 = virtualinvoke $r2.<android.view.SurfaceView: int getMeasuredWidth()>();

        $r3 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        i3 = virtualinvoke $r3.<android.view.SurfaceView: int getMeasuredHeight()>();

        $r4 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        i4 = virtualinvoke $r4.<android.view.SurfaceView: int getMeasuredState()>();

        $i5 = staticinvoke <android.media.tv.TvView: int resolveSizeAndState(int,int,int)>(i2, i0, i4);

        $i6 = i4 << 16;

        $i7 = staticinvoke <android.media.tv.TvView: int resolveSizeAndState(int,int,int)>(i3, i1, $i6);

        virtualinvoke r0.<android.media.tv.TvView: void setMeasuredDimension(int,int)>($i5, $i7);

        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.media.tv.TvView r0;
        android.view.View r1;
        int i0;
        android.view.SurfaceView $r2;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $r2 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.view.SurfaceView: void setVisibility(int)>(i0);

        if i0 != 0 goto label1;

        specialinvoke r0.<android.media.tv.TvView: void createSessionOverlayView()>();

        goto label2;

     label1:
        specialinvoke r0.<android.media.tv.TvView: void removeSessionOverlayView()>();

     label2:
        return;
    }

    private void resetSurfaceView()
    {
        android.media.tv.TvView r0;
        android.view.SurfaceView $r1, $r5, $r8, $r9, $r10, $r11, $r13;
        android.media.tv.TvView$3 $r2;
        android.content.Context $r3;
        int $i0, $i1, $i2;
        android.util.AttributeSet $r4;
        android.view.SurfaceHolder $r6, $r12;
        android.view.SurfaceHolder$Callback $r7, $r14;

        r0 := @this: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        if $r1 == null goto label1;

        $r11 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        $r12 = virtualinvoke $r11.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r14 = r0.<android.media.tv.TvView: android.view.SurfaceHolder$Callback mSurfaceHolderCallback>;

        interfaceinvoke $r12.<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder$Callback)>($r14);

        $r13 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke r0.<android.media.tv.TvView: void removeView(android.view.View)>($r13);

     label1:
        r0.<android.media.tv.TvView: android.view.Surface mSurface> = null;

        $r2 = new android.media.tv.TvView$3;

        $r3 = virtualinvoke r0.<android.media.tv.TvView: android.content.Context getContext()>();

        $r4 = r0.<android.media.tv.TvView: android.util.AttributeSet mAttrs>;

        $i0 = r0.<android.media.tv.TvView: int mDefStyleAttr>;

        specialinvoke $r2.<android.media.tv.TvView$3: void <init>(android.media.tv.TvView,android.content.Context,android.util.AttributeSet,int)>(r0, $r3, $r4, $i0);

        r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView> = $r2;

        $r5 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        $r6 = virtualinvoke $r5.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r7 = r0.<android.media.tv.TvView: android.view.SurfaceHolder$Callback mSurfaceHolderCallback>;

        interfaceinvoke $r6.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r7);

        $i1 = r0.<android.media.tv.TvView: int mWindowZOrder>;

        if $i1 != 1 goto label2;

        $r10 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r10.<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>(1);

        goto label3;

     label2:
        $i2 = r0.<android.media.tv.TvView: int mWindowZOrder>;

        if $i2 != 2 goto label3;

        $r9 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r9.<android.view.SurfaceView: void setZOrderOnTop(boolean)>(1);

     label3:
        $r8 = r0.<android.media.tv.TvView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke r0.<android.media.tv.TvView: void addView(android.view.View)>($r8);

        return;
    }

    private void release()
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session $r1;

        r0 := @this: android.media.tv.TvView;

        specialinvoke r0.<android.media.tv.TvView: void setSessionSurface(android.view.Surface)>(null);

        specialinvoke r0.<android.media.tv.TvView: void removeSessionOverlayView()>();

        r0.<android.media.tv.TvView: boolean mUseRequestedSurfaceLayout> = 0;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r1.<android.media.tv.TvInputManager$Session: void release()>();

        r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession> = null;

        r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback> = null;

        return;
    }

    private void setSessionSurface(android.view.Surface)
    {
        android.media.tv.TvView r0;
        android.view.Surface r1;
        android.media.tv.TvInputManager$Session $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r3.<android.media.tv.TvInputManager$Session: void setSurface(android.view.Surface)>(r1);

        return;
    }

    private void dispatchSurfaceChanged(int, int, int)
    {
        android.media.tv.TvView r0;
        int i0, i1, i2;
        android.media.tv.TvInputManager$Session $r1, $r2;

        r0 := @this: android.media.tv.TvView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r2.<android.media.tv.TvInputManager$Session: void dispatchSurfaceChanged(int,int,int)>(i0, i1, i2);

        return;
    }

    private void createSessionOverlayView()
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session $r1, $r4;
        boolean $z0, $z1;
        int $i0;
        android.graphics.Rect $r2, $r3;

        r0 := @this: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.media.tv.TvView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<android.media.tv.TvView: boolean mOverlayViewCreated>;

        if $z1 != 0 goto label1;

        $i0 = r0.<android.media.tv.TvView: int mWindowZOrder>;

        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = specialinvoke r0.<android.media.tv.TvView: android.graphics.Rect getViewFrameOnScreen()>();

        r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame> = $r2;

        $r4 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        $r3 = r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame>;

        virtualinvoke $r4.<android.media.tv.TvInputManager$Session: void createOverlayView(android.view.View,android.graphics.Rect)>(r0, $r3);

        r0.<android.media.tv.TvView: boolean mOverlayViewCreated> = 1;

        return;
    }

    private void removeSessionOverlayView()
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session $r1, $r2;
        boolean $z0;

        r0 := @this: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r1 == null goto label1;

        $z0 = r0.<android.media.tv.TvView: boolean mOverlayViewCreated>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r2.<android.media.tv.TvInputManager$Session: void removeOverlayView()>();

        r0.<android.media.tv.TvView: boolean mOverlayViewCreated> = 0;

        r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame> = null;

        return;
    }

    private void relayoutSessionOverlayView()
    {
        android.media.tv.TvView r0;
        android.graphics.Rect r1, $r3;
        android.media.tv.TvInputManager$Session $r2, $r4;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: android.media.tv.TvView;

        $r2 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<android.media.tv.TvView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<android.media.tv.TvView: boolean mOverlayViewCreated>;

        if $z1 == 0 goto label1;

        $i0 = r0.<android.media.tv.TvView: int mWindowZOrder>;

        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        r1 = specialinvoke r0.<android.media.tv.TvView: android.graphics.Rect getViewFrameOnScreen()>();

        $r3 = r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame>;

        $z2 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        return;

     label3:
        $r4 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        virtualinvoke $r4.<android.media.tv.TvInputManager$Session: void relayoutOverlayView(android.graphics.Rect)>(r1);

        r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame> = r1;

        return;
    }

    private android.graphics.Rect getViewFrameOnScreen()
    {
        android.media.tv.TvView r0;
        int[] r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.media.tv.TvView;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.media.tv.TvView: void getLocationOnScreen(int[])>(r1);

        $r2 = new android.graphics.Rect;

        $i0 = r1[0];

        $i1 = r1[1];

        $i2 = r1[0];

        $i3 = virtualinvoke r0.<android.media.tv.TvView: int getWidth()>();

        $i4 = $i2 + $i3;

        $i5 = r1[1];

        $i6 = virtualinvoke r0.<android.media.tv.TvView: int getHeight()>();

        $i7 = $i5 + $i6;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i4, $i7);

        return $r2;
    }

    static int access$002(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceFormat> = i0;

        return i0;
    }

    static int access$102(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceWidth> = i0;

        return i0;
    }

    static int access$202(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceHeight> = i0;

        return i0;
    }

    static boolean access$302(android.media.tv.TvView, boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;

        r0 := @parameter0: android.media.tv.TvView;

        z0 := @parameter1: boolean;

        r0.<android.media.tv.TvView: boolean mSurfaceChanged> = z0;

        return z0;
    }

    static int access$000(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvView;

        $i0 = r0.<android.media.tv.TvView: int mSurfaceFormat>;

        return $i0;
    }

    static int access$100(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvView;

        $i0 = r0.<android.media.tv.TvView: int mSurfaceWidth>;

        return $i0;
    }

    static int access$200(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvView;

        $i0 = r0.<android.media.tv.TvView: int mSurfaceHeight>;

        return $i0;
    }

    static void access$400(android.media.tv.TvView, int, int, int)
    {
        android.media.tv.TvView r0;
        int i0, i1, i2;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.media.tv.TvView: void dispatchSurfaceChanged(int,int,int)>(i0, i1, i2);

        return;
    }

    static android.view.Surface access$502(android.media.tv.TvView, android.view.Surface)
    {
        android.media.tv.TvView r0;
        android.view.Surface r1;

        r0 := @parameter0: android.media.tv.TvView;

        r1 := @parameter1: android.view.Surface;

        r0.<android.media.tv.TvView: android.view.Surface mSurface> = r1;

        return r1;
    }

    static android.view.Surface access$500(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        android.view.Surface $r1;

        r0 := @parameter0: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.view.Surface mSurface>;

        return $r1;
    }

    static void access$600(android.media.tv.TvView, android.view.Surface)
    {
        android.media.tv.TvView r0;
        android.view.Surface r1;

        r0 := @parameter0: android.media.tv.TvView;

        r1 := @parameter1: android.view.Surface;

        specialinvoke r0.<android.media.tv.TvView: void setSessionSurface(android.view.Surface)>(r1);

        return;
    }

    static void access$700(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;

        r0 := @parameter0: android.media.tv.TvView;

        specialinvoke r0.<android.media.tv.TvView: void relayoutSessionOverlayView()>();

        return;
    }

    static android.media.tv.TvView$MySessionCallback access$800(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvView$MySessionCallback $r1;

        r0 := @parameter0: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback>;

        return $r1;
    }

    static android.media.tv.TvInputManager$Session access$902(android.media.tv.TvView, android.media.tv.TvInputManager$Session)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session r1;

        r0 := @parameter0: android.media.tv.TvView;

        r1 := @parameter1: android.media.tv.TvInputManager$Session;

        r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession> = r1;

        return r1;
    }

    static java.lang.Object access$1000()
    {
        java.lang.Object $r0;

        $r0 = <android.media.tv.TvView: java.lang.Object sMainTvViewLock>;

        return $r0;
    }

    static java.lang.ref.WeakReference access$1100()
    {
        java.lang.ref.WeakReference $r0;

        $r0 = <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView>;

        return $r0;
    }

    static android.media.tv.TvInputManager$Session access$900(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvInputManager$Session $r1;

        r0 := @parameter0: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvInputManager$Session mSession>;

        return $r1;
    }

    static boolean access$300(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        boolean $z0;

        r0 := @parameter0: android.media.tv.TvView;

        $z0 = r0.<android.media.tv.TvView: boolean mSurfaceChanged>;

        return $z0;
    }

    static void access$1200(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;

        r0 := @parameter0: android.media.tv.TvView;

        specialinvoke r0.<android.media.tv.TvView: void createSessionOverlayView()>();

        return;
    }

    static int access$1300(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvView;

        $i0 = r0.<android.media.tv.TvView: int mCaptionEnabled>;

        return $i0;
    }

    static boolean access$1400(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        boolean $z0;

        r0 := @parameter0: android.media.tv.TvView;

        $z0 = r0.<android.media.tv.TvView: boolean mHasStreamVolume>;

        return $z0;
    }

    static float access$1500(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        float $f0;

        r0 := @parameter0: android.media.tv.TvView;

        $f0 = r0.<android.media.tv.TvView: float mStreamVolume>;

        return $f0;
    }

    static android.media.tv.TvView$MySessionCallback access$802(android.media.tv.TvView, android.media.tv.TvView$MySessionCallback)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvView$MySessionCallback r1;

        r0 := @parameter0: android.media.tv.TvView;

        r1 := @parameter1: android.media.tv.TvView$MySessionCallback;

        r0.<android.media.tv.TvView: android.media.tv.TvView$MySessionCallback mSessionCallback> = r1;

        return r1;
    }

    static android.media.tv.TvView$TvInputCallback access$1600(android.media.tv.TvView)
    {
        android.media.tv.TvView r0;
        android.media.tv.TvView$TvInputCallback $r1;

        r0 := @parameter0: android.media.tv.TvView;

        $r1 = r0.<android.media.tv.TvView: android.media.tv.TvView$TvInputCallback mCallback>;

        return $r1;
    }

    static boolean access$1702(android.media.tv.TvView, boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;

        r0 := @parameter0: android.media.tv.TvView;

        z0 := @parameter1: boolean;

        r0.<android.media.tv.TvView: boolean mOverlayViewCreated> = z0;

        return z0;
    }

    static android.graphics.Rect access$1802(android.media.tv.TvView, android.graphics.Rect)
    {
        android.media.tv.TvView r0;
        android.graphics.Rect r1;

        r0 := @parameter0: android.media.tv.TvView;

        r1 := @parameter1: android.graphics.Rect;

        r0.<android.media.tv.TvView: android.graphics.Rect mOverlayViewFrame> = r1;

        return r1;
    }

    static int access$1902(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceViewLeft> = i0;

        return i0;
    }

    static int access$2002(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceViewTop> = i0;

        return i0;
    }

    static int access$2102(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceViewRight> = i0;

        return i0;
    }

    static int access$2202(android.media.tv.TvView, int)
    {
        android.media.tv.TvView r0;
        int i0;

        r0 := @parameter0: android.media.tv.TvView;

        i0 := @parameter1: int;

        r0.<android.media.tv.TvView: int mSurfaceViewBottom> = i0;

        return i0;
    }

    static boolean access$2302(android.media.tv.TvView, boolean)
    {
        android.media.tv.TvView r0;
        boolean z0;

        r0 := @parameter0: android.media.tv.TvView;

        z0 := @parameter1: boolean;

        r0.<android.media.tv.TvView: boolean mUseRequestedSurfaceLayout> = z0;

        return z0;
    }

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0, $r2;
        java.lang.Object $r1;

        <android.media.tv.TvView: int CAPTION_DISABLED> = 2;

        <android.media.tv.TvView: int CAPTION_ENABLED> = 1;

        <android.media.tv.TvView: int CAPTION_DEFAULT> = 0;

        <android.media.tv.TvView: int ZORDER_ON_TOP> = 2;

        <android.media.tv.TvView: int ZORDER_MEDIA_OVERLAY> = 1;

        <android.media.tv.TvView: int ZORDER_MEDIA> = 0;

        <android.media.tv.TvView: int VIDEO_SIZE_VALUE_UNKNOWN> = 0;

        <android.media.tv.TvView: boolean DEBUG> = 0;

        <android.media.tv.TvView: java.lang.String TAG> = "TvView";

        $r0 = new java.lang.ref.WeakReference;

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(null);

        <android.media.tv.TvView: java.lang.ref.WeakReference NULL_TV_VIEW> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.media.tv.TvView: java.lang.Object sMainTvViewLock> = $r1;

        $r2 = <android.media.tv.TvView: java.lang.ref.WeakReference NULL_TV_VIEW>;

        <android.media.tv.TvView: java.lang.ref.WeakReference sMainTvView> = $r2;

        return;
    }
}
