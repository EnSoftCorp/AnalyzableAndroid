public class android.util.SparseBooleanArray extends java.lang.Object implements java.lang.Cloneable
{
    private int[] mKeys;
    private boolean[] mValues;
    private int mSize;

    public void <init>()
    {
        android.util.SparseBooleanArray r0;

        r0 := @this: android.util.SparseBooleanArray;

        specialinvoke r0.<android.util.SparseBooleanArray: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        android.util.SparseBooleanArray r0;
        int i0, $i1;
        int[] $r1, $r2, $r4;
        boolean[] $r3, $r5;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $r4 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.SparseBooleanArray: int[] mKeys> = $r4;

        $r5 = <libcore.util.EmptyArray: boolean[] BOOLEAN>;

        r0.<android.util.SparseBooleanArray: boolean[] mValues> = $r5;

        goto label2;

     label1:
        $r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>(i0);

        r0.<android.util.SparseBooleanArray: int[] mKeys> = $r1;

        $r2 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i1 = lengthof $r2;

        $r3 = newarray (boolean)[$i1];

        r0.<android.util.SparseBooleanArray: boolean[] mValues> = $r3;

     label2:
        r0.<android.util.SparseBooleanArray: int mSize> = 0;

        return;
    }

    public android.util.SparseBooleanArray clone()
    {
        android.util.SparseBooleanArray r0, r1;
        java.lang.Object $r3, $r5, $r8;
        int[] $r4, $r6;
        boolean[] $r7, $r9;
        java.lang.CloneNotSupportedException $r10;

        r0 := @this: android.util.SparseBooleanArray;

        r1 = null;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (android.util.SparseBooleanArray) $r3;

        $r4 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (int[]) $r5;

        r1.<android.util.SparseBooleanArray: int[] mKeys> = $r6;

        $r7 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (boolean[]) $r8;

        r1.<android.util.SparseBooleanArray: boolean[] mValues> = $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return r1;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean get(int)
    {
        android.util.SparseBooleanArray r0;
        int i0;
        boolean $z0;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        return $z0;
    }

    public boolean get(int, boolean)
    {
        android.util.SparseBooleanArray r0;
        int i0, i1, $i2;
        boolean z0, $z1;
        int[] $r1;
        boolean[] $r2;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseBooleanArray: int mSize>;

        i1 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 >= 0 goto label1;

        return z0;

     label1:
        $r2 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $z1 = $r2[i1];

        return $z1;
    }

    public void delete(int)
    {
        android.util.SparseBooleanArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] $r1, $r2, $r3;
        boolean[] $r4, $r5;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseBooleanArray: int mSize>;

        i1 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i6 = i1 + 1;

        $r2 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i4 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i3 = i1 + 1;

        $i5 = $i4 - $i3;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r3, $i6, $r2, i1, $i5);

        $r5 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i10 = i1 + 1;

        $r4 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i8 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i7 = i1 + 1;

        $i9 = $i8 - $i7;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r5, $i10, $r4, i1, $i9);

        $i12 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i11 = $i12 - 1;

        r0.<android.util.SparseBooleanArray: int mSize> = $i11;

     label1:
        return;
    }

    public void removeAt(int)
    {
        android.util.SparseBooleanArray r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r1, $r2;
        boolean[] $r3, $r4;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $r2 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i4 = i0 + 1;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i1 = i0 + 1;

        $i3 = $i2 - $i1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r2, $i4, $r1, i0, $i3);

        $r4 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i8 = i0 + 1;

        $r3 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i6 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i5 = i0 + 1;

        $i7 = $i6 - $i5;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r4, $i8, $r3, i0, $i7);

        $i9 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i10 = $i9 - 1;

        r0.<android.util.SparseBooleanArray: int mSize> = $i10;

        return;
    }

    public void put(int, boolean)
    {
        android.util.SparseBooleanArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean z0;
        int[] $r1, $r2, $r3;
        boolean[] $r4, $r5, $r6;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseBooleanArray: int mSize>;

        i1 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r6 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $r6[i1] = z0;

        goto label2;

     label1:
        i7 = i1 ^ -1;

        $r2 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i3 = r0.<android.util.SparseBooleanArray: int mSize>;

        $r3 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>($r2, $i3, i7, i0);

        r0.<android.util.SparseBooleanArray: int[] mKeys> = $r3;

        $r4 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i4 = r0.<android.util.SparseBooleanArray: int mSize>;

        $r5 = staticinvoke <com.android.internal.util.GrowingArrayUtils: boolean[] insert(boolean[],int,int,boolean)>($r4, $i4, i7, z0);

        r0.<android.util.SparseBooleanArray: boolean[] mValues> = $r5;

        $i5 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i6 = $i5 + 1;

        r0.<android.util.SparseBooleanArray: int mSize> = $i6;

     label2:
        return;
    }

    public int size()
    {
        android.util.SparseBooleanArray r0;
        int $i0;

        r0 := @this: android.util.SparseBooleanArray;

        $i0 = r0.<android.util.SparseBooleanArray: int mSize>;

        return $i0;
    }

    public int keyAt(int)
    {
        android.util.SparseBooleanArray r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i1 = $r1[i0];

        return $i1;
    }

    public boolean valueAt(int)
    {
        android.util.SparseBooleanArray r0;
        int i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $z0 = $r1[i0];

        return $z0;
    }

    public void setValueAt(int, boolean)
    {
        android.util.SparseBooleanArray r0;
        int i0;
        boolean z0;
        boolean[] $r1;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $r1[i0] = z0;

        return;
    }

    public int indexOfKey(int)
    {
        android.util.SparseBooleanArray r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i1 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, $i1, i0);

        return $i2;
    }

    public int indexOfValue(boolean)
    {
        android.util.SparseBooleanArray r0;
        boolean z0, $z1;
        int i0, $i1;
        boolean[] $r1;

        r0 := @this: android.util.SparseBooleanArray;

        z0 := @parameter0: boolean;

        i0 = 0;

     label1:
        $i1 = r0.<android.util.SparseBooleanArray: int mSize>;

        if i0 >= $i1 goto label3;

        $r1 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $z1 = $r1[i0];

        if $z1 != z0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public void clear()
    {
        android.util.SparseBooleanArray r0;

        r0 := @this: android.util.SparseBooleanArray;

        r0.<android.util.SparseBooleanArray: int mSize> = 0;

        return;
    }

    public void append(int, boolean)
    {
        android.util.SparseBooleanArray r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        int[] $r1, $r2, $r5;
        boolean[] $r3, $r4;

        r0 := @this: android.util.SparseBooleanArray;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<android.util.SparseBooleanArray: int mSize>;

        if $i1 == 0 goto label1;

        $r5 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i6 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i7 = $i6 - 1;

        $i8 = $r5[$i7];

        if i0 > $i8 goto label1;

        virtualinvoke r0.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        return;

     label1:
        $r1 = r0.<android.util.SparseBooleanArray: int[] mKeys>;

        $i2 = r0.<android.util.SparseBooleanArray: int mSize>;

        $r2 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>($r1, $i2, i0);

        r0.<android.util.SparseBooleanArray: int[] mKeys> = $r2;

        $r3 = r0.<android.util.SparseBooleanArray: boolean[] mValues>;

        $i3 = r0.<android.util.SparseBooleanArray: int mSize>;

        $r4 = staticinvoke <com.android.internal.util.GrowingArrayUtils: boolean[] append(boolean[],int,boolean)>($r3, $i3, z0);

        r0.<android.util.SparseBooleanArray: boolean[] mValues> = $r4;

        $i4 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i5 = $i4 + 1;

        r0.<android.util.SparseBooleanArray: int mSize> = $i5;

        return;
    }

    public java.lang.String toString()
    {
        android.util.SparseBooleanArray r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0;
        java.lang.String $r5;

        r0 := @this: android.util.SparseBooleanArray;

        $i2 = virtualinvoke r0.<android.util.SparseBooleanArray: int size()>();

        if $i2 > 0 goto label1;

        return "{}";

     label1:
        $r2 = new java.lang.StringBuilder;

        $i3 = r0.<android.util.SparseBooleanArray: int mSize>;

        $i4 = $i3 * 28;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i0 = 0;

     label2:
        $i5 = r0.<android.util.SparseBooleanArray: int mSize>;

        if i0 >= $i5 goto label4;

        if i0 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i1 = virtualinvoke r0.<android.util.SparseBooleanArray: int keyAt(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        z0 = virtualinvoke r0.<android.util.SparseBooleanArray: boolean valueAt(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.util.SparseBooleanArray r0, $r1;

        r0 := @this: android.util.SparseBooleanArray;

        $r1 = virtualinvoke r0.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        return $r1;
    }
}
