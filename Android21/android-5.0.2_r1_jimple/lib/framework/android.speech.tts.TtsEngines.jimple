public class android.speech.tts.TtsEngines extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final java.lang.String LOCALE_DELIMITER_OLD;
    private static final java.lang.String LOCALE_DELIMITER_NEW;
    private final android.content.Context mContext;
    private static final java.util.Map sNormalizeLanguage;
    private static final java.util.Map sNormalizeCountry;
    private static final java.lang.String XML_TAG_NAME;

    public void <init>(android.content.Context)
    {
        android.speech.tts.TtsEngines r0;
        android.content.Context r1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TtsEngines: android.content.Context mContext> = r1;

        return;
    }

    public java.lang.String getDefaultEngine()
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_synth");

        $z0 = virtualinvoke r0.<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>();

     label2:
        return $r4;
    }

    public java.lang.String getHighestRankedEngineName()
    {
        android.speech.tts.TtsEngines r0;
        java.util.List r1;
        int $i0;
        java.lang.Object $r2, $r4;
        android.speech.tts.TextToSpeech$EngineInfo $r3, $r5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.List getEngines()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.speech.tts.TextToSpeech$EngineInfo) $r2;

        $z0 = $r3.<android.speech.tts.TextToSpeech$EngineInfo: boolean system>;

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.speech.tts.TextToSpeech$EngineInfo) $r4;

        $r6 = $r5.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

        return $r6;

     label1:
        return null;
    }

    public android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, $r6;
        java.util.List r4;
        android.content.Context $r5;
        int $i0;
        java.lang.Object $r8;
        android.content.pm.ResolveInfo $r9;
        android.speech.tts.TextToSpeech$EngineInfo $r10;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r3 = $r6;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 65536);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (android.content.pm.ResolveInfo) $r8;

        $r10 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>($r9, r2);

        return $r10;

     label1:
        return null;
    }

    public java.util.List getEngines()
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.PackageManager r1;
        android.content.Intent r2, $r9;
        java.util.List r3, $r13;
        java.util.ArrayList r4, $r10;
        java.util.Iterator r5;
        android.content.pm.ResolveInfo r6;
        android.speech.tts.TextToSpeech$EngineInfo r7;
        android.content.Context $r8;
        int $i0;
        boolean $z0;
        java.lang.Object $r11;
        android.speech.tts.TtsEngines$EngineInfoComparator $r12;

        r0 := @this: android.speech.tts.TtsEngines;

        $r8 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r1 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r2 = $r9;

        r3 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r2, 65536);

        if r3 != null goto label1;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r13;

     label1:
        $r10 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = $r10;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.ResolveInfo) $r11;

        r7 = specialinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)>(r6, r1);

        if r7 == null goto label3;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);

     label3:
        goto label2;

     label4:
        $r12 = <android.speech.tts.TtsEngines$EngineInfoComparator: android.speech.tts.TtsEngines$EngineInfoComparator INSTANCE>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, $r12);

        return r4;
    }

    private boolean isSystemEngine(android.content.pm.ServiceInfo)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.ApplicationInfo r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if r2 == null goto label1;

        $i0 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isEngineInstalled(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeech$EngineInfo $r2;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public android.content.Intent getSettingsIntent(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r6;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, r7, $r9, $r13;
        java.util.List r4;
        android.content.pm.ServiceInfo r5;
        android.content.Context $r8;
        int $i0;
        java.lang.Object $r11;
        android.content.pm.ResolveInfo $r12;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        r2 = virtualinvoke $r8.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r3 = $r9;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 65664);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (android.content.pm.ResolveInfo) $r11;

        r5 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r5 == null goto label1;

        r6 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo,android.content.pm.PackageManager)>(r5, r2);

        if r6 == null goto label1;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>()>();

        r7 = $r13;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>(r1, r6);

        return r7;

     label1:
        return null;
    }

    private java.lang.String settingsActivityFromServiceInfo(android.content.pm.ServiceInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ServiceInfo r1;
        android.content.pm.PackageManager r2;
        android.content.res.XmlResourceParser r3;
        int i0, $i1;
        android.content.res.TypedArray r4;
        java.lang.String r5, r6, $r9, $r10, $r15, $r17, $r21, $r31, $r36, $r41;
        java.lang.Throwable r7, $r35;
        android.content.pm.ApplicationInfo $r8;
        boolean $z0;
        int[] $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r34, $r37, $r38, $r39, $r42;
        org.xmlpull.v1.XmlPullParserException $r24, r45;
        java.io.IOException $r29, r46;
        android.content.pm.PackageManager$NameNotFoundException $r40;
        android.content.res.Resources r43;
        android.util.AttributeSet r44;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 := @parameter1: android.content.pm.PackageManager;

        r3 = null;

     label01:
        r3 = virtualinvoke r1.<android.content.pm.ServiceInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>(r2, "android.speech.tts");

        if r3 != null goto label04;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No meta-data found for :");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r21);

     label02:
        if r3 == null goto label03;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return null;

     label04:
        $r8 = r1.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r43 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r8);

     label05:
        $i1 = interfaceinvoke r3.<android.content.res.XmlResourceParser: int next()>();

        i0 = $i1;

        if $i1 == 1 goto label11;

        if i0 != 2 goto label05;

        $r9 = "tts-engine";

        $r10 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label08;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uses unknown tag :");

        $r15 = interfaceinvoke r3.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r17);

     label06:
        if r3 == null goto label07;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label07:
        return null;

     label08:
        r44 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r3);

        $r11 = <com.android.internal.R$styleable: int[] TextToSpeechEngine>;

        r4 = virtualinvoke r43.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r44, $r11);

        r5 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        r6 = r5;

     label09:
        if r3 == null goto label10;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label10:
        return r6;

     label11:
        if r3 == null goto label12;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label12:
        return null;

     label13:
        $r40 := @caughtexception;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load resources for : ");

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r41);

     label14:
        if r3 == null goto label15;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label15:
        return null;

     label16:
        $r24 := @caughtexception;

        r45 = $r24;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r31);

     label17:
        if r3 == null goto label18;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label18:
        return null;

     label19:
        $r29 := @caughtexception;

        r46 = $r29;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing metadata for ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r36);

     label20:
        if r3 == null goto label21;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label21:
        return null;

     label22:
        $r35 := @caughtexception;

        r7 = $r35;

     label23:
        if r3 == null goto label24;

        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

     label24:
        throw r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label13;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label06 with label13;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label06 with label16;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label16;
        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label04 to label06 with label19;
        catch java.io.IOException from label08 to label09 with label19;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label06 with label22;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo, android.content.pm.PackageManager)
    {
        android.speech.tts.TtsEngines r0;
        android.content.pm.ResolveInfo r1;
        android.content.pm.PackageManager r2;
        android.content.pm.ServiceInfo r3;
        android.speech.tts.TextToSpeech$EngineInfo r4, $r6;
        java.lang.CharSequence r5;
        java.lang.String $r7, $r8;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        r2 := @parameter1: android.content.pm.PackageManager;

        r3 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r3 == null goto label3;

        $r6 = new android.speech.tts.TextToSpeech$EngineInfo;

        specialinvoke $r6.<android.speech.tts.TextToSpeech$EngineInfo: void <init>()>();

        r4 = $r6;

        $r7 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name> = $r7;

        r5 = virtualinvoke r3.<android.content.pm.ServiceInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label1;

        $r8 = r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String name>;

        goto label2;

     label1:
        $r8 = interfaceinvoke r5.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        r4.<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String label> = $r8;

        $i0 = virtualinvoke r3.<android.content.pm.ServiceInfo: int getIconResource()>();

        r4.<android.speech.tts.TextToSpeech$EngineInfo: int icon> = $i0;

        $i1 = r1.<android.content.pm.ResolveInfo: int priority>;

        r4.<android.speech.tts.TextToSpeech$EngineInfo: int priority> = $i1;

        $z1 = specialinvoke r0.<android.speech.tts.TtsEngines: boolean isSystemEngine(android.content.pm.ServiceInfo)>(r3);

        r4.<android.speech.tts.TextToSpeech$EngineInfo: boolean system> = $z1;

        return r4;

     label3:
        return null;
    }

    public java.util.Locale getLocalePrefForEngine(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.util.Locale $r5;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_locale");

        $r5 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String,java.lang.String)>(r1, $r4);

        return $r5;
    }

    public java.util.Locale getLocalePrefForEngine(java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r3, $r9;
        java.util.Locale r4, $r10;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String parseEnginePrefFromList(java.lang.String,java.lang.String)>(r2, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r10;

     label1:
        r4 = virtualinvoke r0.<android.speech.tts.TtsEngines: java.util.Locale parseLocaleString(java.lang.String)>(r3);

        if r4 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse locale ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", returning en_US instead");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r9);

        r4 = <java.util.Locale: java.util.Locale US>;

     label2:
        return r4;
    }

    public boolean isLocaleSetToDefaultForEngine(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, $r4, $r5;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "tts_default_locale");

        $r5 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String parseEnginePrefFromList(java.lang.String,java.lang.String)>($r4, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        return $z0;
    }

    public java.util.Locale parseLocaleString(java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r3, r4, r6, $r16, $r17, $r24, $r31, $r35, r36;
        java.lang.String[] r5;
        java.util.Locale r7, $r13;
        boolean $z0;
        java.util.Map $r9, $r11;
        java.lang.Object $r10, $r12;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r32, $r33, $r34;
        java.util.MissingResourceException $r29;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 = "";

        r3 = "";

        r4 = "";

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[-_]");

        $r16 = r5[0];

        r2 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = lengthof r5;

        if $i1 != 0 goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object. Only");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" separators");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r31);

        return null;

     label1:
        $i0 = lengthof r5;

        if $i0 <= 3 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object. Too");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" many separators");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r24);

        return null;

     label2:
        $i3 = lengthof r5;

        if $i3 < 2 goto label3;

        $r17 = r5[1];

        r3 = virtualinvoke $r17.<java.lang.String: java.lang.String toUpperCase()>();

     label3:
        $i2 = lengthof r5;

        if $i2 < 3 goto label4;

        r4 = r5[2];

     label4:
        $r9 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r36 = (java.lang.String) $r10;

        if r36 == null goto label5;

        r2 = r36;

     label5:
        $r11 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.lang.String) $r12;

        if r6 == null goto label6;

        r3 = r6;

     label6:
        $r13 = new java.util.Locale;

        specialinvoke $r13.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

        r7 = $r13;

     label7:
        virtualinvoke r7.<java.util.Locale: java.lang.String getISO3Language()>();

        virtualinvoke r7.<java.util.Locale: java.lang.String getISO3Country()>();

     label8:
        return r7;

     label9:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to convert ");

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to a valid Locale object.");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TtsEngines", $r35);

        return null;

        catch java.util.MissingResourceException from label7 to label8 with label9;
    }

    public static java.util.Locale normalizeTTSLocale(java.util.Locale)
    {
        java.util.Locale r0, $r4;
        java.lang.String r1, r2, r3, $r5, r10;
        boolean $z0, $z1;
        java.util.Map $r6, $r8;
        java.lang.Object $r7, $r9;

        r0 := @parameter0: java.util.Locale;

        r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r8 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r9;

        if r2 == null goto label1;

        r1 = r2;

     label1:
        r10 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z1 != 0 goto label2;

        $r6 = <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r3 = (java.lang.String) $r7;

        if r3 == null goto label2;

        r10 = r3;

     label2:
        $r4 = new java.util.Locale;

        $r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        specialinvoke $r4.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r10, $r5);

        return $r4;
    }

    public static java.lang.String[] toOldLocaleStringFormat(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.String[] r1, $r3, $r8;
        java.lang.String $r4, $r5, $r6;
        java.util.MissingResourceException $r7;

        r0 := @parameter0: java.util.Locale;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "";

        $r3[1] = "";

        $r3[2] = "";

        r1 = $r3;

     label1:
        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getISO3Language()>();

        r1[0] = $r4;

        $r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getISO3Country()>();

        r1[1] = $r5;

        $r6 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        r1[2] = $r6;

     label2:
        return r1;

     label3:
        $r7 := @caughtexception;

        $r8 = newarray (java.lang.String)[3];

        $r8[0] = "eng";

        $r8[1] = "USA";

        $r8[2] = "";

        return $r8;

        catch java.util.MissingResourceException from label1 to label2 with label3;
    }

    private static java.lang.String parseEnginePrefFromList(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r4, $r5, $r6;
        java.lang.String[] r2, r3;
        int i0, i1, i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58);

        if i2 <= 0 goto label3;

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $i3 = i2 + 1;

        $r6 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

        return $r6;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    public synchronized void updateLocalePrefForEngine(java.lang.String, java.util.Locale)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r3, r4, $r9, $r10;
        java.util.Locale r2;
        android.content.Context $r5, $r7;
        android.content.ContentResolver $r6, $r8;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r5 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r6, "tts_default_locale");

        if r2 == null goto label1;

        $r10 = virtualinvoke r2.<java.util.Locale: java.lang.String toString()>();

        goto label2;

     label1:
        $r10 = "";

     label2:
        r4 = specialinvoke r0.<android.speech.tts.TtsEngines: java.lang.String updateValueInCommaSeparatedList(java.lang.String,java.lang.String,java.lang.String)>(r3, r1, $r10);

        $r7 = r0.<android.speech.tts.TtsEngines: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r8, "tts_default_locale", $r9);

        return;
    }

    private java.lang.String updateValueInCommaSeparatedList(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TtsEngines r0;
        java.lang.String r1, r2, r3, r7, $r10, $r14;
        java.lang.StringBuilder r4, $r8, $r11, $r12, $r17, $r20, $r21, $r22;
        java.lang.String[] r5, r6;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2;

        r0 := @this: android.speech.tts.TtsEngines;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r4 = $r8;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 == 0 goto label01;

        $r22 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        goto label10;

     label01:
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        z0 = 1;

        z1 = 0;

        r6 = r5;

        i0 = lengthof r6;

        i1 = 0;

     label02:
        if i1 >= i0 goto label09;

        r7 = r6[i1];

        i2 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(58);

        if i2 <= 0 goto label08;

        $r14 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label05;

        if z0 == 0 goto label03;

        z0 = 0;

        goto label04;

     label03:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label04:
        z1 = 1;

        $r17 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        goto label08;

     label05:
        if z0 == 0 goto label06;

        z0 = 0;

        goto label07;

     label06:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label07:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

     label08:
        i1 = i1 + 1;

        goto label02;

     label09:
        if z1 != 0 goto label10;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label10:
        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        java.util.HashMap r0, $r5, $r7, r17;
        java.lang.String[] r1, r18;
        int i0, i1, i2, i3;
        java.lang.String r2, $r10, $r12, r19;
        java.util.Map $r6, $r8;
        java.util.Locale $r9, $r13;
        java.util.MissingResourceException $r14, $r16;

        <android.speech.tts.TtsEngines: java.lang.String XML_TAG_NAME> = "tts-engine";

        <android.speech.tts.TtsEngines: java.lang.String LOCALE_DELIMITER_NEW> = "_";

        <android.speech.tts.TtsEngines: java.lang.String LOCALE_DELIMITER_OLD> = "-";

        <android.speech.tts.TtsEngines: boolean DBG> = 0;

        <android.speech.tts.TtsEngines: java.lang.String TAG> = "TtsEngines";

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0 = $r5;

        r1 = staticinvoke <java.util.Locale: java.lang.String[] getISOLanguages()>();

        i0 = lengthof r1;

        i1 = 0;

     label01:
        if i1 >= i0 goto label06;

        r2 = r1[i1];

     label02:
        $r13 = new java.util.Locale;

        specialinvoke $r13.<java.util.Locale: void <init>(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.util.Locale: java.lang.String getISO3Language()>();

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r2);

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

        goto label05;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        $r6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r0);

        <android.speech.tts.TtsEngines: java.util.Map sNormalizeLanguage> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r17 = $r7;

        r18 = staticinvoke <java.util.Locale: java.lang.String[] getISOCountries()>();

        i2 = lengthof r18;

        i3 = 0;

     label07:
        if i3 >= i2 goto label12;

        r19 = r18[i3];

     label08:
        $r9 = new java.util.Locale;

        specialinvoke $r9.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("", r19);

        $r10 = virtualinvoke $r9.<java.util.Locale: java.lang.String getISO3Country()>();

        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r19);

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        goto label11;

     label11:
        i3 = i3 + 1;

        goto label07;

     label12:
        $r8 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r17);

        <android.speech.tts.TtsEngines: java.util.Map sNormalizeCountry> = $r8;

        return;

        catch java.util.MissingResourceException from label02 to label03 with label04;
        catch java.util.MissingResourceException from label08 to label09 with label10;
    }
}
