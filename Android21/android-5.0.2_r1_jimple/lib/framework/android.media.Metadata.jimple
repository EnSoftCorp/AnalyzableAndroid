public class android.media.Metadata extends java.lang.Object
{
    public static final int ANY;
    public static final int PAUSE_AVAILABLE;
    public static final int SEEK_BACKWARD_AVAILABLE;
    public static final int SEEK_FORWARD_AVAILABLE;
    public static final int SEEK_AVAILABLE;
    public static final int TITLE;
    public static final int COMMENT;
    public static final int COPYRIGHT;
    public static final int ALBUM;
    public static final int ARTIST;
    public static final int AUTHOR;
    public static final int COMPOSER;
    public static final int GENRE;
    public static final int DATE;
    public static final int DURATION;
    public static final int CD_TRACK_NUM;
    public static final int CD_TRACK_MAX;
    public static final int RATING;
    public static final int ALBUM_ART;
    public static final int VIDEO_FRAME;
    public static final int BIT_RATE;
    public static final int AUDIO_BIT_RATE;
    public static final int VIDEO_BIT_RATE;
    public static final int AUDIO_SAMPLE_RATE;
    public static final int VIDEO_FRAME_RATE;
    public static final int MIME_TYPE;
    public static final int AUDIO_CODEC;
    public static final int VIDEO_CODEC;
    public static final int VIDEO_HEIGHT;
    public static final int VIDEO_WIDTH;
    public static final int NUM_TRACKS;
    public static final int DRM_CRIPPLED;
    private static final int LAST_SYSTEM;
    private static final int FIRST_CUSTOM;
    public static final java.util.Set MATCH_NONE;
    public static final java.util.Set MATCH_ALL;
    public static final int STRING_VAL;
    public static final int INTEGER_VAL;
    public static final int BOOLEAN_VAL;
    public static final int LONG_VAL;
    public static final int DOUBLE_VAL;
    public static final int DATE_VAL;
    public static final int BYTE_ARRAY_VAL;
    private static final int LAST_TYPE;
    private static final java.lang.String TAG;
    private static final int kInt32Size;
    private static final int kMetaHeaderSize;
    private static final int kRecordHeaderSize;
    private static final int kMetaMarker;
    private android.os.Parcel mParcel;
    private final java.util.HashMap mKeyToPosMap;

    public void <init>()
    {
        android.media.Metadata r0;
        java.util.HashMap $r1;

        r0 := @this: android.media.Metadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap> = $r1;

        return;
    }

    private boolean scanAllRecords(android.os.Parcel, int)
    {
        android.media.Metadata r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, $i7, $i10;
        boolean z0, $z1, $z2;
        java.util.HashMap $r2, $r7, $r8, $r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r14, $r16, $r17;
        java.lang.String $r6, $r15;
        java.lang.Integer $r9, $r10, $r12;

        r0 := @this: android.media.Metadata;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        i1 = 0;

        z0 = 0;

        $r2 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

     label1:
        if i0 <= 12 goto label7;

        i2 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i3 > 12 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", "Record is too short");

        z0 = 1;

        goto label7;

     label2:
        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $z1 = specialinvoke r0.<android.media.Metadata: boolean checkMetadataId(int)>(i4);

        if $z1 != 0 goto label3;

        z0 = 1;

        goto label7;

     label3:
        $r8 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $z2 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", "Duplicate metadata ID found");

        z0 = 1;

        goto label7;

     label4:
        $r11 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $i7 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i5 <= 0 goto label5;

        if i5 <= 7 goto label6;

     label5:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid metadata type ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r15);

        z0 = 1;

        goto label7;

     label6:
        $i10 = i2 + i3;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>($i10);

        i0 = i0 - i3;

        i1 = i1 + 1;

        goto label1;

     label7:
        if 0 != i0 goto label8;

        if z0 == 0 goto label9;

     label8:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran out of data or error on record ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r6);

        $r7 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        return 0;

     label9:
        return 1;
    }

    public boolean parse(android.os.Parcel)
    {
        android.media.Metadata r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r17;
        java.lang.String $r8, $r11, $r13, $r18;
        boolean $z0;

        r0 := @this: android.media.Metadata;

        r1 := @parameter0: android.os.Parcel;

        $i3 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        if $i3 >= 8 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not enough data ");

        $i10 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r18);

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        $i5 = $i4 + 4;

        if $i5 < i1 goto label2;

        if i1 >= 8 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad size ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" avail ");

        $i6 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r8);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(i0);

        return 0;

     label3:
        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i2 == 1296389185 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marker missing ");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r13);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(i0);

        return 0;

     label4:
        $i8 = i1 - 8;

        $z0 = specialinvoke r0.<android.media.Metadata: boolean scanAllRecords(android.os.Parcel,int)>(r1, $i8);

        if $z0 != 0 goto label5;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(i0);

        return 0;

     label5:
        r0.<android.media.Metadata: android.os.Parcel mParcel> = r1;

        return 1;
    }

    public java.util.Set keySet()
    {
        android.media.Metadata r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: android.media.Metadata;

        $r1 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public boolean has(int)
    {
        android.media.Metadata r0;
        int i0;
        boolean $z0, $z1;
        java.util.HashMap $r1;
        java.lang.Integer $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.media.Metadata: boolean checkMetadataId(int)>(i0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r1 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z1 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        return $z1;
    }

    public java.lang.String getString(int)
    {
        android.media.Metadata r0;
        int i0;
        android.os.Parcel $r1;
        java.lang.String $r2;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 1);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $r2 = virtualinvoke $r1.<android.os.Parcel: java.lang.String readString()>();

        return $r2;
    }

    public int getInt(int)
    {
        android.media.Metadata r0;
        int i0, $i1;
        android.os.Parcel $r1;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 2);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        return $i1;
    }

    public boolean getBoolean(int)
    {
        android.media.Metadata r0;
        int i0, $i1;
        android.os.Parcel $r1;
        boolean $z0;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 3);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $i1 = virtualinvoke $r1.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getLong(int)
    {
        android.media.Metadata r0;
        int i0;
        android.os.Parcel $r1;
        long $l1;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 4);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $l1 = virtualinvoke $r1.<android.os.Parcel: long readLong()>();

        return $l1;
    }

    public double getDouble(int)
    {
        android.media.Metadata r0;
        int i0;
        android.os.Parcel $r1;
        double $d0;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 5);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $d0 = virtualinvoke $r1.<android.os.Parcel: double readDouble()>();

        return $d0;
    }

    public byte[] getByteArray(int)
    {
        android.media.Metadata r0;
        int i0;
        android.os.Parcel $r1;
        byte[] $r2;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 7);

        $r1 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        $r2 = virtualinvoke $r1.<android.os.Parcel: byte[] createByteArray()>();

        return $r2;
    }

    public java.util.Date getDate(int)
    {
        android.media.Metadata r0;
        int i0, $i2;
        long l1;
        java.lang.String r1;
        java.util.TimeZone r2;
        java.util.Calendar r3;
        android.os.Parcel $r4, $r5;
        java.util.Date $r6, $r7;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.Metadata: void checkType(int,int)>(i0, 6);

        $r4 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        l1 = virtualinvoke $r4.<android.os.Parcel: long readLong()>();

        $r5 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        r1 = virtualinvoke $r5.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>(long)>(l1);

        return $r7;

     label1:
        r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r1);

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2);

        virtualinvoke r3.<java.util.Calendar: void setTimeInMillis(long)>(l1);

        $r6 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>();

        return $r6;
    }

    public static int lastSytemId()
    {
        return 31;
    }

    public static int firstCustomId()
    {
        return 8192;
    }

    public static int lastType()
    {
        return 7;
    }

    private boolean checkMetadataId(int)
    {
        android.media.Metadata r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        if 31 >= i0 goto label2;

        if i0 >= 8192 goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid metadata ID ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("media.Metadata", $r4);

        return 0;

     label2:
        return 1;
    }

    private void checkType(int, int)
    {
        android.media.Metadata r0;
        int i0, i1, i2, i3;
        java.util.HashMap $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;
        android.os.Parcel $r5, $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: android.media.Metadata;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.media.Metadata: java.util.HashMap mKeyToPosMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void setDataPosition(int)>(i2);

        $r6 = r0.<android.media.Metadata: android.os.Parcel mParcel>;

        i3 = virtualinvoke $r6.<android.os.Parcel: int readInt()>();

        if i3 == i1 goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong type ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        return;
    }

    static void <clinit>()
    {
        java.util.Set $r0, $r2;
        java.lang.Integer $r1;

        <android.media.Metadata: int kMetaMarker> = 1296389185;

        <android.media.Metadata: int kRecordHeaderSize> = 12;

        <android.media.Metadata: int kMetaHeaderSize> = 8;

        <android.media.Metadata: int kInt32Size> = 4;

        <android.media.Metadata: java.lang.String TAG> = "media.Metadata";

        <android.media.Metadata: int LAST_TYPE> = 7;

        <android.media.Metadata: int BYTE_ARRAY_VAL> = 7;

        <android.media.Metadata: int DATE_VAL> = 6;

        <android.media.Metadata: int DOUBLE_VAL> = 5;

        <android.media.Metadata: int LONG_VAL> = 4;

        <android.media.Metadata: int BOOLEAN_VAL> = 3;

        <android.media.Metadata: int INTEGER_VAL> = 2;

        <android.media.Metadata: int STRING_VAL> = 1;

        <android.media.Metadata: int FIRST_CUSTOM> = 8192;

        <android.media.Metadata: int LAST_SYSTEM> = 31;

        <android.media.Metadata: int DRM_CRIPPLED> = 31;

        <android.media.Metadata: int NUM_TRACKS> = 30;

        <android.media.Metadata: int VIDEO_WIDTH> = 29;

        <android.media.Metadata: int VIDEO_HEIGHT> = 28;

        <android.media.Metadata: int VIDEO_CODEC> = 27;

        <android.media.Metadata: int AUDIO_CODEC> = 26;

        <android.media.Metadata: int MIME_TYPE> = 25;

        <android.media.Metadata: int VIDEO_FRAME_RATE> = 24;

        <android.media.Metadata: int AUDIO_SAMPLE_RATE> = 23;

        <android.media.Metadata: int VIDEO_BIT_RATE> = 22;

        <android.media.Metadata: int AUDIO_BIT_RATE> = 21;

        <android.media.Metadata: int BIT_RATE> = 20;

        <android.media.Metadata: int VIDEO_FRAME> = 19;

        <android.media.Metadata: int ALBUM_ART> = 18;

        <android.media.Metadata: int RATING> = 17;

        <android.media.Metadata: int CD_TRACK_MAX> = 16;

        <android.media.Metadata: int CD_TRACK_NUM> = 15;

        <android.media.Metadata: int DURATION> = 14;

        <android.media.Metadata: int DATE> = 13;

        <android.media.Metadata: int GENRE> = 12;

        <android.media.Metadata: int COMPOSER> = 11;

        <android.media.Metadata: int AUTHOR> = 10;

        <android.media.Metadata: int ARTIST> = 9;

        <android.media.Metadata: int ALBUM> = 8;

        <android.media.Metadata: int COPYRIGHT> = 7;

        <android.media.Metadata: int COMMENT> = 6;

        <android.media.Metadata: int TITLE> = 5;

        <android.media.Metadata: int SEEK_AVAILABLE> = 4;

        <android.media.Metadata: int SEEK_FORWARD_AVAILABLE> = 3;

        <android.media.Metadata: int SEEK_BACKWARD_AVAILABLE> = 2;

        <android.media.Metadata: int PAUSE_AVAILABLE> = 1;

        <android.media.Metadata: int ANY> = 0;

        $r0 = <java.util.Collections: java.util.Set EMPTY_SET>;

        <android.media.Metadata: java.util.Set MATCH_NONE> = $r0;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        <android.media.Metadata: java.util.Set MATCH_ALL> = $r2;

        return;
    }
}
