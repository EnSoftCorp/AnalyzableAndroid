public class com.android.internal.net.NetworkStatsFactory extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean USE_NATIVE_PARSING;
    private static final boolean SANITY_CHECK_NATIVE;
    private final java.io.File mStatsXtIfaceAll;
    private final java.io.File mStatsXtIfaceFmt;
    private final java.io.File mStatsXtUid;
    private static final android.util.ArrayMap sStackedIfaces;

    public static void noteStackedIface(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.util.ArrayMap r2, $r4, $r5, $r7;
        java.lang.Throwable r3, $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        if r1 == null goto label2;

        $r7 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        goto label3;

     label2:
        $r5 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r0);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void <init>()
    {
        com.android.internal.net.NetworkStatsFactory r0;
        java.io.File $r1;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/proc/");

        specialinvoke r0.<com.android.internal.net.NetworkStatsFactory: void <init>(java.io.File)>($r1);

        return;
    }

    public void <init>(java.io.File)
    {
        com.android.internal.net.NetworkStatsFactory r0;
        java.io.File r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "net/xt_qtaguid/iface_stat_all");

        r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtIfaceAll> = $r2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "net/xt_qtaguid/iface_stat_fmt");

        r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtIfaceFmt> = $r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "net/xt_qtaguid/stats");

        r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtUid> = $r4;

        return;
    }

    public android.net.NetworkStats readNetworkStatsSummaryDev() throws java.io.IOException
    {
        com.android.internal.net.NetworkStatsFactory r0;
        android.os.StrictMode$ThreadPolicy r1;
        android.net.NetworkStats r2, $r6;
        android.net.NetworkStats$Entry r3, $r7;
        com.android.internal.util.ProcFileReader r4, $r8;
        boolean z0, $z1, $z2;
        java.lang.Throwable r5, $r17;
        long $l0, $l1, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17;
        java.io.FileInputStream $r9;
        java.io.File $r10;
        java.lang.String $r11;
        int $i2;
        java.lang.NullPointerException $r13, r18;
        java.lang.NumberFormatException $r14, r19;
        java.net.ProtocolException $r15, $r16;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r6 = new android.net.NetworkStats;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r6.<android.net.NetworkStats: void <init>(long,int)>($l0, 6);

        r2 = $r6;

        $r7 = new android.net.NetworkStats$Entry;

        specialinvoke $r7.<android.net.NetworkStats$Entry: void <init>()>();

        r3 = $r7;

        r4 = null;

     label01:
        $r8 = new com.android.internal.util.ProcFileReader;

        $r9 = new java.io.FileInputStream;

        $r10 = r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtIfaceAll>;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r10);

        specialinvoke $r8.<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream)>($r9);

        r4 = $r8;

     label02:
        $z1 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: boolean hasMoreData()>();

        if $z1 == 0 goto label06;

        $r11 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: java.lang.String nextString()>();

        r3.<android.net.NetworkStats$Entry: java.lang.String iface> = $r11;

        r3.<android.net.NetworkStats$Entry: int uid> = -1;

        r3.<android.net.NetworkStats$Entry: int set> = -1;

        r3.<android.net.NetworkStats$Entry: int tag> = 0;

        $i2 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: int nextInt()>();

        if $i2 == 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        $l1 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long rxBytes> = $l1;

        $l4 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long rxPackets> = $l4;

        $l3 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long txBytes> = $l3;

        $l5 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long txPackets> = $l5;

        if z0 == 0 goto label05;

        $l7 = r3.<android.net.NetworkStats$Entry: long rxBytes>;

        $l6 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        $l9 = $l7 + $l6;

        r3.<android.net.NetworkStats$Entry: long rxBytes> = $l9;

        $l8 = r3.<android.net.NetworkStats$Entry: long rxPackets>;

        $l11 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        $l10 = $l8 + $l11;

        r3.<android.net.NetworkStats$Entry: long rxPackets> = $l10;

        $l13 = r3.<android.net.NetworkStats$Entry: long txBytes>;

        $l12 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        $l15 = $l13 + $l12;

        r3.<android.net.NetworkStats$Entry: long txBytes> = $l15;

        $l14 = r3.<android.net.NetworkStats$Entry: long txPackets>;

        $l16 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        $l17 = $l14 + $l16;

        r3.<android.net.NetworkStats$Entry: long txPackets> = $l17;

     label05:
        virtualinvoke r2.<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats$Entry)>(r3);

        virtualinvoke r4.<com.android.internal.util.ProcFileReader: void finishLine()>();

        goto label02;

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        goto label11;

     label07:
        $r13 := @caughtexception;

        r18 = $r13;

        $r16 = new java.net.ProtocolException;

        specialinvoke $r16.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing stats", r18);

        throw $r16;

     label08:
        $r14 := @caughtexception;

        r19 = $r14;

        $r15 = new java.net.ProtocolException;

        specialinvoke $r15.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing stats", r19);

        throw $r15;

     label09:
        $r17 := @caughtexception;

        r5 = $r17;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw r5;

     label11:
        return r2;

        catch java.lang.NullPointerException from label01 to label06 with label07;
        catch java.lang.NumberFormatException from label01 to label06 with label08;
        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
    }

    public android.net.NetworkStats readNetworkStatsSummaryXt() throws java.io.IOException
    {
        com.android.internal.net.NetworkStatsFactory r0;
        android.os.StrictMode$ThreadPolicy r1;
        android.net.NetworkStats r2, $r8;
        android.net.NetworkStats$Entry r3, $r9;
        com.android.internal.util.ProcFileReader r4, $r10;
        java.lang.NullPointerException r5, $r19;
        java.lang.Throwable r6, $r14;
        java.io.File $r7, $r12;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3, $l4;
        java.io.FileInputStream $r11;
        java.lang.String $r13;
        java.net.ProtocolException $r16, $r18;
        java.lang.NumberFormatException $r17, r20;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r7 = r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtIfaceFmt>;

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r8 = new android.net.NetworkStats;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r8.<android.net.NetworkStats: void <init>(long,int)>($l0, 6);

        r2 = $r8;

        $r9 = new android.net.NetworkStats$Entry;

        specialinvoke $r9.<android.net.NetworkStats$Entry: void <init>()>();

        r3 = $r9;

        r4 = null;

     label2:
        $r10 = new com.android.internal.util.ProcFileReader;

        $r11 = new java.io.FileInputStream;

        $r12 = r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtIfaceFmt>;

        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.io.File)>($r12);

        specialinvoke $r10.<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream)>($r11);

        r4 = $r10;

        virtualinvoke r4.<com.android.internal.util.ProcFileReader: void finishLine()>();

     label3:
        $z1 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: boolean hasMoreData()>();

        if $z1 == 0 goto label4;

        $r13 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: java.lang.String nextString()>();

        r3.<android.net.NetworkStats$Entry: java.lang.String iface> = $r13;

        r3.<android.net.NetworkStats$Entry: int uid> = -1;

        r3.<android.net.NetworkStats$Entry: int set> = -1;

        r3.<android.net.NetworkStats$Entry: int tag> = 0;

        $l2 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long rxBytes> = $l2;

        $l1 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long rxPackets> = $l1;

        $l4 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long txBytes> = $l4;

        $l3 = virtualinvoke r4.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r3.<android.net.NetworkStats$Entry: long txPackets> = $l3;

        virtualinvoke r2.<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats$Entry)>(r3);

        virtualinvoke r4.<com.android.internal.util.ProcFileReader: void finishLine()>();

        goto label3;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        goto label9;

     label5:
        $r19 := @caughtexception;

        r5 = $r19;

        $r18 = new java.net.ProtocolException;

        specialinvoke $r18.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing stats", r5);

        throw $r18;

     label6:
        $r17 := @caughtexception;

        r20 = $r17;

        $r16 = new java.net.ProtocolException;

        specialinvoke $r16.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("problem parsing stats", r20);

        throw $r16;

     label7:
        $r14 := @caughtexception;

        r6 = $r14;

     label8:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r1);

        throw r6;

     label9:
        return r2;

        catch java.lang.NullPointerException from label2 to label4 with label5;
        catch java.lang.NumberFormatException from label2 to label4 with label6;
        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    public android.net.NetworkStats readNetworkStatsDetail() throws java.io.IOException
    {
        com.android.internal.net.NetworkStatsFactory r0;
        android.net.NetworkStats $r1;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        $r1 = virtualinvoke r0.<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail(int,java.lang.String[],int,android.net.NetworkStats)>(-1, null, -1, null);

        return $r1;
    }

    public android.net.NetworkStats readNetworkStatsDetail(int, java.lang.String[], int, android.net.NetworkStats) throws java.io.IOException
    {
        com.android.internal.net.NetworkStatsFactory r0;
        int i0, i1, i2, i3, i4, $i5, $i8, i15;
        java.lang.String[] r1;
        android.net.NetworkStats r2, r3;
        android.util.ArrayMap r4, $r10, $r11, $r16, $r18;
        java.lang.String r5, r6, $r12, $r13, $r21;
        android.net.NetworkStats$Entry r7, r8, $r20, r23;
        java.lang.Throwable r9, $r22;
        long $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14;
        boolean $z0, $z1;
        java.lang.Object $r15, $r17;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        r2 := @parameter3: android.net.NetworkStats;

        r3 = specialinvoke r0.<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetailInternal(int,java.lang.String[],int,android.net.NetworkStats)>(i0, r1, i1, r2);

        $r11 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        r4 = $r11;

        entermonitor $r11;

     label01:
        $r10 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        i2 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label06;

        $r16 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r5 = (java.lang.String) $r15;

        $r18 = <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces>;

        $r17 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r6 = (java.lang.String) $r17;

        $r20 = new android.net.NetworkStats$Entry;

        specialinvoke $r20.<android.net.NetworkStats$Entry: void <init>(java.lang.String,int,int,int,long,long,long,long,long)>(r6, 0, 0, 0, 0L, 0L, 0L, 0L, 0L);

        r7 = $r20;

        r8 = null;

        i4 = 0;

     label03:
        $i8 = virtualinvoke r3.<android.net.NetworkStats: int size()>();

        if i4 >= $i8 goto label05;

        r8 = virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i4, r8);

        $r21 = r8.<android.net.NetworkStats$Entry: java.lang.String iface>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r21, r5);

        if $z1 == 0 goto label04;

        $l10 = r7.<android.net.NetworkStats$Entry: long txBytes>;

        $l9 = r8.<android.net.NetworkStats$Entry: long txBytes>;

        $l13 = $l10 - $l9;

        r7.<android.net.NetworkStats$Entry: long txBytes> = $l13;

        $l11 = r7.<android.net.NetworkStats$Entry: long txPackets>;

        $l14 = r8.<android.net.NetworkStats$Entry: long txPackets>;

        $l12 = $l11 - $l14;

        r7.<android.net.NetworkStats$Entry: long txPackets> = $l12;

     label04:
        i4 = i4 + 1;

        goto label03;

     label05:
        virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>(r7);

        i3 = i3 + 1;

        goto label02;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r22 := @caughtexception;

        r9 = $r22;

        exitmonitor r4;

     label09:
        throw r9;

     label10:
        r23 = null;

        i15 = 0;

     label11:
        $i5 = virtualinvoke r3.<android.net.NetworkStats: int size()>();

        if i15 >= $i5 goto label13;

        r23 = virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i15, r23);

        $r13 = r23.<android.net.NetworkStats$Entry: java.lang.String iface>;

        if $r13 == null goto label12;

        $r12 = r23.<android.net.NetworkStats$Entry: java.lang.String iface>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("clat");

        if $z0 == 0 goto label12;

        $l6 = r23.<android.net.NetworkStats$Entry: long rxPackets>;

        $l7 = $l6 * 20L;

        r23.<android.net.NetworkStats$Entry: long rxBytes> = $l7;

        r23.<android.net.NetworkStats$Entry: long rxPackets> = 0L;

        r23.<android.net.NetworkStats$Entry: long txBytes> = 0L;

        r23.<android.net.NetworkStats$Entry: long txPackets> = 0L;

        virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>(r23);

     label12:
        i15 = i15 + 1;

        goto label11;

     label13:
        return r3;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private android.net.NetworkStats readNetworkStatsDetailInternal(int, java.lang.String[], int, android.net.NetworkStats) throws java.io.IOException
    {
        com.android.internal.net.NetworkStatsFactory r0;
        int i0, i1, $i3;
        java.lang.String[] r1;
        android.net.NetworkStats r2, r3, $r4;
        long $l2, $l4;
        java.io.File $r5;
        java.lang.String $r6;
        java.io.IOException $r7;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        r2 := @parameter3: android.net.NetworkStats;

        if r2 == null goto label1;

        r3 = r2;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r3.<android.net.NetworkStats: void setElapsedRealtime(long)>($l4);

        goto label2;

     label1:
        $r4 = new android.net.NetworkStats;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r4.<android.net.NetworkStats: void <init>(long,int)>($l2, -1);

        r3 = $r4;

     label2:
        $r5 = r0.<com.android.internal.net.NetworkStatsFactory: java.io.File mStatsXtUid>;

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $i3 = staticinvoke <com.android.internal.net.NetworkStatsFactory: int nativeReadNetworkStatsDetail(android.net.NetworkStats,java.lang.String,int,java.lang.String[],int)>(r3, $r6, i0, r1, i1);

        if $i3 == 0 goto label3;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Failed to parse network stats");

        throw $r7;

     label3:
        return r3;
    }

    public static android.net.NetworkStats javaReadNetworkStatsDetail(java.io.File, int, java.lang.String[], int) throws java.io.IOException
    {
        java.io.File r0;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i13, $i14;
        java.lang.String[] r1;
        android.os.StrictMode$ThreadPolicy r2;
        android.net.NetworkStats r3, $r8;
        android.net.NetworkStats$Entry r4, $r9;
        com.android.internal.util.ProcFileReader r5, $r11;
        java.lang.NullPointerException r6, $r21;
        java.lang.Throwable r7, $r33;
        long $l4, $l9, $l10, $l11, $l12;
        java.io.FileInputStream $r10;
        boolean $z0, $z1;
        java.lang.String $r12, $r13, $r16, $r24, $r26, $r34;
        java.net.ProtocolException $r15, $r22, $r31;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r23, $r25, $r27, $r28, $r29, $r30, $r35;
        java.lang.NumberFormatException $r32, r36;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

        $r8 = new android.net.NetworkStats;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r8.<android.net.NetworkStats: void <init>(long,int)>($l4, 24);

        r3 = $r8;

        $r9 = new android.net.NetworkStats$Entry;

        specialinvoke $r9.<android.net.NetworkStats$Entry: void <init>()>();

        r4 = $r9;

        i2 = 1;

        i3 = 1;

        r5 = null;

     label01:
        $r11 = new com.android.internal.util.ProcFileReader;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        specialinvoke $r11.<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream)>($r10);

        r5 = $r11;

        virtualinvoke r5.<com.android.internal.util.ProcFileReader: void finishLine()>();

     label02:
        $z0 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: boolean hasMoreData()>();

        if $z0 == 0 goto label08;

        i2 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: int nextInt()>();

        $i5 = i3 + 1;

        if i2 == $i5 goto label03;

        $r15 = new java.net.ProtocolException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inconsistent idx=");

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after lastIdx=");

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.net.ProtocolException: void <init>(java.lang.String)>($r24);

        throw $r15;

     label03:
        i3 = i2;

        $r12 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: java.lang.String nextString()>();

        r4.<android.net.NetworkStats$Entry: java.lang.String iface> = $r12;

        $r13 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: java.lang.String nextString()>();

        $i6 = staticinvoke <com.android.server.NetworkManagementSocketTagger: int kernelToTag(java.lang.String)>($r13);

        r4.<android.net.NetworkStats$Entry: int tag> = $i6;

        $i8 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: int nextInt()>();

        r4.<android.net.NetworkStats$Entry: int uid> = $i8;

        $i7 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: int nextInt()>();

        r4.<android.net.NetworkStats$Entry: int set> = $i7;

        $l10 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r4.<android.net.NetworkStats$Entry: long rxBytes> = $l10;

        $l9 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r4.<android.net.NetworkStats$Entry: long rxPackets> = $l9;

        $l12 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r4.<android.net.NetworkStats$Entry: long txBytes> = $l12;

        $l11 = virtualinvoke r5.<com.android.internal.util.ProcFileReader: long nextLong()>();

        r4.<android.net.NetworkStats$Entry: long txPackets> = $l11;

        if r1 == null goto label04;

        $r16 = r4.<android.net.NetworkStats$Entry: java.lang.String iface>;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(r1, $r16);

        if $z1 == 0 goto label07;

     label04:
        if i0 == -1 goto label05;

        $i14 = r4.<android.net.NetworkStats$Entry: int uid>;

        if i0 != $i14 goto label07;

     label05:
        if i1 == -1 goto label06;

        $i13 = r4.<android.net.NetworkStats$Entry: int tag>;

        if i1 != $i13 goto label07;

     label06:
        virtualinvoke r3.<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats$Entry)>(r4);

     label07:
        virtualinvoke r5.<com.android.internal.util.ProcFileReader: void finishLine()>();

        goto label02;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        goto label13;

     label09:
        $r21 := @caughtexception;

        r6 = $r21;

        $r22 = new java.net.ProtocolException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing idx ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r26, r6);

        throw $r22;

     label10:
        $r32 := @caughtexception;

        r36 = $r32;

        $r31 = new java.net.ProtocolException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem parsing idx ");

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.net.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r34, r36);

        throw $r31;

     label11:
        $r33 := @caughtexception;

        r7 = $r33;

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r2);

        throw r7;

     label13:
        return r3;

        catch java.lang.NullPointerException from label01 to label08 with label09;
        catch java.lang.NumberFormatException from label01 to label08 with label10;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void assertEquals(android.net.NetworkStats, android.net.NetworkStats)
    {
        com.android.internal.net.NetworkStatsFactory r0;
        android.net.NetworkStats r1, r2;
        android.net.NetworkStats$Entry r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.AssertionError $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r20;
        java.lang.String $r14, $r19;

        r0 := @this: com.android.internal.net.NetworkStatsFactory;

        r1 := @parameter0: android.net.NetworkStats;

        r2 := @parameter1: android.net.NetworkStats;

        $i1 = virtualinvoke r1.<android.net.NetworkStats: int size()>();

        $i2 = virtualinvoke r2.<android.net.NetworkStats: int size()>();

        if $i1 == $i2 goto label1;

        $r13 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected size ");

        $i4 = virtualinvoke r1.<android.net.NetworkStats: int size()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual size ");

        $i5 = virtualinvoke r2.<android.net.NetworkStats: int size()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        throw $r13;

     label1:
        r3 = null;

        r4 = null;

        i0 = 0;

     label2:
        $i3 = virtualinvoke r1.<android.net.NetworkStats: int size()>();

        if i0 >= $i3 goto label4;

        r3 = virtualinvoke r1.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i0, r3);

        r4 = virtualinvoke r2.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i0, r4);

        $z0 = virtualinvoke r3.<android.net.NetworkStats$Entry: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected row ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual row ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r5;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }

    public static native int nativeReadNetworkStatsDetail(android.net.NetworkStats, java.lang.String, int, java.lang.String[], int);

    static void <clinit>()
    {
        android.util.ArrayMap $r0;

        <com.android.internal.net.NetworkStatsFactory: boolean SANITY_CHECK_NATIVE> = 0;

        <com.android.internal.net.NetworkStatsFactory: boolean USE_NATIVE_PARSING> = 1;

        <com.android.internal.net.NetworkStatsFactory: java.lang.String TAG> = "NetworkStatsFactory";

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>()>();

        <com.android.internal.net.NetworkStatsFactory: android.util.ArrayMap sStackedIfaces> = $r0;

        return;
    }
}
