public class android.text.method.PasswordTransformationMethod extends java.lang.Object implements android.text.method.TransformationMethod, android.text.TextWatcher
{
    private static android.text.method.PasswordTransformationMethod sInstance;
    private static char DOT;

    public void <init>()
    {
        android.text.method.PasswordTransformationMethod r0;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.CharSequence getTransformation(java.lang.CharSequence, android.view.View)
    {
        android.text.method.PasswordTransformationMethod r0;
        java.lang.CharSequence r1;
        android.view.View r2;
        android.text.Spannable r3;
        android.text.method.PasswordTransformationMethod$ViewReference[] r4;
        int i0, $i1, $i2;
        boolean $z0;
        android.text.method.PasswordTransformationMethod$PasswordCharSequence $r5;
        java.lang.Object[] $r6;
        android.text.method.PasswordTransformationMethod$ViewReference $r7, $r8;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.view.View;

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label3;

        r3 = (android.text.Spannable) r1;

        $i1 = interfaceinvoke r3.<android.text.Spannable: int length()>();

        $r6 = interfaceinvoke r3.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/method/PasswordTransformationMethod$ViewReference");

        r4 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r6;

        i0 = 0;

     label1:
        $i2 = lengthof r4;

        if i0 >= $i2 goto label2;

        $r8 = r4[i0];

        interfaceinvoke r3.<android.text.Spannable: void removeSpan(java.lang.Object)>($r8);

        i0 = i0 + 1;

        goto label1;

     label2:
        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>(r3);

        $r7 = new android.text.method.PasswordTransformationMethod$ViewReference;

        specialinvoke $r7.<android.text.method.PasswordTransformationMethod$ViewReference: void <init>(android.view.View)>(r2);

        interfaceinvoke r3.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, 0, 0, 34);

     label3:
        $r5 = new android.text.method.PasswordTransformationMethod$PasswordCharSequence;

        specialinvoke $r5.<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void <init>(java.lang.CharSequence)>(r1);

        return $r5;
    }

    public static android.text.method.PasswordTransformationMethod getInstance()
    {
        android.text.method.PasswordTransformationMethod $r0, $r1, $r2, $r3;

        $r0 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        if $r0 == null goto label1;

        $r3 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        return $r3;

     label1:
        $r1 = new android.text.method.PasswordTransformationMethod;

        specialinvoke $r1.<android.text.method.PasswordTransformationMethod: void <init>()>();

        <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance> = $r1;

        $r2 = <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod sInstance>;

        return $r2;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.text.method.PasswordTransformationMethod r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        android.text.Spannable r2;
        android.text.method.PasswordTransformationMethod$ViewReference[] r3;
        android.view.View r4;
        boolean $z0;
        java.lang.Object[] $r5;
        android.text.method.TextKeyListener $r6;
        android.content.Context $r7;
        android.text.method.PasswordTransformationMethod$Visible $r8;
        android.text.method.PasswordTransformationMethod$ViewReference $r9;
        java.lang.Object $r10;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label5;

        r2 = (android.text.Spannable) r1;

        $i4 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i4, class "android/text/method/PasswordTransformationMethod$ViewReference");

        r3 = (android.text.method.PasswordTransformationMethod$ViewReference[]) $r5;

        $i5 = lengthof r3;

        if $i5 != 0 goto label1;

        return;

     label1:
        r4 = null;

        i3 = 0;

     label2:
        if r4 != null goto label3;

        $i8 = lengthof r3;

        if i3 >= $i8 goto label3;

        $r9 = r3[i3];

        $r10 = virtualinvoke $r9.<android.text.method.PasswordTransformationMethod$ViewReference: java.lang.Object get()>();

        r4 = (android.view.View) $r10;

        i3 = i3 + 1;

        goto label2;

     label3:
        if r4 != null goto label4;

        return;

     label4:
        $r6 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r7 = virtualinvoke r4.<android.view.View: android.content.Context getContext()>();

        i9 = virtualinvoke $r6.<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>($r7);

        $i6 = i9 & 8;

        if $i6 == 0 goto label5;

        if i2 <= 0 goto label5;

        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>(r2);

        if i2 != 1 goto label5;

        $r8 = new android.text.method.PasswordTransformationMethod$Visible;

        specialinvoke $r8.<android.text.method.PasswordTransformationMethod$Visible: void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod)>(r2, r0);

        $i7 = i0 + i2;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r8, i0, $i7, 33);

     label5:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.text.method.PasswordTransformationMethod r0;
        android.text.Editable r1;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    public void onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)
    {
        android.text.method.PasswordTransformationMethod r0;
        android.view.View r1;
        java.lang.CharSequence r2;
        boolean z0, $z1;
        int i0;
        android.graphics.Rect r3;
        android.text.Spannable r4;

        r0 := @this: android.text.method.PasswordTransformationMethod;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.CharSequence;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: android.graphics.Rect;

        if z0 != 0 goto label1;

        $z1 = r2 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        r4 = (android.text.Spannable) r2;

        staticinvoke <android.text.method.PasswordTransformationMethod: void removeVisibleSpans(android.text.Spannable)>(r4);

     label1:
        return;
    }

    private static void removeVisibleSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        android.text.method.PasswordTransformationMethod$Visible[] r1;
        int i0, $i1, $i2;
        java.lang.Object[] $r2;
        android.text.method.PasswordTransformationMethod$Visible $r3;

        r0 := @parameter0: android.text.Spannable;

        $i1 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        $r2 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/method/PasswordTransformationMethod$Visible");

        r1 = (android.text.method.PasswordTransformationMethod$Visible[]) $r2;

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        $r3 = r1[i0];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static char access$100()
    {
        char $c0;

        $c0 = <android.text.method.PasswordTransformationMethod: char DOT>;

        return $c0;
    }

    static void <clinit>()
    {
        <android.text.method.PasswordTransformationMethod: char DOT> = 8226;

        return;
    }
}
