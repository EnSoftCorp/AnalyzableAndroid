public class com.google.android.gles_jni.GLImpl extends java.lang.Object implements javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.opengles.GL10Ext, javax.microedition.khronos.opengles.GL11, javax.microedition.khronos.opengles.GL11Ext, javax.microedition.khronos.opengles.GL11ExtensionPack
{
    java.nio.Buffer _colorPointer;
    java.nio.Buffer _normalPointer;
    java.nio.Buffer _texCoordPointer;
    java.nio.Buffer _vertexPointer;
    java.nio.Buffer _pointSizePointerOES;
    java.nio.Buffer _matrixIndexPointerOES;
    java.nio.Buffer _weightPointerOES;
    private boolean haveCheckedExtensions;
    private boolean have_OES_blend_equation_separate;
    private boolean have_OES_blend_subtract;
    private boolean have_OES_framebuffer_object;
    private boolean have_OES_texture_cube_map;

    private static native void _nativeClassInit();

    public void <init>()
    {
        com.google.android.gles_jni.GLImpl r0;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _colorPointer> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _normalPointer> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _texCoordPointer> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _vertexPointer> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _pointSizePointerOES> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _matrixIndexPointerOES> = null;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _weightPointerOES> = null;

        return;
    }

    public void glGetPointerv(int, java.nio.Buffer[])
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0;
        java.nio.Buffer[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.Buffer[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("glGetPointerv");

        throw $r2;
    }

    private static boolean allowIndirectBuffers(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean z0;
        int i0, $i1;
        android.content.pm.IPackageManager r1;
        android.content.pm.ApplicationInfo r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.os.RemoteException $r6;

        r0 := @parameter0: java.lang.String;

        z0 = 0;

        i0 = 0;

        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label1:
        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r2 = interfaceinvoke r1.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r0, 0, $i1);

        if r2 == null goto label2;

        i0 = r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Application %s (SDK target %d) called a GL11 Pointer method with an indirect Buffer.", $r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OpenGLES", $r5);

        if i0 > 3 goto label5;

        z0 = 1;

     label5:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public native void glActiveTexture(int);

    public native void glAlphaFunc(int, float);

    public native void glAlphaFuncx(int, int);

    public native void glBindTexture(int, int);

    public native void glBlendFunc(int, int);

    public native void glClear(int);

    public native void glClearColor(float, float, float, float);

    public native void glClearColorx(int, int, int, int);

    public native void glClearDepthf(float);

    public native void glClearDepthx(int);

    public native void glClearStencil(int);

    public native void glClientActiveTexture(int);

    public native void glColor4f(float, float, float, float);

    public native void glColor4x(int, int, int, int);

    public native void glColorMask(boolean, boolean, boolean, boolean);

    private native void glColorPointerBounds(int, int, int, java.nio.Buffer, int);

    public void glColorPointer(int, int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, i2, $i3;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        $i3 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glColorPointerBounds(int,int,int,java.nio.Buffer,int)>(i0, i1, i2, r1, $i3);

        if i0 != 4 goto label2;

        if i1 == 5126 goto label1;

        if i1 == 5121 goto label1;

        if i1 != 5132 goto label2;

     label1:
        if i2 < 0 goto label2;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _colorPointer> = r1;

     label2:
        return;
    }

    public native void glCompressedTexImage2D(int, int, int, int, int, int, int, java.nio.Buffer);

    public native void glCompressedTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);

    public native void glCopyTexImage2D(int, int, int, int, int, int, int, int);

    public native void glCopyTexSubImage2D(int, int, int, int, int, int, int, int);

    public native void glCullFace(int);

    public native void glDeleteTextures(int, int[], int);

    public native void glDeleteTextures(int, java.nio.IntBuffer);

    public native void glDepthFunc(int);

    public native void glDepthMask(boolean);

    public native void glDepthRangef(float, float);

    public native void glDepthRangex(int, int);

    public native void glDisable(int);

    public native void glDisableClientState(int);

    public native void glDrawArrays(int, int, int);

    public native void glDrawElements(int, int, int, java.nio.Buffer);

    public native void glEnable(int);

    public native void glEnableClientState(int);

    public native void glFinish();

    public native void glFlush();

    public native void glFogf(int, float);

    public native void glFogfv(int, float[], int);

    public native void glFogfv(int, java.nio.FloatBuffer);

    public native void glFogx(int, int);

    public native void glFogxv(int, int[], int);

    public native void glFogxv(int, java.nio.IntBuffer);

    public native void glFrontFace(int);

    public native void glFrustumf(float, float, float, float, float, float);

    public native void glFrustumx(int, int, int, int, int, int);

    public native void glGenTextures(int, int[], int);

    public native void glGenTextures(int, java.nio.IntBuffer);

    public native int glGetError();

    public native void glGetIntegerv(int, int[], int);

    public native void glGetIntegerv(int, java.nio.IntBuffer);

    public native java.lang.String _glGetString(int);

    public java.lang.String glGetString(int)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.google.android.gles_jni.GLImpl: java.lang.String _glGetString(int)>(i0);

        return r1;
    }

    public native void glHint(int, int);

    public native void glLightModelf(int, float);

    public native void glLightModelfv(int, float[], int);

    public native void glLightModelfv(int, java.nio.FloatBuffer);

    public native void glLightModelx(int, int);

    public native void glLightModelxv(int, int[], int);

    public native void glLightModelxv(int, java.nio.IntBuffer);

    public native void glLightf(int, int, float);

    public native void glLightfv(int, int, float[], int);

    public native void glLightfv(int, int, java.nio.FloatBuffer);

    public native void glLightx(int, int, int);

    public native void glLightxv(int, int, int[], int);

    public native void glLightxv(int, int, java.nio.IntBuffer);

    public native void glLineWidth(float);

    public native void glLineWidthx(int);

    public native void glLoadIdentity();

    public native void glLoadMatrixf(float[], int);

    public native void glLoadMatrixf(java.nio.FloatBuffer);

    public native void glLoadMatrixx(int[], int);

    public native void glLoadMatrixx(java.nio.IntBuffer);

    public native void glLogicOp(int);

    public native void glMaterialf(int, int, float);

    public native void glMaterialfv(int, int, float[], int);

    public native void glMaterialfv(int, int, java.nio.FloatBuffer);

    public native void glMaterialx(int, int, int);

    public native void glMaterialxv(int, int, int[], int);

    public native void glMaterialxv(int, int, java.nio.IntBuffer);

    public native void glMatrixMode(int);

    public native void glMultMatrixf(float[], int);

    public native void glMultMatrixf(java.nio.FloatBuffer);

    public native void glMultMatrixx(int[], int);

    public native void glMultMatrixx(java.nio.IntBuffer);

    public native void glMultiTexCoord4f(int, float, float, float, float);

    public native void glMultiTexCoord4x(int, int, int, int, int);

    public native void glNormal3f(float, float, float);

    public native void glNormal3x(int, int, int);

    private native void glNormalPointerBounds(int, int, java.nio.Buffer, int);

    public void glNormalPointer(int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, $i2;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        $i2 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glNormalPointerBounds(int,int,java.nio.Buffer,int)>(i0, i1, r1, $i2);

        if i0 == 5126 goto label1;

        if i0 == 5120 goto label1;

        if i0 == 5122 goto label1;

        if i0 != 5132 goto label2;

     label1:
        if i1 < 0 goto label2;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _normalPointer> = r1;

     label2:
        return;
    }

    public native void glOrthof(float, float, float, float, float, float);

    public native void glOrthox(int, int, int, int, int, int);

    public native void glPixelStorei(int, int);

    public native void glPointSize(float);

    public native void glPointSizex(int);

    public native void glPolygonOffset(float, float);

    public native void glPolygonOffsetx(int, int);

    public native void glPopMatrix();

    public native void glPushMatrix();

    public native void glReadPixels(int, int, int, int, int, int, java.nio.Buffer);

    public native void glRotatef(float, float, float, float);

    public native void glRotatex(int, int, int, int);

    public native void glSampleCoverage(float, boolean);

    public native void glSampleCoveragex(int, boolean);

    public native void glScalef(float, float, float);

    public native void glScalex(int, int, int);

    public native void glScissor(int, int, int, int);

    public native void glShadeModel(int);

    public native void glStencilFunc(int, int, int);

    public native void glStencilMask(int);

    public native void glStencilOp(int, int, int);

    private native void glTexCoordPointerBounds(int, int, int, java.nio.Buffer, int);

    public void glTexCoordPointer(int, int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, i2, $i3;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        $i3 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glTexCoordPointerBounds(int,int,int,java.nio.Buffer,int)>(i0, i1, i2, r1, $i3);

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label3;

     label1:
        if i1 == 5126 goto label2;

        if i1 == 5120 goto label2;

        if i1 == 5122 goto label2;

        if i1 != 5132 goto label3;

     label2:
        if i2 < 0 goto label3;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _texCoordPointer> = r1;

     label3:
        return;
    }

    public native void glTexEnvf(int, int, float);

    public native void glTexEnvfv(int, int, float[], int);

    public native void glTexEnvfv(int, int, java.nio.FloatBuffer);

    public native void glTexEnvx(int, int, int);

    public native void glTexEnvxv(int, int, int[], int);

    public native void glTexEnvxv(int, int, java.nio.IntBuffer);

    public native void glTexImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);

    public native void glTexParameterf(int, int, float);

    public native void glTexParameterx(int, int, int);

    public native void glTexSubImage2D(int, int, int, int, int, int, int, int, java.nio.Buffer);

    public native void glTranslatef(float, float, float);

    public native void glTranslatex(int, int, int);

    private native void glVertexPointerBounds(int, int, int, java.nio.Buffer, int);

    public void glVertexPointer(int, int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, i2, $i3;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        $i3 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glVertexPointerBounds(int,int,int,java.nio.Buffer,int)>(i0, i1, i2, r1, $i3);

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label3;

     label1:
        if i1 == 5126 goto label2;

        if i1 == 5120 goto label2;

        if i1 == 5122 goto label2;

        if i1 != 5132 goto label3;

     label2:
        if i2 < 0 goto label3;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _vertexPointer> = r1;

     label3:
        return;
    }

    public native void glViewport(int, int, int, int);

    public native int glQueryMatrixxOES(int[], int, int[], int);

    public native int glQueryMatrixxOES(java.nio.IntBuffer, java.nio.IntBuffer);

    public native void glBindBuffer(int, int);

    public native void glBufferData(int, int, java.nio.Buffer, int);

    public native void glBufferSubData(int, int, int, java.nio.Buffer);

    public native void glClipPlanef(int, float[], int);

    public native void glClipPlanef(int, java.nio.FloatBuffer);

    public native void glClipPlanex(int, int[], int);

    public native void glClipPlanex(int, java.nio.IntBuffer);

    public native void glColor4ub(byte, byte, byte, byte);

    public native void glColorPointer(int, int, int, int);

    public native void glDeleteBuffers(int, int[], int);

    public native void glDeleteBuffers(int, java.nio.IntBuffer);

    public native void glDrawElements(int, int, int, int);

    public native void glGenBuffers(int, int[], int);

    public native void glGenBuffers(int, java.nio.IntBuffer);

    public native void glGetBooleanv(int, boolean[], int);

    public native void glGetBooleanv(int, java.nio.IntBuffer);

    public native void glGetBufferParameteriv(int, int, int[], int);

    public native void glGetBufferParameteriv(int, int, java.nio.IntBuffer);

    public native void glGetClipPlanef(int, float[], int);

    public native void glGetClipPlanef(int, java.nio.FloatBuffer);

    public native void glGetClipPlanex(int, int[], int);

    public native void glGetClipPlanex(int, java.nio.IntBuffer);

    public native void glGetFixedv(int, int[], int);

    public native void glGetFixedv(int, java.nio.IntBuffer);

    public native void glGetFloatv(int, float[], int);

    public native void glGetFloatv(int, java.nio.FloatBuffer);

    public native void glGetLightfv(int, int, float[], int);

    public native void glGetLightfv(int, int, java.nio.FloatBuffer);

    public native void glGetLightxv(int, int, int[], int);

    public native void glGetLightxv(int, int, java.nio.IntBuffer);

    public native void glGetMaterialfv(int, int, float[], int);

    public native void glGetMaterialfv(int, int, java.nio.FloatBuffer);

    public native void glGetMaterialxv(int, int, int[], int);

    public native void glGetMaterialxv(int, int, java.nio.IntBuffer);

    public native void glGetTexEnviv(int, int, int[], int);

    public native void glGetTexEnviv(int, int, java.nio.IntBuffer);

    public native void glGetTexEnvxv(int, int, int[], int);

    public native void glGetTexEnvxv(int, int, java.nio.IntBuffer);

    public native void glGetTexParameterfv(int, int, float[], int);

    public native void glGetTexParameterfv(int, int, java.nio.FloatBuffer);

    public native void glGetTexParameteriv(int, int, int[], int);

    public native void glGetTexParameteriv(int, int, java.nio.IntBuffer);

    public native void glGetTexParameterxv(int, int, int[], int);

    public native void glGetTexParameterxv(int, int, java.nio.IntBuffer);

    public native boolean glIsBuffer(int);

    public native boolean glIsEnabled(int);

    public native boolean glIsTexture(int);

    public native void glNormalPointer(int, int, int);

    public native void glPointParameterf(int, float);

    public native void glPointParameterfv(int, float[], int);

    public native void glPointParameterfv(int, java.nio.FloatBuffer);

    public native void glPointParameterx(int, int);

    public native void glPointParameterxv(int, int[], int);

    public native void glPointParameterxv(int, java.nio.IntBuffer);

    private native void glPointSizePointerOESBounds(int, int, java.nio.Buffer, int);

    public void glPointSizePointerOES(int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, $i2;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.nio.Buffer;

        $i2 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glPointSizePointerOESBounds(int,int,java.nio.Buffer,int)>(i0, i1, r1, $i2);

        if i0 == 5126 goto label1;

        if i0 != 5132 goto label2;

     label1:
        if i1 < 0 goto label2;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _pointSizePointerOES> = r1;

     label2:
        return;
    }

    public native void glTexCoordPointer(int, int, int, int);

    public native void glTexEnvi(int, int, int);

    public native void glTexEnviv(int, int, int[], int);

    public native void glTexEnviv(int, int, java.nio.IntBuffer);

    public native void glTexParameterfv(int, int, float[], int);

    public native void glTexParameterfv(int, int, java.nio.FloatBuffer);

    public native void glTexParameteri(int, int, int);

    public native void glTexParameteriv(int, int, int[], int);

    public native void glTexParameteriv(int, int, java.nio.IntBuffer);

    public native void glTexParameterxv(int, int, int[], int);

    public native void glTexParameterxv(int, int, java.nio.IntBuffer);

    public native void glVertexPointer(int, int, int, int);

    public native void glCurrentPaletteMatrixOES(int);

    public native void glDrawTexfOES(float, float, float, float, float);

    public native void glDrawTexfvOES(float[], int);

    public native void glDrawTexfvOES(java.nio.FloatBuffer);

    public native void glDrawTexiOES(int, int, int, int, int);

    public native void glDrawTexivOES(int[], int);

    public native void glDrawTexivOES(java.nio.IntBuffer);

    public native void glDrawTexsOES(short, short, short, short, short);

    public native void glDrawTexsvOES(short[], int);

    public native void glDrawTexsvOES(java.nio.ShortBuffer);

    public native void glDrawTexxOES(int, int, int, int, int);

    public native void glDrawTexxvOES(int[], int);

    public native void glDrawTexxvOES(java.nio.IntBuffer);

    public native void glLoadPaletteFromModelViewMatrixOES();

    private native void glMatrixIndexPointerOESBounds(int, int, int, java.nio.Buffer, int);

    public void glMatrixIndexPointerOES(int, int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, i2, $i3;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        $i3 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOESBounds(int,int,int,java.nio.Buffer,int)>(i0, i1, i2, r1, $i3);

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label3;

     label1:
        if i1 == 5126 goto label2;

        if i1 == 5120 goto label2;

        if i1 == 5122 goto label2;

        if i1 != 5132 goto label3;

     label2:
        if i2 < 0 goto label3;

        r0.<com.google.android.gles_jni.GLImpl: java.nio.Buffer _matrixIndexPointerOES> = r1;

     label3:
        return;
    }

    public native void glMatrixIndexPointerOES(int, int, int, int);

    private native void glWeightPointerOESBounds(int, int, int, java.nio.Buffer, int);

    public void glWeightPointerOES(int, int, int, java.nio.Buffer)
    {
        com.google.android.gles_jni.GLImpl r0;
        int i0, i1, i2, $i3;
        java.nio.Buffer r1;

        r0 := @this: com.google.android.gles_jni.GLImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.nio.Buffer;

        $i3 = virtualinvoke r1.<java.nio.Buffer: int remaining()>();

        specialinvoke r0.<com.google.android.gles_jni.GLImpl: void glWeightPointerOESBounds(int,int,int,java.nio.Buffer,int)>(i0, i1, i2, r1, $i3);

        return;
    }

    public native void glWeightPointerOES(int, int, int, int);

    public native void glBindFramebufferOES(int, int);

    public native void glBindRenderbufferOES(int, int);

    public native void glBlendEquation(int);

    public native void glBlendEquationSeparate(int, int);

    public native void glBlendFuncSeparate(int, int, int, int);

    public native int glCheckFramebufferStatusOES(int);

    public native void glDeleteFramebuffersOES(int, int[], int);

    public native void glDeleteFramebuffersOES(int, java.nio.IntBuffer);

    public native void glDeleteRenderbuffersOES(int, int[], int);

    public native void glDeleteRenderbuffersOES(int, java.nio.IntBuffer);

    public native void glFramebufferRenderbufferOES(int, int, int, int);

    public native void glFramebufferTexture2DOES(int, int, int, int, int);

    public native void glGenerateMipmapOES(int);

    public native void glGenFramebuffersOES(int, int[], int);

    public native void glGenFramebuffersOES(int, java.nio.IntBuffer);

    public native void glGenRenderbuffersOES(int, int[], int);

    public native void glGenRenderbuffersOES(int, java.nio.IntBuffer);

    public native void glGetFramebufferAttachmentParameterivOES(int, int, int, int[], int);

    public native void glGetFramebufferAttachmentParameterivOES(int, int, int, java.nio.IntBuffer);

    public native void glGetRenderbufferParameterivOES(int, int, int[], int);

    public native void glGetRenderbufferParameterivOES(int, int, java.nio.IntBuffer);

    public native void glGetTexGenfv(int, int, float[], int);

    public native void glGetTexGenfv(int, int, java.nio.FloatBuffer);

    public native void glGetTexGeniv(int, int, int[], int);

    public native void glGetTexGeniv(int, int, java.nio.IntBuffer);

    public native void glGetTexGenxv(int, int, int[], int);

    public native void glGetTexGenxv(int, int, java.nio.IntBuffer);

    public native boolean glIsFramebufferOES(int);

    public native boolean glIsRenderbufferOES(int);

    public native void glRenderbufferStorageOES(int, int, int, int);

    public native void glTexGenf(int, int, float);

    public native void glTexGenfv(int, int, float[], int);

    public native void glTexGenfv(int, int, java.nio.FloatBuffer);

    public native void glTexGeni(int, int, int);

    public native void glTexGeniv(int, int, int[], int);

    public native void glTexGeniv(int, int, java.nio.IntBuffer);

    public native void glTexGenx(int, int, int);

    public native void glTexGenxv(int, int, int[], int);

    public native void glTexGenxv(int, int, java.nio.IntBuffer);

    static void <clinit>()
    {
        staticinvoke <com.google.android.gles_jni.GLImpl: void _nativeClassInit()>();

        return;
    }
}
