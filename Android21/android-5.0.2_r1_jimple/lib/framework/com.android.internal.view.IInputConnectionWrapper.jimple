public class com.android.internal.view.IInputConnectionWrapper extends com.android.internal.view.IInputContext$Stub
{
    static final java.lang.String TAG;
    private static final int DO_GET_TEXT_AFTER_CURSOR;
    private static final int DO_GET_TEXT_BEFORE_CURSOR;
    private static final int DO_GET_SELECTED_TEXT;
    private static final int DO_GET_CURSOR_CAPS_MODE;
    private static final int DO_GET_EXTRACTED_TEXT;
    private static final int DO_COMMIT_TEXT;
    private static final int DO_COMMIT_COMPLETION;
    private static final int DO_COMMIT_CORRECTION;
    private static final int DO_SET_SELECTION;
    private static final int DO_PERFORM_EDITOR_ACTION;
    private static final int DO_PERFORM_CONTEXT_MENU_ACTION;
    private static final int DO_SET_COMPOSING_TEXT;
    private static final int DO_SET_COMPOSING_REGION;
    private static final int DO_FINISH_COMPOSING_TEXT;
    private static final int DO_SEND_KEY_EVENT;
    private static final int DO_DELETE_SURROUNDING_TEXT;
    private static final int DO_BEGIN_BATCH_EDIT;
    private static final int DO_END_BATCH_EDIT;
    private static final int DO_REPORT_FULLSCREEN_MODE;
    private static final int DO_PERFORM_PRIVATE_COMMAND;
    private static final int DO_CLEAR_META_KEY_STATES;
    private static final int DO_REQUEST_UPDATE_CURSOR_ANCHOR_INFO;
    private java.lang.ref.WeakReference mInputConnection;
    private android.os.Looper mMainLooper;
    private android.os.Handler mH;

    public void <init>(android.os.Looper, android.view.inputmethod.InputConnection)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Looper r1, $r5;
        android.view.inputmethod.InputConnection r2;
        java.lang.ref.WeakReference $r3;
        com.android.internal.view.IInputConnectionWrapper$MyHandler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.view.inputmethod.InputConnection;

        specialinvoke r0.<com.android.internal.view.IInputContext$Stub: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection> = $r3;

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper> = r1;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$MyHandler;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$MyHandler: void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper)>(r0, $r5);

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH> = $r4;

        return;
    }

    public boolean isActive()
    {
        com.android.internal.view.IInputConnectionWrapper r0;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        return 1;
    }

    public void getTextAfterCursor(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIISC(int,int,int,int,com.android.internal.view.IInputContextCallback)>(10, i0, i1, i2, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getTextBeforeCursor(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIISC(int,int,int,int,com.android.internal.view.IInputContextCallback)>(20, i0, i1, i2, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getSelectedText(int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>(25, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getCursorCapsMode(int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>(30, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getExtractedText(android.view.inputmethod.ExtractedTextRequest, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r3 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIOSC(int,int,java.lang.Object,int,com.android.internal.view.IInputContextCallback)>(40, i0, r1, i1, r2);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(50, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CompletionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(55, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(56, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void setSelection(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(57, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performEditorAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(58, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performContextMenuAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(59, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void setComposingRegion(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(63, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void finishComposingText()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(65);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.KeyEvent r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(70, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void clearMetaKeyStates(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(130, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void deleteSurroundingText(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(80, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void beginBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(90);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void endBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(95);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void reportFullscreenMode(boolean)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        boolean z0;
        android.os.Message $r1;
        byte $b0;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(100, $b0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(120, r1, r2);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void requestUpdateCursorAnchorInfo(int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>(140, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    void dispatchMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message r1;
        android.os.Looper $r2, $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        if $r2 != $r3 goto label1;

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void executeMessage(android.os.Message)>(r1);

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return;

     label1:
        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void executeMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message r1;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r2, r98, r101, r104, r107, r126, r127;
        android.view.inputmethod.InputConnection r3, r99, r102, r105, r108, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r128;
        int $i0, $i2, $i3, $i4, $i6, $i9, $i13, $i14, $i17, $i20, $i21, $i23, $i24, $i27, $i28, $i32, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i49, $i51, $i52, $i53, $i56, $i57, $i58;
        java.lang.Object $r4, $r6, $r9, $r11, $r13, $r14, $r16, $r19, $r21, $r23, $r24, $r26, $r30, $r31, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r47, $r49, $r50, $r51, $r54, $r55, $r57, $r60, $r61, $r64, $r71, $r74, $r76, $r78, $r81, $r83;
        java.lang.ref.WeakReference $r5, $r10, $r12, $r18, $r20, $r22, $r25, $r27, $r28, $r33, $r35, $r39, $r41, $r43, $r45, $r46, $r52, $r56, $r59, $r72, $r75, $r77;
        com.android.internal.view.IInputContextCallback $r7, $r8, $r62, $r63, $r65, $r68, $r69, $r73, $r80, $r82, $r84, $r90;
        boolean $z0, $z1, $z2, $z4, $z6, $z7, $z9, $z11, $z14, $z15, $z17, $z19, $z21, $z25, $z27, $z28, $z30, $z31, $z34, $z35, $z36, $z37, $z38;
        android.os.Bundle $r15;
        java.lang.String $r17, $r86;
        android.view.KeyEvent $r29;
        java.lang.CharSequence $r37, $r58, $r70, $r79, $r92;
        android.view.inputmethod.CorrectionInfo $r48;
        android.view.inputmethod.CompletionInfo $r53;
        android.view.inputmethod.ExtractedTextRequest $r66;
        android.view.inputmethod.ExtractedText $r67;
        java.lang.StringBuilder $r85, $r87, $r91;
        android.os.RemoteException $r88, $r89, $r93, $r94, $r95, $r96, r97, r100, r103, r106, r109, r129;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 10: goto label01;
            case 20: goto label09;
            case 25: goto label17;
            case 30: goto label25;
            case 40: goto label33;
            case 50: goto label41;
            case 55: goto label53;
            case 56: goto label56;
            case 57: goto label44;
            case 58: goto label47;
            case 59: goto label50;
            case 60: goto label59;
            case 63: goto label62;
            case 65: goto label65;
            case 70: goto label67;
            case 80: goto label73;
            case 90: goto label76;
            case 95: goto label79;
            case 100: goto label82;
            case 120: goto label87;
            case 130: goto label70;
            case 140: goto label90;
            default: goto label98;
        };

     label01:
        $r78 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r78;

     label02:
        $r77 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r81 = virtualinvoke $r77.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.inputmethod.InputConnection) $r81;

        if r3 == null goto label03;

        $z38 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z38 != 0 goto label05;

     label03:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextAfterCursor on inactive InputConnection");

        $r80 = r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i47 = r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r80.<com.android.internal.view.IInputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>(null, $i47);

     label04:
        return;

     label05:
        $r90 = r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i56 = r1.<android.os.Message: int arg1>;

        $i57 = r1.<android.os.Message: int arg2>;

        $r92 = interfaceinvoke r3.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>($i56, $i57);

        $i58 = r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r90.<com.android.internal.view.IInputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>($r92, $i58);

     label06:
        goto label08;

     label07:
        $r93 := @caughtexception;

        r97 = $r93;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setTextAfterCursor", r97);

     label08:
        return;

     label09:
        $r71 = r1.<android.os.Message: java.lang.Object obj>;

        r98 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r71;

     label10:
        $r72 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r83 = virtualinvoke $r72.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r99 = (android.view.inputmethod.InputConnection) $r83;

        if r99 == null goto label11;

        $z37 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z37 != 0 goto label13;

     label11:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextBeforeCursor on inactive InputConnection");

        $r82 = r98.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i49 = r98.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r82.<com.android.internal.view.IInputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>(null, $i49);

     label12:
        return;

     label13:
        $r84 = r98.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i51 = r1.<android.os.Message: int arg1>;

        $i52 = r1.<android.os.Message: int arg2>;

        $r79 = interfaceinvoke r99.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>($i51, $i52);

        $i46 = r98.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r84.<com.android.internal.view.IInputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>($r79, $i46);

     label14:
        goto label16;

     label15:
        $r88 := @caughtexception;

        r100 = $r88;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setTextBeforeCursor", r100);

     label16:
        return;

     label17:
        $r74 = r1.<android.os.Message: java.lang.Object obj>;

        r101 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r74;

     label18:
        $r75 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r76 = virtualinvoke $r75.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r102 = (android.view.inputmethod.InputConnection) $r76;

        if r102 == null goto label19;

        $z36 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z36 != 0 goto label21;

     label19:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getSelectedText on inactive InputConnection");

        $r68 = r101.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i45 = r101.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r68.<com.android.internal.view.IInputContextCallback: void setSelectedText(java.lang.CharSequence,int)>(null, $i45);

     label20:
        return;

     label21:
        $r69 = r101.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i40 = r1.<android.os.Message: int arg1>;

        $r70 = interfaceinvoke r102.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>($i40);

        $i41 = r101.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r69.<com.android.internal.view.IInputContextCallback: void setSelectedText(java.lang.CharSequence,int)>($r70, $i41);

     label22:
        goto label24;

     label23:
        $r94 := @caughtexception;

        r103 = $r94;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setSelectedText", r103);

     label24:
        return;

     label25:
        $r60 = r1.<android.os.Message: java.lang.Object obj>;

        r104 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r60;

     label26:
        $r59 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r61 = virtualinvoke $r59.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r105 = (android.view.inputmethod.InputConnection) $r61;

        if r105 == null goto label27;

        $z34 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z34 != 0 goto label29;

     label27:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getCursorCapsMode on inactive InputConnection");

        $r62 = r104.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i36 = r104.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r62.<com.android.internal.view.IInputContextCallback: void setCursorCapsMode(int,int)>(0, $i36);

     label28:
        return;

     label29:
        $r73 = r104.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i37 = r1.<android.os.Message: int arg1>;

        $i42 = interfaceinvoke r105.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i37);

        $i43 = r104.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r73.<com.android.internal.view.IInputContextCallback: void setCursorCapsMode(int,int)>($i42, $i43);

     label30:
        goto label32;

     label31:
        $r95 := @caughtexception;

        r106 = $r95;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setCursorCapsMode", r106);

     label32:
        return;

     label33:
        $r57 = r1.<android.os.Message: java.lang.Object obj>;

        r107 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r57;

     label34:
        $r56 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r55 = virtualinvoke $r56.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r108 = (android.view.inputmethod.InputConnection) $r55;

        if r108 == null goto label35;

        $z35 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z35 != 0 goto label37;

     label35:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getExtractedText on inactive InputConnection");

        $r63 = r107.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i32 = r107.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r63.<com.android.internal.view.IInputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>(null, $i32);

     label36:
        return;

     label37:
        $r65 = r107.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $r64 = r107.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1>;

        $r66 = (android.view.inputmethod.ExtractedTextRequest) $r64;

        $i38 = r1.<android.os.Message: int arg1>;

        $r67 = interfaceinvoke r108.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>($r66, $i38);

        $i39 = r107.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r65.<com.android.internal.view.IInputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>($r67, $i39);

     label38:
        goto label40;

     label39:
        $r89 := @caughtexception;

        r109 = $r89;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setExtractedText", r109);

     label40:
        return;

     label41:
        $r52 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r51 = virtualinvoke $r52.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r110 = (android.view.inputmethod.InputConnection) $r51;

        if r110 == null goto label42;

        $z31 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z31 != 0 goto label43;

     label42:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitText on inactive InputConnection");

        return;

     label43:
        $r50 = r1.<android.os.Message: java.lang.Object obj>;

        $r58 = (java.lang.CharSequence) $r50;

        $i34 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r110.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r58, $i34);

        return;

     label44:
        $r41 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r40 = virtualinvoke $r41.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r111 = (android.view.inputmethod.InputConnection) $r40;

        if r111 == null goto label45;

        $z27 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z27 != 0 goto label46;

     label45:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setSelection on inactive InputConnection");

        return;

     label46:
        $i28 = r1.<android.os.Message: int arg1>;

        $i27 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r111.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i28, $i27);

        return;

     label47:
        $r43 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r42 = virtualinvoke $r43.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r112 = (android.view.inputmethod.InputConnection) $r42;

        if r112 == null goto label48;

        $z25 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z25 != 0 goto label49;

     label48:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performEditorAction on inactive InputConnection");

        return;

     label49:
        $i24 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r112.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i24);

        return;

     label50:
        $r39 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r38 = virtualinvoke $r39.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r113 = (android.view.inputmethod.InputConnection) $r38;

        if r113 == null goto label51;

        $z21 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z21 != 0 goto label52;

     label51:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performContextMenuAction on inactive InputConnection");

        return;

     label52:
        $i23 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r113.<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>($i23);

        return;

     label53:
        $r46 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r47 = virtualinvoke $r46.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r114 = (android.view.inputmethod.InputConnection) $r47;

        if r114 == null goto label54;

        $z28 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z28 != 0 goto label55;

     label54:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCompletion on inactive InputConnection");

        return;

     label55:
        $r54 = r1.<android.os.Message: java.lang.Object obj>;

        $r53 = (android.view.inputmethod.CompletionInfo) $r54;

        interfaceinvoke r114.<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>($r53);

        return;

     label56:
        $r45 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r44 = virtualinvoke $r45.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r115 = (android.view.inputmethod.InputConnection) $r44;

        if r115 == null goto label57;

        $z30 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z30 != 0 goto label58;

     label57:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCorrection on inactive InputConnection");

        return;

     label58:
        $r49 = r1.<android.os.Message: java.lang.Object obj>;

        $r48 = (android.view.inputmethod.CorrectionInfo) $r49;

        interfaceinvoke r115.<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>($r48);

        return;

     label59:
        $r35 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r36 = virtualinvoke $r35.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r116 = (android.view.inputmethod.InputConnection) $r36;

        if r116 == null goto label60;

        $z19 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z19 != 0 goto label61;

     label60:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingText on inactive InputConnection");

        return;

     label61:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        $r37 = (java.lang.CharSequence) $r34;

        $i20 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r116.<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>($r37, $i20);

        return;

     label62:
        $r33 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r31 = virtualinvoke $r33.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r117 = (android.view.inputmethod.InputConnection) $r31;

        if r117 == null goto label63;

        $z17 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z17 != 0 goto label64;

     label63:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingRegion on inactive InputConnection");

        return;

     label64:
        $i21 = r1.<android.os.Message: int arg1>;

        $i17 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r117.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>($i21, $i17);

        return;

     label65:
        $r28 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r32 = virtualinvoke $r28.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r118 = (android.view.inputmethod.InputConnection) $r32;

        if r118 != null goto label66;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "finishComposingText on inactive InputConnection");

        return;

     label66:
        interfaceinvoke r118.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        return;

     label67:
        $r27 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r26 = virtualinvoke $r27.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r119 = (android.view.inputmethod.InputConnection) $r26;

        if r119 == null goto label68;

        $z15 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z15 != 0 goto label69;

     label68:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "sendKeyEvent on inactive InputConnection");

        return;

     label69:
        $r30 = r1.<android.os.Message: java.lang.Object obj>;

        $r29 = (android.view.KeyEvent) $r30;

        interfaceinvoke r119.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r29);

        return;

     label70:
        $r10 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r9 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r120 = (android.view.inputmethod.InputConnection) $r9;

        if r120 == null goto label71;

        $z2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z2 != 0 goto label72;

     label71:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "clearMetaKeyStates on inactive InputConnection");

        return;

     label72:
        $i6 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r120.<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>($i6);

        return;

     label73:
        $r25 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r24 = virtualinvoke $r25.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r121 = (android.view.inputmethod.InputConnection) $r24;

        if r121 == null goto label74;

        $z14 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z14 != 0 goto label75;

     label74:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "deleteSurroundingText on inactive InputConnection");

        return;

     label75:
        $i13 = r1.<android.os.Message: int arg1>;

        $i14 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r121.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>($i13, $i14);

        return;

     label76:
        $r22 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r23 = virtualinvoke $r22.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r122 = (android.view.inputmethod.InputConnection) $r23;

        if r122 == null goto label77;

        $z11 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z11 != 0 goto label78;

     label77:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "beginBatchEdit on inactive InputConnection");

        return;

     label78:
        interfaceinvoke r122.<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>();

        return;

     label79:
        $r20 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r21 = virtualinvoke $r20.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r123 = (android.view.inputmethod.InputConnection) $r21;

        if r123 == null goto label80;

        $z9 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z9 != 0 goto label81;

     label80:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "endBatchEdit on inactive InputConnection");

        return;

     label81:
        interfaceinvoke r123.<android.view.inputmethod.InputConnection: boolean endBatchEdit()>();

        return;

     label82:
        $r18 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r19 = virtualinvoke $r18.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r124 = (android.view.inputmethod.InputConnection) $r19;

        if r124 == null goto label83;

        $z6 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z6 != 0 goto label84;

     label83:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "showStatusIcon on inactive InputConnection");

        return;

     label84:
        $i9 = r1.<android.os.Message: int arg1>;

        if $i9 != 1 goto label85;

        $z7 = 1;

        goto label86;

     label85:
        $z7 = 0;

     label86:
        interfaceinvoke r124.<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>($z7);

        return;

     label87:
        $r12 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r11 = virtualinvoke $r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r125 = (android.view.inputmethod.InputConnection) $r11;

        if r125 == null goto label88;

        $z4 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z4 != 0 goto label89;

     label88:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performPrivateCommand on inactive InputConnection");

        return;

     label89:
        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        r126 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r14;

        $r13 = r126.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1>;

        $r17 = (java.lang.String) $r13;

        $r16 = r126.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg2>;

        $r15 = (android.os.Bundle) $r16;

        interfaceinvoke r125.<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>($r17, $r15);

        return;

     label90:
        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r127 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r4;

     label91:
        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r128 = (android.view.inputmethod.InputConnection) $r6;

        if r128 == null goto label92;

        $z0 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z0 != 0 goto label94;

     label92:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "requestCursorAnchorInfo on inactive InputConnection");

        $r7 = r127.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i2 = r127.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r7.<com.android.internal.view.IInputContextCallback: void setRequestUpdateCursorAnchorInfoResult(boolean,int)>(0, $i2);

     label93:
        return;

     label94:
        $r8 = r127.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i3 = r1.<android.os.Message: int arg1>;

        $z1 = interfaceinvoke r128.<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>($i3);

        $i4 = r127.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r8.<com.android.internal.view.IInputContextCallback: void setRequestUpdateCursorAnchorInfoResult(boolean,int)>($z1, $i4);

     label95:
        goto label97;

     label96:
        $r96 := @caughtexception;

        r129 = $r96;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling requestCursorAnchorInfo", r129);

     label97:
        return;

     label98:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i53 = r1.<android.os.Message: int what>;

        $r85 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", $r86);

        return;

        catch android.os.RemoteException from label02 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label10 to label12 with label15;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch android.os.RemoteException from label18 to label20 with label23;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch android.os.RemoteException from label26 to label28 with label31;
        catch android.os.RemoteException from label29 to label30 with label31;
        catch android.os.RemoteException from label34 to label36 with label39;
        catch android.os.RemoteException from label37 to label38 with label39;
        catch android.os.RemoteException from label91 to label93 with label96;
        catch android.os.RemoteException from label94 to label95 with label96;
    }

    android.os.Message obtainMessage(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(i0);

        return $r2;
    }

    android.os.Message obtainMessageII(int, int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        return $r2;
    }

    android.os.Message obtainMessageO(int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageISC(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r2, $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r3 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r2 = $r3;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r1;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i2;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r2);

        return $r5;
    }

    android.os.Message obtainMessageIISC(int, int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2, i3;
        com.android.internal.view.IInputContextCallback r1;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r2, $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: com.android.internal.view.IInputContextCallback;

        $r3 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r2 = $r3;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r1;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i3;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r2);

        return $r5;
    }

    android.os.Message obtainMessageOSC(int, java.lang.Object, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        java.lang.Object r1;
        com.android.internal.view.IInputContextCallback r2;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r2;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i1;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r3);

        return $r6;
    }

    android.os.Message obtainMessageIOSC(int, int, java.lang.Object, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.internal.view.IInputContextCallback r2;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.internal.view.IInputContextCallback;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r2;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i2;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r3);

        return $r6;
    }

    android.os.Message obtainMessageIO(int, int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageOO(int, java.lang.Object, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1, r2;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg2> = r2;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r3);

        return $r6;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.IInputConnectionWrapper: int DO_REQUEST_UPDATE_CURSOR_ANCHOR_INFO> = 140;

        <com.android.internal.view.IInputConnectionWrapper: int DO_CLEAR_META_KEY_STATES> = 130;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_PRIVATE_COMMAND> = 120;

        <com.android.internal.view.IInputConnectionWrapper: int DO_REPORT_FULLSCREEN_MODE> = 100;

        <com.android.internal.view.IInputConnectionWrapper: int DO_END_BATCH_EDIT> = 95;

        <com.android.internal.view.IInputConnectionWrapper: int DO_BEGIN_BATCH_EDIT> = 90;

        <com.android.internal.view.IInputConnectionWrapper: int DO_DELETE_SURROUNDING_TEXT> = 80;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SEND_KEY_EVENT> = 70;

        <com.android.internal.view.IInputConnectionWrapper: int DO_FINISH_COMPOSING_TEXT> = 65;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_REGION> = 63;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_TEXT> = 60;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_CONTEXT_MENU_ACTION> = 59;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_EDITOR_ACTION> = 58;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_SELECTION> = 57;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_CORRECTION> = 56;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_COMPLETION> = 55;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_TEXT> = 50;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_EXTRACTED_TEXT> = 40;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_CURSOR_CAPS_MODE> = 30;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_SELECTED_TEXT> = 25;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_BEFORE_CURSOR> = 20;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_AFTER_CURSOR> = 10;

        <com.android.internal.view.IInputConnectionWrapper: java.lang.String TAG> = "IInputConnectionWrapper";

        return;
    }
}
