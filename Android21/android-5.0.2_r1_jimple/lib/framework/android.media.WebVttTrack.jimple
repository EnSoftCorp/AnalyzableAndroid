class android.media.WebVttTrack extends android.media.SubtitleTrack implements android.media.WebVttCueListener
{
    private static final java.lang.String TAG;
    private final android.media.WebVttParser mParser;
    private final android.media.UnstyledTextExtractor mExtractor;
    private final android.media.Tokenizer mTokenizer;
    private final java.util.Vector mTimestamps;
    private final android.media.WebVttRenderingWidget mRenderingWidget;
    private final java.util.Map mRegions;
    private java.lang.Long mCurrentRunID;

    void <init>(android.media.WebVttRenderingWidget, android.media.MediaFormat)
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget r1;
        android.media.MediaFormat r2;
        android.media.WebVttParser $r3;
        android.media.UnstyledTextExtractor $r4, $r6;
        android.media.Tokenizer $r5;
        java.util.Vector $r7;
        java.util.HashMap $r8;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.WebVttRenderingWidget;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.SubtitleTrack: void <init>(android.media.MediaFormat)>(r2);

        $r3 = new android.media.WebVttParser;

        specialinvoke $r3.<android.media.WebVttParser: void <init>(android.media.WebVttCueListener)>(r0);

        r0.<android.media.WebVttTrack: android.media.WebVttParser mParser> = $r3;

        $r4 = new android.media.UnstyledTextExtractor;

        specialinvoke $r4.<android.media.UnstyledTextExtractor: void <init>()>();

        r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor> = $r4;

        $r5 = new android.media.Tokenizer;

        $r6 = r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor>;

        specialinvoke $r5.<android.media.Tokenizer: void <init>(android.media.Tokenizer$OnTokenListener)>($r6);

        r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer> = $r5;

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r0.<android.media.WebVttTrack: java.util.Vector mTimestamps> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.media.WebVttTrack: java.util.Map mRegions> = $r8;

        r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget> = r1;

        return;
    }

    public android.media.WebVttRenderingWidget getRenderingWidget()
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget $r1;

        r0 := @this: android.media.WebVttTrack;

        $r1 = r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget>;

        return $r1;
    }

    public void onData(byte[], boolean, long)
    {
        android.media.WebVttTrack r0;
        byte[] r1;
        boolean z0;
        long l0, $l1;
        java.lang.String r2, $r5, $r21, $r26;
        android.media.WebVttParser r3, $r6, $r9, $r10;
        java.lang.Throwable r4, $r25;
        java.lang.Long $r7, $r8, $r12, $r17;
        java.util.Map $r11;
        java.lang.IllegalStateException $r13;
        byte $b2;
        java.lang.StringBuilder $r14, $r15, $r16, $r18, $r19, $r22, $r23, $r24;
        java.io.UnsupportedEncodingException $r20, r27;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

     label01:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

        r2 = $r5;

        $r6 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        r3 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        if $r7 == null goto label03;

        $r12 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $l1 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label03;

        $r13 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run #");

        $r17 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in progress.  Cannot process run #");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label03:
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID> = $r8;

        $r9 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        virtualinvoke $r9.<android.media.WebVttParser: void parse(java.lang.String)>(r2);

        if z0 == 0 goto label04;

        virtualinvoke r0.<android.media.WebVttTrack: void finishedRun(long)>(l0);

        $r10 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        virtualinvoke $r10.<android.media.WebVttParser: void eos()>();

        $r11 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        interfaceinvoke $r11.<java.util.Map: void clear()>();

        r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID> = null;

     label04:
        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r25 := @caughtexception;

        r4 = $r25;

        exitmonitor r3;

     label07:
        throw r4;

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

        r27 = $r20;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WebVttTrack", $r26);

     label10:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.UnsupportedEncodingException from label01 to label08 with label09;
    }

    public void onCueParsed(android.media.TextTrackCue)
    {
        android.media.WebVttTrack r0;
        android.media.TextTrackCue r1;
        android.media.WebVttParser r2, $r8;
        java.lang.String[] r3;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, i20, i21, i22;
        java.lang.String r4, $r9, $r33, $r34, $r39;
        android.media.TextTrackCueSpan[] r5, r43;
        android.media.TextTrackCueSpan r6;
        java.lang.Throwable r7, $r38;
        boolean $z0, $z1, $z3;
        android.media.UnstyledTextExtractor $r10;
        android.media.Tokenizer $r11, $r32;
        android.media.TextTrackCueSpan[][] $r12, r42;
        java.util.Vector $r13, $r15, $r16, $r18, $r21, $r23, $r27;
        long $l6, $l9, $l11, $l12, $l14, $l15, $l16, $l17;
        java.lang.Long $r14, $r20, $r24, $r26;
        long[] $r17, $r22;
        java.lang.Object $r19, $r41;
        byte $b10, $b13;
        java.lang.StringBuilder $r25, $r28, $r29, $r30, $r31, $r35, $r36;
        android.media.TextTrackRegion $r37;
        java.util.Map $r40;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.TextTrackCue;

        $r8 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        r2 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r1.<android.media.TextTrackCue: java.lang.String mRegionId>;

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i4 == 0 goto label02;

        $r40 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        $r39 = r1.<android.media.TextTrackCue: java.lang.String mRegionId>;

        $r41 = interfaceinvoke $r40.<java.util.Map: java.lang.Object get(java.lang.Object)>($r39);

        $r37 = (android.media.TextTrackRegion) $r41;

        r1.<android.media.TextTrackCue: android.media.TextTrackRegion mRegion> = $r37;

     label02:
        $z0 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z0 == 0 goto label03;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding cue ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WebVttTrack", $r34);

     label03:
        $r11 = r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer>;

        virtualinvoke $r11.<android.media.Tokenizer: void reset()>();

        r3 = r1.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        i0 = lengthof r3;

        i1 = 0;

     label04:
        if i1 >= i0 goto label05;

        r4 = r3[i1];

        $r32 = r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer>;

        virtualinvoke $r32.<android.media.Tokenizer: void tokenize(java.lang.String)>(r4);

        i1 = i1 + 1;

        goto label04;

     label05:
        $r10 = r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor>;

        $r12 = virtualinvoke $r10.<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()>();

        r1.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r12;

        $z1 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z1 == 0 goto label06;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r1.<android.media.TextTrackCue: java.lang.StringBuilder appendStringsToBuilder(java.lang.StringBuilder)>($r25);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" simplified to: ");

        $r28 = virtualinvoke r1.<android.media.TextTrackCue: java.lang.StringBuilder appendLinesToBuilder(java.lang.StringBuilder)>($r29);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WebVttTrack", $r33);

     label06:
        r42 = r1.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        i20 = lengthof r42;

        i21 = 0;

     label07:
        if i21 >= i20 goto label11;

        r43 = r42[i21];

        r5 = r43;

        i2 = lengthof r5;

        i3 = 0;

     label08:
        if i3 >= i2 goto label10;

        r6 = r5[i3];

        $l9 = r6.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $l12 = r1.<android.media.TextTrackCue: long mStartTimeMs>;

        $b10 = $l9 cmp $l12;

        if $b10 <= 0 goto label09;

        $l16 = r6.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $l15 = r1.<android.media.TextTrackCue: long mEndTimeMs>;

        $b13 = $l16 cmp $l15;

        if $b13 >= 0 goto label09;

        $r23 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $l14 = r6.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l14);

        $z3 = virtualinvoke $r23.<java.util.Vector: boolean contains(java.lang.Object)>($r24);

        if $z3 != 0 goto label09;

        $r27 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $l17 = r6.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);

        virtualinvoke $r27.<java.util.Vector: boolean add(java.lang.Object)>($r26);

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        i21 = i21 + 1;

        goto label07;

     label11:
        $r13 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i5 = virtualinvoke $r13.<java.util.Vector: int size()>();

        if $i5 <= 0 goto label14;

        $r15 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i7 = virtualinvoke $r15.<java.util.Vector: int size()>();

        $r17 = newarray (long)[$i7];

        r1.<android.media.TextTrackCue: long[] mInnerTimesMs> = $r17;

        i22 = 0;

     label12:
        $r16 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i8 = virtualinvoke $r16.<java.util.Vector: int size()>();

        if i22 >= $i8 goto label13;

        $r22 = r1.<android.media.TextTrackCue: long[] mInnerTimesMs>;

        $r21 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $r19 = virtualinvoke $r21.<java.util.Vector: java.lang.Object get(int)>(i22);

        $r20 = (java.lang.Long) $r19;

        $l11 = virtualinvoke $r20.<java.lang.Long: long longValue()>();

        $r22[i22] = $l11;

        i22 = i22 + 1;

        goto label12;

     label13:
        $r18 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        virtualinvoke $r18.<java.util.Vector: void clear()>();

        goto label15;

     label14:
        r1.<android.media.TextTrackCue: long[] mInnerTimesMs> = null;

     label15:
        $r14 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $l6 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        r1.<android.media.TextTrackCue: long mRunID> = $l6;

        exitmonitor r2;

     label16:
        goto label19;

     label17:
        $r38 := @caughtexception;

        r7 = $r38;

        exitmonitor r2;

     label18:
        throw r7;

     label19:
        virtualinvoke r0.<android.media.WebVttTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r1);

        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void onRegionParsed(android.media.TextTrackRegion)
    {
        android.media.WebVttTrack r0;
        android.media.TextTrackRegion r1;
        android.media.WebVttParser r2, $r4;
        java.lang.Throwable r3, $r8;
        java.lang.String $r5;
        java.util.Map $r6;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.TextTrackRegion;

        $r4 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        $r5 = r1.<android.media.TextTrackRegion: java.lang.String mId>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateView(java.util.Vector)
    {
        android.media.WebVttTrack r0;
        java.util.Vector r1;
        boolean $z0, $z1;
        android.media.WebVttRenderingWidget $r3, $r4;
        android.media.MediaTimeProvider $r5, $r8;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        long $l0, $l1;
        java.lang.String $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: java.util.Vector;

        $z0 = r0.<android.media.WebVttTrack: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r5 = r0.<android.media.WebVttTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r5 == null goto label5;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at ");

        $r8 = r0.<android.media.WebVttTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l0 = interfaceinvoke $r8.<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>(0, 1);

        $l1 = $l0 / 1000L;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms the active cues are:");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebVttTrack", $r11);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebVttTrack", "at (illegal state) the active cues are:");

     label5:
        $r3 = r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget>;

        if $r3 == null goto label6;

        $r4 = r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget>;

        virtualinvoke $r4.<android.media.WebVttRenderingWidget: void setActiveCues(java.util.Vector)>(r1);

     label6:
        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    public volatile android.media.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget $r1;

        r0 := @this: android.media.WebVttTrack;

        $r1 = virtualinvoke r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget getRenderingWidget()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <android.media.WebVttTrack: java.lang.String TAG> = "WebVttTrack";

        return;
    }
}
