public final class android.util.MathUtils extends java.lang.Object
{
    private static final java.util.Random sRandom;
    private static final float DEG_TO_RAD;
    private static final float RAD_TO_DEG;

    private void <init>()
    {
        android.util.MathUtils r0;

        r0 := @this: android.util.MathUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float abs(float)
    {
        float f0, $f1;
        byte $b0;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $f1 = f0;

        goto label2;

     label1:
        $f1 = neg f0;

     label2:
        return $f1;
    }

    public static int constrain(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        $i3 = i1;

        goto label3;

     label1:
        if i0 <= i2 goto label2;

        $i3 = i2;

        goto label3;

     label2:
        $i3 = i0;

     label3:
        return $i3;
    }

    public static long constrain(long, long, long)
    {
        long l0, l1, l2, $l5;
        byte $b3, $b4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label1;

        $l5 = l1;

        goto label3;

     label1:
        $b4 = l0 cmp l2;

        if $b4 <= 0 goto label2;

        $l5 = l2;

        goto label3;

     label2:
        $l5 = l0;

     label3:
        return $l5;
    }

    public static float constrain(float, float, float)
    {
        float f0, f1, f2, $f3;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        $f3 = f1;

        goto label3;

     label1:
        $b1 = f0 cmpl f2;

        if $b1 <= 0 goto label2;

        $f3 = f2;

        goto label3;

     label2:
        $f3 = f0;

     label3:
        return $f3;
    }

    public static float log(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float exp(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float pow(float, float)
    {
        float f0, f1, $f2;
        double $d0, $d1, $d2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $d1 = (double) f0;

        $d0 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d0);

        $f2 = (float) $d2;

        return $f2;
    }

    public static float max(float, float)
    {
        float f0, f1, $f2;
        byte $b0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label1;

        $f2 = f0;

        goto label2;

     label1:
        $f2 = f1;

     label2:
        return $f2;
    }

    public static float max(int, int)
    {
        int i0, i1;
        float $f0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= i1 goto label1;

        $f0 = (float) i0;

        goto label2;

     label1:
        $f0 = (float) i1;

     label2:
        return $f0;
    }

    public static float max(float, float, float)
    {
        float f0, f1, f2, $f3;
        byte $b0, $b1, $b2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpl f1;

        if $b0 <= 0 goto label2;

        $b2 = f0 cmpl f2;

        if $b2 <= 0 goto label1;

        $f3 = f0;

        goto label4;

     label1:
        $f3 = f2;

        goto label4;

     label2:
        $b1 = f1 cmpl f2;

        if $b1 <= 0 goto label3;

        $f3 = f1;

        goto label4;

     label3:
        $f3 = f2;

     label4:
        return $f3;
    }

    public static float max(int, int, int)
    {
        int i0, i1, i2, $i3;
        float $f0, f1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 <= i1 goto label3;

        if i0 <= i2 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = i2;

     label2:
        $f0 = (float) $i3;

        goto label5;

     label3:
        if i1 <= i2 goto label4;

        f1 = (float) i1;

        return f1;

     label4:
        $f0 = (float) i2;

     label5:
        return $f0;
    }

    public static float min(float, float)
    {
        float f0, f1, $f2;
        byte $b0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        $f2 = f0;

        goto label2;

     label1:
        $f2 = f1;

     label2:
        return $f2;
    }

    public static float min(int, int)
    {
        int i0, i1;
        float $f0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $f0 = (float) i0;

        goto label2;

     label1:
        $f0 = (float) i1;

     label2:
        return $f0;
    }

    public static float min(float, float, float)
    {
        float f0, f1, f2, $f3;
        byte $b0, $b1, $b2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label2;

        $b2 = f0 cmpg f2;

        if $b2 >= 0 goto label1;

        $f3 = f0;

        goto label4;

     label1:
        $f3 = f2;

        goto label4;

     label2:
        $b1 = f1 cmpg f2;

        if $b1 >= 0 goto label3;

        $f3 = f1;

        goto label4;

     label3:
        $f3 = f2;

     label4:
        return $f3;
    }

    public static float min(int, int, int)
    {
        int i0, i1, i2, $i3;
        float $f0, f1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label3;

        if i0 >= i2 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = i2;

     label2:
        $f0 = (float) $i3;

        goto label5;

     label3:
        if i1 >= i2 goto label4;

        f1 = (float) i1;

        return f1;

     label4:
        $f0 = (float) i2;

     label5:
        return $f0;
    }

    public static float dist(float, float, float, float)
    {
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 = f2 - f0;

        f5 = f3 - f1;

        $f7 = f4 * f4;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f9 = (float) $d1;

        return $f9;
    }

    public static float dist(float, float, float, float, float, float)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        f6 = f3 - f0;

        f7 = f4 - f1;

        f8 = f5 - f2;

        $f10 = f6 * f6;

        $f9 = f7 * f7;

        $f12 = $f10 + $f9;

        $f11 = f8 * f8;

        $f13 = $f12 + $f11;

        $d0 = (double) $f13;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f14 = (float) $d1;

        return $f14;
    }

    public static float mag(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f4 = $f3 + $f2;

        $d0 = (double) $f4;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f5 = (float) $d1;

        return $f5;
    }

    public static float mag(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f4 = f0 * f0;

        $f3 = f1 * f1;

        $f6 = $f4 + $f3;

        $f5 = f2 * f2;

        $f7 = $f6 + $f5;

        $d0 = (double) $f7;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f8 = (float) $d1;

        return $f8;
    }

    public static float sq(float)
    {
        float f0, $f1;

        f0 := @parameter0: float;

        $f1 = f0 * f0;

        return $f1;
    }

    public static float radians(float)
    {
        float f0, $f1;

        f0 := @parameter0: float;

        $f1 = f0 * 0.017453292F;

        return $f1;
    }

    public static float degrees(float)
    {
        float f0, $f1;

        f0 := @parameter0: float;

        $f1 = f0 * 57.295784F;

        return $f1;
    }

    public static float acos(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float asin(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double asin(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float atan(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double atan(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float atan2(float, float)
    {
        float f0, f1, $f2;
        double $d0, $d1, $d2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $d1 = (double) f0;

        $d0 = (double) f1;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $f2 = (float) $d2;

        return $f2;
    }

    public static float tan(float)
    {
        float f0, $f1;
        double $d0, $d1;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    public static float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = $f3 * f2;

        $f5 = f0 + $f4;

        return $f5;
    }

    public static float norm(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f4 = f2 - f0;

        $f3 = f1 - f0;

        $f5 = $f4 / $f3;

        return $f5;
    }

    public static float map(float, float, float, float, float)
    {
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        $f8 = f2 - f3;

        $f6 = f4 - f0;

        $f5 = f1 - f0;

        $f7 = $f6 / $f5;

        $f9 = $f8 * $f7;

        $f10 = f2 + $f9;

        return $f10;
    }

    public static int random(int)
    {
        int i0, $i1;
        java.util.Random $r0;
        float $f0, $f1, $f2;

        i0 := @parameter0: int;

        $r0 = <android.util.MathUtils: java.util.Random sRandom>;

        $f0 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $f1 = (float) i0;

        $f2 = $f0 * $f1;

        $i1 = (int) $f2;

        return $i1;
    }

    public static int random(int, int)
    {
        int i0, i1, $i2, $i3;
        java.util.Random $r0;
        float $f0, $f1, $f2, $f3, $f4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < i1 goto label1;

        return i0;

     label1:
        $r0 = <android.util.MathUtils: java.util.Random sRandom>;

        $f0 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $i2 = i1 - i0;

        $f1 = (float) $i2;

        $f3 = $f0 * $f1;

        $f2 = (float) i0;

        $f4 = $f3 + $f2;

        $i3 = (int) $f4;

        return $i3;
    }

    public static float random(float)
    {
        float f0, $f1, $f2;
        java.util.Random $r0;

        f0 := @parameter0: float;

        $r0 = <android.util.MathUtils: java.util.Random sRandom>;

        $f1 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $f2 = $f1 * f0;

        return $f2;
    }

    public static float random(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        byte $b0;
        java.util.Random $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl f1;

        if $b0 < 0 goto label1;

        return f0;

     label1:
        $r0 = <android.util.MathUtils: java.util.Random sRandom>;

        $f2 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $f3 = f1 - f0;

        $f4 = $f2 * $f3;

        $f5 = $f4 + f0;

        return $f5;
    }

    public static void randomSeed(long)
    {
        long l0;
        java.util.Random $r0;

        l0 := @parameter0: long;

        $r0 = <android.util.MathUtils: java.util.Random sRandom>;

        virtualinvoke $r0.<java.util.Random: void setSeed(long)>(l0);

        return;
    }

    static void <clinit>()
    {
        java.util.Random $r0;

        <android.util.MathUtils: float RAD_TO_DEG> = 57.295784F;

        <android.util.MathUtils: float DEG_TO_RAD> = 0.017453292F;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <android.util.MathUtils: java.util.Random sRandom> = $r0;

        return;
    }
}
