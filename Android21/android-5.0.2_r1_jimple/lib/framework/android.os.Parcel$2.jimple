class android.os.Parcel$2 extends java.io.ObjectInputStream
{
    final java.lang.ClassLoader val$loader;
    final android.os.Parcel this$0;

    void <init>(android.os.Parcel, java.io.InputStream, java.lang.ClassLoader)
    {
        android.os.Parcel$2 r0;
        android.os.Parcel r1;
        java.io.InputStream r2;
        java.lang.ClassLoader r3;

        r0 := @this: android.os.Parcel$2;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.lang.ClassLoader;

        r0.<android.os.Parcel$2: android.os.Parcel this$0> = r1;

        r0.<android.os.Parcel$2: java.lang.ClassLoader val$loader> = r3;

        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r2);

        return;
    }

    protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        android.os.Parcel$2 r0;
        java.io.ObjectStreamClass r1;
        java.lang.Class r2, $r4;
        java.lang.ClassLoader $r3, $r6;
        java.lang.String $r5;

        r0 := @this: android.os.Parcel$2;

        r1 := @parameter0: java.io.ObjectStreamClass;

        $r3 = r0.<android.os.Parcel$2: java.lang.ClassLoader val$loader>;

        if $r3 == null goto label1;

        $r5 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $r6 = r0.<android.os.Parcel$2: java.lang.ClassLoader val$loader>;

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 0, $r6);

        if r2 == null goto label1;

        return r2;

     label1:
        $r4 = specialinvoke r0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(r1);

        return $r4;
    }
}
