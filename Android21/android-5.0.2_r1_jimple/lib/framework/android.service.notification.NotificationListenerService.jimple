public abstract class android.service.notification.NotificationListenerService extends android.app.Service
{
    private final java.lang.String TAG;
    public static final int INTERRUPTION_FILTER_ALL;
    public static final int INTERRUPTION_FILTER_PRIORITY;
    public static final int INTERRUPTION_FILTER_NONE;
    public static final int HINT_HOST_DISABLE_EFFECTS;
    public static final int TRIM_FULL;
    public static final int TRIM_LIGHT;
    private android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper;
    private android.service.notification.NotificationListenerService$RankingMap mRankingMap;
    private android.app.INotificationManager mNoMan;
    private int mCurrentUser;
    private android.content.Context mSystemContext;
    public static final java.lang.String SERVICE_INTERFACE;

    public void <init>()
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9;
        java.lang.Class $r2, $r6;
        java.lang.String $r3, $r7, $r10;

        r0 := @this: android.service.notification.NotificationListenerService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "android/service/notification/NotificationListenerService";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.notification.NotificationListenerService: java.lang.String TAG> = $r10;

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper> = null;

        return;
    }

    public void onNotificationPosted(android.service.notification.StatusBarNotification)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.StatusBarNotification r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        return;
    }

    public void onNotificationPosted(android.service.notification.StatusBarNotification, android.service.notification.NotificationListenerService$RankingMap)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.StatusBarNotification r1;
        android.service.notification.NotificationListenerService$RankingMap r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        r2 := @parameter1: android.service.notification.NotificationListenerService$RankingMap;

        virtualinvoke r0.<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)>(r1);

        return;
    }

    public void onNotificationRemoved(android.service.notification.StatusBarNotification)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.StatusBarNotification r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        return;
    }

    public void onNotificationRemoved(android.service.notification.StatusBarNotification, android.service.notification.NotificationListenerService$RankingMap)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.StatusBarNotification r1;
        android.service.notification.NotificationListenerService$RankingMap r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.StatusBarNotification;

        r2 := @parameter1: android.service.notification.NotificationListenerService$RankingMap;

        virtualinvoke r0.<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification)>(r1);

        return;
    }

    public void onListenerConnected()
    {
        android.service.notification.NotificationListenerService r0;

        r0 := @this: android.service.notification.NotificationListenerService;

        return;
    }

    public void onNotificationRankingUpdate(android.service.notification.NotificationListenerService$RankingMap)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationListenerService$RankingMap r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.NotificationListenerService$RankingMap;

        return;
    }

    public void onListenerHintsChanged(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        return;
    }

    public void onInterruptionFilterChanged(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        return;
    }

    private final android.app.INotificationManager getNotificationInterface()
    {
        android.service.notification.NotificationListenerService r0;
        android.app.INotificationManager $r1, $r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("notification");

        $r4 = staticinvoke <android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>($r3);

        r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan> = $r4;

     label1:
        $r2 = r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager mNoMan>;

        return $r2;
    }

    public final void cancelNotification(java.lang.String, java.lang.String, int)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String r1, r2, $r7;
        int i0;
        android.os.RemoteException r3, $r6;
        boolean $z0;
        android.app.INotificationManager $r4;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r5 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r4.<android.app.INotificationManager: void cancelNotificationFromListener(android.service.notification.INotificationListener,java.lang.String,java.lang.String,int)>($r5, r1, r2, i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Unable to contact notification manager", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void cancelNotification(java.lang.String)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String r1, $r7;
        android.os.RemoteException r2, $r6;
        boolean $z0;
        android.app.INotificationManager $r3;
        java.lang.String[] $r4;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r5 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r1;

        interfaceinvoke $r3.<android.app.INotificationManager: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>($r5, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Unable to contact notification manager", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void cancelAllNotifications()
    {
        android.service.notification.NotificationListenerService r0;

        r0 := @this: android.service.notification.NotificationListenerService;

        virtualinvoke r0.<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])>(null);

        return;
    }

    public final void cancelNotifications(java.lang.String[])
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String[] r1;
        android.os.RemoteException r2, $r5;
        boolean $z0;
        android.app.INotificationManager $r3;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r4;
        java.lang.String $r6;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String[];

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r4 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r3.<android.app.INotificationManager: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>($r4, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Unable to contact notification manager", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void setOnNotificationPostedTrim(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r2.<android.app.INotificationManager: void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener,int)>($r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications()
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.StatusBarNotification[] $r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = virtualinvoke r0.<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>(null, 0);

        return $r1;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;
        android.service.notification.StatusBarNotification[] $r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>(null, i0);

        return $r1;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String[] r1;
        android.service.notification.StatusBarNotification[] $r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>(r1, 0);

        return $r2;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[], int)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String[] r1;
        int i0, i1, i2;
        android.content.pm.ParceledListSlice r2;
        java.util.List r3;
        android.app.Notification r4;
        boolean $z0;
        android.app.INotificationManager $r5;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r6;
        android.service.notification.StatusBarNotification[] $r7, $r10;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        android.service.notification.StatusBarNotification $r11;
        android.content.Context $r13;
        java.lang.String $r14;
        android.os.RemoteException $r15, r16;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r6 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        r2 = interfaceinvoke $r5.<android.app.INotificationManager: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>($r6, r1, i0);

        r3 = virtualinvoke r2.<android.content.pm.ParceledListSlice: java.util.List getList()>();

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r11 = (android.service.notification.StatusBarNotification) $r9;

        r4 = virtualinvoke $r11.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        $r13 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.content.Context getContext()>();

        staticinvoke <android.app.Notification$Builder: android.app.Notification rebuild(android.content.Context,android.app.Notification)>($r13, r4);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r7 = newarray (android.service.notification.StatusBarNotification)[i1];

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r10 = (android.service.notification.StatusBarNotification[]) $r8;

     label4:
        return $r10;

     label5:
        $r15 := @caughtexception;

        r16 = $r15;

        $r14 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Unable to contact notification manager", r16);

        return null;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public final int getCurrentListenerHints()
    {
        android.service.notification.NotificationListenerService r0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        $i0 = interfaceinvoke $r2.<android.app.INotificationManager: int getHintsFromListener(android.service.notification.INotificationListener)>($r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final int getCurrentInterruptionFilter()
    {
        android.service.notification.NotificationListenerService r0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        $i0 = interfaceinvoke $r2.<android.app.INotificationManager: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>($r3);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void requestListenerHints(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r2.<android.app.INotificationManager: void requestHintsFromListener(android.service.notification.INotificationListener,int)>($r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void requestInterruptionFilter(int)
    {
        android.service.notification.NotificationListenerService r0;
        int i0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        android.app.INotificationManager $r2;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r3;
        java.lang.String $r5;

        r0 := @this: android.service.notification.NotificationListenerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.service.notification.NotificationListenerService: boolean isBound()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke $r2.<android.app.INotificationManager: void requestInterruptionFilterFromListener(android.service.notification.INotificationListener,int)>($r3, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Unable to contact notification manager", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.service.notification.NotificationListenerService$RankingMap getCurrentRanking()
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationListenerService$RankingMap $r1;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$RankingMap mRankingMap>;

        return $r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.notification.NotificationListenerService r0;
        android.content.Intent r1;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r2, $r3, $r4;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        if $r2 != null goto label1;

        $r4 = new android.service.notification.NotificationListenerService$INotificationListenerWrapper;

        specialinvoke $r4.<android.service.notification.NotificationListenerService$INotificationListenerWrapper: void <init>(android.service.notification.NotificationListenerService,android.service.notification.NotificationListenerService$1)>(r0, null);

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper> = $r4;

     label1:
        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        return $r3;
    }

    private boolean isBound()
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r1;
        java.lang.String $r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        if $r1 != null goto label1;

        $r2 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, "Notification listener service not yet bound.");

        return 0;

     label1:
        return 1;
    }

    public void registerAsSystemService(android.content.Context, android.content.ComponentName, int) throws android.os.RemoteException
    {
        android.service.notification.NotificationListenerService r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        int i0;
        android.app.INotificationManager r3;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r4, $r5, $r6;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r0.<android.service.notification.NotificationListenerService: android.content.Context mSystemContext> = r1;

        $r4 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        if $r4 != null goto label1;

        $r6 = new android.service.notification.NotificationListenerService$INotificationListenerWrapper;

        specialinvoke $r6.<android.service.notification.NotificationListenerService$INotificationListenerWrapper: void <init>(android.service.notification.NotificationListenerService,android.service.notification.NotificationListenerService$1)>(r0, null);

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper> = $r6;

     label1:
        r3 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r5 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        interfaceinvoke r3.<android.app.INotificationManager: void registerListener(android.service.notification.INotificationListener,android.content.ComponentName,int)>($r5, r2, i0);

        r0.<android.service.notification.NotificationListenerService: int mCurrentUser> = i0;

        return;
    }

    public void unregisterAsSystemService() throws android.os.RemoteException
    {
        android.service.notification.NotificationListenerService r0;
        android.app.INotificationManager r1;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r2, $r3;
        int $i0;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r2 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        if $r2 == null goto label1;

        r1 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.app.INotificationManager getNotificationInterface()>();

        $r3 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        $i0 = r0.<android.service.notification.NotificationListenerService: int mCurrentUser>;

        interfaceinvoke r1.<android.app.INotificationManager: void unregisterListener(android.service.notification.INotificationListener,int)>($r3, $i0);

     label1:
        return;
    }

    private void applyUpdate(android.service.notification.NotificationRankingUpdate)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationRankingUpdate r1;
        android.service.notification.NotificationListenerService$RankingMap $r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        r1 := @parameter0: android.service.notification.NotificationRankingUpdate;

        $r2 = new android.service.notification.NotificationListenerService$RankingMap;

        specialinvoke $r2.<android.service.notification.NotificationListenerService$RankingMap: void <init>(android.service.notification.NotificationRankingUpdate,android.service.notification.NotificationListenerService$1)>(r1, null);

        r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$RankingMap mRankingMap> = $r2;

        return;
    }

    private android.content.Context getContext()
    {
        android.service.notification.NotificationListenerService r0;
        android.content.Context $r1, $r2;

        r0 := @this: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.content.Context mSystemContext>;

        if $r1 == null goto label1;

        $r2 = r0.<android.service.notification.NotificationListenerService: android.content.Context mSystemContext>;

        return $r2;

     label1:
        return r0;
    }

    static java.lang.String access$100(android.service.notification.NotificationListenerService)
    {
        android.service.notification.NotificationListenerService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: java.lang.String TAG>;

        return $r1;
    }

    static android.content.Context access$200(android.service.notification.NotificationListenerService)
    {
        android.service.notification.NotificationListenerService r0;
        android.content.Context $r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        $r1 = specialinvoke r0.<android.service.notification.NotificationListenerService: android.content.Context getContext()>();

        return $r1;
    }

    static android.service.notification.NotificationListenerService$INotificationListenerWrapper access$300(android.service.notification.NotificationListenerService)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationListenerService$INotificationListenerWrapper $r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$INotificationListenerWrapper mWrapper>;

        return $r1;
    }

    static void access$400(android.service.notification.NotificationListenerService, android.service.notification.NotificationRankingUpdate)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationRankingUpdate r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        r1 := @parameter1: android.service.notification.NotificationRankingUpdate;

        specialinvoke r0.<android.service.notification.NotificationListenerService: void applyUpdate(android.service.notification.NotificationRankingUpdate)>(r1);

        return;
    }

    static android.service.notification.NotificationListenerService$RankingMap access$500(android.service.notification.NotificationListenerService)
    {
        android.service.notification.NotificationListenerService r0;
        android.service.notification.NotificationListenerService$RankingMap $r1;

        r0 := @parameter0: android.service.notification.NotificationListenerService;

        $r1 = r0.<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService$RankingMap mRankingMap>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.service.notification.NotificationListenerService: java.lang.String SERVICE_INTERFACE> = "android.service.notification.NotificationListenerService";

        <android.service.notification.NotificationListenerService: int TRIM_LIGHT> = 1;

        <android.service.notification.NotificationListenerService: int TRIM_FULL> = 0;

        <android.service.notification.NotificationListenerService: int HINT_HOST_DISABLE_EFFECTS> = 1;

        <android.service.notification.NotificationListenerService: int INTERRUPTION_FILTER_NONE> = 3;

        <android.service.notification.NotificationListenerService: int INTERRUPTION_FILTER_PRIORITY> = 2;

        <android.service.notification.NotificationListenerService: int INTERRUPTION_FILTER_ALL> = 1;

        return;
    }
}
