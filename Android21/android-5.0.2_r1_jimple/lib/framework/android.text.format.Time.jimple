public class android.text.format.Time extends java.lang.Object
{
    private static final java.lang.String Y_M_D_T_H_M_S_000;
    private static final java.lang.String Y_M_D_T_H_M_S_000_Z;
    private static final java.lang.String Y_M_D;
    public static final java.lang.String TIMEZONE_UTC;
    public static final int EPOCH_JULIAN_DAY;
    public static final int MONDAY_BEFORE_JULIAN_EPOCH;
    public boolean allDay;
    public int second;
    public int minute;
    public int hour;
    public int monthDay;
    public int month;
    public int year;
    public int weekDay;
    public int yearDay;
    public int isDst;
    public long gmtoff;
    public java.lang.String timezone;
    public static final int SECOND;
    public static final int MINUTE;
    public static final int HOUR;
    public static final int MONTH_DAY;
    public static final int MONTH;
    public static final int YEAR;
    public static final int WEEK_DAY;
    public static final int YEAR_DAY;
    public static final int WEEK_NUM;
    public static final int SUNDAY;
    public static final int MONDAY;
    public static final int TUESDAY;
    public static final int WEDNESDAY;
    public static final int THURSDAY;
    public static final int FRIDAY;
    public static final int SATURDAY;
    private android.text.format.Time$TimeCalculator calculator;
    private static final int[] DAYS_PER_MONTH;
    private static final int[] sThursdayOffset;

    public void <init>(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezoneId is null!");

        throw $r2;

     label1:
        specialinvoke r0.<android.text.format.Time: void initialize(java.lang.String)>(r1);

        return;
    }

    public void <init>()
    {
        android.text.format.Time r0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        r0 := @this: android.text.format.Time;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<android.text.format.Time: void initialize(java.lang.String)>($r2);

        return;
    }

    public void <init>(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        java.lang.String $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.text.format.Time: java.lang.String timezone>;

        specialinvoke r0.<android.text.format.Time: void initialize(java.lang.String)>($r2);

        virtualinvoke r0.<android.text.format.Time: void set(android.text.format.Time)>(r1);

        return;
    }

    private void initialize(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        android.text.format.Time$TimeCalculator $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        r0.<android.text.format.Time: int year> = 1970;

        r0.<android.text.format.Time: int monthDay> = 1;

        r0.<android.text.format.Time: int isDst> = -1;

        $r2 = new android.text.format.Time$TimeCalculator;

        specialinvoke $r2.<android.text.format.Time$TimeCalculator: void <init>(java.lang.String)>(r1);

        r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator> = $r2;

        return;
    }

    public long normalize(boolean)
    {
        android.text.format.Time r0;
        boolean z0;
        long l0;
        android.text.format.Time$TimeCalculator $r1, $r2, $r3;

        r0 := @this: android.text.format.Time;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r1.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        l0 = virtualinvoke $r2.<android.text.format.Time$TimeCalculator: long toMillis(boolean)>(z0);

        $r3 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r3.<android.text.format.Time$TimeCalculator: void copyFieldsToTime(android.text.format.Time)>(r0);

        return l0;
    }

    public void switchTimezone(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        android.text.format.Time$TimeCalculator $r2, $r3, $r4;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r2.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r3 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r3.<android.text.format.Time$TimeCalculator: void switchTimeZone(java.lang.String)>(r1);

        $r4 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r4.<android.text.format.Time$TimeCalculator: void copyFieldsToTime(android.text.format.Time)>(r0);

        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        return;
    }

    public int getActualMaximum(int)
    {
        android.text.format.Time r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, i12;
        java.lang.RuntimeException $r1, $r3;
        short $s5;
        int[] $r2;
        byte $b10;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label16;
            default: goto label17;
        };

     label01:
        return 59;

     label02:
        return 59;

     label03:
        return 23;

     label04:
        $r2 = <android.text.format.Time: int[] DAYS_PER_MONTH>;

        $i7 = r0.<android.text.format.Time: int month>;

        i1 = $r2[$i7];

        if i1 == 28 goto label05;

        return i1;

     label05:
        i2 = r0.<android.text.format.Time: int year>;

        $i8 = i2 % 4;

        if $i8 != 0 goto label07;

        $i9 = i2 % 100;

        if $i9 != 0 goto label06;

        $i11 = i2 % 400;

        if $i11 != 0 goto label07;

     label06:
        $b10 = 29;

        goto label08;

     label07:
        $b10 = 28;

     label08:
        return $b10;

     label09:
        return 11;

     label10:
        return 2037;

     label11:
        return 6;

     label12:
        i12 = r0.<android.text.format.Time: int year>;

        $i3 = i12 % 4;

        if $i3 != 0 goto label14;

        $i4 = i12 % 100;

        if $i4 != 0 goto label13;

        $i6 = i12 % 400;

        if $i6 != 0 goto label14;

     label13:
        $s5 = 365;

        goto label15;

     label14:
        $s5 = 364;

     label15:
        return $s5;

     label16:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("WEEK_NUM not implemented");

        throw $r1;

     label17:
        $r3 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad field=");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r3;
    }

    public void clear(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezone is null!");

        throw $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        r0.<android.text.format.Time: boolean allDay> = 0;

        r0.<android.text.format.Time: int second> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int monthDay> = 0;

        r0.<android.text.format.Time: int month> = 0;

        r0.<android.text.format.Time: int year> = 0;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        r0.<android.text.format.Time: int isDst> = -1;

        return;
    }

    public static int compare(android.text.format.Time, android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        android.text.format.Time$TimeCalculator $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.NullPointerException $r6, $r7;

        r0 := @parameter0: android.text.format.Time;

        r1 := @parameter1: android.text.format.Time;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("a == null");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("b == null");

        throw $r6;

     label2:
        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r2.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r3 = r1.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r3.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r1);

        $r5 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $r4 = r1.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $i0 = staticinvoke <android.text.format.Time$TimeCalculator: int compare(android.text.format.Time$TimeCalculator,android.text.format.Time$TimeCalculator)>($r5, $r4);

        return $i0;
    }

    public java.lang.String format(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1, $r4;
        android.text.format.Time$TimeCalculator $r2, $r3;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r2.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r3 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $r4 = virtualinvoke $r3.<android.text.format.Time$TimeCalculator: java.lang.String format(java.lang.String)>(r1);

        return $r4;
    }

    public java.lang.String toString()
    {
        android.text.format.Time r0;
        android.text.format.Time$TimeCalculator r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: android.text.format.Time;

        $r2 = new android.text.format.Time$TimeCalculator;

        $r3 = r0.<android.text.format.Time: java.lang.String timezone>;

        specialinvoke $r2.<android.text.format.Time$TimeCalculator: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r4 = virtualinvoke r1.<android.text.format.Time$TimeCalculator: java.lang.String toStringInternal()>();

        return $r4;
    }

    public boolean parse(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("time string is null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<android.text.format.Time: boolean parseInternal(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label2:
        return 0;
    }

    private boolean parseInternal(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1, $r9, $r14;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23;
        boolean z0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        android.util.TimeFormatException $r3, $r8;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= 8 goto label1;

        $r8 = new android.util.TimeFormatException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String is too short: \"");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" Expected at least 8 characters.");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.util.TimeFormatException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        z0 = 0;

        i1 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 0, 1000);

        $i2 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 1, 100);

        i10 = i1 + $i2;

        $i3 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 2, 10);

        i11 = i10 + $i3;

        $i4 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 3, 1);

        i12 = i11 + $i4;

        r0.<android.text.format.Time: int year> = i12;

        i13 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 4, 10);

        $i5 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 5, 1);

        i14 = i13 + $i5;

        i15 = i14 + -1;

        r0.<android.text.format.Time: int month> = i15;

        i16 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 6, 10);

        $i6 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 7, 1);

        i17 = i16 + $i6;

        r0.<android.text.format.Time: int monthDay> = i17;

        if i0 <= 8 goto label3;

        if i0 >= 15 goto label2;

        $r3 = new android.util.TimeFormatException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String is too short: \"");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" If there are more than 8 characters there must be at least");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 15.");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<android.util.TimeFormatException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label2:
        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 8, 84);

        r0.<android.text.format.Time: boolean allDay> = 0;

        i18 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 9, 10);

        $i7 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 10, 1);

        i19 = i18 + $i7;

        r0.<android.text.format.Time: int hour> = i19;

        i20 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 11, 10);

        $i8 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 12, 1);

        i21 = i20 + $i8;

        r0.<android.text.format.Time: int minute> = i21;

        i22 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 13, 10);

        $i9 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 14, 1);

        i23 = i22 + $i9;

        r0.<android.text.format.Time: int second> = i23;

        if i0 <= 15 goto label4;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 15, 90);

        z0 = 1;

        goto label4;

     label3:
        r0.<android.text.format.Time: boolean allDay> = 1;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int second> = 0;

     label4:
        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return z0;
    }

    private void checkChar(java.lang.String, int, char)
    {
        android.text.format.Time r0;
        java.lang.String r1, $r7;
        int i0;
        char c1, c2;
        android.util.TimeFormatException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.Character $r8;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if c2 == c1 goto label1;

        $r2 = new android.util.TimeFormatException;

        $r3 = newarray (java.lang.Object)[4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c2);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c1);

        $r3[2] = $r6;

        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $r3[3] = $r8;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected character 0x%02d at pos=%d.  Expected 0x%02d (\'%c\').", $r3);

        specialinvoke $r2.<android.util.TimeFormatException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    private static int getChar(java.lang.String, int, int)
    {
        java.lang.String r0, $r5;
        int i0, i1, $i3, $i4;
        char c2;
        boolean $z0;
        android.util.TimeFormatException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c2);

        if $z0 == 0 goto label1;

        $i3 = staticinvoke <java.lang.Character: int getNumericValue(char)>(c2);

        $i4 = $i3 * i1;

        return $i4;

     label1:
        $r1 = new android.util.TimeFormatException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse error at pos=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.util.TimeFormatException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public boolean parse3339(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("time string is null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<android.text.format.Time: boolean parse3339Internal(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label2:
        return 0;
    }

    private boolean parse3339Internal(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1, $r4, $r9;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45;
        boolean z0, $z1;
        byte b5;
        char c6, $c24, $c25;
        android.util.TimeFormatException $r2, $r5, $r11;
        java.lang.Object[] $r3, $r8;
        java.lang.Integer $r6, $r7, $r10;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= 10 goto label01;

        $r11 = new android.util.TimeFormatException;

        specialinvoke $r11.<android.util.TimeFormatException: void <init>(java.lang.String)>("String too short --- expected at least 10 characters.");

        throw $r11;

     label01:
        z0 = 0;

        i1 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 0, 1000);

        $i7 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 1, 100);

        i26 = i1 + $i7;

        $i8 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 2, 10);

        i27 = i26 + $i8;

        $i9 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 3, 1);

        i28 = i27 + $i9;

        r0.<android.text.format.Time: int year> = i28;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 4, 45);

        i29 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 5, 10);

        $i10 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 6, 1);

        i30 = i29 + $i10;

        i31 = i30 + -1;

        r0.<android.text.format.Time: int month> = i31;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 7, 45);

        i32 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 8, 10);

        $i11 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 9, 1);

        i33 = i32 + $i11;

        r0.<android.text.format.Time: int monthDay> = i33;

        if i0 < 19 goto label12;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 10, 84);

        r0.<android.text.format.Time: boolean allDay> = 0;

        i34 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 11, 10);

        $i12 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 12, 1);

        i35 = i34 + $i12;

        i2 = i35;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 13, 58);

        i36 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 14, 10);

        $i13 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 15, 1);

        i37 = i36 + $i13;

        i3 = i37;

        specialinvoke r0.<android.text.format.Time: void checkChar(java.lang.String,int,char)>(r1, 16, 58);

        i38 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 17, 10);

        $i15 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, 18, 1);

        i39 = i38 + $i15;

        r0.<android.text.format.Time: int second> = i39;

        i4 = 19;

        if i4 >= i0 goto label03;

        $c24 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if $c24 != 46 goto label03;

     label02:
        i4 = i4 + 1;

        if i4 >= i0 goto label03;

        $c25 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c25);

        if $z1 != 0 goto label02;

     label03:
        b5 = 0;

        if i0 <= i4 goto label10;

        c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        lookupswitch(c6)
        {
            case 43: goto label06;
            case 45: goto label05;
            case 90: goto label04;
            default: goto label07;
        };

     label04:
        b5 = 0;

        goto label08;

     label05:
        b5 = 1;

        goto label08;

     label06:
        b5 = -1;

        goto label08;

     label07:
        $r5 = new android.util.TimeFormatException;

        $r8 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(c6);

        $r8[0] = $r7;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r8[1] = $r10;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected character 0x%02d at position %d.  Expected + or -", $r8);

        specialinvoke $r5.<android.util.TimeFormatException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label08:
        z0 = 1;

        if b5 == 0 goto label10;

        $i16 = i4 + 6;

        if i0 >= $i16 goto label09;

        $r2 = new android.util.TimeFormatException;

        $r3 = newarray (java.lang.Object)[1];

        $i23 = i4 + 6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r3[0] = $r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected length; should be %d characters", $r3);

        specialinvoke $r2.<android.util.TimeFormatException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label09:
        $i17 = i4 + 1;

        i40 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, $i17, 10);

        $i19 = i4 + 2;

        $i18 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, $i19, 1);

        i41 = i40 + $i18;

        i42 = i41 * b5;

        i2 = i2 + i42;

        $i22 = i4 + 4;

        i43 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, $i22, 10);

        $i20 = i4 + 5;

        $i21 = staticinvoke <android.text.format.Time: int getChar(java.lang.String,int,int)>(r1, $i20, 1);

        i44 = i43 + $i21;

        i45 = i44 * b5;

        i3 = i3 + i45;

     label10:
        r0.<android.text.format.Time: int hour> = i2;

        r0.<android.text.format.Time: int minute> = i3;

        if b5 == 0 goto label11;

        virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(0);

     label11:
        goto label13;

     label12:
        r0.<android.text.format.Time: boolean allDay> = 1;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int second> = 0;

     label13:
        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return z0;
    }

    public static java.lang.String getCurrentTimezone()
    {
        java.util.TimeZone $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r1 = virtualinvoke $r0.<java.util.TimeZone: java.lang.String getID()>();

        return $r1;
    }

    public void setToNow()
    {
        android.text.format.Time r0;
        long $l0;

        r0 := @this: android.text.format.Time;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<android.text.format.Time: void set(long)>($l0);

        return;
    }

    public long toMillis(boolean)
    {
        android.text.format.Time r0;
        boolean z0;
        android.text.format.Time$TimeCalculator $r1, $r2;
        long $l0;

        r0 := @this: android.text.format.Time;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r1.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $l0 = virtualinvoke $r2.<android.text.format.Time$TimeCalculator: long toMillis(boolean)>(z0);

        return $l0;
    }

    public void set(long)
    {
        android.text.format.Time r0;
        long l0;
        java.lang.String $r1;
        android.text.format.Time$TimeCalculator $r2, $r3, $r4;

        r0 := @this: android.text.format.Time;

        l0 := @parameter0: long;

        r0.<android.text.format.Time: boolean allDay> = 0;

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $r1 = r0.<android.text.format.Time: java.lang.String timezone>;

        $r2.<android.text.format.Time$TimeCalculator: java.lang.String timezone> = $r1;

        $r3 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r3.<android.text.format.Time$TimeCalculator: void setTimeInMillis(long)>(l0);

        $r4 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r4.<android.text.format.Time$TimeCalculator: void copyFieldsToTime(android.text.format.Time)>(r0);

        return;
    }

    public java.lang.String format2445()
    {
        android.text.format.Time r0;
        android.text.format.Time$TimeCalculator $r1, $r2;
        boolean $z0, $z1;
        java.lang.String $r3;

        r0 := @this: android.text.format.Time;

        $r1 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        virtualinvoke $r1.<android.text.format.Time$TimeCalculator: void copyFieldsFromTime(android.text.format.Time)>(r0);

        $r2 = r0.<android.text.format.Time: android.text.format.Time$TimeCalculator calculator>;

        $z0 = r0.<android.text.format.Time: boolean allDay>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r3 = virtualinvoke $r2.<android.text.format.Time$TimeCalculator: java.lang.String format2445(boolean)>($z1);

        return $r3;
    }

    public void set(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r1.<android.text.format.Time: java.lang.String timezone>;

        r0.<android.text.format.Time: java.lang.String timezone> = $r2;

        $z0 = r1.<android.text.format.Time: boolean allDay>;

        r0.<android.text.format.Time: boolean allDay> = $z0;

        $i0 = r1.<android.text.format.Time: int second>;

        r0.<android.text.format.Time: int second> = $i0;

        $i1 = r1.<android.text.format.Time: int minute>;

        r0.<android.text.format.Time: int minute> = $i1;

        $i2 = r1.<android.text.format.Time: int hour>;

        r0.<android.text.format.Time: int hour> = $i2;

        $i3 = r1.<android.text.format.Time: int monthDay>;

        r0.<android.text.format.Time: int monthDay> = $i3;

        $i4 = r1.<android.text.format.Time: int month>;

        r0.<android.text.format.Time: int month> = $i4;

        $i5 = r1.<android.text.format.Time: int year>;

        r0.<android.text.format.Time: int year> = $i5;

        $i6 = r1.<android.text.format.Time: int weekDay>;

        r0.<android.text.format.Time: int weekDay> = $i6;

        $i7 = r1.<android.text.format.Time: int yearDay>;

        r0.<android.text.format.Time: int yearDay> = $i7;

        $i8 = r1.<android.text.format.Time: int isDst>;

        r0.<android.text.format.Time: int isDst> = $i8;

        $l9 = r1.<android.text.format.Time: long gmtoff>;

        r0.<android.text.format.Time: long gmtoff> = $l9;

        return;
    }

    public void set(int, int, int, int, int, int)
    {
        android.text.format.Time r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r0.<android.text.format.Time: boolean allDay> = 0;

        r0.<android.text.format.Time: int second> = i0;

        r0.<android.text.format.Time: int minute> = i1;

        r0.<android.text.format.Time: int hour> = i2;

        r0.<android.text.format.Time: int monthDay> = i3;

        r0.<android.text.format.Time: int month> = i4;

        r0.<android.text.format.Time: int year> = i5;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public void set(int, int, int)
    {
        android.text.format.Time r0;
        int i0, i1, i2;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.text.format.Time: boolean allDay> = 1;

        r0.<android.text.format.Time: int second> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int monthDay> = i0;

        r0.<android.text.format.Time: int month> = i1;

        r0.<android.text.format.Time: int year> = i2;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public boolean before(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>(r0, r1);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean after(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>(r0, r1);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getWeekNumber()
    {
        android.text.format.Time r0, r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        int[] $r2, $r4;

        r0 := @this: android.text.format.Time;

        $i3 = r0.<android.text.format.Time: int yearDay>;

        $r2 = <android.text.format.Time: int[] sThursdayOffset>;

        $i1 = r0.<android.text.format.Time: int weekDay>;

        $i2 = $r2[$i1];

        i0 = $i3 + $i2;

        if i0 < 0 goto label1;

        if i0 > 364 goto label1;

        $i11 = i0 / 7;

        $i13 = $i11 + 1;

        return $i13;

     label1:
        $r3 = new android.text.format.Time;

        specialinvoke $r3.<android.text.format.Time: void <init>(android.text.format.Time)>(r0);

        r1 = $r3;

        $i6 = r1.<android.text.format.Time: int monthDay>;

        $r4 = <android.text.format.Time: int[] sThursdayOffset>;

        $i4 = r0.<android.text.format.Time: int weekDay>;

        $i5 = $r4[$i4];

        $i7 = $i6 + $i5;

        r1.<android.text.format.Time: int monthDay> = $i7;

        virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

        $i9 = r1.<android.text.format.Time: int yearDay>;

        $i10 = $i9 / 7;

        $i12 = $i10 + 1;

        return $i12;
    }

    public java.lang.String format3339(boolean)
    {
        android.text.format.Time r0;
        boolean z0, $z1;
        java.lang.String r1, r2, $r3, $r4, $r8, $r10, $r11, $r12;
        int i0, i1, i2, $i7;
        long $l3, $l5, $l6;
        byte $b4;
        java.util.Locale $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7, $r9;

        r0 := @this: android.text.format.Time;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%d");

        return $r12;

     label1:
        $r4 = "UTC";

        $r3 = r0.<android.text.format.Time: java.lang.String timezone>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000Z");

        return $r10;

     label2:
        r1 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000");

        $l3 = r0.<android.text.format.Time: long gmtoff>;

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label3;

        $r11 = "-";

        goto label4;

     label3:
        $r11 = "+";

     label4:
        r2 = $r11;

        $l5 = r0.<android.text.format.Time: long gmtoff>;

        $l6 = staticinvoke <java.lang.Math: long abs(long)>($l5);

        i0 = (int) $l6;

        $i7 = i0 % 3600;

        i1 = $i7 / 60;

        i2 = i0 / 3600;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[4];

        $r6[0] = r1;

        $r6[1] = r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6[2] = $r7;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[3] = $r9;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "%s%s%02d:%02d", $r6);

        return $r8;
    }

    public static boolean isEpoch(android.text.format.Time)
    {
        android.text.format.Time r0;
        long l0;
        int $i1;
        boolean $z0;

        r0 := @parameter0: android.text.format.Time;

        l0 = virtualinvoke r0.<android.text.format.Time: long toMillis(boolean)>(1);

        $i1 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l0, 0L);

        if $i1 != 2440588 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int getJulianDay(long, long)
    {
        long l0, l1, l2, l3, $l4;
        int $i5, $i6;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 = l1 * 1000L;

        $l4 = l0 + l2;

        l3 = $l4 / 86400000L;

        $i5 = (int) l3;

        $i6 = $i5 + 2440588;

        return $i6;
    }

    public long setJulianDay(int)
    {
        android.text.format.Time r0;
        int i0, i2, i3, $i4, $i7, $i8;
        long l1, $l5, $l6, l9;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        $i4 = i0 - 2440588;

        $l5 = (long) $i4;

        l1 = $l5 * 86400000L;

        virtualinvoke r0.<android.text.format.Time: void set(long)>(l1);

        $l6 = r0.<android.text.format.Time: long gmtoff>;

        i2 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l1, $l6);

        i3 = i0 - i2;

        $i7 = r0.<android.text.format.Time: int monthDay>;

        $i8 = $i7 + i3;

        r0.<android.text.format.Time: int monthDay> = $i8;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int second> = 0;

        l9 = virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(1);

        return l9;
    }

    public static int getWeeksSinceEpochFromJulianDay(int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = 4 - i1;

        if i2 >= 0 goto label1;

        i2 = i2 + 7;

     label1:
        i3 = 2440588 - i2;

        $i4 = i0 - i3;

        $i5 = $i4 / 7;

        return $i5;
    }

    public static int getJulianMondayFromWeeksSinceEpoch(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 * 7;

        $i2 = 2440585 + $i1;

        return $i2;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;

        <android.text.format.Time: int SATURDAY> = 6;

        <android.text.format.Time: int FRIDAY> = 5;

        <android.text.format.Time: int THURSDAY> = 4;

        <android.text.format.Time: int WEDNESDAY> = 3;

        <android.text.format.Time: int TUESDAY> = 2;

        <android.text.format.Time: int MONDAY> = 1;

        <android.text.format.Time: int SUNDAY> = 0;

        <android.text.format.Time: int WEEK_NUM> = 9;

        <android.text.format.Time: int YEAR_DAY> = 8;

        <android.text.format.Time: int WEEK_DAY> = 7;

        <android.text.format.Time: int YEAR> = 6;

        <android.text.format.Time: int MONTH> = 5;

        <android.text.format.Time: int MONTH_DAY> = 4;

        <android.text.format.Time: int HOUR> = 3;

        <android.text.format.Time: int MINUTE> = 2;

        <android.text.format.Time: int SECOND> = 1;

        <android.text.format.Time: int MONDAY_BEFORE_JULIAN_EPOCH> = 2440585;

        <android.text.format.Time: int EPOCH_JULIAN_DAY> = 2440588;

        <android.text.format.Time: java.lang.String TIMEZONE_UTC> = "UTC";

        <android.text.format.Time: java.lang.String Y_M_D> = "%Y-%m-%d";

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000_Z> = "%Y-%m-%dT%H:%M:%S.000Z";

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000> = "%Y-%m-%dT%H:%M:%S.000";

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <android.text.format.Time: int[] DAYS_PER_MONTH> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = -3;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 0;

        $r1[5] = -1;

        $r1[6] = -2;

        <android.text.format.Time: int[] sThursdayOffset> = $r1;

        return;
    }
}
