public class android.filterpacks.videosrc.SurfaceTextureTarget extends android.filterfw.core.Filter
{
    private final int RENDERMODE_STRETCH;
    private final int RENDERMODE_FIT;
    private final int RENDERMODE_FILL_CROP;
    private final int RENDERMODE_CUSTOMIZE;
    private android.graphics.SurfaceTexture mSurfaceTexture;
    private int mScreenWidth;
    private int mScreenHeight;
    private java.lang.String mRenderModeString;
    private android.filterfw.geometry.Quad mSourceQuad;
    private android.filterfw.geometry.Quad mTargetQuad;
    private int mSurfaceId;
    private android.filterfw.core.ShaderProgram mProgram;
    private android.filterfw.core.GLFrame mScreen;
    private int mRenderMode;
    private float mAspectRatio;
    private boolean mLogVerbose;
    private static final java.lang.String TAG;

    public void <init>(java.lang.String)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        java.lang.String r1;
        android.filterfw.geometry.Quad $r2, $r7;
        android.filterfw.geometry.Point $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int RENDERMODE_STRETCH> = 0;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int RENDERMODE_FIT> = 1;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int RENDERMODE_FILL_CROP> = 2;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int RENDERMODE_CUSTOMIZE> = 3;

        $r2 = new android.filterfw.geometry.Quad;

        $r3 = new android.filterfw.geometry.Point;

        specialinvoke $r3.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 1.0F);

        $r4 = new android.filterfw.geometry.Point;

        specialinvoke $r4.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 1.0F);

        $r5 = new android.filterfw.geometry.Point;

        specialinvoke $r5.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 0.0F);

        $r6 = new android.filterfw.geometry.Point;

        specialinvoke $r6.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 0.0F);

        specialinvoke $r2.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r4, $r5, $r6);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mSourceQuad> = $r2;

        $r7 = new android.filterfw.geometry.Quad;

        $r8 = new android.filterfw.geometry.Point;

        specialinvoke $r8.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 0.0F);

        $r9 = new android.filterfw.geometry.Point;

        specialinvoke $r9.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 0.0F);

        $r10 = new android.filterfw.geometry.Point;

        specialinvoke $r10.<android.filterfw.geometry.Point: void <init>(float,float)>(0.0F, 1.0F);

        $r11 = new android.filterfw.geometry.Point;

        specialinvoke $r11.<android.filterfw.geometry.Point: void <init>(float,float)>(1.0F, 1.0F);

        specialinvoke $r7.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r8, $r9, $r10, $r11);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad> = $r7;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode> = 1;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio> = 1.0F;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SurfaceTextureTarget", 2);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose> = $z0;

        return;
    }

    public synchronized void setupPorts()
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.graphics.SurfaceTexture $r1;
        android.filterfw.core.MutableFrameFormat $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        $r1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        if $r1 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Null SurfaceTexture passed to SurfaceTextureTarget");

        throw $r3;

     label1:
        $r2 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("frame", $r2);

        return;
    }

    public void updateRenderMode()
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r9, $r11, $r16;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r12, $r13, $r15, $r17;
        java.lang.Thread $r14;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        $z0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRenderMode. Thread: ");

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r16);

     label1:
        $r1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        if $r1 == null goto label6;

        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("stretch");

        if $z1 == 0 goto label2;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode> = 0;

        goto label6;

     label2:
        $r3 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("fit");

        if $z2 == 0 goto label3;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode> = 1;

        goto label6;

     label3:
        $r4 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("fill_crop");

        if $z3 == 0 goto label4;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode> = 2;

        goto label6;

     label4:
        $r5 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("customize");

        if $z4 == 0 goto label5;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode> = 3;

        goto label6;

     label5:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown render mode \'");

        $r9 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String mRenderModeString>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label6:
        specialinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: void updateTargetRect()>();

        return;
    }

    public void prepare(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.MutableFrameFormat r2, $r6;
        boolean $z0;
        android.filterfw.core.ShaderProgram $r3, $r4, $r5;
        int $i0, $i1;
        android.filterfw.core.FrameManager $r7;
        android.filterfw.core.Frame $r8;
        android.filterfw.core.GLFrame $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.Thread $r13;
        java.lang.String $r14;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prepare. Thread: ");

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r14);

     label1:
        $r3 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram> = $r3;

        $r4 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r4.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(0.0F, 1.0F, 1.0F, -1.0F);

        $r5 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r5.<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>(0.0F, 0.0F, 0.0F);

        virtualinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: void updateRenderMode()>();

        $r6 = new android.filterfw.core.MutableFrameFormat;

        specialinvoke $r6.<android.filterfw.core.MutableFrameFormat: void <init>(int,int)>(2, 3);

        r2 = $r6;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>(4);

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenWidth>;

        $i0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenHeight>;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>($i1, $i0);

        $r7 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r8 = virtualinvoke $r7.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>(r2, 101, 0L);

        $r9 = (android.filterfw.core.GLFrame) $r8;

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.GLFrame mScreen> = $r9;

        return;
    }

    public synchronized void open(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        android.graphics.SurfaceTexture $r2, $r4, $r8, $r13;
        android.filterfw.core.GLEnvironment $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r5, $r12;
        java.lang.StringBuilder $r6, $r7, $r9, $r11, $r14, $r16;
        java.lang.String $r10, $r15;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SurfaceTextureTarget", "SurfaceTexture is null!!");

        $r12 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not register SurfaceTexture: ");

        $r13 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label1:
        $r3 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        $r4 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenWidth>;

        $i0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenHeight>;

        $i2 = virtualinvoke $r3.<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)>($r4, $i1, $i0);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId> = $i2;

        $i3 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        if $i3 > 0 goto label2;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not register SurfaceTexture: ");

        $r8 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        return;
    }

    public synchronized void close(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        int $i0, $i1;
        android.filterfw.core.GLEnvironment $r2;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $i0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        virtualinvoke $r2.<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>($i1);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId> = -1;

     label1:
        return;
    }

    public synchronized void disconnect(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        boolean $z0;
        android.graphics.SurfaceTexture $r2;
        int $i0, $i1;
        android.filterfw.core.GLEnvironment $r3;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", "disconnect");

     label1:
        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SurfaceTextureTarget", "SurfaceTexture is already null. Nothing to disconnect.");

        return;

     label2:
        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.graphics.SurfaceTexture mSurfaceTexture> = null;

        $i0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        if $i0 <= 0 goto label3;

        $r3 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        virtualinvoke $r3.<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>($i1);

        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId> = -1;

     label3:
        return;
    }

    public synchronized void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLEnvironment r2;
        android.filterfw.core.Frame r3, r19;
        boolean z0, $z1;
        float f0, $f1, $f2, $f3, $f4;
        int i0, $i1, $i2, $i3, $i5;
        android.filterfw.core.FrameFormat $r4, $r5, $r6;
        byte $b4;
        android.filterfw.core.ShaderProgram $r7;
        android.filterfw.core.GLFrame $r8;
        long $l6;
        android.filterfw.core.FrameManager $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        java.lang.String $r16;
        java.lang.Thread $r18;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        if $i1 > 0 goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        r3 = virtualinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.Frame pullInput(java.lang.String)>("frame");

        z0 = 0;

        $r4 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i2 = virtualinvoke $r4.<android.filterfw.core.FrameFormat: int getWidth()>();

        $f1 = (float) $i2;

        $r5 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i3 = virtualinvoke $r5.<android.filterfw.core.FrameFormat: int getHeight()>();

        $f3 = (float) $i3;

        f0 = $f1 / $f3;

        $f2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio>;

        $b4 = f0 cmpl $f2;

        if $b4 == 0 goto label3;

        $z1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z1 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process. New aspect ratio: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previously: ");

        $f4 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio>;

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Thread: ");

        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r16);

     label2:
        r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio> = f0;

        specialinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: void updateTargetRect()>();

     label3:
        $r6 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        i0 = virtualinvoke $r6.<android.filterfw.core.FrameFormat: int getTarget()>();

        if i0 == 3 goto label4;

        $r9 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r19 = virtualinvoke $r9.<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>(r3, 3);

        z0 = 1;

        goto label5;

     label4:
        r19 = r3;

     label5:
        $i5 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mSurfaceId>;

        virtualinvoke r2.<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>($i5);

        $r7 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        $r8 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.GLFrame mScreen>;

        virtualinvoke $r7.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r19, $r8);

        $l6 = virtualinvoke r3.<android.filterfw.core.Frame: long getTimestamp()>();

        virtualinvoke r2.<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)>($l6);

        virtualinvoke r2.<android.filterfw.core.GLEnvironment: void swapBuffers()>();

        if z0 == 0 goto label6;

        virtualinvoke r19.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label6:
        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        java.lang.String r1, $r7;
        android.filterfw.core.FilterContext r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Thread $r5;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FPVU. Thread: ");

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r7);

     label1:
        virtualinvoke r0.<android.filterpacks.videosrc.SurfaceTextureTarget: void updateRenderMode()>();

        return;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLFrame $r2, $r3;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.GLFrame mScreen>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.GLFrame mScreen>;

        virtualinvoke $r3.<android.filterfw.core.GLFrame: android.filterfw.core.Frame release()>();

     label1:
        return;
    }

    private void updateTargetRect()
    {
        android.filterpacks.videosrc.SurfaceTextureTarget r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i5, $i9, $i10, $i11;
        android.filterfw.core.ShaderProgram $r1, $r9, $r13, $r18, $r28, $r42, $r55, $r57;
        byte $b4, $b7, $b8;
        android.filterfw.geometry.Quad $r2, $r3, $r5, $r7, $r11, $r16, $r17, $r20, $r22, $r24, $r25, $r27, $r30, $r32, $r35, $r37, $r39, $r41, $r44, $r46, $r48, $r51, $r53;
        android.filterfw.geometry.Point $r4, $r6, $r8, $r10, $r21, $r23, $r26, $r29, $r31, $r33, $r34, $r36, $r38, $r40, $r43, $r45, $r47, $r49, $r50, $r52;
        java.lang.StringBuilder $r12, $r14, $r15, $r54, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r70, $r72;
        java.lang.String $r19, $r65, $r71;
        java.lang.Thread $r69;

        r0 := @this: android.filterpacks.videosrc.SurfaceTextureTarget;

        $z0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z0 == 0 goto label01;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateTargetRect. Thread: ");

        $r69 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r71);

     label01:
        $i0 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenWidth>;

        if $i0 <= 0 goto label14;

        $i1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenHeight>;

        if $i1 <= 0 goto label14;

        $r1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        if $r1 == null goto label14;

        $i2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenWidth>;

        $f3 = (float) $i2;

        $i3 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenHeight>;

        $f2 = (float) $i3;

        f0 = $f3 / $f2;

        $f4 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio>;

        f1 = f0 / $f4;

        $z1 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z1 == 0 goto label02;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTR. screen w = ");

        $i9 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenWidth>;

        $f37 = (float) $i9;

        $r63 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f37);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x screen h = ");

        $i11 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mScreenHeight>;

        $f38 = (float) $i11;

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f38);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Screen AR: ");

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", frame AR: ");

        $f39 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: float mAspectRatio>;

        $r68 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f39);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", relative AR: ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r65);

     label02:
        $b4 = f1 cmpl 1.0F;

        if $b4 != 0 goto label03;

        $i10 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode>;

        if $i10 == 3 goto label03;

        $r57 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r57.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, 0.0F, 1.0F, 1.0F);

        $r55 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r55.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(0);

        goto label14;

     label03:
        $i5 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: int mRenderMode>;

        tableswitch($i5)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label08;
            case 3: goto label11;
            default: goto label12;
        };

     label04:
        $r2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r4 = $r2.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        virtualinvoke $r4.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, 0.0F);

        $r3 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r6 = $r3.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        virtualinvoke $r6.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, 0.0F);

        $r5 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r8 = $r5.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        virtualinvoke $r8.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, 1.0F);

        $r7 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r10 = $r7.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        virtualinvoke $r10.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, 1.0F);

        $r9 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r9.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(0);

        goto label12;

     label05:
        $b8 = f1 cmpl 1.0F;

        if $b8 <= 0 goto label06;

        $r48 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r49 = $r48.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f31 = 0.5F / f1;

        $f32 = 0.5F - $f31;

        virtualinvoke $r49.<android.filterfw.geometry.Point: void set(float,float)>($f32, 0.0F);

        $r46 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r47 = $r46.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f29 = 0.5F / f1;

        $f30 = 0.5F + $f29;

        virtualinvoke $r47.<android.filterfw.geometry.Point: void set(float,float)>($f30, 0.0F);

        $r53 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r52 = $r53.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f36 = 0.5F / f1;

        $f35 = 0.5F - $f36;

        virtualinvoke $r52.<android.filterfw.geometry.Point: void set(float,float)>($f35, 1.0F);

        $r51 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r50 = $r51.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f34 = 0.5F / f1;

        $f33 = 0.5F + $f34;

        virtualinvoke $r50.<android.filterfw.geometry.Point: void set(float,float)>($f33, 1.0F);

        goto label07;

     label06:
        $r35 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r40 = $r35.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f23 = 0.5F * f1;

        $f24 = 0.5F - $f23;

        virtualinvoke $r40.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, $f24);

        $r41 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r38 = $r41.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f21 = 0.5F * f1;

        $f22 = 0.5F - $f21;

        virtualinvoke $r38.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, $f22);

        $r39 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r45 = $r39.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f28 = 0.5F * f1;

        $f27 = 0.5F + $f28;

        virtualinvoke $r45.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, $f27);

        $r44 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r43 = $r44.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f26 = 0.5F * f1;

        $f25 = 0.5F + $f26;

        virtualinvoke $r43.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, $f25);

     label07:
        $r42 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r42.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        goto label12;

     label08:
        $b7 = f1 cmpl 1.0F;

        if $b7 <= 0 goto label09;

        $r27 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r31 = $r27.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f13 = 0.5F * f1;

        $f15 = 0.5F - $f13;

        virtualinvoke $r31.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, $f15);

        $r30 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r33 = $r30.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f14 = 0.5F * f1;

        $f17 = 0.5F - $f14;

        virtualinvoke $r33.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, $f17);

        $r32 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r36 = $r32.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f16 = 0.5F * f1;

        $f19 = 0.5F + $f16;

        virtualinvoke $r36.<android.filterfw.geometry.Point: void set(float,float)>(0.0F, $f19);

        $r37 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r34 = $r37.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f20 = 0.5F * f1;

        $f18 = 0.5F + $f20;

        virtualinvoke $r34.<android.filterfw.geometry.Point: void set(float,float)>(1.0F, $f18);

        goto label10;

     label09:
        $r20 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r21 = $r20.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f5 = 0.5F / f1;

        $f6 = 0.5F - $f5;

        virtualinvoke $r21.<android.filterfw.geometry.Point: void set(float,float)>($f6, 0.0F);

        $r22 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r23 = $r22.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f7 = 0.5F / f1;

        $f8 = 0.5F + $f7;

        virtualinvoke $r23.<android.filterfw.geometry.Point: void set(float,float)>($f8, 0.0F);

        $r24 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r26 = $r24.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f9 = 0.5F / f1;

        $f10 = 0.5F - $f9;

        virtualinvoke $r26.<android.filterfw.geometry.Point: void set(float,float)>($f10, 1.0F);

        $r25 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r29 = $r25.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f12 = 0.5F / f1;

        $f11 = 0.5F + $f12;

        virtualinvoke $r29.<android.filterfw.geometry.Point: void set(float,float)>($f11, 1.0F);

     label10:
        $r28 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r28.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        goto label12;

     label11:
        $r18 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        $r17 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mSourceQuad>;

        virtualinvoke $r18.<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>($r17);

     label12:
        $z2 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: boolean mLogVerbose>;

        if $z2 == 0 goto label13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTR. quad: ");

        $r16 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceTextureTarget", $r19);

     label13:
        $r13 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.core.ShaderProgram mProgram>;

        $r11 = r0.<android.filterpacks.videosrc.SurfaceTextureTarget: android.filterfw.geometry.Quad mTargetQuad>;

        virtualinvoke $r13.<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>($r11);

     label14:
        return;
    }

    public static void <clinit>()
    {
        <android.filterpacks.videosrc.SurfaceTextureTarget: java.lang.String TAG> = "SurfaceTextureTarget";

        return;
    }
}
