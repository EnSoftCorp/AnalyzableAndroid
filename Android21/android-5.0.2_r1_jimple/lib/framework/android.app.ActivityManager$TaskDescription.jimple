public class android.app.ActivityManager$TaskDescription extends java.lang.Object implements android.os.Parcelable
{
    public static final java.lang.String ATTR_TASKDESCRIPTION_PREFIX;
    private static final java.lang.String ATTR_TASKDESCRIPTIONLABEL;
    private static final java.lang.String ATTR_TASKDESCRIPTIONCOLOR;
    private static final java.lang.String ATTR_TASKDESCRIPTIONICONFILENAME;
    private java.lang.String mLabel;
    private android.graphics.Bitmap mIcon;
    private java.lang.String mIconFilename;
    private int mColorPrimary;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(java.lang.String, android.graphics.Bitmap, int)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1;
        android.graphics.Bitmap r2;
        int i0, $i1;
        java.lang.RuntimeException $r3;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Bitmap;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 0 goto label1;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i1 == 255 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("A TaskDescription\'s primary color should be opaque");

        throw $r3;

     label1:
        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel> = r1;

        r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon> = r2;

        r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary> = i0;

        return;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.app.ActivityManager$TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>(r1, null, i0);

        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename> = r2;

        return;
    }

    public void <init>(java.lang.String, android.graphics.Bitmap)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1;
        android.graphics.Bitmap r2;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Bitmap;

        specialinvoke r0.<android.app.ActivityManager$TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>(r1, r2, 0);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.ActivityManager$TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>(r1, null, 0);

        return;
    }

    public void <init>()
    {
        android.app.ActivityManager$TaskDescription r0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        specialinvoke r0.<android.app.ActivityManager$TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>(null, null, 0);

        return;
    }

    public void <init>(android.app.ActivityManager$TaskDescription)
    {
        android.app.ActivityManager$TaskDescription r0, r1;
        java.lang.String $r2, $r4;
        android.graphics.Bitmap $r3;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.app.ActivityManager$TaskDescription;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel> = $r2;

        $r3 = r1.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon> = $r3;

        $i0 = r1.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary> = $i0;

        $r4 = r1.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename> = $r4;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.app.ActivityManager$TaskDescription r0;
        android.os.Parcel r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.app.ActivityManager$TaskDescription: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public void setLabel(java.lang.String)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel> = r1;

        return;
    }

    public void setPrimaryColor(int)
    {
        android.app.ActivityManager$TaskDescription r0;
        int i0, $i1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i1 == 255 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("A TaskDescription\'s primary color should be opaque");

        throw $r1;

     label1:
        r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary> = i0;

        return;
    }

    public void setIcon(android.graphics.Bitmap)
    {
        android.app.ActivityManager$TaskDescription r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon> = r1;

        return;
    }

    public void setIconFilename(java.lang.String)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename> = r1;

        r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon> = null;

        return;
    }

    public java.lang.String getLabel()
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String $r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $r1 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        return $r1;
    }

    public android.graphics.Bitmap getIcon()
    {
        android.app.ActivityManager$TaskDescription r0;
        android.graphics.Bitmap $r1, $r3, $r4;
        java.lang.String $r2;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $r1 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        if $r1 == null goto label1;

        $r4 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        return $r4;

     label1:
        $r2 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        $r3 = staticinvoke <android.app.ActivityManager$TaskDescription: android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String getIconFilename()
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String $r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $r1 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        return $r1;
    }

    public android.graphics.Bitmap getInMemoryIcon()
    {
        android.app.ActivityManager$TaskDescription r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $r1 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        return $r1;
    }

    public static android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String)
    {
        java.lang.String r0;
        android.app.IActivityManager $r2;
        android.graphics.Bitmap $r3;
        android.os.RemoteException $r4;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r3 = interfaceinvoke $r2.<android.app.IActivityManager: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>(r0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPrimaryColor()
    {
        android.app.ActivityManager$TaskDescription r0;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $i0 = r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        return $i0;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.app.ActivityManager$TaskDescription r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String $r2, $r3, $r4, $r6, $r8;
        int $i0, $i1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        if $r2 == null goto label1;

        $r8 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "task_description_label", $r8);

     label1:
        $i0 = r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        if $i0 == 0 goto label2;

        $i1 = r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "task_description_color", $r6);

     label2:
        $r3 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        if $r3 == null goto label3;

        $r4 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "task_description_icon_filename", $r4);

     label3:
        return;
    }

    public void restoreFromXml(java.lang.String, java.lang.String)
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.String r1, r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        long $l0;
        int $i1;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = "task_description_label";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.ActivityManager$TaskDescription: void setLabel(java.lang.String)>(r2);

        goto label3;

     label1:
        $r4 = "task_description_color";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r2, 16);

        $i1 = (int) $l0;

        virtualinvoke r0.<android.app.ActivityManager$TaskDescription: void setPrimaryColor(int)>($i1);

        goto label3;

     label2:
        $r5 = "task_description_icon_filename";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        virtualinvoke r0.<android.app.ActivityManager$TaskDescription: void setIconFilename(java.lang.String)>(r2);

     label3:
        return;
    }

    public int describeContents()
    {
        android.app.ActivityManager$TaskDescription r0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.ActivityManager$TaskDescription r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2, $r3, $r6, $r7;
        android.graphics.Bitmap $r4, $r5;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        if $r2 != null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r3 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

     label2:
        $r4 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        if $r4 != null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label4;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r5 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        virtualinvoke $r5.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label4:
        $i1 = r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r6 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        if $r6 != null goto label5;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r7 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

     label6:
        return;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.app.ActivityManager$TaskDescription r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r6;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i0 <= 0 goto label1;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel> = $r6;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 <= 0 goto label3;

        $r3 = <android.graphics.Bitmap: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r5 = (android.graphics.Bitmap) $r4;

        goto label4;

     label3:
        $r5 = null;

     label4:
        r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon> = $r5;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 <= 0 goto label5;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        goto label6;

     label5:
        $r2 = null;

     label6:
        r0.<android.app.ActivityManager$TaskDescription: java.lang.String mIconFilename> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        android.app.ActivityManager$TaskDescription r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r3, $r10;
        android.graphics.Bitmap $r6;
        int $i0;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaskDescription Label: ");

        $r3 = r0.<android.app.ActivityManager$TaskDescription: java.lang.String mLabel>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Icon: ");

        $r6 = r0.<android.app.ActivityManager$TaskDescription: android.graphics.Bitmap mIcon>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" colorPrimary: ");

        $i0 = r0.<android.app.ActivityManager$TaskDescription: int mColorPrimary>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    void <init>(android.os.Parcel, android.app.ActivityManager$1)
    {
        android.app.ActivityManager$TaskDescription r0;
        android.os.Parcel r1;
        android.app.ActivityManager$1 r2;

        r0 := @this: android.app.ActivityManager$TaskDescription;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.app.ActivityManager$1;

        specialinvoke r0.<android.app.ActivityManager$TaskDescription: void <init>(android.os.Parcel)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.app.ActivityManager$TaskDescription$1 $r0;

        <android.app.ActivityManager$TaskDescription: java.lang.String ATTR_TASKDESCRIPTIONICONFILENAME> = "task_description_icon_filename";

        <android.app.ActivityManager$TaskDescription: java.lang.String ATTR_TASKDESCRIPTIONCOLOR> = "task_description_color";

        <android.app.ActivityManager$TaskDescription: java.lang.String ATTR_TASKDESCRIPTIONLABEL> = "task_description_label";

        <android.app.ActivityManager$TaskDescription: java.lang.String ATTR_TASKDESCRIPTION_PREFIX> = "task_description_";

        $r0 = new android.app.ActivityManager$TaskDescription$1;

        specialinvoke $r0.<android.app.ActivityManager$TaskDescription$1: void <init>()>();

        <android.app.ActivityManager$TaskDescription: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
