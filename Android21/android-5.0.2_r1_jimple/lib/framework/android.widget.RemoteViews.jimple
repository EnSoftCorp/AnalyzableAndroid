public class android.widget.RemoteViews extends java.lang.Object implements android.os.Parcelable, android.view.LayoutInflater$Filter
{
    private static final java.lang.String LOG_TAG;
    static final java.lang.String EXTRA_REMOTEADAPTER_APPWIDGET_ID;
    private android.content.pm.ApplicationInfo mApplication;
    private final int mLayoutId;
    private java.util.ArrayList mActions;
    private android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter;
    private android.widget.RemoteViews$BitmapCache mBitmapCache;
    private boolean mIsRoot;
    private static final int MODE_NORMAL;
    private static final int MODE_HAS_LANDSCAPE_AND_PORTRAIT;
    private android.widget.RemoteViews mLandscape;
    private android.widget.RemoteViews mPortrait;
    private boolean mIsWidgetCollectionChild;
    private static final android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER;
    private static final java.lang.Object[] sMethodsLock;
    private static final android.util.ArrayMap sMethods;
    private static final java.lang.ThreadLocal sInvokeArgsTls;
    private final android.widget.RemoteViews$MutablePair mPair;
    public static final android.os.Parcelable$Creator CREATOR;

    public void mergeRemoteViews(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1, r2;
        java.util.HashMap r3, $r7;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$Action r4, r5, $r14, $r15;
        java.lang.String r6, $r21;
        java.util.ArrayList $r8, $r9, $r17, $r19, $r23, $r25, r26;
        android.widget.RemoteViews$BitmapCache $r10, $r11;
        java.lang.Object $r12, $r13, $r16, $r18, $r24;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews;

        if r1 != null goto label01;

        return;

     label01:
        r2 = virtualinvoke r1.<android.widget.RemoteViews: android.widget.RemoteViews clone()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r3 = $r7;

        $r8 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r8 != null goto label02;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r25;

     label02:
        $r9 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i1 = 0;

     label03:
        if i1 >= i0 goto label04;

        $r23 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.widget.RemoteViews$Action) $r24;

        $r21 = virtualinvoke r4.<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>();

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r4);

        i1 = i1 + 1;

        goto label03;

     label04:
        r26 = r2.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if r26 != null goto label05;

        return;

     label05:
        i3 = virtualinvoke r26.<java.util.ArrayList: int size()>();

        i4 = 0;

     label06:
        if i4 >= i3 goto label10;

        $r13 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (android.widget.RemoteViews$Action) $r13;

        $r12 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r14 = (android.widget.RemoteViews$Action) $r12;

        r6 = virtualinvoke $r14.<android.widget.RemoteViews$Action: java.lang.String getUniqueKey()>();

        $r16 = virtualinvoke r26.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r15 = (android.widget.RemoteViews$Action) $r16;

        i2 = virtualinvoke $r15.<android.widget.RemoteViews$Action: int mergeBehavior()>();

        $z0 = virtualinvoke r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z0 == 0 goto label07;

        if i2 != 0 goto label07;

        $r19 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r18 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        virtualinvoke $r19.<java.util.ArrayList: boolean remove(java.lang.Object)>($r18);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r6);

     label07:
        if i2 == 0 goto label08;

        if i2 != 1 goto label09;

     label08:
        $r17 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        $r11 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r11.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r11;

        $r10 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>($r10);

        return;
    }

    private static android.graphics.Rect getSourceBounds(android.view.View)
    {
        android.view.View r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int[] r1;
        android.graphics.Rect r2, $r6;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.content.res.CompatibilityInfo $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: android.view.View;

        $r3 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        f0 = $r5.<android.content.res.CompatibilityInfo: float applicationScale>;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.view.View: void getLocationOnScreen(int[])>(r1);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r2 = $r6;

        $i0 = r1[0];

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        r2.<android.graphics.Rect: int left> = $i1;

        $i2 = r1[1];

        $f4 = (float) $i2;

        $f5 = $f4 * f0;

        $f6 = $f5 + 0.5F;

        $i3 = (int) $f6;

        r2.<android.graphics.Rect: int top> = $i3;

        $i5 = r1[0];

        $i4 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i6 = $i5 + $i4;

        $f7 = (float) $i6;

        $f9 = $f7 * f0;

        $f8 = $f9 + 0.5F;

        $i8 = (int) $f8;

        r2.<android.graphics.Rect: int right> = $i8;

        $i7 = r1[1];

        $i10 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i9 = $i7 + $i10;

        $f11 = (float) $i9;

        $f10 = $f11 * f0;

        $f12 = $f10 + 0.5F;

        $i11 = (int) $f12;

        r2.<android.graphics.Rect: int bottom> = $i11;

        return r2;
    }

    private java.lang.reflect.Method getMethod(android.view.View, java.lang.String, java.lang.Class)
    {
        android.widget.RemoteViews r0;
        android.view.View r1;
        java.lang.String r2, $r22, $r26, $r30, $r36, $r40, $r44;
        java.lang.Class r3, r5;
        java.lang.reflect.Method r4;
        java.lang.Object[] r6, $r10;
        android.util.ArrayMap r7, $r11, $r33, $r34;
        java.lang.Throwable r9, $r43;
        java.lang.Object $r12, $r15;
        android.widget.RemoteViews$MutablePair $r13, $r14, $r16, $r19;
        java.lang.Class[] $r17, $r28;
        boolean $z0;
        java.lang.StringBuilder $r20, $r23, $r24, $r25, $r27, $r29, $r35, $r38, $r39, $r41, $r42, $r45;
        android.widget.RemoteViews$ActionException $r21, $r37;
        java.lang.NoSuchMethodException $r32;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = <android.widget.RemoteViews: java.lang.Object[] sMethodsLock>;

        r6 = $r10;

        entermonitor $r10;

     label01:
        $r11 = <android.widget.RemoteViews: android.util.ArrayMap sMethods>;

        $r12 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (android.util.ArrayMap) $r12;

        if r7 != null goto label02;

        $r33 = new android.util.ArrayMap;

        specialinvoke $r33.<android.util.ArrayMap: void <init>()>();

        r7 = $r33;

        $r34 = <android.widget.RemoteViews: android.util.ArrayMap sMethods>;

        virtualinvoke $r34.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r7);

     label02:
        $r13 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair>;

        $r13.<android.widget.RemoteViews$MutablePair: java.lang.Object first> = r2;

        $r14 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair>;

        $r14.<android.widget.RemoteViews$MutablePair: java.lang.Object second> = r3;

        $r16 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair>;

        $r15 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r16);

        r4 = (java.lang.reflect.Method) $r15;

        if r4 != null goto label09;

     label03:
        if r3 != null goto label04;

        $r28 = newarray (java.lang.Class)[0];

        r4 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, $r28);

        goto label05;

     label04:
        $r17 = newarray (java.lang.Class)[1];

        $r17[0] = r3;

        r4 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, $r17);

     label05:
        goto label07;

     label06:
        $r32 := @caughtexception;

        $r37 = new android.widget.RemoteViews$ActionException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view: ");

        $r36 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t have method: ");

        $r39 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = staticinvoke <android.widget.RemoteViews: java.lang.String getParameters(java.lang.Class)>(r3);

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r44);

        throw $r37;

     label07:
        $z0 = virtualinvoke r4.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "android/view/RemotableViewMethod");

        if $z0 != 0 goto label08;

        $r21 = new android.widget.RemoteViews$ActionException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view: ");

        $r22 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t use method with RemoteViews: ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = staticinvoke <android.widget.RemoteViews: java.lang.String getParameters(java.lang.Class)>(r3);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r30);

        throw $r21;

     label08:
        $r19 = new android.widget.RemoteViews$MutablePair;

        specialinvoke $r19.<android.widget.RemoteViews$MutablePair: void <init>(java.lang.Object,java.lang.Object)>(r2, r3);

        virtualinvoke r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r4);

     label09:
        exitmonitor r6;

     label10:
        goto label13;

     label11:
        $r43 := @caughtexception;

        r9 = $r43;

        exitmonitor r6;

     label12:
        throw r9;

     label13:
        return r4;

        catch java.lang.NoSuchMethodException from label03 to label05 with label06;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static java.lang.String getParameters(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return "()";

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.Object[] wrapArg(java.lang.Object)
    {
        java.lang.Object r0, $r3;
        java.lang.Object[] r1;
        java.lang.ThreadLocal $r2;

        r0 := @parameter0: java.lang.Object;

        $r2 = <android.widget.RemoteViews: java.lang.ThreadLocal sInvokeArgsTls>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (java.lang.Object[]) $r3;

        r1[0] = r0;

        return r1;
    }

    private void configureRemoteViewsAsChild(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1;
        android.widget.RemoteViews$BitmapCache $r2, $r3, $r4;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews;

        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r2 = r1.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        virtualinvoke $r3.<android.widget.RemoteViews$BitmapCache: void assimilate(android.widget.RemoteViews$BitmapCache)>($r2);

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke r1.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>($r4);

        virtualinvoke r1.<android.widget.RemoteViews: void setNotRoot()>();

        return;
    }

    void setNotRoot()
    {
        android.widget.RemoteViews r0;

        r0 := @this: android.widget.RemoteViews;

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.widget.RemoteViews r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = staticinvoke <android.widget.RemoteViews: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, $i1);

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r2, i0);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        android.widget.RemoteViews r0;
        java.lang.String r1;
        int i0, i1;
        android.content.pm.ApplicationInfo $r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <android.widget.RemoteViews: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, i0);

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r2, i1);

        return;
    }

    protected void <init>(android.content.pm.ApplicationInfo, int)
    {
        android.widget.RemoteViews r0;
        android.content.pm.ApplicationInfo r1;
        int i0;
        android.widget.RemoteViews$MutablePair $r2;
        android.widget.RemoteViews$BitmapCache $r3;
        android.widget.RemoteViews$MemoryUsageCounter $r4;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild> = 0;

        $r2 = new android.widget.RemoteViews$MutablePair;

        specialinvoke $r2.<android.widget.RemoteViews$MutablePair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair> = $r2;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = r1;

        r0.<android.widget.RemoteViews: int mLayoutId> = i0;

        $r3 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r3.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r3;

        $r4 = new android.widget.RemoteViews$MemoryUsageCounter;

        specialinvoke $r4.<android.widget.RemoteViews$MemoryUsageCounter: void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1)>(r0, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter> = $r4;

        specialinvoke r0.<android.widget.RemoteViews: void recalculateMemoryUsage()>();

        return;
    }

    private boolean hasLandscapeAndPortraitLayouts()
    {
        android.widget.RemoteViews r0, $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>(android.widget.RemoteViews, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1, r2;
        android.widget.RemoteViews$MutablePair $r3;
        java.lang.RuntimeException $r4, $r7;
        android.content.pm.ApplicationInfo $r5, $r6, $r8, $r9, $r12;
        int $i0, $i1, $i2;
        java.lang.String $r10, $r11;
        boolean $z0;
        android.widget.RemoteViews$MemoryUsageCounter $r13;
        android.widget.RemoteViews$BitmapCache $r14;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews;

        r2 := @parameter1: android.widget.RemoteViews;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild> = 0;

        $r3 = new android.widget.RemoteViews$MutablePair;

        specialinvoke $r3.<android.widget.RemoteViews$MutablePair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair> = $r3;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Both RemoteViews must be non-null");

        throw $r4;

     label2:
        $r5 = r1.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $i1 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $r6 = r2.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $i0 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 != $i0 goto label3;

        $r8 = r1.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r11 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = r2.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label4;

     label3:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Both RemoteViews must share the same package and user");

        throw $r7;

     label4:
        $r12 = r2.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r12;

        $i2 = virtualinvoke r2.<android.widget.RemoteViews: int getLayoutId()>();

        r0.<android.widget.RemoteViews: int mLayoutId> = $i2;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = r1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = r2;

        $r13 = new android.widget.RemoteViews$MemoryUsageCounter;

        specialinvoke $r13.<android.widget.RemoteViews$MemoryUsageCounter: void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1)>(r0, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter> = $r13;

        $r14 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r14.<android.widget.RemoteViews$BitmapCache: void <init>()>();

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r14;

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r1);

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r2);

        specialinvoke r0.<android.widget.RemoteViews: void recalculateMemoryUsage()>();

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache)>(r1, null);

        return;
    }

    private void <init>(android.os.Parcel, android.widget.RemoteViews$BitmapCache)
    {
        android.widget.RemoteViews r0, $r4, $r6, $r8, $r10;
        android.os.Parcel r1;
        android.widget.RemoteViews$BitmapCache r2, $r5, $r7, $r40, $r48;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.widget.RemoteViews$MutablePair $r3;
        android.content.pm.ApplicationInfo $r9, $r12;
        android.widget.RemoteViews$MemoryUsageCounter $r11;
        android.os.Parcelable $r13;
        java.util.ArrayList $r14, $r16, $r17, $r21, $r22, $r23, $r27, $r29, $r30, $r31, $r34, $r36, $r38, $r39, $r43, $r46;
        android.widget.RemoteViews$SetOnClickPendingIntent $r15;
        android.widget.RemoteViews$TextViewDrawableColorFilterAction $r18;
        android.widget.RemoteViews$SetRemoteViewsAdapterList $r19;
        android.widget.RemoteViews$ViewPaddingAction $r20;
        android.widget.RemoteViews$TextViewSizeAction $r24;
        android.widget.RemoteViews$TextViewDrawableAction $r25;
        android.widget.RemoteViews$BitmapReflectionAction $r26;
        android.widget.RemoteViews$SetRemoteViewsAdapterIntent $r28;
        android.widget.RemoteViews$SetOnClickFillInIntent $r32;
        android.widget.RemoteViews$SetEmptyView $r33;
        android.widget.RemoteViews$SetPendingIntentTemplate $r35;
        android.widget.RemoteViews$ReflectionActionWithoutParams $r37;
        android.widget.RemoteViews$ViewGroupAction $r41;
        android.widget.RemoteViews$ReflectionAction $r42;
        android.widget.RemoteViews$ActionException $r44;
        android.widget.RemoteViews$SetDrawableParameters $r45;
        java.lang.String $r47;
        boolean $z15;
        java.lang.StringBuilder $r49, $r50, $r51, $r52;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.widget.RemoteViews$BitmapCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.widget.RemoteViews: boolean mIsRoot> = 1;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = null;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = null;

        r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild> = 0;

        $r3 = new android.widget.RemoteViews$MutablePair;

        specialinvoke $r3.<android.widget.RemoteViews$MutablePair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MutablePair mPair> = $r3;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if r2 != null goto label01;

        $r48 = new android.widget.RemoteViews$BitmapCache;

        specialinvoke $r48.<android.widget.RemoteViews$BitmapCache: void <init>(android.os.Parcel)>(r1);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = $r48;

        goto label02;

     label01:
        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r2);

        virtualinvoke r0.<android.widget.RemoteViews: void setNotRoot()>();

     label02:
        if i0 != 0 goto label24;

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r12 = (android.content.pm.ApplicationInfo) $r13;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r12;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.widget.RemoteViews: int mLayoutId> = $i6;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 != 1 goto label03;

        $z15 = 1;

        goto label04;

     label03:
        $z15 = 0;

     label04:
        r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild> = $z15;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i1 <= 0 goto label23;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(i1);

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r14;

        i2 = 0;

     label05:
        if i2 >= i1 goto label23;

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        tableswitch(i3)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            case 7: goto label21;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label18;
            case 13: goto label16;
            case 14: goto label17;
            case 15: goto label19;
            case 16: goto label21;
            case 17: goto label20;
            default: goto label21;
        };

     label06:
        $r16 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r15 = new android.widget.RemoteViews$SetOnClickPendingIntent;

        specialinvoke $r15.<android.widget.RemoteViews$SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label22;

     label07:
        $r46 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r45 = new android.widget.RemoteViews$SetDrawableParameters;

        specialinvoke $r45.<android.widget.RemoteViews$SetDrawableParameters: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r46.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

        goto label22;

     label08:
        $r43 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r42 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r42.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

        goto label22;

     label09:
        $r39 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r41 = new android.widget.RemoteViews$ViewGroupAction;

        $r40 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke $r41.<android.widget.RemoteViews$ViewGroupAction: void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews$BitmapCache)>(r0, r1, $r40);

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        goto label22;

     label10:
        $r36 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r37 = new android.widget.RemoteViews$ReflectionActionWithoutParams;

        specialinvoke $r37.<android.widget.RemoteViews$ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        goto label22;

     label11:
        $r38 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r33 = new android.widget.RemoteViews$SetEmptyView;

        specialinvoke $r33.<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        goto label22;

     label12:
        $r34 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r35 = new android.widget.RemoteViews$SetPendingIntentTemplate;

        specialinvoke $r35.<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

        goto label22;

     label13:
        $r31 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r32 = new android.widget.RemoteViews$SetOnClickFillInIntent;

        specialinvoke $r32.<android.widget.RemoteViews$SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        goto label22;

     label14:
        $r29 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r28 = new android.widget.RemoteViews$SetRemoteViewsAdapterIntent;

        specialinvoke $r28.<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        goto label22;

     label15:
        $r30 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r25 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r25.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        goto label22;

     label16:
        $r23 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r24 = new android.widget.RemoteViews$TextViewSizeAction;

        specialinvoke $r24.<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label22;

     label17:
        $r21 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r20 = new android.widget.RemoteViews$ViewPaddingAction;

        specialinvoke $r20.<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        goto label22;

     label18:
        $r27 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r26 = new android.widget.RemoteViews$BitmapReflectionAction;

        specialinvoke $r26.<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        goto label22;

     label19:
        $r22 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r19 = new android.widget.RemoteViews$SetRemoteViewsAdapterList;

        specialinvoke $r19.<android.widget.RemoteViews$SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        goto label22;

     label20:
        $r17 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r18 = new android.widget.RemoteViews$TextViewDrawableColorFilterAction;

        specialinvoke $r18.<android.widget.RemoteViews$TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>(r0, r1);

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label22;

     label21:
        $r44 = new android.widget.RemoteViews$ActionException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>($r47);

        throw $r44;

     label22:
        i2 = i2 + 1;

        goto label05;

     label23:
        goto label25;

     label24:
        $r4 = new android.widget.RemoteViews;

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke $r4.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache)>(r1, $r5);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape> = $r4;

        $r6 = new android.widget.RemoteViews;

        $r7 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        specialinvoke $r6.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache)>(r1, $r7);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait> = $r6;

        $r8 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        $r9 = $r8.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication> = $r9;

        $r10 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        $i4 = virtualinvoke $r10.<android.widget.RemoteViews: int getLayoutId()>();

        r0.<android.widget.RemoteViews: int mLayoutId> = $i4;

     label25:
        $r11 = new android.widget.RemoteViews$MemoryUsageCounter;

        specialinvoke $r11.<android.widget.RemoteViews$MemoryUsageCounter: void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1)>(r0, null);

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter> = $r11;

        specialinvoke r0.<android.widget.RemoteViews: void recalculateMemoryUsage()>();

        return;
    }

    public android.widget.RemoteViews clone()
    {
        android.widget.RemoteViews r0, r2, $r3;
        android.os.Parcel r1;

        r0 := @this: android.widget.RemoteViews;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r0.<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = new android.widget.RemoteViews;

        specialinvoke $r3.<android.widget.RemoteViews: void <init>(android.os.Parcel)>(r1);

        r2 = $r3;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r2;
    }

    public java.lang.String getPackage()
    {
        android.widget.RemoteViews r0;
        android.content.pm.ApplicationInfo $r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r3 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public int getLayoutId()
    {
        android.widget.RemoteViews r0;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        $i0 = r0.<android.widget.RemoteViews: int mLayoutId>;

        return $i0;
    }

    void setIsWidgetCollectionChild(boolean)
    {
        android.widget.RemoteViews r0;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        z0 := @parameter0: boolean;

        r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild> = z0;

        return;
    }

    private void recalculateMemoryUsage()
    {
        android.widget.RemoteViews r0, $r2, $r4;
        int i0, i1, $i2, $i3;
        android.widget.RemoteViews$MemoryUsageCounter $r1, $r3, $r5, $r6, $r9, $r13;
        boolean $z0, $z1;
        android.widget.RemoteViews$BitmapCache $r7, $r11;
        java.util.ArrayList $r8, $r10, $r12;
        java.lang.Object $r14;
        android.widget.RemoteViews$Action $r15;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        virtualinvoke $r1.<android.widget.RemoteViews$MemoryUsageCounter: void clear()>();

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label3;

        $r8 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r8 == null goto label2;

        $r10 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r12 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (android.widget.RemoteViews$Action) $r14;

        $r13 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        virtualinvoke $r15.<android.widget.RemoteViews$Action: void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter)>($r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z1 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z1 == 0 goto label4;

        $r11 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r9 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        virtualinvoke $r11.<android.widget.RemoteViews$BitmapCache: void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter)>($r9);

        goto label4;

     label3:
        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        $i2 = virtualinvoke $r2.<android.widget.RemoteViews: int estimateMemoryUsage()>();

        virtualinvoke $r3.<android.widget.RemoteViews$MemoryUsageCounter: void increment(int)>($i2);

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        $i3 = virtualinvoke $r4.<android.widget.RemoteViews: int estimateMemoryUsage()>();

        virtualinvoke $r5.<android.widget.RemoteViews$MemoryUsageCounter: void increment(int)>($i3);

        $r7 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        $r6 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        virtualinvoke $r7.<android.widget.RemoteViews$BitmapCache: void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter)>($r6);

     label4:
        return;
    }

    private void setBitmapCache(android.widget.RemoteViews$BitmapCache)
    {
        android.widget.RemoteViews r0, $r2, $r3;
        android.widget.RemoteViews$BitmapCache r1;
        int i0, i1;
        boolean $z0;
        java.util.ArrayList $r4, $r5, $r6;
        java.lang.Object $r7;
        android.widget.RemoteViews$Action $r8;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews$BitmapCache;

        r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache> = r1;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r4 == null goto label4;

        $r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (android.widget.RemoteViews$Action) $r7;

        virtualinvoke $r8.<android.widget.RemoteViews$Action: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r2 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        specialinvoke $r2.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        specialinvoke $r3.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

     label4:
        return;
    }

    public int estimateMemoryUsage()
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$MemoryUsageCounter $r1;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        $i0 = virtualinvoke $r1.<android.widget.RemoteViews$MemoryUsageCounter: int getMemoryUsage()>();

        return $i0;
    }

    private void addAction(android.widget.RemoteViews$Action)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$Action r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3, $r5;
        android.widget.RemoteViews$MemoryUsageCounter $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.widget.RemoteViews$Action;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("RemoteViews specifying separate landscape and portrait layouts cannot be modified. Instead, fully configure the landscape and portrait layouts individually before constructing the combined layout.");

        throw $r6;

     label1:
        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RemoteViews: java.util.ArrayList mActions> = $r5;

     label2:
        $r3 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$MemoryUsageCounter mMemoryUsageCounter>;

        virtualinvoke r1.<android.widget.RemoteViews$Action: void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter)>($r4);

        return;
    }

    public void addView(int, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1;
        int i0;
        android.widget.RemoteViews$ViewGroupAction $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $r2 = new android.widget.RemoteViews$ViewGroupAction;

        specialinvoke $r2.<android.widget.RemoteViews$ViewGroupAction: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void removeAllViews(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ViewGroupAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ViewGroupAction;

        specialinvoke $r1.<android.widget.RemoteViews$ViewGroupAction: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>(r0, i0, null);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void showNext(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ReflectionActionWithoutParams $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ReflectionActionWithoutParams;

        specialinvoke $r1.<android.widget.RemoteViews$ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,int,java.lang.String)>(r0, i0, "showNext");

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void showPrevious(int)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.widget.RemoteViews$ReflectionActionWithoutParams $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        $r1 = new android.widget.RemoteViews$ReflectionActionWithoutParams;

        specialinvoke $r1.<android.widget.RemoteViews$ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,int,java.lang.String)>(r0, i0, "showPrevious");

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setDisplayedChild(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setDisplayedChild", i1);

        return;
    }

    public void setViewVisibility(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setVisibility", i1);

        return;
    }

    public void setTextViewText(int, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>(i0, "setText", r1);

        return;
    }

    public void setTextViewTextSize(int, int, float)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        float f0;
        android.widget.RemoteViews$TextViewSizeAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r1 = new android.widget.RemoteViews$TextViewSizeAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>(r0, i0, i1, f0);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setTextViewCompoundDrawables(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$TextViewDrawableAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>(r0, i0, 0, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setTextViewCompoundDrawablesRelative(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$TextViewDrawableAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$TextViewDrawableAction;

        specialinvoke $r1.<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>(r0, i0, 1, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setTextViewCompoundDrawablesRelativeColorFilter(int, int, int, android.graphics.PorterDuff$Mode)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2;
        android.graphics.PorterDuff$Mode r1;
        java.lang.IllegalArgumentException $r2;
        android.widget.RemoteViews$TextViewDrawableColorFilterAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.graphics.PorterDuff$Mode;

        if i1 < 0 goto label1;

        if i1 < 4 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index must be in range [0, 3].");

        throw $r2;

     label2:
        $r3 = new android.widget.RemoteViews$TextViewDrawableColorFilterAction;

        specialinvoke $r3.<android.widget.RemoteViews$TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode)>(r0, i0, 1, i1, i2, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setImageViewResource(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setImageResource", i1);

        return;
    }

    public void setImageViewUri(int, android.net.Uri)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.net.Uri r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        virtualinvoke r0.<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>(i0, "setImageURI", r1);

        return;
    }

    public void setImageViewBitmap(int, android.graphics.Bitmap)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.graphics.Bitmap r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>(i0, "setImageBitmap", r1);

        return;
    }

    public void setEmptyView(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.widget.RemoteViews$SetEmptyView $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.widget.RemoteViews$SetEmptyView;

        specialinvoke $r1.<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,int,int)>(r0, i0, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setChronometer(int, long, java.lang.String, boolean)
    {
        android.widget.RemoteViews r0;
        int i0;
        long l1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(i0, "setBase", l1);

        virtualinvoke r0.<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>(i0, "setFormat", r1);

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(i0, "setStarted", z0);

        return;
    }

    public void setProgressBar(int, int, int, boolean)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(i0, "setIndeterminate", z0);

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setMax", i1);

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setProgress", i2);

     label1:
        return;
    }

    public void setOnClickPendingIntent(int, android.app.PendingIntent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.app.PendingIntent r1;
        android.widget.RemoteViews$SetOnClickPendingIntent $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = new android.widget.RemoteViews$SetOnClickPendingIntent;

        specialinvoke $r2.<android.widget.RemoteViews$SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setPendingIntentTemplate(int, android.app.PendingIntent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.app.PendingIntent r1;
        android.widget.RemoteViews$SetPendingIntentTemplate $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $r2 = new android.widget.RemoteViews$SetPendingIntentTemplate;

        specialinvoke $r2.<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setOnClickFillInIntent(int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.Intent r1;
        android.widget.RemoteViews$SetOnClickFillInIntent $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new android.widget.RemoteViews$SetOnClickFillInIntent;

        specialinvoke $r2.<android.widget.RemoteViews$SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setDrawableParameters(int, boolean, int, int, android.graphics.PorterDuff$Mode, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3;
        boolean z0;
        android.graphics.PorterDuff$Mode r1;
        android.widget.RemoteViews$SetDrawableParameters $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.graphics.PorterDuff$Mode;

        i3 := @parameter5: int;

        $r2 = new android.widget.RemoteViews$SetDrawableParameters;

        specialinvoke $r2.<android.widget.RemoteViews$SetDrawableParameters: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>(r0, i0, z0, i1, i2, r1, i3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setTextColor(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setTextColor", i1);

        return;
    }

    public void setRemoteAdapter(int, int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        android.content.Intent r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        virtualinvoke r0.<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>(i1, r1);

        return;
    }

    public void setRemoteAdapter(int, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        android.content.Intent r1;
        android.widget.RemoteViews$SetRemoteViewsAdapterIntent $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new android.widget.RemoteViews$SetRemoteViewsAdapterIntent;

        specialinvoke $r2.<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>(r0, i0, r1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setRemoteAdapter(int, java.util.ArrayList, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        java.util.ArrayList r1;
        android.widget.RemoteViews$SetRemoteViewsAdapterList $r2;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        $r2 = new android.widget.RemoteViews$SetRemoteViewsAdapterList;

        specialinvoke $r2.<android.widget.RemoteViews$SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int)>(r0, i0, r1, i1);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setScrollPosition(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "smoothScrollToPosition", i1);

        return;
    }

    public void setRelativeScrollPosition(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "smoothScrollByOffset", i1);

        return;
    }

    public void setViewPadding(int, int, int, int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1, i2, i3, i4;
        android.widget.RemoteViews$ViewPaddingAction $r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.widget.RemoteViews$ViewPaddingAction;

        specialinvoke $r1.<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r1);

        return;
    }

    public void setBoolean(int, java.lang.String, boolean)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        boolean z0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Boolean $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 1, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setByte(int, java.lang.String, byte)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        byte b1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Byte $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        b1 := @parameter2: byte;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 2, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setShort(int, java.lang.String, short)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        short s1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Short $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        s1 := @parameter2: short;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 3, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setInt(int, java.lang.String, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;
        java.lang.String r1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Integer $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 4, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setLong(int, java.lang.String, long)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        long l1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Long $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 5, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setFloat(int, java.lang.String, float)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        float f0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Float $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 6, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setDouble(int, java.lang.String, double)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        double d0;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Double $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 7, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setChar(int, java.lang.String, char)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        char c1;
        android.widget.RemoteViews$ReflectionAction $r2;
        java.lang.Character $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        c1 := @parameter2: char;

        $r2 = new android.widget.RemoteViews$ReflectionAction;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        specialinvoke $r2.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 8, $r3);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r2);

        return;
    }

    public void setString(int, java.lang.String, java.lang.String)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1, r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 9, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setCharSequence(int, java.lang.String, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        java.lang.CharSequence r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.CharSequence;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 10, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setUri(int, java.lang.String, android.net.Uri)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.net.Uri r2;
        android.widget.RemoteViews$ReflectionAction $r3;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        if r2 == null goto label1;

        r2 = virtualinvoke r2.<android.net.Uri: android.net.Uri getCanonicalUri()>();

        $z0 = staticinvoke <android.os.StrictMode: boolean vmFileUriExposureEnabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.net.Uri: void checkFileUriExposed(java.lang.String)>("RemoteViews.setUri()");

     label1:
        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 11, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setBitmap(int, java.lang.String, android.graphics.Bitmap)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.graphics.Bitmap r2;
        android.widget.RemoteViews$BitmapReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Bitmap;

        $r3 = new android.widget.RemoteViews$BitmapReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap)>(r0, i0, r1, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setBundle(int, java.lang.String, android.os.Bundle)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 13, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setIntent(int, java.lang.String, android.content.Intent)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.String r1;
        android.content.Intent r2;
        android.widget.RemoteViews$ReflectionAction $r3;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        $r3 = new android.widget.RemoteViews$ReflectionAction;

        specialinvoke $r3.<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>(r0, i0, r1, 14, r2);

        specialinvoke r0.<android.widget.RemoteViews: void addAction(android.widget.RemoteViews$Action)>($r3);

        return;
    }

    public void setContentDescription(int, java.lang.CharSequence)
    {
        android.widget.RemoteViews r0;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>(i0, "setContentDescription", r1);

        return;
    }

    public void setLabelFor(int, int)
    {
        android.widget.RemoteViews r0;
        int i0, i1;

        r0 := @this: android.widget.RemoteViews;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(i0, "setLabelFor", i1);

        return;
    }

    private android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)
    {
        android.widget.RemoteViews r0, $r4, $r5;
        android.content.Context r1;
        int i0;
        boolean $z0;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = $r3.<android.content.res.Configuration: int orientation>;

        if i0 != 2 goto label1;

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        return $r5;

     label1:
        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        return $r4;

     label2:
        return r0;
    }

    public android.view.View apply(android.content.Context, android.view.ViewGroup)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        android.view.View $r3;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        $r3 = virtualinvoke r0.<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r1, r2, null);

        return $r3;
    }

    public android.view.View apply(android.content.Context, android.view.ViewGroup, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, r4;
        android.content.Context r1, r6;
        android.view.ViewGroup r2;
        android.widget.RemoteViews$OnClickHandler r3;
        android.view.View r5;
        android.widget.RemoteViews$2 r7, $r9;
        android.view.LayoutInflater r8, r11;
        java.lang.Object $r10;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r4 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r1);

        r6 = specialinvoke r0.<android.widget.RemoteViews: android.content.Context getContextForResources(android.content.Context)>(r1);

        $r9 = new android.widget.RemoteViews$2;

        specialinvoke $r9.<android.widget.RemoteViews$2: void <init>(android.widget.RemoteViews,android.content.Context,android.content.Context)>(r0, r1, r6);

        r7 = $r9;

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r8 = (android.view.LayoutInflater) $r10;

        r11 = virtualinvoke r8.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>(r7);

        virtualinvoke r11.<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>(r0);

        $i0 = virtualinvoke r4.<android.widget.RemoteViews: int getLayoutId()>();

        r5 = virtualinvoke r11.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, r2, 0);

        specialinvoke r4.<android.widget.RemoteViews: void performApply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r5, r2, r3);

        return r5;
    }

    public void reapply(android.content.Context, android.view.View)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1;
        android.view.View r2;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        virtualinvoke r0.<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View,android.widget.RemoteViews$OnClickHandler)>(r1, r2, null);

        return;
    }

    public void reapply(android.content.Context, android.view.View, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0, r4;
        android.content.Context r1;
        android.view.View r2;
        android.widget.RemoteViews$OnClickHandler r3;
        boolean $z0;
        android.view.ViewParent $r5;
        android.view.ViewGroup $r6;
        int $i0, $i1;
        java.lang.RuntimeException $r7;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r4 = specialinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)>(r1);

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r2.<android.view.View: int getId()>();

        $i1 = virtualinvoke r4.<android.widget.RemoteViews: int getLayoutId()>();

        if $i0 == $i1 goto label1;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to re-apply RemoteViews to a view that that does not share the same root layout id.");

        throw $r7;

     label1:
        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        $r6 = (android.view.ViewGroup) $r5;

        specialinvoke r4.<android.widget.RemoteViews: void performApply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r2, $r6, r3);

        return;
    }

    private void performApply(android.view.View, android.view.ViewGroup, android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.RemoteViews r0;
        android.view.View r1;
        android.view.ViewGroup r2;
        android.widget.RemoteViews$OnClickHandler r3, $r9, r10;
        int i0, i1;
        android.widget.RemoteViews$Action r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        $r5 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r5 == null goto label4;

        if r3 != null goto label1;

        $r9 = <android.widget.RemoteViews: android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER>;

        goto label2;

     label1:
        $r9 = r3;

     label2:
        r10 = $r9;

        $r6 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r7 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.widget.RemoteViews$Action) $r8;

        virtualinvoke r4.<android.widget.RemoteViews$Action: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>(r1, r2, r10);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    private android.content.Context getContextForResources(android.content.Context)
    {
        android.widget.RemoteViews r0;
        android.content.Context r1, $r6;
        android.content.pm.ApplicationInfo $r3, $r4, $r5, $r8, $r14;
        int $i0, $i1, $i2;
        java.lang.String $r7, $r9, $r13, $r17;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r10;
        java.lang.StringBuilder $r11, $r12, $r15, $r16;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.content.Context;

        $r3 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        if $r3 == null goto label4;

        $i0 = virtualinvoke r1.<android.content.Context: int getUserId()>();

        $r4 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $i1 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i0 != $i2 goto label1;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r9 = $r8.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r5 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>($r5, 4);

     label2:
        return $r6;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name ");

        $r14 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        $r13 = $r14.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteViews", $r17);

     label4:
        return r1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public int getSequenceNumber()
    {
        android.widget.RemoteViews r0;
        java.util.ArrayList $r1, $r2;
        int $i0;

        r0 := @this: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label2:
        return $i0;
    }

    public boolean onLoadClass(java.lang.Class)
    {
        android.widget.RemoteViews r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "android/widget/RemoteViews$RemoteView");

        return $z0;
    }

    public int describeContents()
    {
        android.widget.RemoteViews r0;

        r0 := @this: android.widget.RemoteViews;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.widget.RemoteViews r0, $r3, $r4;
        android.os.Parcel r1;
        int i0, i1, i2, $i3;
        android.widget.RemoteViews$Action r2;
        boolean $z0, $z1, $z2, $z3;
        android.widget.RemoteViews$BitmapCache $r5, $r11;
        android.content.pm.ApplicationInfo $r6;
        java.util.ArrayList $r7, $r9, $r10;
        java.lang.Object $r8;
        byte $b4;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<android.widget.RemoteViews: boolean hasLandscapeAndPortraitLayouts()>();

        if $z0 != 0 goto label08;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        $z2 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z2 == 0 goto label01;

        $r11 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        virtualinvoke $r11.<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>(r1, i0);

     label01:
        $r6 = r0.<android.widget.RemoteViews: android.content.pm.ApplicationInfo mApplication>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $i3 = r0.<android.widget.RemoteViews: int mLayoutId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $z3 = r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild>;

        if $z3 == 0 goto label02;

        $b4 = 1;

        goto label03;

     label02:
        $b4 = 0;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b4);

        $r7 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        if $r7 == null goto label04;

        $r10 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        goto label05;

     label04:
        i1 = 0;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label06:
        if i2 >= i1 goto label07;

        $r9 = r0.<android.widget.RemoteViews: java.util.ArrayList mActions>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.widget.RemoteViews$Action) $r8;

        virtualinvoke r2.<android.widget.RemoteViews$Action: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        i2 = i2 + 1;

        goto label06;

     label07:
        goto label10;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $z1 = r0.<android.widget.RemoteViews: boolean mIsRoot>;

        if $z1 == 0 goto label09;

        $r5 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        virtualinvoke $r5.<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>(r1, i0);

     label09:
        $r3 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mLandscape>;

        virtualinvoke $r3.<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r4 = r0.<android.widget.RemoteViews: android.widget.RemoteViews mPortrait>;

        virtualinvoke $r4.<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>(r1, i0);

     label10:
        return;
    }

    private static android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int)
    {
        java.lang.String r0, $r6, $r13;
        int i0, $i1, $i2;
        android.app.Application r1;
        android.content.pm.ApplicationInfo r2;
        android.content.Context r3, $r4;
        android.os.UserHandle $r5;
        boolean $z0;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.IllegalArgumentException $r10;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.app.ActivityThread: android.app.Application currentApplication()>();

        if r1 != null goto label2;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot create remote views out of an aplication.");

        throw $r8;

     label2:
        r2 = virtualinvoke r1.<android.app.Application: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        if $i2 != i0 goto label3;

        $r6 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label6;

     label3:
        $r4 = virtualinvoke r1.<android.app.Application: android.content.Context getBaseContext()>();

        $r5 = new android.os.UserHandle;

        specialinvoke $r5.<android.os.UserHandle: void <init>(int)>(i0);

        r3 = virtualinvoke $r4.<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>(r0, 0, $r5);

        r2 = virtualinvoke r3.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such package ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label6:
        return r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.widget.RemoteViews r0, $r1;

        r0 := @this: android.widget.RemoteViews;

        $r1 = virtualinvoke r0.<android.widget.RemoteViews: android.widget.RemoteViews clone()>();

        return $r1;
    }

    static boolean access$100(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;
        boolean $z0;

        r0 := @parameter0: android.widget.RemoteViews;

        $z0 = r0.<android.widget.RemoteViews: boolean mIsWidgetCollectionChild>;

        return $z0;
    }

    static android.graphics.Rect access$200(android.view.View)
    {
        android.view.View r0;
        android.graphics.Rect $r1;

        r0 := @parameter0: android.view.View;

        $r1 = staticinvoke <android.widget.RemoteViews: android.graphics.Rect getSourceBounds(android.view.View)>(r0);

        return $r1;
    }

    static java.lang.reflect.Method access$300(android.widget.RemoteViews, android.view.View, java.lang.String, java.lang.Class)
    {
        android.widget.RemoteViews r0;
        android.view.View r1;
        java.lang.String r2;
        java.lang.Class r3;
        java.lang.reflect.Method $r4;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Class;

        $r4 = specialinvoke r0.<android.widget.RemoteViews: java.lang.reflect.Method getMethod(android.view.View,java.lang.String,java.lang.Class)>(r1, r2, r3);

        return $r4;
    }

    static android.widget.RemoteViews$BitmapCache access$400(android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$BitmapCache $r1;

        r0 := @parameter0: android.widget.RemoteViews;

        $r1 = r0.<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache mBitmapCache>;

        return $r1;
    }

    static java.lang.Object[] access$500(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <android.widget.RemoteViews: java.lang.Object[] wrapArg(java.lang.Object)>(r0);

        return $r1;
    }

    static void access$600(android.widget.RemoteViews, android.widget.RemoteViews)
    {
        android.widget.RemoteViews r0, r1;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.widget.RemoteViews;

        specialinvoke r0.<android.widget.RemoteViews: void configureRemoteViewsAsChild(android.widget.RemoteViews)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.widget.RemoteViews$BitmapCache, android.widget.RemoteViews$1)
    {
        android.widget.RemoteViews r0;
        android.os.Parcel r1;
        android.widget.RemoteViews$BitmapCache r2;
        android.widget.RemoteViews$1 r3;

        r0 := @this: android.widget.RemoteViews;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.widget.RemoteViews$BitmapCache;

        r3 := @parameter2: android.widget.RemoteViews$1;

        specialinvoke r0.<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache)>(r1, r2);

        return;
    }

    static void access$800(android.widget.RemoteViews, android.widget.RemoteViews$BitmapCache)
    {
        android.widget.RemoteViews r0;
        android.widget.RemoteViews$BitmapCache r1;

        r0 := @parameter0: android.widget.RemoteViews;

        r1 := @parameter1: android.widget.RemoteViews$BitmapCache;

        specialinvoke r0.<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.widget.RemoteViews$OnClickHandler $r0;
        java.lang.Object[] $r1;
        android.util.ArrayMap $r2;
        android.widget.RemoteViews$1 $r3;
        android.widget.RemoteViews$3 $r4;

        <android.widget.RemoteViews: int MODE_HAS_LANDSCAPE_AND_PORTRAIT> = 1;

        <android.widget.RemoteViews: int MODE_NORMAL> = 0;

        <android.widget.RemoteViews: java.lang.String EXTRA_REMOTEADAPTER_APPWIDGET_ID> = "remoteAdapterAppWidgetId";

        <android.widget.RemoteViews: java.lang.String LOG_TAG> = "RemoteViews";

        $r0 = new android.widget.RemoteViews$OnClickHandler;

        specialinvoke $r0.<android.widget.RemoteViews$OnClickHandler: void <init>()>();

        <android.widget.RemoteViews: android.widget.RemoteViews$OnClickHandler DEFAULT_ON_CLICK_HANDLER> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <android.widget.RemoteViews: java.lang.Object[] sMethodsLock> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        <android.widget.RemoteViews: android.util.ArrayMap sMethods> = $r2;

        $r3 = new android.widget.RemoteViews$1;

        specialinvoke $r3.<android.widget.RemoteViews$1: void <init>()>();

        <android.widget.RemoteViews: java.lang.ThreadLocal sInvokeArgsTls> = $r3;

        $r4 = new android.widget.RemoteViews$3;

        specialinvoke $r4.<android.widget.RemoteViews$3: void <init>()>();

        <android.widget.RemoteViews: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }
}
