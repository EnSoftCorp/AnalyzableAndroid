public class android.renderscript.Type extends android.renderscript.BaseObj
{
    int mDimX;
    int mDimY;
    int mDimZ;
    boolean mDimMipmaps;
    boolean mDimFaces;
    int mDimYuv;
    int mElementCount;
    android.renderscript.Element mElement;

    public android.renderscript.Element getElement()
    {
        android.renderscript.Type r0;
        android.renderscript.Element $r1;

        r0 := @this: android.renderscript.Type;

        $r1 = r0.<android.renderscript.Type: android.renderscript.Element mElement>;

        return $r1;
    }

    public int getX()
    {
        android.renderscript.Type r0;
        int $i0;

        r0 := @this: android.renderscript.Type;

        $i0 = r0.<android.renderscript.Type: int mDimX>;

        return $i0;
    }

    public int getY()
    {
        android.renderscript.Type r0;
        int $i0;

        r0 := @this: android.renderscript.Type;

        $i0 = r0.<android.renderscript.Type: int mDimY>;

        return $i0;
    }

    public int getZ()
    {
        android.renderscript.Type r0;
        int $i0;

        r0 := @this: android.renderscript.Type;

        $i0 = r0.<android.renderscript.Type: int mDimZ>;

        return $i0;
    }

    public int getYuv()
    {
        android.renderscript.Type r0;
        int $i0;

        r0 := @this: android.renderscript.Type;

        $i0 = r0.<android.renderscript.Type: int mDimYuv>;

        return $i0;
    }

    public boolean hasMipmaps()
    {
        android.renderscript.Type r0;
        boolean $z0;

        r0 := @this: android.renderscript.Type;

        $z0 = r0.<android.renderscript.Type: boolean mDimMipmaps>;

        return $z0;
    }

    public boolean hasFaces()
    {
        android.renderscript.Type r0;
        boolean $z0;

        r0 := @this: android.renderscript.Type;

        $z0 = r0.<android.renderscript.Type: boolean mDimFaces>;

        return $z0;
    }

    public int getCount()
    {
        android.renderscript.Type r0;
        int $i0;

        r0 := @this: android.renderscript.Type;

        $i0 = r0.<android.renderscript.Type: int mElementCount>;

        return $i0;
    }

    void calcElementCount()
    {
        android.renderscript.Type r0;
        boolean z0, $z1;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9;
        byte b3;

        r0 := @this: android.renderscript.Type;

        z0 = virtualinvoke r0.<android.renderscript.Type: boolean hasMipmaps()>();

        i0 = virtualinvoke r0.<android.renderscript.Type: int getX()>();

        i1 = virtualinvoke r0.<android.renderscript.Type: int getY()>();

        i2 = virtualinvoke r0.<android.renderscript.Type: int getZ()>();

        b3 = 1;

        $z1 = virtualinvoke r0.<android.renderscript.Type: boolean hasFaces()>();

        if $z1 == 0 goto label01;

        b3 = 6;

     label01:
        if i0 != 0 goto label02;

        i0 = 1;

     label02:
        if i1 != 0 goto label03;

        i1 = 1;

     label03:
        if i2 != 0 goto label04;

        i2 = 1;

     label04:
        $i5 = i0 * i1;

        $i6 = $i5 * i2;

        i4 = $i6 * b3;

     label05:
        if z0 == 0 goto label10;

        if i0 > 1 goto label06;

        if i1 > 1 goto label06;

        if i2 <= 1 goto label10;

     label06:
        if i0 <= 1 goto label07;

        i0 = i0 >> 1;

     label07:
        if i1 <= 1 goto label08;

        i1 = i1 >> 1;

     label08:
        if i2 <= 1 goto label09;

        i2 = i2 >> 1;

     label09:
        $i7 = i0 * i1;

        $i8 = $i7 * i2;

        $i9 = $i8 * b3;

        i4 = i4 + $i9;

        goto label05;

     label10:
        r0.<android.renderscript.Type: int mElementCount> = i4;

        return;
    }

    void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.Type r0;
        long l0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.Type;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.BaseObj: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        return;
    }

    void updateFromNative()
    {
        android.renderscript.Type r0;
        long[] r1;
        long l0, $l1, $l2, $l4, $l6, $l8, $l10;
        android.renderscript.RenderScript $r2, $r3, $r4;
        int $i3, $i5, $i7;
        byte $b9, $b11, $b12;
        android.renderscript.Element $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: android.renderscript.Type;

        r1 = newarray (long)[6];

        $r3 = r0.<android.renderscript.Type: android.renderscript.RenderScript mRS>;

        $r2 = r0.<android.renderscript.Type: android.renderscript.RenderScript mRS>;

        $l1 = virtualinvoke r0.<android.renderscript.Type: long getID(android.renderscript.RenderScript)>($r2);

        virtualinvoke $r3.<android.renderscript.RenderScript: void nTypeGetNativeData(long,long[])>($l1, r1);

        $l2 = r1[0];

        $i3 = (int) $l2;

        r0.<android.renderscript.Type: int mDimX> = $i3;

        $l4 = r1[1];

        $i5 = (int) $l4;

        r0.<android.renderscript.Type: int mDimY> = $i5;

        $l6 = r1[2];

        $i7 = (int) $l6;

        r0.<android.renderscript.Type: int mDimZ> = $i7;

        $l8 = r1[3];

        $b9 = $l8 cmp 1L;

        if $b9 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<android.renderscript.Type: boolean mDimMipmaps> = $z1;

        $l10 = r1[4];

        $b12 = $l10 cmp 1L;

        if $b12 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r0.<android.renderscript.Type: boolean mDimFaces> = $z0;

        l0 = r1[5];

        $b11 = l0 cmp 0L;

        if $b11 == 0 goto label5;

        $r5 = new android.renderscript.Element;

        $r4 = r0.<android.renderscript.Type: android.renderscript.RenderScript mRS>;

        specialinvoke $r5.<android.renderscript.Element: void <init>(long,android.renderscript.RenderScript)>(l0, $r4);

        r0.<android.renderscript.Type: android.renderscript.Element mElement> = $r5;

        $r6 = r0.<android.renderscript.Type: android.renderscript.Element mElement>;

        virtualinvoke $r6.<android.renderscript.Element: void updateFromNative()>();

     label5:
        virtualinvoke r0.<android.renderscript.Type: void calcElementCount()>();

        return;
    }

    public static android.renderscript.Type createX(android.renderscript.RenderScript, android.renderscript.Element, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        int i0;
        long l1, $l2;
        android.renderscript.Type r2, $r3;
        android.renderscript.RSInvalidStateException $r4;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        i0 := @parameter2: int;

        if i0 >= 1 goto label1;

        $r4 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r4.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Dimension must be >= 1.");

        throw $r4;

     label1:
        $l2 = virtualinvoke r1.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r0);

        l1 = virtualinvoke r0.<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>($l2, i0, 0, 0, 0, 0, 0);

        $r3 = new android.renderscript.Type;

        specialinvoke $r3.<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>(l1, r0);

        r2 = $r3;

        r2.<android.renderscript.Type: android.renderscript.Element mElement> = r1;

        r2.<android.renderscript.Type: int mDimX> = i0;

        virtualinvoke r2.<android.renderscript.Type: void calcElementCount()>();

        return r2;
    }

    public static android.renderscript.Type createXY(android.renderscript.RenderScript, android.renderscript.Element, int, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        int i0, i1;
        long l2, $l3;
        android.renderscript.Type r2, $r4;
        android.renderscript.RSInvalidStateException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i0 < 1 goto label1;

        if i1 >= 1 goto label2;

     label1:
        $r3 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r3.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Dimension must be >= 1.");

        throw $r3;

     label2:
        $l3 = virtualinvoke r1.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r0);

        l2 = virtualinvoke r0.<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>($l3, i0, i1, 0, 0, 0, 0);

        $r4 = new android.renderscript.Type;

        specialinvoke $r4.<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>(l2, r0);

        r2 = $r4;

        r2.<android.renderscript.Type: android.renderscript.Element mElement> = r1;

        r2.<android.renderscript.Type: int mDimX> = i0;

        r2.<android.renderscript.Type: int mDimY> = i1;

        virtualinvoke r2.<android.renderscript.Type: void calcElementCount()>();

        return r2;
    }

    public static android.renderscript.Type createXYZ(android.renderscript.RenderScript, android.renderscript.Element, int, int, int)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1;
        int i0, i1, i2;
        long l3, $l4;
        android.renderscript.Type r2, $r4;
        android.renderscript.RSInvalidStateException $r3;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if i0 < 1 goto label1;

        if i1 < 1 goto label1;

        if i2 >= 1 goto label2;

     label1:
        $r3 = new android.renderscript.RSInvalidStateException;

        specialinvoke $r3.<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>("Dimension must be >= 1.");

        throw $r3;

     label2:
        $l4 = virtualinvoke r1.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r0);

        l3 = virtualinvoke r0.<android.renderscript.RenderScript: long nTypeCreate(long,int,int,int,boolean,boolean,int)>($l4, i0, i1, i2, 0, 0, 0);

        $r4 = new android.renderscript.Type;

        specialinvoke $r4.<android.renderscript.Type: void <init>(long,android.renderscript.RenderScript)>(l3, r0);

        r2 = $r4;

        r2.<android.renderscript.Type: android.renderscript.Element mElement> = r1;

        r2.<android.renderscript.Type: int mDimX> = i0;

        r2.<android.renderscript.Type: int mDimY> = i1;

        r2.<android.renderscript.Type: int mDimZ> = i2;

        virtualinvoke r2.<android.renderscript.Type: void calcElementCount()>();

        return r2;
    }
}
