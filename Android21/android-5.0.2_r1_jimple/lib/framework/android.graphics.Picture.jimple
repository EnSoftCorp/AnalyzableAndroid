public class android.graphics.Picture extends java.lang.Object
{
    private android.graphics.Canvas mRecordingCanvas;
    private final long mNativePicture;
    private static final int WORKING_STREAM_STORAGE;

    public void <init>()
    {
        android.graphics.Picture r0;
        long $l0;

        r0 := @this: android.graphics.Picture;

        $l0 = staticinvoke <android.graphics.Picture: long nativeConstructor(long)>(0L);

        specialinvoke r0.<android.graphics.Picture: void <init>(long)>($l0);

        return;
    }

    public void <init>(android.graphics.Picture)
    {
        android.graphics.Picture r0, r1;
        long $l0, $l1;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: android.graphics.Picture;

        if r1 == null goto label1;

        $l1 = r1.<android.graphics.Picture: long mNativePicture>;

        goto label2;

     label1:
        $l1 = 0L;

     label2:
        $l0 = staticinvoke <android.graphics.Picture: long nativeConstructor(long)>($l1);

        specialinvoke r0.<android.graphics.Picture: void <init>(long)>($l0);

        return;
    }

    private void <init>(long)
    {
        android.graphics.Picture r0;
        long l0;
        byte $b1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.Picture;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>()>();

        throw $r1;

     label1:
        r0.<android.graphics.Picture: long mNativePicture> = l0;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Picture r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.graphics.Picture;

     label1:
        $l0 = r0.<android.graphics.Picture: long mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeDestructor(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.graphics.Canvas beginRecording(int, int)
    {
        android.graphics.Picture r0;
        int i0, i1;
        long l2, $l3;
        android.graphics.Picture$RecordingCanvas $r1;
        android.graphics.Canvas $r2;

        r0 := @this: android.graphics.Picture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l3 = r0.<android.graphics.Picture: long mNativePicture>;

        l2 = staticinvoke <android.graphics.Picture: long nativeBeginRecording(long,int,int)>($l3, i0, i1);

        $r1 = new android.graphics.Picture$RecordingCanvas;

        specialinvoke $r1.<android.graphics.Picture$RecordingCanvas: void <init>(android.graphics.Picture,long)>(r0, l2);

        r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas> = $r1;

        $r2 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        return $r2;
    }

    public void endRecording()
    {
        android.graphics.Picture r0;
        android.graphics.Canvas $r1;
        long $l0;

        r0 := @this: android.graphics.Picture;

        $r1 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        if $r1 == null goto label1;

        r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas> = null;

        $l0 = r0.<android.graphics.Picture: long mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeEndRecording(long)>($l0);

     label1:
        return;
    }

    public int getWidth()
    {
        android.graphics.Picture r0;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.Picture;

        $l0 = r0.<android.graphics.Picture: long mNativePicture>;

        $i1 = staticinvoke <android.graphics.Picture: int nativeGetWidth(long)>($l0);

        return $i1;
    }

    public int getHeight()
    {
        android.graphics.Picture r0;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.Picture;

        $l0 = r0.<android.graphics.Picture: long mNativePicture>;

        $i1 = staticinvoke <android.graphics.Picture: int nativeGetHeight(long)>($l0);

        return $i1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.Picture r0;
        android.graphics.Canvas r1, $r2;
        boolean $z0;
        long $l0, $l1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Picture playback is only supported on software canvas.");

        throw $r3;

     label1:
        $r2 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        if $r2 == null goto label2;

        virtualinvoke r0.<android.graphics.Picture: void endRecording()>();

     label2:
        $l0 = virtualinvoke r1.<android.graphics.Canvas: long getNativeCanvasWrapper()>();

        $l1 = r0.<android.graphics.Picture: long mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeDraw(long,long)>($l0, $l1);

        return;
    }

    public static android.graphics.Picture createFromStream(java.io.InputStream)
    {
        java.io.InputStream r0;
        android.graphics.Picture $r1;
        byte[] $r2;
        long $l0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new android.graphics.Picture;

        $r2 = newarray (byte)[16384];

        $l0 = staticinvoke <android.graphics.Picture: long nativeCreateFromStream(java.io.InputStream,byte[])>(r0, $r2);

        specialinvoke $r1.<android.graphics.Picture: void <init>(long)>($l0);

        return $r1;
    }

    public void writeToStream(java.io.OutputStream)
    {
        android.graphics.Picture r0;
        java.io.OutputStream r1;
        byte[] $r2;
        long $l0;
        boolean $z0;
        java.lang.RuntimeException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: java.io.OutputStream;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $l0 = r0.<android.graphics.Picture: long mNativePicture>;

        $r2 = newarray (byte)[16384];

        $z0 = staticinvoke <android.graphics.Picture: boolean nativeWriteToStream(long,java.io.OutputStream,byte[])>($l0, r1, $r2);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    private static native long nativeConstructor(long);

    private static native long nativeCreateFromStream(java.io.InputStream, byte[]);

    private static native int nativeGetWidth(long);

    private static native int nativeGetHeight(long);

    private static native long nativeBeginRecording(long, int, int);

    private static native void nativeEndRecording(long);

    private static native void nativeDraw(long, long);

    private static native boolean nativeWriteToStream(long, java.io.OutputStream, byte[]);

    private static native void nativeDestructor(long);

    public static void <clinit>()
    {
        <android.graphics.Picture: int WORKING_STREAM_STORAGE> = 16384;

        return;
    }
}
