public class android.app.Presentation extends android.app.Dialog
{
    private static final java.lang.String TAG;
    private static final int MSG_CANCEL;
    private final android.view.Display mDisplay;
    private final android.hardware.display.DisplayManager mDisplayManager;
    private final android.hardware.display.DisplayManager$DisplayListener mDisplayListener;
    private final android.os.Handler mHandler;

    public void <init>(android.content.Context, android.view.Display)
    {
        android.app.Presentation r0;
        android.content.Context r1;
        android.view.Display r2;

        r0 := @this: android.app.Presentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Display;

        specialinvoke r0.<android.app.Presentation: void <init>(android.content.Context,android.view.Display,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.view.Display, int)
    {
        android.app.Presentation r0;
        android.content.Context r1, $r3, $r6;
        android.view.Display r2;
        int i0;
        android.app.Presentation$2 $r4;
        android.app.Presentation$3 $r5;
        java.lang.Object $r7;
        android.hardware.display.DisplayManager $r8;
        android.view.Window $r9;

        r0 := @this: android.app.Presentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Display;

        i0 := @parameter2: int;

        $r3 = staticinvoke <android.app.Presentation: android.content.Context createPresentationContext(android.content.Context,android.view.Display,int)>(r1, r2, i0);

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int,boolean)>($r3, i0, 0);

        $r4 = new android.app.Presentation$2;

        specialinvoke $r4.<android.app.Presentation$2: void <init>(android.app.Presentation)>(r0);

        r0.<android.app.Presentation: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r4;

        $r5 = new android.app.Presentation$3;

        specialinvoke $r5.<android.app.Presentation$3: void <init>(android.app.Presentation)>(r0);

        r0.<android.app.Presentation: android.os.Handler mHandler> = $r5;

        r0.<android.app.Presentation: android.view.Display mDisplay> = r2;

        $r6 = virtualinvoke r0.<android.app.Presentation: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r8 = (android.hardware.display.DisplayManager) $r7;

        r0.<android.app.Presentation: android.hardware.display.DisplayManager mDisplayManager> = $r8;

        $r9 = virtualinvoke r0.<android.app.Presentation: android.view.Window getWindow()>();

        virtualinvoke $r9.<android.view.Window: void setGravity(int)>(119);

        virtualinvoke r0.<android.app.Presentation: void setCanceledOnTouchOutside(boolean)>(0);

        return;
    }

    public android.view.Display getDisplay()
    {
        android.app.Presentation r0;
        android.view.Display $r1;

        r0 := @this: android.app.Presentation;

        $r1 = r0.<android.app.Presentation: android.view.Display mDisplay>;

        return $r1;
    }

    public android.content.res.Resources getResources()
    {
        android.app.Presentation r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        r0 := @this: android.app.Presentation;

        $r1 = virtualinvoke r0.<android.app.Presentation: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        return $r2;
    }

    protected void onStart()
    {
        android.app.Presentation r0;
        android.os.Handler $r1, $r4;
        android.hardware.display.DisplayManager$DisplayListener $r2;
        android.hardware.display.DisplayManager $r3;
        boolean $z0;

        r0 := @this: android.app.Presentation;

        specialinvoke r0.<android.app.Dialog: void onStart()>();

        $r3 = r0.<android.app.Presentation: android.hardware.display.DisplayManager mDisplayManager>;

        $r2 = r0.<android.app.Presentation: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        $r1 = r0.<android.app.Presentation: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r2, $r1);

        $z0 = specialinvoke r0.<android.app.Presentation: boolean isConfigurationStillValid()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Presentation", "Presentation is being immediately dismissed because the display metrics have changed since it was created.");

        $r4 = r0.<android.app.Presentation: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    protected void onStop()
    {
        android.app.Presentation r0;
        android.hardware.display.DisplayManager$DisplayListener $r1;
        android.hardware.display.DisplayManager $r2;

        r0 := @this: android.app.Presentation;

        $r2 = r0.<android.app.Presentation: android.hardware.display.DisplayManager mDisplayManager>;

        $r1 = r0.<android.app.Presentation: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r2.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r1);

        specialinvoke r0.<android.app.Dialog: void onStop()>();

        return;
    }

    public void show()
    {
        android.app.Presentation r0;

        r0 := @this: android.app.Presentation;

        specialinvoke r0.<android.app.Dialog: void show()>();

        return;
    }

    public void onDisplayRemoved()
    {
        android.app.Presentation r0;

        r0 := @this: android.app.Presentation;

        return;
    }

    public void onDisplayChanged()
    {
        android.app.Presentation r0;

        r0 := @this: android.app.Presentation;

        return;
    }

    private void handleDisplayRemoved()
    {
        android.app.Presentation r0;

        r0 := @this: android.app.Presentation;

        virtualinvoke r0.<android.app.Presentation: void onDisplayRemoved()>();

        virtualinvoke r0.<android.app.Presentation: void cancel()>();

        return;
    }

    private void handleDisplayChanged()
    {
        android.app.Presentation r0;
        boolean $z0;

        r0 := @this: android.app.Presentation;

        virtualinvoke r0.<android.app.Presentation: void onDisplayChanged()>();

        $z0 = specialinvoke r0.<android.app.Presentation: boolean isConfigurationStillValid()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.app.Presentation: void cancel()>();

     label1:
        return;
    }

    private boolean isConfigurationStillValid()
    {
        android.app.Presentation r0;
        android.util.DisplayMetrics r1, $r2, $r5;
        android.view.Display $r3;
        android.content.res.Resources $r4;
        boolean $z0;

        r0 := @this: android.app.Presentation;

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        r1 = $r2;

        $r3 = r0.<android.app.Presentation: android.view.Display mDisplay>;

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $r4 = virtualinvoke r0.<android.app.Presentation: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $z0 = virtualinvoke r1.<android.util.DisplayMetrics: boolean equalsPhysical(android.util.DisplayMetrics)>($r5);

        return $z0;
    }

    private static android.content.Context createPresentationContext(android.content.Context, android.view.Display, int)
    {
        android.content.Context r0, r2;
        android.view.Display r1;
        int i0;
        android.util.TypedValue r3, $r7;
        android.view.WindowManagerImpl r4, r11;
        java.lang.Object $r5;
        android.app.Presentation$1 $r6;
        android.content.res.Resources$Theme $r8;
        java.lang.IllegalArgumentException $r9, $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.Display;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outerContext must not be null");

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("display must not be null");

        throw $r9;

     label2:
        r2 = virtualinvoke r0.<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>(r1);

        if i0 != 0 goto label3;

        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        r3 = $r7;

        $r8 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r8.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843712, r3, 1);

        i0 = r3.<android.util.TypedValue: int resourceId>;

     label3:
        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r11 = (android.view.WindowManagerImpl) $r5;

        r4 = virtualinvoke r11.<android.view.WindowManagerImpl: android.view.WindowManagerImpl createPresentationWindowManager(android.view.Display)>(r1);

        $r6 = new android.app.Presentation$1;

        specialinvoke $r6.<android.app.Presentation$1: void <init>(android.content.Context,int,android.view.WindowManagerImpl)>(r2, i0, r4);

        return $r6;
    }

    static android.view.Display access$000(android.app.Presentation)
    {
        android.app.Presentation r0;
        android.view.Display $r1;

        r0 := @parameter0: android.app.Presentation;

        $r1 = r0.<android.app.Presentation: android.view.Display mDisplay>;

        return $r1;
    }

    static void access$100(android.app.Presentation)
    {
        android.app.Presentation r0;

        r0 := @parameter0: android.app.Presentation;

        specialinvoke r0.<android.app.Presentation: void handleDisplayRemoved()>();

        return;
    }

    static void access$200(android.app.Presentation)
    {
        android.app.Presentation r0;

        r0 := @parameter0: android.app.Presentation;

        specialinvoke r0.<android.app.Presentation: void handleDisplayChanged()>();

        return;
    }

    public static void <clinit>()
    {
        <android.app.Presentation: int MSG_CANCEL> = 1;

        <android.app.Presentation: java.lang.String TAG> = "Presentation";

        return;
    }
}
