class android.media.SRTTrack extends android.media.WebVttTrack
{
    private static final int MEDIA_TIMED_TEXT;
    private static final int KEY_STRUCT_TEXT;
    private static final int KEY_START_TIME;
    private static final int KEY_LOCAL_SETTING;
    private static final java.lang.String TAG;
    private final android.os.Handler mEventHandler;

    void <init>(android.media.WebVttRenderingWidget, android.media.MediaFormat)
    {
        android.media.SRTTrack r0;
        android.media.WebVttRenderingWidget r1;
        android.media.MediaFormat r2;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: android.media.WebVttRenderingWidget;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.WebVttTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>(r1, r2);

        r0.<android.media.SRTTrack: android.os.Handler mEventHandler> = null;

        return;
    }

    void <init>(android.os.Handler, android.media.MediaFormat)
    {
        android.media.SRTTrack r0;
        android.os.Handler r1;
        android.media.MediaFormat r2;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.WebVttTrack: void <init>(android.media.WebVttRenderingWidget,android.media.MediaFormat)>(null, r2);

        r0.<android.media.SRTTrack: android.os.Handler mEventHandler> = r1;

        return;
    }

    protected void onData(android.media.SubtitleData)
    {
        android.media.SRTTrack r0;
        android.media.SubtitleData r1;
        android.media.TextTrackCue r2, $r8;
        java.lang.String r3, r6, $r10, $r17;
        java.lang.String[] r4, r5;
        int i0, i1, i2, $i9, $i10;
        android.media.TextTrackCueSpan[] r7, $r13;
        long $l3, $l4, $l5, $l6, $l7, $l8;
        byte[] $r9;
        android.media.TextTrackCueSpan[][] $r11, $r15;
        android.media.TextTrackCueSpan $r12;
        java.io.UnsupportedEncodingException $r14, r20;
        java.lang.StringBuilder $r16, $r18, $r19;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: android.media.SubtitleData;

     label1:
        $r8 = new android.media.TextTrackCue;

        specialinvoke $r8.<android.media.TextTrackCue: void <init>()>();

        r2 = $r8;

        $l3 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        $l4 = $l3 / 1000L;

        r2.<android.media.TextTrackCue: long mStartTimeMs> = $l4;

        $l5 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        $l6 = virtualinvoke r1.<android.media.SubtitleData: long getDurationUs()>();

        $l8 = $l5 + $l6;

        $l7 = $l8 / 1000L;

        r2.<android.media.TextTrackCue: long mEndTimeMs> = $l7;

        $r10 = new java.lang.String;

        $r9 = virtualinvoke r1.<android.media.SubtitleData: byte[] getData()>();

        specialinvoke $r10.<java.lang.String: void <init>(byte[],java.lang.String)>($r9, "UTF-8");

        r3 = $r10;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\r?\\n");

        $i9 = lengthof r4;

        $r11 = newarray (android.media.TextTrackCueSpan[])[$i9];

        r2.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r11;

        i0 = 0;

        r5 = r4;

        i1 = lengthof r5;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r6 = r5[i2];

        $r13 = newarray (android.media.TextTrackCueSpan)[1];

        $r12 = new android.media.TextTrackCueSpan;

        specialinvoke $r12.<android.media.TextTrackCueSpan: void <init>(java.lang.String,long)>(r6, -1L);

        $r13[0] = $r12;

        r7 = $r13;

        $r15 = r2.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        $i10 = i0;

        i0 = i0 + 1;

        $r15[$i10] = r7;

        i2 = i2 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<android.media.SRTTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r2);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r20 = $r14;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SRTTrack", $r17);

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    public void onData(byte[], boolean, long)
    {
        android.media.SRTTrack r0;
        byte[] r1;
        boolean z0, $z1, $z4;
        long l0, $l2, $l3;
        java.io.InputStreamReader r2, $r13;
        java.io.BufferedReader r3, $r15;
        android.media.TextTrackCue r5, $r16;
        java.lang.String[] r6, $r21, $r24, $r29;
        java.lang.String r7, r10, $r14, $r17, $r18, $r20, $r31, $r36, $r37, r38;
        java.util.ArrayList r8, $r19;
        int i1, $i4, $i5;
        java.util.Iterator r9;
        android.media.TextTrackCueSpan[] r11, $r25;
        java.io.ByteArrayInputStream $r12;
        android.media.TextTrackCueSpan[][] $r22, $r28;
        java.lang.Object[] $r23;
        android.media.TextTrackCueSpan $r26;
        java.lang.Object $r27;
        java.io.UnsupportedEncodingException $r30, r39;
        java.lang.StringBuilder $r32, $r33, $r34;
        java.io.IOException $r35, r40;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

     label01:
        $r13 = new java.io.InputStreamReader;

        $r12 = new java.io.ByteArrayInputStream;

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r12, "UTF-8");

        r2 = $r13;

        $r15 = new java.io.BufferedReader;

        specialinvoke $r15.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

        r3 = $r15;

     label02:
        $r14 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r14 == null goto label08;

        r38 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if r38 != null goto label03;

        goto label08;

     label03:
        $r16 = new android.media.TextTrackCue;

        specialinvoke $r16.<android.media.TextTrackCue: void <init>()>();

        r5 = $r16;

        r6 = virtualinvoke r38.<java.lang.String: java.lang.String[] split(java.lang.String)>("-->");

        $r17 = r6[0];

        $l2 = staticinvoke <android.media.SRTTrack: long parseMs(java.lang.String)>($r17);

        r5.<android.media.TextTrackCue: long mStartTimeMs> = $l2;

        $r18 = r6[1];

        $l3 = staticinvoke <android.media.SRTTrack: long parseMs(java.lang.String)>($r18);

        r5.<android.media.TextTrackCue: long mEndTimeMs> = $l3;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r8 = $r19;

     label04:
        $r20 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r7 = $r20;

        if $r20 == null goto label05;

        $r31 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 != 0 goto label05;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label04;

     label05:
        i1 = 0;

        $i4 = interfaceinvoke r8.<java.util.List: int size()>();

        $r22 = newarray (android.media.TextTrackCueSpan[])[$i4];

        r5.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r22;

        $r21 = newarray (java.lang.String)[0];

        $r23 = interfaceinvoke r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21);

        $r24 = (java.lang.String[]) $r23;

        r5.<android.media.TextTrackCue: java.lang.String[] mStrings> = $r24;

        r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r27 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r27;

        $r25 = newarray (android.media.TextTrackCueSpan)[1];

        $r26 = new android.media.TextTrackCueSpan;

        specialinvoke $r26.<android.media.TextTrackCueSpan: void <init>(java.lang.String,long)>(r10, -1L);

        $r25[0] = $r26;

        r11 = $r25;

        $r29 = r5.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        $r29[i1] = r10;

        $r28 = r5.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        $i5 = i1;

        i1 = i1 + 1;

        $r28[$i5] = r11;

        goto label06;

     label07:
        virtualinvoke r0.<android.media.SRTTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r5);

        goto label02;

     label08:
        goto label11;

     label09:
        $r30 := @caughtexception;

        r39 = $r30;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data is not UTF-8 encoded: ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SRTTrack", $r36);

        goto label11;

     label10:
        $r35 := @caughtexception;

        r40 = $r35;

        $r37 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SRTTrack", $r37, r40);

     label11:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label08 with label09;
        catch java.io.IOException from label01 to label08 with label10;
    }

    public void updateView(java.util.Vector)
    {
        android.media.SRTTrack r0;
        java.util.Vector r1;
        java.util.Iterator r2;
        android.media.SubtitleTrack$Cue r3;
        android.media.TextTrackCue r4;
        android.os.Parcel r5;
        java.lang.StringBuilder r6, $r13, $r17;
        java.lang.String[] r7;
        int i0, i1, $i2, $i4;
        java.lang.String r8, $r12;
        android.media.WebVttRenderingWidget $r9;
        android.os.Handler $r10, $r14, $r15;
        boolean $z1;
        java.lang.Object $r11;
        long $l3;
        byte[] r18;
        android.os.Message r19;

        r0 := @this: android.media.SRTTrack;

        r1 := @parameter0: java.util.Vector;

        $r9 = virtualinvoke r0.<android.media.SRTTrack: android.media.WebVttRenderingWidget getRenderingWidget()>();

        if $r9 == null goto label1;

        specialinvoke r0.<android.media.WebVttTrack: void updateView(java.util.Vector)>(r1);

        return;

     label1:
        $r10 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        if $r10 != null goto label2;

        return;

     label2:
        r2 = virtualinvoke r1.<java.util.Vector: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.SubtitleTrack$Cue) $r11;

        r4 = (android.media.TextTrackCue) r3;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(102);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(7);

        $l3 = r3.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $i2 = (int) $l3;

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(16);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r6 = $r13;

        r7 = r4.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        i0 = lengthof r7;

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        r8 = r7[i1];

        $r17 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

        goto label4;

     label5:
        $r12 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        $i4 = lengthof r18;

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>($i4);

        virtualinvoke r5.<android.os.Parcel: void writeByteArray(byte[])>(r18);

        $r14 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        r19 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(99, 0, 0, r5);

        $r15 = r0.<android.media.SRTTrack: android.os.Handler mEventHandler>;

        virtualinvoke $r15.<android.os.Handler: boolean sendMessage(android.os.Message)>(r19);

        goto label3;

     label6:
        virtualinvoke r1.<java.util.Vector: void clear()>();

        return;
    }

    private static long parseMs(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r5, $r6, $r9, $r10, $r11, $r14, $r15, $r16;
        long l0, l1, l2, l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12;
        java.lang.String[] $r1, $r4, $r7, $r8, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r5 = $r4[1];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r9 = $r7[2];

        $r8 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r11 = $r8[0];

        $r10 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r14 = $r12[2];

        $r13 = virtualinvoke $r14.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r16 = $r13[1];

        $r15 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r15);

        $l4 = l0 * 60L;

        $l6 = $l4 * 60L;

        $l10 = $l6 * 1000L;

        $l5 = l1 * 60L;

        $l9 = $l5 * 1000L;

        $l8 = $l10 + $l9;

        $l7 = l2 * 1000L;

        $l11 = $l8 + $l7;

        $l12 = $l11 + l3;

        return $l12;
    }

    public static void <clinit>()
    {
        <android.media.SRTTrack: java.lang.String TAG> = "SRTTrack";

        <android.media.SRTTrack: int KEY_LOCAL_SETTING> = 102;

        <android.media.SRTTrack: int KEY_START_TIME> = 7;

        <android.media.SRTTrack: int KEY_STRUCT_TEXT> = 16;

        <android.media.SRTTrack: int MEDIA_TIMED_TEXT> = 99;

        return;
    }
}
