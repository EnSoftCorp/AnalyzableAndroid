final class android.hardware.hdmi.HdmiTvClient$3 extends android.hardware.hdmi.IHdmiRecordListener$Stub
{
    final android.hardware.hdmi.HdmiRecordListener val$callback;

    void <init>(android.hardware.hdmi.HdmiRecordListener)
    {
        android.hardware.hdmi.HdmiTvClient$3 r0;
        android.hardware.hdmi.HdmiRecordListener r1;

        r0 := @this: android.hardware.hdmi.HdmiTvClient$3;

        r1 := @parameter0: android.hardware.hdmi.HdmiRecordListener;

        r0.<android.hardware.hdmi.HdmiTvClient$3: android.hardware.hdmi.HdmiRecordListener val$callback> = r1;

        specialinvoke r0.<android.hardware.hdmi.IHdmiRecordListener$Stub: void <init>()>();

        return;
    }

    public byte[] getOneTouchRecordSource(int)
    {
        android.hardware.hdmi.HdmiTvClient$3 r0;
        int i0, $i1;
        android.hardware.hdmi.HdmiRecordSources$RecordSource r1;
        byte[] r2, $r4;
        android.hardware.hdmi.HdmiRecordListener $r3;

        r0 := @this: android.hardware.hdmi.HdmiTvClient$3;

        i0 := @parameter0: int;

        $r3 = r0.<android.hardware.hdmi.HdmiTvClient$3: android.hardware.hdmi.HdmiRecordListener val$callback>;

        r1 = virtualinvoke $r3.<android.hardware.hdmi.HdmiRecordListener: android.hardware.hdmi.HdmiRecordSources$RecordSource getOneTouchRecordSource(int)>(i0);

        if r1 != null goto label1;

        $r4 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r4;

     label1:
        $i1 = virtualinvoke r1.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int getDataSize(boolean)>(1);

        r2 = newarray (byte)[$i1];

        virtualinvoke r1.<android.hardware.hdmi.HdmiRecordSources$RecordSource: int toByteArray(boolean,byte[],int)>(1, r2, 0);

        return r2;
    }

    public void onOneTouchRecordResult(int)
    {
        android.hardware.hdmi.HdmiTvClient$3 r0;
        int i0;
        android.hardware.hdmi.HdmiRecordListener $r1;

        r0 := @this: android.hardware.hdmi.HdmiTvClient$3;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.hdmi.HdmiTvClient$3: android.hardware.hdmi.HdmiRecordListener val$callback>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiRecordListener: void onOneTouchRecordResult(int)>(i0);

        return;
    }

    public void onTimerRecordingResult(int)
    {
        android.hardware.hdmi.HdmiTvClient$3 r0;
        int i0;
        android.hardware.hdmi.HdmiRecordListener $r1;
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData $r2;

        r0 := @this: android.hardware.hdmi.HdmiTvClient$3;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.hdmi.HdmiTvClient$3: android.hardware.hdmi.HdmiRecordListener val$callback>;

        $r2 = staticinvoke <android.hardware.hdmi.HdmiRecordListener$TimerStatusData: android.hardware.hdmi.HdmiRecordListener$TimerStatusData parseFrom(int)>(i0);

        virtualinvoke $r1.<android.hardware.hdmi.HdmiRecordListener: void onTimerRecordingResult(android.hardware.hdmi.HdmiRecordListener$TimerStatusData)>($r2);

        return;
    }

    public void onClearTimerRecordingResult(int)
    {
        android.hardware.hdmi.HdmiTvClient$3 r0;
        int i0;
        android.hardware.hdmi.HdmiRecordListener $r1;

        r0 := @this: android.hardware.hdmi.HdmiTvClient$3;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.hdmi.HdmiTvClient$3: android.hardware.hdmi.HdmiRecordListener val$callback>;

        virtualinvoke $r1.<android.hardware.hdmi.HdmiRecordListener: void onClearTimerRecordingResult(int)>(i0);

        return;
    }
}
