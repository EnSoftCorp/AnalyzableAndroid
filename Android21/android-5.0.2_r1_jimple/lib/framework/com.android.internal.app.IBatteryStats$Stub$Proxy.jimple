class com.android.internal.app.IBatteryStats$Stub$Proxy extends java.lang.Object implements com.android.internal.app.IBatteryStats
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        $r1 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        return "com.android.internal.app.IBatteryStats";
    }

    public void noteStartSensor(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopSensor(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartVideo(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopVideo(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartAudio(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopAudio(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteResetVideo() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteResetAudio() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] getStatistics() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        byte[] r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r3 = virtualinvoke r2.<android.os.Parcel: byte[] createByteArray()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.ParcelFileDescriptor getStatisticsStream() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.os.ParcelFileDescriptor r3;
        java.lang.Throwable r4, $r8;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $r6 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r3 = (android.os.ParcelFileDescriptor) $r7;

        goto label3;

     label2:
        r3 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public long computeBatteryTimeRemaining() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        long l0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return l0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long computeChargeTimeRemaining() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        long l0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return l0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteEvent(int, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteSyncStart(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteSyncFinish(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteJobStart(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteJobFinish(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartWakelock(int, int, java.lang.String, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1, r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        byte $b3;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        if z0 == 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b3);

        $r6 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteStopWakelock(int, int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1, i2;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2, r3;
        boolean z0;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;
        byte $b2;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label3;

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        if z0 == 0 goto label4;

        $b2 = 1;

        goto label5;

     label4:
        $b2 = 0;

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>($b2);

        $r7 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r6 = $r8;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void noteChangeWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int, android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1, r4;
        int i0, i1, i2, i3;
        java.lang.String r2, r3, r5, r6;
        boolean z0;
        android.os.Parcel r7, r8;
        java.lang.Throwable r9, $r11;
        android.os.IBinder $r10;
        byte $b4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.WorkSource;

        i2 := @parameter6: int;

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r8 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r7.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label02;

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r7, 0);

        goto label03;

     label02:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r7.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r7.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(i1);

        if r4 == null goto label04;

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r7, 0);

        goto label05;

     label04:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(0);

     label05:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r7.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        virtualinvoke r7.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>(i3);

        if z0 == 0 goto label06;

        $b4 = 1;

        goto label07;

     label06:
        $b4 = 0;

     label07:
        virtualinvoke r7.<android.os.Parcel: void writeInt(int)>($b4);

        $r10 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r7, r8, 0);

        virtualinvoke r8.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r11 := @caughtexception;

        r9 = $r11;

     label10:
        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        throw r9;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void noteStopWakelockFromSource(android.os.WorkSource, int, java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2, r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label3;

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r6 = $r8;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteVibratorOn(int, long) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteVibratorOff(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFlashlightOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFlashlightOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStartGps(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteStopGps(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenState(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteScreenBrightness(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteUserActivity(int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteInteractive(boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b0;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(32, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteMobileRadioPowerState(int, long) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(33, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(34, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(35, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void notePhoneSignalStrength(android.telephony.SignalStrength) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.telephony.SignalStrength r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.telephony.SignalStrength;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(36, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void notePhoneDataConnectionState(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(37, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void notePhoneState(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(38, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(39, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(40, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiRunning(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(41, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiRunningChanged(android.os.WorkSource, android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.WorkSource;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(42, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

        r5 = $r7;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void noteWifiStopped(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(43, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiState(int, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(44, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiSupplicantStateChanged(int, boolean) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(45, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiRssiChanged(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(46, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothOn() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(47, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothOff() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(48, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteBluetoothState(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(49, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockAcquired(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(50, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockReleased(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(51, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStarted(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(52, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiScanStopped(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(53, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastEnabled(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(54, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteWifiMulticastDisabled(int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(55, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteFullWifiLockAcquiredFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(56, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteFullWifiLockReleasedFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(57, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiScanStartedFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(58, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiScanStoppedFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(59, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiBatchedScanStartedFromSource(android.os.WorkSource, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(60, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(61, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiMulticastEnabledFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(62, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteWifiMulticastDisabledFromSource(android.os.WorkSource) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.WorkSource r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: android.os.WorkSource;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(63, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void noteNetworkInterfaceType(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(64, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void noteNetworkStatsEnabled() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(65, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setBatteryState(int, int, int, int, int, int) throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        int i0, i1, i2, i3, i4, i5;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(66, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getAwakeTimeBattery() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        long l0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(67, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return l0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getAwakeTimePlugged() throws android.os.RemoteException
    {
        com.android.internal.app.IBatteryStats$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        long l0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.app.IBatteryStats$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.app.IBatteryStats");

        $r4 = r0.<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(68, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        l0 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return l0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
