public final class android.hardware.ConsumerIrManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.String mPackageName;
    private final android.hardware.IConsumerIrService mService;

    public void <init>(android.content.Context)
    {
        android.hardware.ConsumerIrManager r0;
        android.content.Context r1;
        java.lang.String $r2;
        android.os.IBinder $r3;
        android.hardware.IConsumerIrService $r4;

        r0 := @this: android.hardware.ConsumerIrManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.hardware.ConsumerIrManager: java.lang.String mPackageName> = $r2;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("consumer_ir");

        $r4 = staticinvoke <android.hardware.IConsumerIrService$Stub: android.hardware.IConsumerIrService asInterface(android.os.IBinder)>($r3);

        r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService> = $r4;

        return;
    }

    public boolean hasIrEmitter()
    {
        android.hardware.ConsumerIrManager r0;
        android.hardware.IConsumerIrService $r2, $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.hardware.ConsumerIrManager;

        $r2 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConsumerIr", "no consumer ir service.");

        return 0;

     label1:
        $r3 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        $z0 = interfaceinvoke $r3.<android.hardware.IConsumerIrService: boolean hasIrEmitter()>();

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void transmit(int, int[])
    {
        android.hardware.ConsumerIrManager r0;
        int i0;
        int[] r1;
        android.os.RemoteException r2, $r6;
        android.hardware.IConsumerIrService $r3, $r5;
        java.lang.String $r4;

        r0 := @this: android.hardware.ConsumerIrManager;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        $r3 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConsumerIr", "failed to transmit; no consumer ir service.");

        return;

     label1:
        $r5 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        $r4 = r0.<android.hardware.ConsumerIrManager: java.lang.String mPackageName>;

        interfaceinvoke $r5.<android.hardware.IConsumerIrService: void transmit(java.lang.String,int,int[])>($r4, i0, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ConsumerIr", "failed to transmit.", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.hardware.ConsumerIrManager$CarrierFrequencyRange[] getCarrierFrequencies()
    {
        android.hardware.ConsumerIrManager r0;
        int[] r1;
        android.hardware.ConsumerIrManager$CarrierFrequencyRange[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        android.hardware.IConsumerIrService $r3, $r4;
        android.hardware.ConsumerIrManager$CarrierFrequencyRange $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.hardware.ConsumerIrManager;

        $r3 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        if $r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConsumerIr", "no consumer ir service.");

        return null;

     label1:
        $r4 = r0.<android.hardware.ConsumerIrManager: android.hardware.IConsumerIrService mService>;

        r1 = interfaceinvoke $r4.<android.hardware.IConsumerIrService: int[] getCarrierFrequencies()>();

        $i1 = lengthof r1;

        $i2 = $i1 % 2;

        if $i2 == 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ConsumerIr", "consumer ir service returned an uneven number of frequencies.");

     label2:
        return null;

     label3:
        $i3 = lengthof r1;

        $i4 = $i3 / 2;

        r2 = newarray (android.hardware.ConsumerIrManager$CarrierFrequencyRange)[$i4];

        i0 = 0;

     label4:
        $i5 = lengthof r1;

        if i0 >= $i5 goto label5;

        $i10 = i0 / 2;

        $r5 = new android.hardware.ConsumerIrManager$CarrierFrequencyRange;

        $i8 = r1[i0];

        $i6 = i0 + 1;

        $i7 = r1[$i6];

        specialinvoke $r5.<android.hardware.ConsumerIrManager$CarrierFrequencyRange: void <init>(android.hardware.ConsumerIrManager,int,int)>(r0, $i8, $i7);

        r2[$i10] = $r5;

        i0 = i0 + 2;

        goto label4;

     label5:
        return r2;

     label6:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label5 with label6;
    }

    public static void <clinit>()
    {
        <android.hardware.ConsumerIrManager: java.lang.String TAG> = "ConsumerIr";

        return;
    }
}
