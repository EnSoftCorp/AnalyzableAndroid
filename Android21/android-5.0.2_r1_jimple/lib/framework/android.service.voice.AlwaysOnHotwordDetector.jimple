public class android.service.voice.AlwaysOnHotwordDetector extends java.lang.Object
{
    private static final int STATE_INVALID;
    public static final int STATE_HARDWARE_UNAVAILABLE;
    public static final int STATE_KEYPHRASE_UNSUPPORTED;
    public static final int STATE_KEYPHRASE_UNENROLLED;
    public static final int STATE_KEYPHRASE_ENROLLED;
    private static final int STATE_NOT_READY;
    public static final int MANAGE_ACTION_ENROLL;
    public static final int MANAGE_ACTION_RE_ENROLL;
    public static final int MANAGE_ACTION_UN_ENROLL;
    public static final int RECOGNITION_FLAG_NONE;
    public static final int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO;
    public static final int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS;
    public static final int RECOGNITION_MODE_VOICE_TRIGGER;
    public static final int RECOGNITION_MODE_USER_IDENTIFICATION;
    static final java.lang.String TAG;
    static final boolean DBG;
    private static final int STATUS_ERROR;
    private static final int STATUS_OK;
    private static final int MSG_AVAILABILITY_CHANGED;
    private static final int MSG_HOTWORD_DETECTED;
    private static final int MSG_DETECTION_ERROR;
    private static final int MSG_DETECTION_PAUSE;
    private static final int MSG_DETECTION_RESUME;
    private final java.lang.String mText;
    private final java.util.Locale mLocale;
    private final android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata;
    private final android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo;
    private final android.service.voice.IVoiceInteractionService mVoiceInteractionService;
    private final com.android.internal.app.IVoiceInteractionManagerService mModelManagementService;
    private final android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback;
    private final android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback;
    private final java.lang.Object mLock;
    private final android.os.Handler mHandler;
    private int mAvailability;

    public void <init>(java.lang.String, java.util.Locale, android.service.voice.AlwaysOnHotwordDetector$Callback, android.hardware.soundtrigger.KeyphraseEnrollmentInfo, android.service.voice.IVoiceInteractionService, com.android.internal.app.IVoiceInteractionManagerService)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.String r1;
        java.util.Locale r2;
        android.service.voice.AlwaysOnHotwordDetector$Callback r3;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo r4, $r8;
        android.service.voice.IVoiceInteractionService r5;
        com.android.internal.app.IVoiceInteractionManagerService r6;
        java.lang.Object $r7;
        android.hardware.soundtrigger.KeyphraseMetadata $r9;
        android.service.voice.AlwaysOnHotwordDetector$MyHandler $r10;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener $r11;
        android.os.Handler $r12;
        android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask $r13;
        java.lang.Void[] $r14;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: android.service.voice.AlwaysOnHotwordDetector$Callback;

        r4 := @parameter3: android.hardware.soundtrigger.KeyphraseEnrollmentInfo;

        r5 := @parameter4: android.service.voice.IVoiceInteractionService;

        r6 := @parameter5: com.android.internal.app.IVoiceInteractionManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock> = $r7;

        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = 0;

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText> = r1;

        r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale> = r2;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo> = r4;

        $r8 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        $r9 = virtualinvoke $r8.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.hardware.soundtrigger.KeyphraseMetadata getKeyphraseMetadata(java.lang.String,java.util.Locale)>(r1, r2);

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata> = $r9;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback> = r3;

        $r10 = new android.service.voice.AlwaysOnHotwordDetector$MyHandler;

        specialinvoke $r10.<android.service.voice.AlwaysOnHotwordDetector$MyHandler: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler> = $r10;

        $r11 = new android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener;

        $r12 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler>;

        specialinvoke $r11.<android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener: void <init>(android.os.Handler)>($r12);

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback> = $r11;

        r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.IVoiceInteractionService mVoiceInteractionService> = r5;

        r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService> = r6;

        $r13 = new android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask;

        specialinvoke $r13.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        $r14 = newarray (java.lang.Void)[0];

        virtualinvoke $r13.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: android.os.AsyncTask execute(java.lang.Object[])>($r14);

        return;
    }

    public int getSupportedRecognitionModes()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModesLocked()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private int getSupportedRecognitionModesLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int $i0, $i1, $i2, $i3;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 != -3 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getSupportedRecognitionModes called on an invalid detector");

        throw $r3;

     label1:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 == 2 goto label2;

        $i3 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i3 == 1 goto label2;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Getting supported recognition modes for the keyphrase is not supported");

        throw $r2;

     label2:
        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i2 = $r1.<android.hardware.soundtrigger.KeyphraseMetadata: int recognitionModeFlags>;

        return $i2;
    }

    public boolean startRecognition(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 != -3 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("startRecognition called on an invalid detector");

        throw $r5;

     label2:
        $i2 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i2 == 2 goto label3;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Recognition for the given keyphrase is not supported");

        throw $r4;

     label3:
        $i3 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int startRecognitionLocked(int)>(i0);

        if $i3 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        exitmonitor r1;

     label6:
        return $z0;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean stopRecognition()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 != -3 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("stopRecognition called on an invalid detector");

        throw $r5;

     label2:
        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 == 2 goto label3;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Recognition for the given keyphrase is not supported");

        throw $r4;

     label3:
        $i2 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int stopRecognitionLocked()>();

        if $i2 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        exitmonitor r1;

     label6:
        return $z0;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.content.Intent createEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.content.Intent $r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(0);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.Intent createUnEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.content.Intent $r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(2);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.Intent createReEnrollIntent()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.content.Intent $r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent getManageIntentLocked(int)>(1);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.content.Intent getManageIntentLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1, $i2, $i3;
        java.util.Locale $r1;
        java.lang.String $r2;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r3;
        android.content.Intent $r4;
        java.lang.UnsupportedOperationException $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        $i1 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i1 != -3 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getManageIntent called on an invalid detector");

        throw $r6;

     label1:
        $i2 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i2 == 2 goto label2;

        $i3 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i3 == 1 goto label2;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Managing the given keyphrase is not supported");

        throw $r5;

     label2:
        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText>;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        $r4 = virtualinvoke $r3.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.content.Intent getManageKeyphraseIntent(int,java.lang.String,java.util.Locale)>(i0, $r2, $r1);

        return $r4;
    }

    void invalidate()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = -3;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: void notifyStateChangedLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void onSoundModelsChanged()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        int $i0, $i2, $i3;
        android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask $r4;
        java.lang.Void[] $r5;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i0 == -3 goto label2;

        $i2 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i2 == -2 goto label2;

        $i3 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        if $i3 != -1 goto label4;

     label2:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", "Received onSoundModelsChanged for an unsupported keyphrase/config");

        exitmonitor r1;

     label3:
        return;

     label4:
        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: int stopRecognitionLocked()>();

        $r4 = new android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask;

        specialinvoke $r4.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: void <init>(android.service.voice.AlwaysOnHotwordDetector)>(r0);

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r4.<android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask: android.os.AsyncTask execute(java.lang.Object[])>($r5);

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private int startRecognitionLocked(int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[] r1;
        boolean z0, z1, $z2, $z3;
        android.os.RemoteException r2, $r18;
        android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra $r3;
        android.hardware.soundtrigger.KeyphraseMetadata $r4, $r5, $r8;
        android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel[] $r6;
        java.util.Locale $r7;
        android.service.voice.IVoiceInteractionService $r9;
        com.android.internal.app.IVoiceInteractionManagerService $r10;
        java.lang.String $r11, $r16;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener $r12;
        android.hardware.soundtrigger.SoundTrigger$RecognitionConfig $r13;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter0: int;

        r1 = newarray (android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra)[1];

        $r3 = new android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra;

        $r4 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i3 = $r4.<android.hardware.soundtrigger.KeyphraseMetadata: int id>;

        $r5 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i2 = $r5.<android.hardware.soundtrigger.KeyphraseMetadata: int recognitionModeFlags>;

        $r6 = newarray (android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel)[0];

        specialinvoke $r3.<android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra: void <init>(int,int,int,android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel[])>($i3, $i2, 0, $r6);

        r1[0] = $r3;

        $i4 = i0 & 1;

        if $i4 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $i5 = i0 & 2;

        if $i5 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;

        i1 = -2147483648;

     label5:
        $r10 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r9 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.IVoiceInteractionService mVoiceInteractionService>;

        $r8 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i6 = $r8.<android.hardware.soundtrigger.KeyphraseMetadata: int id>;

        $r7 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        $r11 = virtualinvoke $r7.<java.util.Locale: java.lang.String toLanguageTag()>();

        $r12 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback>;

        $r13 = new android.hardware.soundtrigger.SoundTrigger$RecognitionConfig;

        specialinvoke $r13.<android.hardware.soundtrigger.SoundTrigger$RecognitionConfig: void <init>(boolean,boolean,android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra[],byte[])>(z0, z1, r1, null);

        i1 = interfaceinvoke $r10.<com.android.internal.app.IVoiceInteractionManagerService: int startRecognition(android.service.voice.IVoiceInteractionService,int,java.lang.String,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>($r9, $i6, $r11, $r12, $r13);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        r2 = $r18;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AlwaysOnHotwordDetector", "RemoteException in startRecognition!", r2);

     label8:
        if i1 == 0 goto label9;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecognition() failed with error code ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", $r16);

     label9:
        return i1;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    private int stopRecognitionLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0, $i1;
        android.os.RemoteException r1, $r10;
        android.hardware.soundtrigger.KeyphraseMetadata $r2;
        android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener $r3;
        android.service.voice.IVoiceInteractionService $r4;
        com.android.internal.app.IVoiceInteractionManagerService $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        i0 = -2147483648;

     label1:
        $r5 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        $r4 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.IVoiceInteractionService mVoiceInteractionService>;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        $i1 = $r2.<android.hardware.soundtrigger.KeyphraseMetadata: int id>;

        $r3 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener mInternalCallback>;

        i0 = interfaceinvoke $r5.<com.android.internal.app.IVoiceInteractionManagerService: int stopRecognition(android.service.voice.IVoiceInteractionService,int,android.hardware.soundtrigger.IRecognitionStatusCallback)>($r4, $i1, $r3);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r1 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AlwaysOnHotwordDetector", "RemoteException in stopRecognition!", r1);

     label4:
        if i0 == 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecognition() failed with error code ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlwaysOnHotwordDetector", $r9);

     label5:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyStateChangedLocked()
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.os.Message r1;
        android.os.Handler $r2;
        int $i0;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        $r2 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.os.Handler mHandler>;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r2, 1);

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        r1.<android.os.Message: int arg1> = $i0;

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.String r1, $r6;
        java.io.PrintWriter r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r10;
        java.util.Locale $r7;
        int $i0;
        android.hardware.soundtrigger.KeyphraseMetadata $r8;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r9;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        $r5 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Text=");

        $r6 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.String mText>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Locale=");

        $r7 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Availability=");

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("KeyphraseMetadata=");

        $r8 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("EnrollmentInfo=");

        $r9 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static java.lang.Object access$100(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.lang.Object mLock>;

        return $r1;
    }

    static int access$200(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int $i0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability>;

        return $i0;
    }

    static android.service.voice.AlwaysOnHotwordDetector$Callback access$300(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.service.voice.AlwaysOnHotwordDetector$Callback $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.AlwaysOnHotwordDetector$Callback mExternalCallback>;

        return $r1;
    }

    static android.hardware.soundtrigger.KeyphraseMetadata access$400(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.hardware.soundtrigger.KeyphraseMetadata $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.hardware.soundtrigger.KeyphraseMetadata mKeyphraseMetadata>;

        return $r1;
    }

    static java.util.Locale access$500(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        java.util.Locale $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: java.util.Locale mLocale>;

        return $r1;
    }

    static int access$202(android.service.voice.AlwaysOnHotwordDetector, int)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        int i0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        i0 := @parameter1: int;

        r0.<android.service.voice.AlwaysOnHotwordDetector: int mAvailability> = i0;

        return i0;
    }

    static void access$600(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector: void notifyStateChangedLocked()>();

        return;
    }

    static android.service.voice.IVoiceInteractionService access$700(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        android.service.voice.IVoiceInteractionService $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: android.service.voice.IVoiceInteractionService mVoiceInteractionService>;

        return $r1;
    }

    static com.android.internal.app.IVoiceInteractionManagerService access$800(android.service.voice.AlwaysOnHotwordDetector)
    {
        android.service.voice.AlwaysOnHotwordDetector r0;
        com.android.internal.app.IVoiceInteractionManagerService $r1;

        r0 := @parameter0: android.service.voice.AlwaysOnHotwordDetector;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector: com.android.internal.app.IVoiceInteractionManagerService mModelManagementService>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_RESUME> = 5;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_PAUSE> = 4;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_DETECTION_ERROR> = 3;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_HOTWORD_DETECTED> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int MSG_AVAILABILITY_CHANGED> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int STATUS_OK> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int STATUS_ERROR> = -2147483648;

        <android.service.voice.AlwaysOnHotwordDetector: boolean DBG> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: java.lang.String TAG> = "AlwaysOnHotwordDetector";

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_MODE_USER_IDENTIFICATION> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_MODE_VOICE_TRIGGER> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int RECOGNITION_FLAG_NONE> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int MANAGE_ACTION_UN_ENROLL> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int MANAGE_ACTION_RE_ENROLL> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int MANAGE_ACTION_ENROLL> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_NOT_READY> = 0;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_ENROLLED> = 2;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_UNENROLLED> = 1;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_KEYPHRASE_UNSUPPORTED> = -1;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_HARDWARE_UNAVAILABLE> = -2;

        <android.service.voice.AlwaysOnHotwordDetector: int STATE_INVALID> = -3;

        return;
    }
}
