public final class android.webkit.UrlInterceptRegistry extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static boolean mDisabled;
    private static java.util.LinkedList mHandlerList;

    public void <init>()
    {
        android.webkit.UrlInterceptRegistry r0;

        r0 := @this: android.webkit.UrlInterceptRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static synchronized java.util.LinkedList getHandlers()
    {
        java.util.LinkedList $r0, $r1, $r2;

        $r0 = <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList>;

        if $r0 != null goto label1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList> = $r2;

     label1:
        $r1 = <android.webkit.UrlInterceptRegistry: java.util.LinkedList mHandlerList>;

        return $r1;
    }

    public static synchronized void setUrlInterceptDisabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <android.webkit.UrlInterceptRegistry: boolean mDisabled> = z0;

        return;
    }

    public static synchronized boolean urlInterceptDisabled()
    {
        boolean $z0;

        $z0 = <android.webkit.UrlInterceptRegistry: boolean mDisabled>;

        return $z0;
    }

    public static synchronized boolean registerHandler(android.webkit.UrlInterceptHandler)
    {
        android.webkit.UrlInterceptHandler r0;
        java.util.LinkedList $r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.webkit.UrlInterceptHandler;

        $r1 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        virtualinvoke $r2.<java.util.LinkedList: void addFirst(java.lang.Object)>(r0);

        return 1;

     label1:
        return 0;
    }

    public static synchronized boolean unregisterHandler(android.webkit.UrlInterceptHandler)
    {
        android.webkit.UrlInterceptHandler r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @parameter0: android.webkit.UrlInterceptHandler;

        $r1 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean remove(java.lang.Object)>(r0);

        return $z0;
    }

    public static synchronized android.webkit.CacheManager$CacheResult getSurrogate(java.lang.String, java.util.Map)
    {
        java.lang.String r0;
        java.util.Map r1;
        java.util.ListIterator r2;
        android.webkit.UrlInterceptHandler r3;
        android.webkit.CacheManager$CacheResult r4;
        boolean $z0, $z1;
        java.util.LinkedList $r5;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        r2 = virtualinvoke $r5.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.webkit.UrlInterceptHandler) $r6;

        r4 = interfaceinvoke r3.<android.webkit.UrlInterceptHandler: android.webkit.CacheManager$CacheResult service(java.lang.String,java.util.Map)>(r0, r1);

        if r4 == null goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static synchronized android.webkit.PluginData getPluginData(java.lang.String, java.util.Map)
    {
        java.lang.String r0;
        java.util.Map r1;
        java.util.ListIterator r2;
        android.webkit.UrlInterceptHandler r3;
        android.webkit.PluginData r4;
        boolean $z0, $z1;
        java.util.LinkedList $r5;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r5 = staticinvoke <android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()>();

        r2 = virtualinvoke $r5.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.webkit.UrlInterceptHandler) $r6;

        r4 = interfaceinvoke r3.<android.webkit.UrlInterceptHandler: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>(r0, r1);

        if r4 == null goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    static void <clinit>()
    {
        <android.webkit.UrlInterceptRegistry: java.lang.String LOGTAG> = "intercept";

        <android.webkit.UrlInterceptRegistry: boolean mDisabled> = 0;

        return;
    }
}
