public class android.content.SyncRequest$Builder extends java.lang.Object
{
    private static final int SYNC_TYPE_UNKNOWN;
    private static final int SYNC_TYPE_PERIODIC;
    private static final int SYNC_TYPE_ONCE;
    private static final int SYNC_TARGET_UNKNOWN;
    private static final int SYNC_TARGET_ADAPTER;
    private long mSyncFlexTimeSecs;
    private long mSyncRunTimeSecs;
    private android.os.Bundle mCustomExtras;
    private android.os.Bundle mSyncConfigExtras;
    private boolean mDisallowMetered;
    private int mSyncType;
    private int mSyncTarget;
    private boolean mIsManual;
    private boolean mNoRetry;
    private boolean mIgnoreBackoff;
    private boolean mIgnoreSettings;
    private boolean mExpedited;
    private android.accounts.Account mAccount;
    private java.lang.String mAuthority;

    public void <init>()
    {
        android.content.SyncRequest$Builder r0;

        r0 := @this: android.content.SyncRequest$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.SyncRequest$Builder: int mSyncType> = 0;

        r0.<android.content.SyncRequest$Builder: int mSyncTarget> = 0;

        return;
    }

    public android.content.SyncRequest$Builder syncOnce()
    {
        android.content.SyncRequest$Builder r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync type has already been defined.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: int mSyncType> = 2;

        specialinvoke r0.<android.content.SyncRequest$Builder: void setupInterval(long,long)>(0L, 0L);

        return r0;
    }

    public android.content.SyncRequest$Builder syncPeriodic(long, long)
    {
        android.content.SyncRequest$Builder r0;
        long l0, l1;
        int $i2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i2 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync type has already been defined.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: int mSyncType> = 1;

        specialinvoke r0.<android.content.SyncRequest$Builder: void setupInterval(long,long)>(l0, l1);

        return r0;
    }

    private void setupInterval(long, long)
    {
        android.content.SyncRequest$Builder r0;
        long l0, l1;
        byte $b2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l1 cmp l0;

        if $b2 <= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified run time for the sync must be after the specified flex time.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: long mSyncRunTimeSecs> = l0;

        r0.<android.content.SyncRequest$Builder: long mSyncFlexTimeSecs> = l1;

        return;
    }

    public android.content.SyncRequest$Builder setDisallowMetered(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.content.SyncRequest$Builder: boolean mIgnoreSettings>;

        if $z1 == 0 goto label1;

        if z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setDisallowMetered(true) after havingspecified that settings are ignored.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setSyncAdapter(android.accounts.Account, java.lang.String)
    {
        android.content.SyncRequest$Builder r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.content.SyncRequest$Builder;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        if $i0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync target has already been defined.");

        throw $r4;

     label1:
        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must be non-empty");

        throw $r3;

     label2:
        r0.<android.content.SyncRequest$Builder: int mSyncTarget> = 2;

        r0.<android.content.SyncRequest$Builder: android.accounts.Account mAccount> = r1;

        r0.<android.content.SyncRequest$Builder: java.lang.String mAuthority> = r2;

        return r0;
    }

    public android.content.SyncRequest$Builder setExtras(android.os.Bundle)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.content.SyncRequest$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras> = r1;

        return r0;
    }

    public android.content.SyncRequest$Builder setNoRetry(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mNoRetry> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setIgnoreSettings(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered>;

        if $z1 == 0 goto label1;

        if z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setIgnoreSettings(true) after having specified sync settings with this builder.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: boolean mIgnoreSettings> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setIgnoreBackoff(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mIgnoreBackoff> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setManual(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mIsManual> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setExpedited(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mExpedited> = z0;

        return r0;
    }

    public android.content.SyncRequest build()
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1, $r2, $r3, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1;
        android.content.SyncRequest $r4;
        java.lang.IllegalArgumentException $r5, $r8;

        r0 := @this: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>($r1);

        $r2 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        if $r2 != null goto label01;

        $r16 = new android.os.Bundle;

        specialinvoke $r16.<android.os.Bundle: void <init>()>();

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras> = $r16;

     label01:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras> = $r3;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mIgnoreBackoff>;

        if $z0 == 0 goto label02;

        $r14 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r14.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_backoff", 1);

     label02:
        $z1 = r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered>;

        if $z1 == 0 goto label03;

        $r15 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r15.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("allow_metered", 1);

     label03:
        $z2 = r0.<android.content.SyncRequest$Builder: boolean mIgnoreSettings>;

        if $z2 == 0 goto label04;

        $r12 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r12.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_settings", 1);

     label04:
        $z3 = r0.<android.content.SyncRequest$Builder: boolean mNoRetry>;

        if $z3 == 0 goto label05;

        $r13 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r13.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("do_not_retry", 1);

     label05:
        $z4 = r0.<android.content.SyncRequest$Builder: boolean mExpedited>;

        if $z4 == 0 goto label06;

        $r10 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r10.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("expedited", 1);

     label06:
        $z5 = r0.<android.content.SyncRequest$Builder: boolean mIsManual>;

        if $z5 == 0 goto label07;

        $r9 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r9.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_backoff", 1);

        $r11 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r11.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_settings", 1);

     label07:
        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i0 != 1 goto label09;

        $r6 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        $z6 = staticinvoke <android.content.ContentResolver: boolean invalidPeriodicExtras(android.os.Bundle)>($r6);

        if $z6 != 0 goto label08;

        $r7 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        $z7 = staticinvoke <android.content.ContentResolver: boolean invalidPeriodicExtras(android.os.Bundle)>($r7);

        if $z7 == 0 goto label09;

     label08:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal extras were set");

        throw $r8;

     label09:
        $i1 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        if $i1 != 0 goto label10;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify an adapter with setSyncAdapter(Account, String");

        throw $r5;

     label10:
        $r4 = new android.content.SyncRequest;

        specialinvoke $r4.<android.content.SyncRequest: void <init>(android.content.SyncRequest$Builder)>(r0);

        return $r4;
    }

    static long access$100(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mSyncFlexTimeSecs>;

        return $l0;
    }

    static long access$200(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mSyncRunTimeSecs>;

        return $l0;
    }

    static android.accounts.Account access$300(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.accounts.Account $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.accounts.Account mAccount>;

        return $r1;
    }

    static java.lang.String access$400(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: java.lang.String mAuthority>;

        return $r1;
    }

    static int access$500(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        return $i0;
    }

    static int access$600(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        return $i0;
    }

    static boolean access$700(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mExpedited>;

        return $z0;
    }

    static android.os.Bundle access$800(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        return $r1;
    }

    static android.os.Bundle access$900(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        return $r1;
    }

    static boolean access$1000(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered>;

        return $z0;
    }

    public static void <clinit>()
    {
        <android.content.SyncRequest$Builder: int SYNC_TARGET_ADAPTER> = 2;

        <android.content.SyncRequest$Builder: int SYNC_TARGET_UNKNOWN> = 0;

        <android.content.SyncRequest$Builder: int SYNC_TYPE_ONCE> = 2;

        <android.content.SyncRequest$Builder: int SYNC_TYPE_PERIODIC> = 1;

        <android.content.SyncRequest$Builder: int SYNC_TYPE_UNKNOWN> = 0;

        return;
    }
}
