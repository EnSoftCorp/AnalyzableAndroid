public final class android.provider.CalendarContract$Instances extends java.lang.Object implements android.provider.BaseColumns, android.provider.CalendarContract$EventsColumns, android.provider.CalendarContract$CalendarColumns
{
    private static final java.lang.String WHERE_CALENDARS_SELECTED;
    private static final java.lang.String[] WHERE_CALENDARS_ARGS;
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_BY_DAY_URI;
    public static final android.net.Uri CONTENT_SEARCH_URI;
    public static final android.net.Uri CONTENT_SEARCH_BY_DAY_URI;
    private static final java.lang.String DEFAULT_SORT_ORDER;
    public static final java.lang.String BEGIN;
    public static final java.lang.String END;
    public static final java.lang.String EVENT_ID;
    public static final java.lang.String START_DAY;
    public static final java.lang.String END_DAY;
    public static final java.lang.String START_MINUTE;
    public static final java.lang.String END_MINUTE;

    private void <init>()
    {
        android.provider.CalendarContract$Instances r0;

        r0 := @this: android.provider.CalendarContract$Instances;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, java.lang.String[], long, long)
    {
        android.content.ContentResolver r0;
        java.lang.String[] r1, $r7;
        long l0, l1;
        android.net.Uri$Builder r2;
        android.net.Uri $r3, $r6;
        android.database.Cursor $r8;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String[];

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r3 = <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI>;

        r2 = virtualinvoke $r3.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r2, l0);

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r2, l1);

        $r6 = virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri build()>();

        $r7 = <android.provider.CalendarContract$Instances: java.lang.String[] WHERE_CALENDARS_ARGS>;

        $r8 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, r1, "visible=?", $r7, "begin ASC");

        return $r8;
    }

    public static final android.database.Cursor query(android.content.ContentResolver, java.lang.String[], long, long, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String[] r1, $r8;
        long l0, l1;
        java.lang.String r2;
        android.net.Uri$Builder r3, r10;
        android.net.Uri $r4, $r7;
        android.database.Cursor $r9;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String[];

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r2 := @parameter4: java.lang.String;

        $r4 = <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_URI>;

        r3 = virtualinvoke $r4.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r3, l0);

        staticinvoke <android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>(r3, l1);

        r10 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r2);

        $r7 = virtualinvoke r10.<android.net.Uri$Builder: android.net.Uri build()>();

        $r8 = <android.provider.CalendarContract$Instances: java.lang.String[] WHERE_CALENDARS_ARGS>;

        $r9 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, r1, "visible=?", $r8, "begin ASC");

        return $r9;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.net.Uri $r1, $r2, $r3, $r4;

        <android.provider.CalendarContract$Instances: java.lang.String END_MINUTE> = "endMinute";

        <android.provider.CalendarContract$Instances: java.lang.String START_MINUTE> = "startMinute";

        <android.provider.CalendarContract$Instances: java.lang.String END_DAY> = "endDay";

        <android.provider.CalendarContract$Instances: java.lang.String START_DAY> = "startDay";

        <android.provider.CalendarContract$Instances: java.lang.String EVENT_ID> = "event_id";

        <android.provider.CalendarContract$Instances: java.lang.String END> = "end";

        <android.provider.CalendarContract$Instances: java.lang.String BEGIN> = "begin";

        <android.provider.CalendarContract$Instances: java.lang.String DEFAULT_SORT_ORDER> = "begin ASC";

        <android.provider.CalendarContract$Instances: java.lang.String WHERE_CALENDARS_SELECTED> = "visible=?";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "1";

        <android.provider.CalendarContract$Instances: java.lang.String[] WHERE_CALENDARS_ARGS> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/instances/when");

        <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_URI> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/instances/whenbyday");

        <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_BY_DAY_URI> = $r2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/instances/search");

        <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_URI> = $r3;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/instances/searchbyday");

        <android.provider.CalendarContract$Instances: android.net.Uri CONTENT_SEARCH_BY_DAY_URI> = $r4;

        return;
    }
}
