class android.bluetooth.BluetoothAdapter$2 extends android.bluetooth.le.ScanCallback
{
    final java.util.UUID[] val$serviceUuids;
    final android.bluetooth.BluetoothAdapter$LeScanCallback val$callback;
    final android.bluetooth.BluetoothAdapter this$0;

    void <init>(android.bluetooth.BluetoothAdapter, java.util.UUID[], android.bluetooth.BluetoothAdapter$LeScanCallback)
    {
        android.bluetooth.BluetoothAdapter$2 r0;
        android.bluetooth.BluetoothAdapter r1;
        java.util.UUID[] r2;
        android.bluetooth.BluetoothAdapter$LeScanCallback r3;

        r0 := @this: android.bluetooth.BluetoothAdapter$2;

        r1 := @parameter0: android.bluetooth.BluetoothAdapter;

        r2 := @parameter1: java.util.UUID[];

        r3 := @parameter2: android.bluetooth.BluetoothAdapter$LeScanCallback;

        r0.<android.bluetooth.BluetoothAdapter$2: android.bluetooth.BluetoothAdapter this$0> = r1;

        r0.<android.bluetooth.BluetoothAdapter$2: java.util.UUID[] val$serviceUuids> = r2;

        r0.<android.bluetooth.BluetoothAdapter$2: android.bluetooth.BluetoothAdapter$LeScanCallback val$callback> = r3;

        specialinvoke r0.<android.bluetooth.le.ScanCallback: void <init>()>();

        return;
    }

    public void onScanResult(int, android.bluetooth.le.ScanResult)
    {
        android.bluetooth.BluetoothAdapter$2 r0;
        int i0, i1, i2, $i3;
        android.bluetooth.le.ScanResult r1;
        android.bluetooth.le.ScanRecord r2;
        java.util.ArrayList r3, $r10;
        java.util.UUID[] r4, $r6;
        java.util.UUID r5;
        android.bluetooth.BluetoothAdapter$LeScanCallback $r7;
        android.bluetooth.BluetoothDevice $r8;
        byte[] $r9;
        android.os.ParcelUuid $r11;
        boolean $z0;
        java.util.List r12;

        r0 := @this: android.bluetooth.BluetoothAdapter$2;

        i0 := @parameter0: int;

        r1 := @parameter1: android.bluetooth.le.ScanResult;

        if i0 == 1 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothAdapter", "LE Scan has already started");

        return;

     label1:
        r2 = virtualinvoke r1.<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>();

        if r2 != null goto label2;

        return;

     label2:
        $r6 = r0.<android.bluetooth.BluetoothAdapter$2: java.util.UUID[] val$serviceUuids>;

        if $r6 == null goto label6;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        r4 = r0.<android.bluetooth.BluetoothAdapter$2: java.util.UUID[] val$serviceUuids>;

        i1 = lengthof r4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r5 = r4[i2];

        $r11 = new android.os.ParcelUuid;

        specialinvoke $r11.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r5);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label3;

     label4:
        r12 = virtualinvoke r2.<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>();

        if r12 == null goto label5;

        $z0 = interfaceinvoke r12.<java.util.List: boolean containsAll(java.util.Collection)>(r3);

        if $z0 != 0 goto label6;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothAdapter", "uuids does not match");

        return;

     label6:
        $r7 = r0.<android.bluetooth.BluetoothAdapter$2: android.bluetooth.BluetoothAdapter$LeScanCallback val$callback>;

        $r8 = virtualinvoke r1.<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>();

        $i3 = virtualinvoke r1.<android.bluetooth.le.ScanResult: int getRssi()>();

        $r9 = virtualinvoke r2.<android.bluetooth.le.ScanRecord: byte[] getBytes()>();

        interfaceinvoke $r7.<android.bluetooth.BluetoothAdapter$LeScanCallback: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])>($r8, $i3, $r9);

        return;
    }
}
