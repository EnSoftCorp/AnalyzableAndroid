class android.view.ViewPropertyAnimatorRT extends java.lang.Object
{
    private static final android.view.animation.Interpolator sLinearInterpolator;
    private final android.view.View mView;
    private android.view.RenderNodeAnimator[] mAnimators;

    void <init>(android.view.View)
    {
        android.view.ViewPropertyAnimatorRT r0;
        android.view.View r1;
        android.view.RenderNodeAnimator[] $r2;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (android.view.RenderNodeAnimator)[12];

        r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators> = $r2;

        r0.<android.view.ViewPropertyAnimatorRT: android.view.View mView> = r1;

        return;
    }

    public boolean startAnimation(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimatorRT r0;
        android.view.ViewPropertyAnimator r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        r1 := @parameter0: android.view.ViewPropertyAnimator;

        $r2 = r1.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        specialinvoke r0.<android.view.ViewPropertyAnimatorRT: void cancelAnimators(java.util.ArrayList)>($r2);

        $z0 = specialinvoke r0.<android.view.ViewPropertyAnimatorRT: boolean canHandleAnimator(android.view.ViewPropertyAnimator)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<android.view.ViewPropertyAnimatorRT: void doStartAnimation(android.view.ViewPropertyAnimator)>(r1);

        return 1;
    }

    public void cancelAll()
    {
        android.view.ViewPropertyAnimatorRT r0;
        int i0, $i1;
        android.view.RenderNodeAnimator[] $r1, $r2, $r4, $r6;
        android.view.RenderNodeAnimator $r3, $r5;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        i0 = 0;

     label1:
        $r1 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r2 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r3 = $r2[i0];

        if $r3 == null goto label2;

        $r4 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r5 = $r4[i0];

        virtualinvoke $r5.<android.view.RenderNodeAnimator: void cancel()>();

        $r6 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r6[i0] = null;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void doStartAnimation(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimatorRT r0;
        android.view.ViewPropertyAnimator r1;
        int i0, i3, i4, $i5;
        long l1, l2;
        android.animation.TimeInterpolator r2;
        android.view.ViewPropertyAnimator$NameValuesHolder r3;
        float f0, $f1, $f2;
        android.view.RenderNodeAnimator r4, $r10;
        java.util.ArrayList $r5, $r6, $r8;
        boolean $z0;
        java.lang.Object $r7;
        android.view.RenderNodeAnimator[] $r11;
        android.view.View $r12;
        com.android.internal.view.animation.FallbackLUTInterpolator $r13;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        r1 := @parameter0: android.view.ViewPropertyAnimator;

        $r5 = r1.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        l1 = virtualinvoke r1.<android.view.ViewPropertyAnimator: long getStartDelay()>();

        l2 = virtualinvoke r1.<android.view.ViewPropertyAnimator: long getDuration()>();

        r2 = virtualinvoke r1.<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>();

        if r2 != null goto label1;

        r2 = <android.view.ViewPropertyAnimatorRT: android.view.animation.Interpolator sLinearInterpolator>;

     label1:
        $z0 = staticinvoke <android.view.RenderNodeAnimator: boolean isNativeInterpolator(android.animation.TimeInterpolator)>(r2);

        if $z0 != 0 goto label2;

        $r13 = new com.android.internal.view.animation.FallbackLUTInterpolator;

        specialinvoke $r13.<com.android.internal.view.animation.FallbackLUTInterpolator: void <init>(android.animation.TimeInterpolator,long)>(r2, l2);

        r2 = $r13;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r8 = r1.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.view.ViewPropertyAnimator$NameValuesHolder) $r7;

        $i5 = r3.<android.view.ViewPropertyAnimator$NameValuesHolder: int mNameConstant>;

        i4 = staticinvoke <android.view.RenderNodeAnimator: int mapViewPropertyToRenderProperty(int)>($i5);

        $f1 = r3.<android.view.ViewPropertyAnimator$NameValuesHolder: float mFromValue>;

        $f2 = r3.<android.view.ViewPropertyAnimator$NameValuesHolder: float mDeltaValue>;

        f0 = $f1 + $f2;

        $r10 = new android.view.RenderNodeAnimator;

        specialinvoke $r10.<android.view.RenderNodeAnimator: void <init>(int,float)>(i4, f0);

        r4 = $r10;

        virtualinvoke r4.<android.view.RenderNodeAnimator: void setStartDelay(long)>(l1);

        virtualinvoke r4.<android.view.RenderNodeAnimator: android.view.RenderNodeAnimator setDuration(long)>(l2);

        virtualinvoke r4.<android.view.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>(r2);

        $r12 = r0.<android.view.ViewPropertyAnimatorRT: android.view.View mView>;

        virtualinvoke r4.<android.view.RenderNodeAnimator: void setTarget(android.view.View)>($r12);

        virtualinvoke r4.<android.view.RenderNodeAnimator: void start()>();

        $r11 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r11[i4] = r4;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r6 = r1.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        return;
    }

    private boolean canHandleAnimator(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimatorRT r0;
        android.view.ViewPropertyAnimator r1;
        android.animation.ValueAnimator$AnimatorUpdateListener $r2;
        android.animation.Animator$AnimatorListener $r3;
        android.view.View $r4;
        boolean $z0, $z1;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        r1 := @parameter0: android.view.ViewPropertyAnimator;

        $r2 = virtualinvoke r1.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener getUpdateListener()>();

        if $r2 == null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r1.<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener getListener()>();

        if $r3 == null goto label2;

        return 0;

     label2:
        $r4 = r0.<android.view.ViewPropertyAnimatorRT: android.view.View mView>;

        $z0 = virtualinvoke $r4.<android.view.View: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = virtualinvoke r1.<android.view.ViewPropertyAnimator: boolean hasActions()>();

        if $z1 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private void cancelAnimators(java.util.ArrayList)
    {
        android.view.ViewPropertyAnimatorRT r0;
        java.util.ArrayList r1;
        int i0, i1, i2, $i3;
        android.view.ViewPropertyAnimator$NameValuesHolder r2;
        java.lang.Object $r3;
        android.view.RenderNodeAnimator[] $r4, $r6, $r8;
        android.view.RenderNodeAnimator $r5, $r7;

        r0 := @this: android.view.ViewPropertyAnimatorRT;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.ViewPropertyAnimator$NameValuesHolder) $r3;

        $i3 = r2.<android.view.ViewPropertyAnimator$NameValuesHolder: int mNameConstant>;

        i2 = staticinvoke <android.view.RenderNodeAnimator: int mapViewPropertyToRenderProperty(int)>($i3);

        $r4 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r5 = $r4[i2];

        if $r5 == null goto label2;

        $r6 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r7 = $r6[i2];

        virtualinvoke $r7.<android.view.RenderNodeAnimator: void cancel()>();

        $r8 = r0.<android.view.ViewPropertyAnimatorRT: android.view.RenderNodeAnimator[] mAnimators>;

        $r8[i2] = null;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.view.ViewPropertyAnimatorRT: android.view.animation.Interpolator sLinearInterpolator> = $r0;

        return;
    }
}
