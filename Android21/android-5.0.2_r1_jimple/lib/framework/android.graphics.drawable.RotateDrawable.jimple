public class android.graphics.drawable.RotateDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private static final float MAX_LEVEL;
    private final android.graphics.drawable.RotateDrawable$RotateState mState;
    private boolean mMutated;

    public void <init>()
    {
        android.graphics.drawable.RotateDrawable r0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        specialinvoke r0.<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.RotateDrawable$RotateState, android.content.res.Resources)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState r1, $r3;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.RotateDrawable$RotateState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.drawable.RotateDrawable$RotateState;

        specialinvoke $r3.<android.graphics.drawable.RotateDrawable$RotateState: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources)>(r1, r0, r2);

        r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState> = $r3;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.RotateDrawable$RotateState r2;
        android.graphics.drawable.Drawable r3;
        android.graphics.Rect r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        r3 = r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        r4 = virtualinvoke r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i4 = r4.<android.graphics.Rect: int right>;

        $i3 = r4.<android.graphics.Rect: int left>;

        i0 = $i4 - $i3;

        $i6 = r4.<android.graphics.Rect: int bottom>;

        $i5 = r4.<android.graphics.Rect: int top>;

        i1 = $i6 - $i5;

        $z0 = r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel>;

        if $z0 == 0 goto label1;

        $f10 = (float) i0;

        $f11 = r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

        $f12 = $f10 * $f11;

        goto label2;

     label1:
        $f12 = r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

     label2:
        f0 = $f12;

        $z1 = r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel>;

        if $z1 == 0 goto label3;

        $f9 = (float) i1;

        $f6 = r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

        $f8 = $f9 * $f6;

        goto label4;

     label3:
        $f8 = r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

     label4:
        f1 = $f8;

        i2 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f7 = r2.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees>;

        $i7 = r4.<android.graphics.Rect: int left>;

        $f2 = (float) $i7;

        $f4 = f0 + $f2;

        $i8 = r4.<android.graphics.Rect: int top>;

        $f3 = (float) $i8;

        $f5 = f1 + $f3;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f7, $f4, $f5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

        return;
    }

    public void setDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.Drawable r1, r2;
        android.graphics.drawable.RotateDrawable$RotateState $r3, $r4;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        r2 = $r3.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        if r2 == r1 goto label2;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        $r4 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r4.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        return;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        return $r2;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.RotateDrawable r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $i1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        return $i4;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.RotateDrawable r0;
        int i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i0;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>(r1);

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

        return;
    }

    public int getOpacity()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public void setFromDegrees(float)
    {
        android.graphics.drawable.RotateDrawable r0;
        float f0, $f1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;
        byte $b0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees> = f0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getFromDegrees()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        return $f0;
    }

    public void setToDegrees(float)
    {
        android.graphics.drawable.RotateDrawable r0;
        float f0, $f1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;
        byte $b0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees> = f0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getToDegrees()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees>;

        return $f0;
    }

    public void setPivotX(float)
    {
        android.graphics.drawable.RotateDrawable r0;
        float f0, $f1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;
        byte $b0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

        $b0 = $f1 cmpl f0;

        if $b0 != 0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX> = f0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getPivotX()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX>;

        return $f0;
    }

    public void setPivotXRelative(boolean)
    {
        android.graphics.drawable.RotateDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel>;

        if $z1 != z0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel> = z0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public boolean isPivotXRelative()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel>;

        return $z0;
    }

    public void setPivotY(float)
    {
        android.graphics.drawable.RotateDrawable r0;
        float f0, $f1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;
        byte $b0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

        $b0 = $f1 cmpl f0;

        if $b0 != 0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY> = f0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public float getPivotY()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        float $f0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY>;

        return $f0;
    }

    public void setPivotYRelative(boolean)
    {
        android.graphics.drawable.RotateDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z1 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel>;

        if $z1 != z0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel> = z0;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public boolean isPivotYRelative()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z0 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel>;

        return $z0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.Drawable$Callback r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label1:
        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        r3 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        r3 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.RotateDrawable r0;
        boolean z0, z1, $z3;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        $z3 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        return $z3;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.RotateDrawable r0;
        int[] r1;
        boolean z0;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        android.graphics.drawable.Drawable $r3;
        android.graphics.Rect $r4;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        $r4 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>($r4);

        return z0;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.RotateDrawable r0;
        int i0;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r4, $r5, $r6, $r7;
        android.graphics.drawable.Drawable $r2;
        android.graphics.Rect $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        $r3 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>($r3);

        $r7 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r4 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f6 = $r4.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        $r5 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f1 = $r5.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees>;

        $r6 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $f0 = $r6.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees>;

        $f4 = $f1 - $f0;

        $f2 = (float) i0;

        $f3 = $f2 / 10000.0F;

        $f5 = $f4 * $f3;

        $f7 = $f6 + $f5;

        $r7.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees> = $f7;

        virtualinvoke r0.<android.graphics.drawable.RotateDrawable: void invalidateSelf()>();

        return 1;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.RotateDrawable$RotateState $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r2 = $r1.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $r1 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.RotateDrawable$RotateState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.RotateDrawable$RotateState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        return $r3;

     label1:
        return null;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.RotateDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        android.util.TypedValue r6, r16;
        boolean z0, z1, $z2, $z3;
        float f0, f1, f2, f3, $f4, $f5;
        int i0, i1, i2, $i3, $i4, $i6, $i8;
        android.graphics.drawable.Drawable r7, $r11;
        android.graphics.drawable.RotateDrawable$RotateState r8;
        int[] $r9;
        java.lang.StringBuilder $r10, $r12, $r15;
        java.lang.String $r13, $r14;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        $r9 = <com.android.internal.R$styleable: int[] RotateDrawable>;

        r5 = staticinvoke <android.graphics.drawable.RotateDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r9);

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 0);

        r6 = virtualinvoke r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(4);

        if r6 != null goto label01;

        z0 = 1;

        f0 = 0.5F;

        goto label06;

     label01:
        $i3 = r6.<android.util.TypedValue: int type>;

        if $i3 != 6 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

        if z0 == 0 goto label04;

        $f4 = virtualinvoke r6.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        goto label05;

     label04:
        $f4 = virtualinvoke r6.<android.util.TypedValue: float getFloat()>();

     label05:
        f0 = $f4;

     label06:
        r16 = virtualinvoke r5.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(5);

        if r16 != null goto label07;

        z1 = 1;

        f1 = 0.5F;

        goto label12;

     label07:
        $i4 = r16.<android.util.TypedValue: int type>;

        if $i4 != 6 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        z1 = $z2;

        if z1 == 0 goto label10;

        $f5 = virtualinvoke r16.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

        goto label11;

     label10:
        $f5 = virtualinvoke r16.<android.util.TypedValue: float getFloat()>();

     label11:
        f1 = $f5;

     label12:
        f2 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(2, 0.0F);

        f3 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(3, 360.0F);

        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r7 = null;

        if i0 <= 0 goto label13;

        r7 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, r4);

     label13:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label14:
        $i6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i6;

        if $i6 == 1 goto label17;

        if i2 != 3 goto label15;

        $i8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i1 goto label17;

     label15:
        if i2 == 2 goto label16;

        goto label14;

     label16:
        $r11 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        r7 = $r11;

        if $r11 != null goto label14;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <rotate>: ");

        $r14 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r13);

        goto label14;

     label17:
        if r7 != null goto label18;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", "No drawable specified for <rotate>");

     label18:
        r8 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable> = r7;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotXRel> = z0;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotX> = f0;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: boolean mPivotYRel> = z1;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: float mPivotY> = f1;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: float mFromDegrees> = f2;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: float mCurrentDegrees> = f2;

        r8.<android.graphics.drawable.RotateDrawable$RotateState: float mToDegrees> = f3;

        if r7 == null goto label19;

        virtualinvoke r7.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label19:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.RotateDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.drawable.RotateDrawable$RotateState $r2;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        $z0 = r0.<android.graphics.drawable.RotateDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.RotateDrawable: android.graphics.drawable.RotateDrawable$RotateState mState>;

        $r3 = $r2.<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.graphics.drawable.RotateDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    void <init>(android.graphics.drawable.RotateDrawable$RotateState, android.content.res.Resources, android.graphics.drawable.RotateDrawable$1)
    {
        android.graphics.drawable.RotateDrawable r0;
        android.graphics.drawable.RotateDrawable$RotateState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.RotateDrawable$1 r3;

        r0 := @this: android.graphics.drawable.RotateDrawable;

        r1 := @parameter0: android.graphics.drawable.RotateDrawable$RotateState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.RotateDrawable$1;

        specialinvoke r0.<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.RotateDrawable: float MAX_LEVEL> = 10000.0F;

        return;
    }
}
