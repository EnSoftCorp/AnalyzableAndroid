class android.media.IMediaRouterService$Stub$Proxy extends java.lang.Object implements android.media.IMediaRouterService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        $r1 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IMediaRouterService$Stub$Proxy r0;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        return "android.media.IMediaRouterService";
    }

    public void registerClientAsUser(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unregisterClient(android.media.IMediaRouterClient) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.media.MediaRouterClientState getState(android.media.IMediaRouterClient) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        android.os.Parcel r2, r3;
        android.media.MediaRouterClientState r4;
        java.lang.Throwable r5, $r10;
        android.os.IBinder $r6, $r9;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r9 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r9 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r9);

        $r6 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label4;

        $r7 = <android.media.MediaRouterClientState: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r4 = (android.media.MediaRouterClientState) $r8;

        goto label5;

     label4:
        r4 = null;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r10 := @caughtexception;

        r5 = $r10;

     label7:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label8:
        return r4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setDiscoveryRequest(android.media.IMediaRouterClient, int, boolean) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        int i0;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;
        byte $b1;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label4;

        $b1 = 1;

        goto label5;

     label4:
        $b1 = 0;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setSelectedRoute(android.media.IMediaRouterClient, java.lang.String, boolean) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;
        byte $b0;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        if z0 == 0 goto label4;

        $b0 = 1;

        goto label5;

     label4:
        $b0 = 0;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b0);

        $r6 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void requestSetVolume(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void requestUpdateVolume(android.media.IMediaRouterClient, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.IMediaRouterService$Stub$Proxy r0;
        android.media.IMediaRouterClient r1;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.media.IMediaRouterService$Stub$Proxy;

        r1 := @parameter0: android.media.IMediaRouterClient;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IMediaRouterService");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.media.IMediaRouterClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.media.IMediaRouterService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
