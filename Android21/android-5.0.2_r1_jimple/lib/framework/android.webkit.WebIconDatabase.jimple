public class android.webkit.WebIconDatabase extends java.lang.Object
{

    public void open(java.lang.String)
    {
        android.webkit.WebIconDatabase r0;
        java.lang.String r1;
        android.webkit.MustOverrideException $r2;

        r0 := @this: android.webkit.WebIconDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.webkit.MustOverrideException;

        specialinvoke $r2.<android.webkit.MustOverrideException: void <init>()>();

        throw $r2;
    }

    public void close()
    {
        android.webkit.WebIconDatabase r0;
        android.webkit.MustOverrideException $r1;

        r0 := @this: android.webkit.WebIconDatabase;

        $r1 = new android.webkit.MustOverrideException;

        specialinvoke $r1.<android.webkit.MustOverrideException: void <init>()>();

        throw $r1;
    }

    public void removeAllIcons()
    {
        android.webkit.WebIconDatabase r0;
        android.webkit.MustOverrideException $r1;

        r0 := @this: android.webkit.WebIconDatabase;

        $r1 = new android.webkit.MustOverrideException;

        specialinvoke $r1.<android.webkit.MustOverrideException: void <init>()>();

        throw $r1;
    }

    public void requestIconForPageUrl(java.lang.String, android.webkit.WebIconDatabase$IconListener)
    {
        android.webkit.WebIconDatabase r0;
        java.lang.String r1;
        android.webkit.WebIconDatabase$IconListener r2;
        android.webkit.MustOverrideException $r3;

        r0 := @this: android.webkit.WebIconDatabase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.webkit.WebIconDatabase$IconListener;

        $r3 = new android.webkit.MustOverrideException;

        specialinvoke $r3.<android.webkit.MustOverrideException: void <init>()>();

        throw $r3;
    }

    public void bulkRequestIconForPageUrl(android.content.ContentResolver, java.lang.String, android.webkit.WebIconDatabase$IconListener)
    {
        android.webkit.WebIconDatabase r0;
        android.content.ContentResolver r1;
        java.lang.String r2;
        android.webkit.WebIconDatabase$IconListener r3;
        android.webkit.MustOverrideException $r4;

        r0 := @this: android.webkit.WebIconDatabase;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.webkit.WebIconDatabase$IconListener;

        $r4 = new android.webkit.MustOverrideException;

        specialinvoke $r4.<android.webkit.MustOverrideException: void <init>()>();

        throw $r4;
    }

    public void retainIconForPageUrl(java.lang.String)
    {
        android.webkit.WebIconDatabase r0;
        java.lang.String r1;
        android.webkit.MustOverrideException $r2;

        r0 := @this: android.webkit.WebIconDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.webkit.MustOverrideException;

        specialinvoke $r2.<android.webkit.MustOverrideException: void <init>()>();

        throw $r2;
    }

    public void releaseIconForPageUrl(java.lang.String)
    {
        android.webkit.WebIconDatabase r0;
        java.lang.String r1;
        android.webkit.MustOverrideException $r2;

        r0 := @this: android.webkit.WebIconDatabase;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.webkit.MustOverrideException;

        specialinvoke $r2.<android.webkit.MustOverrideException: void <init>()>();

        throw $r2;
    }

    public static android.webkit.WebIconDatabase getInstance()
    {
        android.webkit.WebViewFactoryProvider $r0;
        android.webkit.WebIconDatabase $r1;

        $r0 = staticinvoke <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()>();

        $r1 = interfaceinvoke $r0.<android.webkit.WebViewFactoryProvider: android.webkit.WebIconDatabase getWebIconDatabase()>();

        return $r1;
    }

    protected void <init>()
    {
        android.webkit.WebIconDatabase r0;

        r0 := @this: android.webkit.WebIconDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
