class android.graphics.drawable.VectorDrawable$VFullPath extends android.graphics.drawable.VectorDrawable$VPath
{
    private int[] mThemeAttrs;
    int mStrokeColor;
    float mStrokeWidth;
    int mFillColor;
    float mStrokeAlpha;
    int mFillRule;
    float mFillAlpha;
    float mTrimPathStart;
    float mTrimPathEnd;
    float mTrimPathOffset;
    android.graphics.Paint$Cap mStrokeLineCap;
    android.graphics.Paint$Join mStrokeLineJoin;
    float mStrokeMiterlimit;

    public void <init>()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        android.graphics.Paint$Cap $r1;
        android.graphics.Paint$Join $r2;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPath: void <init>()>();

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor> = 0;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor> = 0;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset> = 0.0F;

        $r1 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r1;

        $r2 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r2;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit> = 4.0F;

        return;
    }

    public void <init>(android.graphics.drawable.VectorDrawable$VFullPath)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0, r1;
        android.graphics.Paint$Cap $r2, $r5;
        android.graphics.Paint$Join $r3, $r6;
        int[] $r4;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        r1 := @parameter0: android.graphics.drawable.VectorDrawable$VFullPath;

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VPath: void <init>(android.graphics.drawable.VectorDrawable$VPath)>(r1);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor> = 0;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor> = 0;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart> = 0.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd> = 1.0F;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset> = 0.0F;

        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r2;

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r3;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit> = 4.0F;

        $r4 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs> = $r4;

        $i0 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor> = $i0;

        $f0 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth> = $f0;

        $f1 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha> = $f1;

        $i1 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor> = $i1;

        $i2 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillRule>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillRule> = $i2;

        $f2 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha> = $f2;

        $f3 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart> = $f3;

        $f4 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd> = $f4;

        $f5 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset> = $f5;

        $r5 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r5;

        $r6 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r6;

        $f6 = r1.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit>;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit> = $f6;

        return;
    }

    private android.graphics.Paint$Cap getStrokeLineCap(int, android.graphics.Paint$Cap)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int i0;
        android.graphics.Paint$Cap r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint$Cap;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        return $r2;

     label2:
        $r4 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        return $r4;

     label3:
        $r3 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        return $r3;

     label4:
        return r1;
    }

    private android.graphics.Paint$Join getStrokeLineJoin(int, android.graphics.Paint$Join)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int i0;
        android.graphics.Paint$Join r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint$Join;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        return $r2;

     label2:
        $r4 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        return $r4;

     label3:
        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;

        return $r3;

     label4:
        return r1;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int[] $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $r1 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void inflate(android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        android.content.res.TypedArray r4;
        int[] $r5;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.util.AttributeSet;

        r3 := @parameter2: android.content.res.Resources$Theme;

        $r5 = <com.android.internal.R$styleable: int[] VectorDrawablePath>;

        r4 = staticinvoke <android.graphics.drawable.Drawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r3, r2, $r5);

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray)>(r4);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        android.content.res.TypedArray r1;
        java.lang.String r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.graphics.Paint$Cap $r5, $r6;
        android.graphics.Paint$Join $r7, $r8;
        android.util.PathParser$PathDataNode[] $r9;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        r1 := @parameter0: android.content.res.TypedArray;

        $i0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mChangingConfigurations>;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i2 = $i0 | $i1;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mChangingConfigurations> = $i2;

        $r4 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs> = $r4;

        r2 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if r2 == null goto label1;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: java.lang.String mPathName> = r2;

     label1:
        r3 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        if r3 == null goto label2;

        $r9 = staticinvoke <android.util.PathParser: android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>(r3);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.util.PathParser$PathDataNode[] mNodes> = $r9;

     label2:
        $i3 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor>;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(1, $i3);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor> = $i4;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(12, $f0);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha> = $f1;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(8, -1);

        $r5 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        $r6 = specialinvoke r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)>($i5, $r5);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Cap mStrokeLineCap> = $r6;

        $i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(9, -1);

        $r8 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        $r7 = specialinvoke r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)>($i6, $r8);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: android.graphics.Paint$Join mStrokeLineJoin> = $r7;

        $f3 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit>;

        $f2 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(10, $f3);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeMiterlimit> = $f2;

        $i8 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor>;

        $i7 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(3, $i8);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor> = $i7;

        $f5 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha>;

        $f4 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(11, $f5);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha> = $f4;

        $f7 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth>;

        $f6 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(4, $f7);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth> = $f6;

        $f9 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd>;

        $f8 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(6, $f9);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd> = $f8;

        $f11 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset>;

        $f10 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(7, $f11);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset> = $f10;

        $f12 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart>;

        $f13 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(5, $f12);

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart> = $f13;

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        android.content.res.Resources$Theme r1;
        android.content.res.TypedArray r2;
        int[] $r3, $r4, $r5;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $r3 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs>;

        if $r3 != null goto label1;

        return;

     label1:
        $r5 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int[] mThemeAttrs>;

        $r4 = <com.android.internal.R$styleable: int[] VectorDrawablePath>;

        r2 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r5, $r4);

        specialinvoke r0.<android.graphics.drawable.VectorDrawable$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray)>(r2);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    int getStrokeColor()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int $i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $i0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor>;

        return $i0;
    }

    void setStrokeColor(int)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mStrokeColor> = i0;

        return;
    }

    float getStrokeWidth()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth>;

        return $f0;
    }

    void setStrokeWidth(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeWidth> = f0;

        return;
    }

    float getStrokeAlpha()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha>;

        return $f0;
    }

    void setStrokeAlpha(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mStrokeAlpha> = f0;

        return;
    }

    int getFillColor()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int $i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $i0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor>;

        return $i0;
    }

    void setFillColor(int)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        int i0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: int mFillColor> = i0;

        return;
    }

    float getFillAlpha()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha>;

        return $f0;
    }

    void setFillAlpha(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mFillAlpha> = f0;

        return;
    }

    float getTrimPathStart()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart>;

        return $f0;
    }

    void setTrimPathStart(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathStart> = f0;

        return;
    }

    float getTrimPathEnd()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd>;

        return $f0;
    }

    void setTrimPathEnd(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathEnd> = f0;

        return;
    }

    float getTrimPathOffset()
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float $f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        $f0 = r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset>;

        return $f0;
    }

    void setTrimPathOffset(float)
    {
        android.graphics.drawable.VectorDrawable$VFullPath r0;
        float f0;

        r0 := @this: android.graphics.drawable.VectorDrawable$VFullPath;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.VectorDrawable$VFullPath: float mTrimPathOffset> = f0;

        return;
    }
}
