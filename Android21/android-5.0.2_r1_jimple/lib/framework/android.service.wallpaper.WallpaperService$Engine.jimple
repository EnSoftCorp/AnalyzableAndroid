public class android.service.wallpaper.WallpaperService$Engine extends java.lang.Object
{
    android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine;
    com.android.internal.os.HandlerCaller mCaller;
    android.service.wallpaper.IWallpaperConnection mConnection;
    android.os.IBinder mWindowToken;
    boolean mInitializing;
    boolean mVisible;
    boolean mScreenOn;
    boolean mReportedVisible;
    boolean mDestroyed;
    boolean mCreated;
    boolean mSurfaceCreated;
    boolean mIsCreating;
    boolean mDrawingAllowed;
    boolean mOffsetsChanged;
    boolean mFixedSizeAllowed;
    int mWidth;
    int mHeight;
    int mFormat;
    int mType;
    int mCurWidth;
    int mCurHeight;
    int mWindowFlags;
    int mWindowPrivateFlags;
    int mCurWindowFlags;
    int mCurWindowPrivateFlags;
    android.util.TypedValue mOutsetBottom;
    final android.graphics.Rect mVisibleInsets;
    final android.graphics.Rect mWinFrame;
    final android.graphics.Rect mOverscanInsets;
    final android.graphics.Rect mContentInsets;
    final android.graphics.Rect mStableInsets;
    final android.graphics.Rect mDispatchedOverscanInsets;
    final android.graphics.Rect mDispatchedContentInsets;
    final android.graphics.Rect mDispatchedStableInsets;
    final android.graphics.Rect mFinalSystemInsets;
    final android.graphics.Rect mFinalStableInsets;
    final android.content.res.Configuration mConfiguration;
    private boolean mIsEmulator;
    private boolean mIsCircularEmulator;
    private boolean mWindowIsRound;
    final android.view.WindowManager$LayoutParams mLayout;
    android.view.IWindowSession mSession;
    android.view.InputChannel mInputChannel;
    final java.lang.Object mLock;
    boolean mOffsetMessageEnqueued;
    float mPendingXOffset;
    float mPendingYOffset;
    float mPendingXOffsetStep;
    float mPendingYOffsetStep;
    boolean mPendingSync;
    android.view.MotionEvent mPendingMove;
    final android.content.BroadcastReceiver mReceiver;
    final com.android.internal.view.BaseSurfaceHolder mSurfaceHolder;
    android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver mInputEventReceiver;
    final com.android.internal.view.BaseIWindow mWindow;
    final android.service.wallpaper.WallpaperService this$0;

    public void <init>(android.service.wallpaper.WallpaperService)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService r1;
        int $i0, $i1;
        android.graphics.Rect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.content.res.Configuration $r12;
        android.view.WindowManager$LayoutParams $r13;
        android.service.wallpaper.WallpaperService$Engine$1 $r14;
        java.lang.Object $r15;
        android.service.wallpaper.WallpaperService$Engine$3 $r16;
        android.service.wallpaper.WallpaperService$Engine$2 $r17;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.service.wallpaper.WallpaperService;

        r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mInitializing> = 1;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mScreenOn> = 1;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags> = 16;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags> = 4;

        $i0 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowFlags> = $i0;

        $i1 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowPrivateFlags> = $i1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mVisibleInsets> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mWinFrame> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedOverscanInsets> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedContentInsets> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedStableInsets> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalSystemInsets> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalStableInsets> = $r11;

        $r12 = new android.content.res.Configuration;

        specialinvoke $r12.<android.content.res.Configuration: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.content.res.Configuration mConfiguration> = $r12;

        $r13 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r13.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout> = $r13;

        $r15 = new java.lang.Object;

        specialinvoke $r15.<java.lang.Object: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock> = $r15;

        $r14 = new android.service.wallpaper.WallpaperService$Engine$1;

        specialinvoke $r14.<android.service.wallpaper.WallpaperService$Engine$1: void <init>(android.service.wallpaper.WallpaperService$Engine)>(r0);

        r0.<android.service.wallpaper.WallpaperService$Engine: android.content.BroadcastReceiver mReceiver> = $r14;

        $r17 = new android.service.wallpaper.WallpaperService$Engine$2;

        specialinvoke $r17.<android.service.wallpaper.WallpaperService$Engine$2: void <init>(android.service.wallpaper.WallpaperService$Engine)>(r0);

        r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder> = $r17;

        $r16 = new android.service.wallpaper.WallpaperService$Engine$3;

        specialinvoke $r16.<android.service.wallpaper.WallpaperService$Engine$3: void <init>(android.service.wallpaper.WallpaperService$Engine)>(r0);

        r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow> = $r16;

        return;
    }

    public android.view.SurfaceHolder getSurfaceHolder()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        com.android.internal.view.BaseSurfaceHolder $r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $r1 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        return $r1;
    }

    public int getDesiredMinimumWidth()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r1;
        int $i0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $r1 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $i0 = $r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth>;

        return $i0;
    }

    public int getDesiredMinimumHeight()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r1;
        int $i0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $r1 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $i0 = $r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight>;

        return $i0;
    }

    public boolean isVisible()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean $z0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible>;

        return $z0;
    }

    public boolean isPreview()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r1;
        boolean $z0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $r1 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $z0 = $r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mIsPreview>;

        return $z0;
    }

    public void setTouchEventsEnabled(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        $i1 = $i2 & -17;

        goto label2;

     label1:
        $i0 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        $i1 = $i0 | 16;

     label2:
        r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags> = $i1;

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(0, 0, 0);

     label3:
        return;
    }

    public void setOffsetNotificationsEnabled(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        $i1 = $i2 | 4;

        goto label2;

     label1:
        $i0 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        $i1 = $i0 & -5;

     label2:
        r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags> = $i1;

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(0, 0, 0);

     label3:
        return;
    }

    public void setFixedSizeAllowed(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mFixedSizeAllowed> = z0;

        return;
    }

    public void onCreate(android.view.SurfaceHolder)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }

    public void onDestroy()
    {
        android.service.wallpaper.WallpaperService$Engine r0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        return;
    }

    public void onVisibilityChanged(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        return;
    }

    public void onApplyWindowInsets(android.view.WindowInsets)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.WindowInsets r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.WindowInsets;

        return;
    }

    public void onTouchEvent(android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.MotionEvent r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    public void onOffsetsChanged(float, float, float, float, int, int)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        float f0, f1, f2, f3;
        int i0, i1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        return;
    }

    public android.os.Bundle onCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        boolean z0;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        return null;
    }

    public void onDesiredSizeChanged(int, int)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        int i0, i1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onSurfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void onSurfaceRedrawNeeded(android.view.SurfaceHolder)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }

    public void onSurfaceCreated(android.view.SurfaceHolder)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }

    public void onSurfaceDestroyed(android.view.SurfaceHolder)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.SurfaceHolder;

        return;
    }

    protected void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        java.lang.String r1, $r9, $r11, $r13;
        java.io.FileDescriptor r2;
        java.io.PrintWriter r3;
        java.lang.String[] r4;
        java.lang.Object r5, $r15;
        java.lang.Throwable r6, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect $r7, $r8, $r10;
        android.content.res.Configuration $r12;
        float $f0, $f1, $f2, $f3;
        android.view.WindowManager$LayoutParams $r14;
        android.view.MotionEvent $r16, $r18;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: java.lang.String[];

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mInitializing=");

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mInitializing>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mVisible=");

        $z2 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mVisible>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mScreenOn=");

        $z3 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mScreenOn>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mReportedVisible=");

        $z4 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mCreated=");

        $z5 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mSurfaceCreated=");

        $z6 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mIsCreating=");

        $z7 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCreating>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mDrawingAllowed=");

        $z8 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDrawingAllowed>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z8);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mWidth=");

        $i1 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWidth>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mCurWidth=");

        $i0 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mHeight=");

        $i3 = r0.<android.service.wallpaper.WallpaperService$Engine: int mHeight>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mCurHeight=");

        $i2 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mType=");

        $i5 = r0.<android.service.wallpaper.WallpaperService$Engine: int mType>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mWindowFlags=");

        $i4 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mCurWindowFlags=");

        $i7 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowFlags>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i7);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mWindowPrivateFlags=");

        $i6 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        virtualinvoke r3.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mCurWindowPrivateFlags=");

        $i8 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowPrivateFlags>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i8);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mVisibleInsets=");

        $r7 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mVisibleInsets>;

        $r9 = virtualinvoke $r7.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mWinFrame=");

        $r8 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mWinFrame>;

        $r11 = virtualinvoke $r8.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mContentInsets=");

        $r10 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $r13 = virtualinvoke $r10.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mConfiguration=");

        $r12 = r0.<android.service.wallpaper.WallpaperService$Engine: android.content.res.Configuration mConfiguration>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mLayout=");

        $r14 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

        $r15 = r0.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        r5 = $r15;

        entermonitor $r15;

     label1:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mPendingXOffset=");

        $f0 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffset>;

        virtualinvoke r3.<java.io.PrintWriter: void print(float)>($f0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mPendingXOffset=");

        $f1 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffset>;

        virtualinvoke r3.<java.io.PrintWriter: void println(float)>($f1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mPendingXOffsetStep=");

        $f2 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffsetStep>;

        virtualinvoke r3.<java.io.PrintWriter: void print(float)>($f2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mPendingXOffsetStep=");

        $f3 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffsetStep>;

        virtualinvoke r3.<java.io.PrintWriter: void println(float)>($f3);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mOffsetMessageEnqueued=");

        $z9 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mOffsetMessageEnqueued>;

        virtualinvoke r3.<java.io.PrintWriter: void print(boolean)>($z9);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" mPendingSync=");

        $z10 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mPendingSync>;

        virtualinvoke r3.<java.io.PrintWriter: void println(boolean)>($z10);

        $r18 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove>;

        if $r18 == null goto label2;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("mPendingMove=");

        $r16 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove>;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

     label2:
        exitmonitor r5;

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r5;

     label5:
        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void dispatchPointer(android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.MotionEvent r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        int $i0;
        com.android.internal.os.HandlerCaller $r5, $r6;
        android.os.Message r8;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z0 == 0 goto label8;

        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label2;

        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove> = r1;

        goto label3;

     label2:
        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove> = null;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r5 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.os.HandlerCaller mCaller>;

        r8 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(10040, r1);

        $r6 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r6.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r8);

        goto label9;

     label8:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void updateSurface(boolean, boolean, boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z41, $z42, $z43, $z44, $z45, z46, z47, z48, z49, z50;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i86, $i87, i88, i89, i90, i91, i92, i93, i94;
        android.view.WindowManager r1;
        android.content.res.TypedArray r2;
        android.view.Display r3;
        android.view.SurfaceHolder$Callback[] r4, r5, r139, r140, r144, r145;
        java.lang.Throwable r6, $r130;
        android.view.SurfaceHolder$Callback r7, r141, r146;
        com.android.internal.view.BaseSurfaceHolder $r8, $r9, $r10, $r11, $r12, $r13, $r26, $r28, $r47, $r48, $r49, $r52, $r53, $r54, $r56, $r57, $r66, $r80, $r81, $r86, $r87;
        android.view.WindowManager$LayoutParams $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r30, $r39, $r97, $r115, $r118, $r123, $r124, $r125;
        android.os.IBinder $r22;
        android.graphics.Rect $r24, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r42, $r43, $r44, $r45, $r50, $r51, $r61, $r62, $r63, $r64, $r69, $r70, $r74, $r75, $r76, $r77, $r78, $r79, $r82, $r84, $r85, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r99, $r100, $r101, $r102, $r111, $r114, r138;
        com.android.internal.view.BaseIWindow $r25, $r41, $r59, $r113, $r116, $r128;
        android.view.Surface $r27, $r55;
        java.util.concurrent.locks.ReentrantLock $r29, $r46;
        android.content.res.Configuration $r33;
        android.view.IWindowSession $r40, $r58, $r112, $r127;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r60, $r83, $r88, $r98, $r103, $r129, $r136;
        android.view.SurfaceHolder$Callback2 $r65;
        android.view.WindowInsets $r67, r143;
        android.util.TypedValue $r68, $r73, $r134, $r135, $r137;
        android.content.res.Resources $r71, $r105;
        android.service.wallpaper.WallpaperService $r72, $r106, $r107, $r110, $r122;
        float $f0;
        java.lang.String $r104, $r121;
        int[] $r108;
        java.lang.Object $r109;
        android.view.InputChannel $r117, $r119, $r133;
        java.lang.Class $r120;
        android.os.RemoteException $r126;
        android.os.Looper $r131;
        android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver $r132;
        android.util.DisplayMetrics r142;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $z12 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z12 == 0 goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WallpaperService", "Ignoring updateSurface: destroyed");

     label01:
        z3 = 0;

        $r8 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        i0 = virtualinvoke $r8.<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()>();

        if i0 > 0 goto label02;

        i0 = -1;

        goto label03;

     label02:
        z3 = 1;

     label03:
        $r9 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        i1 = virtualinvoke $r9.<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()>();

        if i1 > 0 goto label04;

        i1 = -1;

        goto label05;

     label04:
        z3 = 1;

     label05:
        $z13 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z13 != 0 goto label06;

        $z38 = 1;

        goto label07;

     label06:
        $z38 = 0;

     label07:
        z4 = $z38;

        $z14 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated>;

        if $z14 != 0 goto label08;

        $z39 = 1;

        goto label09;

     label08:
        $z39 = 0;

     label09:
        z5 = $z39;

        $i5 = r0.<android.service.wallpaper.WallpaperService$Engine: int mFormat>;

        $r10 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i6 = virtualinvoke $r10.<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>();

        if $i5 == $i6 goto label10;

        $z35 = 1;

        goto label11;

     label10:
        $z35 = 0;

     label11:
        z6 = $z35;

        $i4 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWidth>;

        if $i4 != i0 goto label12;

        $i83 = r0.<android.service.wallpaper.WallpaperService$Engine: int mHeight>;

        if $i83 == i1 goto label13;

     label12:
        $z36 = 1;

        goto label14;

     label13:
        $z36 = 0;

     label14:
        z7 = $z36;

        $z15 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z15 != 0 goto label15;

        $z37 = 1;

        goto label16;

     label15:
        $z37 = 0;

     label16:
        z8 = $z37;

        $i9 = r0.<android.service.wallpaper.WallpaperService$Engine: int mType>;

        $r11 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i7 = virtualinvoke $r11.<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>();

        if $i9 == $i7 goto label17;

        $z45 = 1;

        goto label18;

     label17:
        $z45 = 0;

     label18:
        z9 = $z45;

        $i11 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowFlags>;

        $i8 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        if $i11 != $i8 goto label19;

        $i87 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowPrivateFlags>;

        $i86 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        if $i87 == $i86 goto label20;

     label19:
        $z44 = 1;

        goto label21;

     label20:
        $z44 = 0;

     label21:
        z10 = $z44;

        if z0 != 0 goto label22;

        if z4 != 0 goto label22;

        if z5 != 0 goto label22;

        if z6 != 0 goto label22;

        if z7 != 0 goto label22;

        if z9 != 0 goto label22;

        if z10 != 0 goto label22;

        if z2 != 0 goto label22;

        $r136 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $z42 = $r136.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported>;

        if $z42 != 0 goto label70;

     label22:
        r0.<android.service.wallpaper.WallpaperService$Engine: int mWidth> = i0;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mHeight> = i1;

        $r13 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i10 = virtualinvoke $r13.<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: int mFormat> = $i10;

        $r12 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i12 = virtualinvoke $r12.<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: int mType> = $i12;

        $r16 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r16.<android.view.WindowManager$LayoutParams: int x> = 0;

        $r14 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r14.<android.view.WindowManager$LayoutParams: int y> = 0;

        $r15 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r15.<android.view.WindowManager$LayoutParams: int width> = i0;

        $r18 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r18.<android.view.WindowManager$LayoutParams: int height> = i1;

        $r17 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $i14 = r0.<android.service.wallpaper.WallpaperService$Engine: int mFormat>;

        $r17.<android.view.WindowManager$LayoutParams: int format> = $i14;

        $i13 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowFlags> = $i13;

        $r20 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $i18 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowFlags>;

        $i17 = $i18 | 512;

        $i16 = $i17 | 256;

        $i15 = $i16 | 8;

        $r20.<android.view.WindowManager$LayoutParams: int flags> = $i15;

        $i20 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWindowPrivateFlags> = $i20;

        $r19 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $i19 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWindowPrivateFlags>;

        $r19.<android.view.WindowManager$LayoutParams: int privateFlags> = $i19;

        $r23 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $i21 = r0.<android.service.wallpaper.WallpaperService$Engine: int mType>;

        $r23.<android.view.WindowManager$LayoutParams: int memoryType> = $i21;

        $r21 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r22 = r0.<android.service.wallpaper.WallpaperService$Engine: android.os.IBinder mWindowToken>;

        $r21.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r22;

        $z16 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z16 != 0 goto label30;

        $r110 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r109 = virtualinvoke $r110.<android.service.wallpaper.WallpaperService: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r109;

        $r107 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r108 = <com.android.internal.R$styleable: int[] Window>;

        r2 = virtualinvoke $r107.<android.service.wallpaper.WallpaperService: android.content.res.TypedArray obtainStyledAttributes(int[])>($r108);

        r3 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i80 = virtualinvoke r3.<android.view.Display: int getDisplayId()>();

        if $i80 != 0 goto label23;

        $z43 = 1;

        goto label24;

     label23:
        $z43 = 0;

     label24:
        z11 = $z43;

        if z11 == 0 goto label26;

        $z41 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>(52);

        if $z41 == 0 goto label26;

        $r135 = r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom>;

        if $r135 != null goto label25;

        $r137 = new android.util.TypedValue;

        specialinvoke $r137.<android.util.TypedValue: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom> = $r137;

     label25:
        $r134 = r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom>;

        virtualinvoke r2.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(52, $r134);

        goto label27;

     label26:
        r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom> = null;

     label27:
        $r106 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r105 = virtualinvoke $r106.<android.service.wallpaper.WallpaperService: android.content.res.Resources getResources()>();

        $z34 = virtualinvoke $r105.<android.content.res.Resources: boolean getBoolean(int)>(17956972);

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mWindowIsRound> = $z34;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r104 = <android.os.Build: java.lang.String HARDWARE>;

        $z33 = virtualinvoke $r104.<java.lang.String: boolean contains(java.lang.CharSequence)>("goldfish");

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsEmulator> = $z33;

        $z32 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.emulator.circular", 0);

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCircularEmulator> = $z32;

        $r124 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r103 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $i79 = $r103.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mWindowType>;

        $r124.<android.view.WindowManager$LayoutParams: int type> = $i79;

        $r125 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r125.<android.view.WindowManager$LayoutParams: int gravity> = 8388659;

        $r123 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r122 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r120 = virtualinvoke $r122.<java.lang.Object: java.lang.Class getClass()>();

        $r121 = virtualinvoke $r120.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r123.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>($r121);

        $r118 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r118.<android.view.WindowManager$LayoutParams: int windowAnimations> = 16974562;

        $r119 = new android.view.InputChannel;

        specialinvoke $r119.<android.view.InputChannel: void <init>()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel> = $r119;

        $r112 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r113 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $r116 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $i82 = $r116.<com.android.internal.view.BaseIWindow: int mSeq>;

        $r115 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r114 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $r117 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel>;

        $i81 = interfaceinvoke $r112.<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.view.InputChannel)>($r113, $i82, $r115, 0, 0, $r114, $r117);

        if $i81 >= 0 goto label29;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WallpaperService", "Failed to add window while updating wallpaper surface.");

     label28:
        return;

     label29:
        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated> = 1;

        $r132 = new android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver;

        $r133 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel>;

        $r131 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r132.<android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver: void <init>(android.service.wallpaper.WallpaperService$Engine,android.view.InputChannel,android.os.Looper)>(r0, $r133, $r131);

        r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver mInputEventReceiver> = $r132;

     label30:
        $r28 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $r29 = $r28.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDrawingAllowed> = 1;

        if z3 != 0 goto label31;

        $r97 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r111 = $r97.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        $r98 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r99 = $r98.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        virtualinvoke $r111.<android.graphics.Rect: void set(android.graphics.Rect)>($r99);

        goto label32;

     label31:
        $r30 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $r24 = $r30.<android.view.WindowManager$LayoutParams: android.graphics.Rect surfaceInsets>;

        virtualinvoke $r24.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label32:
        $r40 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r41 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $r25 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $i24 = $r25.<com.android.internal.view.BaseIWindow: int mSeq>;

        $r39 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.WindowManager$LayoutParams mLayout>;

        $i23 = r0.<android.service.wallpaper.WallpaperService$Engine: int mWidth>;

        $i22 = r0.<android.service.wallpaper.WallpaperService$Engine: int mHeight>;

        $r32 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mWinFrame>;

        $r31 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $r36 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $r35 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mVisibleInsets>;

        $r34 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $r33 = r0.<android.service.wallpaper.WallpaperService$Engine: android.content.res.Configuration mConfiguration>;

        $r26 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $r27 = $r26.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        i88 = interfaceinvoke $r40.<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>($r41, $i24, $r39, $i23, $i22, 0, 0, $r32, $r31, $r36, $r35, $r34, $r33, $r27);

        $r37 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mWinFrame>;

        i89 = virtualinvoke $r37.<android.graphics.Rect: int width()>();

        $r38 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mWinFrame>;

        i90 = virtualinvoke $r38.<android.graphics.Rect: int height()>();

        if z3 != 0 goto label33;

        $r88 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        r138 = $r88.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        $i40 = r138.<android.graphics.Rect: int left>;

        $i44 = r138.<android.graphics.Rect: int right>;

        $i39 = $i40 + $i44;

        i89 = i89 + $i39;

        $i37 = r138.<android.graphics.Rect: int top>;

        $i38 = r138.<android.graphics.Rect: int bottom>;

        $i43 = $i37 + $i38;

        i90 = i90 + $i43;

        $r85 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $i41 = $r85.<android.graphics.Rect: int left>;

        $i42 = r138.<android.graphics.Rect: int left>;

        $i53 = $i41 + $i42;

        $r85.<android.graphics.Rect: int left> = $i53;

        $r91 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $i52 = $r91.<android.graphics.Rect: int top>;

        $i51 = r138.<android.graphics.Rect: int top>;

        $i56 = $i52 + $i51;

        $r91.<android.graphics.Rect: int top> = $i56;

        $r92 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $i55 = $r92.<android.graphics.Rect: int right>;

        $i54 = r138.<android.graphics.Rect: int right>;

        $i47 = $i55 + $i54;

        $r92.<android.graphics.Rect: int right> = $i47;

        $r89 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $i46 = $r89.<android.graphics.Rect: int bottom>;

        $i45 = r138.<android.graphics.Rect: int bottom>;

        $i50 = $i46 + $i45;

        $r89.<android.graphics.Rect: int bottom> = $i50;

        $r90 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $i49 = $r90.<android.graphics.Rect: int left>;

        $i48 = r138.<android.graphics.Rect: int left>;

        $i66 = $i49 + $i48;

        $r90.<android.graphics.Rect: int left> = $i66;

        $r96 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $i67 = $r96.<android.graphics.Rect: int top>;

        $i68 = r138.<android.graphics.Rect: int top>;

        $i63 = $i67 + $i68;

        $r96.<android.graphics.Rect: int top> = $i63;

        $r95 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $i64 = $r95.<android.graphics.Rect: int right>;

        $i65 = r138.<android.graphics.Rect: int right>;

        $i60 = $i64 + $i65;

        $r95.<android.graphics.Rect: int right> = $i60;

        $r94 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $i61 = $r94.<android.graphics.Rect: int bottom>;

        $i62 = r138.<android.graphics.Rect: int bottom>;

        $i57 = $i61 + $i62;

        $r94.<android.graphics.Rect: int bottom> = $i57;

        $r93 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $i58 = $r93.<android.graphics.Rect: int left>;

        $i59 = r138.<android.graphics.Rect: int left>;

        $i76 = $i58 + $i59;

        $r93.<android.graphics.Rect: int left> = $i76;

        $r102 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $i78 = $r102.<android.graphics.Rect: int top>;

        $i77 = r138.<android.graphics.Rect: int top>;

        $i73 = $i78 + $i77;

        $r102.<android.graphics.Rect: int top> = $i73;

        $r101 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $i75 = $r101.<android.graphics.Rect: int right>;

        $i74 = r138.<android.graphics.Rect: int right>;

        $i70 = $i75 + $i74;

        $r101.<android.graphics.Rect: int right> = $i70;

        $r100 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $i72 = $r100.<android.graphics.Rect: int bottom>;

        $i71 = r138.<android.graphics.Rect: int bottom>;

        $i69 = $i72 + $i71;

        $r100.<android.graphics.Rect: int bottom> = $i69;

     label33:
        $i25 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth>;

        if $i25 == i89 goto label34;

        z7 = 1;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth> = i89;

     label34:
        $i26 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight>;

        if $i26 == i90 goto label35;

        z7 = 1;

        r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight> = i90;

     label35:
        $r42 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedOverscanInsets>;

        $r45 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        $z17 = virtualinvoke $r42.<android.graphics.Rect: boolean equals(java.lang.Object)>($r45);

        if $z17 != 0 goto label36;

        $z30 = 1;

        goto label37;

     label36:
        $z30 = 0;

     label37:
        z46 = z8 | $z30;

        $r43 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedContentInsets>;

        $r44 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        $z19 = virtualinvoke $r43.<android.graphics.Rect: boolean equals(java.lang.Object)>($r44);

        if $z19 != 0 goto label38;

        $z31 = 1;

        goto label39;

     label38:
        $z31 = 0;

     label39:
        z47 = z46 | $z31;

        $r50 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedStableInsets>;

        $r51 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        $z18 = virtualinvoke $r50.<android.graphics.Rect: boolean equals(java.lang.Object)>($r51);

        if $z18 != 0 goto label40;

        $z29 = 1;

        goto label41;

     label40:
        $z29 = 0;

     label41:
        z48 = z47 | $z29;

        $r48 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke $r48.<com.android.internal.view.BaseSurfaceHolder: void setSurfaceFrameSize(int,int)>(i89, i90);

        $r49 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $r46 = $r49.<com.android.internal.view.BaseSurfaceHolder: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r46.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r47 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $r55 = $r47.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        $z20 = virtualinvoke $r55.<android.view.Surface: boolean isValid()>();

        if $z20 != 0 goto label43;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void reportSurfaceDestroyed()>();

     label42:
        return;

     label43:
        z49 = 0;

     label44:
        $r54 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke $r54.<com.android.internal.view.BaseSurfaceHolder: void ungetCallbacks()>();

        if z5 == 0 goto label46;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCreating> = 1;

        z49 = 1;

        $r81 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceCreated(android.view.SurfaceHolder)>($r81);

        $r87 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        r5 = virtualinvoke $r87.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>();

        if r5 == null goto label46;

        r4 = r5;

        i3 = lengthof r4;

        i2 = 0;

     label45:
        if i2 >= i3 goto label46;

        r7 = r4[i2];

        $r86 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        interfaceinvoke r7.<android.view.SurfaceHolder$Callback: void surfaceCreated(android.view.SurfaceHolder)>($r86);

        i2 = i2 + 1;

        goto label45;

     label46:
        if z4 != 0 goto label47;

        $i33 = i88 & 2;

        if $i33 == 0 goto label48;

     label47:
        $z27 = 1;

        goto label49;

     label48:
        $z27 = 0;

     label49:
        z2 = z2 | $z27;

        if z1 != 0 goto label50;

        if z4 != 0 goto label50;

        if z5 != 0 goto label50;

        if z6 != 0 goto label50;

        if z7 == 0 goto label52;

     label50:
        z49 = 1;

        $r52 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i28 = r0.<android.service.wallpaper.WallpaperService$Engine: int mFormat>;

        $i27 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth>;

        $i29 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight>;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>($r52, $i28, $i27, $i29);

        $r53 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        r139 = virtualinvoke $r53.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>();

        if r139 == null goto label52;

        r140 = r139;

        i91 = lengthof r140;

        i92 = 0;

     label51:
        if i92 >= i91 goto label52;

        r141 = r140[i92];

        $r80 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $i32 = r0.<android.service.wallpaper.WallpaperService$Engine: int mFormat>;

        $i31 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth>;

        $i30 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight>;

        interfaceinvoke r141.<android.view.SurfaceHolder$Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>($r80, $i32, $i31, $i30);

        i92 = i92 + 1;

        goto label51;

     label52:
        if z48 == 0 goto label58;

        $r63 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedOverscanInsets>;

        $r64 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mOverscanInsets>;

        virtualinvoke $r63.<android.graphics.Rect: void set(android.graphics.Rect)>($r64);

        $r61 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedContentInsets>;

        $r62 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mContentInsets>;

        virtualinvoke $r61.<android.graphics.Rect: void set(android.graphics.Rect)>($r62);

        $r74 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedStableInsets>;

        $r75 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mStableInsets>;

        virtualinvoke $r74.<android.graphics.Rect: void set(android.graphics.Rect)>($r75);

        $z25 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsEmulator>;

        if $z25 == 0 goto label53;

        $z26 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCircularEmulator>;

        if $z26 != 0 goto label54;

     label53:
        $z24 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mWindowIsRound>;

        if $z24 == 0 goto label55;

     label54:
        $z28 = 1;

        goto label56;

     label55:
        $z28 = 0;

     label56:
        z50 = $z28;

        $r76 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalSystemInsets>;

        $r77 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedOverscanInsets>;

        virtualinvoke $r76.<android.graphics.Rect: void set(android.graphics.Rect)>($r77);

        $r78 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalStableInsets>;

        $r79 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mDispatchedStableInsets>;

        virtualinvoke $r78.<android.graphics.Rect: void set(android.graphics.Rect)>($r79);

        $r68 = r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom>;

        if $r68 == null goto label57;

        $r72 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r71 = virtualinvoke $r72.<android.service.wallpaper.WallpaperService: android.content.res.Resources getResources()>();

        r142 = virtualinvoke $r71.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r82 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalSystemInsets>;

        $r73 = r0.<android.service.wallpaper.WallpaperService$Engine: android.util.TypedValue mOutsetBottom>;

        $f0 = virtualinvoke $r73.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r142);

        $i35 = (int) $f0;

        $r83 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r84 = $r83.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        $i34 = $r84.<android.graphics.Rect: int bottom>;

        $i36 = $i35 + $i34;

        $r82.<android.graphics.Rect: int bottom> = $i36;

     label57:
        $r67 = new android.view.WindowInsets;

        $r69 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalSystemInsets>;

        $r70 = r0.<android.service.wallpaper.WallpaperService$Engine: android.graphics.Rect mFinalStableInsets>;

        specialinvoke $r67.<android.view.WindowInsets: void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>($r69, null, $r70, z50);

        r143 = $r67;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onApplyWindowInsets(android.view.WindowInsets)>(r143);

     label58:
        if z2 == 0 goto label61;

        $r57 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>($r57);

        $r56 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        r144 = virtualinvoke $r56.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>();

        if r144 == null goto label61;

        r145 = r144;

        i93 = lengthof r145;

        i94 = 0;

     label59:
        if i94 >= i93 goto label61;

        r146 = r145[i94];

        $z23 = r146 instanceof android.view.SurfaceHolder$Callback2;

        if $z23 == 0 goto label60;

        $r65 = (android.view.SurfaceHolder$Callback2) r146;

        $r66 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r65.<android.view.SurfaceHolder$Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>($r66);

     label60:
        i94 = i94 + 1;

        goto label59;

     label61:
        if z49 == 0 goto label63;

        $z22 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible>;

        if $z22 != 0 goto label63;

        $z21 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCreating>;

        if $z21 == 0 goto label62;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onVisibilityChanged(boolean)>(1);

     label62:
        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onVisibilityChanged(boolean)>(0);

     label63:
        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCreating> = 0;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated> = 1;

        if z2 == 0 goto label64;

        $r58 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r59 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        interfaceinvoke $r58.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>($r59);

     label64:
        $r60 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        virtualinvoke $r60.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void reportShown()>();

        goto label68;

     label65:
        $r130 := @caughtexception;

        r6 = $r130;

     label66:
        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mIsCreating> = 0;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated> = 1;

        if z2 == 0 goto label67;

        $r127 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r128 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        interfaceinvoke $r127.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>($r128);

     label67:
        $r129 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        virtualinvoke $r129.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: void reportShown()>();

        throw r6;

     label68:
        goto label70;

     label69:
        $r126 := @caughtexception;

     label70:
        return;

        catch java.lang.Throwable from label44 to label63 with label65;
        catch java.lang.Throwable from label65 to label66 with label65;
        catch android.os.RemoteException from label22 to label28 with label69;
        catch android.os.RemoteException from label29 to label42 with label69;
        catch android.os.RemoteException from label43 to label68 with label69;
    }

    void attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r1;
        android.content.IntentFilter r2, $r13;
        boolean $z0, $z1;
        com.android.internal.os.HandlerCaller $r3;
        android.service.wallpaper.IWallpaperConnection $r4;
        android.os.IBinder $r5;
        com.android.internal.view.BaseSurfaceHolder $r6, $r16;
        android.view.IWindowSession $r7, $r8;
        com.android.internal.view.BaseIWindow $r9;
        android.service.wallpaper.WallpaperService $r10, $r14;
        java.lang.Object $r11;
        android.os.PowerManager $r12;
        android.content.BroadcastReceiver $r15;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine> = r1;

        $r3 = staticinvoke <android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller access$100(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)>(r1);

        r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.os.HandlerCaller mCaller> = $r3;

        $r4 = r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.IWallpaperConnection mConnection> = $r4;

        $r5 = r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.os.IBinder mWindowToken>;

        r0.<android.service.wallpaper.WallpaperService$Engine: android.os.IBinder mWindowToken> = $r5;

        $r6 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke $r6.<com.android.internal.view.BaseSurfaceHolder: void setSizeFromLayout()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mInitializing> = 1;

        $r7 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession> = $r7;

        $r9 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $r8 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        virtualinvoke $r9.<com.android.internal.view.BaseIWindow: void setSession(android.view.IWindowSession)>($r8);

        $r10 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r11 = virtualinvoke $r10.<android.service.wallpaper.WallpaperService: java.lang.Object getSystemService(java.lang.String)>("power");

        $r12 = (android.os.PowerManager) $r11;

        $z1 = virtualinvoke $r12.<android.os.PowerManager: boolean isScreenOn()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mScreenOn> = $z1;

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>()>();

        r2 = $r13;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        $r14 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r15 = r0.<android.service.wallpaper.WallpaperService$Engine: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r14.<android.service.wallpaper.WallpaperService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r15, r2);

        $r16 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onCreate(android.view.SurfaceHolder)>($r16);

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mInitializing> = 0;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible> = 0;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(0, 0, 0);

        return;
    }

    void doDesiredSizeChanged(int, int)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        int i0, i1;
        boolean $z0;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r1, $r2;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r1.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth> = i0;

        $r2 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r2.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight> = i1;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onDesiredSizeChanged(int,int)>(i0, i1);

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

     label1:
        return;
    }

    void doDisplayPaddingChanged(android.graphics.Rect)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.graphics.Rect r1, $r3, $r5;
        boolean $z0, $z1;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r2, $r4;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r3 = $r2.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        $z1 = virtualinvoke $r3.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $r5 = $r4.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.graphics.Rect mDisplayPadding>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, 0);

     label1:
        return;
    }

    void doVisibilityChanged(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, $z1;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mVisible> = z0;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void reportVisibility()>();

     label1:
        return;
    }

    void reportVisibility()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z1 != 0 goto label4;

        $z2 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mVisible>;

        if $z2 == 0 goto label1;

        $z4 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mScreenOn>;

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $z3 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible>;

        if $z3 == z0 goto label4;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible> = z0;

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(0);

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(0, 0, 0);

     label3:
        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onVisibilityChanged(boolean)>(z0);

     label4:
        return;
    }

    void doOffsetsChanged(boolean)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        com.android.internal.view.BaseIWindow $r4;
        android.os.IBinder $r5;
        android.view.IWindowSession $r6;
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        z0 := @parameter0: boolean;

        $z2 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z2 == 0 goto label01;

        return;

     label01:
        if z0 != 0 goto label02;

        $z5 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mOffsetsChanged>;

        if $z5 != 0 goto label02;

        return;

     label02:
        $r3 = r0.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label03:
        f0 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffset>;

        f1 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingYOffset>;

        f2 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingXOffsetStep>;

        f3 = r0.<android.service.wallpaper.WallpaperService$Engine: float mPendingYOffsetStep>;

        z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mPendingSync>;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mPendingSync> = 0;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mOffsetMessageEnqueued> = 0;

        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        $z3 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated>;

        if $z3 == 0 goto label13;

        $z4 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mReportedVisible>;

        if $z4 == 0 goto label12;

        $r7 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $i2 = $r7.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth>;

        $i3 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurWidth>;

        i10 = $i2 - $i3;

        if i10 <= 0 goto label08;

        $f8 = (float) i10;

        $f7 = $f8 * f0;

        $f9 = $f7 + 0.5F;

        $i9 = (int) $f9;

        $i8 = neg $i9;

        goto label09;

     label08:
        $i8 = 0;

     label09:
        i11 = $i8;

        $r8 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper mIWallpaperEngine>;

        $i5 = $r8.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight>;

        $i4 = r0.<android.service.wallpaper.WallpaperService$Engine: int mCurHeight>;

        i0 = $i5 - $i4;

        if i0 <= 0 goto label10;

        $f4 = (float) i0;

        $f6 = $f4 * f1;

        $f5 = $f6 + 0.5F;

        $i7 = (int) $f5;

        $i6 = neg $i7;

        goto label11;

     label10:
        $i6 = 0;

     label11:
        i1 = $i6;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onOffsetsChanged(float,float,float,float,int,int)>(f0, f1, f2, f3, i11, i1);

        goto label13;

     label12:
        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mOffsetsChanged> = 1;

     label13:
        if z1 == 0 goto label17;

     label14:
        $r6 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $r5 = virtualinvoke $r4.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r6.<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>($r5);

     label15:
        goto label17;

     label16:
        $r9 := @caughtexception;

     label17:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    void doCommand(android.service.wallpaper.WallpaperService$WallpaperCommand)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.service.wallpaper.WallpaperService$WallpaperCommand r1;
        android.os.Bundle r2, $r7;
        boolean $z0, $z1, $z2;
        com.android.internal.view.BaseIWindow $r4;
        android.view.IWindowSession $r5;
        android.os.IBinder $r6;
        int $i0, $i1, $i2;
        java.lang.String $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter0: android.service.wallpaper.WallpaperService$WallpaperCommand;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $r8 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: java.lang.String action>;

        $i2 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: int x>;

        $i1 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: int y>;

        $i0 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: int z>;

        $r7 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: android.os.Bundle extras>;

        $z2 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: boolean sync>;

        r2 = virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>($r8, $i2, $i1, $i0, $r7, $z2);

        goto label2;

     label1:
        r2 = null;

     label2:
        $z1 = r1.<android.service.wallpaper.WallpaperService$WallpaperCommand: boolean sync>;

        if $z1 == 0 goto label6;

     label3:
        $r5 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        $r6 = virtualinvoke $r4.<com.android.internal.view.BaseIWindow: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>($r6, r2);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    void reportSurfaceDestroyed()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.SurfaceHolder$Callback[] r1, r2;
        int i0, i1;
        android.view.SurfaceHolder$Callback r3;
        boolean $z0;
        com.android.internal.view.BaseSurfaceHolder $r4, $r5, $r6, $r7;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated>;

        if $z0 == 0 goto label3;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mSurfaceCreated> = 0;

        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke $r4.<com.android.internal.view.BaseSurfaceHolder: void ungetCallbacks()>();

        $r5 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        r1 = virtualinvoke $r5.<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>();

        if r1 == null goto label2;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r7 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        interfaceinvoke r3.<android.view.SurfaceHolder$Callback: void surfaceDestroyed(android.view.SurfaceHolder)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>($r6);

     label3:
        return;
    }

    void detach()
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        boolean $z0, $z1, $z2;
        android.content.BroadcastReceiver $r2;
        android.service.wallpaper.WallpaperService $r3;
        android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver $r4, $r11;
        com.android.internal.view.BaseIWindow $r5;
        android.view.IWindowSession $r6;
        com.android.internal.view.BaseSurfaceHolder $r7;
        android.view.Surface $r8;
        android.view.InputChannel $r9, $r10;
        android.os.RemoteException $r12;

        r0 := @this: android.service.wallpaper.WallpaperService$Engine;

        $z0 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mDestroyed> = 1;

        $z1 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mVisible>;

        if $z1 == 0 goto label2;

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mVisible> = 0;

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onVisibilityChanged(boolean)>(0);

     label2:
        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void reportSurfaceDestroyed()>();

        virtualinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onDestroy()>();

        $r3 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService this$0>;

        $r2 = r0.<android.service.wallpaper.WallpaperService$Engine: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r3.<android.service.wallpaper.WallpaperService: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $z2 = r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated>;

        if $z2 == 0 goto label8;

     label3:
        $r4 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver mInputEventReceiver>;

        if $r4 == null goto label4;

        $r11 = r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver mInputEventReceiver>;

        virtualinvoke $r11.<android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver: void dispose()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver mInputEventReceiver> = null;

     label4:
        $r6 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.IWindowSession mSession>;

        $r5 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        interfaceinvoke $r6.<android.view.IWindowSession: void remove(android.view.IWindow)>($r5);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

     label7:
        $r7 = r0.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseSurfaceHolder mSurfaceHolder>;

        $r8 = $r7.<com.android.internal.view.BaseSurfaceHolder: android.view.Surface mSurface>;

        virtualinvoke $r8.<android.view.Surface: void release()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: boolean mCreated> = 0;

        $r9 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel>;

        if $r9 == null goto label8;

        $r10 = r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel>;

        virtualinvoke $r10.<android.view.InputChannel: void dispose()>();

        r0.<android.service.wallpaper.WallpaperService$Engine: android.view.InputChannel mInputChannel> = null;

     label8:
        return;

        catch android.os.RemoteException from label3 to label5 with label6;
    }

    static void access$000(android.service.wallpaper.WallpaperService$Engine, android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$Engine r0;
        android.view.MotionEvent r1;

        r0 := @parameter0: android.service.wallpaper.WallpaperService$Engine;

        r1 := @parameter1: android.view.MotionEvent;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void dispatchPointer(android.view.MotionEvent)>(r1);

        return;
    }
}
