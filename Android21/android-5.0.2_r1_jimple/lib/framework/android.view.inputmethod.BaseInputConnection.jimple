public class android.view.inputmethod.BaseInputConnection extends java.lang.Object implements android.view.inputmethod.InputConnection
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    static final java.lang.Object COMPOSING;
    protected final android.view.inputmethod.InputMethodManager mIMM;
    final android.view.View mTargetView;
    final boolean mDummyMode;
    private java.lang.Object[] mDefaultComposingSpans;
    android.text.Editable mEditable;
    android.view.KeyCharacterMap mKeyCharacterMap;

    void <init>(android.view.inputmethod.InputMethodManager, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean z0, $z1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = r1;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = null;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z1;

        return;
    }

    public void <init>(android.view.View, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.View r1;
        boolean z0, $z1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM> = $r4;

        r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView> = r1;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode> = $z1;

        return;
    }

    public static final void removeComposingSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object[] r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, $r3;

        r0 := @parameter0: android.text.Spannable;

        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        $i1 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "java/lang/Object");

        if r1 == null goto label3;

        $i2 = lengthof r1;

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label3;

        r2 = r1[i0];

        $i3 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r2);

        $i4 = $i3 & 256;

        if $i4 == 0 goto label2;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>(r2);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    public static void setComposingSpans(android.text.Spannable)
    {
        android.text.Spannable r0;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)>(r0, 0, $i0);

        return;
    }

    public static void setComposingSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object[] r1;
        java.lang.Object r2, $r3, $r4;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "java/lang/Object");

        if r1 == null goto label4;

        $i4 = lengthof r1;

        i2 = $i4 - 1;

     label1:
        if i2 < 0 goto label4;

        r2 = r1[i2];

        $r4 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        if r2 != $r4 goto label2;

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>(r2);

        goto label3;

     label2:
        i3 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r2);

        $i5 = i3 & 307;

        if $i5 == 289 goto label3;

        $i6 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r2);

        $i7 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r2);

        $i8 = i3 & -52;

        $i10 = $i8 | 256;

        $i9 = $i10 | 33;

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r2, $i6, $i7, $i9);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r3, i0, i1, 289);

        return;
    }

    public static int getComposingSpanStart(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r1);

        return $i0;
    }

    public static int getComposingSpanEnd(android.text.Spannable)
    {
        android.text.Spannable r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @parameter0: android.text.Spannable;

        $r1 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        $i0 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r1);

        return $i0;
    }

    public android.text.Editable getEditable()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable $r1, $r2, $r4, $r5;
        android.text.Editable$Factory $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r1 = r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        $r4 = virtualinvoke $r3.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>("");

        r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable> = $r4;

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r5, 0);

     label1:
        $r2 = r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable mEditable>;

        return $r2;
    }

    public boolean beginBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    public boolean endBatchEdit()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return 0;
    }

    protected void reportFinish()
    {
        android.view.inputmethod.BaseInputConnection r0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        return;
    }

    public boolean clearMetaKeyStates(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        staticinvoke <android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>(r1, i0);

        return 1;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.CompletionInfo r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return 0;
    }

    public boolean commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.CorrectionInfo r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        return 0;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        int i0;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>(r1, i0, 0);

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void notifyUserAction()>();

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        return 1;
    }

    public boolean deleteSurroundingText(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, i9, i10, i11, i12;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        if i2 <= i3 goto label2;

        i4 = i2;

        i2 = i3;

        i3 = i4;

     label2:
        i9 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>(r1);

        i5 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r1);

        if i5 >= i9 goto label3;

        i6 = i9;

        i9 = i5;

        i5 = i6;

     label3:
        if i9 == -1 goto label5;

        if i5 == -1 goto label5;

        if i9 >= i2 goto label4;

        i2 = i9;

     label4:
        if i5 <= i3 goto label5;

        i3 = i5;

     label5:
        i10 = 0;

        if i0 <= 0 goto label7;

        i7 = i2 - i0;

        if i7 >= 0 goto label6;

        i7 = 0;

     label6:
        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>(i7, i2);

        i10 = i2 - i7;

     label7:
        if i1 <= 0 goto label9;

        i11 = i3 - i10;

        i12 = i11 + i1;

        $i8 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i12 <= $i8 goto label8;

        i12 = interfaceinvoke r1.<android.text.Editable: int length()>();

     label8:
        interfaceinvoke r1.<android.text.Editable: android.text.Editable delete(int,int)>(i11, i12);

     label9:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return 1;
    }

    public boolean finishComposingText()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r1);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

     label1:
        return 1;
    }

    public int getCursorCapsMode(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i4;
        android.text.Editable r1;
        boolean $z0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        $z0 = r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label2;

        return 0;

     label2:
        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        if i1 <= i2 goto label3;

        i1 = i2;

     label3:
        $i4 = staticinvoke <android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>(r1, i1, i0);

        return $i4;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        return null;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, i3, $i5, $i6, $i7;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        if i2 <= i3 goto label2;

        i2 = i3;

     label2:
        if i2 > 0 goto label3;

        return "";

     label3:
        if i0 <= i2 goto label4;

        i0 = i2;

     label4:
        $i5 = i1 & 1;

        if $i5 == 0 goto label5;

        $i7 = i2 - i0;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>($i7, i2);

        return $r3;

     label5:
        $i6 = i2 - i0;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, $i6, i2);

        return $r2;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, i3, $i4;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        if i1 <= i2 goto label2;

        i3 = i1;

        i1 = i2;

        i2 = i3;

     label2:
        if i1 != i2 goto label3;

        return null;

     label3:
        $i4 = i0 & 1;

        if $i4 == 0 goto label4;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i1, i2);

        return $r3;

     label4:
        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, i1, i2);

        return $r2;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.text.Editable r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return null;

     label1:
        i2 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i3 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        if i2 <= i3 goto label2;

        i4 = i2;

        i3 = i4;

     label2:
        if i3 >= 0 goto label3;

        i3 = 0;

     label3:
        $i5 = i3 + i0;

        $i6 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if $i5 <= $i6 goto label4;

        $i10 = interfaceinvoke r1.<android.text.Editable: int length()>();

        i0 = $i10 - i3;

     label4:
        $i7 = i1 & 1;

        if $i7 == 0 goto label5;

        $i9 = i3 + i0;

        $r3 = interfaceinvoke r1.<android.text.Editable: java.lang.CharSequence subSequence(int,int)>(i3, $i9);

        return $r3;

     label5:
        $i8 = i3 + i0;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>(r1, i3, $i8);

        return $r2;
    }

    public boolean performEditorAction(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;
        long l1, $l2;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, 66, 0, 0, -1, 0, 22);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, l1, 1, 66, 0, 0, -1, 0, 22);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        return 1;
    }

    public boolean performContextMenuAction(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public boolean requestCursorUpdates(int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        return 0;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        int i0;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)>(r1, i0, 1);

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void notifyUserAction()>();

        return 1;
    }

    public boolean setComposingRegion(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, i3, i4, i5, $i6, i7;
        android.text.Editable r1;
        java.lang.Object[] $r2, $r4, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label8;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r1);

        i2 = i0;

        i3 = i1;

        if i2 <= i3 goto label1;

        i4 = i2;

        i2 = i3;

        i3 = i4;

     label1:
        i7 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i2 >= 0 goto label2;

        i2 = 0;

     label2:
        if i3 >= 0 goto label3;

        i3 = 0;

     label3:
        if i2 <= i7 goto label4;

        i2 = i7;

     label4:
        if i3 <= i7 goto label5;

        i3 = i7;

     label5:
        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void ensureDefaultComposingSpans()>();

        $r2 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r2 == null goto label7;

        i5 = 0;

     label6:
        $r4 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $i6 = lengthof $r4;

        if i5 >= $i6 goto label7;

        $r6 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $r5 = $r6[i5];

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r5, i2, i3, 289);

        i5 = i5 + 1;

        goto label6;

     label7:
        $r3 = <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING>;

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r3, i2, i3, 289);

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void sendCurrentText()>();

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

     label8:
        return 1;
    }

    public boolean setSelection(int, int)
    {
        android.view.inputmethod.BaseInputConnection r0;
        int i0, i1, i2, $i3;
        android.text.Editable r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 != null goto label1;

        return 0;

     label1:
        i2 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i0 > i2 goto label2;

        if i1 > i2 goto label2;

        if i0 < 0 goto label2;

        if i1 >= 0 goto label3;

     label2:
        return 1;

     label3:
        if i0 != i1 goto label4;

        $i3 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 2048);

        if $i3 == 0 goto label4;

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r1, i0);

        goto label5;

     label4:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r1, i0, i1);

     label5:
        return 1;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.view.KeyEvent r1;
        android.view.inputmethod.InputMethodManager$H r2, $r6;
        android.view.ViewRootImpl r3, $r15;
        java.lang.Throwable r4, $r14;
        android.view.inputmethod.InputMethodManager $r5, $r8, $r9, $r11;
        android.view.View $r7, $r10, $r12, $r13;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r6 = $r5.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        if $r7 == null goto label2;

        $r13 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        $r15 = virtualinvoke $r13.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        goto label3;

     label2:
        $r15 = null;

     label3:
        r3 = $r15;

        if r3 != null goto label4;

        $r9 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r10 = $r9.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r10 == null goto label4;

        $r11 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r12 = $r11.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        r3 = virtualinvoke $r12.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

     label4:
        if r3 == null goto label5;

        virtualinvoke r3.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>(r1);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        $r8 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        virtualinvoke $r8.<android.view.inputmethod.InputMethodManager: void notifyUserAction()>();

        return 0;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean reportFullscreenMode(boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        boolean z0;
        android.view.inputmethod.InputMethodManager $r1;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        virtualinvoke $r1.<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)>(z0);

        return 1;
    }

    private void sendCurrentText()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.text.Editable r1;
        int i0, i1, $i3;
        char[] r2;
        android.view.KeyEvent[] r3;
        boolean $z0;
        android.view.KeyEvent $r4, $r8, r10;
        long $l2;
        java.lang.String $r5;
        android.view.KeyCharacterMap $r6, $r7, $r9;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $z0 = r0.<android.view.inputmethod.BaseInputConnection: boolean mDummyMode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r1 == null goto label7;

        i0 = interfaceinvoke r1.<android.text.Editable: int length()>();

        if i0 != 0 goto label2;

        return;

     label2:
        if i0 != 1 goto label6;

        $r6 = r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        if $r6 != null goto label3;

        $r9 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap> = $r9;

     label3:
        r2 = newarray (char)[1];

        interfaceinvoke r1.<android.text.Editable: void getChars(int,int,char[],int)>(0, 1, r2, 0);

        $r7 = r0.<android.view.inputmethod.BaseInputConnection: android.view.KeyCharacterMap mKeyCharacterMap>;

        r3 = virtualinvoke $r7.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>(r2);

        if r3 == null goto label6;

        i1 = 0;

     label4:
        $i3 = lengthof r3;

        if i1 >= $i3 goto label5;

        $r8 = r3[i1];

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r8);

        i1 = i1 + 1;

        goto label4;

     label5:
        interfaceinvoke r1.<android.text.Editable: void clear()>();

        return;

     label6:
        $r4 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>($l2, $r5, -1, 0);

        r10 = $r4;

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>(r10);

        interfaceinvoke r1.<android.text.Editable: void clear()>();

     label7:
        return;
    }

    private void ensureDefaultComposingSpans()
    {
        android.view.inputmethod.BaseInputConnection r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        java.lang.CharSequence r3;
        java.lang.Object[] $r4, $r12;
        android.view.View $r5, $r7, $r13, $r14;
        android.view.inputmethod.InputMethodManager $r6, $r11;
        android.content.res.Resources$Theme $r8;
        int[] $r9;
        boolean $z0;
        android.text.Spanned $r10;
        int $i0;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        $r4 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r4 != null goto label4;

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        if $r5 == null goto label1;

        $r14 = r0.<android.view.inputmethod.BaseInputConnection: android.view.View mTargetView>;

        r1 = virtualinvoke $r14.<android.view.View: android.content.Context getContext()>();

        goto label3;

     label1:
        $r6 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r7 = $r6.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == null goto label2;

        $r11 = r0.<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.InputMethodManager mIMM>;

        $r13 = $r11.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        r1 = virtualinvoke $r13.<android.view.View: android.content.Context getContext()>();

        goto label3;

     label2:
        r1 = null;

     label3:
        if r1 == null goto label4;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r9 = newarray (int)[1];

        $r9[0] = 16843312;

        r2 = virtualinvoke $r8.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r9);

        r3 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        if r3 == null goto label4;

        $z0 = r3 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $r10 = (android.text.Spanned) r3;

        $i0 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        $r12 = interfaceinvoke $r10.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "java/lang/Object");

        r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans> = $r12;

     label4:
        return;
    }

    private void replaceText(java.lang.CharSequence, int, boolean)
    {
        android.view.inputmethod.BaseInputConnection r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean z0, $z1;
        android.text.Editable r2;
        android.text.SpannableStringBuilder $r3;
        java.lang.Object[] $r4, $r5, $r6;
        java.lang.Object $r7;
        android.text.Spannable r8;

        r0 := @this: android.view.inputmethod.BaseInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>();

        if r2 != null goto label01;

        return;

     label01:
        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>();

        i1 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>(r2);

        i2 = staticinvoke <android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>(r2);

        if i2 >= i1 goto label02;

        i3 = i1;

        i1 = i2;

        i2 = i3;

     label02:
        if i1 == -1 goto label03;

        if i2 == -1 goto label03;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>(r2);

        goto label06;

     label03:
        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if i1 >= 0 goto label04;

        i1 = 0;

     label04:
        if i2 >= 0 goto label05;

        i2 = 0;

     label05:
        if i2 >= i1 goto label06;

        i9 = i1;

        i1 = i2;

        i2 = i9;

     label06:
        if z0 == 0 goto label11;

        $z1 = r1 instanceof android.text.Spannable;

        if $z1 != 0 goto label09;

        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r1);

        r8 = $r3;

        r1 = r8;

        specialinvoke r0.<android.view.inputmethod.BaseInputConnection: void ensureDefaultComposingSpans()>();

        $r5 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        if $r5 == null goto label10;

        i4 = 0;

     label07:
        $r4 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $i7 = lengthof $r4;

        if i4 >= $i7 goto label08;

        $r6 = r0.<android.view.inputmethod.BaseInputConnection: java.lang.Object[] mDefaultComposingSpans>;

        $r7 = $r6[i4];

        $i8 = interfaceinvoke r8.<android.text.Spannable: int length()>();

        interfaceinvoke r8.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, 0, $i8, 289);

        i4 = i4 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        r8 = (android.text.Spannable) r1;

     label10:
        staticinvoke <android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>(r8);

     label11:
        if i0 <= 0 goto label12;

        $i6 = i2 - 1;

        i10 = i0 + $i6;

        goto label13;

     label12:
        i10 = i0 + i1;

     label13:
        if i10 >= 0 goto label14;

        i10 = 0;

     label14:
        $i5 = interfaceinvoke r2.<android.text.Editable: int length()>();

        if i10 <= $i5 goto label15;

        i10 = interfaceinvoke r2.<android.text.Editable: int length()>();

     label15:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, i10);

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i1, i2, r1);

        virtualinvoke r0.<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>();

        return;
    }

    static void <clinit>()
    {
        android.view.inputmethod.ComposingText $r0;

        <android.view.inputmethod.BaseInputConnection: java.lang.String TAG> = "BaseInputConnection";

        <android.view.inputmethod.BaseInputConnection: boolean DEBUG> = 0;

        $r0 = new android.view.inputmethod.ComposingText;

        specialinvoke $r0.<android.view.inputmethod.ComposingText: void <init>()>();

        <android.view.inputmethod.BaseInputConnection: java.lang.Object COMPOSING> = $r0;

        return;
    }
}
