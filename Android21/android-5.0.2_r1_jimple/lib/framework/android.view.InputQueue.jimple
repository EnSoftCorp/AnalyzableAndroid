public final class android.view.InputQueue extends java.lang.Object
{
    private final android.util.LongSparseArray mActiveEventArray;
    private final android.util.Pools$Pool mActiveInputEventPool;
    private final dalvik.system.CloseGuard mCloseGuard;
    private long mPtr;

    private static native long nativeInit(java.lang.ref.WeakReference, android.os.MessageQueue);

    private static native long nativeSendKeyEvent(long, android.view.KeyEvent, boolean);

    private static native long nativeSendMotionEvent(long, android.view.MotionEvent);

    private static native void nativeDispose(long);

    public void <init>()
    {
        android.view.InputQueue r0;
        android.util.LongSparseArray $r1;
        android.util.Pools$SimplePool $r2;
        dalvik.system.CloseGuard $r3, $r6;
        java.lang.ref.WeakReference $r4;
        android.os.MessageQueue $r5;
        long $l0;

        r0 := @this: android.view.InputQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.LongSparseArray;

        specialinvoke $r1.<android.util.LongSparseArray: void <init>(int)>(20);

        r0.<android.view.InputQueue: android.util.LongSparseArray mActiveEventArray> = $r1;

        $r2 = new android.util.Pools$SimplePool;

        specialinvoke $r2.<android.util.Pools$SimplePool: void <init>(int)>(20);

        r0.<android.view.InputQueue: android.util.Pools$Pool mActiveInputEventPool> = $r2;

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.view.InputQueue: dalvik.system.CloseGuard mCloseGuard> = $r3;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        $r5 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $l0 = staticinvoke <android.view.InputQueue: long nativeInit(java.lang.ref.WeakReference,android.os.MessageQueue)>($r4, $r5);

        r0.<android.view.InputQueue: long mPtr> = $l0;

        $r6 = r0.<android.view.InputQueue: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r6.<dalvik.system.CloseGuard: void open(java.lang.String)>("dispose");

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.InputQueue r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.view.InputQueue;

     label1:
        virtualinvoke r0.<android.view.InputQueue: void dispose(boolean)>(1);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void dispose()
    {
        android.view.InputQueue r0;

        r0 := @this: android.view.InputQueue;

        virtualinvoke r0.<android.view.InputQueue: void dispose(boolean)>(0);

        return;
    }

    public void dispose(boolean)
    {
        android.view.InputQueue r0;
        boolean z0;
        dalvik.system.CloseGuard $r1, $r2, $r3;
        long $l0, $l2;
        byte $b1;

        r0 := @this: android.view.InputQueue;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.InputQueue: dalvik.system.CloseGuard mCloseGuard>;

        if $r1 == null goto label2;

        if z0 == 0 goto label1;

        $r3 = r0.<android.view.InputQueue: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label1:
        $r2 = r0.<android.view.InputQueue: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

     label2:
        $l0 = r0.<android.view.InputQueue: long mPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label3;

        $l2 = r0.<android.view.InputQueue: long mPtr>;

        staticinvoke <android.view.InputQueue: void nativeDispose(long)>($l2);

        r0.<android.view.InputQueue: long mPtr> = 0L;

     label3:
        return;
    }

    public long getNativePtr()
    {
        android.view.InputQueue r0;
        long $l0;

        r0 := @this: android.view.InputQueue;

        $l0 = r0.<android.view.InputQueue: long mPtr>;

        return $l0;
    }

    public void sendInputEvent(android.view.InputEvent, java.lang.Object, boolean, android.view.InputQueue$FinishedInputEventCallback)
    {
        android.view.InputQueue r0;
        android.view.InputEvent r1;
        java.lang.Object r2;
        boolean z0, $z1;
        android.view.InputQueue$FinishedInputEventCallback r3;
        android.view.InputQueue$ActiveInputEvent r4;
        long l0, $l1, $l2;
        android.view.MotionEvent $r5;
        android.util.LongSparseArray $r6;
        android.view.KeyEvent $r7;

        r0 := @this: android.view.InputQueue;

        r1 := @parameter0: android.view.InputEvent;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.view.InputQueue$FinishedInputEventCallback;

        r4 = specialinvoke r0.<android.view.InputQueue: android.view.InputQueue$ActiveInputEvent obtainActiveInputEvent(java.lang.Object,android.view.InputQueue$FinishedInputEventCallback)>(r2, r3);

        $z1 = r1 instanceof android.view.KeyEvent;

        if $z1 == 0 goto label1;

        $l2 = r0.<android.view.InputQueue: long mPtr>;

        $r7 = (android.view.KeyEvent) r1;

        l0 = staticinvoke <android.view.InputQueue: long nativeSendKeyEvent(long,android.view.KeyEvent,boolean)>($l2, $r7, z0);

        goto label2;

     label1:
        $l1 = r0.<android.view.InputQueue: long mPtr>;

        $r5 = (android.view.MotionEvent) r1;

        l0 = staticinvoke <android.view.InputQueue: long nativeSendMotionEvent(long,android.view.MotionEvent)>($l1, $r5);

     label2:
        $r6 = r0.<android.view.InputQueue: android.util.LongSparseArray mActiveEventArray>;

        virtualinvoke $r6.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l0, r4);

        return;
    }

    private void finishInputEvent(long, boolean)
    {
        android.view.InputQueue r0;
        long l0;
        boolean z0;
        int i1;
        android.view.InputQueue$ActiveInputEvent r1;
        android.util.LongSparseArray $r2, $r3, $r5;
        java.lang.Object $r4, $r6;
        android.view.InputQueue$FinishedInputEventCallback $r7;

        r0 := @this: android.view.InputQueue;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.view.InputQueue: android.util.LongSparseArray mActiveEventArray>;

        i1 = virtualinvoke $r2.<android.util.LongSparseArray: int indexOfKey(long)>(l0);

        if i1 < 0 goto label1;

        $r3 = r0.<android.view.InputQueue: android.util.LongSparseArray mActiveEventArray>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.view.InputQueue$ActiveInputEvent) $r4;

        $r5 = r0.<android.view.InputQueue: android.util.LongSparseArray mActiveEventArray>;

        virtualinvoke $r5.<android.util.LongSparseArray: void removeAt(int)>(i1);

        $r7 = r1.<android.view.InputQueue$ActiveInputEvent: android.view.InputQueue$FinishedInputEventCallback mCallback>;

        $r6 = r1.<android.view.InputQueue$ActiveInputEvent: java.lang.Object mToken>;

        interfaceinvoke $r7.<android.view.InputQueue$FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>($r6, z0);

        specialinvoke r0.<android.view.InputQueue: void recycleActiveInputEvent(android.view.InputQueue$ActiveInputEvent)>(r1);

     label1:
        return;
    }

    private android.view.InputQueue$ActiveInputEvent obtainActiveInputEvent(java.lang.Object, android.view.InputQueue$FinishedInputEventCallback)
    {
        android.view.InputQueue r0;
        java.lang.Object r1, $r5;
        android.view.InputQueue$FinishedInputEventCallback r2;
        android.view.InputQueue$ActiveInputEvent r3, $r6;
        android.util.Pools$Pool $r4;

        r0 := @this: android.view.InputQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.view.InputQueue$FinishedInputEventCallback;

        $r4 = r0.<android.view.InputQueue: android.util.Pools$Pool mActiveInputEventPool>;

        $r5 = interfaceinvoke $r4.<android.util.Pools$Pool: java.lang.Object acquire()>();

        r3 = (android.view.InputQueue$ActiveInputEvent) $r5;

        if r3 != null goto label1;

        $r6 = new android.view.InputQueue$ActiveInputEvent;

        specialinvoke $r6.<android.view.InputQueue$ActiveInputEvent: void <init>(android.view.InputQueue,android.view.InputQueue$1)>(r0, null);

        r3 = $r6;

     label1:
        r3.<android.view.InputQueue$ActiveInputEvent: java.lang.Object mToken> = r1;

        r3.<android.view.InputQueue$ActiveInputEvent: android.view.InputQueue$FinishedInputEventCallback mCallback> = r2;

        return r3;
    }

    private void recycleActiveInputEvent(android.view.InputQueue$ActiveInputEvent)
    {
        android.view.InputQueue r0;
        android.view.InputQueue$ActiveInputEvent r1;
        android.util.Pools$Pool $r2;

        r0 := @this: android.view.InputQueue;

        r1 := @parameter0: android.view.InputQueue$ActiveInputEvent;

        virtualinvoke r1.<android.view.InputQueue$ActiveInputEvent: void recycle()>();

        $r2 = r0.<android.view.InputQueue: android.util.Pools$Pool mActiveInputEventPool>;

        interfaceinvoke $r2.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r1);

        return;
    }
}
