public final class android.view.PointerIcon extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    public static final int STYLE_CUSTOM;
    public static final int STYLE_NULL;
    public static final int STYLE_ARROW;
    public static final int STYLE_SPOT_HOVER;
    public static final int STYLE_SPOT_TOUCH;
    public static final int STYLE_SPOT_ANCHOR;
    private static final int STYLE_OEM_FIRST;
    private static final int STYLE_DEFAULT;
    private static final android.view.PointerIcon gNullIcon;
    private final int mStyle;
    private int mSystemIconResourceId;
    private android.graphics.Bitmap mBitmap;
    private float mHotSpotX;
    private float mHotSpotY;
    public static final android.os.Parcelable$Creator CREATOR;

    private void <init>(int)
    {
        android.view.PointerIcon r0;
        int i0;

        r0 := @this: android.view.PointerIcon;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.PointerIcon: int mStyle> = i0;

        return;
    }

    public static android.view.PointerIcon getNullIcon()
    {
        android.view.PointerIcon $r0;

        $r0 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        return $r0;
    }

    public static android.view.PointerIcon getDefaultIcon(android.content.Context)
    {
        android.content.Context r0;
        android.view.PointerIcon $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>(r0, 1000);

        return $r1;
    }

    public static android.view.PointerIcon getSystemIcon(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, i2, $i3;
        android.content.res.TypedArray r1;
        android.view.PointerIcon r2, $r4, $r10, $r11;
        int[] $r3;
        android.content.res.Resources $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;
        java.lang.IllegalArgumentException $r12;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r12;

     label1:
        if i0 != 0 goto label2;

        $r11 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        return $r11;

     label2:
        i1 = staticinvoke <android.view.PointerIcon: int getSystemIconStyleIndex(int)>(i0);

        if i1 != 0 goto label3;

        i1 = staticinvoke <android.view.PointerIcon: int getSystemIconStyleIndex(int)>(1000);

     label3:
        $r3 = <com.android.internal.R$styleable: int[] Pointer>;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, 16844043, 0);

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, -1);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        if i2 != -1 goto label6;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing theme resources for pointer icon style ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PointerIcon", $r8);

        if i0 != 1000 goto label4;

        $r10 = <android.view.PointerIcon: android.view.PointerIcon gNullIcon>;

        goto label5;

     label4:
        $r10 = staticinvoke <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>(r0, 1000);

     label5:
        return $r10;

     label6:
        $r4 = new android.view.PointerIcon;

        specialinvoke $r4.<android.view.PointerIcon: void <init>(int)>(i0);

        r2 = $r4;

        $i3 = i2 & -16777216;

        if $i3 != 16777216 goto label7;

        r2.<android.view.PointerIcon: int mSystemIconResourceId> = i2;

        goto label8;

     label7:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke r2.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(r0, $r5, i2);

     label8:
        return r2;
    }

    public static android.view.PointerIcon createCustomIcon(android.graphics.Bitmap, float, float)
    {
        android.graphics.Bitmap r0;
        float f0, f1;
        android.view.PointerIcon r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bitmap must not be null");

        throw $r3;

     label1:
        staticinvoke <android.view.PointerIcon: void validateHotSpot(android.graphics.Bitmap,float,float)>(r0, f0, f1);

        $r2 = new android.view.PointerIcon;

        specialinvoke $r2.<android.view.PointerIcon: void <init>(int)>(-1);

        r1 = $r2;

        r1.<android.view.PointerIcon: android.graphics.Bitmap mBitmap> = r0;

        r1.<android.view.PointerIcon: float mHotSpotX> = f0;

        r1.<android.view.PointerIcon: float mHotSpotY> = f1;

        return r1;
    }

    public static android.view.PointerIcon loadCustomIcon(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        android.view.PointerIcon r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resources must not be null");

        throw $r3;

     label1:
        $r2 = new android.view.PointerIcon;

        specialinvoke $r2.<android.view.PointerIcon: void <init>(int)>(-1);

        r1 = $r2;

        specialinvoke r1.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(null, r0, i0);

        return r1;
    }

    public android.view.PointerIcon load(android.content.Context)
    {
        android.view.PointerIcon r0, r2, $r4;
        android.content.Context r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap $r3;
        android.content.res.Resources $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: android.content.Context;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");

        throw $r6;

     label1:
        $i0 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i0 == 0 goto label2;

        $r3 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        if $r3 == null goto label3;

     label2:
        return r0;

     label3:
        $r4 = new android.view.PointerIcon;

        $i1 = r0.<android.view.PointerIcon: int mStyle>;

        specialinvoke $r4.<android.view.PointerIcon: void <init>(int)>($i1);

        r2 = $r4;

        $i2 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        r2.<android.view.PointerIcon: int mSystemIconResourceId> = $i2;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        specialinvoke r2.<android.view.PointerIcon: void loadResource(android.content.Context,android.content.res.Resources,int)>(r1, $r5, $i3);

        return r2;
    }

    public boolean isNullIcon()
    {
        android.view.PointerIcon r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.PointerIcon;

        $i0 = r0.<android.view.PointerIcon: int mStyle>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLoaded()
    {
        android.view.PointerIcon r0;
        android.graphics.Bitmap $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.PointerIcon;

        $r1 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        if $r1 != null goto label1;

        $i0 = r0.<android.view.PointerIcon: int mStyle>;

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int getStyle()
    {
        android.view.PointerIcon r0;
        int $i0;

        r0 := @this: android.view.PointerIcon;

        $i0 = r0.<android.view.PointerIcon: int mStyle>;

        return $i0;
    }

    public android.graphics.Bitmap getBitmap()
    {
        android.view.PointerIcon r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.view.PointerIcon;

        specialinvoke r0.<android.view.PointerIcon: void throwIfIconIsNotLoaded()>();

        $r1 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        return $r1;
    }

    public float getHotSpotX()
    {
        android.view.PointerIcon r0;
        float $f0;

        r0 := @this: android.view.PointerIcon;

        specialinvoke r0.<android.view.PointerIcon: void throwIfIconIsNotLoaded()>();

        $f0 = r0.<android.view.PointerIcon: float mHotSpotX>;

        return $f0;
    }

    public float getHotSpotY()
    {
        android.view.PointerIcon r0;
        float $f0;

        r0 := @this: android.view.PointerIcon;

        specialinvoke r0.<android.view.PointerIcon: void throwIfIconIsNotLoaded()>();

        $f0 = r0.<android.view.PointerIcon: float mHotSpotY>;

        return $f0;
    }

    private void throwIfIconIsNotLoaded()
    {
        android.view.PointerIcon r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.PointerIcon;

        $z0 = virtualinvoke r0.<android.view.PointerIcon: boolean isLoaded()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The icon is not loaded.");

        throw $r1;

     label1:
        return;
    }

    public int describeContents()
    {
        android.view.PointerIcon r0;

        r0 := @this: android.view.PointerIcon;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.PointerIcon r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Bitmap $r2;
        float $f0, $f1;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.PointerIcon: int mStyle>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.PointerIcon: int mStyle>;

        if $i2 == 0 goto label1;

        $i3 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i4 != 0 goto label1;

        $r2 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r2.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $f0 = r0.<android.view.PointerIcon: float mHotSpotX>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.view.PointerIcon: float mHotSpotY>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.PointerIcon r0, r2;
        java.lang.Object r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Bitmap $r3, $r4;
        float $f0, $f1, $f2, $f3;
        byte $b5, $b6;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $z0 = r1 instanceof android.view.PointerIcon;

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.view.PointerIcon) r1;

        $i1 = r0.<android.view.PointerIcon: int mStyle>;

        $i0 = r2.<android.view.PointerIcon: int mStyle>;

        if $i1 != $i0 goto label4;

        $i3 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        $i2 = r2.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i3 == $i2 goto label5;

     label4:
        return 0;

     label5:
        $i4 = r0.<android.view.PointerIcon: int mSystemIconResourceId>;

        if $i4 != 0 goto label7;

        $r4 = r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        $r3 = r2.<android.view.PointerIcon: android.graphics.Bitmap mBitmap>;

        if $r4 != $r3 goto label6;

        $f1 = r0.<android.view.PointerIcon: float mHotSpotX>;

        $f0 = r2.<android.view.PointerIcon: float mHotSpotX>;

        $b5 = $f1 cmpl $f0;

        if $b5 != 0 goto label6;

        $f3 = r0.<android.view.PointerIcon: float mHotSpotY>;

        $f2 = r2.<android.view.PointerIcon: float mHotSpotY>;

        $b6 = $f3 cmpl $f2;

        if $b6 == 0 goto label7;

     label6:
        return 0;

     label7:
        return 1;
    }

    private void loadResource(android.content.Context, android.content.res.Resources, int)
    {
        android.view.PointerIcon r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        int i0, i1;
        android.content.res.XmlResourceParser r3;
        float f0, f1;
        android.content.res.TypedArray r4;
        java.lang.Throwable r5, $r12;
        int[] $r6;
        boolean $z0;
        android.graphics.Bitmap $r7;
        android.graphics.drawable.BitmapDrawable $r8;
        java.lang.IllegalArgumentException $r9, $r11, $r13;
        java.lang.Exception $r10, r14;
        android.graphics.drawable.Drawable r15;

        r0 := @this: android.view.PointerIcon;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        r3 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r3, "pointer-icon");

        $r6 = <com.android.internal.R$styleable: int[] PointerIcon>;

        r4 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r6);

        i1 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        f0 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(1, 0.0F);

        f1 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(2, 0.0F);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

     label02:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

        goto label06;

     label03:
        $r10 := @caughtexception;

        r14 = $r10;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Exception parsing pointer icon resource.", r14);

        throw $r13;

     label04:
        $r12 := @caughtexception;

        r5 = $r12;

     label05:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

        throw r5;

     label06:
        if i1 != 0 goto label07;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("<pointer-icon> is missing bitmap attribute.");

        throw $r11;

     label07:
        if r1 != null goto label08;

        r15 = virtualinvoke r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i1);

        goto label09;

     label08:
        r15 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i1);

     label09:
        $z0 = r15 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 != 0 goto label10;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("<pointer-icon> bitmap attribute must refer to a bitmap drawable.");

        throw $r9;

     label10:
        $r8 = (android.graphics.drawable.BitmapDrawable) r15;

        $r7 = virtualinvoke $r8.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        r0.<android.view.PointerIcon: android.graphics.Bitmap mBitmap> = $r7;

        r0.<android.view.PointerIcon: float mHotSpotX> = f0;

        r0.<android.view.PointerIcon: float mHotSpotY> = f1;

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label05 with label04;
    }

    private static void validateHotSpot(android.graphics.Bitmap, float, float)
    {
        android.graphics.Bitmap r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b2, $b3, $b5;
        java.lang.IllegalArgumentException $r1, $r2;
        int $i1, $i4;

        r0 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f2 = (float) $i1;

        $b2 = f0 cmpl $f2;

        if $b2 < 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x hotspot lies outside of the bitmap area");

        throw $r1;

     label2:
        $b3 = f1 cmpg 0.0F;

        if $b3 < 0 goto label3;

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f3 = (float) $i4;

        $b5 = f1 cmpl $f3;

        if $b5 < 0 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("y hotspot lies outside of the bitmap area");

        throw $r2;

     label4:
        return;
    }

    private static int getSystemIconStyleIndex(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1000: goto label1;
            case 2000: goto label2;
            case 2001: goto label3;
            case 2002: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 0;
    }

    void <init>(int, android.view.PointerIcon$1)
    {
        android.view.PointerIcon r0;
        int i0;
        android.view.PointerIcon$1 r1;

        r0 := @this: android.view.PointerIcon;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.PointerIcon$1;

        specialinvoke r0.<android.view.PointerIcon: void <init>(int)>(i0);

        return;
    }

    static int access$102(android.view.PointerIcon, int)
    {
        android.view.PointerIcon r0;
        int i0;

        r0 := @parameter0: android.view.PointerIcon;

        i0 := @parameter1: int;

        r0.<android.view.PointerIcon: int mSystemIconResourceId> = i0;

        return i0;
    }

    static void <clinit>()
    {
        android.view.PointerIcon $r0;
        android.view.PointerIcon$1 $r1;

        <android.view.PointerIcon: int STYLE_DEFAULT> = 1000;

        <android.view.PointerIcon: int STYLE_OEM_FIRST> = 10000;

        <android.view.PointerIcon: int STYLE_SPOT_ANCHOR> = 2002;

        <android.view.PointerIcon: int STYLE_SPOT_TOUCH> = 2001;

        <android.view.PointerIcon: int STYLE_SPOT_HOVER> = 2000;

        <android.view.PointerIcon: int STYLE_ARROW> = 1000;

        <android.view.PointerIcon: int STYLE_NULL> = 0;

        <android.view.PointerIcon: int STYLE_CUSTOM> = -1;

        <android.view.PointerIcon: java.lang.String TAG> = "PointerIcon";

        $r0 = new android.view.PointerIcon;

        specialinvoke $r0.<android.view.PointerIcon: void <init>(int)>(0);

        <android.view.PointerIcon: android.view.PointerIcon gNullIcon> = $r0;

        $r1 = new android.view.PointerIcon$1;

        specialinvoke $r1.<android.view.PointerIcon$1: void <init>()>();

        <android.view.PointerIcon: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
}
