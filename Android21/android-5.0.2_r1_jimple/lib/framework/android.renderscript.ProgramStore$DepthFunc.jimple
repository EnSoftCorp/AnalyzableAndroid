public final enum class android.renderscript.ProgramStore$DepthFunc extends java.lang.Enum
{
    public static final enum android.renderscript.ProgramStore$DepthFunc ALWAYS;
    public static final enum android.renderscript.ProgramStore$DepthFunc LESS;
    public static final enum android.renderscript.ProgramStore$DepthFunc LESS_OR_EQUAL;
    public static final enum android.renderscript.ProgramStore$DepthFunc GREATER;
    public static final enum android.renderscript.ProgramStore$DepthFunc GREATER_OR_EQUAL;
    public static final enum android.renderscript.ProgramStore$DepthFunc EQUAL;
    public static final enum android.renderscript.ProgramStore$DepthFunc NOT_EQUAL;
    int mID;
    private static final android.renderscript.ProgramStore$DepthFunc[] $VALUES;

    public static android.renderscript.ProgramStore$DepthFunc[] values()
    {
        android.renderscript.ProgramStore$DepthFunc[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.renderscript.ProgramStore$DepthFunc[]) $r1;

        return $r2;
    }

    public static android.renderscript.ProgramStore$DepthFunc valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.renderscript.ProgramStore$DepthFunc $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "android/renderscript/ProgramStore$DepthFunc", r0);

        $r2 = (android.renderscript.ProgramStore$DepthFunc) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        android.renderscript.ProgramStore$DepthFunc r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: android.renderscript.ProgramStore$DepthFunc;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<android.renderscript.ProgramStore$DepthFunc: int mID> = i1;

        return;
    }

    static void <clinit>()
    {
        android.renderscript.ProgramStore$DepthFunc $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.renderscript.ProgramStore$DepthFunc[] $r7;

        $r0 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r0.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("ALWAYS", 0, 0);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc ALWAYS> = $r0;

        $r1 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r1.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("LESS", 1, 1);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc LESS> = $r1;

        $r2 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r2.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("LESS_OR_EQUAL", 2, 2);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc LESS_OR_EQUAL> = $r2;

        $r3 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r3.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("GREATER", 3, 3);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc GREATER> = $r3;

        $r4 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r4.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("GREATER_OR_EQUAL", 4, 4);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc GREATER_OR_EQUAL> = $r4;

        $r5 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r5.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("EQUAL", 5, 5);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc EQUAL> = $r5;

        $r6 = new android.renderscript.ProgramStore$DepthFunc;

        specialinvoke $r6.<android.renderscript.ProgramStore$DepthFunc: void <init>(java.lang.String,int,int)>("NOT_EQUAL", 6, 6);

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc NOT_EQUAL> = $r6;

        $r7 = newarray (android.renderscript.ProgramStore$DepthFunc)[7];

        $r8 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc ALWAYS>;

        $r7[0] = $r8;

        $r9 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc LESS>;

        $r7[1] = $r9;

        $r10 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc LESS_OR_EQUAL>;

        $r7[2] = $r10;

        $r11 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc GREATER>;

        $r7[3] = $r11;

        $r12 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc GREATER_OR_EQUAL>;

        $r7[4] = $r12;

        $r13 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc EQUAL>;

        $r7[5] = $r13;

        $r14 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc NOT_EQUAL>;

        $r7[6] = $r14;

        <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc[] $VALUES> = $r7;

        return;
    }
}
