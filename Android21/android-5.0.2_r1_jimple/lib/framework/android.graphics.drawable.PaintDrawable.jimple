public class android.graphics.drawable.PaintDrawable extends android.graphics.drawable.ShapeDrawable
{

    public void <init>()
    {
        android.graphics.drawable.PaintDrawable r0;

        r0 := @this: android.graphics.drawable.PaintDrawable;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        android.graphics.drawable.PaintDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: android.graphics.drawable.PaintDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.ShapeDrawable: void <init>()>();

        $r1 = virtualinvoke r0.<android.graphics.drawable.PaintDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>(i0);

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.PaintDrawable r0;
        float f0;
        float[] r1;
        int i0;
        byte $b1;

        r0 := @this: android.graphics.drawable.PaintDrawable;

        f0 := @parameter0: float;

        r1 = null;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        r1 = newarray (float)[8];

        i0 = 0;

     label1:
        if i0 >= 8 goto label2;

        r1[i0] = f0;

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>(r1);

        return;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.PaintDrawable r0;
        float[] r1;
        android.graphics.drawable.shapes.RoundRectShape $r2;
        android.graphics.drawable.shapes.Shape $r3;

        r0 := @this: android.graphics.drawable.PaintDrawable;

        r1 := @parameter0: float[];

        if r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.graphics.drawable.PaintDrawable: android.graphics.drawable.shapes.Shape getShape()>();

        if $r3 == null goto label2;

        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void setShape(android.graphics.drawable.shapes.Shape)>(null);

        goto label2;

     label1:
        $r2 = new android.graphics.drawable.shapes.RoundRectShape;

        specialinvoke $r2.<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>(r1, null, null);

        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void setShape(android.graphics.drawable.shapes.Shape)>($r2);

     label2:
        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void invalidateSelf()>();

        return;
    }

    protected boolean inflateTag(java.lang.String, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet)
    {
        android.graphics.drawable.PaintDrawable r0;
        java.lang.String r1;
        android.content.res.Resources r2;
        org.xmlpull.v1.XmlPullParser r3;
        android.util.AttributeSet r4;
        android.content.res.TypedArray r5;
        int i0, i1, i2, i3, i4;
        boolean $z0, $z1;
        int[] $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] $r7;

        r0 := @this: android.graphics.drawable.PaintDrawable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r4 := @parameter3: android.util.AttributeSet;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z0 == 0 goto label3;

        $r6 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r5 = virtualinvoke r2.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r4, $r6);

        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $f0 = (float) i0;

        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>($f0);

        i1 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, i0);

        i2 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, i0);

        i3 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, i0);

        i4 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, i0);

        if i1 != i0 goto label1;

        if i2 != i0 goto label1;

        if i3 != i0 goto label1;

        if i4 == i0 goto label2;

     label1:
        $r7 = newarray (float)[8];

        $f2 = (float) i1;

        $r7[0] = $f2;

        $f1 = (float) i1;

        $r7[1] = $f1;

        $f4 = (float) i2;

        $r7[2] = $f4;

        $f3 = (float) i2;

        $r7[3] = $f3;

        $f6 = (float) i3;

        $r7[4] = $f6;

        $f5 = (float) i3;

        $r7[5] = $f5;

        $f8 = (float) i4;

        $r7[6] = $f8;

        $f7 = (float) i4;

        $r7[7] = $f7;

        virtualinvoke r0.<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>($r7);

     label2:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return 1;

     label3:
        $z1 = specialinvoke r0.<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $z1;
    }
}
