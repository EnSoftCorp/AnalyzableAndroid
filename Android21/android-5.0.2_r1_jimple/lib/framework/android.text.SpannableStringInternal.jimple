abstract class android.text.SpannableStringInternal extends java.lang.Object
{
    private java.lang.String mText;
    private java.lang.Object[] mSpans;
    private int[] mSpanData;
    private int mSpanCount;
    static final java.lang.Object[] EMPTY;
    private static final int START;
    private static final int END;
    private static final int FLAGS;
    private static final int COLUMNS;

    void <init>(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.text.Spanned r2;
        java.lang.Object[] r3, $r6;
        java.lang.String $r4, $r5, $r12;
        int[] $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10, $r11;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 != $i9 goto label1;

        $r12 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<android.text.SpannableStringInternal: java.lang.String mText> = $r12;

        goto label2;

     label1:
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        r0.<android.text.SpannableStringInternal: java.lang.String mText> = $r5;

     label2:
        $r6 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = $r6;

        $r7 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = $r7;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label6;

        r2 = (android.text.Spanned) r1;

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "java/lang/Object");

        i2 = 0;

     label3:
        $i6 = lengthof r3;

        if i2 >= $i6 goto label6;

        $r8 = r3[i2];

        i3 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r8);

        $r9 = r3[i2];

        i4 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r9);

        $r10 = r3[i2];

        i5 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r10);

        if i3 >= i0 goto label4;

        i3 = i0;

     label4:
        if i4 <= i1 goto label5;

        i4 = i1;

     label5:
        $r11 = r3[i2];

        $i8 = i3 - i0;

        $i7 = i4 - i0;

        virtualinvoke r0.<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)>($r11, $i8, $i7, i5);

        i2 = i2 + 1;

        goto label3;

     label6:
        return;
    }

    public final int length()
    {
        android.text.SpannableStringInternal r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: android.text.SpannableStringInternal;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public final char charAt(int)
    {
        android.text.SpannableStringInternal r0;
        int i0;
        java.lang.String $r1;
        char $c1;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public final java.lang.String toString()
    {
        android.text.SpannableStringInternal r0;
        java.lang.String $r1;

        r0 := @this: android.text.SpannableStringInternal;

        $r1 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        return $r1;
    }

    public final void getChars(int, int, char[], int)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r2 = r0.<android.text.SpannableStringInternal: java.lang.String mText>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(i0, i1, r1, i2);

        return;
    }

    void setSpan(java.lang.Object, int, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r11;
        int i0, i1, i2, i3, i4, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i47;
        char c5, c46;
        java.lang.Object[] r2, $r4, $r5, $r9, r28;
        int[] r3, $r6, $r7, $r8, $r10, r29;
        boolean $z0;
        java.lang.RuntimeException $r12, $r17;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r27;
        java.lang.String $r21, $r23;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = i0;

        i4 = i1;

        specialinvoke r0.<android.text.SpannableStringInternal: void checkRange(java.lang.String,int,int)>("setSpan", i0, i1);

        $i9 = i2 & 51;

        if $i9 != 51 goto label2;

        if i0 == 0 goto label1;

        $i45 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        if i0 == $i45 goto label1;

        $i44 = i0 - 1;

        c5 = virtualinvoke r0.<android.text.SpannableStringInternal: char charAt(int)>($i44);

        if c5 == 10 goto label1;

        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARAGRAPH span must start at paragraph boundary (");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" follows ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $r22 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label1:
        if i1 == 0 goto label2;

        $i43 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        if i1 == $i43 goto label2;

        $i42 = i1 - 1;

        c46 = virtualinvoke r0.<android.text.SpannableStringInternal: char charAt(int)>($i42);

        if c46 == 10 goto label2;

        $r12 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARAGRAPH span must end at paragraph boundary (");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" follows ");

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c46);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label2:
        i47 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i6 = 0;

     label3:
        if i6 >= i47 goto label5;

        $r11 = r2[i6];

        if $r11 != r1 goto label4;

        $i32 = i6 * 3;

        $i33 = $i32 + 0;

        i7 = r3[$i33];

        $i37 = i6 * 3;

        $i36 = $i37 + 1;

        i8 = r3[$i36];

        $i35 = i6 * 3;

        $i34 = $i35 + 0;

        r3[$i34] = i0;

        $i41 = i6 * 3;

        $i40 = $i41 + 1;

        r3[$i40] = i1;

        $i39 = i6 * 3;

        $i38 = $i39 + 2;

        r3[$i38] = i2;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanChanged(java.lang.Object,int,int,int,int)>(r1, i7, i8, i3, i4);

        return;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        $i10 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i11 = $i10 + 1;

        $r4 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i12 = lengthof $r4;

        if $i11 < $i12 goto label6;

        $i23 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i28 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>($i23);

        r28 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>($i28);

        $i26 = lengthof r28;

        $i27 = $i26 * 3;

        r29 = newarray (int)[$i27];

        $r9 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i31 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r28, 0, $i31);

        $r10 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i29 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i30 = $i29 * 3;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r10, 0, r29, 0, $i30);

        r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans> = r28;

        r0.<android.text.SpannableStringInternal: int[] mSpanData> = r29;

     label6:
        $r5 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        $i13 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $r5[$i13] = r1;

        $r6 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i15 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i14 = $i15 * 3;

        $i16 = $i14 + 0;

        $r6[$i16] = i0;

        $r7 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i18 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i17 = $i18 * 3;

        $i19 = $i17 + 1;

        $r7[$i19] = i1;

        $r8 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        $i21 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i20 = $i21 * 3;

        $i22 = $i20 + 2;

        $r8[$i22] = i2;

        $i24 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i25 = $i24 + 1;

        r0.<android.text.SpannableStringInternal: int mSpanCount> = $i25;

        $z0 = r0 instanceof android.text.Spannable;

        if $z0 == 0 goto label7;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanAdded(java.lang.Object,int,int)>(r1, i3, i4);

     label7:
        return;
    }

    void removeSpan(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.Object[] r2;
        int[] r3;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r2[i1];

        if $r4 != r1 goto label2;

        $i5 = i1 * 3;

        $i6 = $i5 + 0;

        i2 = r3[$i6];

        $i7 = i1 * 3;

        $i8 = $i7 + 1;

        i3 = r3[$i8];

        $i9 = i1 + 1;

        i4 = i0 - $i9;

        $i10 = i1 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i10, r2, i1, i4);

        $i12 = i1 + 1;

        $i13 = $i12 * 3;

        $i14 = i1 * 3;

        $i11 = i4 * 3;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r3, $i13, r3, $i14, $i11);

        $i16 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i15 = $i16 - 1;

        r0.<android.text.SpannableStringInternal: int mSpanCount> = $i15;

        specialinvoke r0.<android.text.SpannableStringInternal: void sendSpanRemoved(java.lang.Object,int,int)>(r1, i2, i3);

        return;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r2;
        int[] r3;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r2[i1];

        if $r4 != r1 goto label2;

        $i2 = i1 * 3;

        $i3 = $i2 + 0;

        $i4 = r3[$i3];

        return $i4;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r2;
        int[] r3;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r2[i1];

        if $r4 != r1 goto label2;

        $i2 = i1 * 3;

        $i3 = $i2 + 1;

        $i4 = r3[$i3];

        return $i4;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, $r4;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object[] r2;
        int[] r3;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r2[i1];

        if $r4 != r1 goto label2;

        $i2 = i1 * 3;

        $i3 = $i2 + 2;

        $i4 = r3[$i3];

        return $i4;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.Class r1;
        java.lang.Object[] r2, r4, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r19, r21, r22;
        int[] r3;
        java.lang.Object r5, $r6, $r9, $r15, $r16, $r17, $r18, $r20;
        boolean $z0;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        i2 = 0;

        i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        r4 = null;

        r5 = null;

        i4 = 0;

     label01:
        if i4 >= i3 goto label14;

        if r1 == null goto label02;

        $r20 = r2[i4];

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r20);

        if $z0 != 0 goto label02;

        goto label13;

     label02:
        $i12 = i4 * 3;

        $i11 = $i12 + 0;

        i5 = r3[$i11];

        $i14 = i4 * 3;

        $i13 = $i14 + 1;

        i6 = r3[$i13];

        if i5 <= i1 goto label03;

        goto label13;

     label03:
        if i6 >= i0 goto label04;

        goto label13;

     label04:
        if i5 == i6 goto label06;

        if i0 == i1 goto label06;

        if i5 != i1 goto label05;

        goto label13;

     label05:
        if i6 != i0 goto label06;

        goto label13;

     label06:
        if i2 != 0 goto label07;

        r5 = r2[i4];

        i2 = i2 + 1;

        goto label13;

     label07:
        if i2 != 1 goto label08;

        $i22 = i3 - i4;

        $i23 = $i22 + 1;

        $r18 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i23);

        $r19 = (java.lang.Object[]) $r18;

        r4 = (java.lang.Object[]) $r19;

        r4[0] = r5;

     label08:
        $i16 = i4 * 3;

        $i15 = $i16 + 2;

        $i18 = r3[$i15];

        i7 = $i18 & 16711680;

        if i7 == 0 goto label12;

        i8 = 0;

     label09:
        if i8 >= i2 goto label11;

        $r16 = r4[i8];

        $i20 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>($r16);

        i9 = $i20 & 16711680;

        if i7 <= i9 goto label10;

        goto label11;

     label10:
        i8 = i8 + 1;

        goto label09;

     label11:
        $i21 = i8 + 1;

        $i17 = i2 - i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i8, r4, $i21, $i17);

        $r17 = r2[i4];

        r4[i8] = $r17;

        i2 = i2 + 1;

        goto label13;

     label12:
        $i19 = i2;

        i2 = i2 + 1;

        $r15 = r2[i4];

        r4[$i19] = $r15;

     label13:
        i4 = i4 + 1;

        goto label01;

     label14:
        if i2 != 0 goto label15;

        $r14 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(r1);

        $r13 = (java.lang.Object[]) $r14;

        return $r13;

     label15:
        if i2 != 1 goto label16;

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 1);

        $r12 = (java.lang.Object[]) $r9;

        r21 = (java.lang.Object[]) $r12;

        r21[0] = r5;

        $r11 = (java.lang.Object[]) r21;

        return $r11;

     label16:
        $i10 = lengthof r4;

        if i2 != $i10 goto label17;

        $r10 = (java.lang.Object[]) r4;

        return $r10;

     label17:
        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, i2);

        $r8 = (java.lang.Object[]) $r6;

        r22 = (java.lang.Object[]) $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r22, 0, i2);

        $r7 = (java.lang.Object[]) r22;

        return $r7;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        java.lang.Class r1;
        java.lang.Object[] r2;
        int[] r3;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: android.text.SpannableStringInternal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        i2 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringInternal: int[] mSpanData>;

        if r1 != null goto label1;

        r1 = class "java/lang/Object";

     label1:
        i3 = 0;

     label2:
        if i3 >= i2 goto label5;

        $i6 = i3 * 3;

        $i7 = $i6 + 0;

        i4 = r3[$i7];

        $i8 = i3 * 3;

        $i9 = $i8 + 1;

        i5 = r3[$i9];

        if i4 <= i0 goto label3;

        if i4 >= i1 goto label3;

        $r5 = r2[i3];

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        i1 = i4;

     label3:
        if i5 <= i0 goto label4;

        if i5 >= i1 goto label4;

        $r4 = r2[i3];

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        i1 = i5;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return i1;
    }

    private void sendSpanAdded(java.lang.Object, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r5 = r2[i3];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>($r4, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanRemoved(java.lang.Object, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r5 = r2[i3];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>($r4, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanChanged(java.lang.Object, int, int, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.Spannable $r4;
        android.text.SpanWatcher $r5;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i3);

        $r3 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i6, $i7, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i4 = lengthof r2;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r5 = r2[i5];

        $r4 = (android.text.Spannable) r0;

        interfaceinvoke $r5.<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>($r4, r1, i0, i1, i2, i3);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private static java.lang.String region(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void checkRange(java.lang.String, int, int)
    {
        android.text.SpannableStringInternal r0;
        java.lang.String r1, $r6, $r10, $r14, $r19, $r22, $r26;
        int i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r2, $r11, $r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r23, $r24, $r25;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 >= i0 goto label1;

        $r18 = new java.lang.IndexOutOfBoundsException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has end before start");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r26);

        throw $r18;

     label1:
        i2 = virtualinvoke r0.<android.text.SpannableStringInternal: int length()>();

        if i0 > i2 goto label2;

        if i1 <= i2 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ends beyond length ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label3:
        if i0 < 0 goto label4;

        if i1 >= 0 goto label5;

     label4:
        $r11 = new java.lang.IndexOutOfBoundsException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = staticinvoke <android.text.SpannableStringInternal: java.lang.String region(int,int)>(i0, i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starts before 0");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label5:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.text.SpannableStringInternal r0;
        java.lang.Object r1, r4, r5;
        android.text.Spanned r2;
        java.lang.Object[] r3, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r7;

        r0 := @this: android.text.SpannableStringInternal;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label7;

        $r6 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label7;

        r2 = (android.text.Spanned) r1;

        $i1 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "java/lang/Object");

        $i3 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label7;

        i0 = 0;

     label1:
        $i4 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        if i0 >= $i4 goto label6;

        $r8 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r4 = $r8[i0];

        r5 = r3[i0];

        if r4 != r0 goto label3;

        if r2 != r5 goto label2;

        $i10 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r4);

        $i13 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r5);

        if $i10 != $i13 goto label2;

        $i12 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r4);

        $i15 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r5);

        if $i12 != $i15 goto label2;

        $i14 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r4);

        $i16 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r5);

        if $i14 == $i16 goto label5;

     label2:
        return 0;

     label3:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label4;

        $i5 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r4);

        $i7 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r5);

        if $i5 != $i7 goto label4;

        $i6 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r4);

        $i9 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r5);

        if $i6 != $i9 goto label4;

        $i8 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r4);

        $i11 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r5);

        if $i8 == $i11 goto label5;

     label4:
        return 0;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return 1;

     label7:
        return 0;
    }

    public int hashCode()
    {
        android.text.SpannableStringInternal r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: android.text.SpannableStringInternal;

        $r2 = virtualinvoke r0.<android.text.SpannableStringInternal: java.lang.String toString()>();

        i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i3 = i0 * 31;

        $i2 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        i13 = $i3 + $i2;

        i1 = 0;

     label1:
        $i4 = r0.<android.text.SpannableStringInternal: int mSpanCount>;

        if i1 >= $i4 goto label3;

        $r3 = r0.<android.text.SpannableStringInternal: java.lang.Object[] mSpans>;

        r1 = $r3[i1];

        if r1 == r0 goto label2;

        $i12 = i13 * 31;

        $i11 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i13 = $i12 + $i11;

     label2:
        $i5 = i13 * 31;

        $i6 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>(r1);

        i14 = $i5 + $i6;

        $i7 = i14 * 31;

        $i8 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>(r1);

        i15 = $i7 + $i8;

        $i9 = i15 * 31;

        $i10 = virtualinvoke r0.<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>(r1);

        i13 = $i9 + $i10;

        i1 = i1 + 1;

        goto label1;

     label3:
        return i13;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        <android.text.SpannableStringInternal: int COLUMNS> = 3;

        <android.text.SpannableStringInternal: int FLAGS> = 2;

        <android.text.SpannableStringInternal: int END> = 1;

        <android.text.SpannableStringInternal: int START> = 0;

        $r0 = newarray (java.lang.Object)[0];

        <android.text.SpannableStringInternal: java.lang.Object[] EMPTY> = $r0;

        return;
    }
}
