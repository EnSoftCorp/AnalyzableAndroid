public class android.service.voice.VoiceInteractionService extends android.app.Service
{
    public static final java.lang.String SERVICE_INTERFACE;
    public static final java.lang.String SERVICE_META_DATA;
    android.service.voice.IVoiceInteractionService mInterface;
    android.service.voice.VoiceInteractionService$MyHandler mHandler;
    com.android.internal.app.IVoiceInteractionManagerService mSystemService;
    private final java.lang.Object mLock;
    private android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo;
    private android.service.voice.AlwaysOnHotwordDetector mHotwordDetector;
    static final int MSG_READY;
    static final int MSG_SHUTDOWN;
    static final int MSG_SOUND_MODELS_CHANGED;

    public void <init>()
    {
        android.service.voice.VoiceInteractionService r0;
        android.service.voice.VoiceInteractionService$1 $r1;
        java.lang.Object $r2;

        r0 := @this: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.service.voice.VoiceInteractionService$1;

        specialinvoke $r1.<android.service.voice.VoiceInteractionService$1: void <init>(android.service.voice.VoiceInteractionService)>(r0);

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock> = $r2;

        return;
    }

    public static boolean isActiveService(android.content.Context, android.content.ComponentName)
    {
        android.content.Context r0;
        android.content.ComponentName r1, r3;
        java.lang.String r2;
        android.content.ContentResolver $r4;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ComponentName;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "voice_interaction_service");

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r2);

        if r3 != null goto label3;

        return 0;

     label3:
        $z1 = virtualinvoke r3.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public void startSession(android.os.Bundle)
    {
        android.service.voice.VoiceInteractionService r0;
        android.os.Bundle r1;
        com.android.internal.app.IVoiceInteractionManagerService $r3, $r5;
        android.service.voice.IVoiceInteractionService $r4;
        java.lang.IllegalStateException $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        if $r3 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not available until onReady() is called");

        throw $r6;

     label1:
        $r5 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface>;

        interfaceinvoke $r5.<com.android.internal.app.IVoiceInteractionManagerService: void startSession(android.service.voice.IVoiceInteractionService,android.os.Bundle)>($r4, r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onCreate()
    {
        android.service.voice.VoiceInteractionService r0;
        android.service.voice.VoiceInteractionService$MyHandler $r1;

        r0 := @this: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = new android.service.voice.VoiceInteractionService$MyHandler;

        specialinvoke $r1.<android.service.voice.VoiceInteractionService$MyHandler: void <init>(android.service.voice.VoiceInteractionService)>(r0);

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.VoiceInteractionService$MyHandler mHandler> = $r1;

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.service.voice.VoiceInteractionService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.service.voice.IVoiceInteractionService $r4;
        android.os.IBinder $r5;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.service.voice.VoiceInteractionService";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface>;

        $r5 = interfaceinvoke $r4.<android.service.voice.IVoiceInteractionService: android.os.IBinder asBinder()>();

        return $r5;

     label1:
        return null;
    }

    public void onReady()
    {
        android.service.voice.VoiceInteractionService r0;
        android.os.IBinder $r1;
        com.android.internal.app.IVoiceInteractionManagerService $r2;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("voiceinteraction");

        $r2 = staticinvoke <com.android.internal.app.IVoiceInteractionManagerService$Stub: com.android.internal.app.IVoiceInteractionManagerService asInterface(android.os.IBinder)>($r1);

        r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService> = $r2;

        $r3 = new android.hardware.soundtrigger.KeyphraseEnrollmentInfo;

        $r4 = virtualinvoke r0.<android.service.voice.VoiceInteractionService: android.content.pm.PackageManager getPackageManager()>();

        specialinvoke $r3.<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: void <init>(android.content.pm.PackageManager)>($r4);

        r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo> = $r3;

        return;
    }

    private void onShutdownInternal()
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        virtualinvoke r0.<android.service.voice.VoiceInteractionService: void onShutdown()>();

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void safelyShutdownHotwordDetector()>();

        return;
    }

    public void onShutdown()
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @this: android.service.voice.VoiceInteractionService;

        return;
    }

    private void onSoundModelsChangedInternal()
    {
        android.service.voice.VoiceInteractionService r0, r1;
        java.lang.Throwable r2, $r6;
        android.service.voice.AlwaysOnHotwordDetector $r4, $r5;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r4 == null goto label2;

        $r5 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r5.<android.service.voice.AlwaysOnHotwordDetector: void onSoundModelsChanged()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String, java.util.Locale, android.service.voice.AlwaysOnHotwordDetector$Callback)
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.String r1;
        java.util.Locale r2;
        android.service.voice.AlwaysOnHotwordDetector$Callback r3;
        java.lang.Object r4, $r7;
        java.lang.Throwable r5, $r14;
        com.android.internal.app.IVoiceInteractionManagerService $r6, $r9;
        android.service.voice.AlwaysOnHotwordDetector $r8, $r12;
        android.service.voice.IVoiceInteractionService $r10;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r11;
        java.lang.IllegalStateException $r13;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        r3 := @parameter2: android.service.voice.AlwaysOnHotwordDetector$Callback;

        $r6 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        if $r6 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not available until onReady() is called");

        throw $r13;

     label1:
        $r7 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        r4 = $r7;

        entermonitor $r7;

     label2:
        specialinvoke r0.<android.service.voice.VoiceInteractionService: void safelyShutdownHotwordDetector()>();

        $r8 = new android.service.voice.AlwaysOnHotwordDetector;

        $r11 = r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        $r10 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.IVoiceInteractionService mInterface>;

        $r9 = r0.<android.service.voice.VoiceInteractionService: com.android.internal.app.IVoiceInteractionManagerService mSystemService>;

        specialinvoke $r8.<android.service.voice.AlwaysOnHotwordDetector: void <init>(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector$Callback,android.hardware.soundtrigger.KeyphraseEnrollmentInfo,android.service.voice.IVoiceInteractionService,com.android.internal.app.IVoiceInteractionManagerService)>(r1, r2, r3, $r11, $r10, $r9);

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector> = $r8;

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        $r12 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        return $r12;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected final android.hardware.soundtrigger.KeyphraseEnrollmentInfo getKeyphraseEnrollmentInfo()
    {
        android.service.voice.VoiceInteractionService r0;
        android.hardware.soundtrigger.KeyphraseEnrollmentInfo $r1;

        r0 := @this: android.service.voice.VoiceInteractionService;

        $r1 = r0.<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo mKeyphraseEnrollmentInfo>;

        return $r1;
    }

    private void safelyShutdownHotwordDetector()
    {
        android.service.voice.VoiceInteractionService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        android.service.voice.AlwaysOnHotwordDetector $r4, $r5, $r6;
        java.lang.Exception $r8;

        r0 := @this: android.service.voice.VoiceInteractionService;

     label1:
        $r3 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r4 == null goto label3;

        $r5 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r5.<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>();

        $r6 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r6.<android.service.voice.AlwaysOnHotwordDetector: void invalidate()>();

        r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector> = null;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.voice.VoiceInteractionService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r9;
        android.service.voice.AlwaysOnHotwordDetector $r7, $r8;

        r0 := @this: android.service.voice.VoiceInteractionService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("VOICE INTERACTION");

        $r6 = r0.<android.service.voice.VoiceInteractionService: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  AlwaysOnHotwordDetector");

        $r7 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        if $r7 != null goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    NULL");

        goto label3;

     label2:
        $r8 = r0.<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector mHotwordDetector>;

        virtualinvoke $r8.<android.service.voice.AlwaysOnHotwordDetector: void dump(java.lang.String,java.io.PrintWriter)>("    ", r2);

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void access$000(android.service.voice.VoiceInteractionService)
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onShutdownInternal()>();

        return;
    }

    static void access$100(android.service.voice.VoiceInteractionService)
    {
        android.service.voice.VoiceInteractionService r0;

        r0 := @parameter0: android.service.voice.VoiceInteractionService;

        specialinvoke r0.<android.service.voice.VoiceInteractionService: void onSoundModelsChangedInternal()>();

        return;
    }

    public static void <clinit>()
    {
        <android.service.voice.VoiceInteractionService: int MSG_SOUND_MODELS_CHANGED> = 3;

        <android.service.voice.VoiceInteractionService: int MSG_SHUTDOWN> = 2;

        <android.service.voice.VoiceInteractionService: int MSG_READY> = 1;

        <android.service.voice.VoiceInteractionService: java.lang.String SERVICE_META_DATA> = "android.voice_interaction";

        <android.service.voice.VoiceInteractionService: java.lang.String SERVICE_INTERFACE> = "android.service.voice.VoiceInteractionService";

        return;
    }
}
