public class android.widget.Chronometer extends android.widget.TextView
{
    private static final java.lang.String TAG;
    private long mBase;
    private boolean mVisible;
    private boolean mStarted;
    private boolean mRunning;
    private boolean mLogged;
    private java.lang.String mFormat;
    private java.util.Formatter mFormatter;
    private java.util.Locale mFormatterLocale;
    private java.lang.Object[] mFormatterArgs;
    private java.lang.StringBuilder mFormatBuilder;
    private android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener;
    private java.lang.StringBuilder mRecycle;
    private static final int TICK_WHAT;
    private android.os.Handler mHandler;

    public void <init>(android.content.Context)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Chronometer r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1;
        android.content.res.TypedArray r3;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r5;
        android.widget.Chronometer$1 $r6;
        int[] $r7;
        java.lang.String $r8;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r4 = newarray (java.lang.Object)[1];

        r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(8);

        r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle> = $r5;

        $r6 = new android.widget.Chronometer$1;

        specialinvoke $r6.<android.widget.Chronometer$1: void <init>(android.widget.Chronometer)>(r0);

        r0.<android.widget.Chronometer: android.os.Handler mHandler> = $r6;

        $r7 = <com.android.internal.R$styleable: int[] Chronometer>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, i0, i1);

        $r8 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        virtualinvoke r0.<android.widget.Chronometer: void setFormat(java.lang.String)>($r8);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.Chronometer: void init()>();

        return;
    }

    private void init()
    {
        android.widget.Chronometer r0;
        long $l0, $l1;

        r0 := @this: android.widget.Chronometer;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<android.widget.Chronometer: long mBase> = $l0;

        $l1 = r0.<android.widget.Chronometer: long mBase>;

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l1);

        return;
    }

    public void setBase(long)
    {
        android.widget.Chronometer r0;
        long l0, $l1;

        r0 := @this: android.widget.Chronometer;

        l0 := @parameter0: long;

        r0.<android.widget.Chronometer: long mBase> = l0;

        virtualinvoke r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l1);

        return;
    }

    public long getBase()
    {
        android.widget.Chronometer r0;
        long $l0;

        r0 := @this: android.widget.Chronometer;

        $l0 = r0.<android.widget.Chronometer: long mBase>;

        return $l0;
    }

    public void setFormat(java.lang.String)
    {
        android.widget.Chronometer r0;
        java.lang.String r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: java.lang.String;

        r0.<android.widget.Chronometer: java.lang.String mFormat> = r1;

        if r1 == null goto label1;

        $r2 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 * 2;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder> = $r3;

     label1:
        return;
    }

    public java.lang.String getFormat()
    {
        android.widget.Chronometer r0;
        java.lang.String $r1;

        r0 := @this: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        return $r1;
    }

    public void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener r1;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.widget.Chronometer$OnChronometerTickListener;

        r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener> = r1;

        return;
    }

    public android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener $r1;

        r0 := @this: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        return $r1;
    }

    public void start()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        r0.<android.widget.Chronometer: boolean mStarted> = 1;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void stop()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        r0.<android.widget.Chronometer: boolean mStarted> = 0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    public void setStarted(boolean)
    {
        android.widget.Chronometer r0;
        boolean z0;

        r0 := @this: android.widget.Chronometer;

        z0 := @parameter0: boolean;

        r0.<android.widget.Chronometer: boolean mStarted> = z0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Chronometer r0;

        r0 := @this: android.widget.Chronometer;

        specialinvoke r0.<android.widget.TextView: void onDetachedFromWindow()>();

        r0.<android.widget.Chronometer: boolean mVisible> = 0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.widget.Chronometer r0;
        int i0;
        boolean $z0;

        r0 := @this: android.widget.Chronometer;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void onWindowVisibilityChanged(int)>(i0);

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<android.widget.Chronometer: boolean mVisible> = $z0;

        specialinvoke r0.<android.widget.Chronometer: void updateRunning()>();

        return;
    }

    private synchronized void updateText(long)
    {
        android.widget.Chronometer r0;
        long l0, l1, $l2, l4;
        java.lang.String r1, $r5, $r11, $r19, $r22;
        java.util.Locale r2, $r16;
        java.lang.StringBuilder $r4, $r8, $r10, $r15, $r18, $r20, $r21;
        java.util.Formatter $r6, $r7, $r14;
        java.lang.Object[] $r9, $r12;
        boolean $z0, $z1;
        java.util.IllegalFormatException $r17;

        r0 := @this: android.widget.Chronometer;

        l0 := @parameter0: long;

        $l2 = r0.<android.widget.Chronometer: long mBase>;

        l1 = l0 - $l2;

        l4 = l1 / 1000L;

        $r4 = r0.<android.widget.Chronometer: java.lang.StringBuilder mRecycle>;

        r1 = staticinvoke <android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>($r4, l4);

        $r5 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        if $r5 == null goto label6;

        r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        if $r6 == null goto label1;

        $r16 = r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale>;

        $z0 = virtualinvoke r2.<java.util.Locale: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label2;

     label1:
        r0.<android.widget.Chronometer: java.util.Locale mFormatterLocale> = r2;

        $r7 = new java.util.Formatter;

        $r8 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        specialinvoke $r7.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r8, r2);

        r0.<android.widget.Chronometer: java.util.Formatter mFormatter> = $r7;

     label2:
        $r10 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        virtualinvoke $r10.<java.lang.StringBuilder: void setLength(int)>(0);

        $r9 = r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

        $r9[0] = r1;

     label3:
        $r14 = r0.<android.widget.Chronometer: java.util.Formatter mFormatter>;

        $r11 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        $r12 = r0.<android.widget.Chronometer: java.lang.Object[] mFormatterArgs>;

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r11, $r12);

        $r15 = r0.<android.widget.Chronometer: java.lang.StringBuilder mFormatBuilder>;

        r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        $z1 = r0.<android.widget.Chronometer: boolean mLogged>;

        if $z1 != 0 goto label6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal format string: ");

        $r19 = r0.<android.widget.Chronometer: java.lang.String mFormat>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Chronometer", $r22);

        r0.<android.widget.Chronometer: boolean mLogged> = 1;

     label6:
        virtualinvoke r0.<android.widget.Chronometer: void setText(java.lang.CharSequence)>(r1);

        return;

        catch java.util.IllegalFormatException from label3 to label4 with label5;
    }

    private void updateRunning()
    {
        android.widget.Chronometer r0;
        boolean z0, $z1, $z2, $z4, $z5;
        android.os.Handler $r1, $r2, $r3;
        long $l0;
        android.os.Message $r4;

        r0 := @this: android.widget.Chronometer;

        $z1 = r0.<android.widget.Chronometer: boolean mVisible>;

        if $z1 == 0 goto label1;

        $z4 = r0.<android.widget.Chronometer: boolean mStarted>;

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $z2 = r0.<android.widget.Chronometer: boolean mRunning>;

        if z0 == $z2 goto label5;

        if z0 == 0 goto label3;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>($l0);

        virtualinvoke r0.<android.widget.Chronometer: void dispatchChronometerTick()>();

        $r3 = r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        $r2 = r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r2, 2);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r4, 1000L);

        goto label4;

     label3:
        $r1 = r0.<android.widget.Chronometer: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

     label4:
        r0.<android.widget.Chronometer: boolean mRunning> = z0;

     label5:
        return;
    }

    void dispatchChronometerTick()
    {
        android.widget.Chronometer r0;
        android.widget.Chronometer$OnChronometerTickListener $r1, $r2;

        r0 := @this: android.widget.Chronometer;

        $r1 = r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener mOnChronometerTickListener>;

        interfaceinvoke $r2.<android.widget.Chronometer$OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>(r0);

     label1:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.Chronometer r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/Chronometer";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.Chronometer r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.Chronometer;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/Chronometer";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    static boolean access$000(android.widget.Chronometer)
    {
        android.widget.Chronometer r0;
        boolean $z0;

        r0 := @parameter0: android.widget.Chronometer;

        $z0 = r0.<android.widget.Chronometer: boolean mRunning>;

        return $z0;
    }

    static void access$100(android.widget.Chronometer, long)
    {
        android.widget.Chronometer r0;
        long l0;

        r0 := @parameter0: android.widget.Chronometer;

        l0 := @parameter1: long;

        specialinvoke r0.<android.widget.Chronometer: void updateText(long)>(l0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Chronometer: int TICK_WHAT> = 2;

        <android.widget.Chronometer: java.lang.String TAG> = "Chronometer";

        return;
    }
}
