public abstract class android.hardware.usb.IUsbManager$Stub extends android.os.Binder implements android.hardware.usb.IUsbManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getDeviceList;
    static final int TRANSACTION_openDevice;
    static final int TRANSACTION_getCurrentAccessory;
    static final int TRANSACTION_openAccessory;
    static final int TRANSACTION_setDevicePackage;
    static final int TRANSACTION_setAccessoryPackage;
    static final int TRANSACTION_hasDevicePermission;
    static final int TRANSACTION_hasAccessoryPermission;
    static final int TRANSACTION_requestDevicePermission;
    static final int TRANSACTION_requestAccessoryPermission;
    static final int TRANSACTION_grantDevicePermission;
    static final int TRANSACTION_grantAccessoryPermission;
    static final int TRANSACTION_hasDefaults;
    static final int TRANSACTION_clearDefaults;
    static final int TRANSACTION_setCurrentFunction;
    static final int TRANSACTION_setMassStorageBackingFile;
    static final int TRANSACTION_allowUsbDebugging;
    static final int TRANSACTION_denyUsbDebugging;
    static final int TRANSACTION_clearUsbDebuggingKeys;

    public void <init>()
    {
        android.hardware.usb.IUsbManager$Stub r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.usb.IUsbManager");

        return;
    }

    public static android.hardware.usb.IUsbManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.usb.IUsbManager$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.usb.IUsbManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.usb.IUsbManager;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.usb.IUsbManager) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.usb.IUsbManager$Stub$Proxy;

        specialinvoke $r2.<android.hardware.usb.IUsbManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.usb.IUsbManager$Stub r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i16, $i17, $i18, i19, i20, i21, i22, i23;
        android.os.Parcel r1, r2;
        android.os.Bundle r3, $r27;
        android.os.ParcelFileDescriptor r4, r31;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7;
        byte $b5, $b12, $b15;
        java.lang.Object $r5, $r8, $r10, $r12, $r14, $r16, $r18, $r19, $r21, $r24, $r26;
        android.os.Parcelable$Creator $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r20, $r22, $r23, $r25;
        java.lang.String r28, r33, r35, r39, r42, r46, r47, r48, r49, r50;
        android.hardware.usb.UsbAccessory r29, r30, r34, r37, r41, r45;
        android.hardware.usb.UsbDevice r32, r36, r38, r44;
        android.app.PendingIntent r40, r43;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label11;
            case 5: goto label16;
            case 6: goto label19;
            case 7: goto label22;
            case 8: goto label27;
            case 9: goto label32;
            case 10: goto label37;
            case 11: goto label42;
            case 12: goto label45;
            case 13: goto label48;
            case 14: goto label51;
            case 15: goto label52;
            case 16: goto label55;
            case 17: goto label56;
            case 18: goto label59;
            case 19: goto label60;
            case 1598968902: goto label01;
            default: goto label61;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.usb.IUsbManager");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r27 = new android.os.Bundle;

        specialinvoke $r27.<android.os.Bundle: void <init>()>();

        r3 = $r27;

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void getDeviceList(android.os.Bundle)>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r3 == null goto label03;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label04;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label04:
        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r28 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.os.ParcelFileDescriptor openDevice(java.lang.String)>(r28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r4 == null goto label06;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label07;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        return 1;

     label08:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r29 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.UsbAccessory getCurrentAccessory()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r29 == null goto label09;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r29.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label10;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i18 goto label12;

        $r23 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r24 = interfaceinvoke $r23.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r30 = (android.hardware.usb.UsbAccessory) $r24;

        goto label13;

     label12:
        r30 = null;

     label13:
        r31 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>(r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r31 == null goto label14;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r31.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label15;

     label14:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i16 goto label17;

        $r25 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r26 = interfaceinvoke $r25.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r32 = (android.hardware.usb.UsbDevice) $r26;

        goto label18;

     label17:
        r32 = null;

     label18:
        r33 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>(r32, r33, i2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label19:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i17 goto label20;

        $r22 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r21 = interfaceinvoke $r22.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r34 = (android.hardware.usb.UsbAccessory) $r21;

        goto label21;

     label20:
        r34 = null;

     label21:
        r35 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>(r34, r35, i19);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label22:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i14 goto label23;

        $r20 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r20.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r36 = (android.hardware.usb.UsbDevice) $r19;

        goto label24;

     label23:
        r36 = null;

     label24:
        z3 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>(r36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z3 == 0 goto label25;

        $b15 = 1;

        goto label26;

     label25:
        $b15 = 0;

     label26:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b15);

        return 1;

     label27:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i13 goto label28;

        $r17 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r18 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r37 = (android.hardware.usb.UsbAccessory) $r18;

        goto label29;

     label28:
        r37 = null;

     label29:
        z4 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>(r37);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z4 == 0 goto label30;

        $b12 = 1;

        goto label31;

     label30:
        $b12 = 0;

     label31:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b12);

        return 1;

     label32:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label33;

        $r15 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r38 = (android.hardware.usb.UsbDevice) $r14;

        goto label34;

     label33:
        r38 = null;

     label34:
        r39 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i11 goto label35;

        $r13 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r40 = (android.app.PendingIntent) $r16;

        goto label36;

     label35:
        r40 = null;

     label36:
        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>(r38, r39, r40);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label37:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label38;

        $r11 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r41 = (android.hardware.usb.UsbAccessory) $r12;

        goto label39;

     label38:
        r41 = null;

     label39:
        r42 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label40;

        $r9 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r43 = (android.app.PendingIntent) $r10;

        goto label41;

     label40:
        r43 = null;

     label41:
        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>(r41, r42, r43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label43;

        $r7 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r44 = (android.hardware.usb.UsbDevice) $r8;

        goto label44;

     label43:
        r44 = null;

     label44:
        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>(r44, i20);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label45:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label46;

        $r6 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r45 = (android.hardware.usb.UsbAccessory) $r5;

        goto label47;

     label46:
        r45 = null;

     label47:
        i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>(r45, i21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label48:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z5 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasDefaults(java.lang.String,int)>(r46, i22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z5 == 0 goto label49;

        $b5 = 1;

        goto label50;

     label49:
        $b5 = 0;

     label50:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b5);

        return 1;

     label51:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r47 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void clearDefaults(java.lang.String,int)>(r47, i23);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r48 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label53;

        $z1 = 1;

        goto label54;

     label53:
        $z1 = 0;

     label54:
        z6 = $z1;

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setCurrentFunction(java.lang.String,boolean)>(r48, z6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label55:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setMassStorageBackingFile(java.lang.String)>(r49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label56:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label57;

        $z0 = 1;

        goto label58;

     label57:
        $z0 = 0;

     label58:
        z7 = $z0;

        r50 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void allowUsbDebugging(boolean,java.lang.String)>(z7, r50);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label59:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void denyUsbDebugging()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label60:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void clearUsbDebuggingKeys()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label61:
        $z2 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z2;
    }

    public static void <clinit>()
    {
        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_clearUsbDebuggingKeys> = 19;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_denyUsbDebugging> = 18;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_allowUsbDebugging> = 17;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setMassStorageBackingFile> = 16;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setCurrentFunction> = 15;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_clearDefaults> = 14;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasDefaults> = 13;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_grantAccessoryPermission> = 12;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_grantDevicePermission> = 11;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_requestAccessoryPermission> = 10;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_requestDevicePermission> = 9;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasAccessoryPermission> = 8;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasDevicePermission> = 7;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setAccessoryPackage> = 6;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setDevicePackage> = 5;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_openAccessory> = 4;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_getCurrentAccessory> = 3;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_openDevice> = 2;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_getDeviceList> = 1;

        <android.hardware.usb.IUsbManager$Stub: java.lang.String DESCRIPTOR> = "android.hardware.usb.IUsbManager";

        return;
    }
}
