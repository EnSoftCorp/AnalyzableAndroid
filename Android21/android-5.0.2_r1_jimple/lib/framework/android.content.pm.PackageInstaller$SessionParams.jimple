public class android.content.pm.PackageInstaller$SessionParams extends java.lang.Object implements android.os.Parcelable
{
    public static final int MODE_INVALID;
    public static final int MODE_FULL_INSTALL;
    public static final int MODE_INHERIT_EXISTING;
    public int mode;
    public int installFlags;
    public int installLocation;
    public long sizeBytes;
    public java.lang.String appPackageName;
    public android.graphics.Bitmap appIcon;
    public java.lang.String appLabel;
    public long appIconLastModified;
    public android.net.Uri originatingUri;
    public android.net.Uri referrerUri;
    public java.lang.String abiOverride;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = 1;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: long appIconLastModified> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = i0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.String $r2, $r5, $r10;
        android.os.Parcelable $r3, $r6, $r8;
        android.graphics.Bitmap $r4;
        android.net.Uri $r7, $r9;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = -1;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = 1;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = -1L;

        r0.<android.content.pm.PackageInstaller$SessionParams: long appIconLastModified> = -1L;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int mode> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = $i2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = $l3;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r4 = (android.graphics.Bitmap) $r3;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r7 = (android.net.Uri) $r6;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r9 = (android.net.Uri) $r8;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = $r9;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride> = $r10;

        return;
    }

    public void setInstallLocation(int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int i0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        i0 := @parameter0: int;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation> = i0;

        return;
    }

    public void setSize(long)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        long l0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        l0 := @parameter0: long;

        r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes> = l0;

        return;
    }

    public void setAppPackageName(java.lang.String)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.String r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.String;

        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName> = r1;

        return;
    }

    public void setAppIcon(android.graphics.Bitmap)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon> = r1;

        return;
    }

    public void setAppLabel(java.lang.CharSequence)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel> = $r2;

        return;
    }

    public void setOriginatingUri(android.net.Uri)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.net.Uri r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.net.Uri;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri> = r1;

        return;
    }

    public void setReferrerUri(android.net.Uri)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.net.Uri r1;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.net.Uri;

        r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri> = r1;

        return;
    }

    public void setInstallFlagsInternal()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 16;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 & -9;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        return;
    }

    public void setInstallFlagsExternal()
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i1 = $i0 | 8;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i1;

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        $i3 = $i2 & -17;

        r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags> = $i3;

        return;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3;
        long $l3;
        java.lang.Long $r4;
        java.lang.String $r5, $r10, $r11;
        android.graphics.Bitmap $r6;
        java.lang.Boolean $r8;
        android.net.Uri $r9, $r12;
        boolean $z0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        $i0 = r0.<android.content.pm.PackageInstaller$SessionParams: int mode>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mode", $r2);

        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printHexPair(java.lang.String,int)>("installFlags", $i1);

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("installLocation", $r3);

        $l3 = r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("sizeBytes", $r4);

        $r5 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("appPackageName", $r5);

        $r6 = r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon>;

        if $r6 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("appIcon", $r8);

        $r10 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("appLabel", $r10);

        $r9 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("originatingUri", $r9);

        $r12 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("referrerUri", $r12);

        $r11 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("abiOverride", $r11);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println()>();

        return;
    }

    public int describeContents()
    {
        android.content.pm.PackageInstaller$SessionParams r0;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.PackageInstaller$SessionParams r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        long $l4;
        java.lang.String $r2, $r4, $r7;
        android.graphics.Bitmap $r3;
        android.net.Uri $r5, $r6;

        r0 := @this: android.content.pm.PackageInstaller$SessionParams;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.pm.PackageInstaller$SessionParams: int mode>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.pm.PackageInstaller$SessionParams: int installFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.content.pm.PackageInstaller$SessionParams: int installLocation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $l4 = r0.<android.content.pm.PackageInstaller$SessionParams: long sizeBytes>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $r2 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.content.pm.PackageInstaller$SessionParams: android.graphics.Bitmap appIcon>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, i0);

        $r4 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String appLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri originatingUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        $r6 = r0.<android.content.pm.PackageInstaller$SessionParams: android.net.Uri referrerUri>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, i0);

        $r7 = r0.<android.content.pm.PackageInstaller$SessionParams: java.lang.String abiOverride>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        return;
    }

    static void <clinit>()
    {
        android.content.pm.PackageInstaller$SessionParams$1 $r0;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_INHERIT_EXISTING> = 2;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_FULL_INSTALL> = 1;

        <android.content.pm.PackageInstaller$SessionParams: int MODE_INVALID> = -1;

        $r0 = new android.content.pm.PackageInstaller$SessionParams$1;

        specialinvoke $r0.<android.content.pm.PackageInstaller$SessionParams$1: void <init>()>();

        <android.content.pm.PackageInstaller$SessionParams: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
