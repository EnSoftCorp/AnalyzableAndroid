public final class android.nfc.tech.MifareUltralight extends android.nfc.tech.BasicTagTechnology
{
    private static final java.lang.String TAG;
    public static final int TYPE_UNKNOWN;
    public static final int TYPE_ULTRALIGHT;
    public static final int TYPE_ULTRALIGHT_C;
    public static final int PAGE_SIZE;
    private static final int NXP_MANUFACTURER_ID;
    private static final int MAX_PAGE_COUNT;
    public static final java.lang.String EXTRA_IS_UL_C;
    private int mType;

    public static android.nfc.tech.MifareUltralight get(android.nfc.Tag)
    {
        android.nfc.Tag r0;
        boolean $z0;
        android.nfc.tech.MifareUltralight $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: android.nfc.Tag;

        $z0 = virtualinvoke r0.<android.nfc.Tag: boolean hasTech(int)>(9);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new android.nfc.tech.MifareUltralight;

        specialinvoke $r2.<android.nfc.tech.MifareUltralight: void <init>(android.nfc.Tag)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void <init>(android.nfc.Tag) throws android.os.RemoteException
    {
        android.nfc.tech.MifareUltralight r0;
        android.nfc.Tag r1;
        android.nfc.tech.NfcA r2;
        android.os.Bundle r3;
        short $s0;
        byte[] $r4;
        byte $b1;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        r1 := @parameter0: android.nfc.Tag;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void <init>(android.nfc.Tag,int)>(r1, 9);

        r2 = staticinvoke <android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>(r1);

        r0.<android.nfc.tech.MifareUltralight: int mType> = -1;

        $s0 = virtualinvoke r2.<android.nfc.tech.NfcA: short getSak()>();

        if $s0 != 0 goto label2;

        $r4 = virtualinvoke r1.<android.nfc.Tag: byte[] getId()>();

        $b1 = $r4[0];

        if $b1 != 4 goto label2;

        r3 = virtualinvoke r1.<android.nfc.Tag: android.os.Bundle getTechExtras(int)>(9);

        $z0 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>("isulc");

        if $z0 == 0 goto label1;

        r0.<android.nfc.tech.MifareUltralight: int mType> = 2;

        goto label2;

     label1:
        r0.<android.nfc.tech.MifareUltralight: int mType> = 1;

     label2:
        return;
    }

    public int getType()
    {
        android.nfc.tech.MifareUltralight r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        $i0 = r0.<android.nfc.tech.MifareUltralight: int mType>;

        return $i0;
    }

    public byte[] readPages(int) throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;
        int i0;
        byte[] r1, $r2, $r3;
        byte $b1;

        r0 := @this: android.nfc.tech.MifareUltralight;

        i0 := @parameter0: int;

        staticinvoke <android.nfc.tech.MifareUltralight: void validatePageIndex(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareUltralight: void checkConnected()>();

        $r2 = newarray (byte)[2];

        $r2[0] = 48;

        $b1 = (byte) i0;

        $r2[1] = $b1;

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>(r1, 0);

        return $r3;
    }

    public void writePage(int, byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;
        int i0, $i1, $i2, $i4;
        byte[] r1, r2;
        byte $b3;

        r0 := @this: android.nfc.tech.MifareUltralight;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        staticinvoke <android.nfc.tech.MifareUltralight: void validatePageIndex(int)>(i0);

        virtualinvoke r0.<android.nfc.tech.MifareUltralight: void checkConnected()>();

        $i1 = lengthof r1;

        $i2 = $i1 + 2;

        r2 = newarray (byte)[$i2];

        r2[0] = -94;

        $b3 = (byte) i0;

        r2[1] = $b3;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r2, 2, $i4);

        virtualinvoke r0.<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>(r2, 0);

        return;
    }

    public byte[] transceive(byte[]) throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;
        byte[] r1, $r2;

        r0 := @this: android.nfc.tech.MifareUltralight;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>(r1, 1);

        return $r2;
    }

    public int getMaxTransceiveLength()
    {
        android.nfc.tech.MifareUltralight r0;
        int $i0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        $i0 = virtualinvoke r0.<android.nfc.tech.MifareUltralight: int getMaxTransceiveLengthInternal()>();

        return $i0;
    }

    public void setTimeout(int)
    {
        android.nfc.tech.MifareUltralight r0;
        int i0, i1;
        android.nfc.Tag $r1;
        android.nfc.INfcTag $r2;
        java.lang.IllegalArgumentException $r3;
        android.os.RemoteException $r4, r5;

        r0 := @this: android.nfc.tech.MifareUltralight;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<android.nfc.tech.MifareUltralight: android.nfc.Tag mTag>;

        $r2 = virtualinvoke $r1.<android.nfc.Tag: android.nfc.INfcTag getTagService()>();

        i1 = interfaceinvoke $r2.<android.nfc.INfcTag: int setTimeout(int,int)>(9, i0);

        if i1 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The supplied timeout is not valid");

        throw $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead", r5);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getTimeout()
    {
        android.nfc.tech.MifareUltralight r0;
        android.os.RemoteException r1, $r4;
        android.nfc.Tag $r2;
        android.nfc.INfcTag $r3;
        int $i0;

        r0 := @this: android.nfc.tech.MifareUltralight;

     label1:
        $r2 = r0.<android.nfc.tech.MifareUltralight: android.nfc.Tag mTag>;

        $r3 = virtualinvoke $r2.<android.nfc.Tag: android.nfc.INfcTag getTagService()>();

        $i0 = interfaceinvoke $r3.<android.nfc.INfcTag: int getTimeout(int)>(9);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static void validatePageIndex(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 < 256 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("page out of bounds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return;
    }

    public volatile void close() throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void close()>();

        return;
    }

    public volatile void reconnect() throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void reconnect()>();

        return;
    }

    public volatile void connect() throws java.io.IOException
    {
        android.nfc.tech.MifareUltralight r0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        specialinvoke r0.<android.nfc.tech.BasicTagTechnology: void connect()>();

        return;
    }

    public volatile boolean isConnected()
    {
        android.nfc.tech.MifareUltralight r0;
        boolean $z0;

        r0 := @this: android.nfc.tech.MifareUltralight;

        $z0 = specialinvoke r0.<android.nfc.tech.BasicTagTechnology: boolean isConnected()>();

        return $z0;
    }

    public volatile android.nfc.Tag getTag()
    {
        android.nfc.tech.MifareUltralight r0;
        android.nfc.Tag $r1;

        r0 := @this: android.nfc.tech.MifareUltralight;

        $r1 = specialinvoke r0.<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <android.nfc.tech.MifareUltralight: java.lang.String EXTRA_IS_UL_C> = "isulc";

        <android.nfc.tech.MifareUltralight: int MAX_PAGE_COUNT> = 256;

        <android.nfc.tech.MifareUltralight: int NXP_MANUFACTURER_ID> = 4;

        <android.nfc.tech.MifareUltralight: int PAGE_SIZE> = 4;

        <android.nfc.tech.MifareUltralight: int TYPE_ULTRALIGHT_C> = 2;

        <android.nfc.tech.MifareUltralight: int TYPE_ULTRALIGHT> = 1;

        <android.nfc.tech.MifareUltralight: int TYPE_UNKNOWN> = -1;

        <android.nfc.tech.MifareUltralight: java.lang.String TAG> = "NFC";

        return;
    }
}
