class android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread extends java.lang.Object implements android.hardware.camera2.ICameraDeviceCallbacks
{
    private static final int CAMERA_ERROR;
    private static final int CAMERA_IDLE;
    private static final int CAPTURE_STARTED;
    private static final int RESULT_RECEIVED;
    private final android.os.HandlerThread mHandlerThread;
    private android.os.Handler mHandler;
    private final android.hardware.camera2.ICameraDeviceCallbacks mCallbacks;

    public void <init>(android.hardware.camera2.ICameraDeviceCallbacks)
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.hardware.camera2.ICameraDeviceCallbacks r1;
        android.os.HandlerThread $r2, $r3;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        r1 := @parameter0: android.hardware.camera2.ICameraDeviceCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.hardware.camera2.ICameraDeviceCallbacks mCallbacks> = r1;

        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("LegacyCameraCallback");

        r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.HandlerThread mHandlerThread> = $r2;

        $r3 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r3.<android.os.HandlerThread: void start()>();

        return;
    }

    public void close()
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.os.HandlerThread $r1;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        $r1 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quitSafely()>();

        return;
    }

    public void onDeviceError(int, android.hardware.camera2.impl.CaptureResultExtras)
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        int i0;
        android.hardware.camera2.impl.CaptureResultExtras r1;
        android.os.Message r2;
        android.os.Handler $r3, $r4;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        $r3 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(0, i0, 0, r1);

        $r4 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void onDeviceIdle()
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.os.Message r1;
        android.os.Handler $r2, $r3;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        $r2 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $r3 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras, long)
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.hardware.camera2.impl.CaptureResultExtras r1;
        long l0, $l1, $l2, $l3;
        android.os.Message r2;
        android.os.Handler $r3, $r4;
        int $i4, $i5;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        r1 := @parameter0: android.hardware.camera2.impl.CaptureResultExtras;

        l0 := @parameter1: long;

        $r3 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        $l1 = l0 & 4294967295L;

        $i5 = (int) $l1;

        $l2 = l0 >> 32;

        $l3 = $l2 & 4294967295L;

        $i4 = (int) $l3;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, $i5, $i4, r1);

        $r4 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CaptureResultExtras)
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.hardware.camera2.impl.CameraMetadataNative r1;
        android.hardware.camera2.impl.CaptureResultExtras r2;
        java.lang.Object[] r3, $r5;
        android.os.Message r4;
        android.os.Handler $r6, $r7;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r2 := @parameter1: android.hardware.camera2.impl.CaptureResultExtras;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        r3 = $r5;

        $r6 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r3);

        $r7 = specialinvoke r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler getHandler()>();

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        return null;
    }

    private android.os.Handler getHandler()
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.os.Handler $r1, $r2;
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread$CallbackHandler $r3;
        android.os.HandlerThread $r4;
        android.os.Looper $r5;

        r0 := @this: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        $r1 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler mHandler>;

        if $r1 != null goto label1;

        $r3 = new android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread$CallbackHandler;

        $r4 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.HandlerThread mHandlerThread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread$CallbackHandler: void <init>(android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread,android.os.Looper)>(r0, $r5);

        r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler mHandler> = $r3;

     label1:
        $r2 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.os.Handler mHandler>;

        return $r2;
    }

    static android.hardware.camera2.ICameraDeviceCallbacks access$100(android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread)
    {
        android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread r0;
        android.hardware.camera2.ICameraDeviceCallbacks $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread;

        $r1 = r0.<android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: android.hardware.camera2.ICameraDeviceCallbacks mCallbacks>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: int RESULT_RECEIVED> = 3;

        <android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: int CAPTURE_STARTED> = 2;

        <android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: int CAMERA_IDLE> = 1;

        <android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread: int CAMERA_ERROR> = 0;

        return;
    }
}
