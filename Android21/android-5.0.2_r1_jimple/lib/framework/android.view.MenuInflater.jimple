public class android.view.MenuInflater extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String XML_MENU;
    private static final java.lang.String XML_GROUP;
    private static final java.lang.String XML_ITEM;
    private static final int NO_ID;
    private static final java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE;
    private static final java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE;
    private final java.lang.Object[] mActionViewConstructorArguments;
    private final java.lang.Object[] mActionProviderConstructorArguments;
    private android.content.Context mContext;
    private java.lang.Object mRealOwner;

    public void <init>(android.content.Context)
    {
        android.view.MenuInflater r0;
        android.content.Context r1;
        java.lang.Object[] $r2, $r3;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.MenuInflater: android.content.Context mContext> = r1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        r0.<android.view.MenuInflater: java.lang.Object[] mActionViewConstructorArguments> = $r2;

        $r3 = r0.<android.view.MenuInflater: java.lang.Object[] mActionViewConstructorArguments>;

        r0.<android.view.MenuInflater: java.lang.Object[] mActionProviderConstructorArguments> = $r3;

        return;
    }

    public void <init>(android.content.Context, java.lang.Object)
    {
        android.view.MenuInflater r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.Object[] $r3, $r4;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.MenuInflater: android.content.Context mContext> = r1;

        r0.<android.view.MenuInflater: java.lang.Object mRealOwner> = r2;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        r0.<android.view.MenuInflater: java.lang.Object[] mActionViewConstructorArguments> = $r3;

        $r4 = r0.<android.view.MenuInflater: java.lang.Object[] mActionViewConstructorArguments>;

        r0.<android.view.MenuInflater: java.lang.Object[] mActionProviderConstructorArguments> = $r4;

        return;
    }

    public void inflate(int, android.view.Menu)
    {
        android.view.MenuInflater r0;
        int i0;
        android.view.Menu r1;
        android.content.res.XmlResourceParser r2;
        android.util.AttributeSet r3;
        java.lang.Throwable r4, $r9;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        org.xmlpull.v1.XmlPullParserException $r7, r12;
        android.view.InflateException $r8, $r11;
        java.io.IOException $r10, r13;

        r0 := @this: android.view.MenuInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        r2 = null;

     label1:
        $r5 = r0.<android.view.MenuInflater: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        specialinvoke r0.<android.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)>(r2, r3, r1);

     label2:
        if r2 == null goto label8;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label8;

     label3:
        $r7 := @caughtexception;

        r12 = $r7;

        $r8 = new android.view.InflateException;

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>("Error inflating menu XML", r12);

        throw $r8;

     label4:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = new android.view.InflateException;

        specialinvoke $r11.<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>("Error inflating menu XML", r13);

        throw $r11;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

     label6:
        if r2 == null goto label7;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label7:
        throw r4;

     label8:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label6 with label5;
    }

    private void parseMenu(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.MenuInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.view.Menu r3;
        android.view.MenuInflater$MenuState r4, $r8;
        int i0;
        java.lang.String r5, r6, $r16, r19, r20;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.view.SubMenu r7, $r12;
        android.view.ActionProvider $r9, $r10;
        android.view.MenuItem $r11;
        java.lang.RuntimeException $r13, $r14;
        java.lang.StringBuilder $r15, $r17, $r18;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.util.AttributeSet;

        r3 := @parameter2: android.view.Menu;

        $r8 = new android.view.MenuInflater$MenuState;

        specialinvoke $r8.<android.view.MenuInflater$MenuState: void <init>(android.view.MenuInflater,android.view.Menu)>(r0, r3);

        r4 = $r8;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        z0 = 0;

        r6 = null;

     label01:
        if i0 != 2 goto label03;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z11 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("menu");

        if $z11 == 0 goto label02;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label04;

     label02:
        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting menu, got ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label03:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 1 goto label01;

     label04:
        z1 = 0;

     label05:
        if z1 != 0 goto label18;

        tableswitch(i0)
        {
            case 1: goto label16;
            case 2: goto label06;
            case 3: goto label11;
            default: goto label17;
        };

     label06:
        if z0 == 0 goto label07;

        goto label17;

     label07:
        r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z2 == 0 goto label08;

        virtualinvoke r4.<android.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)>(r2);

        goto label17;

     label08:
        $z4 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z4 == 0 goto label09;

        virtualinvoke r4.<android.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)>(r2);

        goto label17;

     label09:
        $z3 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("menu");

        if $z3 == 0 goto label10;

        r7 = virtualinvoke r4.<android.view.MenuInflater$MenuState: android.view.SubMenu addSubMenuItem()>();

        specialinvoke r0.<android.view.MenuInflater: void registerMenu(android.view.SubMenu,android.util.AttributeSet)>(r7, r2);

        specialinvoke r0.<android.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)>(r1, r2, r7);

        goto label17;

     label10:
        z0 = 1;

        r6 = r19;

        goto label17;

     label11:
        r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if z0 == 0 goto label12;

        $z10 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z10 == 0 goto label12;

        z0 = 0;

        r6 = null;

        goto label17;

     label12:
        $z5 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z5 == 0 goto label13;

        virtualinvoke r4.<android.view.MenuInflater$MenuState: void resetGroup()>();

        goto label17;

     label13:
        $z7 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z7 == 0 goto label15;

        $z8 = virtualinvoke r4.<android.view.MenuInflater$MenuState: boolean hasAddedItem()>();

        if $z8 != 0 goto label17;

        $r9 = staticinvoke <android.view.MenuInflater$MenuState: android.view.ActionProvider access$000(android.view.MenuInflater$MenuState)>(r4);

        if $r9 == null goto label14;

        $r10 = staticinvoke <android.view.MenuInflater$MenuState: android.view.ActionProvider access$000(android.view.MenuInflater$MenuState)>(r4);

        $z9 = virtualinvoke $r10.<android.view.ActionProvider: boolean hasSubMenu()>();

        if $z9 == 0 goto label14;

        $r12 = virtualinvoke r4.<android.view.MenuInflater$MenuState: android.view.SubMenu addSubMenuItem()>();

        specialinvoke r0.<android.view.MenuInflater: void registerMenu(android.view.SubMenu,android.util.AttributeSet)>($r12, r2);

        goto label17;

     label14:
        $r11 = virtualinvoke r4.<android.view.MenuInflater$MenuState: android.view.MenuItem addItem()>();

        specialinvoke r0.<android.view.MenuInflater: void registerMenu(android.view.MenuItem,android.util.AttributeSet)>($r11, r2);

        goto label17;

     label15:
        $z6 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("menu");

        if $z6 == 0 goto label17;

        z1 = 1;

        goto label17;

     label16:
        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected end of document");

        throw $r13;

     label17:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label05;

     label18:
        return;
    }

    private void registerMenu(android.view.MenuItem, android.util.AttributeSet)
    {
        android.view.MenuInflater r0;
        android.view.MenuItem r1;
        android.util.AttributeSet r2;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: android.view.MenuItem;

        r2 := @parameter1: android.util.AttributeSet;

        return;
    }

    private void registerMenu(android.view.SubMenu, android.util.AttributeSet)
    {
        android.view.MenuInflater r0;
        android.view.SubMenu r1;
        android.util.AttributeSet r2;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: android.view.SubMenu;

        r2 := @parameter1: android.util.AttributeSet;

        return;
    }

    android.content.Context getContext()
    {
        android.view.MenuInflater r0;
        android.content.Context $r1;

        r0 := @this: android.view.MenuInflater;

        $r1 = r0.<android.view.MenuInflater: android.content.Context mContext>;

        return $r1;
    }

    private java.lang.Object getRealOwner()
    {
        android.view.MenuInflater r0;
        java.lang.Object $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: android.view.MenuInflater;

        $r1 = r0.<android.view.MenuInflater: java.lang.Object mRealOwner>;

        if $r1 != null goto label1;

        $r3 = r0.<android.view.MenuInflater: android.content.Context mContext>;

        $r4 = specialinvoke r0.<android.view.MenuInflater: java.lang.Object findRealOwner(java.lang.Object)>($r3);

        r0.<android.view.MenuInflater: java.lang.Object mRealOwner> = $r4;

     label1:
        $r2 = r0.<android.view.MenuInflater: java.lang.Object mRealOwner>;

        return $r2;
    }

    private java.lang.Object findRealOwner(java.lang.Object)
    {
        android.view.MenuInflater r0;
        java.lang.Object r1, $r4;
        boolean $z0, $z1;
        android.content.ContextWrapper $r2;
        android.content.Context $r3;

        r0 := @this: android.view.MenuInflater;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z1 = r1 instanceof android.content.ContextWrapper;

        if $z1 == 0 goto label2;

        $r2 = (android.content.ContextWrapper) r1;

        $r3 = virtualinvoke $r2.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        $r4 = specialinvoke r0.<android.view.MenuInflater: java.lang.Object findRealOwner(java.lang.Object)>($r3);

        return $r4;

     label2:
        return r1;
    }

    static android.content.Context access$100(android.view.MenuInflater)
    {
        android.view.MenuInflater r0;
        android.content.Context $r1;

        r0 := @parameter0: android.view.MenuInflater;

        $r1 = r0.<android.view.MenuInflater: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Class[] access$200()
    {
        java.lang.Class[] $r0;

        $r0 = <android.view.MenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE>;

        return $r0;
    }

    static java.lang.Object[] access$300(android.view.MenuInflater)
    {
        android.view.MenuInflater r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: android.view.MenuInflater;

        $r1 = r0.<android.view.MenuInflater: java.lang.Object[] mActionProviderConstructorArguments>;

        return $r1;
    }

    static java.lang.Object access$400(android.view.MenuInflater)
    {
        android.view.MenuInflater r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.view.MenuInflater;

        $r1 = specialinvoke r0.<android.view.MenuInflater: java.lang.Object getRealOwner()>();

        return $r1;
    }

    static java.lang.Class[] access$500()
    {
        java.lang.Class[] $r0;

        $r0 = <android.view.MenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE>;

        return $r0;
    }

    static java.lang.Object[] access$600(android.view.MenuInflater)
    {
        android.view.MenuInflater r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: android.view.MenuInflater;

        $r1 = r0.<android.view.MenuInflater: java.lang.Object[] mActionViewConstructorArguments>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0, $r1;

        <android.view.MenuInflater: int NO_ID> = 0;

        <android.view.MenuInflater: java.lang.String XML_ITEM> = "item";

        <android.view.MenuInflater: java.lang.String XML_GROUP> = "group";

        <android.view.MenuInflater: java.lang.String XML_MENU> = "menu";

        <android.view.MenuInflater: java.lang.String LOG_TAG> = "MenuInflater";

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "android/content/Context";

        <android.view.MenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE> = $r0;

        $r1 = <android.view.MenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE>;

        <android.view.MenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE> = $r1;

        return;
    }
}
