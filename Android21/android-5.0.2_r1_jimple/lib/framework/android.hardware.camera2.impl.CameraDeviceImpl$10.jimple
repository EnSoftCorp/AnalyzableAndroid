class android.hardware.camera2.impl.CameraDeviceImpl$10 extends java.lang.Object implements java.lang.Runnable
{
    final int val$requestId;
    final java.util.AbstractMap$SimpleEntry val$frameNumberRequestPair;
    final android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder val$holder;
    final android.hardware.camera2.impl.CameraDeviceImpl this$0;

    void <init>(android.hardware.camera2.impl.CameraDeviceImpl, int, java.util.AbstractMap$SimpleEntry, android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder)
    {
        android.hardware.camera2.impl.CameraDeviceImpl$10 r0;
        android.hardware.camera2.impl.CameraDeviceImpl r1;
        int i0;
        java.util.AbstractMap$SimpleEntry r2;
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder r3;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$10;

        r1 := @parameter0: android.hardware.camera2.impl.CameraDeviceImpl;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.AbstractMap$SimpleEntry;

        r3 := @parameter3: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl this$0> = r1;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: int val$requestId> = i0;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: java.util.AbstractMap$SimpleEntry val$frameNumberRequestPair> = r2;

        r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder val$holder> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.hardware.camera2.impl.CameraDeviceImpl$10 r0;
        long l0;
        android.hardware.camera2.impl.CameraDeviceImpl $r1, $r2, $r13, $r15;
        boolean $z0, $z1;
        java.util.AbstractMap$SimpleEntry $r3;
        java.lang.Object $r4;
        java.lang.Long $r5;
        byte $b1, $b2;
        java.lang.AssertionError $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r14, $r17;
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback $r11;
        android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder $r12;
        int $i3, $i4;
        java.lang.Object[] $r16;
        java.lang.Integer $r18;

        r0 := @this: android.hardware.camera2.impl.CameraDeviceImpl$10;

        $r1 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: boolean access$300(android.hardware.camera2.impl.CameraDeviceImpl)>($r1);

        if $z0 != 0 goto label4;

        $r2 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $z1 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: boolean access$400(android.hardware.camera2.impl.CameraDeviceImpl)>($r2);

        if $z1 == 0 goto label1;

        $r15 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $r14 = staticinvoke <android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String access$500(android.hardware.camera2.impl.CameraDeviceImpl)>($r15);

        $r16 = newarray (java.lang.Object)[1];

        $i4 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: int val$requestId>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r16[0] = $r18;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("fire sequence complete for request %d", $r16);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r14, $r17);

     label1:
        $r3 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: java.util.AbstractMap$SimpleEntry val$frameNumberRequestPair>;

        $r4 = virtualinvoke $r3.<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>();

        $r5 = (java.lang.Long) $r4;

        l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $b1 = l0 cmp -2147483648L;

        if $b1 < 0 goto label2;

        $b2 = l0 cmp 2147483647L;

        if $b2 <= 0 goto label3;

     label2:
        $r6 = new java.lang.AssertionError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be cast to int");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r6;

     label3:
        $r12 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder val$holder>;

        $r11 = virtualinvoke $r12.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder: android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback getCallback()>();

        $r13 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: android.hardware.camera2.impl.CameraDeviceImpl this$0>;

        $i3 = r0.<android.hardware.camera2.impl.CameraDeviceImpl$10: int val$requestId>;

        virtualinvoke $r11.<android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice,int,long)>($r13, $i3, l0);

     label4:
        return;
    }
}
