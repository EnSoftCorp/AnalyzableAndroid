public class com.android.internal.os.PowerProfile extends java.lang.Object
{
    public static final java.lang.String POWER_NONE;
    public static final java.lang.String POWER_CPU_IDLE;
    public static final java.lang.String POWER_CPU_AWAKE;
    public static final java.lang.String POWER_CPU_ACTIVE;
    public static final java.lang.String POWER_WIFI_SCAN;
    public static final java.lang.String POWER_WIFI_ON;
    public static final java.lang.String POWER_WIFI_ACTIVE;
    public static final java.lang.String POWER_GPS_ON;
    public static final java.lang.String POWER_BLUETOOTH_ON;
    public static final java.lang.String POWER_BLUETOOTH_ACTIVE;
    public static final java.lang.String POWER_BLUETOOTH_AT_CMD;
    public static final java.lang.String POWER_SCREEN_ON;
    public static final java.lang.String POWER_RADIO_ON;
    public static final java.lang.String POWER_RADIO_SCANNING;
    public static final java.lang.String POWER_RADIO_ACTIVE;
    public static final java.lang.String POWER_SCREEN_FULL;
    public static final java.lang.String POWER_AUDIO;
    public static final java.lang.String POWER_VIDEO;
    public static final java.lang.String POWER_FLASHLIGHT;
    public static final java.lang.String POWER_CPU_SPEEDS;
    public static final java.lang.String POWER_WIFI_BATCHED_SCAN;
    public static final java.lang.String POWER_BATTERY_CAPACITY;
    static final java.util.HashMap sPowerMap;
    private static final java.lang.String TAG_DEVICE;
    private static final java.lang.String TAG_ITEM;
    private static final java.lang.String TAG_ARRAY;
    private static final java.lang.String TAG_ARRAYITEM;
    private static final java.lang.String ATTR_NAME;

    public void <init>(android.content.Context)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.Context r1;
        java.util.HashMap $r2;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.os.PowerProfile: void readPowerValuesFromXml(android.content.Context)>(r1);

     label1:
        return;
    }

    private void readPowerValuesFromXml(android.content.Context)
    {
        com.android.internal.os.PowerProfile r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3;
        android.content.res.XmlResourceParser r2;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        java.util.ArrayList r3, $r11;
        java.lang.String r4, r5, r6, r7;
        double d0;
        java.lang.Throwable r9, $r29;
        android.content.res.Resources $r10;
        java.lang.Double $r12, $r13, $r16;
        java.util.HashMap $r14, $r17, $r19;
        java.lang.Double[] $r20, $r24;
        java.lang.Object[] $r21, $r22;
        org.xmlpull.v1.XmlPullParserException $r25, r31;
        java.lang.RuntimeException $r26, $r28;
        java.io.IOException $r27, r32;
        java.lang.NumberFormatException $r30;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: android.content.Context;

        i0 = 17891342;

        $r10 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        z0 = 0;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        r4 = null;

     label01:
        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r2, "device");

     label02:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r2);

        r5 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        if r5 != null goto label03;

        goto label14;

     label03:
        if z0 == 0 goto label04;

        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z6 != 0 goto label04;

        $r17 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r20 = newarray (java.lang.Double)[$i2];

        $r21 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r21);

        z0 = 0;

     label04:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("array");

        if $z2 == 0 goto label05;

        z0 = 1;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        r4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        goto label13;

     label05:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 != 0 goto label06;

        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z5 == 0 goto label13;

     label06:
        r6 = null;

        if z0 != 0 goto label07;

        r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label07:
        $i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if $i1 != 4 goto label13;

        r7 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getText()>();

        d0 = 0.0;

     label08:
        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r7);

        d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

     label09:
        goto label11;

     label10:
        $r30 := @caughtexception;

     label11:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z3 == 0 goto label12;

        $r14 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r16);

        goto label13;

     label12:
        if z0 == 0 goto label13;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label13:
        goto label02;

     label14:
        if z0 == 0 goto label15;

        $r19 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r24 = newarray (java.lang.Double)[$i3];

        $r22 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r22);

     label15:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label20;

     label16:
        $r25 := @caughtexception;

        r31 = $r25;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r31);

        throw $r26;

     label17:
        $r27 := @caughtexception;

        r32 = $r27;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r32);

        throw $r28;

     label18:
        $r29 := @caughtexception;

        r9 = $r29;

     label19:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r9;

     label20:
        return;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label15 with label16;
        catch java.io.IOException from label01 to label15 with label17;
        catch java.lang.Throwable from label01 to label15 with label18;
        catch java.lang.Throwable from label16 to label19 with label18;
    }

    public double getAveragePower(java.lang.String)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        java.lang.Object r2, $r6;
        java.util.HashMap $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Double $r7, $r10;
        double $d0, $d1;
        java.lang.Double[] $r8, $r9;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        $r3 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r2 instanceof java.lang.Double[];

        if $z1 == 0 goto label1;

        $r8 = (java.lang.Double[]) r2;

        $r9 = (java.lang.Double[]) $r8;

        $r10 = $r9[0];

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        return $d1;

     label1:
        $r5 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.lang.Double) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        return $d0;

     label2:
        return 0.0;
    }

    public double getAveragePower(java.lang.String, int)
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        java.lang.Double[] r3, $r7;
        java.util.HashMap $r4, $r5;
        boolean $z0, $z1;
        java.lang.Double $r6, $r8, $r9;
        double $d0, $d1, $d2;

        r0 := @this: com.android.internal.os.PowerProfile;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r5 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r2 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r2 instanceof java.lang.Double[];

        if $z1 == 0 goto label3;

        $r7 = (java.lang.Double[]) r2;

        r3 = (java.lang.Double[]) $r7;

        $i1 = lengthof r3;

        if $i1 <= i0 goto label1;

        if i0 < 0 goto label1;

        $r9 = r3[i0];

        $d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        return $d2;

     label1:
        if i0 >= 0 goto label2;

        return 0.0;

     label2:
        $i2 = lengthof r3;

        $i3 = $i2 - 1;

        $r8 = r3[$i3];

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        return $d1;

     label3:
        $r6 = (java.lang.Double) r2;

        $d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        return $d0;

     label4:
        return 0.0;
    }

    public double getBatteryCapacity()
    {
        com.android.internal.os.PowerProfile r0;
        double $d0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $d0 = virtualinvoke r0.<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>("battery.capacity");

        return $d0;
    }

    public int getNumSpeedSteps()
    {
        com.android.internal.os.PowerProfile r0;
        java.lang.Object r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.Double[] $r3, $r4;
        int $i0;

        r0 := @this: com.android.internal.os.PowerProfile;

        $r2 = <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap>;

        r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cpu.speeds");

        if r1 == null goto label1;

        $z0 = r1 instanceof java.lang.Double[];

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Double[]) r1;

        $r4 = (java.lang.Double[]) $r3;

        $i0 = lengthof $r4;

        return $i0;

     label1:
        return 1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.android.internal.os.PowerProfile: java.lang.String ATTR_NAME> = "name";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAYITEM> = "value";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ARRAY> = "array";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_ITEM> = "item";

        <com.android.internal.os.PowerProfile: java.lang.String TAG_DEVICE> = "device";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BATTERY_CAPACITY> = "battery.capacity";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_BATCHED_SCAN> = "wifi.batchedscan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_SPEEDS> = "cpu.speeds";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_FLASHLIGHT> = "camera.flashlight";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_VIDEO> = "dsp.video";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_AUDIO> = "dsp.audio";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_FULL> = "screen.full";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ACTIVE> = "radio.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_SCANNING> = "radio.scanning";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_RADIO_ON> = "radio.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_SCREEN_ON> = "screen.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_AT_CMD> = "bluetooth.at";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ACTIVE> = "bluetooth.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_BLUETOOTH_ON> = "bluetooth.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_GPS_ON> = "gps.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ACTIVE> = "wifi.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_ON> = "wifi.on";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_WIFI_SCAN> = "wifi.scan";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_ACTIVE> = "cpu.active";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_AWAKE> = "cpu.awake";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_CPU_IDLE> = "cpu.idle";

        <com.android.internal.os.PowerProfile: java.lang.String POWER_NONE> = "none";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.internal.os.PowerProfile: java.util.HashMap sPowerMap> = $r0;

        return;
    }
}
