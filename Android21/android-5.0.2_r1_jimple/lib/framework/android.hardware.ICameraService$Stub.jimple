public abstract class android.hardware.ICameraService$Stub extends android.os.Binder implements android.hardware.ICameraService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getNumberOfCameras;
    static final int TRANSACTION_getCameraInfo;
    static final int TRANSACTION_connect;
    static final int TRANSACTION_connectPro;
    static final int TRANSACTION_connectDevice;
    static final int TRANSACTION_addListener;
    static final int TRANSACTION_removeListener;
    static final int TRANSACTION_getCameraCharacteristics;
    static final int TRANSACTION_getCameraVendorTagDescriptor;
    static final int TRANSACTION_getLegacyParameters;
    static final int TRANSACTION_supportsCameraApi;
    static final int TRANSACTION_connectLegacy;

    public void <init>()
    {
        android.hardware.ICameraService$Stub r0;

        r0 := @this: android.hardware.ICameraService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.ICameraService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.ICameraService");

        return;
    }

    public static android.hardware.ICameraService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.ICameraService$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.ICameraService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.ICameraService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.ICameraService;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.ICameraService) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.ICameraService$Stub$Proxy;

        specialinvoke $r2.<android.hardware.ICameraService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.ICameraService$Stub r0;

        r0 := @this: android.hardware.ICameraService$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.ICameraService$Stub r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        android.os.Parcel r1, r2;
        android.hardware.CameraInfo r3, $r16;
        android.hardware.camera2.utils.BinderHolder r4, $r6, $r7, $r12, $r15, $r17, r22, r25, r29, r33;
        android.os.IBinder $r5, $r9, $r10, $r11, $r13, $r14;
        android.hardware.camera2.impl.CameraMetadataNative $r8, r28;
        boolean $z0;
        android.hardware.ICameraClient r18, r31;
        java.lang.String r19, r21, r24, r32;
        android.hardware.IProCameraCallbacks r20;
        android.hardware.camera2.ICameraDeviceCallbacks r23;
        android.hardware.ICameraServiceListener r26, r27;
        java.lang.String[] r30;

        r0 := @this: android.hardware.ICameraService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label12;
            case 6: goto label15;
            case 7: goto label16;
            case 8: goto label17;
            case 9: goto label20;
            case 10: goto label23;
            case 11: goto label26;
            case 12: goto label27;
            case 1598968902: goto label01;
            default: goto label30;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.ICameraService");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        i2 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int getNumberOfCameras()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r16 = new android.hardware.CameraInfo;

        specialinvoke $r16.<android.hardware.CameraInfo: void <init>()>();

        r3 = $r16;

        i3 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int getCameraInfo(int,android.hardware.CameraInfo)>(i7, r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        if r3 == null goto label04;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.hardware.CameraInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label05;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label05:
        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r14 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r18 = staticinvoke <android.hardware.ICameraClient$Stub: android.hardware.ICameraClient asInterface(android.os.IBinder)>($r14);

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r19 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r17 = new android.hardware.camera2.utils.BinderHolder;

        specialinvoke $r17.<android.hardware.camera2.utils.BinderHolder: void <init>()>();

        r4 = $r17;

        i5 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int connect(android.hardware.ICameraClient,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>(r18, i8, r19, i4, r4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i5);

        if r4 == null goto label07;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label08;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r20 = staticinvoke <android.hardware.IProCameraCallbacks$Stub: android.hardware.IProCameraCallbacks asInterface(android.os.IBinder)>($r13);

        i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r21 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r15 = new android.hardware.camera2.utils.BinderHolder;

        specialinvoke $r15.<android.hardware.camera2.utils.BinderHolder: void <init>()>();

        r22 = $r15;

        i11 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int connectPro(android.hardware.IProCameraCallbacks,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>(r20, i9, r21, i10, r22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i11);

        if r22 == null goto label10;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r22.<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label11;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r23 = staticinvoke <android.hardware.camera2.ICameraDeviceCallbacks$Stub: android.hardware.camera2.ICameraDeviceCallbacks asInterface(android.os.IBinder)>($r11);

        i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r24 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r12 = new android.hardware.camera2.utils.BinderHolder;

        specialinvoke $r12.<android.hardware.camera2.utils.BinderHolder: void <init>()>();

        r25 = $r12;

        i14 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int connectDevice(android.hardware.camera2.ICameraDeviceCallbacks,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>(r23, i12, r24, i13, r25);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i14);

        if r25 == null goto label13;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r25.<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label14;

     label13:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        return 1;

     label15:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r26 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener asInterface(android.os.IBinder)>($r10);

        i15 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int addListener(android.hardware.ICameraServiceListener)>(r26);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i15);

        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r27 = staticinvoke <android.hardware.ICameraServiceListener$Stub: android.hardware.ICameraServiceListener asInterface(android.os.IBinder)>($r9);

        i16 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int removeListener(android.hardware.ICameraServiceListener)>(r27);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i16);

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = new android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke $r8.<android.hardware.camera2.impl.CameraMetadataNative: void <init>()>();

        r28 = $r8;

        i18 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int getCameraCharacteristics(int,android.hardware.camera2.impl.CameraMetadataNative)>(i17, r28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i18);

        if r28 == null goto label18;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r28.<android.hardware.camera2.impl.CameraMetadataNative: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label19;

     label18:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        return 1;

     label20:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r7 = new android.hardware.camera2.utils.BinderHolder;

        specialinvoke $r7.<android.hardware.camera2.utils.BinderHolder: void <init>()>();

        r29 = $r7;

        i19 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int getCameraVendorTagDescriptor(android.hardware.camera2.utils.BinderHolder)>(r29);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i19);

        if r29 == null goto label21;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r29.<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label22;

     label21:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label22:
        return 1;

     label23:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i21 >= 0 goto label24;

        r30 = null;

        goto label25;

     label24:
        r30 = newarray (java.lang.String)[i21];

     label25:
        i22 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int getLegacyParameters(int,java.lang.String[])>(i20, r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i22);

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r30);

        return 1;

     label26:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i25 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int supportsCameraApi(int,int)>(i23, i24);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i25);

        return 1;

     label27:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.ICameraService");

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r31 = staticinvoke <android.hardware.ICameraClient$Stub: android.hardware.ICameraClient asInterface(android.os.IBinder)>($r5);

        i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r32 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = new android.hardware.camera2.utils.BinderHolder;

        specialinvoke $r6.<android.hardware.camera2.utils.BinderHolder: void <init>()>();

        r33 = $r6;

        i6 = virtualinvoke r0.<android.hardware.ICameraService$Stub: int connectLegacy(android.hardware.ICameraClient,int,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>(r31, i26, i27, r32, i28, r33);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i6);

        if r33 == null goto label28;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r33.<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label29;

     label28:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label29:
        return 1;

     label30:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.hardware.ICameraService$Stub: int TRANSACTION_connectLegacy> = 12;

        <android.hardware.ICameraService$Stub: int TRANSACTION_supportsCameraApi> = 11;

        <android.hardware.ICameraService$Stub: int TRANSACTION_getLegacyParameters> = 10;

        <android.hardware.ICameraService$Stub: int TRANSACTION_getCameraVendorTagDescriptor> = 9;

        <android.hardware.ICameraService$Stub: int TRANSACTION_getCameraCharacteristics> = 8;

        <android.hardware.ICameraService$Stub: int TRANSACTION_removeListener> = 7;

        <android.hardware.ICameraService$Stub: int TRANSACTION_addListener> = 6;

        <android.hardware.ICameraService$Stub: int TRANSACTION_connectDevice> = 5;

        <android.hardware.ICameraService$Stub: int TRANSACTION_connectPro> = 4;

        <android.hardware.ICameraService$Stub: int TRANSACTION_connect> = 3;

        <android.hardware.ICameraService$Stub: int TRANSACTION_getCameraInfo> = 2;

        <android.hardware.ICameraService$Stub: int TRANSACTION_getNumberOfCameras> = 1;

        <android.hardware.ICameraService$Stub: java.lang.String DESCRIPTOR> = "android.hardware.ICameraService";

        return;
    }
}
