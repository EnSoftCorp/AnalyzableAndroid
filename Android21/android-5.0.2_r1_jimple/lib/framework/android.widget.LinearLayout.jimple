public class android.widget.LinearLayout extends android.view.ViewGroup
{
    public static final int HORIZONTAL;
    public static final int VERTICAL;
    public static final int SHOW_DIVIDER_NONE;
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_END;
    private boolean mBaselineAligned;
    private int mBaselineAlignedChildIndex;
    private int mBaselineChildTop;
    private int mOrientation;
    private int mGravity;
    private int mTotalLength;
    private float mWeightSum;
    private boolean mUseLargestChild;
    private int[] mMaxAscent;
    private int[] mMaxDescent;
    private static final int VERTICAL_GRAVITY_COUNT;
    private static final int INDEX_CENTER_VERTICAL;
    private static final int INDEX_TOP;
    private static final int INDEX_BOTTOM;
    private static final int INDEX_FILL;
    private android.graphics.drawable.Drawable mDivider;
    private int mDividerWidth;
    private int mDividerHeight;
    private int mShowDividers;
    private int mDividerPadding;

    public void <init>(android.content.Context)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.LinearLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        android.content.res.TypedArray r3;
        boolean z0, $z1;
        int[] $r4;
        float $f0;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = 1;

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = -1;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = 0;

        r0.<android.widget.LinearLayout: int mGravity> = 8388659;

        $r4 = <com.android.internal.R$styleable: int[] LinearLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, i0, i1);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        if i2 < 0 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void setOrientation(int)>(i2);

     label1:
        i6 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, -1);

        if i6 < 0 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void setGravity(int)>(i6);

     label2:
        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        if z0 != 0 goto label3;

        virtualinvoke r0.<android.widget.LinearLayout: void setBaselineAligned(boolean)>(z0);

     label3:
        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(4, -1.0F);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f0;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = $i3;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = $z1;

        $r5 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(5);

        virtualinvoke r0.<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>($r5);

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r0.<android.widget.LinearLayout: int mShowDividers> = $i4;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, 0);

        r0.<android.widget.LinearLayout: int mDividerPadding> = $i5;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setShowDividers(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mShowDividers>;

        if i0 == $i1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        r0.<android.widget.LinearLayout: int mShowDividers> = i0;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.widget.LinearLayout r0;

        r0 := @this: android.widget.LinearLayout;

        return 0;
    }

    public int getShowDividers()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mShowDividers>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getDividerDrawable()
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        return $r1;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.LinearLayout r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider> = r1;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.LinearLayout: int mDividerWidth> = $i0;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.LinearLayout: int mDividerHeight> = $i1;

        goto label3;

     label2:
        r0.<android.widget.LinearLayout: int mDividerWidth> = 0;

        r0.<android.widget.LinearLayout: int mDividerHeight> = 0;

     label3:
        if r1 != null goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke r0.<android.widget.LinearLayout: void setWillNotDraw(boolean)>($z0);

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public void setDividerPadding(int)
    {
        android.widget.LinearLayout r0;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        r0.<android.widget.LinearLayout: int mDividerPadding> = i0;

        return;
    }

    public int getDividerPadding()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        return $i0;
    }

    public int getDividerWidth()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        return $i0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 1 goto label2;

        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersVertical(android.graphics.Canvas)>(r1);

        goto label3;

     label2:
        virtualinvoke r0.<android.widget.LinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>(r1);

     label3:
        return;
    }

    void drawDividersVertical(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        android.view.View r2, r6;
        android.widget.LinearLayout$LayoutParams r3, r7;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r4, $r5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i1);

        if r2 == null goto label2;

        $i10 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i10 == 8 goto label2;

        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i1);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r5;

        $i12 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i11 = r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i13 = $i12 - $i11;

        $i14 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i2 = $i13 - $i14;

        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, i2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z0 == 0 goto label6;

        $i3 = i0 - 1;

        r6 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i3);

        if r6 != null goto label4;

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i8 = $i6 - $i7;

        $i9 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i15 = $i8 - $i9;

        goto label5;

     label4:
        $r4 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.LinearLayout$LayoutParams) $r4;

        $i4 = virtualinvoke r6.<android.view.View: int getBottom()>();

        $i5 = r7.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i15 = $i4 + $i5;

     label5:
        virtualinvoke r0.<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>(r1, i15);

     label6:
        return;
    }

    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        boolean z0, $z1, $z2;
        android.view.View r2, r6;
        android.widget.LinearLayout$LayoutParams r3, r7;
        android.view.ViewGroup$LayoutParams $r4, $r5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label05;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i1);

        if r2 == null goto label04;

        $i14 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i14 == 8 goto label04;

        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i1);

        if $z2 == 0 goto label04;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r5;

        if z0 == 0 goto label02;

        $i20 = virtualinvoke r2.<android.view.View: int getRight()>();

        $i18 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i2 = $i20 + $i18;

        goto label03;

     label02:
        $i15 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i17 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i19 = $i15 - $i17;

        $i16 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i2 = $i19 - $i16;

     label03:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i2);

     label04:
        i1 = i1 + 1;

        goto label01;

     label05:
        $z1 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i0);

        if $z1 == 0 goto label10;

        $i3 = i0 - 1;

        r6 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>($i3);

        if r6 != null goto label07;

        if z0 == 0 goto label06;

        i21 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        goto label09;

     label06:
        $i11 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i10 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i12 = $i11 - $i10;

        $i13 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i21 = $i12 - $i13;

        goto label09;

     label07:
        $r4 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.LinearLayout$LayoutParams) $r4;

        if z0 == 0 goto label08;

        $i7 = virtualinvoke r6.<android.view.View: int getLeft()>();

        $i6 = r7.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i8 = $i7 - $i6;

        $i9 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i21 = $i8 - $i9;

        goto label09;

     label08:
        $i4 = virtualinvoke r6.<android.view.View: int getRight()>();

        $i5 = r7.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i21 = $i4 + $i5;

     label09:
        virtualinvoke r0.<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>(r1, i21);

     label10:
        return;
    }

    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingLeft()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getWidth()>();

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingRight()>();

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i7 - $i6;

        $i8 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i9 = i0 + $i8;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, i0, $i10, $i9);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.widget.LinearLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingTop()>();

        $i2 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i4 = $i1 + $i2;

        $i3 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i5 = i0 + $i3;

        $i6 = virtualinvoke r0.<android.widget.LinearLayout: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.LinearLayout: int getPaddingBottom()>();

        $i9 = $i6 - $i7;

        $i8 = r0.<android.widget.LinearLayout: int mDividerPadding>;

        $i10 = $i9 - $i8;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, $i4, $i5, $i10);

        $r3 = r0.<android.widget.LinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public boolean isBaselineAligned()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        return $z0;
    }

    public void setBaselineAligned(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mBaselineAligned> = z0;

        return;
    }

    public boolean isMeasureWithLargestChildEnabled()
    {
        android.widget.LinearLayout r0;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        $z0 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        return $z0;
    }

    public void setMeasureWithLargestChildEnabled(boolean)
    {
        android.widget.LinearLayout r0;
        boolean z0;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.LinearLayout: boolean mUseLargestChild> = z0;

        return;
    }

    public int getBaseline()
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.RuntimeException $r3, $r4;
        android.widget.LinearLayout$LayoutParams r5;

        r0 := @this: android.widget.LinearLayout;

        $i3 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i3 >= 0 goto label1;

        $i29 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i29;

     label1:
        $i4 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $i5 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i4 > $i5 goto label2;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");

        throw $r4;

     label2:
        $i6 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>($i6);

        i0 = virtualinvoke r1.<android.view.View: int getBaseline()>();

        if i0 != -1 goto label4;

        $i28 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        if $i28 != 0 goto label3;

        return -1;

     label3:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");

        throw $r3;

     label4:
        i1 = r0.<android.widget.LinearLayout: int mBaselineChildTop>;

        $i7 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i7 != 1 goto label7;

        $i12 = r0.<android.widget.LinearLayout: int mGravity>;

        i2 = $i12 & 112;

        if i2 == 48 goto label7;

        lookupswitch(i2)
        {
            case 16: goto label6;
            case 80: goto label5;
            default: goto label7;
        };

     label5:
        $i14 = r0.<android.widget.LinearLayout: int mBottom>;

        $i11 = r0.<android.widget.LinearLayout: int mTop>;

        $i16 = $i14 - $i11;

        $i13 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i18 = $i16 - $i13;

        $i15 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i1 = $i18 - $i15;

        goto label7;

     label6:
        $i20 = r0.<android.widget.LinearLayout: int mBottom>;

        $i17 = r0.<android.widget.LinearLayout: int mTop>;

        $i22 = $i20 - $i17;

        $i19 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i24 = $i22 - $i19;

        $i21 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i26 = $i24 - $i21;

        $i23 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i25 = $i26 - $i23;

        $i27 = $i25 / 2;

        i1 = i1 + $i27;

     label7:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i8 = r5.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i9 = i1 + $i8;

        $i10 = $i9 + i0;

        return $i10;
    }

    public int getBaselineAlignedChildIndex()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        return $i0;
    }

    public void setBaselineAlignedChildIndex(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");

        $i1 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex> = i0;

        return;
    }

    android.view.View getVirtualChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0;
        android.view.View $r1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i0);

        return $r1;
    }

    int getVirtualChildCount()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        return $i0;
    }

    public float getWeightSum()
    {
        android.widget.LinearLayout r0;
        float $f0;

        r0 := @this: android.widget.LinearLayout;

        $f0 = r0.<android.widget.LinearLayout: float mWeightSum>;

        return $f0;
    }

    public void setWeightSum(float)
    {
        android.widget.LinearLayout r0;
        float f0, $f1;

        r0 := @this: android.widget.LinearLayout;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, f0);

        r0.<android.widget.LinearLayout: float mWeightSum> = $f1;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i2 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void measureVertical(int,int)>(i0, i1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void measureHorizontal(int,int)>(i0, i1);

     label2:
        return;
    }

    protected boolean hasDividerBeforeChildAt(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2;
        android.view.View $r1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        if i0 != 0 goto label03;

        $i8 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        return $z2;

     label03:
        $i2 = virtualinvoke r0.<android.widget.LinearLayout: int getChildCount()>();

        if i0 != $i2 goto label06;

        $i6 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i7 = $i6 & 4;

        if $i7 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        return $z1;

     label06:
        $i3 = r0.<android.widget.LinearLayout: int mShowDividers>;

        $i4 = $i3 & 2;

        if $i4 == 0 goto label10;

        z0 = 0;

        i1 = i0 - 1;

     label07:
        if i1 < 0 goto label09;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i1);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label08;

        z0 = 1;

        goto label09;

     label08:
        i1 = i1 + -1;

        goto label07;

     label09:
        return z0;

     label10:
        return 0;
    }

    void measureVertical(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i113, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13;
        android.widget.LinearLayout$LayoutParams r1, r3, r10, r13;
        android.view.View r2, r9, r11, r12;
        byte $b26, $b39, $b68, $b75, $b101, $b112, $b114, $b122, $b123;
        android.view.ViewGroup$LayoutParams $r4, $r5, $r6, $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        z0 = 1;

        f0 = 0.0F;

        i6 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        z2 = 0;

        i9 = r0.<android.widget.LinearLayout: int mBaselineAlignedChildIndex>;

        z3 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        i11 = -2147483648;

        i10 = 0;

     label01:
        if i10 >= i6 goto label23;

        r2 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i10);

        if r2 != null goto label02;

        $i130 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i131 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i10);

        $i129 = $i130 + $i131;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i129;

        goto label22;

     label02:
        $i100 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i100 != 8 goto label03;

        $i126 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r2, i10);

        i10 = i10 + $i126;

        goto label22;

     label03:
        $z7 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i10);

        if $z7 == 0 goto label04;

        $i128 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i127 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i125 = $i128 + $i127;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i125;

     label04:
        $r7 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.LinearLayout$LayoutParams) $r7;

        $f7 = r1.<android.widget.LinearLayout$LayoutParams: float weight>;

        f0 = f0 + $f7;

        if i8 != 1073741824 goto label05;

        $i115 = r1.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i115 != 0 goto label05;

        $f10 = r1.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b114 = $f10 cmpl 0.0F;

        if $b114 <= 0 goto label05;

        i13 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i113 = r1.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i118 = i13 + $i113;

        $i119 = r1.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i117 = $i118 + $i119;

        $i116 = staticinvoke <java.lang.Math: int max(int,int)>(i13, $i117);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i116;

        z2 = 1;

        goto label10;

     label05:
        i132 = -2147483648;

        $i102 = r1.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i102 != 0 goto label06;

        $f11 = r1.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b123 = $f11 cmpl 0.0F;

        if $b123 <= 0 goto label06;

        i132 = 0;

        r1.<android.widget.LinearLayout$LayoutParams: int height> = -2;

     label06:
        $b101 = f0 cmpl 0.0F;

        if $b101 != 0 goto label07;

        $i124 = r0.<android.widget.LinearLayout: int mTotalLength>;

        goto label08;

     label07:
        $i124 = 0;

     label08:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r2, i10, i0, 0, i1, $i124);

        if i132 == -2147483648 goto label09;

        r1.<android.widget.LinearLayout$LayoutParams: int height> = i132;

     label09:
        i12 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        i14 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i93 = i14 + i12;

        $i103 = r1.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i95 = $i93 + $i103;

        $i92 = r1.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i94 = $i95 + $i92;

        $i97 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r2);

        $i96 = $i94 + $i97;

        $i99 = staticinvoke <java.lang.Math: int max(int,int)>(i14, $i96);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i99;

        if z3 == 0 goto label10;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i12, i11);

     label10:
        if i9 < 0 goto label11;

        $i121 = i10 + 1;

        if i9 != $i121 goto label11;

        $i120 = r0.<android.widget.LinearLayout: int mTotalLength>;

        r0.<android.widget.LinearLayout: int mBaselineChildTop> = $i120;

     label11:
        if i10 >= i9 goto label12;

        $f8 = r1.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b122 = $f8 cmpl 0.0F;

        if $b122 <= 0 goto label12;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");

        throw $r8;

     label12:
        z9 = 0;

        if i7 == 1073741824 goto label13;

        $i108 = r1.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i108 != -1 goto label13;

        z1 = 1;

        z9 = 1;

     label13:
        $i109 = r1.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i98 = r1.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i133 = $i109 + $i98;

        $i110 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i134 = $i110 + i133;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i134);

        $i111 = virtualinvoke r2.<android.view.View: int getMeasuredState()>();

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i111);

        if z0 == 0 goto label14;

        $i107 = r1.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i107 != -1 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        z0 = $z8;

        $f9 = r1.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b112 = $f9 cmpl 0.0F;

        if $b112 <= 0 goto label18;

        if z9 == 0 goto label16;

        $i106 = i133;

        goto label17;

     label16:
        $i106 = i134;

     label17:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i106);

        goto label21;

     label18:
        if z9 == 0 goto label19;

        $i105 = i133;

        goto label20;

     label19:
        $i105 = i134;

     label20:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i105);

     label21:
        $i104 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r2, i10);

        i10 = i10 + $i104;

     label22:
        i10 = i10 + 1;

        goto label01;

     label23:
        $i21 = r0.<android.widget.LinearLayout: int mTotalLength>;

        if $i21 <= 0 goto label24;

        $z6 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i6);

        if $z6 == 0 goto label24;

        $i87 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i88 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        $i86 = $i87 + $i88;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i86;

     label24:
        if z3 == 0 goto label30;

        if i8 == -2147483648 goto label25;

        if i8 != 0 goto label30;

     label25:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i135 = 0;

     label26:
        if i135 >= i6 goto label30;

        r9 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i135);

        if r9 != null goto label27;

        $i91 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i90 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i135);

        $i89 = $i91 + $i90;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i89;

        goto label29;

     label27:
        $i73 = virtualinvoke r9.<android.view.View: int getVisibility()>();

        if $i73 != 8 goto label28;

        $i78 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r9, i135);

        i135 = i135 + $i78;

        goto label29;

     label28:
        $r6 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r10 = (android.widget.LinearLayout$LayoutParams) $r6;

        i136 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i85 = i136 + i11;

        $i72 = r10.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i83 = $i85 + $i72;

        $i84 = r10.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i82 = $i83 + $i84;

        $i81 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r9);

        $i80 = $i82 + $i81;

        $i79 = staticinvoke <java.lang.Math: int max(int,int)>(i136, $i80);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i79;

     label29:
        i135 = i135 + 1;

        goto label26;

     label30:
        $i24 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i19 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i22 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i20 = $i19 + $i22;

        $i25 = $i24 + $i20;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i25;

        i137 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i23 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        i138 = staticinvoke <java.lang.Math: int max(int,int)>(i137, $i23);

        i139 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>(i138, i1, 0);

        i140 = i139 & 16777215;

        $i27 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i141 = i140 - $i27;

        if z2 != 0 goto label31;

        if i141 == 0 goto label51;

        $b75 = f0 cmpl 0.0F;

        if $b75 <= 0 goto label51;

     label31:
        $f2 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b26 = $f2 cmpl 0.0F;

        if $b26 <= 0 goto label32;

        $f6 = r0.<android.widget.LinearLayout: float mWeightSum>;

        goto label33;

     label32:
        $f6 = f0;

     label33:
        f12 = $f6;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i142 = 0;

     label34:
        if i142 >= i6 goto label50;

        r11 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i142);

        $i40 = virtualinvoke r11.<android.view.View: int getVisibility()>();

        if $i40 != 8 goto label35;

        goto label49;

     label35:
        $r4 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r4;

        f1 = r3.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b39 = f1 cmpl 0.0F;

        if $b39 <= 0 goto label42;

        $f3 = (float) i141;

        $f4 = f1 * $f3;

        $f5 = $f4 / f12;

        i15 = (int) $f5;

        f12 = f12 - f1;

        i141 = i141 - i15;

        $i61 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i59 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i56 = $i61 + $i59;

        $i60 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i58 = $i56 + $i60;

        $i55 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i65 = $i58 + $i55;

        $i57 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        i17 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i0, $i65, $i57);

        $i67 = r3.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i67 != 0 goto label36;

        if i8 == 1073741824 goto label38;

     label36:
        $i66 = virtualinvoke r11.<android.view.View: int getMeasuredHeight()>();

        i16 = $i66 + i15;

        if i16 >= 0 goto label37;

        i16 = 0;

     label37:
        $i63 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i16, 1073741824);

        virtualinvoke r11.<android.view.View: void measure(int,int)>(i17, $i63);

        goto label41;

     label38:
        if i15 <= 0 goto label39;

        $i71 = i15;

        goto label40;

     label39:
        $i71 = 0;

     label40:
        $i70 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i71, 1073741824);

        virtualinvoke r11.<android.view.View: void measure(int,int)>(i17, $i70);

     label41:
        $i62 = virtualinvoke r11.<android.view.View: int getMeasuredState()>();

        $i64 = $i62 & -256;

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i64);

     label42:
        $i42 = r3.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i38 = r3.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i143 = $i42 + $i38;

        $i41 = virtualinvoke r11.<android.view.View: int getMeasuredWidth()>();

        i144 = $i41 + i143;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i144);

        if i7 == 1073741824 goto label43;

        $i51 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i51 != -1 goto label43;

        $z4 = 1;

        goto label44;

     label43:
        $z4 = 0;

     label44:
        z10 = $z4;

        if z10 == 0 goto label45;

        $i54 = i143;

        goto label46;

     label45:
        $i54 = i144;

     label46:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i54);

        if z0 == 0 goto label47;

        $i53 = r3.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i53 != -1 goto label47;

        $z5 = 1;

        goto label48;

     label47:
        $z5 = 0;

     label48:
        z0 = $z5;

        i18 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i47 = virtualinvoke r11.<android.view.View: int getMeasuredHeight()>();

        $i49 = i18 + $i47;

        $i48 = r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i43 = $i49 + $i48;

        $i50 = r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i44 = $i43 + $i50;

        $i45 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r11);

        $i46 = $i44 + $i45;

        $i52 = staticinvoke <java.lang.Math: int max(int,int)>(i18, $i46);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i52;

     label49:
        i142 = i142 + 1;

        goto label34;

     label50:
        $i29 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i31 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i30 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i28 = $i31 + $i30;

        $i35 = $i29 + $i28;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i35;

        goto label55;

     label51:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        if z3 == 0 goto label55;

        if i8 == 1073741824 goto label55;

        i145 = 0;

     label52:
        if i145 >= i6 goto label55;

        r12 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i145);

        if r12 == null goto label54;

        $i69 = virtualinvoke r12.<android.view.View: int getVisibility()>();

        if $i69 != 8 goto label53;

        goto label54;

     label53:
        $r5 = virtualinvoke r12.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r13 = (android.widget.LinearLayout$LayoutParams) $r5;

        f13 = r13.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b68 = f13 cmpl 0.0F;

        if $b68 <= 0 goto label54;

        $i76 = virtualinvoke r12.<android.view.View: int getMeasuredWidth()>();

        $i77 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i76, 1073741824);

        $i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i11, 1073741824);

        virtualinvoke r12.<android.view.View: void measure(int,int)>($i77, $i74);

     label54:
        i145 = i145 + 1;

        goto label52;

     label55:
        if z0 != 0 goto label56;

        if i7 == 1073741824 goto label56;

        i2 = i4;

     label56:
        $i33 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i34 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i32 = $i33 + $i34;

        i146 = i2 + $i32;

        $i37 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        i147 = staticinvoke <java.lang.Math: int max(int,int)>(i146, $i37);

        $i36 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>(i147, i0, i3);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i36, i139);

        if z1 == 0 goto label57;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformWidth(int,int)>(i6, i1);

     label57:
        return;
    }

    private void forceUniformWidth(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredWidth()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i3);

        $i6 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i6 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i7 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i7 != -1 goto label2;

        i4 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        r2.<android.widget.LinearLayout$LayoutParams: int height> = $i8;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i2, 0, i1, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int height> = i4;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    void measureHorizontal(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i123, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i205, $i206, $i207, $i208, $i210, $i211, $i212, $i213, $i214, $i215, $i216, i217, i218, i219, i220, i221, i222, i223, i224, i225, i226, i227, i228, i229, i230, i231, i232, i233, i234, i235, i236, i237, i238, i239;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12;
        int[] r1, r2, $r5, $r6, $r7, $r12;
        android.view.View r3, r13, r15, r17;
        android.widget.LinearLayout$LayoutParams r4, r14, r16, r18;
        byte $b43, $b79, $b122, $b124, $b171, $b179, $b204, $b209;
        android.view.ViewGroup$LayoutParams $r8, $r9, $r10, $r11;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        z0 = 1;

        f0 = 0.0F;

        i6 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        z2 = 0;

        $r7 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        if $r7 == null goto label01;

        $r12 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        if $r12 != null goto label02;

     label01:
        $r5 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxAscent> = $r5;

        $r6 = newarray (int)[4];

        r0.<android.widget.LinearLayout: int[] mMaxDescent> = $r6;

     label02:
        r1 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        z4 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        z3 = r0.<android.widget.LinearLayout: boolean mUseLargestChild>;

        if i7 != 1073741824 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        z5 = $z11;

        i9 = -2147483648;

        i10 = 0;

     label05:
        if i10 >= i6 goto label33;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i10);

        if r3 != null goto label06;

        $i202 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i201 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i10);

        $i200 = $i202 + $i201;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i200;

        goto label32;

     label06:
        $i147 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i147 != 8 goto label07;

        $i203 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i10);

        i10 = i10 + $i203;

        goto label32;

     label07:
        $z8 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i10);

        if $z8 == 0 goto label08;

        $i197 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i198 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i196 = $i197 + $i198;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i196;

     label08:
        $r11 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.LinearLayout$LayoutParams) $r11;

        $f6 = r4.<android.widget.LinearLayout$LayoutParams: float weight>;

        f0 = f0 + $f6;

        if i7 != 1073741824 goto label12;

        $i205 = r4.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i205 != 0 goto label12;

        $f9 = r4.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b209 = $f9 cmpl 0.0F;

        if $b209 <= 0 goto label12;

        if z5 == 0 goto label09;

        $i214 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i216 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i215 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i213 = $i216 + $i215;

        $i199 = $i214 + $i213;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i199;

        goto label10;

     label09:
        i11 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i207 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i211 = i11 + $i207;

        $i208 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i212 = $i211 + $i208;

        $i210 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i212);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i210;

     label10:
        if z4 == 0 goto label11;

        i217 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r3.<android.view.View: void measure(int,int)>(i217, i217);

        goto label19;

     label11:
        z2 = 1;

        goto label19;

     label12:
        i218 = -2147483648;

        $i170 = r4.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i170 != 0 goto label13;

        $f8 = r4.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b204 = $f8 cmpl 0.0F;

        if $b204 <= 0 goto label13;

        i218 = 0;

        r4.<android.widget.LinearLayout$LayoutParams: int width> = -2;

     label13:
        $b171 = f0 cmpl 0.0F;

        if $b171 != 0 goto label14;

        $i206 = r0.<android.widget.LinearLayout: int mTotalLength>;

        goto label15;

     label14:
        $i206 = 0;

     label15:
        virtualinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r3, i10, i0, $i206, i1, 0);

        if i218 == -2147483648 goto label16;

        r4.<android.widget.LinearLayout$LayoutParams: int width> = i218;

     label16:
        i13 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        if z5 == 0 goto label17;

        $i186 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i187 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i185 = i13 + $i187;

        $i188 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i183 = $i185 + $i188;

        $i184 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i181 = $i183 + $i184;

        $i182 = $i186 + $i181;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i182;

        goto label18;

     label17:
        i12 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i168 = i12 + i13;

        $i167 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i163 = $i168 + $i167;

        $i169 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i164 = $i163 + $i169;

        $i165 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i166 = $i164 + $i165;

        $i159 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i166);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i159;

     label18:
        if z3 == 0 goto label19;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i13, i9);

     label19:
        z12 = 0;

        if i8 == 1073741824 goto label20;

        $i189 = r4.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i189 != -1 goto label20;

        z1 = 1;

        z12 = 1;

     label20:
        $i161 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i160 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i219 = $i161 + $i160;

        $i162 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i220 = $i162 + i219;

        $i180 = virtualinvoke r3.<android.view.View: int getMeasuredState()>();

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i180);

        if z4 == 0 goto label23;

        i15 = virtualinvoke r3.<android.view.View: int getBaseline()>();

        if i15 == -1 goto label23;

        $i174 = r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i174 >= 0 goto label21;

        $i173 = r0.<android.widget.LinearLayout: int mGravity>;

        goto label22;

     label21:
        $i173 = r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

     label22:
        i14 = $i173 & 112;

        $i172 = i14 >> 4;

        $i194 = $i172 & -2;

        i17 = $i194 >> 1;

        $i195 = r1[i17];

        $i192 = staticinvoke <java.lang.Math: int max(int,int)>($i195, i15);

        r1[i17] = $i192;

        $i190 = r2[i17];

        $i193 = i220 - i15;

        $i191 = staticinvoke <java.lang.Math: int max(int,int)>($i190, $i193);

        r2[i17] = $i191;

     label23:
        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i220);

        if z0 == 0 goto label24;

        $i175 = r4.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i175 != -1 goto label24;

        $z10 = 1;

        goto label25;

     label24:
        $z10 = 0;

     label25:
        z0 = $z10;

        $f7 = r4.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b179 = $f7 cmpl 0.0F;

        if $b179 <= 0 goto label28;

        if z12 == 0 goto label26;

        $i176 = i219;

        goto label27;

     label26:
        $i176 = i220;

     label27:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i176);

        goto label31;

     label28:
        if z12 == 0 goto label29;

        $i177 = i219;

        goto label30;

     label29:
        $i177 = i220;

     label30:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i177);

     label31:
        $i178 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i10);

        i10 = i10 + $i178;

     label32:
        i10 = i10 + 1;

        goto label05;

     label33:
        $i24 = r0.<android.widget.LinearLayout: int mTotalLength>;

        if $i24 <= 0 goto label34;

        $z9 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i6);

        if $z9 == 0 goto label34;

        $i149 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i150 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        $i146 = $i149 + $i150;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i146;

     label34:
        $i25 = r1[1];

        if $i25 != -1 goto label35;

        $i154 = r1[0];

        if $i154 != -1 goto label35;

        $i153 = r1[2];

        if $i153 != -1 goto label35;

        $i148 = r1[3];

        if $i148 == -1 goto label36;

     label35:
        $i28 = r1[3];

        $i29 = r1[0];

        $i23 = r1[1];

        $i22 = r1[2];

        $i26 = staticinvoke <java.lang.Math: int max(int,int)>($i23, $i22);

        $i27 = staticinvoke <java.lang.Math: int max(int,int)>($i29, $i26);

        i221 = staticinvoke <java.lang.Math: int max(int,int)>($i28, $i27);

        $i30 = r2[3];

        $i35 = r2[0];

        $i31 = r2[1];

        $i32 = r2[2];

        $i34 = staticinvoke <java.lang.Math: int max(int,int)>($i31, $i32);

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>($i35, $i34);

        i222 = staticinvoke <java.lang.Math: int max(int,int)>($i30, $i33);

        $i38 = i221 + i222;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i38);

     label36:
        if z3 == 0 goto label43;

        if i7 == -2147483648 goto label37;

        if i7 != 0 goto label43;

     label37:
        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i223 = 0;

     label38:
        if i223 >= i6 goto label43;

        r13 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i223);

        if r13 != null goto label39;

        $i157 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i152 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i223);

        $i151 = $i157 + $i152;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i151;

        goto label42;

     label39:
        $i141 = virtualinvoke r13.<android.view.View: int getVisibility()>();

        if $i141 != 8 goto label40;

        $i158 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r13, i223);

        i223 = i223 + $i158;

        goto label42;

     label40:
        $r10 = virtualinvoke r13.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r14 = (android.widget.LinearLayout$LayoutParams) $r10;

        if z5 == 0 goto label41;

        $i138 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i131 = r14.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i137 = i9 + $i131;

        $i132 = r14.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i135 = $i137 + $i132;

        $i136 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r13);

        $i156 = $i135 + $i136;

        $i155 = $i138 + $i156;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i155;

        goto label42;

     label41:
        i224 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i140 = i224 + i9;

        $i139 = r14.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i145 = $i140 + $i139;

        $i144 = r14.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i142 = $i145 + $i144;

        $i143 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r13);

        $i133 = $i142 + $i143;

        $i134 = staticinvoke <java.lang.Math: int max(int,int)>(i224, $i133);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i134;

     label42:
        i223 = i223 + 1;

        goto label38;

     label43:
        $i41 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i36 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i37 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i42 = $i36 + $i37;

        $i40 = $i41 + $i42;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i40;

        i225 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i39 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumWidth()>();

        i226 = staticinvoke <java.lang.Math: int max(int,int)>(i225, $i39);

        i227 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>(i226, i0, 0);

        i228 = i227 & 16777215;

        $i47 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i229 = i228 - $i47;

        if z2 != 0 goto label44;

        if i229 == 0 goto label70;

        $b124 = f0 cmpl 0.0F;

        if $b124 <= 0 goto label70;

     label44:
        $f1 = r0.<android.widget.LinearLayout: float mWeightSum>;

        $b43 = $f1 cmpl 0.0F;

        if $b43 <= 0 goto label45;

        $f5 = r0.<android.widget.LinearLayout: float mWeightSum>;

        goto label46;

     label45:
        $f5 = f0;

     label46:
        f10 = $f5;

        r1[3] = -1;

        r1[2] = -1;

        r1[1] = -1;

        r1[0] = -1;

        r2[3] = -1;

        r2[2] = -1;

        r2[1] = -1;

        r2[0] = -1;

        i2 = -1;

        r0.<android.widget.LinearLayout: int mTotalLength> = 0;

        i230 = 0;

     label47:
        if i230 >= i6 goto label67;

        r15 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i230);

        if r15 == null goto label66;

        $i81 = virtualinvoke r15.<android.view.View: int getVisibility()>();

        if $i81 != 8 goto label48;

        goto label66;

     label48:
        $r8 = virtualinvoke r15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r16 = (android.widget.LinearLayout$LayoutParams) $r8;

        f11 = r16.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b79 = f11 cmpl 0.0F;

        if $b79 <= 0 goto label55;

        $f2 = (float) i229;

        $f3 = f11 * $f2;

        $f4 = $f3 / f10;

        i231 = (int) $f4;

        f10 = f10 - f11;

        i229 = i229 - i231;

        $i118 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i117 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i120 = $i118 + $i117;

        $i119 = r16.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i110 = $i120 + $i119;

        $i109 = r16.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i112 = $i110 + $i109;

        $i111 = r16.<android.widget.LinearLayout$LayoutParams: int height>;

        i16 = staticinvoke <android.widget.LinearLayout: int getChildMeasureSpec(int,int,int)>(i1, $i112, $i111);

        $i113 = r16.<android.widget.LinearLayout$LayoutParams: int width>;

        if $i113 != 0 goto label49;

        if i7 == 1073741824 goto label51;

     label49:
        $i114 = virtualinvoke r15.<android.view.View: int getMeasuredWidth()>();

        i19 = $i114 + i231;

        if i19 >= 0 goto label50;

        i19 = 0;

     label50:
        $i115 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i19, 1073741824);

        virtualinvoke r15.<android.view.View: void measure(int,int)>($i115, i16);

        goto label54;

     label51:
        if i231 <= 0 goto label52;

        $i130 = i231;

        goto label53;

     label52:
        $i130 = 0;

     label53:
        $i127 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i130, 1073741824);

        virtualinvoke r15.<android.view.View: void measure(int,int)>($i127, i16);

     label54:
        $i129 = virtualinvoke r15.<android.view.View: int getMeasuredState()>();

        $i128 = $i129 & -16777216;

        i3 = staticinvoke <android.widget.LinearLayout: int combineMeasuredStates(int,int)>(i3, $i128);

     label55:
        if z5 == 0 goto label56;

        $i96 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i95 = virtualinvoke r15.<android.view.View: int getMeasuredWidth()>();

        $i98 = r16.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i100 = $i95 + $i98;

        $i97 = r16.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i99 = $i100 + $i97;

        $i102 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r15);

        $i101 = $i99 + $i102;

        $i116 = $i96 + $i101;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i116;

        goto label57;

     label56:
        i232 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i80 = virtualinvoke r15.<android.view.View: int getMeasuredWidth()>();

        $i78 = i232 + $i80;

        $i77 = r16.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i76 = $i78 + $i77;

        $i75 = r16.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i88 = $i76 + $i75;

        $i87 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r15);

        $i86 = $i88 + $i87;

        $i85 = staticinvoke <java.lang.Math: int max(int,int)>(i232, $i86);

        r0.<android.widget.LinearLayout: int mTotalLength> = $i85;

     label57:
        if i8 == 1073741824 goto label58;

        $i108 = r16.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i108 != -1 goto label58;

        $z7 = 1;

        goto label59;

     label58:
        $z7 = 0;

     label59:
        z13 = $z7;

        $i83 = r16.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i84 = r16.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i233 = $i83 + $i84;

        $i82 = virtualinvoke r15.<android.view.View: int getMeasuredHeight()>();

        i234 = $i82 + i233;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i234);

        if z13 == 0 goto label60;

        $i107 = i233;

        goto label61;

     label60:
        $i107 = i234;

     label61:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i107);

        if z0 == 0 goto label62;

        $i105 = r16.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i105 != -1 goto label62;

        $z6 = 1;

        goto label63;

     label62:
        $z6 = 0;

     label63:
        z0 = $z6;

        if z4 == 0 goto label66;

        i18 = virtualinvoke r15.<android.view.View: int getBaseline()>();

        if i18 == -1 goto label66;

        $i94 = r16.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if $i94 >= 0 goto label64;

        $i93 = r0.<android.widget.LinearLayout: int mGravity>;

        goto label65;

     label64:
        $i93 = r16.<android.widget.LinearLayout$LayoutParams: int gravity>;

     label65:
        i20 = $i93 & 112;

        $i92 = i20 >> 4;

        $i91 = $i92 & -2;

        i21 = $i91 >> 1;

        $i90 = r1[i21];

        $i89 = staticinvoke <java.lang.Math: int max(int,int)>($i90, i18);

        r1[i21] = $i89;

        $i103 = r2[i21];

        $i104 = i234 - i18;

        $i106 = staticinvoke <java.lang.Math: int max(int,int)>($i103, $i104);

        r2[i21] = $i106;

     label66:
        i230 = i230 + 1;

        goto label47;

     label67:
        $i52 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i45 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i44 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        $i46 = $i45 + $i44;

        $i53 = $i52 + $i46;

        r0.<android.widget.LinearLayout: int mTotalLength> = $i53;

        $i54 = r1[1];

        if $i54 != -1 goto label68;

        $i69 = r1[0];

        if $i69 != -1 goto label68;

        $i70 = r1[2];

        if $i70 != -1 goto label68;

        $i68 = r1[3];

        if $i68 == -1 goto label69;

     label68:
        $i49 = r1[3];

        $i50 = r1[0];

        $i48 = r1[1];

        $i55 = r1[2];

        $i51 = staticinvoke <java.lang.Math: int max(int,int)>($i48, $i55);

        $i60 = staticinvoke <java.lang.Math: int max(int,int)>($i50, $i51);

        i235 = staticinvoke <java.lang.Math: int max(int,int)>($i49, $i60);

        $i57 = r2[3];

        $i56 = r2[0];

        $i61 = r2[1];

        $i62 = r2[2];

        $i59 = staticinvoke <java.lang.Math: int max(int,int)>($i61, $i62);

        $i58 = staticinvoke <java.lang.Math: int max(int,int)>($i56, $i59);

        i236 = staticinvoke <java.lang.Math: int max(int,int)>($i57, $i58);

        $i66 = i235 + i236;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i66);

     label69:
        goto label74;

     label70:
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i5);

        if z3 == 0 goto label74;

        if i7 == 1073741824 goto label74;

        i237 = 0;

     label71:
        if i237 >= i6 goto label74;

        r17 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i237);

        if r17 == null goto label73;

        $i123 = virtualinvoke r17.<android.view.View: int getVisibility()>();

        if $i123 != 8 goto label72;

        goto label73;

     label72:
        $r9 = virtualinvoke r17.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r18 = (android.widget.LinearLayout$LayoutParams) $r9;

        f12 = r18.<android.widget.LinearLayout$LayoutParams: float weight>;

        $b122 = f12 cmpl 0.0F;

        if $b122 <= 0 goto label73;

        $i121 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i9, 1073741824);

        $i126 = virtualinvoke r17.<android.view.View: int getMeasuredHeight()>();

        $i125 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i126, 1073741824);

        virtualinvoke r17.<android.view.View: void measure(int,int)>($i121, $i125);

     label73:
        i237 = i237 + 1;

        goto label71;

     label74:
        if z0 != 0 goto label75;

        if i8 == 1073741824 goto label75;

        i2 = i4;

     label75:
        $i64 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i67 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        $i63 = $i64 + $i67;

        i238 = i2 + $i63;

        $i65 = virtualinvoke r0.<android.widget.LinearLayout: int getSuggestedMinimumHeight()>();

        i239 = staticinvoke <java.lang.Math: int max(int,int)>(i238, $i65);

        $i73 = i3 & -16777216;

        $i71 = i227 | $i73;

        $i74 = i3 << 16;

        $i72 = staticinvoke <android.widget.LinearLayout: int resolveSizeAndState(int,int,int)>(i239, i1, $i74);

        virtualinvoke r0.<android.widget.LinearLayout: void setMeasuredDimension(int,int)>($i71, $i72);

        if z1 == 0 goto label76;

        specialinvoke r0.<android.widget.LinearLayout: void forceUniformHeight(int,int)>(i6, i0);

     label76:
        return;
    }

    private void forceUniformHeight(int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i5 = virtualinvoke r0.<android.widget.LinearLayout: int getMeasuredHeight()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i3);

        $i6 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i6 == 8 goto label2;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i7 = r2.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i7 != -1 goto label2;

        i4 = r2.<android.widget.LinearLayout$LayoutParams: int width>;

        $i8 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        r2.<android.widget.LinearLayout$LayoutParams: int width> = $i8;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, 0, i2, 0);

        r2.<android.widget.LinearLayout$LayoutParams: int width> = i4;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return 0;
    }

    int measureNullChild(int)
    {
        android.widget.LinearLayout r0;
        int i0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        return 0;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        virtualinvoke r0.<android.widget.LinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>(r1, i1, i2, i3, i4);

        return;
    }

    int getLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        boolean z0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.widget.LinearLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i4 != 1 goto label1;

        virtualinvoke r0.<android.widget.LinearLayout: void layoutVertical(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.LinearLayout: void layoutHorizontal(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    void layoutVertical(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        i7 = i2 - i0;

        $i20 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i8 = i7 - $i20;

        $i21 = i7 - i4;

        $i19 = r0.<android.widget.LinearLayout: int mPaddingRight>;

        i9 = $i21 - $i19;

        i10 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i23 = r0.<android.widget.LinearLayout: int mGravity>;

        i11 = $i23 & 112;

        $i22 = r0.<android.widget.LinearLayout: int mGravity>;

        i12 = $i22 & 8388615;

        lookupswitch(i11)
        {
            case 16: goto label02;
            case 48: goto label03;
            case 80: goto label01;
            default: goto label03;
        };

     label01:
        $i25 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i24 = $i25 + i3;

        $i26 = $i24 - i1;

        $i27 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i5 = $i26 - $i27;

        goto label04;

     label02:
        $i53 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        $i51 = i3 - i1;

        $i52 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i50 = $i51 - $i52;

        $i49 = $i50 / 2;

        i5 = $i53 + $i49;

        goto label04;

     label03:
        i5 = r0.<android.widget.LinearLayout: int mPaddingTop>;

     label04:
        i13 = 0;

     label05:
        if i13 >= i10 goto label14;

        r1 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i13);

        if r1 != null goto label06;

        $i45 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i13);

        i5 = i5 + $i45;

        goto label13;

     label06:
        $i28 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i28 == 8 goto label13;

        i15 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i14 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r3;

        i16 = r2.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i16 >= 0 goto label07;

        i16 = i12;

     label07:
        i18 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        i17 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i16, i18);

        $i29 = i17 & 7;

        tableswitch($i29)
        {
            case 1: goto label08;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label09;
            default: goto label10;
        };

     label08:
        $i32 = i9 - i15;

        $i33 = $i32 / 2;

        $i31 = i4 + $i33;

        $i30 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i36 = $i31 + $i30;

        $i35 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i6 = $i36 - $i35;

        goto label11;

     label09:
        $i47 = i8 - i15;

        $i48 = r2.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        i6 = $i47 - $i48;

        goto label11;

     label10:
        $i46 = r2.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i6 = i4 + $i46;

     label11:
        $z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i13);

        if $z0 == 0 goto label12;

        $i41 = r0.<android.widget.LinearLayout: int mDividerHeight>;

        i5 = i5 + $i41;

     label12:
        $i34 = r2.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i54 = i5 + $i34;

        $i40 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r1);

        $i39 = i54 + $i40;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r1, i6, $i39, i15, i14);

        $i38 = r2.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        $i37 = i14 + $i38;

        $i44 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r1);

        $i43 = $i37 + $i44;

        i5 = i54 + $i43;

        $i42 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r1, i13);

        i13 = i13 + $i42;

     label13:
        i13 = i13 + 1;

        goto label05;

     label14:
        return;
    }

    void layoutHorizontal(int, int, int, int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i17, i18, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, i66;
        boolean z0, z1, $z2;
        int[] r1, r2;
        byte b16;
        android.view.View r3;
        android.widget.LinearLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = virtualinvoke r0.<android.widget.LinearLayout: boolean isLayoutRtl()>();

        i4 = r0.<android.widget.LinearLayout: int mPaddingTop>;

        i7 = i3 - i1;

        $i23 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i8 = i7 - $i23;

        $i26 = i7 - i4;

        $i25 = r0.<android.widget.LinearLayout: int mPaddingBottom>;

        i9 = $i26 - $i25;

        i10 = virtualinvoke r0.<android.widget.LinearLayout: int getVirtualChildCount()>();

        $i24 = r0.<android.widget.LinearLayout: int mGravity>;

        i11 = $i24 & 8388615;

        $i29 = r0.<android.widget.LinearLayout: int mGravity>;

        i12 = $i29 & 112;

        z1 = r0.<android.widget.LinearLayout: boolean mBaselineAligned>;

        r2 = r0.<android.widget.LinearLayout: int[] mMaxAscent>;

        r1 = r0.<android.widget.LinearLayout: int[] mMaxDescent>;

        i14 = virtualinvoke r0.<android.widget.LinearLayout: int getLayoutDirection()>();

        $i27 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i11, i14);

        tableswitch($i27)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label01;
            default: goto label03;
        };

     label01:
        $i28 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i32 = $i28 + i2;

        $i30 = $i32 - i0;

        $i33 = r0.<android.widget.LinearLayout: int mTotalLength>;

        i6 = $i30 - $i33;

        goto label04;

     label02:
        $i64 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

        $i59 = i2 - i0;

        $i58 = r0.<android.widget.LinearLayout: int mTotalLength>;

        $i60 = $i59 - $i58;

        $i65 = $i60 / 2;

        i6 = $i64 + $i65;

        goto label04;

     label03:
        i6 = r0.<android.widget.LinearLayout: int mPaddingLeft>;

     label04:
        i13 = 0;

        b16 = 1;

        if z0 == 0 goto label05;

        i13 = i10 - 1;

        b16 = -1;

     label05:
        i15 = 0;

     label06:
        if i15 >= i10 goto label17;

        $i31 = b16 * i15;

        i17 = i13 + $i31;

        r3 = virtualinvoke r0.<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>(i17);

        if r3 != null goto label07;

        $i57 = virtualinvoke r0.<android.widget.LinearLayout: int measureNullChild(int)>(i17);

        i6 = i6 + $i57;

        goto label16;

     label07:
        $i34 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i34 == 8 goto label16;

        i19 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        i18 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i20 = -1;

        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.LinearLayout$LayoutParams) $r5;

        if z1 == 0 goto label08;

        $i63 = r4.<android.widget.LinearLayout$LayoutParams: int height>;

        if $i63 == -1 goto label08;

        i20 = virtualinvoke r3.<android.view.View: int getBaseline()>();

     label08:
        i22 = r4.<android.widget.LinearLayout$LayoutParams: int gravity>;

        if i22 >= 0 goto label09;

        i22 = i12;

     label09:
        $i37 = i22 & 112;

        lookupswitch($i37)
        {
            case 16: goto label11;
            case 48: goto label10;
            case 80: goto label12;
            default: goto label13;
        };

     label10:
        $i54 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        i5 = i4 + $i54;

        if i20 == -1 goto label14;

        $i55 = r2[1];

        $i56 = $i55 - i20;

        i5 = i5 + $i56;

        goto label14;

     label11:
        $i49 = i9 - i18;

        $i50 = $i49 / 2;

        $i52 = i4 + $i50;

        $i51 = r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i62 = $i52 + $i51;

        $i61 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i5 = $i62 - $i61;

        goto label14;

     label12:
        $i35 = i8 - i18;

        $i36 = r4.<android.widget.LinearLayout$LayoutParams: int bottomMargin>;

        i5 = $i35 - $i36;

        if i20 == -1 goto label14;

        $i46 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        i21 = $i46 - i20;

        $i45 = r1[2];

        $i53 = $i45 - i21;

        i5 = i5 - $i53;

        goto label14;

     label13:
        i5 = i4;

     label14:
        $z2 = virtualinvoke r0.<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>(i17);

        if $z2 == 0 goto label15;

        $i47 = r0.<android.widget.LinearLayout: int mDividerWidth>;

        i6 = i6 + $i47;

     label15:
        $i40 = r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        i66 = i6 + $i40;

        $i39 = virtualinvoke r0.<android.widget.LinearLayout: int getLocationOffset(android.view.View)>(r3);

        $i38 = i66 + $i39;

        specialinvoke r0.<android.widget.LinearLayout: void setChildFrame(android.view.View,int,int,int,int)>(r3, $i38, i5, i19, i18);

        $i44 = r4.<android.widget.LinearLayout$LayoutParams: int rightMargin>;

        $i43 = i19 + $i44;

        $i42 = virtualinvoke r0.<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>(r3);

        $i41 = $i43 + $i42;

        i6 = i66 + $i41;

        $i48 = virtualinvoke r0.<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>(r3, i17);

        i15 = i15 + $i48;

     label16:
        i15 = i15 + 1;

        goto label06;

     label17:
        return;
    }

    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.widget.LinearLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i5 = i0 + i2;

        $i4 = i1 + i3;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i1, $i5, $i4);

        return;
    }

    public void setOrientation(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 == i0 goto label1;

        r0.<android.widget.LinearLayout: int mOrientation> = i0;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public int getOrientation()
    {
        android.widget.LinearLayout r0;
        int $i0;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        return $i0;
    }

    public void setGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.LinearLayout: int mGravity>;

        if $i1 == i0 goto label3;

        $i2 = i0 & 8388615;

        if $i2 != 0 goto label1;

        i0 = i0 | 8388611;

     label1:
        $i3 = i0 & 112;

        if $i3 != 0 goto label2;

        i0 = i0 | 48;

     label2:
        r0.<android.widget.LinearLayout: int mGravity> = i0;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label3:
        return;
    }

    public void setHorizontalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 = i0 & 8388615;

        $i2 = r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = $i2 & 8388615;

        if $i3 == i1 goto label1;

        $i4 = r0.<android.widget.LinearLayout: int mGravity>;

        $i5 = $i4 & -8388616;

        $i6 = $i5 | i1;

        r0.<android.widget.LinearLayout: int mGravity> = $i6;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public void setVerticalGravity(int)
    {
        android.widget.LinearLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.LinearLayout;

        i0 := @parameter0: int;

        i1 = i0 & 112;

        $i2 = r0.<android.widget.LinearLayout: int mGravity>;

        $i3 = $i2 & 112;

        if $i3 == i1 goto label1;

        $i4 = r0.<android.widget.LinearLayout: int mGravity>;

        $i5 = $i4 & -113;

        $i6 = $i5 | i1;

        r0.<android.widget.LinearLayout: int mGravity> = $i6;

        virtualinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

     label1:
        return;
    }

    public android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.LinearLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        int $i0, $i1;
        android.widget.LinearLayout$LayoutParams $r1, $r2;

        r0 := @this: android.widget.LinearLayout;

        $i0 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i0 != 0 goto label1;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r2;

     label1:
        $i1 = r0.<android.widget.LinearLayout: int mOrientation>;

        if $i1 != 1 goto label2;

        $r1 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r1.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;

     label2:
        return null;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.LinearLayout$LayoutParams;

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.LinearLayout r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/LinearLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.LinearLayout r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/LinearLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.LinearLayout r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.LinearLayout;

        $r1 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.LinearLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.LinearLayout r0;
        android.util.AttributeSet r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.LinearLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.widget.LinearLayout: int INDEX_FILL> = 3;

        <android.widget.LinearLayout: int INDEX_BOTTOM> = 2;

        <android.widget.LinearLayout: int INDEX_TOP> = 1;

        <android.widget.LinearLayout: int INDEX_CENTER_VERTICAL> = 0;

        <android.widget.LinearLayout: int VERTICAL_GRAVITY_COUNT> = 4;

        <android.widget.LinearLayout: int SHOW_DIVIDER_END> = 4;

        <android.widget.LinearLayout: int SHOW_DIVIDER_MIDDLE> = 2;

        <android.widget.LinearLayout: int SHOW_DIVIDER_BEGINNING> = 1;

        <android.widget.LinearLayout: int SHOW_DIVIDER_NONE> = 0;

        <android.widget.LinearLayout: int VERTICAL> = 1;

        <android.widget.LinearLayout: int HORIZONTAL> = 0;

        return;
    }
}
