public class android.content.res.CompatibilityInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO;
    public static final int DEFAULT_NORMAL_SHORT_DIMENSION;
    public static final float MAXIMUM_ASPECT_RATIO;
    private final int mCompatibilityFlags;
    private static final int SCALING_REQUIRED;
    private static final int ALWAYS_NEEDS_COMPAT;
    private static final int NEVER_NEEDS_COMPAT;
    private static final int NEEDS_SCREEN_COMPAT;
    public final int applicationDensity;
    public final float applicationScale;
    public final float applicationInvertedScale;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(android.content.pm.ApplicationInfo, int, int, boolean)
    {
        android.content.res.CompatibilityInfo r0;
        android.content.pm.ApplicationInfo r1;
        int i0, i1, i3, i4, i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i31, $i32, $i33;
        boolean z0, z1;
        byte b2, b6, $b23, $b29, $b30, b37;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        b2 = 0;

        $i7 = r1.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp>;

        if $i7 != 0 goto label01;

        $i12 = r1.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp>;

        if $i12 != 0 goto label01;

        $i15 = r1.<android.content.pm.ApplicationInfo: int largestWidthLimitDp>;

        if $i15 == 0 goto label12;

     label01:
        $i8 = r1.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp>;

        if $i8 == 0 goto label02;

        $i13 = r1.<android.content.pm.ApplicationInfo: int requiresSmallestWidthDp>;

        goto label03;

     label02:
        $i13 = r1.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp>;

     label03:
        i3 = $i13;

        if i3 != 0 goto label04;

        i3 = r1.<android.content.pm.ApplicationInfo: int largestWidthLimitDp>;

     label04:
        $i9 = r1.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp>;

        if $i9 == 0 goto label05;

        $i11 = r1.<android.content.pm.ApplicationInfo: int compatibleWidthLimitDp>;

        goto label06;

     label05:
        $i11 = i3;

     label06:
        i4 = $i11;

        if i4 >= i3 goto label07;

        i4 = i3;

     label07:
        i5 = r1.<android.content.pm.ApplicationInfo: int largestWidthLimitDp>;

        if i3 <= 320 goto label08;

        b2 = b2 | 4;

        goto label11;

     label08:
        if i5 == 0 goto label09;

        if i1 <= i5 goto label09;

        b2 = b2 | 10;

        goto label11;

     label09:
        if i4 < i1 goto label10;

        b2 = b2 | 4;

        goto label11;

     label10:
        if z0 == 0 goto label11;

        b2 = b2 | 8;

     label11:
        $i10 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        r0.<android.content.res.CompatibilityInfo: int applicationDensity> = $i10;

        r0.<android.content.res.CompatibilityInfo: float applicationScale> = 1.0F;

        r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale> = 1.0F;

        goto label26;

     label12:
        b6 = 0;

        z1 = 0;

        $i14 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i17 = $i14 & 2048;

        if $i17 == 0 goto label13;

        b6 = b6 | 8;

        z1 = 1;

        if z0 != 0 goto label13;

        b6 = b6 | 34;

     label13:
        $i16 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i19 = $i16 & 524288;

        if $i19 == 0 goto label14;

        z1 = 1;

        if z0 != 0 goto label14;

        b6 = b6 | 34;

     label14:
        $i18 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i21 = $i18 & 4096;

        if $i21 == 0 goto label15;

        z1 = 1;

        b6 = b6 | 2;

     label15:
        if z0 == 0 goto label16;

        b6 = b6 & -3;

     label16:
        b2 = b2 | 8;

        $i20 = i0 & 15;

        lookupswitch($i20)
        {
            case 3: goto label19;
            case 4: goto label17;
            default: goto label21;
        };

     label17:
        $b23 = b6 & 32;

        if $b23 == 0 goto label18;

        b2 = b2 & -9;

     label18:
        $i22 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i25 = $i22 & 524288;

        if $i25 == 0 goto label21;

        b2 = b2 | 4;

        goto label21;

     label19:
        $b30 = b6 & 8;

        if $b30 == 0 goto label20;

        b2 = b2 & -9;

     label20:
        $i32 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i33 = $i32 & 2048;

        if $i33 == 0 goto label21;

        b2 = b2 | 4;

     label21:
        $i24 = i0 & 268435456;

        if $i24 == 0 goto label23;

        $b29 = b6 & 2;

        if $b29 == 0 goto label22;

        b2 = b2 & -9;

        goto label24;

     label22:
        if z1 != 0 goto label24;

        b2 = b2 | 2;

        goto label24;

     label23:
        b37 = b2 & -9;

        b2 = b37 | 4;

     label24:
        $i27 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i26 = $i27 & 8192;

        if $i26 == 0 goto label25;

        $i31 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        r0.<android.content.res.CompatibilityInfo: int applicationDensity> = $i31;

        r0.<android.content.res.CompatibilityInfo: float applicationScale> = 1.0F;

        r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale> = 1.0F;

        goto label26;

     label25:
        r0.<android.content.res.CompatibilityInfo: int applicationDensity> = 160;

        $i28 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        $f2 = (float) $i28;

        $f0 = $f2 / 160.0F;

        r0.<android.content.res.CompatibilityInfo: float applicationScale> = $f0;

        $f1 = r0.<android.content.res.CompatibilityInfo: float applicationScale>;

        $f3 = 1.0F / $f1;

        r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale> = $f3;

        b2 = b2 | 1;

     label26:
        r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags> = b2;

        return;
    }

    private void <init>(int, int, float, float)
    {
        android.content.res.CompatibilityInfo r0;
        int i0, i1;
        float f0, f1;

        r0 := @this: android.content.res.CompatibilityInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags> = i0;

        r0.<android.content.res.CompatibilityInfo: int applicationDensity> = i1;

        r0.<android.content.res.CompatibilityInfo: float applicationScale> = f0;

        r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale> = f1;

        return;
    }

    private void <init>()
    {
        android.content.res.CompatibilityInfo r0;
        int $i0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $i0 = <android.util.DisplayMetrics: int DENSITY_DEVICE>;

        specialinvoke r0.<android.content.res.CompatibilityInfo: void <init>(int,int,float,float)>(4, $i0, 1.0F, 1.0F);

        return;
    }

    public boolean isScalingRequired()
    {
        android.content.res.CompatibilityInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $i0 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean supportsScreen()
    {
        android.content.res.CompatibilityInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $i0 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        $i1 = $i0 & 8;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean neverSupportsScreen()
    {
        android.content.res.CompatibilityInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $i0 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean alwaysSupportsScreen()
    {
        android.content.res.CompatibilityInfo r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $i0 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.content.res.CompatibilityInfo$Translator getTranslator()
    {
        android.content.res.CompatibilityInfo r0;
        boolean $z0;
        android.content.res.CompatibilityInfo$Translator $r1;

        r0 := @this: android.content.res.CompatibilityInfo;

        $z0 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean isScalingRequired()>();

        if $z0 == 0 goto label1;

        $r1 = new android.content.res.CompatibilityInfo$Translator;

        specialinvoke $r1.<android.content.res.CompatibilityInfo$Translator: void <init>(android.content.res.CompatibilityInfo)>(r0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void applyToDisplayMetrics(android.util.DisplayMetrics)
    {
        android.content.res.CompatibilityInfo r0;
        android.util.DisplayMetrics r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        $z0 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.content.res.CompatibilityInfo: float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics)>(r1, r1);

        goto label2;

     label1:
        $i0 = r1.<android.util.DisplayMetrics: int noncompatWidthPixels>;

        r1.<android.util.DisplayMetrics: int widthPixels> = $i0;

        $i1 = r1.<android.util.DisplayMetrics: int noncompatHeightPixels>;

        r1.<android.util.DisplayMetrics: int heightPixels> = $i1;

     label2:
        $z1 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean isScalingRequired()>();

        if $z1 == 0 goto label3;

        f0 = r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        $f1 = r1.<android.util.DisplayMetrics: float noncompatDensity>;

        $f2 = $f1 * f0;

        r1.<android.util.DisplayMetrics: float density> = $f2;

        $i2 = r1.<android.util.DisplayMetrics: int noncompatDensityDpi>;

        $f3 = (float) $i2;

        $f4 = $f3 * f0;

        $f5 = $f4 + 0.5F;

        $i3 = (int) $f5;

        r1.<android.util.DisplayMetrics: int densityDpi> = $i3;

        $f6 = r1.<android.util.DisplayMetrics: float noncompatScaledDensity>;

        $f7 = $f6 * f0;

        r1.<android.util.DisplayMetrics: float scaledDensity> = $f7;

        $f9 = r1.<android.util.DisplayMetrics: float noncompatXdpi>;

        $f8 = $f9 * f0;

        r1.<android.util.DisplayMetrics: float xdpi> = $f8;

        $f11 = r1.<android.util.DisplayMetrics: float noncompatYdpi>;

        $f10 = $f11 * f0;

        r1.<android.util.DisplayMetrics: float ydpi> = $f10;

        $i4 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f12 = (float) $i4;

        $f14 = $f12 * f0;

        $f13 = $f14 + 0.5F;

        $i6 = (int) $f13;

        r1.<android.util.DisplayMetrics: int widthPixels> = $i6;

        $i5 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f16 = (float) $i5;

        $f15 = $f16 * f0;

        $f17 = $f15 + 0.5F;

        $i7 = (int) $f17;

        r1.<android.util.DisplayMetrics: int heightPixels> = $i7;

     label3:
        return;
    }

    public void applyToConfiguration(int, android.content.res.Configuration)
    {
        android.content.res.CompatibilityInfo r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.res.Configuration r1;
        float f0, $f1, $f2, $f3;
        boolean $z0, $z1;

        r0 := @this: android.content.res.CompatibilityInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        $z0 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label1;

        $i3 = r1.<android.content.res.Configuration: int screenLayout>;

        $i4 = $i3 & -16;

        $i5 = $i4 | 2;

        r1.<android.content.res.Configuration: int screenLayout> = $i5;

        $i6 = r1.<android.content.res.Configuration: int compatScreenWidthDp>;

        r1.<android.content.res.Configuration: int screenWidthDp> = $i6;

        $i7 = r1.<android.content.res.Configuration: int compatScreenHeightDp>;

        r1.<android.content.res.Configuration: int screenHeightDp> = $i7;

        $i8 = r1.<android.content.res.Configuration: int compatSmallestScreenWidthDp>;

        r1.<android.content.res.Configuration: int smallestScreenWidthDp> = $i8;

     label1:
        r1.<android.content.res.Configuration: int densityDpi> = i0;

        $z1 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean isScalingRequired()>();

        if $z1 == 0 goto label2;

        f0 = r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        $i1 = r1.<android.content.res.Configuration: int densityDpi>;

        $f1 = (float) $i1;

        $f2 = $f1 * f0;

        $f3 = $f2 + 0.5F;

        $i2 = (int) $f3;

        r1.<android.content.res.Configuration: int densityDpi> = $i2;

     label2:
        return;
    }

    public static float computeCompatibleScaling(android.util.DisplayMetrics, android.util.DisplayMetrics)
    {
        android.util.DisplayMetrics r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        byte $b8, $b9, $b10;

        r0 := @parameter0: android.util.DisplayMetrics;

        r1 := @parameter1: android.util.DisplayMetrics;

        i0 = r0.<android.util.DisplayMetrics: int noncompatWidthPixels>;

        i1 = r0.<android.util.DisplayMetrics: int noncompatHeightPixels>;

        if i0 >= i1 goto label1;

        i2 = i0;

        i3 = i1;

        goto label2;

     label1:
        i2 = i1;

        i3 = i0;

     label2:
        $f4 = r0.<android.util.DisplayMetrics: float density>;

        $f5 = 320.0F * $f4;

        $f7 = $f5 + 0.5F;

        i4 = (int) $f7;

        $f8 = (float) i3;

        $f6 = (float) i2;

        f0 = $f8 / $f6;

        $b8 = f0 cmpl 1.7791667F;

        if $b8 <= 0 goto label3;

        f0 = 1.7791667F;

     label3:
        $f10 = (float) i4;

        $f9 = $f10 * f0;

        $f12 = $f9 + 0.5F;

        i5 = (int) $f12;

        if i0 >= i1 goto label4;

        i6 = i4;

        i7 = i5;

        goto label5;

     label4:
        i6 = i5;

        i7 = i4;

     label5:
        $f14 = (float) i0;

        $f11 = (float) i6;

        f1 = $f14 / $f11;

        $f15 = (float) i1;

        $f13 = (float) i7;

        f2 = $f15 / $f13;

        $b9 = f1 cmpg f2;

        if $b9 >= 0 goto label6;

        $f16 = f1;

        goto label7;

     label6:
        $f16 = f2;

     label7:
        f3 = $f16;

        $b10 = f3 cmpg 1.0F;

        if $b10 >= 0 goto label8;

        f3 = 1.0F;

     label8:
        if r1 == null goto label9;

        r1.<android.util.DisplayMetrics: int widthPixels> = i6;

        r1.<android.util.DisplayMetrics: int heightPixels> = i7;

     label9:
        return f3;
    }

    public boolean equals(java.lang.Object)
    {
        android.content.res.CompatibilityInfo r0, r2;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        byte $b4, $b5;
        java.lang.ClassCastException $r3;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        r2 = (android.content.res.CompatibilityInfo) r1;

        $i1 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        $i0 = r2.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        if $i1 == $i0 goto label03;

     label02:
        return 0;

     label03:
        $i3 = r0.<android.content.res.CompatibilityInfo: int applicationDensity>;

        $i2 = r2.<android.content.res.CompatibilityInfo: int applicationDensity>;

        if $i3 == $i2 goto label05;

     label04:
        return 0;

     label05:
        $f1 = r0.<android.content.res.CompatibilityInfo: float applicationScale>;

        $f0 = r2.<android.content.res.CompatibilityInfo: float applicationScale>;

        $b4 = $f1 cmpl $f0;

        if $b4 == 0 goto label07;

     label06:
        return 0;

     label07:
        $f3 = r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        $f2 = r2.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        $b5 = $f3 cmpl $f2;

        if $b5 == 0 goto label09;

     label08:
        return 0;

     label09:
        return 1;

     label10:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label01 to label02 with label10;
        catch java.lang.ClassCastException from label03 to label04 with label10;
        catch java.lang.ClassCastException from label05 to label06 with label10;
        catch java.lang.ClassCastException from label07 to label08 with label10;
    }

    public java.lang.String toString()
    {
        android.content.res.CompatibilityInfo r0;
        java.lang.StringBuilder r1, $r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $i0 = r0.<android.content.res.CompatibilityInfo: int applicationDensity>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dpi");

        $z0 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean isScalingRequired()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = r0.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

     label1:
        $z1 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z1 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resizing");

     label2:
        $z2 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>();

        if $z2 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" never-compat");

     label3:
        $z3 = virtualinvoke r0.<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>();

        if $z3 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" always-compat");

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        android.content.res.CompatibilityInfo r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        float $f0, $f1;

        r0 := @this: android.content.res.CompatibilityInfo;

        b0 = 17;

        $i2 = 31 * b0;

        $i1 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        i9 = $i2 + $i1;

        $i4 = 31 * i9;

        $i3 = r0.<android.content.res.CompatibilityInfo: int applicationDensity>;

        i10 = $i4 + $i3;

        $i5 = 31 * i10;

        $f0 = r0.<android.content.res.CompatibilityInfo: float applicationScale>;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        i11 = $i5 + $i6;

        $i7 = 31 * i11;

        $f1 = r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        $i8 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        i12 = $i7 + $i8;

        return i12;
    }

    public int describeContents()
    {
        android.content.res.CompatibilityInfo r0;

        r0 := @this: android.content.res.CompatibilityInfo;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.CompatibilityInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        float $f0, $f1;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.content.res.CompatibilityInfo: int applicationDensity>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $f0 = r0.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $f1 = r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.res.CompatibilityInfo r0;
        android.os.Parcel r1;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.res.CompatibilityInfo: int mCompatibilityFlags> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.content.res.CompatibilityInfo: int applicationDensity> = $i1;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.res.CompatibilityInfo: float applicationScale> = $f0;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.content.res.CompatibilityInfo: float applicationInvertedScale> = $f1;

        return;
    }

    void <init>(android.content.res.CompatibilityInfo$1)
    {
        android.content.res.CompatibilityInfo r0;
        android.content.res.CompatibilityInfo$1 r1;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.content.res.CompatibilityInfo$1;

        specialinvoke r0.<android.content.res.CompatibilityInfo: void <init>()>();

        return;
    }

    void <init>(android.os.Parcel, android.content.res.CompatibilityInfo$1)
    {
        android.content.res.CompatibilityInfo r0;
        android.os.Parcel r1;
        android.content.res.CompatibilityInfo$1 r2;

        r0 := @this: android.content.res.CompatibilityInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.content.res.CompatibilityInfo$1;

        specialinvoke r0.<android.content.res.CompatibilityInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.content.res.CompatibilityInfo$1 $r0;
        android.content.res.CompatibilityInfo$2 $r1;

        <android.content.res.CompatibilityInfo: int NEEDS_SCREEN_COMPAT> = 8;

        <android.content.res.CompatibilityInfo: int NEVER_NEEDS_COMPAT> = 4;

        <android.content.res.CompatibilityInfo: int ALWAYS_NEEDS_COMPAT> = 2;

        <android.content.res.CompatibilityInfo: int SCALING_REQUIRED> = 1;

        <android.content.res.CompatibilityInfo: float MAXIMUM_ASPECT_RATIO> = 1.7791667F;

        <android.content.res.CompatibilityInfo: int DEFAULT_NORMAL_SHORT_DIMENSION> = 320;

        $r0 = new android.content.res.CompatibilityInfo$1;

        specialinvoke $r0.<android.content.res.CompatibilityInfo$1: void <init>()>();

        <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO> = $r0;

        $r1 = new android.content.res.CompatibilityInfo$2;

        specialinvoke $r1.<android.content.res.CompatibilityInfo$2: void <init>()>();

        <android.content.res.CompatibilityInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
}
