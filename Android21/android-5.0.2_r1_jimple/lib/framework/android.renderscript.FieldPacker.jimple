public class android.renderscript.FieldPacker extends java.lang.Object
{
    private final byte[] mData;
    private int mPos;
    private int mLen;
    private java.util.BitSet mAlignment;

    public void <init>(int)
    {
        android.renderscript.FieldPacker r0;
        int i0;
        byte[] $r1;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        r0.<android.renderscript.FieldPacker: int mLen> = i0;

        $r1 = newarray (byte)[i0];

        r0.<android.renderscript.FieldPacker: byte[] mData> = $r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    public void <init>(byte[])
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        int $i0, $i1;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i0;

        $i1 = lengthof r1;

        r0.<android.renderscript.FieldPacker: int mLen> = $i1;

        r0.<android.renderscript.FieldPacker: byte[] mData> = r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    public void align(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.util.BitSet $r6;
        byte[] $r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i1 = i0 - 1;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i0 - 1;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label3;

        $r6 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        virtualinvoke $r6.<java.util.BitSet: void flip(int)>($i6);

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = $i7 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        $r7[$i7] = 0;

        goto label2;

     label3:
        return;
    }

    public void subalign(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.BitSet $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r6;
        android.renderscript.RSIllegalArgumentException $r4;
        java.lang.String $r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        $r4 = new android.renderscript.RSIllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label1:
        $i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i0 - 1;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label2;

        $i13 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i12 = $i13 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i12;

        goto label1;

     label2:
        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        if $i6 <= 0 goto label4;

     label3:
        $r1 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = $i7 - 1;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>($i8);

        if $z0 != 1 goto label4;

        $i9 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i10 = $i9 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i10;

        $r2 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i11 = r0.<android.renderscript.FieldPacker: int mPos>;

        virtualinvoke $r2.<java.util.BitSet: void flip(int)>($i11);

        goto label3;

     label4:
        return;
    }

    public void reset()
    {
        android.renderscript.FieldPacker r0;

        r0 := @this: android.renderscript.FieldPacker;

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        return;
    }

    public void reset(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1;
        android.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i0 <= $i1 goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        return;
    }

    public void skip(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, $i2, $i3;
        android.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        i1 = $i2 + i0;

        if i1 < 0 goto label1;

        $i3 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i1 <= $i3 goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<android.renderscript.FieldPacker: int mPos> = i1;

        return;
    }

    public void addI8(byte)
    {
        android.renderscript.FieldPacker r0;
        byte b0;
        int $i1, $i2;
        byte[] $r1;

        r0 := @this: android.renderscript.FieldPacker;

        b0 := @parameter0: byte;

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        $r1[$i1] = b0;

        return;
    }

    public byte subI8()
    {
        android.renderscript.FieldPacker r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(1);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i1 = $i0 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i1;

        $b2 = $r1[$i1];

        return $b2;
    }

    public void addI16(short)
    {
        android.renderscript.FieldPacker r0;
        short s0, $s3, $s7;
        int $i1, $i2, $i5, $i6;
        byte[] $r1, $r2;
        byte $b4, $b8;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        $s3 = s0 & 255;

        $b4 = (byte) $s3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i6;

        $s7 = s0 >> 8;

        $b8 = (byte) $s7;

        $r2[$i5] = $b8;

        return;
    }

    public short subI16()
    {
        android.renderscript.FieldPacker r0;
        int $i0, $i1, $i4, $i5, $i6;
        byte[] $r1, $r2;
        byte $b2, $b7;
        short $s3, $s8, $s9, $s10, s11, s12;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(2);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i1 = $i0 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i1;

        $b2 = $r1[$i1];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        s11 = (short) $i4;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i6;

        $b7 = $r2[$i6];

        $s8 = $b7 & 255;

        $s9 = (short) $s8;

        $s10 = s11 | $s9;

        s12 = (short) $s10;

        return s12;
    }

    public void addI32(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18;
        byte[] $r1, $r2, $r3, $r4;
        byte $b4, $b9, $b15, $b19;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        $i3 = i0 & 255;

        $b4 = (byte) $i3;

        $r1[$i1] = $b4;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i6 = $i5 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i6;

        $i7 = i0 >> 8;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $r2[$i5] = $b9;

        $r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i10 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i11 = $i10 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i11;

        $i13 = i0 >> 16;

        $i12 = $i13 & 255;

        $b15 = (byte) $i12;

        $r3[$i10] = $b15;

        $r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i14 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i16 = $i14 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i16;

        $i18 = i0 >> 24;

        $i17 = $i18 & 255;

        $b19 = (byte) $i17;

        $r4[$i14] = $b19;

        return;
    }

    public int subI32()
    {
        android.renderscript.FieldPacker r0;
        int $i0, $i1, $i4, $i5, $i8, $i9, $i10, $i13, $i14, $i15, i18, i19, i20, i21;
        byte[] $r1, $r2, $r3, $r4;
        byte $b2, $b6, $b12, $b17;
        short $s3, $s7, $s11, $s16;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(4);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i1 = $i0 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i1;

        $b2 = $r1[$i1];

        $s3 = $b2 & 255;

        i18 = $s3 << 24;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i5 = $i4 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i5;

        $b6 = $r2[$i5];

        $s7 = $b6 & 255;

        $i8 = $s7 << 16;

        i19 = i18 | $i8;

        $r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i9 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i10 = $i9 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i10;

        $b12 = $r3[$i10];

        $s11 = $b12 & 255;

        $i14 = $s11 << 8;

        i20 = i19 | $i14;

        $r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i13 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i15 = $i13 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i15;

        $b17 = $r4[$i15];

        $s16 = $b17 & 255;

        i21 = i20 | $s16;

        return i21;
    }

    public void addI64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l3, $l8, $l9, $l14, $l16, $l20, $l21, $l26, $l28, $l34, $l35, $l36, $l42, $l43, $l44;
        int $i1, $i2, $i4, $i6, $i7, $i10, $i12, $i13, $i15, $i17, $i19, $i23, $i24, $i25, $i27, $i29, $i31, $i32, $i37, $i38, $i39, $i41, $i45, $i47;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b5, $b11, $b18, $b22, $b30, $b33, $b40, $b46;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        $l3 = l0 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i1] = $b5;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i7 = $i6 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i7;

        $l8 = l0 >> 8;

        $l9 = $l8 & 255L;

        $i10 = (int) $l9;

        $b11 = (byte) $i10;

        $r2[$i6] = $b11;

        $r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i13 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i12 = $i13 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i12;

        $l14 = l0 >> 16;

        $l16 = $l14 & 255L;

        $i15 = (int) $l16;

        $b18 = (byte) $i15;

        $r3[$i13] = $b18;

        $r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i17 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i19 = $i17 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i19;

        $l21 = l0 >> 24;

        $l20 = $l21 & 255L;

        $i23 = (int) $l20;

        $b22 = (byte) $i23;

        $r4[$i17] = $b22;

        $r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i25 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i24 = $i25 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i24;

        $l28 = l0 >> 32;

        $l26 = $l28 & 255L;

        $i27 = (int) $l26;

        $b30 = (byte) $i27;

        $r5[$i25] = $b30;

        $r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i31 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i29 = $i31 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i29;

        $l34 = l0 >> 40;

        $l35 = $l34 & 255L;

        $i32 = (int) $l35;

        $b33 = (byte) $i32;

        $r6[$i31] = $b33;

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i37 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i38 = $i37 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i38;

        $l36 = l0 >> 48;

        $l42 = $l36 & 255L;

        $i41 = (int) $l42;

        $b40 = (byte) $i41;

        $r7[$i37] = $b40;

        $r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i39 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i45 = $i39 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i45;

        $l44 = l0 >> 56;

        $l43 = $l44 & 255L;

        $i47 = (int) $l43;

        $b46 = (byte) $i47;

        $r8[$i39] = $b46;

        return;
    }

    public long subI64()
    {
        android.renderscript.FieldPacker r0;
        long l0, $l3, $l4, $l5, $l8, $l9, $l10, $l13, $l14, $l15, $l18, $l19, $l20, $l23, $l26, $l27, $l28, $l29, $l30, $l31, $l36, $l37, $l38, $l39, l41, l43, l45, l47, l49, l51, l53, l55;
        int $i1, $i2, $i6, $i7, $i11, $i12, $i16, $i17, $i21, $i22, $i24, $i25, $i32, $i33, $i34, $i35;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte b40, b42, b44, b46, b48, b50, b52, b54;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(8);

        l0 = 0L;

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = $i1 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        b40 = $r1[$i2];

        $l3 = (long) b40;

        $l4 = $l3 & 255L;

        $l5 = $l4 << 56;

        l41 = l0 | $l5;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i7 = $i6 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i7;

        b42 = $r2[$i7];

        $l8 = (long) b42;

        $l9 = $l8 & 255L;

        $l10 = $l9 << 48;

        l43 = l41 | $l10;

        $r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i12 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i11 = $i12 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i11;

        b44 = $r3[$i11];

        $l13 = (long) b44;

        $l15 = $l13 & 255L;

        $l14 = $l15 << 40;

        l45 = l43 | $l14;

        $r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i17 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i16 = $i17 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i16;

        b46 = $r4[$i16];

        $l18 = (long) b46;

        $l20 = $l18 & 255L;

        $l19 = $l20 << 32;

        l47 = l45 | $l19;

        $r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i22 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i21 = $i22 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i21;

        b48 = $r5[$i21];

        $l23 = (long) b48;

        $l26 = $l23 & 255L;

        $l27 = $l26 << 24;

        l49 = l47 | $l27;

        $r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i24 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i25 = $i24 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i25;

        b50 = $r6[$i25];

        $l30 = (long) b50;

        $l28 = $l30 & 255L;

        $l29 = $l28 << 16;

        l51 = l49 | $l29;

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i32 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i33 = $i32 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i33;

        b52 = $r7[$i33];

        $l31 = (long) b52;

        $l36 = $l31 & 255L;

        $l37 = $l36 << 8;

        l53 = l51 | $l37;

        $r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i34 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i35 = $i34 - 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i35;

        b54 = $r8[$i35];

        $l39 = (long) b54;

        $l38 = $l39 & 255L;

        l55 = l53 | $l38;

        return l55;
    }

    public void addU8(short)
    {
        android.renderscript.FieldPacker r0;
        short s0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        int $i2, $i3;
        byte[] $r7;
        byte $b4;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        if s0 < 0 goto label1;

        if s0 <= 255 goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU8( ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;

     label2:
        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = $i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $b4 = (byte) s0;

        $r7[$i2] = $b4;

        return;
    }

    public void addU16(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i2, $i3, $i4, $i6, $i7, $i9;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        byte[] $r7, $r8;
        byte $b5, $b8;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU16( ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;

     label2:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = $i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $i4 = i0 & 255;

        $b5 = (byte) $i4;

        $r7[$i2] = $b5;

        $r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i7 = $i6 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i7;

        $i9 = i0 >> 8;

        $b8 = (byte) $i9;

        $r8[$i6] = $b8;

        return;
    }

    public void addU32(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l7, $l11, $l12, $l17, $l19, $l25, $l26;
        byte $b1, $b3, $b9, $b13, $b21, $b24;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r6;
        int $i4, $i5, $i6, $i8, $i10, $i14, $i15, $i16, $i18, $i20, $i22, $i23;
        byte[] $r7, $r8, $r9, $r10;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label1;

        $b3 = l0 cmp 4294967295L;

        if $b3 <= 0 goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU32( ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r5);

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r6;

     label2:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i5 = $i4 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i5;

        $l7 = l0 & 255L;

        $i6 = (int) $l7;

        $b9 = (byte) $i6;

        $r7[$i4] = $b9;

        $r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i8 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i10 = $i8 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i10;

        $l12 = l0 >> 8;

        $l11 = $l12 & 255L;

        $i14 = (int) $l11;

        $b13 = (byte) $i14;

        $r8[$i8] = $b13;

        $r9 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i16 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i15 = $i16 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i15;

        $l17 = l0 >> 16;

        $l19 = $l17 & 255L;

        $i18 = (int) $l19;

        $b21 = (byte) $i18;

        $r9[$i16] = $b21;

        $r10 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i22 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i20 = $i22 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i20;

        $l25 = l0 >> 24;

        $l26 = $l25 & 255L;

        $i23 = (int) $l26;

        $b24 = (byte) $i23;

        $r10[$i22] = $b24;

        return;
    }

    public void addU64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l4, $l9, $l10, $l15, $l16, $l21, $l23, $l26, $l27, $l33, $l35, $l41, $l42, $l43, $l48;
        byte $b1, $b6, $b13, $b17, $b25, $b32, $b37, $b39, $b46;
        int $i2, $i3, $i5, $i7, $i8, $i11, $i12, $i14, $i18, $i19, $i20, $i22, $i24, $i28, $i29, $i30, $i31, $i34, $i36, $i38, $i40, $i44, $i45, $i47;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU64( ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r13);

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r14;

     label1:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = $i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $l4 = l0 & 255L;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        $r1[$i2] = $b6;

        $r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = $i7 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        $l9 = l0 >> 8;

        $l10 = $l9 & 255L;

        $i11 = (int) $l10;

        $b13 = (byte) $i11;

        $r2[$i7] = $b13;

        $r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i12 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i14 = $i12 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i14;

        $l16 = l0 >> 16;

        $l15 = $l16 & 255L;

        $i18 = (int) $l15;

        $b17 = (byte) $i18;

        $r3[$i12] = $b17;

        $r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i20 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i19 = $i20 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i19;

        $l21 = l0 >> 24;

        $l23 = $l21 & 255L;

        $i22 = (int) $l23;

        $b25 = (byte) $i22;

        $r4[$i20] = $b25;

        $r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i24 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i28 = $i24 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i28;

        $l26 = l0 >> 32;

        $l27 = $l26 & 255L;

        $i31 = (int) $l27;

        $b32 = (byte) $i31;

        $r5[$i24] = $b32;

        $r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i29 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i30 = $i29 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i30;

        $l35 = l0 >> 40;

        $l33 = $l35 & 255L;

        $i34 = (int) $l33;

        $b37 = (byte) $i34;

        $r6[$i29] = $b37;

        $r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i38 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i36 = $i38 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i36;

        $l42 = l0 >> 48;

        $l41 = $l42 & 255L;

        $i40 = (int) $l41;

        $b39 = (byte) $i40;

        $r7[$i38] = $b39;

        $r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i45 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i44 = $i45 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i44;

        $l43 = l0 >> 56;

        $l48 = $l43 & 255L;

        $i47 = (int) $l48;

        $b46 = (byte) $i47;

        $r8[$i45] = $b46;

        return;
    }

    public void addF32(float)
    {
        android.renderscript.FieldPacker r0;
        float f0;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        return;
    }

    public float subF32()
    {
        android.renderscript.FieldPacker r0;
        int $i0;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public void addF64(double)
    {
        android.renderscript.FieldPacker r0;
        double d0;
        long $l0;

        r0 := @this: android.renderscript.FieldPacker;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        return;
    }

    public double subF64()
    {
        android.renderscript.FieldPacker r0;
        long $l0;
        double $d0;

        r0 := @this: android.renderscript.FieldPacker;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public void addObj(android.renderscript.BaseObj)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.BaseObj r1;
        int $i0, $i1, $i3;
        long $l2, $l4;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label2;

        $i1 = <android.renderscript.RenderScript: int sPointerSize>;

        if $i1 != 8 goto label1;

        $l4 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>(null);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l4);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        goto label4;

     label1:
        $l2 = virtualinvoke r1.<android.renderscript.BaseObj: long getID(android.renderscript.RenderScript)>(null);

        $i3 = (int) $l2;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i3);

        goto label4;

     label2:
        $i0 = <android.renderscript.RenderScript: int sPointerSize>;

        if $i0 != 8 goto label3;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>(0L);

        goto label4;

     label3:
        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>(0);

     label4:
        return;
    }

    public void addF32(android.renderscript.Float2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 r1;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float2;

        $f0 = r1.<android.renderscript.Float2: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float2: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        return;
    }

    public void addF32(android.renderscript.Float3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 r1;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float3;

        $f0 = r1.<android.renderscript.Float3: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float3: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float3: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        return;
    }

    public void addF32(android.renderscript.Float4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float4;

        $f0 = r1.<android.renderscript.Float4: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float4: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float4: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        $f3 = r1.<android.renderscript.Float4: float w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f3);

        return;
    }

    public void addF64(android.renderscript.Double2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 r1;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double2;

        $d0 = r1.<android.renderscript.Double2: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double2: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        return;
    }

    public void addF64(android.renderscript.Double3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 r1;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double3;

        $d0 = r1.<android.renderscript.Double3: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double3: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double3: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        return;
    }

    public void addF64(android.renderscript.Double4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double4;

        $d0 = r1.<android.renderscript.Double4: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double4: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double4: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        $d3 = r1.<android.renderscript.Double4: double w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d3);

        return;
    }

    public void addI8(android.renderscript.Byte2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 r1;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte2;

        $b0 = r1.<android.renderscript.Byte2: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte2: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        return;
    }

    public void addI8(android.renderscript.Byte3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 r1;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte3;

        $b0 = r1.<android.renderscript.Byte3: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte3: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte3: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        return;
    }

    public void addI8(android.renderscript.Byte4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 r1;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte4;

        $b0 = r1.<android.renderscript.Byte4: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte4: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte4: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        $b3 = r1.<android.renderscript.Byte4: byte w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b3);

        return;
    }

    public void addU8(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        return;
    }

    public void addU8(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        return;
    }

    public void addU8(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s3);

        return;
    }

    public void addI16(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        return;
    }

    public void addI16(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        return;
    }

    public void addI16(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s3);

        return;
    }

    public void addU16(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        return;
    }

    public void addU16(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        return;
    }

    public void addU16(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i3);

        return;
    }

    public void addI32(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        return;
    }

    public void addI32(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        return;
    }

    public void addI32(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i3);

        return;
    }

    public void addU32(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        return;
    }

    public void addU32(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        return;
    }

    public void addU32(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l3);

        return;
    }

    public void addI64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        return;
    }

    public void addI64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        return;
    }

    public void addI64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l3);

        return;
    }

    public void addU64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        return;
    }

    public void addU64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        return;
    }

    public void addU64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l3);

        return;
    }

    public android.renderscript.Float2 subFloat2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 r1, $r2;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float2;

        specialinvoke $r2.<android.renderscript.Float2: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float2: float y> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float2: float x> = $f1;

        return r1;
    }

    public android.renderscript.Float3 subFloat3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float3;

        specialinvoke $r2.<android.renderscript.Float3: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float z> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float y> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float x> = $f2;

        return r1;
    }

    public android.renderscript.Float4 subFloat4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 r1, $r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float4;

        specialinvoke $r2.<android.renderscript.Float4: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float w> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float z> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float y> = $f2;

        $f3 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float x> = $f3;

        return r1;
    }

    public android.renderscript.Double2 subDouble2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 r1, $r2;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double2;

        specialinvoke $r2.<android.renderscript.Double2: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double2: double y> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double2: double x> = $d1;

        return r1;
    }

    public android.renderscript.Double3 subDouble3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 r1, $r2;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double3;

        specialinvoke $r2.<android.renderscript.Double3: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double z> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double y> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double x> = $d2;

        return r1;
    }

    public android.renderscript.Double4 subDouble4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 r1, $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double4;

        specialinvoke $r2.<android.renderscript.Double4: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double w> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double z> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double y> = $d2;

        $d3 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double x> = $d3;

        return r1;
    }

    public android.renderscript.Byte2 subByte2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 r1, $r2;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte2;

        specialinvoke $r2.<android.renderscript.Byte2: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte2: byte y> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte2: byte x> = $b1;

        return r1;
    }

    public android.renderscript.Byte3 subByte3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 r1, $r2;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte3;

        specialinvoke $r2.<android.renderscript.Byte3: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte z> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte y> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte x> = $b2;

        return r1;
    }

    public android.renderscript.Byte4 subByte4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 r1, $r2;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte4;

        specialinvoke $r2.<android.renderscript.Byte4: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte w> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte z> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte y> = $b2;

        $b3 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte x> = $b3;

        return r1;
    }

    public android.renderscript.Short2 subShort2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1, $r2;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short2;

        specialinvoke $r2.<android.renderscript.Short2: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short2: short y> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short2: short x> = $s1;

        return r1;
    }

    public android.renderscript.Short3 subShort3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1, $r2;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short3;

        specialinvoke $r2.<android.renderscript.Short3: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short z> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short y> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short x> = $s2;

        return r1;
    }

    public android.renderscript.Short4 subShort4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1, $r2;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short4;

        specialinvoke $r2.<android.renderscript.Short4: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short w> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short z> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short y> = $s2;

        $s3 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short x> = $s3;

        return r1;
    }

    public android.renderscript.Int2 subInt2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1, $r2;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int2;

        specialinvoke $r2.<android.renderscript.Int2: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int2: int y> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int2: int x> = $i1;

        return r1;
    }

    public android.renderscript.Int3 subInt3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int3;

        specialinvoke $r2.<android.renderscript.Int3: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int z> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int y> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int x> = $i2;

        return r1;
    }

    public android.renderscript.Int4 subInt4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int4;

        specialinvoke $r2.<android.renderscript.Int4: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int w> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int z> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int y> = $i2;

        $i3 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int x> = $i3;

        return r1;
    }

    public android.renderscript.Long2 subLong2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1, $r2;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long2;

        specialinvoke $r2.<android.renderscript.Long2: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long2: long y> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long2: long x> = $l1;

        return r1;
    }

    public android.renderscript.Long3 subLong3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long3;

        specialinvoke $r2.<android.renderscript.Long3: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long z> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long y> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long x> = $l2;

        return r1;
    }

    public android.renderscript.Long4 subLong4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1, $r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long4;

        specialinvoke $r2.<android.renderscript.Long4: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long w> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long z> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long y> = $l2;

        $l3 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long x> = $l3;

        return r1;
    }

    public void addMatrix(android.renderscript.Matrix4f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix4f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public android.renderscript.Matrix4f subMatrix4f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public void addMatrix(android.renderscript.Matrix3f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix3f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public android.renderscript.Matrix3f subMatrix3f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix3f;

        specialinvoke $r2.<android.renderscript.Matrix3f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public void addMatrix(android.renderscript.Matrix2f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix2f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public android.renderscript.Matrix2f subMatrix2f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix2f;

        specialinvoke $r2.<android.renderscript.Matrix2f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public void addBoolean(boolean)
    {
        android.renderscript.FieldPacker r0;
        boolean z0, $z1;
        byte $b0;

        r0 := @this: android.renderscript.FieldPacker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b0 = (byte) $z1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        return;
    }

    public boolean subBoolean()
    {
        android.renderscript.FieldPacker r0;
        byte b0;

        r0 := @this: android.renderscript.FieldPacker;

        b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        if b0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final byte[] getData()
    {
        android.renderscript.FieldPacker r0;
        byte[] $r1;

        r0 := @this: android.renderscript.FieldPacker;

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        return $r1;
    }

    public int getPos()
    {
        android.renderscript.FieldPacker r0;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        $i0 = r0.<android.renderscript.FieldPacker: int mPos>;

        return $i0;
    }
}
