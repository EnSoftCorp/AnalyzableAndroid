public class android.os.FileBridge extends java.lang.Thread
{
    private static final java.lang.String TAG;
    private static final int MSG_LENGTH;
    private static final int CMD_WRITE;
    private static final int CMD_FSYNC;
    private static final int CMD_CLOSE;
    private java.io.FileDescriptor mTarget;
    private final java.io.FileDescriptor mServer;
    private final java.io.FileDescriptor mClient;
    private volatile boolean mClosed;

    public void <init>()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r2, $r3, $r4, $r5;
        int $i0, $i1;
        android.system.ErrnoException $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: android.os.FileBridge;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.io.FileDescriptor;

        specialinvoke $r2.<java.io.FileDescriptor: void <init>()>();

        r0.<android.os.FileBridge: java.io.FileDescriptor mServer> = $r2;

        $r3 = new java.io.FileDescriptor;

        specialinvoke $r3.<java.io.FileDescriptor: void <init>()>();

        r0.<android.os.FileBridge: java.io.FileDescriptor mClient> = $r3;

     label1:
        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        $r5 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $r4 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        staticinvoke <android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, $r5, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to create bridge");

        throw $r7;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public boolean isClosed()
    {
        android.os.FileBridge r0;
        boolean $z0;

        r0 := @this: android.os.FileBridge;

        $z0 = r0.<android.os.FileBridge: boolean mClosed>;

        return $z0;
    }

    public void forceClose()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r1, $r2, $r3;

        r0 := @this: android.os.FileBridge;

        $r1 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r1);

        $r2 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r2);

        $r3 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r3);

        r0.<android.os.FileBridge: boolean mClosed> = 1;

        return;
    }

    public void setTargetFile(java.io.FileDescriptor)
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.os.FileBridge;

        r1 := @parameter0: java.io.FileDescriptor;

        r0.<android.os.FileBridge: java.io.FileDescriptor mTarget> = r1;

        return;
    }

    public java.io.FileDescriptor getClientSocket()
    {
        android.os.FileBridge r0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.FileBridge;

        $r1 = r0.<android.os.FileBridge: java.io.FileDescriptor mClient>;

        return $r1;
    }

    public void run()
    {
        android.os.FileBridge r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Throwable r2, $r20;
        java.io.FileDescriptor $r3, $r5, $r6, $r7, $r8, $r9, $r11, $r13;
        java.nio.ByteOrder $r4, $r10;
        java.io.IOException $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17;
        java.lang.Exception $r18, r21;
        java.lang.String $r19;

        r0 := @this: android.os.FileBridge;

        r1 = newarray (byte)[8192];

     label01:
        $r3 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $i3 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r3, r1, 0, 8);

        if $i3 != 8 goto label08;

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i0 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r1, 0, $r4);

        if i0 != 1 goto label05;

        $r10 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i1 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>(r1, 4, $r10);

     label02:
        if i1 <= 0 goto label04;

        $r11 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        $i4 = lengthof r1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i1);

        i2 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r11, r1, 0, $i5);

        if i2 != -1 goto label03;

        $r12 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected EOF; still expected ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r12;

     label03:
        $r13 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r13, r1, 0, i2);

        i1 = i1 - i2;

        goto label02;

     label04:
        goto label07;

     label05:
        if i0 != 2 goto label06;

        $r8 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r8);

        $r9 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r9, r1, 0, 8);

        goto label07;

     label06:
        if i0 != 3 goto label07;

        $r5 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void fsync(java.io.FileDescriptor)>($r5);

        $r6 = r0.<android.os.FileBridge: java.io.FileDescriptor mTarget>;

        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>($r6);

        r0.<android.os.FileBridge: boolean mClosed> = 1;

        $r7 = r0.<android.os.FileBridge: java.io.FileDescriptor mServer>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r7, r1, 0, 8);

        goto label08;

     label07:
        goto label01;

     label08:
        virtualinvoke r0.<android.os.FileBridge: void forceClose()>();

        goto label13;

     label09:
        $r18 := @caughtexception;

        r21 = $r18;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("FileBridge", "Failed during bridge", r21);

     label10:
        virtualinvoke r0.<android.os.FileBridge: void forceClose()>();

        goto label13;

     label11:
        $r20 := @caughtexception;

        r2 = $r20;

     label12:
        virtualinvoke r0.<android.os.FileBridge: void forceClose()>();

        throw r2;

     label13:
        return;

        catch android.system.ErrnoException from label01 to label08 with label09;
        catch java.io.IOException from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void <clinit>()
    {
        <android.os.FileBridge: int CMD_CLOSE> = 3;

        <android.os.FileBridge: int CMD_FSYNC> = 2;

        <android.os.FileBridge: int CMD_WRITE> = 1;

        <android.os.FileBridge: int MSG_LENGTH> = 8;

        <android.os.FileBridge: java.lang.String TAG> = "FileBridge";

        return;
    }
}
