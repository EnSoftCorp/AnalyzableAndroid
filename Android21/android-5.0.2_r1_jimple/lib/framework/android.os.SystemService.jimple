public class android.os.SystemService extends java.lang.Object
{
    private static java.util.HashMap sStates;
    private static java.lang.Object sPropertyLock;

    public void <init>()
    {
        android.os.SystemService r0;

        r0 := @this: android.os.SystemService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void start(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.start", r0);

        return;
    }

    public static void stop(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.stop", r0);

        return;
    }

    public static void restart(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.restart", r0);

        return;
    }

    public static android.os.SystemService$State getState(java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        android.os.SystemService$State r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.util.HashMap $r7;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("init.svc.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r6);

        $r7 = <android.os.SystemService: java.util.HashMap sStates>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.os.SystemService$State) $r8;

        if r2 == null goto label1;

        return r2;

     label1:
        $r9 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        return $r9;
    }

    public static boolean isStopped(java.lang.String)
    {
        java.lang.String r0;
        android.os.SystemService$State $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        $r2 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isRunning(java.lang.String)
    {
        java.lang.String r0;
        android.os.SystemService$State $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <android.os.SystemService$State: android.os.SystemService$State RUNNING>;

        $r2 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static void waitForState(java.lang.String, android.os.SystemService$State, long) throws java.util.concurrent.TimeoutException
    {
        java.lang.String r0, $r18;
        android.os.SystemService$State r1, r3;
        long l0, l1, $l2, $l3;
        java.lang.Object r2, $r6, $r7;
        java.lang.Throwable r5, $r19;
        boolean $z0;
        byte $b4;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.util.concurrent.TimeoutException $r9;
        java.lang.InterruptedException $r20;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.SystemService$State;

        l0 := @parameter2: long;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = $l2 + l0;

     label01:
        $r6 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        r3 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r0);

        $z0 = virtualinvoke r1.<android.os.SystemService$State: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label04;

        exitmonitor r2;

     label03:
        return;

     label04:
        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $b4 = $l3 cmp l1;

        if $b4 < 0 goto label05;

        $r9 = new java.util.concurrent.TimeoutException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currently ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; waited ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r18);

        throw $r9;

     label05:
        $r7 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        virtualinvoke $r7.<java.lang.Object: void wait(long)>(l0);

     label06:
        goto label08;

     label07:
        $r20 := @caughtexception;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r2;

     label11:
        throw r5;

     label12:
        goto label01;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static transient void waitForAnyStopped(java.lang.String[])
    {
        java.lang.String[] r0, r2;
        java.lang.Object r1, $r5, $r6;
        int i0, i1;
        java.lang.String r3;
        java.lang.Throwable r4, $r10;
        android.os.SystemService$State $r7, $r8;
        boolean $z0;
        java.lang.InterruptedException $r9;

        r0 := @parameter0: java.lang.String[];

     label01:
        $r5 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        r1 = $r5;

        entermonitor $r5;

     label02:
        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

        r3 = r2[i1];

        $r7 = <android.os.SystemService$State: android.os.SystemService$State STOPPED>;

        $r8 = staticinvoke <android.os.SystemService: android.os.SystemService$State getState(java.lang.String)>(r3);

        $z0 = virtualinvoke $r7.<android.os.SystemService$State: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r6 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        virtualinvoke $r6.<java.lang.Object: void wait()>();

     label07:
        goto label09;

     label08:
        $r9 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r1;

     label12:
        throw r4;

     label13:
        goto label01;

        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static java.util.HashMap access$000()
    {
        java.util.HashMap $r0;

        $r0 = <android.os.SystemService: java.util.HashMap sStates>;

        return $r0;
    }

    static java.lang.Object access$100()
    {
        java.lang.Object $r0;

        $r0 = <android.os.SystemService: java.lang.Object sPropertyLock>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.Object $r1;
        android.os.SystemService$1 $r2;

        $r0 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

        <android.os.SystemService: java.util.HashMap sStates> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.os.SystemService: java.lang.Object sPropertyLock> = $r1;

        $r2 = new android.os.SystemService$1;

        specialinvoke $r2.<android.os.SystemService$1: void <init>()>();

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r2);

        return;
    }
}
