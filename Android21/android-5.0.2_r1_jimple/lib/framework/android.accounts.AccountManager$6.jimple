class android.accounts.AccountManager$6 extends android.accounts.AccountManager$Future2Task
{
    final android.accounts.Account val$account;
    final android.os.UserHandle val$userHandle;
    final android.accounts.AccountManager this$0;

    void <init>(android.accounts.AccountManager, android.os.Handler, android.accounts.AccountManagerCallback, android.accounts.Account, android.os.UserHandle)
    {
        android.accounts.AccountManager$6 r0;
        android.accounts.AccountManager r1;
        android.os.Handler r2;
        android.accounts.AccountManagerCallback r3;
        android.accounts.Account r4;
        android.os.UserHandle r5;

        r0 := @this: android.accounts.AccountManager$6;

        r1 := @parameter0: android.accounts.AccountManager;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.accounts.AccountManagerCallback;

        r4 := @parameter3: android.accounts.Account;

        r5 := @parameter4: android.os.UserHandle;

        r0.<android.accounts.AccountManager$6: android.accounts.AccountManager this$0> = r1;

        r0.<android.accounts.AccountManager$6: android.accounts.Account val$account> = r4;

        r0.<android.accounts.AccountManager$6: android.os.UserHandle val$userHandle> = r5;

        specialinvoke r0.<android.accounts.AccountManager$Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>(r1, r2, r3);

        return;
    }

    public void doWork() throws android.os.RemoteException
    {
        android.accounts.AccountManager$6 r0;
        android.accounts.AccountManager $r1;
        android.accounts.IAccountManager $r2;
        android.os.UserHandle $r3;
        android.accounts.IAccountManagerResponse $r4;
        android.accounts.Account $r5;
        int $i0;

        r0 := @this: android.accounts.AccountManager$6;

        $r1 = r0.<android.accounts.AccountManager$6: android.accounts.AccountManager this$0>;

        $r2 = staticinvoke <android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)>($r1);

        $r4 = r0.<android.accounts.AccountManager$6: android.accounts.IAccountManagerResponse mResponse>;

        $r5 = r0.<android.accounts.AccountManager$6: android.accounts.Account val$account>;

        $r3 = r0.<android.accounts.AccountManager$6: android.os.UserHandle val$userHandle>;

        $i0 = virtualinvoke $r3.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r2.<android.accounts.IAccountManager: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int)>($r4, $r5, $i0);

        return;
    }

    public java.lang.Boolean bundleToResult(android.os.Bundle) throws android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$6 r0;
        android.os.Bundle r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        android.accounts.AuthenticatorException $r3;

        r0 := @this: android.accounts.AccountManager$6;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("booleanResult");

        if $z0 != 0 goto label1;

        $r3 = new android.accounts.AuthenticatorException;

        specialinvoke $r3.<android.accounts.AuthenticatorException: void <init>(java.lang.String)>("no result in response");

        throw $r3;

     label1:
        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("booleanResult");

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        return $r2;
    }

    public volatile java.lang.Object bundleToResult(android.os.Bundle) throws android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$6 r0;
        android.os.Bundle r1;
        java.lang.Boolean $r2;

        r0 := @this: android.accounts.AccountManager$6;

        r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke r0.<android.accounts.AccountManager$6: java.lang.Boolean bundleToResult(android.os.Bundle)>(r1);

        return $r2;
    }
}
