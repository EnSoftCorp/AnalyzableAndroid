public abstract class android.media.tv.TvInputService extends android.app.Service
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    public static final java.lang.String SERVICE_INTERFACE;
    public static final java.lang.String SERVICE_META_DATA;
    private final android.os.Handler mServiceHandler;
    private final android.os.RemoteCallbackList mCallbacks;
    private android.media.tv.TvInputManager mTvInputManager;

    public void <init>()
    {
        android.media.tv.TvInputService r0;
        android.media.tv.TvInputService$ServiceHandler $r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: android.media.tv.TvInputService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.media.tv.TvInputService$ServiceHandler;

        specialinvoke $r1.<android.media.tv.TvInputService$ServiceHandler: void <init>(android.media.tv.TvInputService,android.media.tv.TvInputService$1)>(r0, null);

        r0.<android.media.tv.TvInputService: android.os.Handler mServiceHandler> = $r1;

        $r2 = new android.os.RemoteCallbackList;

        specialinvoke $r2.<android.os.RemoteCallbackList: void <init>()>();

        r0.<android.media.tv.TvInputService: android.os.RemoteCallbackList mCallbacks> = $r2;

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.media.tv.TvInputService r0;
        android.content.Intent r1;
        android.media.tv.TvInputService$1 $r2;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new android.media.tv.TvInputService$1;

        specialinvoke $r2.<android.media.tv.TvInputService$1: void <init>(android.media.tv.TvInputService)>(r0);

        return $r2;
    }

    public final int getRegisteredCallbackCount()
    {
        android.media.tv.TvInputService r0;
        android.os.RemoteCallbackList $r1;
        int $i0;

        r0 := @this: android.media.tv.TvInputService;

        $r1 = r0.<android.media.tv.TvInputService: android.os.RemoteCallbackList mCallbacks>;

        $i0 = virtualinvoke $r1.<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>();

        return $i0;
    }

    public abstract android.media.tv.TvInputService$Session onCreateSession(java.lang.String);

    public android.media.tv.TvInputInfo onHardwareAdded(android.media.tv.TvInputHardwareInfo)
    {
        android.media.tv.TvInputService r0;
        android.media.tv.TvInputHardwareInfo r1;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: android.media.tv.TvInputHardwareInfo;

        return null;
    }

    public java.lang.String onHardwareRemoved(android.media.tv.TvInputHardwareInfo)
    {
        android.media.tv.TvInputService r0;
        android.media.tv.TvInputHardwareInfo r1;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: android.media.tv.TvInputHardwareInfo;

        return null;
    }

    public android.media.tv.TvInputInfo onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)
    {
        android.media.tv.TvInputService r0;
        android.hardware.hdmi.HdmiDeviceInfo r1;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: android.hardware.hdmi.HdmiDeviceInfo;

        return null;
    }

    public java.lang.String onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)
    {
        android.media.tv.TvInputService r0;
        android.hardware.hdmi.HdmiDeviceInfo r1;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: android.hardware.hdmi.HdmiDeviceInfo;

        return null;
    }

    private boolean isPassthroughInput(java.lang.String)
    {
        android.media.tv.TvInputService r0;
        java.lang.String r1;
        android.media.tv.TvInputInfo r2;
        android.media.tv.TvInputManager $r3, $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.media.tv.TvInputService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.media.tv.TvInputService: android.media.tv.TvInputManager mTvInputManager>;

        if $r3 != null goto label1;

        $r5 = virtualinvoke r0.<android.media.tv.TvInputService: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        $r6 = (android.media.tv.TvInputManager) $r5;

        r0.<android.media.tv.TvInputService: android.media.tv.TvInputManager mTvInputManager> = $r6;

     label1:
        $r4 = r0.<android.media.tv.TvInputService: android.media.tv.TvInputManager mTvInputManager>;

        r2 = virtualinvoke $r4.<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>(r1);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.media.tv.TvInputInfo: boolean isPassthroughInput()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean isNavigationKey(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 19: goto label1;
            case 20: goto label1;
            case 21: goto label1;
            case 22: goto label1;
            case 23: goto label1;
            case 61: goto label1;
            case 62: goto label1;
            case 66: goto label1;
            case 92: goto label1;
            case 93: goto label1;
            case 122: goto label1;
            case 123: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    static android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)
    {
        android.media.tv.TvInputService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @parameter0: android.media.tv.TvInputService;

        $r1 = r0.<android.media.tv.TvInputService: android.os.RemoteCallbackList mCallbacks>;

        return $r1;
    }

    static android.os.Handler access$200(android.media.tv.TvInputService)
    {
        android.media.tv.TvInputService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.media.tv.TvInputService;

        $r1 = r0.<android.media.tv.TvInputService: android.os.Handler mServiceHandler>;

        return $r1;
    }

    static boolean access$1200(android.media.tv.TvInputService, java.lang.String)
    {
        android.media.tv.TvInputService r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.media.tv.TvInputService;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<android.media.tv.TvInputService: boolean isPassthroughInput(java.lang.String)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputService: java.lang.String SERVICE_META_DATA> = "android.media.tv.input";

        <android.media.tv.TvInputService: java.lang.String SERVICE_INTERFACE> = "android.media.tv.TvInputService";

        <android.media.tv.TvInputService: java.lang.String TAG> = "TvInputService";

        <android.media.tv.TvInputService: boolean DEBUG> = 0;

        return;
    }
}
