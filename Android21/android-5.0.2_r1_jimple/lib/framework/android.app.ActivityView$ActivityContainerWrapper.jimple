class android.app.ActivityView$ActivityContainerWrapper extends java.lang.Object
{
    private final android.app.IActivityContainer mIActivityContainer;
    private final dalvik.system.CloseGuard mGuard;
    boolean mOpened;

    void <init>(android.app.IActivityContainer)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.app.IActivityContainer r1;
        dalvik.system.CloseGuard $r2, $r3;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.app.IActivityContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard> = $r2;

        r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer> = r1;

        r0.<android.app.ActivityView$ActivityContainerWrapper: boolean mOpened> = 1;

        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void open(java.lang.String)>("release");

        return;
    }

    void attachToDisplay(int)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        int i0;
        android.app.IActivityContainer $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        interfaceinvoke $r2.<android.app.IActivityContainer: void attachToDisplay(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void setSurface(android.view.Surface, int, int, int) throws android.os.RemoteException
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.view.Surface r1;
        int i0, i1, i2;
        android.app.IActivityContainer $r2;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.view.Surface;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        interfaceinvoke $r2.<android.app.IActivityContainer: void setSurface(android.view.Surface,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    int startActivity(android.content.Intent)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.content.Intent r1;
        android.os.RemoteException r2, $r4;
        android.app.IActivityContainer $r3;
        int $i0;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.content.Intent;

     label1:
        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        $i0 = interfaceinvoke $r3.<android.app.IActivityContainer: int startActivity(android.content.Intent)>(r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to startActivity. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    int startActivityIntentSender(android.content.IIntentSender)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.content.IIntentSender r1;
        android.os.RemoteException r2, $r4;
        android.app.IActivityContainer $r3;
        int $i0;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.content.IIntentSender;

     label1:
        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        $i0 = interfaceinvoke $r3.<android.app.IActivityContainer: int startActivityIntentSender(android.content.IIntentSender)>(r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to startActivity from IntentSender. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void checkEmbeddedAllowed(android.content.Intent)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.content.Intent r1;
        android.os.RemoteException r2, $r4;
        android.app.IActivityContainer $r3;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.content.Intent;

     label1:
        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        interfaceinvoke $r3.<android.app.IActivityContainer: void checkEmbeddedAllowed(android.content.Intent)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to startActivity from Intent. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.content.IIntentSender r1;
        android.os.RemoteException r2, $r4;
        android.app.IActivityContainer $r3;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.content.IIntentSender;

     label1:
        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        interfaceinvoke $r3.<android.app.IActivityContainer: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityView: Unable to startActivity from IntentSender. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    int getDisplayId()
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.app.IActivityContainer $r2;
        int $i0;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

     label1:
        $r2 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        $i0 = interfaceinvoke $r2.<android.app.IActivityContainer: int getDisplayId()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    boolean injectEvent(android.view.InputEvent)
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        android.view.InputEvent r1;
        android.app.IActivityContainer $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        r1 := @parameter0: android.view.InputEvent;

     label1:
        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        $z0 = interfaceinvoke $r3.<android.app.IActivityContainer: boolean injectEvent(android.view.InputEvent)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void release()
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        dalvik.system.CloseGuard r1, $r4, $r6;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.app.IActivityContainer $r5;
        android.os.RemoteException $r8;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

        $r4 = r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $z0 = r0.<android.app.ActivityView$ActivityContainerWrapper: boolean mOpened>;

        if $z0 == 0 goto label06;

     label02:
        $r5 = r0.<android.app.ActivityView$ActivityContainerWrapper: android.app.IActivityContainer mIActivityContainer>;

        interfaceinvoke $r5.<android.app.IActivityContainer: void release()>();

        $r6 = r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r6.<dalvik.system.CloseGuard: void close()>();

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

     label05:
        r0.<android.app.ActivityView$ActivityContainerWrapper: boolean mOpened> = 0;

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.app.ActivityView$ActivityContainerWrapper r0;
        java.lang.Throwable r1, $r4;
        dalvik.system.CloseGuard $r2, $r3;

        r0 := @this: android.app.ActivityView$ActivityContainerWrapper;

     label1:
        $r2 = r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.app.ActivityView$ActivityContainerWrapper: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

        virtualinvoke r0.<android.app.ActivityView$ActivityContainerWrapper: void release()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
