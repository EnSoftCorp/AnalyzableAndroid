public class android.media.RemoteControlClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    public static final int PLAYSTATE_STOPPED;
    public static final int PLAYSTATE_PAUSED;
    public static final int PLAYSTATE_PLAYING;
    public static final int PLAYSTATE_FAST_FORWARDING;
    public static final int PLAYSTATE_REWINDING;
    public static final int PLAYSTATE_SKIPPING_FORWARDS;
    public static final int PLAYSTATE_SKIPPING_BACKWARDS;
    public static final int PLAYSTATE_BUFFERING;
    public static final int PLAYSTATE_ERROR;
    public static final int PLAYSTATE_NONE;
    public static final int PLAYBACK_TYPE_LOCAL;
    public static final int PLAYBACK_TYPE_REMOTE;
    private static final int PLAYBACK_TYPE_MIN;
    private static final int PLAYBACK_TYPE_MAX;
    public static final int PLAYBACK_VOLUME_FIXED;
    public static final int PLAYBACK_VOLUME_VARIABLE;
    public static final int PLAYBACKINFO_INVALID_VALUE;
    public static final long PLAYBACK_POSITION_INVALID;
    public static final long PLAYBACK_POSITION_ALWAYS_UNKNOWN;
    public static final float PLAYBACK_SPEED_1X;
    public static final int PLAYBACKINFO_PLAYBACK_TYPE;
    public static final int PLAYBACKINFO_VOLUME;
    public static final int PLAYBACKINFO_VOLUME_MAX;
    public static final int PLAYBACKINFO_VOLUME_HANDLING;
    public static final int PLAYBACKINFO_USES_STREAM;
    public static final int FLAG_KEY_MEDIA_PREVIOUS;
    public static final int FLAG_KEY_MEDIA_REWIND;
    public static final int FLAG_KEY_MEDIA_PLAY;
    public static final int FLAG_KEY_MEDIA_PLAY_PAUSE;
    public static final int FLAG_KEY_MEDIA_PAUSE;
    public static final int FLAG_KEY_MEDIA_STOP;
    public static final int FLAG_KEY_MEDIA_FAST_FORWARD;
    public static final int FLAG_KEY_MEDIA_NEXT;
    public static final int FLAG_KEY_MEDIA_POSITION_UPDATE;
    public static final int FLAG_KEY_MEDIA_RATING;
    public static final int FLAGS_KEY_MEDIA_NONE;
    public static final int FLAG_INFORMATION_REQUEST_METADATA;
    public static final int FLAG_INFORMATION_REQUEST_KEY_MEDIA;
    public static final int FLAG_INFORMATION_REQUEST_PLAYSTATE;
    public static final int FLAG_INFORMATION_REQUEST_ALBUM_ART;
    private android.media.session.MediaSession mSession;
    public static int MEDIA_POSITION_READABLE;
    public static int MEDIA_POSITION_WRITABLE;
    public static final int DEFAULT_PLAYBACK_VOLUME_HANDLING;
    public static final int DEFAULT_PLAYBACK_VOLUME;
    private final java.lang.Object mCacheLock;
    private int mPlaybackState;
    private long mPlaybackStateChangeTimeMs;
    private long mPlaybackPositionMs;
    private float mPlaybackSpeed;
    private android.graphics.Bitmap mOriginalArtwork;
    private int mTransportControlFlags;
    private android.os.Bundle mMetadata;
    private android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener;
    private android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider;
    private android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener;
    private int mCurrentClientGenId;
    private final android.app.PendingIntent mRcMediaIntent;
    private boolean mNeedsPositionSync;
    private android.media.session.PlaybackState mSessionPlaybackState;
    private android.media.MediaMetadata mMediaMetadata;
    public static final int RCSE_ID_UNREGISTERED;
    private android.media.session.MediaSession$Callback mTransportListener;
    private android.media.RemoteControlClient$EventHandler mEventHandler;
    private static final int MSG_POSITION_DRIFT_CHECK;
    private static final long POSITION_REFRESH_PERIOD_PLAYING_MS;
    private static final long POSITION_REFRESH_PERIOD_MIN_MS;
    private static final long POSITION_DRIFT_MAX_MS;

    public void <init>(android.app.PendingIntent)
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent r1;
        android.os.Looper r2, $r6, $r7, r10;
        java.lang.Object $r3;
        android.os.Bundle $r4;
        android.media.RemoteControlClient$1 $r5;
        android.media.RemoteControlClient$EventHandler $r8, $r9;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.app.PendingIntent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock> = $r3;

        r0.<android.media.RemoteControlClient: int mPlaybackState> = 0;

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = 0L;

        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = 1.0F;

        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = 0;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = $r4;

        r0.<android.media.RemoteControlClient: int mCurrentClientGenId> = -1;

        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = 0;

        r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState> = null;

        $r5 = new android.media.RemoteControlClient$1;

        specialinvoke $r5.<android.media.RemoteControlClient$1: void <init>(android.media.RemoteControlClient)>(r0);

        r0.<android.media.RemoteControlClient: android.media.session.MediaSession$Callback mTransportListener> = $r5;

        r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent> = r1;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r2 = $r6;

        if $r6 == null goto label1;

        $r9 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r9.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r2);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r9;

        goto label3;

     label1:
        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r10 = $r7;

        if $r7 == null goto label2;

        $r8 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r8.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r10);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r8;

        goto label3;

     label2:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = null;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteControlClient", "RemoteControlClient() couldn\'t find main application thread");

     label3:
        return;
    }

    public void <init>(android.app.PendingIntent, android.os.Looper)
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent r1;
        android.os.Looper r2;
        java.lang.Object $r3;
        android.os.Bundle $r4;
        android.media.RemoteControlClient$1 $r5;
        android.media.RemoteControlClient$EventHandler $r6;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock> = $r3;

        r0.<android.media.RemoteControlClient: int mPlaybackState> = 0;

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = 0L;

        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = 1.0F;

        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = 0;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = $r4;

        r0.<android.media.RemoteControlClient: int mCurrentClientGenId> = -1;

        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = 0;

        r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState> = null;

        $r5 = new android.media.RemoteControlClient$1;

        specialinvoke $r5.<android.media.RemoteControlClient$1: void <init>(android.media.RemoteControlClient)>(r0);

        r0.<android.media.RemoteControlClient: android.media.session.MediaSession$Callback mTransportListener> = $r5;

        r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent> = r1;

        $r6 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r6.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r2);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r6;

        return;
    }

    public void registerWithSession(android.media.session.MediaSessionLegacyHelper)
    {
        android.media.RemoteControlClient r0;
        android.media.session.MediaSessionLegacyHelper r1;
        android.media.session.MediaSession$Callback $r2;
        android.app.PendingIntent $r3, $r4;
        android.media.session.MediaSession $r5;
        int $i0;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.session.MediaSessionLegacyHelper;

        $r3 = r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent>;

        $r2 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession$Callback mTransportListener>;

        virtualinvoke r1.<android.media.session.MediaSessionLegacyHelper: void addRccListener(android.app.PendingIntent,android.media.session.MediaSession$Callback)>($r3, $r2);

        $r4 = r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent>;

        $r5 = virtualinvoke r1.<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSession getSession(android.app.PendingIntent)>($r4);

        r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession> = $r5;

        $i0 = r0.<android.media.RemoteControlClient: int mTransportControlFlags>;

        virtualinvoke r0.<android.media.RemoteControlClient: void setTransportControlFlags(int)>($i0);

        return;
    }

    public void unregisterWithSession(android.media.session.MediaSessionLegacyHelper)
    {
        android.media.RemoteControlClient r0;
        android.media.session.MediaSessionLegacyHelper r1;
        android.app.PendingIntent $r2;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.session.MediaSessionLegacyHelper;

        $r2 = r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent>;

        virtualinvoke r1.<android.media.session.MediaSessionLegacyHelper: void removeRccListener(android.app.PendingIntent)>($r2);

        r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession> = null;

        return;
    }

    public android.media.session.MediaSession getMediaSession()
    {
        android.media.RemoteControlClient r0;
        android.media.session.MediaSession $r1;

        r0 := @this: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        return $r1;
    }

    public android.media.RemoteControlClient$MetadataEditor editMetadata(boolean)
    {
        android.media.RemoteControlClient r0;
        boolean z0;
        android.media.RemoteControlClient$MetadataEditor r1, $r2;
        android.os.Bundle $r3, $r4, $r10;
        android.graphics.Bitmap $r5;
        android.media.MediaMetadata$Builder $r6, $r8;
        android.media.MediaMetadata $r7, $r9;

        r0 := @this: android.media.RemoteControlClient;

        z0 := @parameter0: boolean;

        $r2 = new android.media.RemoteControlClient$MetadataEditor;

        specialinvoke $r2.<android.media.RemoteControlClient$MetadataEditor: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient$1)>(r0, null);

        r1 = $r2;

        if z0 == 0 goto label1;

        $r10 = new android.os.Bundle;

        specialinvoke $r10.<android.os.Bundle: void <init>()>();

        r1.<android.media.RemoteControlClient$MetadataEditor: android.os.Bundle mEditorMetadata> = $r10;

        r1.<android.media.RemoteControlClient$MetadataEditor: android.graphics.Bitmap mEditorArtwork> = null;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mMetadataChanged> = 1;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mArtworkChanged> = 1;

        r1.<android.media.RemoteControlClient$MetadataEditor: long mEditableKeys> = 0L;

        goto label2;

     label1:
        $r3 = new android.os.Bundle;

        $r4 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r1.<android.media.RemoteControlClient$MetadataEditor: android.os.Bundle mEditorMetadata> = $r3;

        $r5 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        r1.<android.media.RemoteControlClient$MetadataEditor: android.graphics.Bitmap mEditorArtwork> = $r5;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mMetadataChanged> = 0;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mArtworkChanged> = 0;

     label2:
        if z0 != 0 goto label3;

        $r7 = r0.<android.media.RemoteControlClient: android.media.MediaMetadata mMediaMetadata>;

        if $r7 != null goto label4;

     label3:
        $r6 = new android.media.MediaMetadata$Builder;

        specialinvoke $r6.<android.media.MediaMetadata$Builder: void <init>()>();

        r1.<android.media.RemoteControlClient$MetadataEditor: android.media.MediaMetadata$Builder mMetadataBuilder> = $r6;

        goto label5;

     label4:
        $r8 = new android.media.MediaMetadata$Builder;

        $r9 = r0.<android.media.RemoteControlClient: android.media.MediaMetadata mMediaMetadata>;

        specialinvoke $r8.<android.media.MediaMetadata$Builder: void <init>(android.media.MediaMetadata)>($r9);

        r1.<android.media.RemoteControlClient$MetadataEditor: android.media.MediaMetadata$Builder mMetadataBuilder> = $r8;

     label5:
        return r1;
    }

    public void setPlaybackState(int)
    {
        android.media.RemoteControlClient r0;
        int i0;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.RemoteControlClient: void setPlaybackStateInt(int,long,float,boolean)>(i0, -9216204211029966080L, 1.0F, 0);

        return;
    }

    public void setPlaybackState(int, long, float)
    {
        android.media.RemoteControlClient r0;
        int i0;
        long l1;
        float f0;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        specialinvoke r0.<android.media.RemoteControlClient: void setPlaybackStateInt(int,long,float,boolean)>(i0, l1, f0, 1);

        return;
    }

    private void setPlaybackStateInt(int, long, float, boolean)
    {
        android.media.RemoteControlClient r0;
        int i0, i2, $i4;
        long l1, l3, $l5, $l6, $l8, $l10;
        float f0, $f1;
        boolean z0;
        java.lang.Object r1, $r4;
        android.media.session.PlaybackState$Builder r2, $r7;
        java.lang.Throwable r3, $r13;
        android.media.session.MediaSession $r5, $r11;
        android.media.session.PlaybackState $r6, $r9, $r12;
        byte $b7, $b9, $b11;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $i4 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        if $i4 != i0 goto label02;

        $l10 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $b9 = $l10 cmp l1;

        if $b9 != 0 goto label02;

        $f1 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $b11 = $f1 cmpl f0;

        if $b11 == 0 goto label08;

     label02:
        r0.<android.media.RemoteControlClient: int mPlaybackState> = i0;

        if z0 == 0 goto label04;

        $b7 = l1 cmp 0L;

        if $b7 >= 0 goto label03;

        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

        goto label05;

     label03:
        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = l1;

        goto label05;

     label04:
        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -9216204211029966080L;

     label05:
        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = f0;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = $l5;

        $r5 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        if $r5 == null goto label08;

        i2 = staticinvoke <android.media.session.PlaybackState: int getStateFromRccState(int)>(i0);

        if z0 == 0 goto label06;

        $l8 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        goto label07;

     label06:
        $l8 = -1L;

     label07:
        l3 = $l8;

        $r7 = new android.media.session.PlaybackState$Builder;

        $r6 = r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState>;

        specialinvoke $r7.<android.media.session.PlaybackState$Builder: void <init>(android.media.session.PlaybackState)>($r6);

        r2 = $r7;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r2.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState$Builder setState(int,long,float,long)>(i2, l3, f0, $l6);

        virtualinvoke r2.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState$Builder setErrorMessage(java.lang.CharSequence)>(null);

        $r9 = virtualinvoke r2.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState build()>();

        r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState> = $r9;

        $r11 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        $r12 = r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState>;

        virtualinvoke $r11.<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>($r12);

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label11:
        throw r3;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void onPositionDriftCheck()
    {
        android.media.RemoteControlClient r0;
        java.lang.Object r1, $r3;
        long l0, l1, $l2, $l4, $l6, $l7, $l8, $l9, $l11, $l12, $l14;
        java.lang.Throwable r2, $r11;
        android.media.RemoteControlClient$EventHandler $r4, $r7, $r8, $r10;
        android.media.RemoteControlClient$OnGetPlaybackPositionListener $r5, $r6;
        boolean $z0;
        byte $b3, $b5, $b10, $b13;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.os.Message $r9;
        int $i15;

        r0 := @this: android.media.RemoteControlClient;

        $r3 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        if $r4 == null goto label02;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        if $r5 == null goto label02;

        $z0 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        if $z0 != 0 goto label04;

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $l2 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label05;

        $f0 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $b5 = $f0 cmpl 0.0F;

        if $b5 != 0 goto label07;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $l4 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs>;

        $l8 = $l7 - $l6;

        $f3 = (float) $l8;

        $f1 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $f2 = $f3 / $f1;

        $l9 = (long) $f2;

        l0 = $l4 + $l9;

        $r6 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        l1 = interfaceinvoke $r6.<android.media.RemoteControlClient$OnGetPlaybackPositionListener: long onGetPlaybackPosition()>();

        $b10 = l1 cmp 0L;

        if $b10 < 0 goto label09;

        $l12 = l0 - l1;

        $l11 = staticinvoke <java.lang.Math: long abs(long)>($l12);

        $b13 = $l11 cmp 500L;

        if $b13 <= 0 goto label08;

        $i15 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $f4 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        virtualinvoke r0.<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>($i15, l1, $f4);

        goto label10;

     label08:
        $r8 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r10 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r9 = virtualinvoke $r10.<android.media.RemoteControlClient$EventHandler: android.os.Message obtainMessage(int)>(11);

        $f5 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $l14 = staticinvoke <android.media.RemoteControlClient: long getCheckPeriodFromSpeed(float)>($f5);

        virtualinvoke $r8.<android.media.RemoteControlClient$EventHandler: boolean sendMessageDelayed(android.os.Message,long)>($r9, $l14);

        goto label10;

     label09:
        $r7 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        virtualinvoke $r7.<android.media.RemoteControlClient$EventHandler: void removeMessages(int)>(11);

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label13:
        throw r2;

     label14:
        return;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label06 with label12;
        catch java.lang.Throwable from label07 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void setTransportControlFlags(int)
    {
        android.media.RemoteControlClient r0;
        int i0;
        java.lang.Object r1, $r4;
        android.media.session.PlaybackState$Builder r2, $r6;
        java.lang.Throwable r3, $r12;
        android.media.session.MediaSession $r5, $r11;
        android.media.session.PlaybackState $r7, $r9, $r10;
        long $l1;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = i0;

        $r5 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        if $r5 == null goto label2;

        $r6 = new android.media.session.PlaybackState$Builder;

        $r7 = r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState>;

        specialinvoke $r6.<android.media.session.PlaybackState$Builder: void <init>(android.media.session.PlaybackState)>($r7);

        r2 = $r6;

        $l1 = staticinvoke <android.media.session.PlaybackState: long getActionsFromRccControlFlags(int)>(i0);

        virtualinvoke r2.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState$Builder setActions(long)>($l1);

        $r9 = virtualinvoke r2.<android.media.session.PlaybackState$Builder: android.media.session.PlaybackState build()>();

        r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState> = $r9;

        $r11 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        $r10 = r0.<android.media.RemoteControlClient: android.media.session.PlaybackState mSessionPlaybackState>;

        virtualinvoke $r11.<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>($r10);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r1;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setMetadataUpdateListener(android.media.RemoteControlClient$OnMetadataUpdateListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnMetadataUpdateListener r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnMetadataUpdateListener;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPlaybackPositionUpdateListener(android.media.RemoteControlClient$OnPlaybackPositionUpdateListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setOnGetPlaybackPositionListener(android.media.RemoteControlClient$OnGetPlaybackPositionListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnGetPlaybackPositionListener r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r10;
        android.media.RemoteControlClient$EventHandler $r6, $r7, $r8;
        int $i0;
        boolean $z0;
        android.os.Message $r9;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnGetPlaybackPositionListener;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider> = r1;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        if $r5 == null goto label2;

        $r6 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        if $r6 == null goto label2;

        $i0 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $z0 = staticinvoke <android.media.RemoteControlClient: boolean playbackPositionShouldMove(int)>($i0);

        if $z0 == 0 goto label2;

        $r8 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r7 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r9 = virtualinvoke $r7.<android.media.RemoteControlClient$EventHandler: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r8.<android.media.RemoteControlClient$EventHandler: boolean sendMessageDelayed(android.os.Message,long)>($r9, 0L);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.app.PendingIntent getRcMediaIntent()
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent>;

        return $r1;
    }

    private void onSeekTo(int, long)
    {
        android.media.RemoteControlClient r0;
        int i0, $i2;
        long l1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener $r4, $r5;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r3 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i2 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        if $i2 != i0 goto label2;

        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener>;

        if $r4 == null goto label2;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener>;

        interfaceinvoke $r5.<android.media.RemoteControlClient$OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>(l1);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void onUpdateMetadata(int, int, java.lang.Object)
    {
        android.media.RemoteControlClient r0;
        int i0, i1, $i2;
        java.lang.Object r1, r2, $r4;
        java.lang.Throwable r3, $r7;
        android.media.RemoteControlClient$OnMetadataUpdateListener $r5, $r6;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r4 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i2 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        if $i2 != i0 goto label2;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener>;

        if $r5 == null goto label2;

        $r6 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener>;

        interfaceinvoke $r6.<android.media.RemoteControlClient$OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>(i1, r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static boolean playbackPositionShouldMove(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            case 9: goto label1;
            default: goto label2;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private static long getCheckPeriodFromSpeed(float)
    {
        float f0, $f1, $f2, $f3;
        byte $b0;
        long $l1, $l2;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b0 = $f1 cmpg 1.0F;

        if $b0 > 0 goto label1;

        return 15000L;

     label1:
        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = 15000.0F / $f2;

        $l1 = (long) $f3;

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l1, 2000L);

        return $l2;
    }

    static java.lang.Object access$000(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        return $r1;
    }

    static android.os.Bundle access$102(android.media.RemoteControlClient, android.os.Bundle)
    {
        android.media.RemoteControlClient r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.os.Bundle;

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = r1;

        return r1;
    }

    static android.os.Bundle access$100(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        return $r1;
    }

    static android.graphics.Bitmap access$200(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        return $r1;
    }

    static android.graphics.Bitmap access$202(android.media.RemoteControlClient, android.graphics.Bitmap)
    {
        android.media.RemoteControlClient r0;
        android.graphics.Bitmap r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.graphics.Bitmap;

        r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork> = r1;

        return r1;
    }

    static android.media.session.MediaSession access$300(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.session.MediaSession mSession>;

        return $r1;
    }

    static android.media.MediaMetadata access$402(android.media.RemoteControlClient, android.media.MediaMetadata)
    {
        android.media.RemoteControlClient r0;
        android.media.MediaMetadata r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.MediaMetadata;

        r0.<android.media.RemoteControlClient: android.media.MediaMetadata mMediaMetadata> = r1;

        return r1;
    }

    static android.media.MediaMetadata access$400(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.media.MediaMetadata $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.MediaMetadata mMediaMetadata>;

        return $r1;
    }

    static int access$600(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        int $i0;

        r0 := @parameter0: android.media.RemoteControlClient;

        $i0 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        return $i0;
    }

    static void access$700(android.media.RemoteControlClient, int, long)
    {
        android.media.RemoteControlClient r0;
        int i0;
        long l1;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<android.media.RemoteControlClient: void onSeekTo(int,long)>(i0, l1);

        return;
    }

    static int access$800(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        int $i0;

        r0 := @parameter0: android.media.RemoteControlClient;

        $i0 = r0.<android.media.RemoteControlClient: int mTransportControlFlags>;

        return $i0;
    }

    static void access$900(android.media.RemoteControlClient, int, int, java.lang.Object)
    {
        android.media.RemoteControlClient r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<android.media.RemoteControlClient: void onUpdateMetadata(int,int,java.lang.Object)>(i0, i1, r1);

        return;
    }

    static void access$1000(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;

        r0 := @parameter0: android.media.RemoteControlClient;

        specialinvoke r0.<android.media.RemoteControlClient: void onPositionDriftCheck()>();

        return;
    }

    static void <clinit>()
    {
        <android.media.RemoteControlClient: long POSITION_DRIFT_MAX_MS> = 500L;

        <android.media.RemoteControlClient: long POSITION_REFRESH_PERIOD_MIN_MS> = 2000L;

        <android.media.RemoteControlClient: long POSITION_REFRESH_PERIOD_PLAYING_MS> = 15000L;

        <android.media.RemoteControlClient: int MSG_POSITION_DRIFT_CHECK> = 11;

        <android.media.RemoteControlClient: int RCSE_ID_UNREGISTERED> = -1;

        <android.media.RemoteControlClient: int DEFAULT_PLAYBACK_VOLUME> = 15;

        <android.media.RemoteControlClient: int DEFAULT_PLAYBACK_VOLUME_HANDLING> = 1;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_ALBUM_ART> = 8;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_PLAYSTATE> = 4;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_KEY_MEDIA> = 2;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_METADATA> = 1;

        <android.media.RemoteControlClient: int FLAGS_KEY_MEDIA_NONE> = 0;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_RATING> = 512;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_POSITION_UPDATE> = 256;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_NEXT> = 128;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_FAST_FORWARD> = 64;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_STOP> = 32;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PAUSE> = 16;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PLAY_PAUSE> = 8;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PLAY> = 4;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_REWIND> = 2;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PREVIOUS> = 1;

        <android.media.RemoteControlClient: int PLAYBACKINFO_USES_STREAM> = 5;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME_HANDLING> = 4;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME_MAX> = 3;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME> = 2;

        <android.media.RemoteControlClient: int PLAYBACKINFO_PLAYBACK_TYPE> = 1;

        <android.media.RemoteControlClient: float PLAYBACK_SPEED_1X> = 1.0F;

        <android.media.RemoteControlClient: long PLAYBACK_POSITION_ALWAYS_UNKNOWN> = -9216204211029966080L;

        <android.media.RemoteControlClient: long PLAYBACK_POSITION_INVALID> = -1L;

        <android.media.RemoteControlClient: int PLAYBACKINFO_INVALID_VALUE> = -2147483648;

        <android.media.RemoteControlClient: int PLAYBACK_VOLUME_VARIABLE> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_VOLUME_FIXED> = 0;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_MAX> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_MIN> = 0;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_REMOTE> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_LOCAL> = 0;

        <android.media.RemoteControlClient: int PLAYSTATE_NONE> = 0;

        <android.media.RemoteControlClient: int PLAYSTATE_ERROR> = 9;

        <android.media.RemoteControlClient: int PLAYSTATE_BUFFERING> = 8;

        <android.media.RemoteControlClient: int PLAYSTATE_SKIPPING_BACKWARDS> = 7;

        <android.media.RemoteControlClient: int PLAYSTATE_SKIPPING_FORWARDS> = 6;

        <android.media.RemoteControlClient: int PLAYSTATE_REWINDING> = 5;

        <android.media.RemoteControlClient: int PLAYSTATE_FAST_FORWARDING> = 4;

        <android.media.RemoteControlClient: int PLAYSTATE_PLAYING> = 3;

        <android.media.RemoteControlClient: int PLAYSTATE_PAUSED> = 2;

        <android.media.RemoteControlClient: int PLAYSTATE_STOPPED> = 1;

        <android.media.RemoteControlClient: boolean DEBUG> = 0;

        <android.media.RemoteControlClient: java.lang.String TAG> = "RemoteControlClient";

        <android.media.RemoteControlClient: int MEDIA_POSITION_READABLE> = 1;

        <android.media.RemoteControlClient: int MEDIA_POSITION_WRITABLE> = 2;

        return;
    }
}
