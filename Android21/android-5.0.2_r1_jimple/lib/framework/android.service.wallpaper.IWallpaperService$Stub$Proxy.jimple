class android.service.wallpaper.IWallpaperService$Stub$Proxy extends java.lang.Object implements android.service.wallpaper.IWallpaperService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        $r1 = r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        return "android.service.wallpaper.IWallpaperService";
    }

    public void attach(android.service.wallpaper.IWallpaperConnection, android.os.IBinder, int, boolean, int, int, android.graphics.Rect) throws android.os.RemoteException
    {
        android.service.wallpaper.IWallpaperService$Stub$Proxy r0;
        android.service.wallpaper.IWallpaperConnection r1;
        android.os.IBinder r2, $r6, $r7;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Rect r3;
        android.os.Parcel r4;
        java.lang.Throwable r5, $r8;
        byte $b3;

        r0 := @this: android.service.wallpaper.IWallpaperService$Stub$Proxy;

        r1 := @parameter0: android.service.wallpaper.IWallpaperConnection;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 := @parameter6: android.graphics.Rect;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.service.wallpaper.IWallpaperService");

        if r1 == null goto label02;

        $r7 = interfaceinvoke r1.<android.service.wallpaper.IWallpaperConnection: android.os.IBinder asBinder()>();

        goto label03;

     label02:
        $r7 = null;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label04;

        $b3 = 1;

        goto label05;

     label04:
        $b3 = 0;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>($b3);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        if r3 == null goto label06;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label07;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        $r6 = r0.<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, null, 1);

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r8 := @caughtexception;

        r5 = $r8;

     label10:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
