public final class com.android.internal.http.HttpDateTime extends java.lang.Object
{
    private static final java.lang.String HTTP_DATE_RFC_REGEXP;
    private static final java.lang.String HTTP_DATE_ANSIC_REGEXP;
    private static final java.util.regex.Pattern HTTP_DATE_RFC_PATTERN;
    private static final java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN;

    public void <init>()
    {
        com.android.internal.http.HttpDateTime r0;

        r0 := @this: com.android.internal.http.HttpDateTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long parse(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        com.android.internal.http.HttpDateTime$TimeOfDay r1;
        java.util.regex.Matcher r2, r3;
        java.util.regex.Pattern $r4, $r5;
        boolean $z2, $z3;
        java.lang.IllegalArgumentException $r6;
        int $i1, $i2, $i3, i5, i6, i7;
        android.text.format.Time $r11, r16;
        long $l4;

        r0 := @parameter0: java.lang.String;

        $r4 = <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN>;

        r2 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z2 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label1;

        $r12 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i5 = staticinvoke <com.android.internal.http.HttpDateTime: int getDate(java.lang.String)>($r12);

        $r13 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i6 = staticinvoke <com.android.internal.http.HttpDateTime: int getMonth(java.lang.String)>($r13);

        $r14 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i7 = staticinvoke <com.android.internal.http.HttpDateTime: int getYear(java.lang.String)>($r14);

        $r15 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r1 = staticinvoke <com.android.internal.http.HttpDateTime: com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)>($r15);

        goto label3;

     label1:
        $r5 = <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN>;

        r3 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z3 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z3 == 0 goto label2;

        $r7 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i6 = staticinvoke <com.android.internal.http.HttpDateTime: int getMonth(java.lang.String)>($r7);

        $r8 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i5 = staticinvoke <com.android.internal.http.HttpDateTime: int getDate(java.lang.String)>($r8);

        $r9 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r1 = staticinvoke <com.android.internal.http.HttpDateTime: com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)>($r9);

        $r10 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        i7 = staticinvoke <com.android.internal.http.HttpDateTime: int getYear(java.lang.String)>($r10);

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label3:
        if i7 < 2038 goto label4;

        i7 = 2038;

        i6 = 0;

        i5 = 1;

     label4:
        $r11 = new android.text.format.Time;

        specialinvoke $r11.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r16 = $r11;

        $i2 = r1.<com.android.internal.http.HttpDateTime$TimeOfDay: int second>;

        $i3 = r1.<com.android.internal.http.HttpDateTime$TimeOfDay: int minute>;

        $i1 = r1.<com.android.internal.http.HttpDateTime$TimeOfDay: int hour>;

        virtualinvoke r16.<android.text.format.Time: void set(int,int,int,int,int,int)>($i2, $i3, $i1, i5, i6, i7);

        $l4 = virtualinvoke r16.<android.text.format.Time: long toMillis(boolean)>(0);

        return $l4;
    }

    private static int getDate(java.lang.String)
    {
        java.lang.String r0;
        int $i0, $i2, $i4, $i5, $i7, $i8;
        char $c1, $c3, $c6;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 2 goto label1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = $c3 - 48;

        $i5 = $i4 * 10;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i7 = $c6 - 48;

        $i8 = $i5 + $i7;

        return $i8;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = $c1 - 48;

        return $i2;
    }

    private static int getMonth(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i5, $i8;
        char $c1, $c2, $c3, $c4, $c6, $c7;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        $i5 = $c2 + $c4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $i8 = $i5 + $c7;

        i0 = $i8 - 291;

        tableswitch(i0)
        {
            case 9: goto label12;
            case 10: goto label02;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label13;
            case 14: goto label13;
            case 15: goto label13;
            case 16: goto label13;
            case 17: goto label13;
            case 18: goto label13;
            case 19: goto label13;
            case 20: goto label13;
            case 21: goto label13;
            case 22: goto label01;
            case 23: goto label13;
            case 24: goto label13;
            case 25: goto label13;
            case 26: goto label08;
            case 27: goto label13;
            case 28: goto label13;
            case 29: goto label03;
            case 30: goto label13;
            case 31: goto label13;
            case 32: goto label04;
            case 33: goto label13;
            case 34: goto label13;
            case 35: goto label10;
            case 36: goto label05;
            case 37: goto label09;
            case 38: goto label13;
            case 39: goto label13;
            case 40: goto label07;
            case 41: goto label13;
            case 42: goto label06;
            case 43: goto label13;
            case 44: goto label13;
            case 45: goto label13;
            case 46: goto label13;
            case 47: goto label13;
            case 48: goto label11;
            default: goto label13;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 7;

     label09:
        return 8;

     label10:
        return 9;

     label11:
        return 10;

     label12:
        return 11;

     label13:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    private static int getYear(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i34, i35;
        char $c4, $c7, $c11, $c16, $c17, $c22, $c26, $c27, $c33;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 2 goto label2;

        $c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i30 = $c27 - 48;

        $i29 = $i30 * 10;

        $c33 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i34 = $c33 - 48;

        i0 = $i29 + $i34;

        if i0 < 70 goto label1;

        $i32 = i0 + 1900;

        return $i32;

     label1:
        $i31 = i0 + 2000;

        return $i31;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 3 goto label3;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i20 = $c17 - 48;

        $i19 = $i20 * 100;

        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i21 = $c22 - 48;

        $i24 = $i21 * 10;

        $i23 = $i19 + $i24;

        $c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i25 = $c26 - 48;

        i35 = $i23 + $i25;

        $i28 = i35 + 1900;

        return $i28;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 4 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = $c4 - 48;

        $i6 = $i5 * 1000;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i8 = $c7 - 48;

        $i9 = $i8 * 100;

        $i10 = $i6 + $i9;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i12 = $c11 - 48;

        $i13 = $i12 * 10;

        $i14 = $i10 + $i13;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i15 = $c16 - 48;

        $i18 = $i14 + $i15;

        return $i18;

     label4:
        return 1970;
    }

    private static com.android.internal.http.HttpDateTime$TimeOfDay getTime(java.lang.String)
    {
        java.lang.String r0;
        byte b0;
        int i1, i2, i3, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i18, $i19, i20, i21, i22, i23, i24, i25;
        char $c4, $c5, $c6, $c9, $c12, $c15, $c17;
        com.android.internal.http.HttpDateTime$TimeOfDay $r1;

        r0 := @parameter0: java.lang.String;

        b0 = 0;

        i20 = b0 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(b0);

        i1 = $c4 - 48;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i20);

        if $c5 == 58 goto label1;

        $i18 = i1 * 10;

        $i16 = i20;

        i20 = i20 + 1;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i16);

        $i19 = $c17 - 48;

        i1 = $i18 + $i19;

     label1:
        i21 = i20 + 1;

        i22 = i21 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i21);

        $i7 = $c6 - 48;

        $i8 = $i7 * 10;

        i23 = i22 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i10 = $c9 - 48;

        i2 = $i8 + $i10;

        i24 = i23 + 1;

        i25 = i24 + 1;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i24);

        $i11 = $c12 - 48;

        $i13 = $i11 * 10;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i25);

        $i14 = $c15 - 48;

        i3 = $i13 + $i14;

        $r1 = new com.android.internal.http.HttpDateTime$TimeOfDay;

        specialinvoke $r1.<com.android.internal.http.HttpDateTime$TimeOfDay: void <init>(int,int,int)>(i1, i2, i3);

        return $r1;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <com.android.internal.http.HttpDateTime: java.lang.String HTTP_DATE_ANSIC_REGEXP> = "[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})";

        <com.android.internal.http.HttpDateTime: java.lang.String HTTP_DATE_RFC_REGEXP> = "([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([0-9]{1,2})[- ]([A-Za-z]{3,9})[- ]([0-9]{2,4})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])");

        <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_RFC_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[ ]([A-Za-z]{3,9})[ ]+([0-9]{1,2})[ ]([0-9]{1,2}:[0-9][0-9]:[0-9][0-9])[ ]([0-9]{2,4})");

        <com.android.internal.http.HttpDateTime: java.util.regex.Pattern HTTP_DATE_ANSIC_PATTERN> = $r1;

        return;
    }
}
