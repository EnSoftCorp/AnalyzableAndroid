public class android.media.AudioFormat extends java.lang.Object
{
    public static final int ENCODING_INVALID;
    public static final int ENCODING_DEFAULT;
    public static final int ENCODING_PCM_16BIT;
    public static final int ENCODING_PCM_8BIT;
    public static final int ENCODING_PCM_FLOAT;
    public static final int ENCODING_AC3;
    public static final int ENCODING_E_AC3;
    public static final int CHANNEL_CONFIGURATION_INVALID;
    public static final int CHANNEL_CONFIGURATION_DEFAULT;
    public static final int CHANNEL_CONFIGURATION_MONO;
    public static final int CHANNEL_CONFIGURATION_STEREO;
    public static final int CHANNEL_INVALID;
    public static final int CHANNEL_OUT_DEFAULT;
    public static final int CHANNEL_OUT_FRONT_LEFT;
    public static final int CHANNEL_OUT_FRONT_RIGHT;
    public static final int CHANNEL_OUT_FRONT_CENTER;
    public static final int CHANNEL_OUT_LOW_FREQUENCY;
    public static final int CHANNEL_OUT_BACK_LEFT;
    public static final int CHANNEL_OUT_BACK_RIGHT;
    public static final int CHANNEL_OUT_FRONT_LEFT_OF_CENTER;
    public static final int CHANNEL_OUT_FRONT_RIGHT_OF_CENTER;
    public static final int CHANNEL_OUT_BACK_CENTER;
    public static final int CHANNEL_OUT_SIDE_LEFT;
    public static final int CHANNEL_OUT_SIDE_RIGHT;
    public static final int CHANNEL_OUT_TOP_CENTER;
    public static final int CHANNEL_OUT_TOP_FRONT_LEFT;
    public static final int CHANNEL_OUT_TOP_FRONT_CENTER;
    public static final int CHANNEL_OUT_TOP_FRONT_RIGHT;
    public static final int CHANNEL_OUT_TOP_BACK_LEFT;
    public static final int CHANNEL_OUT_TOP_BACK_CENTER;
    public static final int CHANNEL_OUT_TOP_BACK_RIGHT;
    public static final int CHANNEL_OUT_MONO;
    public static final int CHANNEL_OUT_STEREO;
    public static final int CHANNEL_OUT_QUAD;
    public static final int CHANNEL_OUT_QUAD_SIDE;
    public static final int CHANNEL_OUT_SURROUND;
    public static final int CHANNEL_OUT_5POINT1;
    public static final int CHANNEL_OUT_5POINT1_SIDE;
    public static final int CHANNEL_OUT_7POINT1;
    public static final int CHANNEL_OUT_7POINT1_SURROUND;
    public static final int CHANNEL_IN_DEFAULT;
    public static final int CHANNEL_IN_LEFT;
    public static final int CHANNEL_IN_RIGHT;
    public static final int CHANNEL_IN_FRONT;
    public static final int CHANNEL_IN_BACK;
    public static final int CHANNEL_IN_LEFT_PROCESSED;
    public static final int CHANNEL_IN_RIGHT_PROCESSED;
    public static final int CHANNEL_IN_FRONT_PROCESSED;
    public static final int CHANNEL_IN_BACK_PROCESSED;
    public static final int CHANNEL_IN_PRESSURE;
    public static final int CHANNEL_IN_X_AXIS;
    public static final int CHANNEL_IN_Y_AXIS;
    public static final int CHANNEL_IN_Z_AXIS;
    public static final int CHANNEL_IN_VOICE_UPLINK;
    public static final int CHANNEL_IN_VOICE_DNLINK;
    public static final int CHANNEL_IN_MONO;
    public static final int CHANNEL_IN_STEREO;
    public static final int CHANNEL_IN_FRONT_BACK;
    public static final int AUDIO_FORMAT_HAS_PROPERTY_NONE;
    public static final int AUDIO_FORMAT_HAS_PROPERTY_ENCODING;
    public static final int AUDIO_FORMAT_HAS_PROPERTY_SAMPLE_RATE;
    public static final int AUDIO_FORMAT_HAS_PROPERTY_CHANNEL_MASK;
    private int mEncoding;
    private int mSampleRate;
    private int mChannelMask;
    private int mPropertySetMask;

    public static int channelCountFromInChannelMask(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>(i0);

        return $i1;
    }

    public static int channelCountFromOutChannelMask(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>(i0);

        return $i1;
    }

    public static int convertChannelOutMaskToNativeMask(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >> 2;

        return $i1;
    }

    public static int convertNativeChannelMaskToOutMask(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 << 2;

        return $i1;
    }

    public static int getBytesPerSample(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label4;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 4;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad audio format ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static boolean isValidEncoding(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isEncodingLinearPcm(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label3;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad audio format ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public void <init>()
    {
        android.media.AudioFormat r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.media.AudioFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("There is no valid usage of this constructor");

        throw $r1;
    }

    private void <init>(int)
    {
        android.media.AudioFormat r0;
        int i0;

        r0 := @this: android.media.AudioFormat;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(int, int, int)
    {
        android.media.AudioFormat r0;
        int i0, i1, i2;

        r0 := @this: android.media.AudioFormat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioFormat: int mEncoding> = i0;

        r0.<android.media.AudioFormat: int mSampleRate> = i1;

        r0.<android.media.AudioFormat: int mChannelMask> = i2;

        r0.<android.media.AudioFormat: int mPropertySetMask> = 7;

        return;
    }

    public int getEncoding()
    {
        android.media.AudioFormat r0;
        int $i0, $i1, $i2;

        r0 := @this: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.media.AudioFormat: int mEncoding>;

        return $i2;
    }

    public int getSampleRate()
    {
        android.media.AudioFormat r0;
        int $i0, $i1, $i2;

        r0 := @this: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.media.AudioFormat: int mSampleRate>;

        return $i2;
    }

    public int getChannelMask()
    {
        android.media.AudioFormat r0;
        int $i0, $i1, $i2;

        r0 := @this: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        $i1 = $i0 & 4;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.media.AudioFormat: int mChannelMask>;

        return $i2;
    }

    public int getPropertySetMask()
    {
        android.media.AudioFormat r0;
        int $i0;

        r0 := @this: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.media.AudioFormat r0;
        java.lang.String $r1, $r8, $r12;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.media.AudioFormat;

        $r1 = new java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioFormat: props=");

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enc=");

        $i1 = r0.<android.media.AudioFormat: int mEncoding>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chan=0x");

        $i2 = r0.<android.media.AudioFormat: int mChannelMask>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rate=");

        $i3 = r0.<android.media.AudioFormat: int mSampleRate>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>($r12);

        return $r1;
    }

    static int access$000(android.media.AudioFormat)
    {
        android.media.AudioFormat r0;
        int $i0;

        r0 := @parameter0: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mEncoding>;

        return $i0;
    }

    static int access$100(android.media.AudioFormat)
    {
        android.media.AudioFormat r0;
        int $i0;

        r0 := @parameter0: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mSampleRate>;

        return $i0;
    }

    static int access$200(android.media.AudioFormat)
    {
        android.media.AudioFormat r0;
        int $i0;

        r0 := @parameter0: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mChannelMask>;

        return $i0;
    }

    static int access$300(android.media.AudioFormat)
    {
        android.media.AudioFormat r0;
        int $i0;

        r0 := @parameter0: android.media.AudioFormat;

        $i0 = r0.<android.media.AudioFormat: int mPropertySetMask>;

        return $i0;
    }

    void <init>(int, android.media.AudioFormat$1)
    {
        android.media.AudioFormat r0;
        int i0;
        android.media.AudioFormat$1 r1;

        r0 := @this: android.media.AudioFormat;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.AudioFormat$1;

        specialinvoke r0.<android.media.AudioFormat: void <init>(int)>(i0);

        return;
    }

    static int access$002(android.media.AudioFormat, int)
    {
        android.media.AudioFormat r0;
        int i0;

        r0 := @parameter0: android.media.AudioFormat;

        i0 := @parameter1: int;

        r0.<android.media.AudioFormat: int mEncoding> = i0;

        return i0;
    }

    static int access$102(android.media.AudioFormat, int)
    {
        android.media.AudioFormat r0;
        int i0;

        r0 := @parameter0: android.media.AudioFormat;

        i0 := @parameter1: int;

        r0.<android.media.AudioFormat: int mSampleRate> = i0;

        return i0;
    }

    static int access$202(android.media.AudioFormat, int)
    {
        android.media.AudioFormat r0;
        int i0;

        r0 := @parameter0: android.media.AudioFormat;

        i0 := @parameter1: int;

        r0.<android.media.AudioFormat: int mChannelMask> = i0;

        return i0;
    }

    static int access$302(android.media.AudioFormat, int)
    {
        android.media.AudioFormat r0;
        int i0;

        r0 := @parameter0: android.media.AudioFormat;

        i0 := @parameter1: int;

        r0.<android.media.AudioFormat: int mPropertySetMask> = i0;

        return i0;
    }

    public static void <clinit>()
    {
        <android.media.AudioFormat: int AUDIO_FORMAT_HAS_PROPERTY_CHANNEL_MASK> = 4;

        <android.media.AudioFormat: int AUDIO_FORMAT_HAS_PROPERTY_SAMPLE_RATE> = 2;

        <android.media.AudioFormat: int AUDIO_FORMAT_HAS_PROPERTY_ENCODING> = 1;

        <android.media.AudioFormat: int AUDIO_FORMAT_HAS_PROPERTY_NONE> = 0;

        <android.media.AudioFormat: int CHANNEL_IN_FRONT_BACK> = 48;

        <android.media.AudioFormat: int CHANNEL_IN_STEREO> = 12;

        <android.media.AudioFormat: int CHANNEL_IN_MONO> = 16;

        <android.media.AudioFormat: int CHANNEL_IN_VOICE_DNLINK> = 32768;

        <android.media.AudioFormat: int CHANNEL_IN_VOICE_UPLINK> = 16384;

        <android.media.AudioFormat: int CHANNEL_IN_Z_AXIS> = 8192;

        <android.media.AudioFormat: int CHANNEL_IN_Y_AXIS> = 4096;

        <android.media.AudioFormat: int CHANNEL_IN_X_AXIS> = 2048;

        <android.media.AudioFormat: int CHANNEL_IN_PRESSURE> = 1024;

        <android.media.AudioFormat: int CHANNEL_IN_BACK_PROCESSED> = 512;

        <android.media.AudioFormat: int CHANNEL_IN_FRONT_PROCESSED> = 256;

        <android.media.AudioFormat: int CHANNEL_IN_RIGHT_PROCESSED> = 128;

        <android.media.AudioFormat: int CHANNEL_IN_LEFT_PROCESSED> = 64;

        <android.media.AudioFormat: int CHANNEL_IN_BACK> = 32;

        <android.media.AudioFormat: int CHANNEL_IN_FRONT> = 16;

        <android.media.AudioFormat: int CHANNEL_IN_RIGHT> = 8;

        <android.media.AudioFormat: int CHANNEL_IN_LEFT> = 4;

        <android.media.AudioFormat: int CHANNEL_IN_DEFAULT> = 1;

        <android.media.AudioFormat: int CHANNEL_OUT_7POINT1_SURROUND> = 6396;

        <android.media.AudioFormat: int CHANNEL_OUT_7POINT1> = 1020;

        <android.media.AudioFormat: int CHANNEL_OUT_5POINT1_SIDE> = 6204;

        <android.media.AudioFormat: int CHANNEL_OUT_5POINT1> = 252;

        <android.media.AudioFormat: int CHANNEL_OUT_SURROUND> = 1052;

        <android.media.AudioFormat: int CHANNEL_OUT_QUAD_SIDE> = 6156;

        <android.media.AudioFormat: int CHANNEL_OUT_QUAD> = 204;

        <android.media.AudioFormat: int CHANNEL_OUT_STEREO> = 12;

        <android.media.AudioFormat: int CHANNEL_OUT_MONO> = 4;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_BACK_RIGHT> = 524288;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_BACK_CENTER> = 262144;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_BACK_LEFT> = 131072;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_FRONT_RIGHT> = 65536;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_FRONT_CENTER> = 32768;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_FRONT_LEFT> = 16384;

        <android.media.AudioFormat: int CHANNEL_OUT_TOP_CENTER> = 8192;

        <android.media.AudioFormat: int CHANNEL_OUT_SIDE_RIGHT> = 4096;

        <android.media.AudioFormat: int CHANNEL_OUT_SIDE_LEFT> = 2048;

        <android.media.AudioFormat: int CHANNEL_OUT_BACK_CENTER> = 1024;

        <android.media.AudioFormat: int CHANNEL_OUT_FRONT_RIGHT_OF_CENTER> = 512;

        <android.media.AudioFormat: int CHANNEL_OUT_FRONT_LEFT_OF_CENTER> = 256;

        <android.media.AudioFormat: int CHANNEL_OUT_BACK_RIGHT> = 128;

        <android.media.AudioFormat: int CHANNEL_OUT_BACK_LEFT> = 64;

        <android.media.AudioFormat: int CHANNEL_OUT_LOW_FREQUENCY> = 32;

        <android.media.AudioFormat: int CHANNEL_OUT_FRONT_CENTER> = 16;

        <android.media.AudioFormat: int CHANNEL_OUT_FRONT_RIGHT> = 8;

        <android.media.AudioFormat: int CHANNEL_OUT_FRONT_LEFT> = 4;

        <android.media.AudioFormat: int CHANNEL_OUT_DEFAULT> = 1;

        <android.media.AudioFormat: int CHANNEL_INVALID> = 0;

        <android.media.AudioFormat: int CHANNEL_CONFIGURATION_STEREO> = 3;

        <android.media.AudioFormat: int CHANNEL_CONFIGURATION_MONO> = 2;

        <android.media.AudioFormat: int CHANNEL_CONFIGURATION_DEFAULT> = 1;

        <android.media.AudioFormat: int CHANNEL_CONFIGURATION_INVALID> = 0;

        <android.media.AudioFormat: int ENCODING_E_AC3> = 6;

        <android.media.AudioFormat: int ENCODING_AC3> = 5;

        <android.media.AudioFormat: int ENCODING_PCM_FLOAT> = 4;

        <android.media.AudioFormat: int ENCODING_PCM_8BIT> = 3;

        <android.media.AudioFormat: int ENCODING_PCM_16BIT> = 2;

        <android.media.AudioFormat: int ENCODING_DEFAULT> = 1;

        <android.media.AudioFormat: int ENCODING_INVALID> = 0;

        return;
    }
}
