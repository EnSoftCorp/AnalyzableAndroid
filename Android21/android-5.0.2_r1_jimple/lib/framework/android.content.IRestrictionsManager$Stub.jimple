public abstract class android.content.IRestrictionsManager$Stub extends android.os.Binder implements android.content.IRestrictionsManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getApplicationRestrictions;
    static final int TRANSACTION_hasRestrictionsProvider;
    static final int TRANSACTION_requestPermission;
    static final int TRANSACTION_notifyPermissionResponse;
    static final int TRANSACTION_createLocalApprovalIntent;

    public void <init>()
    {
        android.content.IRestrictionsManager$Stub r0;

        r0 := @this: android.content.IRestrictionsManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.content.IRestrictionsManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.content.IRestrictionsManager");

        return;
    }

    public static android.content.IRestrictionsManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.content.IRestrictionsManager$Stub$Proxy $r2;
        boolean $z0;
        android.content.IRestrictionsManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.content.IRestrictionsManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.content.IRestrictionsManager;

        if $z0 == 0 goto label2;

        $r3 = (android.content.IRestrictionsManager) r1;

        return $r3;

     label2:
        $r2 = new android.content.IRestrictionsManager$Stub$Proxy;

        specialinvoke $r2.<android.content.IRestrictionsManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.content.IRestrictionsManager$Stub r0;

        r0 := @this: android.content.IRestrictionsManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.content.IRestrictionsManager$Stub r0;
        int i0, i1, $i2, $i3;
        android.os.Parcel r1, r2;
        java.lang.String r3, r5, r11, r12, r13;
        android.os.Bundle r4;
        android.os.PersistableBundle r6, r14;
        android.os.Parcelable$Creator $r7, $r10;
        java.lang.Object $r8, $r9;
        byte $b4;
        boolean $z0, z1;
        android.content.Intent r15;

        r0 := @this: android.content.IRestrictionsManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label11;
            case 5: goto label14;
            case 1598968902: goto label01;
            default: goto label17;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.content.IRestrictionsManager");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IRestrictionsManager");

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r4 = virtualinvoke r0.<android.content.IRestrictionsManager$Stub: android.os.Bundle getApplicationRestrictions(java.lang.String)>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r4 == null goto label03;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r4.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label04;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label04:
        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IRestrictionsManager");

        z1 = virtualinvoke r0.<android.content.IRestrictionsManager$Stub: boolean hasRestrictionsProvider()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z1 == 0 goto label06;

        $b4 = 1;

        goto label07;

     label06:
        $b4 = 0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b4);

        return 1;

     label08:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IRestrictionsManager");

        r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label09;

        $r10 = <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r6 = (android.os.PersistableBundle) $r9;

        goto label10;

     label09:
        r6 = null;

     label10:
        virtualinvoke r0.<android.content.IRestrictionsManager$Stub: void requestPermission(java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>(r11, r12, r5, r6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IRestrictionsManager");

        r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label12;

        $r7 = <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r14 = (android.os.PersistableBundle) $r8;

        goto label13;

     label12:
        r14 = null;

     label13:
        virtualinvoke r0.<android.content.IRestrictionsManager$Stub: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>(r13, r14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.content.IRestrictionsManager");

        r15 = virtualinvoke r0.<android.content.IRestrictionsManager$Stub: android.content.Intent createLocalApprovalIntent()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r15 == null goto label15;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.content.Intent: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label16;

     label15:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label16:
        return 1;

     label17:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static void <clinit>()
    {
        <android.content.IRestrictionsManager$Stub: int TRANSACTION_createLocalApprovalIntent> = 5;

        <android.content.IRestrictionsManager$Stub: int TRANSACTION_notifyPermissionResponse> = 4;

        <android.content.IRestrictionsManager$Stub: int TRANSACTION_requestPermission> = 3;

        <android.content.IRestrictionsManager$Stub: int TRANSACTION_hasRestrictionsProvider> = 2;

        <android.content.IRestrictionsManager$Stub: int TRANSACTION_getApplicationRestrictions> = 1;

        <android.content.IRestrictionsManager$Stub: java.lang.String DESCRIPTOR> = "android.content.IRestrictionsManager";

        return;
    }
}
