public class android.media.MediaCodec$MediaImage extends android.media.Image
{
    private final boolean mIsReadOnly;
    private boolean mIsValid;
    private final int mWidth;
    private final int mHeight;
    private final int mFormat;
    private long mTimestamp;
    private final android.media.Image$Plane[] mPlanes;
    private final java.nio.ByteBuffer mBuffer;
    private final java.nio.ByteBuffer mInfo;
    private final int mXOffset;
    private final int mYOffset;
    private static final int TYPE_YUV;

    public int getFormat()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mFormat>;

        return $i0;
    }

    public int getHeight()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        return $i0;
    }

    public int getWidth()
    {
        android.media.MediaCodec$MediaImage r0;
        int $i0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        $i0 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        return $i0;
    }

    public long getTimestamp()
    {
        android.media.MediaCodec$MediaImage r0;
        long $l0;

        r0 := @this: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        $l0 = r0.<android.media.MediaCodec$MediaImage: long mTimestamp>;

        return $l0;
    }

    public android.media.Image$Plane[] getPlanes()
    {
        android.media.MediaCodec$MediaImage r0;
        android.media.Image$Plane[] $r1, $r2, $r4;
        int $i0;
        java.lang.Object[] $r3;

        r0 := @this: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        $r2 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $r1 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);

        $r4 = (android.media.Image$Plane[]) $r3;

        return $r4;
    }

    public void close()
    {
        android.media.MediaCodec$MediaImage r0;
        boolean $z0;
        java.nio.ByteBuffer $r1;

        r0 := @this: android.media.MediaCodec$MediaImage;

        $z0 = r0.<android.media.MediaCodec$MediaImage: boolean mIsValid>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer>;

        staticinvoke <java.nio.NioUtils: void freeDirectBuffer(java.nio.ByteBuffer)>($r1);

        r0.<android.media.MediaCodec$MediaImage: boolean mIsValid> = 0;

     label1:
        return;
    }

    public void setCropRect(android.graphics.Rect)
    {
        android.media.MediaCodec$MediaImage r0;
        android.graphics.Rect r1;
        boolean $z0;
        java.nio.ReadOnlyBufferException $r2;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = r0.<android.media.MediaCodec$MediaImage: boolean mIsReadOnly>;

        if $z0 == 0 goto label1;

        $r2 = new java.nio.ReadOnlyBufferException;

        specialinvoke $r2.<java.nio.ReadOnlyBufferException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r0.<android.media.Image: void setCropRect(android.graphics.Rect)>(r1);

        return;
    }

    private void checkValid()
    {
        android.media.MediaCodec$MediaImage r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.MediaCodec$MediaImage;

        $z0 = r0.<android.media.MediaCodec$MediaImage: boolean mIsValid>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Image is already released");

        throw $r1;

     label1:
        return;
    }

    private int readInt(java.nio.ByteBuffer, boolean)
    {
        android.media.MediaCodec$MediaImage r0;
        java.nio.ByteBuffer r1;
        boolean z0;
        int $i0, $i2;
        long $l1;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $l1 = virtualinvoke r1.<java.nio.ByteBuffer: long getLong()>();

        $i2 = (int) $l1;

        return $i2;

     label1:
        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int getInt()>();

        return $i0;
    }

    public void <init>(java.nio.ByteBuffer, java.nio.ByteBuffer, boolean, long, int, int, android.graphics.Rect)
    {
        android.media.MediaCodec$MediaImage r0;
        java.nio.ByteBuffer r1, r2, $r4, $r20, $r31;
        boolean z0, z1, $z2, $z3;
        long l0;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45;
        android.graphics.Rect r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r13, $r14, $r16, $r17, $r18, $r19, $r23, $r27, $r28, $r30, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r47;
        java.lang.UnsupportedOperationException $r6, $r15, $r33, $r34, $r43;
        android.media.MediaCodec$MediaImage$MediaPlane[] $r11;
        java.lang.String $r12, $r22, $r29, $r35, $r46, $r48;
        android.media.MediaCodec$MediaImage$MediaPlane $r26;
        android.media.Image$Plane[] $r32;
        byte $b41;
        java.lang.RuntimeException $r39;

        r0 := @this: android.media.MediaCodec$MediaImage;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r3 := @parameter6: android.graphics.Rect;

        specialinvoke r0.<android.media.Image: void <init>()>();

        r0.<android.media.MediaCodec$MediaImage: int mFormat> = 35;

        r0.<android.media.MediaCodec$MediaImage: long mTimestamp> = l0;

        r0.<android.media.MediaCodec$MediaImage: boolean mIsValid> = 1;

        $z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isReadOnly()>();

        r0.<android.media.MediaCodec$MediaImage: boolean mIsReadOnly> = $z2;

        $r4 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer> = $r4;

        if r3 == null goto label01;

        $i45 = neg i1;

        $i44 = neg i2;

        virtualinvoke r3.<android.graphics.Rect: void offset(int,int)>($i45, $i44);

     label01:
        specialinvoke r0.<android.media.Image: void setCropRect(android.graphics.Rect)>(r3);

        r0.<android.media.MediaCodec$MediaImage: int mXOffset> = i1;

        r0.<android.media.MediaCodec$MediaImage: int mYOffset> = i2;

        r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mInfo> = r2;

        $i12 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i12 == 80 goto label02;

        $i43 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i43 != 156 goto label16;

     label02:
        $i13 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i13 != 156 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

        i3 = virtualinvoke r2.<java.nio.ByteBuffer: int getInt()>();

        if i3 == 1 goto label05;

        $r34 = new java.lang.UnsupportedOperationException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported type: ");

        $r45 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r46);

        throw $r34;

     label05:
        i4 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        if i4 == 3 goto label06;

        $r39 = new java.lang.RuntimeException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected number of planes: ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r35 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>($r35);

        throw $r39;

     label06:
        $i14 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        r0.<android.media.MediaCodec$MediaImage: int mWidth> = $i14;

        $i16 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        r0.<android.media.MediaCodec$MediaImage: int mHeight> = $i16;

        $i15 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        if $i15 < 1 goto label07;

        $i19 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        if $i19 >= 1 goto label08;

     label07:
        $r6 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported size: ");

        $i17 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i18 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label08:
        i5 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        if i5 == 8 goto label09;

        $r33 = new java.lang.UnsupportedOperationException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported bit depth: ");

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r29);

        throw $r33;

     label09:
        $r11 = newarray (android.media.MediaCodec$MediaImage$MediaPlane)[i4];

        r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes> = $r11;

        i6 = 0;

     label10:
        if i6 >= i4 goto label15;

        i7 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        i8 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        i10 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        i9 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        i11 = specialinvoke r0.<android.media.MediaCodec$MediaImage: int readInt(java.nio.ByteBuffer,boolean)>(r2, z1);

        if i9 != i11 goto label13;

        if i6 != 0 goto label11;

        $b41 = 1;

        goto label12;

     label11:
        $b41 = 2;

     label12:
        if i9 == $b41 goto label14;

     label13:
        $r15 = new java.lang.UnsupportedOperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected subsampling: ");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on plane ");

        $r23 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label14:
        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r20 = r0.<android.media.MediaCodec$MediaImage: java.nio.ByteBuffer mBuffer>;

        $i23 = virtualinvoke $r20.<java.nio.ByteBuffer: int position()>();

        $i20 = $i23 + i7;

        $i22 = i1 / i9;

        $i21 = $i22 * i8;

        $i25 = $i20 + $i21;

        $i27 = i2 / i11;

        $i26 = $i27 * i10;

        $i24 = $i25 + $i26;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i24);

        $i32 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i33 = staticinvoke <android.media.Utils: int divUp(int,int)>(i5, 8);

        $i31 = $i32 + $i33;

        $i34 = r0.<android.media.MediaCodec$MediaImage: int mHeight>;

        $i28 = $i34 / i11;

        $i29 = $i28 - 1;

        $i30 = $i29 * i10;

        $i35 = $i31 + $i30;

        $i37 = r0.<android.media.MediaCodec$MediaImage: int mWidth>;

        $i38 = $i37 / i9;

        $i39 = $i38 - 1;

        $i40 = $i39 * i8;

        $i36 = $i35 + $i40;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i36);

        $r32 = r0.<android.media.MediaCodec$MediaImage: android.media.Image$Plane[] mPlanes>;

        $r26 = new android.media.MediaCodec$MediaImage$MediaPlane;

        $r31 = virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        specialinvoke $r26.<android.media.MediaCodec$MediaImage$MediaPlane: void <init>(android.media.MediaCodec$MediaImage,java.nio.ByteBuffer,int,int)>(r0, $r31, i10, i8);

        $r32[i6] = $r26;

        i6 = i6 + 1;

        goto label10;

     label15:
        goto label17;

     label16:
        $r43 = new java.lang.UnsupportedOperationException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported info length: ");

        $i42 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r48);

        throw $r43;

     label17:
        return;
    }

    static void access$800(android.media.MediaCodec$MediaImage)
    {
        android.media.MediaCodec$MediaImage r0;

        r0 := @parameter0: android.media.MediaCodec$MediaImage;

        specialinvoke r0.<android.media.MediaCodec$MediaImage: void checkValid()>();

        return;
    }

    public static void <clinit>()
    {
        <android.media.MediaCodec$MediaImage: int TYPE_YUV> = 1;

        return;
    }
}
