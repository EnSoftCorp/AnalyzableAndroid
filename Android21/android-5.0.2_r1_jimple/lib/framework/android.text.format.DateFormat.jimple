public class android.text.format.DateFormat extends java.lang.Object
{
    public static final char QUOTE;
    public static final char AM_PM;
    public static final char CAPITAL_AM_PM;
    public static final char DATE;
    public static final char DAY;
    public static final char HOUR;
    public static final char HOUR_OF_DAY;
    public static final char MINUTE;
    public static final char MONTH;
    public static final char STANDALONE_MONTH;
    public static final char SECONDS;
    public static final char TIME_ZONE;
    public static final char YEAR;
    private static final java.lang.Object sLocaleLock;
    private static java.util.Locale sIs24HourLocale;
    private static boolean sIs24Hour;

    public void <init>()
    {
        android.text.format.DateFormat r0;

        r0 := @this: android.text.format.DateFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean is24HourFormat(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, r5, r18;
        java.util.Locale r2, $r11, $r13;
        java.lang.Object r3, $r10, $r12, r19;
        java.lang.Throwable r4, r6, $r14, $r15;
        android.content.ContentResolver $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.res.Resources $r8;
        android.content.res.Configuration $r9;
        int $i0;
        java.text.DateFormat r16;
        java.text.SimpleDateFormat r17;

        r0 := @parameter0: android.content.Context;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r7, "time_12_24");

        if r1 != null goto label17;

        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r2 = $r9.<android.content.res.Configuration: java.util.Locale locale>;

        $r10 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        r3 = $r10;

        entermonitor $r10;

     label01:
        $r11 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        if $r11 == null goto label03;

        $r13 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        $z4 = virtualinvoke $r13.<java.util.Locale: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label03;

        $z5 = <android.text.format.DateFormat: boolean sIs24Hour>;

        exitmonitor r3;

     label02:
        return $z5;

     label03:
        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        r16 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(1, r2);

        $z1 = r16 instanceof java.text.SimpleDateFormat;

        if $z1 == 0 goto label10;

        r17 = (java.text.SimpleDateFormat) r16;

        r5 = virtualinvoke r17.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(72);

        if $i0 < 0 goto label08;

        r18 = "24";

        goto label09;

     label08:
        r18 = "12";

     label09:
        goto label11;

     label10:
        r18 = "12";

     label11:
        $r12 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        r19 = $r12;

        entermonitor $r12;

     label12:
        <android.text.format.DateFormat: java.util.Locale sIs24HourLocale> = r2;

        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("24");

        <android.text.format.DateFormat: boolean sIs24Hour> = $z2;

        exitmonitor r19;

     label13:
        goto label16;

     label14:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r19;

     label15:
        throw r6;

     label16:
        $z3 = <android.text.format.DateFormat: boolean sIs24Hour>;

        return $z3;

     label17:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("24");

        return $z0;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public static java.lang.String getBestDateTimePattern(java.util.Locale, java.lang.String)
    {
        java.util.Locale r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <libcore.icu.ICU: java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale)>(r1, r0);

        return $r2;
    }

    public static java.text.DateFormat getTimeFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>(r0);

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public static java.lang.String getTimeFormatString(android.content.Context)
    {
        android.content.Context r0;
        libcore.icu.LocaleData r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r4);

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        $r5 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat24>;

        goto label2;

     label1:
        $r5 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat12>;

     label2:
        return $r5;
    }

    public static java.text.DateFormat getDateFormat(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.ContentResolver $r2;
        java.text.DateFormat $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "date_format");

        $r3 = staticinvoke <android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static java.text.DateFormat getDateFormatForSetting(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        java.text.SimpleDateFormat $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)>(r0, r1);

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r2);

        return $r3;
    }

    private static java.lang.String getDateFormatStringForSetting(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r6, r13;
        int i0, i1, i2;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        java.util.Locale $r5;
        java.lang.Object[] $r7, $r8, $r9, $r10, $r11, $r12;
        libcore.icu.LocaleData r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label7;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(77);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(100);

        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(121);

        if i0 < 0 goto label7;

        if i1 < 0 goto label7;

        if i2 < 0 goto label7;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17039443);

        if i2 >= i0 goto label2;

        if i2 >= i1 goto label2;

        if i0 >= i1 goto label1;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = "yyyy";

        $r12[1] = "MM";

        $r12[2] = "dd";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r12);

        goto label6;

     label1:
        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "yyyy";

        $r11[1] = "dd";

        $r11[2] = "MM";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r11);

        goto label6;

     label2:
        if i0 >= i1 goto label4;

        if i1 >= i2 goto label3;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "MM";

        $r10[1] = "dd";

        $r10[2] = "yyyy";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r10);

        goto label6;

     label3:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "MM";

        $r9[1] = "yyyy";

        $r9[2] = "dd";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r9);

        goto label6;

     label4:
        if i0 >= i2 goto label5;

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = "dd";

        $r8[1] = "MM";

        $r8[2] = "yyyy";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r8);

        goto label6;

     label5:
        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = "dd";

        $r7[1] = "yyyy";

        $r7[2] = "MM";

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r7);

     label6:
        return r13;

     label7:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r5 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        r14 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r5);

        $r6 = r14.<libcore.icu.LocaleData: java.lang.String shortDateFormat4>;

        return $r6;
    }

    public static java.text.DateFormat getLongDateFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.DateFormat $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(1);

        return $r1;
    }

    public static java.text.DateFormat getMediumDateFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.DateFormat $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(2);

        return $r1;
    }

    public static char[] getDateFormatOrder(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>(r0);

        $r2 = staticinvoke <libcore.icu.ICU: char[] getDateFormatOrder(java.lang.String)>($r1);

        return $r2;
    }

    private static java.lang.String getDateFormatString(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r3;
        android.content.ContentResolver $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "date_format");

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, long)
    {
        java.lang.CharSequence r0, $r2;
        long l0;
        java.util.Date $r1;

        r0 := @parameter0: java.lang.CharSequence;

        l0 := @parameter1: long;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l0);

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>(r0, $r1);

        return $r2;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Date)
    {
        java.lang.CharSequence r0, $r4;
        java.util.Date r1;
        java.util.GregorianCalendar r2, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Date;

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>(r0, r2);

        return $r4;
    }

    public static boolean hasSeconds(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean hasDesignator(java.lang.CharSequence,char)>(r0, 115);

        return $z0;
    }

    public static boolean hasDesignator(java.lang.CharSequence, char)
    {
        java.lang.CharSequence r0;
        char c0, c2;
        int i1, i3, i4;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i4 = 0;

     label2:
        if i4 >= i1 goto label5;

        i3 = 1;

        c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i4);

        if c2 != 39 goto label3;

        i3 = staticinvoke <android.text.format.DateFormat: int skipQuotedText(java.lang.CharSequence,int,int)>(r0, i4, i1);

        goto label4;

     label3:
        if c2 != c0 goto label4;

        return 1;

     label4:
        i4 = i4 + i3;

        goto label2;

     label5:
        return 0;
    }

    private static int skipQuotedText(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2, $i4, $i5, $i6, $i8, i10;
        char c3, $c7, $c9;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + 1;

        if $i4 >= i1 goto label1;

        $i8 = i0 + 1;

        $c9 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i8);

        if $c9 != 39 goto label1;

        return 2;

     label1:
        i2 = 1;

        i10 = i0 + 1;

     label2:
        if i10 >= i1 goto label5;

        c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i10);

        if c3 != 39 goto label3;

        i2 = i2 + 1;

        $i5 = i10 + 1;

        if $i5 >= i1 goto label5;

        $i6 = i10 + 1;

        $c7 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i6);

        if $c7 != 39 goto label5;

        i10 = i10 + 1;

        goto label4;

     label3:
        i10 = i10 + 1;

        i2 = i2 + 1;

     label4:
        goto label2;

     label5:
        return i2;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Calendar)
    {
        java.lang.CharSequence r0;
        java.util.Calendar r1;
        android.text.SpannableStringBuilder r2, $r5;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i17;
        libcore.icu.LocaleData r3;
        char c3, $c16;
        java.lang.String r4, $r7;
        java.util.Locale $r6;
        boolean $z0;
        android.text.SpannedString $r8;
        java.lang.String[] $r9;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Calendar;

        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r0);

        r2 = $r5;

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r6);

        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label01:
        if i2 >= i1 goto label18;

        i0 = 1;

        c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>(i2);

        if c3 != 39 goto label02;

        i0 = staticinvoke <android.text.format.DateFormat: int appendQuotedText(android.text.SpannableStringBuilder,int,int)>(r2, i2, i1);

        i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

        goto label17;

     label02:
        $i5 = i2 + i0;

        if $i5 >= i1 goto label03;

        $i14 = i2 + i0;

        $c16 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i14);

        if $c16 != c3 goto label03;

        i0 = i0 + 1;

        goto label02;

     label03:
        tableswitch(c3)
        {
            case 65: goto label04;
            case 66: goto label15;
            case 67: goto label15;
            case 68: goto label15;
            case 69: goto label06;
            case 70: goto label15;
            case 71: goto label15;
            case 72: goto label09;
            case 73: goto label15;
            case 74: goto label15;
            case 75: goto label07;
            case 76: goto label10;
            case 77: goto label10;
            case 78: goto label15;
            case 79: goto label15;
            case 80: goto label15;
            case 81: goto label15;
            case 82: goto label15;
            case 83: goto label15;
            case 84: goto label15;
            case 85: goto label15;
            case 86: goto label15;
            case 87: goto label15;
            case 88: goto label15;
            case 89: goto label15;
            case 90: goto label15;
            case 91: goto label15;
            case 92: goto label15;
            case 93: goto label15;
            case 94: goto label15;
            case 95: goto label15;
            case 96: goto label15;
            case 97: goto label04;
            case 98: goto label15;
            case 99: goto label06;
            case 100: goto label05;
            case 101: goto label15;
            case 102: goto label15;
            case 103: goto label15;
            case 104: goto label07;
            case 105: goto label15;
            case 106: goto label15;
            case 107: goto label09;
            case 108: goto label15;
            case 109: goto label11;
            case 110: goto label15;
            case 111: goto label15;
            case 112: goto label15;
            case 113: goto label15;
            case 114: goto label15;
            case 115: goto label12;
            case 116: goto label15;
            case 117: goto label15;
            case 118: goto label15;
            case 119: goto label15;
            case 120: goto label15;
            case 121: goto label13;
            case 122: goto label14;
            default: goto label15;
        };

     label04:
        $r9 = r3.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(9);

        $i6 = $i7 - 0;

        r4 = $r9[$i6];

        goto label16;

     label05:
        $i13 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i13, i0);

        goto label16;

     label06:
        $i15 = virtualinvoke r1.<java.util.Calendar: int get(int)>(7);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getDayOfWeekString(libcore.icu.LocaleData,int,int,int)>(r3, $i15, i0, c3);

        goto label16;

     label07:
        i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10);

        if c3 != 104 goto label08;

        if i4 != 0 goto label08;

        i4 = 12;

     label08:
        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i4, i0);

        goto label16;

     label09:
        i17 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i17, i0);

        goto label16;

     label10:
        $i12 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getMonthString(libcore.icu.LocaleData,int,int,int)>(r3, $i12, i0, c3);

        goto label16;

     label11:
        $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i11, i0);

        goto label16;

     label12:
        $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i10, i0);

        goto label16;

     label13:
        $i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getYearString(int,int)>($i9, i0);

        goto label16;

     label14:
        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)>(r1, i0);

        goto label16;

     label15:
        r4 = null;

     label16:
        if r4 == null goto label17;

        $i8 = i2 + i0;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i2, $i8, r4);

        i0 = virtualinvoke r4.<java.lang.String: int length()>();

        i1 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

     label17:
        i2 = i2 + i0;

        goto label01;

     label18:
        $z0 = r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label19;

        $r8 = new android.text.SpannedString;

        specialinvoke $r8.<android.text.SpannedString: void <init>(java.lang.CharSequence)>(r2);

        return $r8;

     label19:
        $r7 = virtualinvoke r2.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String getDayOfWeekString(libcore.icu.LocaleData, int, int, int)
    {
        libcore.icu.LocaleData r0;
        int i0, i1, i2;
        boolean z0, $z1;
        java.lang.String[] $r1, $r3, $r4, $r6, $r7, $r9;
        java.lang.String $r2, $r5, $r8;

        r0 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 99 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if i1 != 5 goto label05;

        if z0 == 0 goto label03;

        $r9 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneWeekdayNames>;

        $r8 = $r9[i0];

        goto label04;

     label03:
        $r7 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyWeekdayNames>;

        $r8 = $r7[i0];

     label04:
        return $r8;

     label05:
        if i1 != 4 goto label08;

        if z0 == 0 goto label06;

        $r6 = r0.<libcore.icu.LocaleData: java.lang.String[] longStandAloneWeekdayNames>;

        $r5 = $r6[i0];

        goto label07;

     label06:
        $r4 = r0.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

        $r5 = $r4[i0];

     label07:
        return $r5;

     label08:
        if z0 == 0 goto label09;

        $r3 = r0.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneWeekdayNames>;

        $r2 = $r3[i0];

        goto label10;

     label09:
        $r1 = r0.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        $r2 = $r1[i0];

     label10:
        return $r2;
    }

    private static java.lang.String getMonthString(libcore.icu.LocaleData, int, int, int)
    {
        libcore.icu.LocaleData r0;
        int i0, i1, i2, $i3;
        boolean z0, $z1;
        java.lang.String $r1, $r3, $r6, $r9;
        java.lang.String[] $r2, $r4, $r5, $r7, $r8, $r10;

        r0 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 76 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if i1 != 5 goto label05;

        if z0 == 0 goto label03;

        $r10 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneMonthNames>;

        $r9 = $r10[i0];

        goto label04;

     label03:
        $r8 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyMonthNames>;

        $r9 = $r8[i0];

     label04:
        return $r9;

     label05:
        if i1 != 4 goto label08;

        if z0 == 0 goto label06;

        $r7 = r0.<libcore.icu.LocaleData: java.lang.String[] longStandAloneMonthNames>;

        $r6 = $r7[i0];

        goto label07;

     label06:
        $r5 = r0.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

        $r6 = $r5[i0];

     label07:
        return $r6;

     label08:
        if i1 != 3 goto label11;

        if z0 == 0 goto label09;

        $r4 = r0.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneMonthNames>;

        $r3 = $r4[i0];

        goto label10;

     label09:
        $r2 = r0.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        $r3 = $r2[i0];

     label10:
        return $r3;

     label11:
        $i3 = i0 + 1;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i3, i1);

        return $r1;
    }

    private static java.lang.String getTimeZoneString(java.util.Calendar, int)
    {
        java.util.Calendar r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.TimeZone r1;
        boolean z0, $z1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.util.Calendar;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        if i0 >= 2 goto label1;

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15);

        $i4 = $i2 + $i3;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String formatZoneOffset(int,int)>($i4, i0);

        return $r3;

     label1:
        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        if $i1 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        $r2 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>(z0, 0);

        return $r2;
    }

    private static java.lang.String formatZoneOffset(int, int)
    {
        int i0, i1, i2, i3, $i4, i5;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r3, $r5, $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 = i0 / 1000;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        if i5 >= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "-");

        i5 = neg i5;

        goto label2;

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "+");

     label2:
        i2 = i5 / 3600;

        $i4 = i5 % 3600;

        i3 = $i4 / 60;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i2, 2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i3, 2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String getYearString(int, int)
    {
        int i0, i1, $i2;
        java.util.Locale $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 > 2 goto label1;

        $i2 = i0 % 100;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i2, 2);

        goto label2;

     label1:
        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r0, "%d", $r1);

     label2:
        return $r3;
    }

    private static int appendQuotedText(android.text.SpannableStringBuilder, int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, i14;
        char c3, $c9, $c11;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + 1;

        if $i4 >= i1 goto label1;

        $i12 = i0 + 1;

        $c11 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i12);

        if $c11 != 39 goto label1;

        $i13 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i13);

        return 1;

     label1:
        i2 = 0;

        $i5 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i5);

        i14 = i1 + -1;

     label2:
        if i0 >= i14 goto label6;

        c3 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i0);

        if c3 != 39 goto label4;

        $i6 = i0 + 1;

        if $i6 >= i14 goto label3;

        $i8 = i0 + 1;

        $c9 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i8);

        if $c9 != 39 goto label3;

        $i10 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i10);

        i14 = i14 + -1;

        i2 = i2 + 1;

        i0 = i0 + 1;

        goto label5;

     label3:
        $i7 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i7);

        goto label6;

     label4:
        i0 = i0 + 1;

        i2 = i2 + 1;

     label5:
        goto label2;

     label6:
        return i2;
    }

    private static java.lang.String zeroPad(int, int)
    {
        int i0, i1;
        java.util.Locale $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r8;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r0, $r5, $r6);

        return $r8;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.text.format.DateFormat: char YEAR> = 121;

        <android.text.format.DateFormat: char TIME_ZONE> = 122;

        <android.text.format.DateFormat: char SECONDS> = 115;

        <android.text.format.DateFormat: char STANDALONE_MONTH> = 76;

        <android.text.format.DateFormat: char MONTH> = 77;

        <android.text.format.DateFormat: char MINUTE> = 109;

        <android.text.format.DateFormat: char HOUR_OF_DAY> = 107;

        <android.text.format.DateFormat: char HOUR> = 104;

        <android.text.format.DateFormat: char DAY> = 69;

        <android.text.format.DateFormat: char DATE> = 100;

        <android.text.format.DateFormat: char CAPITAL_AM_PM> = 65;

        <android.text.format.DateFormat: char AM_PM> = 97;

        <android.text.format.DateFormat: char QUOTE> = 39;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.format.DateFormat: java.lang.Object sLocaleLock> = $r0;

        return;
    }
}
