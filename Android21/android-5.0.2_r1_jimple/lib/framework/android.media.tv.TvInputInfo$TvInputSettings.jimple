public final class android.media.tv.TvInputInfo$TvInputSettings extends java.lang.Object
{
    private static final java.lang.String TV_INPUT_SEPARATOR;
    private static final java.lang.String CUSTOM_NAME_SEPARATOR;

    private void <init>()
    {
        android.media.tv.TvInputInfo$TvInputSettings r0;

        r0 := @this: android.media.tv.TvInputInfo$TvInputSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean isHidden(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        java.util.Set $r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>(r0, i0);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    private static java.lang.String getCustomLabel(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        int i0;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>(r0, i0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static java.util.Set getHiddenTvInputIds(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, i2;
        java.lang.String r1, r5, $r8;
        java.util.HashSet r2, $r7;
        java.lang.String[] r3, r4;
        android.content.ContentResolver $r6;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r6, "tv_input_hidden_inputs", i0);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r2 = $r7;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r5 = r4[i2];

        $r8 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>(r5);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public static java.util.Map getCustomLabels(android.content.Context, int)
    {
        android.content.Context r0;
        int i0, i1, i2;
        java.lang.String r1, r5, $r9, $r10, $r11, $r12;
        java.util.HashMap r2, $r8;
        java.lang.String[] r3, r4, r6;
        android.content.ContentResolver $r7;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r7, "tv_input_custom_labels", i0);

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r5 = r4[i2];

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r10 = r6[0];

        $r9 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r10);

        $r12 = r6[1];

        $r11 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r12);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;
    }

    public static void putHiddenTvInputs(android.content.Context, java.util.Set, int)
    {
        android.content.Context r0;
        java.util.Set r1;
        int i0;
        java.lang.StringBuilder r2, $r5;
        boolean z0, $z1;
        java.util.Iterator r3;
        java.lang.String r4, $r7, $r11;
        android.content.ContentResolver $r6;
        java.lang.Object $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Set;

        i0 := @parameter2: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        z0 = 1;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>(r4);

        if z0 == 0 goto label2;

        z0 = 0;

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label3:
        $r11 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label1;

     label4:
        $r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r6, "tv_input_hidden_inputs", $r7, i0);

        return;
    }

    public static void putCustomLabels(android.content.Context, java.util.Map, int)
    {
        android.content.Context r0;
        java.util.Map r1;
        int i0;
        java.lang.StringBuilder r2, $r5;
        boolean z0, $z1;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Set $r6;
        android.content.ContentResolver $r7;
        java.lang.String $r8, $r10, $r12, $r16, $r17, $r20, $r23;
        java.lang.Object $r9, $r11, $r13, $r14, $r21;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Map;

        i0 := @parameter2: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        z0 = 1;

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r11;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>($r10);

        $r13 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.String) $r13;

        staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: void ensureValidField(java.lang.String)>($r12);

        if z0 == 0 goto label2;

        z0 = 0;

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label3:
        $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r14;

        $r16 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r17);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (java.lang.String) $r21;

        $r23 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r20);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label1;

     label4:
        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r7, "tv_input_custom_labels", $r8, i0);

        return;
    }

    private static void ensureValidField(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should not empty ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    static boolean access$000(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: boolean isHidden(android.content.Context,java.lang.String,int)>(r0, r1, i0);

        return $z0;
    }

    static java.lang.String access$100(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String getCustomLabel(android.content.Context,java.lang.String,int)>(r0, r1, i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String CUSTOM_NAME_SEPARATOR> = ",";

        <android.media.tv.TvInputInfo$TvInputSettings: java.lang.String TV_INPUT_SEPARATOR> = ":";

        return;
    }
}
