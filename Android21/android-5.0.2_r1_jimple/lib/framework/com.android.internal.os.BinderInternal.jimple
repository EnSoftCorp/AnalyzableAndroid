public class com.android.internal.os.BinderInternal extends java.lang.Object
{
    static java.lang.ref.WeakReference sGcWatcher;
    static java.util.ArrayList sGcWatchers;
    static java.lang.Runnable[] sTmpWatchers;
    static long sLastGcTime;

    public void <init>()
    {
        com.android.internal.os.BinderInternal r0;

        r0 := @this: com.android.internal.os.BinderInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addGcWatcher(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @parameter0: java.lang.Runnable;

        $r3 = <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final native void joinThreadPool();

    public static long getLastGcTime()
    {
        long $l0;

        $l0 = <com.android.internal.os.BinderInternal: long sLastGcTime>;

        return $l0;
    }

    public static final native android.os.IBinder getContextObject();

    public static final native void disableBackgroundScheduling(boolean);

    static final native void handleGc();

    public static void forceGc(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Runtime $r1;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2741, r0);

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        return;
    }

    static void forceBinderGc()
    {
        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("Binder");

        return;
    }

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;
        com.android.internal.os.BinderInternal$GcWatcher $r1;
        java.util.ArrayList $r2;
        java.lang.Runnable[] $r3;

        $r0 = new java.lang.ref.WeakReference;

        $r1 = new com.android.internal.os.BinderInternal$GcWatcher;

        specialinvoke $r1.<com.android.internal.os.BinderInternal$GcWatcher: void <init>()>();

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        <com.android.internal.os.BinderInternal: java.lang.ref.WeakReference sGcWatcher> = $r0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        <com.android.internal.os.BinderInternal: java.util.ArrayList sGcWatchers> = $r2;

        $r3 = newarray (java.lang.Runnable)[1];

        <com.android.internal.os.BinderInternal: java.lang.Runnable[] sTmpWatchers> = $r3;

        return;
    }
}
