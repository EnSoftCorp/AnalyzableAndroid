class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence extends java.lang.Object implements java.lang.CharSequence, android.text.GetChars
{
    private char[] mOriginal;
    private char[] mReplacement;
    private java.lang.CharSequence mSource;

    public void <init>(java.lang.CharSequence, char[], char[])
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        java.lang.CharSequence r1;
        char[] r2, r3;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: char[];

        r3 := @parameter2: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource> = r1;

        r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal> = r2;

        r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement> = r3;

        return;
    }

    public int length()
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $r1 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public char charAt(int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        int i0, i2, i3;
        char c1, $c4;
        java.lang.CharSequence $r1;
        char[] $r2, $r3, $r4;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i0);

        $r2 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        i2 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $c4 = $r3[i3];

        if c1 != $c4 goto label2;

        $r4 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement>;

        c1 = $r4[i3];

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return c1;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        int i0, i1, $i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - i0;

        r1 = newarray (char)[$i2];

        virtualinvoke r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void getChars(int,int,char[],int)>(i0, i1, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        char[] r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        $i0 = virtualinvoke r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>();

        r1 = newarray (char)[$i0];

        $i1 = virtualinvoke r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>();

        virtualinvoke r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void getChars(int,int,char[],int)>(0, $i1, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.method.ReplacementTransformationMethod$ReplacementCharSequence r0;
        int i0, i1, i2, i3, i4, i5, i7, $i8;
        char[] r1, $r3, $r4, $r5;
        char c6, $c9, $c10;
        java.lang.CharSequence $r2;

        r0 := @this: android.text.method.ReplacementTransformationMethod$ReplacementCharSequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r2 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence mSource>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>($r2, i0, i1, r1, i2);

        $i8 = i1 - i0;

        i3 = $i8 + i2;

        $r3 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        i4 = lengthof $r3;

        i5 = i2;

     label1:
        if i5 >= i3 goto label5;

        c6 = r1[i5];

        i7 = 0;

     label2:
        if i7 >= i4 goto label4;

        $r4 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mOriginal>;

        $c9 = $r4[i7];

        if c6 != $c9 goto label3;

        $r5 = r0.<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char[] mReplacement>;

        $c10 = $r5[i7];

        r1[i5] = $c10;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        return;
    }
}
