public class android.os.Build extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final java.lang.String UNKNOWN;
    public static final java.lang.String ID;
    public static final java.lang.String DISPLAY;
    public static final java.lang.String PRODUCT;
    public static final java.lang.String DEVICE;
    public static final java.lang.String BOARD;
    public static final java.lang.String CPU_ABI;
    public static final java.lang.String CPU_ABI2;
    public static final java.lang.String MANUFACTURER;
    public static final java.lang.String BRAND;
    public static final java.lang.String MODEL;
    public static final java.lang.String BOOTLOADER;
    public static final java.lang.String RADIO;
    public static final java.lang.String HARDWARE;
    public static final java.lang.String SERIAL;
    public static final java.lang.String[] SUPPORTED_ABIS;
    public static final java.lang.String[] SUPPORTED_32_BIT_ABIS;
    public static final java.lang.String[] SUPPORTED_64_BIT_ABIS;
    public static final java.lang.String TYPE;
    public static final java.lang.String TAGS;
    public static final java.lang.String FINGERPRINT;
    public static final long TIME;
    public static final java.lang.String USER;
    public static final java.lang.String HOST;
    public static final boolean IS_DEBUGGABLE;

    public void <init>()
    {
        android.os.Build r0;

        r0 := @this: android.os.Build;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String deriveFingerprint()
    {
        java.lang.String r0, $r2, $r5, $r8, $r11, $r15, $r16, $r21, $r22;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r23, $r24;

        r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.build.fingerprint");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.brand");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.name");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r8 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.device");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r11 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.version.release");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r15 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.id");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r16 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.version.incremental");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r21 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.type");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r22 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.tags");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r0 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r0;
    }

    public static void ensureFingerprintProperty()
    {
        java.lang.IllegalArgumentException r0, $r3;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.build.fingerprint");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label4;

     label1:
        $r2 = <android.os.Build: java.lang.String FINGERPRINT>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ro.build.fingerprint", $r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Build", "Failed to set fingerprint property", r0);

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static java.lang.String getRadioVersion()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.version.baseband", null);

        return $r0;
    }

    private static java.lang.String getString(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>(r0, "unknown");

        return $r1;
    }

    private static java.lang.String[] getStringList(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        boolean $z0;
        java.lang.String[] $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>(r0);

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = newarray (java.lang.String)[0];

        return $r4;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(r1);

        return $r3;
    }

    private static long getLong(java.lang.String)
    {
        java.lang.String r0, $r2;
        long $l0;
        java.lang.NumberFormatException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>(r0);

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static java.lang.String access$000(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>(r0);

        return $r1;
    }

    static java.lang.String[] access$100(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.os.Build: java.lang.String[] getStringList(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.String[] r0, $r13, $r14, $r15;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        boolean $z0, $z1;
        dalvik.system.VMRuntime $r16;
        int $i0, $i3;
        long $l1, $l2;

        <android.os.Build: java.lang.String UNKNOWN> = "unknown";

        <android.os.Build: java.lang.String TAG> = "Build";

        $r1 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.id");

        <android.os.Build: java.lang.String ID> = $r1;

        $r2 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.display.id");

        <android.os.Build: java.lang.String DISPLAY> = $r2;

        $r3 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.name");

        <android.os.Build: java.lang.String PRODUCT> = $r3;

        $r4 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.device");

        <android.os.Build: java.lang.String DEVICE> = $r4;

        $r5 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.board");

        <android.os.Build: java.lang.String BOARD> = $r5;

        $r6 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.manufacturer");

        <android.os.Build: java.lang.String MANUFACTURER> = $r6;

        $r7 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.brand");

        <android.os.Build: java.lang.String BRAND> = $r7;

        $r8 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.product.model");

        <android.os.Build: java.lang.String MODEL> = $r8;

        $r9 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.bootloader");

        <android.os.Build: java.lang.String BOOTLOADER> = $r9;

        $r10 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("gsm.version.baseband");

        <android.os.Build: java.lang.String RADIO> = $r10;

        $r11 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.hardware");

        <android.os.Build: java.lang.String HARDWARE> = $r11;

        $r12 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.serialno");

        <android.os.Build: java.lang.String SERIAL> = $r12;

        $r13 = staticinvoke <android.os.Build: java.lang.String[] getStringList(java.lang.String,java.lang.String)>("ro.product.cpu.abilist", ",");

        <android.os.Build: java.lang.String[] SUPPORTED_ABIS> = $r13;

        $r14 = staticinvoke <android.os.Build: java.lang.String[] getStringList(java.lang.String,java.lang.String)>("ro.product.cpu.abilist32", ",");

        <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS> = $r14;

        $r15 = staticinvoke <android.os.Build: java.lang.String[] getStringList(java.lang.String,java.lang.String)>("ro.product.cpu.abilist64", ",");

        <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS> = $r15;

        $r16 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $z0 = virtualinvoke $r16.<dalvik.system.VMRuntime: boolean is64Bit()>();

        if $z0 == 0 goto label1;

        r0 = <android.os.Build: java.lang.String[] SUPPORTED_64_BIT_ABIS>;

        goto label2;

     label1:
        r0 = <android.os.Build: java.lang.String[] SUPPORTED_32_BIT_ABIS>;

     label2:
        $r17 = r0[0];

        <android.os.Build: java.lang.String CPU_ABI> = $r17;

        $i0 = lengthof r0;

        if $i0 <= 1 goto label3;

        $r23 = r0[1];

        <android.os.Build: java.lang.String CPU_ABI2> = $r23;

        goto label4;

     label3:
        <android.os.Build: java.lang.String CPU_ABI2> = "";

     label4:
        $r19 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.type");

        <android.os.Build: java.lang.String TYPE> = $r19;

        $r18 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.tags");

        <android.os.Build: java.lang.String TAGS> = $r18;

        $r20 = staticinvoke <android.os.Build: java.lang.String deriveFingerprint()>();

        <android.os.Build: java.lang.String FINGERPRINT> = $r20;

        $l1 = staticinvoke <android.os.Build: long getLong(java.lang.String)>("ro.build.date.utc");

        $l2 = $l1 * 1000L;

        <android.os.Build: long TIME> = $l2;

        $r21 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.user");

        <android.os.Build: java.lang.String USER> = $r21;

        $r22 = staticinvoke <android.os.Build: java.lang.String getString(java.lang.String)>("ro.build.host");

        <android.os.Build: java.lang.String HOST> = $r22;

        $i3 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.debuggable", 0);

        if $i3 != 1 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        <android.os.Build: boolean IS_DEBUGGABLE> = $z1;

        return;
    }
}
