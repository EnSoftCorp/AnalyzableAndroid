final class android.hardware.input.InputManager$InputDeviceVibrator extends android.os.Vibrator
{
    private final int mDeviceId;
    private final android.os.Binder mToken;
    final android.hardware.input.InputManager this$0;

    public void <init>(android.hardware.input.InputManager, int)
    {
        android.hardware.input.InputManager$InputDeviceVibrator r0;
        android.hardware.input.InputManager r1;
        int i0;
        android.os.Binder $r2;

        r0 := @this: android.hardware.input.InputManager$InputDeviceVibrator;

        r1 := @parameter0: android.hardware.input.InputManager;

        i0 := @parameter1: int;

        r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.hardware.input.InputManager this$0> = r1;

        specialinvoke r0.<android.os.Vibrator: void <init>()>();

        r0.<android.hardware.input.InputManager$InputDeviceVibrator: int mDeviceId> = i0;

        $r2 = new android.os.Binder;

        specialinvoke $r2.<android.os.Binder: void <init>()>();

        r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.os.Binder mToken> = $r2;

        return;
    }

    public boolean hasVibrator()
    {
        android.hardware.input.InputManager$InputDeviceVibrator r0;

        r0 := @this: android.hardware.input.InputManager$InputDeviceVibrator;

        return 1;
    }

    public void vibrate(int, java.lang.String, long, android.media.AudioAttributes)
    {
        android.hardware.input.InputManager$InputDeviceVibrator r0;
        int i0;
        java.lang.String r1;
        long l1;
        android.media.AudioAttributes r2;
        long[] $r3;

        r0 := @this: android.hardware.input.InputManager$InputDeviceVibrator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        r2 := @parameter3: android.media.AudioAttributes;

        $r3 = newarray (long)[2];

        $r3[0] = 0L;

        $r3[1] = l1;

        virtualinvoke r0.<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long[],int)>($r3, -1);

        return;
    }

    public void vibrate(int, java.lang.String, long[], int, android.media.AudioAttributes)
    {
        android.hardware.input.InputManager$InputDeviceVibrator r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        long[] r2;
        android.media.AudioAttributes r3;
        android.os.RemoteException r4, $r9;
        android.hardware.input.InputManager $r5;
        android.hardware.input.IInputManager $r6;
        android.os.Binder $r7;
        java.lang.ArrayIndexOutOfBoundsException $r8;

        r0 := @this: android.hardware.input.InputManager$InputDeviceVibrator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: long[];

        i1 := @parameter3: int;

        r3 := @parameter4: android.media.AudioAttributes;

        $i2 = lengthof r2;

        if i1 < $i2 goto label1;

        $r8 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r8;

     label1:
        $r5 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.hardware.input.InputManager this$0>;

        $r6 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.IInputManager access$200(android.hardware.input.InputManager)>($r5);

        $i3 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: int mDeviceId>;

        $r7 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.os.Binder mToken>;

        interfaceinvoke $r6.<android.hardware.input.IInputManager: void vibrate(int,long[],int,android.os.IBinder)>($i3, r2, i1, $r7);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputManager", "Failed to vibrate.", r4);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void cancel()
    {
        android.hardware.input.InputManager$InputDeviceVibrator r0;
        android.os.RemoteException r1, $r5;
        android.hardware.input.InputManager $r2;
        android.hardware.input.IInputManager $r3;
        android.os.Binder $r4;
        int $i0;

        r0 := @this: android.hardware.input.InputManager$InputDeviceVibrator;

     label1:
        $r2 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.hardware.input.InputManager this$0>;

        $r3 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.IInputManager access$200(android.hardware.input.InputManager)>($r2);

        $i0 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: int mDeviceId>;

        $r4 = r0.<android.hardware.input.InputManager$InputDeviceVibrator: android.os.Binder mToken>;

        interfaceinvoke $r3.<android.hardware.input.IInputManager: void cancelVibrate(int,android.os.IBinder)>($i0, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputManager", "Failed to cancel vibration.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
