public final class android.media.session.MediaSessionManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mListeners;
    private final java.lang.Object mLock;
    private final android.media.session.ISessionManager mService;
    private android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.media.session.MediaSessionManager r0;
        android.content.Context r1;
        android.os.IBinder r2;
        android.util.ArrayMap $r3;
        java.lang.Object $r4;
        android.media.session.ISessionManager $r5;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.session.MediaSessionManager: android.util.ArrayMap mListeners> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.media.session.MediaSessionManager: java.lang.Object mLock> = $r4;

        r0.<android.media.session.MediaSessionManager: android.content.Context mContext> = r1;

        r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("media_session");

        $r5 = staticinvoke <android.media.session.ISessionManager$Stub: android.media.session.ISessionManager asInterface(android.os.IBinder)>(r2);

        r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService> = $r5;

        return;
    }

    public android.media.session.ISession createSession(android.media.session.MediaSession$CallbackStub, java.lang.String, int) throws android.os.RemoteException
    {
        android.media.session.MediaSessionManager r0;
        android.media.session.MediaSession$CallbackStub r1;
        java.lang.String r2, $r5;
        int i0;
        android.content.Context $r3;
        android.media.session.ISessionManager $r4;
        android.media.session.ISession $r6;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.session.MediaSession$CallbackStub;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        $r3 = r0.<android.media.session.MediaSessionManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = interfaceinvoke $r4.<android.media.session.ISessionManager: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,int)>($r5, r1, r2, i0);

        return $r6;
    }

    public java.util.List getActiveSessions(android.content.ComponentName)
    {
        android.media.session.MediaSessionManager r0;
        android.content.ComponentName r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.content.ComponentName;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        $r2 = virtualinvoke r0.<android.media.session.MediaSessionManager: java.util.List getActiveSessionsForUser(android.content.ComponentName,int)>(r1, $i0);

        return $r2;
    }

    public java.util.List getActiveSessionsForUser(android.content.ComponentName, int)
    {
        android.media.session.MediaSessionManager r0;
        android.content.ComponentName r1;
        int i0, i1, i2;
        java.util.ArrayList r2, $r5;
        java.util.List r3;
        android.media.session.MediaController r4, $r7;
        android.media.session.ISessionManager $r6;
        android.content.Context $r8;
        java.lang.Object $r9;
        android.os.IBinder $r10;
        android.media.session.ISessionController $r11;
        android.os.RemoteException $r12, r13;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

     label1:
        $r6 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        r3 = interfaceinvoke $r6.<android.media.session.ISessionManager: java.util.List getSessions(android.content.ComponentName,int)>(r1, i0);

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r7 = new android.media.session.MediaController;

        $r8 = r0.<android.media.session.MediaSessionManager: android.content.Context mContext>;

        $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        $r10 = (android.os.IBinder) $r9;

        $r11 = staticinvoke <android.media.session.ISessionController$Stub: android.media.session.ISessionController asInterface(android.os.IBinder)>($r10);

        specialinvoke $r7.<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.ISessionController)>($r8, $r11);

        r4 = $r7;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r13 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Failed to get active sessions: ", r13);

     label5:
        return r2;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener, android.content.ComponentName)
    {
        android.media.session.MediaSessionManager r0;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener r1;
        android.content.ComponentName r2;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener;

        r2 := @parameter1: android.content.ComponentName;

        virtualinvoke r0.<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)>(r1, r2, null);

        return;
    }

    public void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener, android.content.ComponentName, android.os.Handler)
    {
        android.media.session.MediaSessionManager r0;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener r1;
        android.content.ComponentName r2;
        android.os.Handler r3;
        int $i0;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.os.Handler;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r0.<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener,android.content.ComponentName,int,android.os.Handler)>(r1, r2, $i0, r3);

        return;
    }

    public void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener, android.content.ComponentName, int, android.os.Handler)
    {
        android.media.session.MediaSessionManager r0;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener r1;
        android.content.ComponentName r2;
        int i0;
        android.os.Handler r3, $r17;
        java.lang.Object r4, $r8, $r10;
        android.media.session.MediaSessionManager$SessionsChangedWrapper r5, $r11;
        android.os.RemoteException r6, $r19;
        java.lang.Throwable r7, $r18;
        android.util.ArrayMap $r9, $r14;
        android.media.session.ISessionManager $r12;
        android.media.session.IActiveSessionsListener$Stub $r13;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Handler;

        if r1 != null goto label01;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener may not be null");

        throw $r16;

     label01:
        if r3 != null goto label02;

        $r17 = new android.os.Handler;

        specialinvoke $r17.<android.os.Handler: void <init>()>();

        r3 = $r17;

     label02:
        $r8 = r0.<android.media.session.MediaSessionManager: java.lang.Object mLock>;

        r4 = $r8;

        entermonitor $r8;

     label03:
        $r9 = r0.<android.media.session.MediaSessionManager: android.util.ArrayMap mListeners>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r10 == null goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SessionManager", "Attempted to add session listener twice, ignoring.");

        exitmonitor r4;

     label04:
        return;

     label05:
        $r11 = new android.media.session.MediaSessionManager$SessionsChangedWrapper;

        specialinvoke $r11.<android.media.session.MediaSessionManager$SessionsChangedWrapper: void <init>(android.media.session.MediaSessionManager,android.media.session.MediaSessionManager$OnActiveSessionsChangedListener,android.os.Handler)>(r0, r1, r3);

        r5 = $r11;

     label06:
        $r12 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        $r13 = staticinvoke <android.media.session.MediaSessionManager$SessionsChangedWrapper: android.media.session.IActiveSessionsListener$Stub access$000(android.media.session.MediaSessionManager$SessionsChangedWrapper)>(r5);

        interfaceinvoke $r12.<android.media.session.ISessionManager: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>($r13, r2, i0);

        $r14 = r0.<android.media.session.MediaSessionManager: android.util.ArrayMap mListeners>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        r6 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Error in addOnActiveSessionsChangedListener.", r6);

     label09:
        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r4;

     label12:
        throw r7;

     label13:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager$OnActiveSessionsChangedListener)
    {
        android.media.session.MediaSessionManager r0;
        android.media.session.MediaSessionManager$OnActiveSessionsChangedListener r1;
        java.lang.Object r2, $r6, $r8;
        android.media.session.MediaSessionManager$SessionsChangedWrapper r3;
        android.os.RemoteException r4, $r13;
        java.lang.Throwable r5, $r12;
        android.util.ArrayMap $r7;
        android.media.session.ISessionManager $r9;
        android.media.session.IActiveSessionsListener$Stub $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.session.MediaSessionManager$OnActiveSessionsChangedListener;

        if r1 != null goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener may not be null");

        throw $r11;

     label01:
        $r6 = r0.<android.media.session.MediaSessionManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<android.media.session.MediaSessionManager: android.util.ArrayMap mListeners>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (android.media.session.MediaSessionManager$SessionsChangedWrapper) $r8;

        if r3 == null goto label06;

     label03:
        $r9 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        $r10 = staticinvoke <android.media.session.MediaSessionManager$SessionsChangedWrapper: android.media.session.IActiveSessionsListener$Stub access$000(android.media.session.MediaSessionManager$SessionsChangedWrapper)>(r3);

        interfaceinvoke $r9.<android.media.session.ISessionManager: void removeSessionsListener(android.media.session.IActiveSessionsListener)>($r10);

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        r4 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Error in removeOnActiveSessionsChangedListener.", r4);

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void setRemoteVolumeController(android.media.IRemoteVolumeController)
    {
        android.media.session.MediaSessionManager r0;
        android.media.IRemoteVolumeController r1;
        android.os.RemoteException r2, $r4;
        android.media.session.ISessionManager $r3;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.media.IRemoteVolumeController;

     label1:
        $r3 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        interfaceinvoke $r3.<android.media.session.ISessionManager: void setRemoteVolumeController(android.media.IRemoteVolumeController)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Error in setRemoteVolumeController.", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchMediaKeyEvent(android.view.KeyEvent)
    {
        android.media.session.MediaSessionManager r0;
        android.view.KeyEvent r1;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.view.KeyEvent;

        virtualinvoke r0.<android.media.session.MediaSessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>(r1, 0);

        return;
    }

    public void dispatchMediaKeyEvent(android.view.KeyEvent, boolean)
    {
        android.media.session.MediaSessionManager r0;
        android.view.KeyEvent r1;
        boolean z0;
        android.os.RemoteException r2, $r4;
        android.media.session.ISessionManager $r3;

        r0 := @this: android.media.session.MediaSessionManager;

        r1 := @parameter0: android.view.KeyEvent;

        z0 := @parameter1: boolean;

     label1:
        $r3 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        interfaceinvoke $r3.<android.media.session.ISessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>(r1, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Failed to send key event.", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchAdjustVolume(int, int, int)
    {
        android.media.session.MediaSessionManager r0;
        int i0, i1, i2;
        android.os.RemoteException r1, $r3;
        android.media.session.ISessionManager $r2;

        r0 := @this: android.media.session.MediaSessionManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        $r2 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        interfaceinvoke $r2.<android.media.session.ISessionManager: void dispatchAdjustVolume(int,int,int)>(i0, i1, i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Failed to send adjust volume.", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isGlobalPriorityActive()
    {
        android.media.session.MediaSessionManager r0;
        android.os.RemoteException r1, $r3;
        android.media.session.ISessionManager $r2;
        boolean $z0;

        r0 := @this: android.media.session.MediaSessionManager;

     label1:
        $r2 = r0.<android.media.session.MediaSessionManager: android.media.session.ISessionManager mService>;

        $z0 = interfaceinvoke $r2.<android.media.session.ISessionManager: boolean isGlobalPriorityActive()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionManager", "Failed to check if the global priority is active.", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.content.Context access$200(android.media.session.MediaSessionManager)
    {
        android.media.session.MediaSessionManager r0;
        android.content.Context $r1;

        r0 := @parameter0: android.media.session.MediaSessionManager;

        $r1 = r0.<android.media.session.MediaSessionManager: android.content.Context mContext>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.media.session.MediaSessionManager: java.lang.String TAG> = "SessionManager";

        return;
    }
}
