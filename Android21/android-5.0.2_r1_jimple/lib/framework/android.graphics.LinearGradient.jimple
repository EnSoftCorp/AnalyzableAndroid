public class android.graphics.LinearGradient extends android.graphics.Shader
{
    private static final int TYPE_COLORS_AND_POSITIONS;
    private static final int TYPE_COLOR_START_AND_COLOR_END;
    private int mType;
    private float mX0;
    private float mY0;
    private float mX1;
    private float mY1;
    private int[] mColors;
    private float[] mPositions;
    private int mColor0;
    private int mColor1;
    private android.graphics.Shader$TileMode mTileMode;

    public void <init>(float, float, float, float, int[], float[], android.graphics.Shader$TileMode)
    {
        android.graphics.LinearGradient r0;
        float f0, f1, f2, f3;
        int[] r1;
        float[] r2;
        android.graphics.Shader$TileMode r3;
        int $i0, $i1, $i3, $i4;
        long $l2;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.graphics.LinearGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: int[];

        r2 := @parameter5: float[];

        r3 := @parameter6: android.graphics.Shader$TileMode;

        specialinvoke r0.<android.graphics.Shader: void <init>()>();

        $i0 = lengthof r1;

        if $i0 >= 2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("needs >= 2 number of colors");

        throw $r5;

     label1:
        if r2 == null goto label2;

        $i4 = lengthof r1;

        $i3 = lengthof r2;

        if $i4 == $i3 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("color and position arrays must be of equal length");

        throw $r4;

     label2:
        r0.<android.graphics.LinearGradient: int mType> = 1;

        r0.<android.graphics.LinearGradient: float mX0> = f0;

        r0.<android.graphics.LinearGradient: float mY0> = f1;

        r0.<android.graphics.LinearGradient: float mX1> = f2;

        r0.<android.graphics.LinearGradient: float mY1> = f3;

        r0.<android.graphics.LinearGradient: int[] mColors> = r1;

        r0.<android.graphics.LinearGradient: float[] mPositions> = r2;

        r0.<android.graphics.LinearGradient: android.graphics.Shader$TileMode mTileMode> = r3;

        $i1 = r3.<android.graphics.Shader$TileMode: int nativeInt>;

        $l2 = specialinvoke r0.<android.graphics.LinearGradient: long nativeCreate1(float,float,float,float,int[],float[],int)>(f0, f1, f2, f3, r1, r2, $i1);

        virtualinvoke r0.<android.graphics.LinearGradient: void init(long)>($l2);

        return;
    }

    public void <init>(float, float, float, float, int, int, android.graphics.Shader$TileMode)
    {
        android.graphics.LinearGradient r0;
        float f0, f1, f2, f3;
        int i0, i1, $i2;
        android.graphics.Shader$TileMode r1;
        long $l3;

        r0 := @this: android.graphics.LinearGradient;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        r1 := @parameter6: android.graphics.Shader$TileMode;

        specialinvoke r0.<android.graphics.Shader: void <init>()>();

        r0.<android.graphics.LinearGradient: int mType> = 2;

        r0.<android.graphics.LinearGradient: float mX0> = f0;

        r0.<android.graphics.LinearGradient: float mY0> = f1;

        r0.<android.graphics.LinearGradient: float mX1> = f2;

        r0.<android.graphics.LinearGradient: float mY1> = f3;

        r0.<android.graphics.LinearGradient: int mColor0> = i0;

        r0.<android.graphics.LinearGradient: int mColor1> = i1;

        r0.<android.graphics.LinearGradient: android.graphics.Shader$TileMode mTileMode> = r1;

        $i2 = r1.<android.graphics.Shader$TileMode: int nativeInt>;

        $l3 = specialinvoke r0.<android.graphics.LinearGradient: long nativeCreate2(float,float,float,float,int,int,int)>(f0, f1, f2, f3, i0, i1, $i2);

        virtualinvoke r0.<android.graphics.LinearGradient: void init(long)>($l3);

        return;
    }

    protected android.graphics.Shader copy()
    {
        android.graphics.LinearGradient r0, r1, $r2, $r4;
        int $i0, $i1, $i2;
        android.graphics.Shader$TileMode $r3, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int[] $r5, $r10;
        java.lang.Object $r6, $r12;
        float[] $r8, $r9, $r11;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: android.graphics.LinearGradient;

        $i0 = r0.<android.graphics.LinearGradient: int mType>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = new android.graphics.LinearGradient;

        $f4 = r0.<android.graphics.LinearGradient: float mX0>;

        $f5 = r0.<android.graphics.LinearGradient: float mY0>;

        $f6 = r0.<android.graphics.LinearGradient: float mX1>;

        $f7 = r0.<android.graphics.LinearGradient: float mY1>;

        $r5 = r0.<android.graphics.LinearGradient: int[] mColors>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        $r10 = (int[]) $r6;

        $r8 = r0.<android.graphics.LinearGradient: float[] mPositions>;

        if $r8 == null goto label2;

        $r9 = r0.<android.graphics.LinearGradient: float[] mPositions>;

        $r12 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (float[]) $r12;

        goto label3;

     label2:
        $r11 = null;

     label3:
        $r7 = r0.<android.graphics.LinearGradient: android.graphics.Shader$TileMode mTileMode>;

        specialinvoke $r4.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f4, $f5, $f6, $f7, $r10, $r11, $r7);

        r1 = $r4;

        goto label6;

     label4:
        $r2 = new android.graphics.LinearGradient;

        $f3 = r0.<android.graphics.LinearGradient: float mX0>;

        $f2 = r0.<android.graphics.LinearGradient: float mY0>;

        $f1 = r0.<android.graphics.LinearGradient: float mX1>;

        $f0 = r0.<android.graphics.LinearGradient: float mY1>;

        $i2 = r0.<android.graphics.LinearGradient: int mColor0>;

        $i1 = r0.<android.graphics.LinearGradient: int mColor1>;

        $r3 = r0.<android.graphics.LinearGradient: android.graphics.Shader$TileMode mTileMode>;

        specialinvoke $r2.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>($f3, $f2, $f1, $f0, $i2, $i1, $r3);

        r1 = $r2;

        goto label6;

     label5:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("LinearGradient should be created with either colors and positions or start color and end color");

        throw $r13;

     label6:
        virtualinvoke r0.<android.graphics.LinearGradient: void copyLocalMatrix(android.graphics.Shader)>(r1);

        return r1;
    }

    private native long nativeCreate1(float, float, float, float, int[], float[], int);

    private native long nativeCreate2(float, float, float, float, int, int, int);

    public static void <clinit>()
    {
        <android.graphics.LinearGradient: int TYPE_COLOR_START_AND_COLOR_END> = 2;

        <android.graphics.LinearGradient: int TYPE_COLORS_AND_POSITIONS> = 1;

        return;
    }
}
