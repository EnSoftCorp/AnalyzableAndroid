public class android.alsa.AlsaCardsParser extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.alsa.LineTokenizer tokenizer_;
    private java.util.Vector cardRecords_;

    public void scan()
    {
        android.alsa.AlsaCardsParser r0;
        java.io.File r2, $r8;
        java.io.FileReader r3, $r9;
        java.io.BufferedReader r4, $r10;
        android.alsa.AlsaCardsParser$AlsaCardRecord r6, $r12;
        java.util.Vector $r7, $r14;
        java.lang.String $r11, $r13, r17;
        java.io.FileNotFoundException $r15, r19;
        java.io.IOException $r16, r20;

        r0 := @this: android.alsa.AlsaCardsParser;

        $r7 = r0.<android.alsa.AlsaCardsParser: java.util.Vector cardRecords_>;

        virtualinvoke $r7.<java.util.Vector: void clear()>();

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>("/proc/asound/cards");

        r2 = $r8;

     label1:
        $r9 = new java.io.FileReader;

        specialinvoke $r9.<java.io.FileReader: void <init>(java.io.File)>(r2);

        r3 = $r9;

        $r10 = new java.io.BufferedReader;

        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>(r3);

        r4 = $r10;

     label2:
        $r11 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

        r17 = $r11;

        if $r11 == null goto label3;

        $r12 = new android.alsa.AlsaCardsParser$AlsaCardRecord;

        specialinvoke $r12.<android.alsa.AlsaCardsParser$AlsaCardRecord: void <init>(android.alsa.AlsaCardsParser)>(r0);

        r6 = $r12;

        virtualinvoke r6.<android.alsa.AlsaCardsParser$AlsaCardRecord: boolean parse(java.lang.String,int)>(r17, 0);

        $r13 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke r6.<android.alsa.AlsaCardsParser$AlsaCardRecord: boolean parse(java.lang.String,int)>($r13, 1);

        $r14 = r0.<android.alsa.AlsaCardsParser: java.util.Vector cardRecords_>;

        virtualinvoke $r14.<java.util.Vector: boolean add(java.lang.Object)>(r6);

        goto label2;

     label3:
        virtualinvoke r3.<java.io.FileReader: void close()>();

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r19 = $r15;

        virtualinvoke r19.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label7;

     label6:
        $r16 := @caughtexception;

        r20 = $r16;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

     label7:
        return;

        catch java.io.FileNotFoundException from label1 to label4 with label5;
        catch java.io.IOException from label1 to label4 with label6;
    }

    public android.alsa.AlsaCardsParser$AlsaCardRecord getCardRecordAt(int)
    {
        android.alsa.AlsaCardsParser r0;
        int i0;
        java.util.Vector $r1;
        java.lang.Object $r2;
        android.alsa.AlsaCardsParser$AlsaCardRecord $r3;

        r0 := @this: android.alsa.AlsaCardsParser;

        i0 := @parameter0: int;

        $r1 = r0.<android.alsa.AlsaCardsParser: java.util.Vector cardRecords_>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(i0);

        $r3 = (android.alsa.AlsaCardsParser$AlsaCardRecord) $r2;

        return $r3;
    }

    public int getNumCardRecords()
    {
        android.alsa.AlsaCardsParser r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: android.alsa.AlsaCardsParser;

        $r1 = r0.<android.alsa.AlsaCardsParser: java.util.Vector cardRecords_>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public void Log()
    {
        android.alsa.AlsaCardsParser r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r5;
        android.alsa.AlsaCardsParser$AlsaCardRecord $r3;
        java.lang.String $r4, $r6;

        r0 := @this: android.alsa.AlsaCardsParser;

        i0 = virtualinvoke r0.<android.alsa.AlsaCardsParser: int getNumCardRecords()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("usb:");

        $r3 = virtualinvoke r0.<android.alsa.AlsaCardsParser: android.alsa.AlsaCardsParser$AlsaCardRecord getCardRecordAt(int)>(i1);

        $r4 = virtualinvoke $r3.<android.alsa.AlsaCardsParser$AlsaCardRecord: java.lang.String textFormat()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AlsaCardsParser", $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>()
    {
        android.alsa.AlsaCardsParser r0;
        java.util.Vector $r1;

        r0 := @this: android.alsa.AlsaCardsParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<android.alsa.AlsaCardsParser: java.util.Vector cardRecords_> = $r1;

        return;
    }

    static android.alsa.LineTokenizer access$000()
    {
        android.alsa.LineTokenizer $r0;

        $r0 = <android.alsa.AlsaCardsParser: android.alsa.LineTokenizer tokenizer_>;

        return $r0;
    }

    static void <clinit>()
    {
        android.alsa.LineTokenizer $r0;

        <android.alsa.AlsaCardsParser: java.lang.String TAG> = "AlsaCardsParser";

        $r0 = new android.alsa.LineTokenizer;

        specialinvoke $r0.<android.alsa.LineTokenizer: void <init>(java.lang.String)>(" :[]");

        <android.alsa.AlsaCardsParser: android.alsa.LineTokenizer tokenizer_> = $r0;

        return;
    }
}
