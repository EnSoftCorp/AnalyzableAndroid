class android.widget.SpellChecker$SpellParser extends java.lang.Object
{
    private java.lang.Object mRange;
    final android.widget.SpellChecker this$0;

    private void <init>(android.widget.SpellChecker)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange> = $r2;

        return;
    }

    public void parse(int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        int i0, i1, i2, i3;
        android.widget.SpellChecker $r1, $r3;
        android.widget.TextView $r2, $r4;
        java.lang.CharSequence $r5;
        android.text.Editable $r6;
        java.lang.String $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        i2 = virtualinvoke $r2.<android.widget.TextView: int length()>();

        if i1 <= i2 goto label1;

        $r7 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse invalid region, from ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r13);

        i3 = i2;

        goto label2;

     label1:
        i3 = i1;

     label2:
        if i3 <= i0 goto label3;

        $r3 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r4 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r3);

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = (android.text.Editable) $r5;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>($r6, i0, i3);

        virtualinvoke r0.<android.widget.SpellChecker$SpellParser: void parse()>();

     label3:
        return;
    }

    public boolean isFinished()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        java.lang.Object $r4;
        android.text.Editable $r5;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Editable) $r3;

        $r4 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i0 = interfaceinvoke $r5.<android.text.Editable: int getSpanStart(java.lang.Object)>($r4);

        if $i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void stop()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        android.text.Editable $r4;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r4 = (android.text.Editable) $r3;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>($r4);

        return;
    }

    private void setRangeSpan(android.text.Editable, int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r2, i0, i1, 33);

        return;
    }

    private void removeRangeSpan(android.text.Editable)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r2);

        return;
    }

    public void parse()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, i24, i25, i26, i27, i28;
        android.text.style.SpellCheckSpan[] r2, $r46;
        android.text.style.SuggestionSpan[] r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, z8;
        android.text.style.SpellCheckSpan r4, $r29, $r33;
        android.widget.SpellChecker $r5, $r8, $r12, $r13, $r14, $r19, $r20, $r21, $r23, $r25, $r27, $r30, $r32, $r34, $r39, $r44, $r45, $r48, $r51, $r52;
        java.lang.CharSequence $r6;
        android.widget.TextView $r7;
        java.lang.Object $r9, $r10, $r49;
        android.text.method.WordIterator $r11, $r15, $r16, $r22, $r24, $r26, $r28, $r31, $r47, $r50, $r53;
        java.lang.Object[] $r17, $r18;
        java.lang.StringBuilder $r35, $r36, $r37, $r41, $r42;
        java.lang.String $r38, $r40;
        int[] $r43;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r5 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r7 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r5);

        $r6 = virtualinvoke $r7.<android.widget.TextView: java.lang.CharSequence getText()>();

        r1 = (android.text.Editable) $r6;

        $r8 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $z3 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r8);

        if $z3 == 0 goto label01;

        $r49 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i22 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r49);

        $i23 = $i22 - 50;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i23);

        goto label02;

     label01:
        $r9 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i0 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r9);

     label02:
        $r10 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i1 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r10);

        $i11 = i0 + 350;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i11);

        $r12 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r11 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r12);

        virtualinvoke $r11.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i0, i2);

        $r14 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r15 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r14);

        i3 = virtualinvoke $r15.<android.text.method.WordIterator: int preceding(int)>(i0);

        if i3 != -1 goto label03;

        $r52 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r53 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r52);

        i4 = virtualinvoke $r53.<android.text.method.WordIterator: int following(int)>(i0);

        if i4 == -1 goto label04;

        $r51 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r50 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r51);

        i3 = virtualinvoke $r50.<android.text.method.WordIterator: int getBeginning(int)>(i4);

        goto label04;

     label03:
        $r13 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r16 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r13);

        i4 = virtualinvoke $r16.<android.text.method.WordIterator: int getEnd(int)>(i3);

     label04:
        if i4 != -1 goto label05;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label05:
        $i13 = i0 - 1;

        $i12 = i1 + 1;

        $r18 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i13, $i12, class "android/text/style/SpellCheckSpan");

        r2 = (android.text.style.SpellCheckSpan[]) $r18;

        $i14 = i0 - 1;

        $i15 = i1 + 1;

        $r17 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i14, $i15, class "android/text/style/SuggestionSpan");

        r3 = (android.text.style.SuggestionSpan[]) $r17;

        i5 = 0;

        z0 = 0;

        $r21 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $z4 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r21);

        if $z4 == 0 goto label22;

        if i2 >= i1 goto label06;

        z0 = 1;

     label06:
        $r34 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r31 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r34);

        i6 = virtualinvoke $r31.<android.text.method.WordIterator: int preceding(int)>(i2);

        if i6 == -1 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        z1 = $z6;

        if z1 == 0 goto label11;

        $r48 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r47 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r48);

        i6 = virtualinvoke $r47.<android.text.method.WordIterator: int getEnd(int)>(i6);

        if i6 == -1 goto label09;

        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        z1 = $z7;

     label11:
        if z1 != 0 goto label12;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label12:
        i7 = i3;

        z2 = 1;

        i8 = 0;

     label13:
        $r32 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $i18 = staticinvoke <android.widget.SpellChecker: int access$600(android.widget.SpellChecker)>($r32);

        if i8 >= $i18 goto label18;

        $r44 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r46 = staticinvoke <android.widget.SpellChecker: android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker)>($r44);

        r4 = $r46[i8];

        $r45 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r43 = staticinvoke <android.widget.SpellChecker: int[] access$800(android.widget.SpellChecker)>($r45);

        $i20 = $r43[i8];

        if $i20 < 0 goto label17;

        $z5 = virtualinvoke r4.<android.text.style.SpellCheckSpan: boolean isSpellCheckInProgress()>();

        if $z5 == 0 goto label14;

        goto label17;

     label14:
        i9 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r4);

        i10 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r4);

        if i10 < i7 goto label17;

        if i6 >= i9 goto label15;

        goto label17;

     label15:
        if i9 > i7 goto label16;

        if i6 > i10 goto label16;

        z2 = 0;

        goto label18;

     label16:
        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r4);

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i9, i7);

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i10, i6);

     label17:
        i8 = i8 + 1;

        goto label13;

     label18:
        if i6 >= i0 goto label19;

        goto label21;

     label19:
        if i6 > i7 goto label20;

        $r40 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to spellcheck invalid region, from ");

        $r35 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r40, $r38);

        goto label21;

     label20:
        if z2 == 0 goto label21;

        $r39 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r39, r1, i7, i6);

     label21:
        i3 = i6;

        goto label38;

     label22:
        if i3 > i1 goto label38;

        if i4 < i0 goto label33;

        if i4 <= i3 goto label33;

        if i5 < 50 goto label23;

        z0 = 1;

        goto label38;

     label23:
        if i3 >= i0 goto label24;

        if i4 <= i0 goto label24;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r2);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r3);

     label24:
        if i3 >= i1 goto label25;

        if i4 <= i1 goto label25;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i1, r2);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i1, r3);

     label25:
        z8 = 1;

        if i4 != i0 goto label28;

        i24 = 0;

     label26:
        $i19 = lengthof r2;

        if i24 >= $i19 goto label28;

        $r33 = r2[i24];

        i25 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r33);

        if i25 != i0 goto label27;

        z8 = 0;

        goto label28;

     label27:
        i24 = i24 + 1;

        goto label26;

     label28:
        if i3 != i1 goto label31;

        i26 = 0;

     label29:
        $i17 = lengthof r2;

        if i26 >= $i17 goto label31;

        $r29 = r2[i26];

        i27 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r29);

        if i27 != i1 goto label30;

        z8 = 0;

        goto label31;

     label30:
        i26 = i26 + 1;

        goto label29;

     label31:
        if z8 == 0 goto label32;

        $r30 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r30, r1, i3, i4);

     label32:
        i5 = i5 + 1;

     label33:
        i28 = i4;

        $r20 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r24 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r20);

        i4 = virtualinvoke $r24.<android.text.method.WordIterator: int following(int)>(i4);

        if i2 >= i1 goto label35;

        if i4 == -1 goto label34;

        if i4 < i2 goto label35;

     label34:
        $i16 = i28 + 350;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i16);

        $r25 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r28 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r25);

        virtualinvoke $r28.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i28, i2);

        $r27 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r26 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r27);

        i4 = virtualinvoke $r26.<android.text.method.WordIterator: int following(int)>(i28);

     label35:
        if i4 != -1 goto label36;

        goto label38;

     label36:
        $r23 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r22 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r23);

        i3 = virtualinvoke $r22.<android.text.method.WordIterator: int getBeginning(int)>(i4);

        if i3 != -1 goto label37;

        goto label38;

     label37:
        goto label22;

     label38:
        if z0 == 0 goto label39;

        if i3 > i1 goto label39;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>(r1, i3, i1);

        goto label40;

     label39:
        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

     label40:
        $r19 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$1000(android.widget.SpellChecker)>($r19);

        return;
    }

    private void removeSpansAt(android.text.Editable, int, java.lang.Object[])
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, i2, i3, i4;
        java.lang.Object[] r2;
        java.lang.Object r3;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        r3 = r2[i2];

        i3 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r3);

        if i3 <= i0 goto label2;

        goto label4;

     label2:
        i4 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r3);

        if i4 >= i0 goto label3;

        goto label4;

     label3:
        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r3);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    void <init>(android.widget.SpellChecker, android.widget.SpellChecker$1)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        android.widget.SpellChecker$1 r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r2 := @parameter1: android.widget.SpellChecker$1;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void <init>(android.widget.SpellChecker)>(r1);

        return;
    }
}
