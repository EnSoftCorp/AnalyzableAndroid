public interface  android.app.admin.IDevicePolicyManager extends java.lang.Object implements android.os.IInterface
{

    public abstract void setPasswordQuality(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordQuality(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumLength(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumLength(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumUpperCase(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumUpperCase(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumLowerCase(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumLowerCase(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumLetters(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumLetters(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumNumeric(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumNumeric(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumSymbols(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumSymbols(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordMinimumNonLetter(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordMinimumNonLetter(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordHistoryLength(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getPasswordHistoryLength(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setPasswordExpirationTimeout(android.content.ComponentName, long, int) throws android.os.RemoteException;

    public abstract long getPasswordExpirationTimeout(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract long getPasswordExpiration(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract boolean isActivePasswordSufficient(int) throws android.os.RemoteException;

    public abstract int getCurrentFailedPasswordAttempts(int) throws android.os.RemoteException;

    public abstract void setMaximumFailedPasswordsForWipe(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getMaximumFailedPasswordsForWipe(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract boolean resetPassword(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void setMaximumTimeToLock(android.content.ComponentName, long, int) throws android.os.RemoteException;

    public abstract long getMaximumTimeToLock(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void lockNow() throws android.os.RemoteException;

    public abstract void wipeData(int, int) throws android.os.RemoteException;

    public abstract android.content.ComponentName setGlobalProxy(android.content.ComponentName, java.lang.String, java.lang.String, int) throws android.os.RemoteException;

    public abstract android.content.ComponentName getGlobalProxyAdmin(int) throws android.os.RemoteException;

    public abstract void setRecommendedGlobalProxy(android.content.ComponentName, android.net.ProxyInfo) throws android.os.RemoteException;

    public abstract int setStorageEncryption(android.content.ComponentName, boolean, int) throws android.os.RemoteException;

    public abstract boolean getStorageEncryption(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract int getStorageEncryptionStatus(int) throws android.os.RemoteException;

    public abstract void setCameraDisabled(android.content.ComponentName, boolean, int) throws android.os.RemoteException;

    public abstract boolean getCameraDisabled(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setScreenCaptureDisabled(android.content.ComponentName, int, boolean) throws android.os.RemoteException;

    public abstract boolean getScreenCaptureDisabled(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setKeyguardDisabledFeatures(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract int getKeyguardDisabledFeatures(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract void setActiveAdmin(android.content.ComponentName, boolean, int) throws android.os.RemoteException;

    public abstract boolean isAdminActive(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract java.util.List getActiveAdmins(int) throws android.os.RemoteException;

    public abstract boolean packageHasActiveAdmins(java.lang.String, int) throws android.os.RemoteException;

    public abstract void getRemoveWarning(android.content.ComponentName, android.os.RemoteCallback, int) throws android.os.RemoteException;

    public abstract void removeActiveAdmin(android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract boolean hasGrantedPolicy(android.content.ComponentName, int, int) throws android.os.RemoteException;

    public abstract void setActivePasswordState(int, int, int, int, int, int, int, int, int) throws android.os.RemoteException;

    public abstract void reportFailedPasswordAttempt(int) throws android.os.RemoteException;

    public abstract void reportSuccessfulPasswordAttempt(int) throws android.os.RemoteException;

    public abstract boolean setDeviceOwner(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract boolean isDeviceOwner(java.lang.String) throws android.os.RemoteException;

    public abstract java.lang.String getDeviceOwner() throws android.os.RemoteException;

    public abstract java.lang.String getDeviceOwnerName() throws android.os.RemoteException;

    public abstract void clearDeviceOwner(java.lang.String) throws android.os.RemoteException;

    public abstract boolean setProfileOwner(android.content.ComponentName, java.lang.String, int) throws android.os.RemoteException;

    public abstract android.content.ComponentName getProfileOwner(int) throws android.os.RemoteException;

    public abstract java.lang.String getProfileOwnerName(int) throws android.os.RemoteException;

    public abstract void setProfileEnabled(android.content.ComponentName) throws android.os.RemoteException;

    public abstract void setProfileName(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract void clearProfileOwner(android.content.ComponentName) throws android.os.RemoteException;

    public abstract boolean hasUserSetupCompleted() throws android.os.RemoteException;

    public abstract boolean installCaCert(android.content.ComponentName, byte[]) throws android.os.RemoteException;

    public abstract void uninstallCaCert(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract void enforceCanManageCaCerts(android.content.ComponentName) throws android.os.RemoteException;

    public abstract boolean installKeyPair(android.content.ComponentName, byte[], byte[], java.lang.String) throws android.os.RemoteException;

    public abstract void addPersistentPreferredActivity(android.content.ComponentName, android.content.IntentFilter, android.content.ComponentName) throws android.os.RemoteException;

    public abstract void clearPackagePersistentPreferredActivities(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract void setApplicationRestrictions(android.content.ComponentName, java.lang.String, android.os.Bundle) throws android.os.RemoteException;

    public abstract android.os.Bundle getApplicationRestrictions(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract void setRestrictionsProvider(android.content.ComponentName, android.content.ComponentName) throws android.os.RemoteException;

    public abstract android.content.ComponentName getRestrictionsProvider(int) throws android.os.RemoteException;

    public abstract void setUserRestriction(android.content.ComponentName, java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void addCrossProfileIntentFilter(android.content.ComponentName, android.content.IntentFilter, int) throws android.os.RemoteException;

    public abstract void clearCrossProfileIntentFilters(android.content.ComponentName) throws android.os.RemoteException;

    public abstract boolean setPermittedAccessibilityServices(android.content.ComponentName, java.util.List) throws android.os.RemoteException;

    public abstract java.util.List getPermittedAccessibilityServices(android.content.ComponentName) throws android.os.RemoteException;

    public abstract java.util.List getPermittedAccessibilityServicesForUser(int) throws android.os.RemoteException;

    public abstract boolean setPermittedInputMethods(android.content.ComponentName, java.util.List) throws android.os.RemoteException;

    public abstract java.util.List getPermittedInputMethods(android.content.ComponentName) throws android.os.RemoteException;

    public abstract java.util.List getPermittedInputMethodsForCurrentUser() throws android.os.RemoteException;

    public abstract boolean setApplicationHidden(android.content.ComponentName, java.lang.String, boolean) throws android.os.RemoteException;

    public abstract boolean isApplicationHidden(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract android.os.UserHandle createUser(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract android.os.UserHandle createAndInitializeUser(android.content.ComponentName, java.lang.String, java.lang.String, android.content.ComponentName, android.os.Bundle) throws android.os.RemoteException;

    public abstract boolean removeUser(android.content.ComponentName, android.os.UserHandle) throws android.os.RemoteException;

    public abstract boolean switchUser(android.content.ComponentName, android.os.UserHandle) throws android.os.RemoteException;

    public abstract void enableSystemApp(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract int enableSystemAppWithIntent(android.content.ComponentName, android.content.Intent) throws android.os.RemoteException;

    public abstract void setAccountManagementDisabled(android.content.ComponentName, java.lang.String, boolean) throws android.os.RemoteException;

    public abstract java.lang.String[] getAccountTypesWithManagementDisabled() throws android.os.RemoteException;

    public abstract java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int) throws android.os.RemoteException;

    public abstract void setLockTaskPackages(android.content.ComponentName, java.lang.String[]) throws android.os.RemoteException;

    public abstract java.lang.String[] getLockTaskPackages(android.content.ComponentName) throws android.os.RemoteException;

    public abstract boolean isLockTaskPermitted(java.lang.String) throws android.os.RemoteException;

    public abstract void setGlobalSetting(android.content.ComponentName, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void setSecureSetting(android.content.ComponentName, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void setMasterVolumeMuted(android.content.ComponentName, boolean) throws android.os.RemoteException;

    public abstract boolean isMasterVolumeMuted(android.content.ComponentName) throws android.os.RemoteException;

    public abstract void notifyLockTaskModeChanged(boolean, java.lang.String, int) throws android.os.RemoteException;

    public abstract void setUninstallBlocked(android.content.ComponentName, java.lang.String, boolean) throws android.os.RemoteException;

    public abstract boolean isUninstallBlocked(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract void setCrossProfileCallerIdDisabled(android.content.ComponentName, boolean) throws android.os.RemoteException;

    public abstract boolean getCrossProfileCallerIdDisabled(android.content.ComponentName) throws android.os.RemoteException;

    public abstract boolean getCrossProfileCallerIdDisabledForUser(int) throws android.os.RemoteException;

    public abstract void setTrustAgentFeaturesEnabled(android.content.ComponentName, android.content.ComponentName, java.util.List, int) throws android.os.RemoteException;

    public abstract java.util.List getTrustAgentFeaturesEnabled(android.content.ComponentName, android.content.ComponentName, int) throws android.os.RemoteException;

    public abstract boolean addCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract boolean removeCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String) throws android.os.RemoteException;

    public abstract java.util.List getCrossProfileWidgetProviders(android.content.ComponentName) throws android.os.RemoteException;

    public abstract void setAutoTimeRequired(android.content.ComponentName, int, boolean) throws android.os.RemoteException;

    public abstract boolean getAutoTimeRequired() throws android.os.RemoteException;
}
