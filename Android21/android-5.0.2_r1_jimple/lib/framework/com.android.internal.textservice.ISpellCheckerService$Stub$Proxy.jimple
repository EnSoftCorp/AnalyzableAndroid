class com.android.internal.textservice.ISpellCheckerService$Stub$Proxy extends java.lang.Object implements com.android.internal.textservice.ISpellCheckerService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.textservice.ISpellCheckerService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.textservice.ISpellCheckerService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.textservice.ISpellCheckerService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.textservice.ISpellCheckerService$Stub$Proxy;

        $r1 = r0.<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.textservice.ISpellCheckerService$Stub$Proxy r0;

        r0 := @this: com.android.internal.textservice.ISpellCheckerService$Stub$Proxy;

        return "com.android.internal.textservice.ISpellCheckerService";
    }

    public com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String, com.android.internal.textservice.ISpellCheckerSessionListener, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.textservice.ISpellCheckerService$Stub$Proxy r0;
        java.lang.String r1;
        com.android.internal.textservice.ISpellCheckerSessionListener r2;
        android.os.Bundle r3;
        android.os.Parcel r4, r5;
        com.android.internal.textservice.ISpellCheckerSession r6;
        java.lang.Throwable r7, $r11;
        android.os.IBinder $r8, $r9, $r10;

        r0 := @this: com.android.internal.textservice.ISpellCheckerService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.textservice.ISpellCheckerSessionListener;

        r3 := @parameter2: android.os.Bundle;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.textservice.ISpellCheckerService");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        if r2 == null goto label2;

        $r10 = interfaceinvoke r2.<com.android.internal.textservice.ISpellCheckerSessionListener: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r10 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        if r3 == null goto label4;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label5;

     label4:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r8 = r0.<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $r9 = virtualinvoke r5.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r6 = staticinvoke <com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession asInterface(android.os.IBinder)>($r9);

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r11 := @caughtexception;

        r7 = $r11;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r7;

     label9:
        return r6;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
