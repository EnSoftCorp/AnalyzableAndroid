public class android.service.voice.AlwaysOnHotwordDetector$EventPayload extends java.lang.Object
{
    private final boolean mTriggerAvailable;
    private final boolean mCaptureAvailable;
    private final int mCaptureSession;
    private final android.media.AudioFormat mAudioFormat;
    private final byte[] mData;

    private void <init>(boolean, boolean, android.media.AudioFormat, int, byte[])
    {
        android.service.voice.AlwaysOnHotwordDetector$EventPayload r0;
        boolean z0, z1;
        android.media.AudioFormat r1;
        int i0;
        byte[] r2;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector$EventPayload;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.media.AudioFormat;

        i0 := @parameter3: int;

        r2 := @parameter4: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: boolean mTriggerAvailable> = z0;

        r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: boolean mCaptureAvailable> = z1;

        r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: int mCaptureSession> = i0;

        r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: android.media.AudioFormat mAudioFormat> = r1;

        r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: byte[] mData> = r2;

        return;
    }

    public android.media.AudioFormat getCaptureAudioFormat()
    {
        android.service.voice.AlwaysOnHotwordDetector$EventPayload r0;
        android.media.AudioFormat $r1;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector$EventPayload;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: android.media.AudioFormat mAudioFormat>;

        return $r1;
    }

    public byte[] getTriggerAudio()
    {
        android.service.voice.AlwaysOnHotwordDetector$EventPayload r0;
        boolean $z0;
        byte[] $r1;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector$EventPayload;

        $z0 = r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: boolean mTriggerAvailable>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: byte[] mData>;

        return $r1;

     label1:
        return null;
    }

    public java.lang.Integer getCaptureSession()
    {
        android.service.voice.AlwaysOnHotwordDetector$EventPayload r0;
        boolean $z0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector$EventPayload;

        $z0 = r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: boolean mCaptureAvailable>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: int mCaptureSession>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    void <init>(boolean, boolean, android.media.AudioFormat, int, byte[], android.service.voice.AlwaysOnHotwordDetector$1)
    {
        android.service.voice.AlwaysOnHotwordDetector$EventPayload r0;
        boolean z0, z1;
        android.media.AudioFormat r1;
        int i0;
        byte[] r2;
        android.service.voice.AlwaysOnHotwordDetector$1 r3;

        r0 := @this: android.service.voice.AlwaysOnHotwordDetector$EventPayload;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: android.media.AudioFormat;

        i0 := @parameter3: int;

        r2 := @parameter4: byte[];

        r3 := @parameter5: android.service.voice.AlwaysOnHotwordDetector$1;

        specialinvoke r0.<android.service.voice.AlwaysOnHotwordDetector$EventPayload: void <init>(boolean,boolean,android.media.AudioFormat,int,byte[])>(z0, z1, r1, i0, r2);

        return;
    }
}
