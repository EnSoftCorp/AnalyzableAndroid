public class android.os.UserManager extends java.lang.Object
{
    private static java.lang.String TAG;
    private final android.os.IUserManager mService;
    private final android.content.Context mContext;
    public static final java.lang.String DISALLOW_MODIFY_ACCOUNTS;
    public static final java.lang.String DISALLOW_CONFIG_WIFI;
    public static final java.lang.String DISALLOW_INSTALL_APPS;
    public static final java.lang.String DISALLOW_UNINSTALL_APPS;
    public static final java.lang.String DISALLOW_SHARE_LOCATION;
    public static final java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES;
    public static final java.lang.String DISALLOW_CONFIG_BLUETOOTH;
    public static final java.lang.String DISALLOW_USB_FILE_TRANSFER;
    public static final java.lang.String DISALLOW_CONFIG_CREDENTIALS;
    public static final java.lang.String DISALLOW_REMOVE_USER;
    public static final java.lang.String DISALLOW_DEBUGGING_FEATURES;
    public static final java.lang.String DISALLOW_CONFIG_VPN;
    public static final java.lang.String DISALLOW_CONFIG_TETHERING;
    public static final java.lang.String DISALLOW_FACTORY_RESET;
    public static final java.lang.String DISALLOW_ADD_USER;
    public static final java.lang.String ENSURE_VERIFY_APPS;
    public static final java.lang.String DISALLOW_CONFIG_CELL_BROADCASTS;
    public static final java.lang.String DISALLOW_CONFIG_MOBILE_NETWORKS;
    public static final java.lang.String DISALLOW_APPS_CONTROL;
    public static final java.lang.String DISALLOW_MOUNT_PHYSICAL_MEDIA;
    public static final java.lang.String DISALLOW_UNMUTE_MICROPHONE;
    public static final java.lang.String DISALLOW_ADJUST_VOLUME;
    public static final java.lang.String DISALLOW_OUTGOING_CALLS;
    public static final java.lang.String DISALLOW_SMS;
    public static final java.lang.String DISALLOW_CREATE_WINDOWS;
    public static final java.lang.String DISALLOW_CROSS_PROFILE_COPY_PASTE;
    public static final java.lang.String DISALLOW_OUTGOING_BEAM;
    public static final int PIN_VERIFICATION_FAILED_INCORRECT;
    public static final int PIN_VERIFICATION_FAILED_NOT_SET;
    public static final int PIN_VERIFICATION_SUCCESS;
    private static android.os.UserManager sInstance;

    public static synchronized android.os.UserManager get(android.content.Context)
    {
        android.content.Context r0;
        android.os.UserManager $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <android.os.UserManager: android.os.UserManager sInstance>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r4 = (android.os.UserManager) $r3;

        <android.os.UserManager: android.os.UserManager sInstance> = $r4;

     label1:
        $r2 = <android.os.UserManager: android.os.UserManager sInstance>;

        return $r2;
    }

    public void <init>(android.content.Context, android.os.IUserManager)
    {
        android.os.UserManager r0;
        android.content.Context r1;
        android.os.IUserManager r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IUserManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.UserManager: android.os.IUserManager mService> = r2;

        r0.<android.os.UserManager: android.content.Context mContext> = r1;

        return;
    }

    public static boolean supportsMultipleUsers()
    {
        int $i0;
        android.content.res.Resources $r0;
        boolean $z0, $z1, $z2;

        $i0 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if $i0 <= 1 goto label1;

        $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r0.<android.content.res.Resources: boolean getBoolean(int)>(17956957);

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("fw.show_multiuserui", $z0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int getUserHandle()
    {
        android.os.UserManager r0;
        int $i0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        return $i0;
    }

    public java.lang.String getUserName()
    {
        android.os.UserManager r0;
        android.os.RemoteException r1, $r5;
        android.os.IUserManager $r2;
        int $i0;
        android.content.pm.UserInfo $r3;
        java.lang.String $r4, $r6;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r0.<android.os.UserManager: int getUserHandle()>();

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        $r4 = $r3.<android.content.pm.UserInfo: java.lang.String name>;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not get user name", r1);

        return "";

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserAGoat()
    {
        android.os.UserManager r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $r1 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r2.<android.content.pm.PackageManager: boolean isPackageAvailable(java.lang.String)>("com.coffeestainstudios.goatsimulator");

        return $z0;
    }

    public boolean isLinkedUser()
    {
        android.os.UserManager r0;
        android.os.RemoteException r1, $r3;
        android.os.IUserManager $r2;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean isRestricted()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Could not check if user is limited ", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isGuestUser()
    {
        android.os.UserManager r0;
        android.content.pm.UserInfo r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isGuest()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isManagedProfile()
    {
        android.os.UserManager r0;
        android.content.pm.UserInfo r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r1 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>($i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.pm.UserInfo: boolean isManagedProfile()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isUserRunning(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        android.app.IActivityManager $r3;
        int $i0;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = interfaceinvoke $r3.<android.app.IActivityManager: boolean isUserRunning(int,boolean)>($i0, 0);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isUserRunningOrStopping(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        android.app.IActivityManager $r3;
        int $i0;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

     label1:
        $r3 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $z0 = interfaceinvoke $r3.<android.app.IActivityManager: boolean isUserRunning(int,boolean)>($i0, 1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        android.content.pm.UserInfo $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get user info", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getUserRestrictions()
    {
        android.os.UserManager r0;
        android.os.UserHandle $r1;
        android.os.Bundle $r2;

        r0 := @this: android.os.UserManager;

        $r1 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r2 = virtualinvoke r0.<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>($r1);

        return $r2;
    }

    public android.os.Bundle getUserRestrictions(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        android.os.RemoteException r2, $r5;
        android.os.IUserManager $r3;
        int $i0;
        android.os.Bundle $r4, $r7;
        java.lang.String $r6;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $r4 = interfaceinvoke $r3.<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>($i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not get user restrictions", r2);

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        return $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserRestrictions(android.os.Bundle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        android.os.UserHandle $r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.Bundle;

        $r2 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        virtualinvoke r0.<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>(r1, $r2);

        return;
    }

    public void setUserRestrictions(android.os.Bundle, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        android.os.UserHandle r2;
        android.os.RemoteException r3, $r5;
        android.os.IUserManager $r4;
        int $i0;
        java.lang.String $r6;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.os.UserHandle;

     label1:
        $r4 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<android.os.IUserManager: void setUserRestrictions(android.os.Bundle,int)>(r1, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not set user restrictions", r3);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserRestriction(java.lang.String, boolean)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        boolean z0;
        android.os.Bundle r2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<android.os.UserManager: android.os.Bundle getUserRestrictions()>();

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r1, z0);

        virtualinvoke r0.<android.os.UserManager: void setUserRestrictions(android.os.Bundle)>(r2);

        return;
    }

    public void setUserRestriction(java.lang.String, boolean, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        boolean z0;
        android.os.UserHandle r2;
        android.os.Bundle r3;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.UserHandle;

        r3 = virtualinvoke r0.<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>(r2);

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r1, z0);

        virtualinvoke r0.<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>(r3, r2);

        return;
    }

    public boolean hasUserRestriction(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1;
        android.os.UserHandle $r2;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $z0 = virtualinvoke r0.<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>(r1, $r2);

        return $z0;
    }

    public boolean hasUserRestriction(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r6;
        android.os.UserHandle r2;
        android.os.RemoteException r3, $r5;
        android.os.IUserManager $r4;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

     label1:
        $r4 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $z0 = interfaceinvoke $r4.<android.os.IUserManager: boolean hasUserRestriction(java.lang.String,int)>(r1, $i0);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not check user restrictions", r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getSerialNumberForUser(android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.os.UserHandle r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.UserHandle;

        $i0 = virtualinvoke r1.<android.os.UserHandle: int getIdentifier()>();

        $i1 = virtualinvoke r0.<android.os.UserManager: int getUserSerialNumber(int)>($i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public android.os.UserHandle getUserForSerialNumber(long)
    {
        android.os.UserManager r0;
        long l0;
        int i1, $i2;
        android.os.UserHandle $r1;

        r0 := @this: android.os.UserManager;

        l0 := @parameter0: long;

        $i2 = (int) l0;

        i1 = virtualinvoke r0.<android.os.UserManager: int getUserHandle(int)>($i2);

        if i1 < 0 goto label1;

        $r1 = new android.os.UserHandle;

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>(i1);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r6;
        int i0;
        android.os.RemoteException r2, $r5;
        android.os.IUserManager $r3;
        android.content.pm.UserInfo $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r4 = interfaceinvoke $r3.<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>(r1, i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not create a user", r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createGuest(android.content.Context, java.lang.String)
    {
        android.os.UserManager r0;
        android.content.Context r1;
        java.lang.String r2, $r9;
        android.content.pm.UserInfo r3;
        android.os.Bundle r4;
        android.content.ContentResolver $r5;
        int $i0, $i1;
        android.os.IUserManager $r6, $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>(r2, 4);

        if r3 == null goto label4;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = r3.<android.content.pm.UserInfo: int id>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r5, "skip_first_use_hints", "1", $i0);

     label1:
        $r6 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r4 = interfaceinvoke $r6.<android.os.IUserManager: android.os.Bundle getDefaultGuestRestrictions()>();

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_sms", 1);

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_install_unknown_sources", 1);

        $r7 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = r3.<android.content.pm.UserInfo: int id>;

        interfaceinvoke $r7.<android.os.IUserManager: void setUserRestrictions(android.os.Bundle,int)>(r4, $i1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, "Could not update guest restrictions");

     label4:
        return r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo createSecondaryUser(java.lang.String, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r8;
        int i0, $i1, $i2;
        android.content.pm.UserInfo r2;
        android.os.Bundle r3;
        android.os.IUserManager $r4, $r5, $r6;
        android.os.RemoteException $r7, r9;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        r2 = interfaceinvoke $r4.<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>(r1, i0);

        if r2 != null goto label3;

     label2:
        return null;

     label3:
        $r5 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = r2.<android.content.pm.UserInfo: int id>;

        r3 = interfaceinvoke $r5.<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>($i1);

        staticinvoke <android.os.UserManager: void addDefaultUserRestrictions(android.os.Bundle)>(r3);

        $r6 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i2 = r2.<android.content.pm.UserInfo: int id>;

        interfaceinvoke $r6.<android.os.IUserManager: void setUserRestrictions(android.os.Bundle,int)>(r3, $i2);

     label4:
        return r2;

     label5:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Could not create a user", r9);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private static void addDefaultUserRestrictions(android.os.Bundle)
    {
        android.os.Bundle r0;

        r0 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_outgoing_calls", 1);

        virtualinvoke r0.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("no_sms", 1);

        return;
    }

    public android.content.pm.UserInfo createProfileForUser(java.lang.String, int, int)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r6;
        int i0, i1;
        android.os.RemoteException r2, $r5;
        android.os.IUserManager $r3;
        android.content.pm.UserInfo $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r4 = interfaceinvoke $r3.<android.os.IUserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not create a user", r2);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean markGuestForDeletion(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.os.IUserManager $r2;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean markGuestForDeletion(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Could not mark guest for deletion", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserEnabled(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.os.IUserManager $r2;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void setUserEnabled(int)>(i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Could not enable the profile", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserCount()
    {
        android.os.UserManager r0;
        java.util.List r1;
        int $i0;

        r0 := @this: android.os.UserManager;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers()>();

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        goto label2;

     label1:
        $i0 = 1;

     label2:
        return $i0;
    }

    public java.util.List getUsers()
    {
        android.os.UserManager r0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        java.util.List $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: java.util.List getUsers(boolean)>(0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get user list", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean canAddMoreUsers()
    {
        android.os.UserManager r0;
        java.util.List r1;
        int i0, i1, i2, $i3;
        android.content.pm.UserInfo r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        r0 := @this: android.os.UserManager;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (android.content.pm.UserInfo) $r3;

        $z1 = virtualinvoke r2.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z1 != 0 goto label2;

        i1 = i1 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if i1 >= $i3 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public java.util.List getProfiles(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        java.util.List $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>(i0, 0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get user list", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getUserProfiles()
    {
        android.os.UserManager r0;
        java.util.ArrayList r1, $r6, $r7;
        android.os.RemoteException r3, $r11;
        android.content.pm.UserInfo r4;
        android.os.UserHandle r5, $r10;
        android.os.IUserManager $r8;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.String $r12;
        java.util.List r13;
        java.util.Iterator r14;

        r0 := @this: android.os.UserManager;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label1:
        $r8 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r13 = interfaceinvoke $r8.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>($i0, 1);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Could not get user list", r3);

        return null;

     label4:
        r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.UserInfo) $r9;

        $r10 = new android.os.UserHandle;

        $i1 = r4.<android.content.pm.UserInfo: int id>;

        specialinvoke $r10.<android.os.UserHandle: void <init>(int)>($i1);

        r5 = $r10;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label5;

     label6:
        return r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.UserInfo getProfileParent(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        android.content.pm.UserInfo $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.content.pm.UserInfo getProfileParent(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get profile parent", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable, android.os.UserHandle)
    {
        android.os.UserManager r0;
        android.graphics.drawable.Drawable r1, $r5;
        android.os.UserHandle r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>(r1, r2);

        return $r5;
    }

    public android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int)
    {
        android.os.UserManager r0;
        android.graphics.drawable.Drawable r1, $r6;
        android.os.UserHandle r2;
        android.graphics.Rect r3;
        int i0;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.os.UserHandle;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        $r4 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>(r1, r2, r3, i0);

        return $r6;
    }

    public java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.CharSequence r1, $r5;
        android.os.UserHandle r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.os.UserHandle;

        $r3 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>(r1, r2);

        return $r5;
    }

    public java.util.List getUsers(boolean)
    {
        android.os.UserManager r0;
        boolean z0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        java.util.List $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: java.util.List getUsers(boolean)>(z0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get user list", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean removeUser(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r3;
        android.os.IUserManager $r2;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean removeUser(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Could not remove user ", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserName(int, java.lang.String)
    {
        android.os.UserManager r0;
        int i0;
        java.lang.String r1, $r5;
        android.os.RemoteException r2, $r4;
        android.os.IUserManager $r3;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r3.<android.os.IUserManager: void setUserName(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not set the user name ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        android.os.UserManager r0;
        int i0;
        android.graphics.Bitmap r1;
        android.os.RemoteException r2, $r4;
        android.os.IUserManager $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r3.<android.os.IUserManager: void setUserIcon(int,android.graphics.Bitmap)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not set the user icon ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.Bitmap getUserIcon(int)
    {
        android.os.UserManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.os.IUserManager $r2;
        android.graphics.Bitmap $r3;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.graphics.Bitmap getUserIcon(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not get the user icon ", r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static int getMaxSupportedUsers()
    {
        java.lang.String $r0;
        boolean $z0, $z1;
        android.content.res.Resources $r1;
        int $i0, $i1;

        $r0 = <android.os.Build: java.lang.String ID>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("JVP");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(17694830);

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("fw.max_users", $i0);

        return $i1;
    }

    public boolean isUserSwitcherEnabled()
    {
        android.os.UserManager r0;
        java.util.List r1;
        int i0, $i1;
        java.util.Iterator r2;
        android.content.pm.UserInfo r3;
        boolean $z0, $z1, $z2, $z3, z4;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.lang.Object $r6;

        r0 := @this: android.os.UserManager;

        r1 = virtualinvoke r0.<android.os.UserManager: java.util.List getUsers(boolean)>(1);

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.UserInfo) $r6;

        $z3 = virtualinvoke r3.<android.content.pm.UserInfo: boolean supportsSwitchTo()>();

        if $z3 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        goto label2;

     label4:
        $r4 = r0.<android.os.UserManager: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r5, "guest_user_enabled", 0);

        if $i1 != 1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        z4 = $z2;

        if i0 > 1 goto label7;

        if z4 == 0 goto label8;

     label7:
        $z1 = 1;

        goto label9;

     label8:
        $z1 = 0;

     label9:
        return $z1;
    }

    public int getUserSerialNumber(int)
    {
        android.os.UserManager r0;
        int i0, $i1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserSerialNumber(int)>(i0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get serial number for user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r8);

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getUserHandle(int)
    {
        android.os.UserManager r0;
        int i0, $i1;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: android.os.UserManager;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i1 = interfaceinvoke $r2.<android.os.IUserManager: int getUserHandle(int)>(i0);

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get userHandle for user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r8);

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r7, $r10;
        android.os.IUserManager $r3;
        android.os.Bundle $r4;
        android.os.RemoteException $r5;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r4 = interfaceinvoke $r3.<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r7 = <android.os.UserManager: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get application restrictions for package ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r10);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r8, $r11;
        android.os.UserHandle r2;
        android.os.IUserManager $r4;
        int $i0, $i1;
        android.os.Bundle $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

     label1:
        $r4 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r5 = interfaceinvoke $r4.<android.os.IUserManager: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(r1, $i0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r8 = <android.os.UserManager: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get application restrictions for user ");

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, android.os.UserHandle)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r8, $r11;
        android.os.Bundle r2;
        android.os.UserHandle r3;
        android.os.IUserManager $r5;
        int $i0, $i1;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.UserHandle;

     label1:
        $r5 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r5.<android.os.IUserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>(r1, r2, $i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = <android.os.UserManager: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set application restrictions for user ");

        $i1 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setRestrictionsChallenge(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r5;
        android.os.IUserManager $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r3.<android.os.IUserManager: boolean setRestrictionsChallenge(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Could not change restrictions pin");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkRestrictionsChallenge(java.lang.String)
    {
        android.os.UserManager r0;
        java.lang.String r1, $r5;
        android.os.IUserManager $r3;
        int $i0;
        android.os.RemoteException $r4;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $i0 = interfaceinvoke $r3.<android.os.IUserManager: int checkRestrictionsChallenge(java.lang.String)>(r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Could not check restrictions pin");

        return -3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasRestrictionsChallenge()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        boolean $z0;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $z0 = interfaceinvoke $r2.<android.os.IUserManager: boolean hasRestrictionsChallenge()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, "Could not change restrictions pin");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeRestrictions()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.RemoteException $r3;
        java.lang.String $r4;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r2.<android.os.IUserManager: void removeRestrictions()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, "Could not change restrictions pin");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDefaultGuestRestrictions(android.os.Bundle)
    {
        android.os.UserManager r0;
        android.os.Bundle r1;
        android.os.IUserManager $r3;
        android.os.RemoteException $r4;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

        r1 := @parameter0: android.os.Bundle;

     label1:
        $r3 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        interfaceinvoke $r3.<android.os.IUserManager: void setDefaultGuestRestrictions(android.os.Bundle)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Could not set guest restrictions");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.os.Bundle getDefaultGuestRestrictions()
    {
        android.os.UserManager r0;
        android.os.IUserManager $r2;
        android.os.Bundle $r3, $r6;
        android.os.RemoteException $r4;
        java.lang.String $r5;

        r0 := @this: android.os.UserManager;

     label1:
        $r2 = r0.<android.os.UserManager: android.os.IUserManager mService>;

        $r3 = interfaceinvoke $r2.<android.os.IUserManager: android.os.Bundle getDefaultGuestRestrictions()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = <android.os.UserManager: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Could not set guest restrictions");

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        return $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <android.os.UserManager: int PIN_VERIFICATION_SUCCESS> = -1;

        <android.os.UserManager: int PIN_VERIFICATION_FAILED_NOT_SET> = -2;

        <android.os.UserManager: int PIN_VERIFICATION_FAILED_INCORRECT> = -3;

        <android.os.UserManager: java.lang.String DISALLOW_OUTGOING_BEAM> = "no_outgoing_beam";

        <android.os.UserManager: java.lang.String DISALLOW_CROSS_PROFILE_COPY_PASTE> = "no_cross_profile_copy_paste";

        <android.os.UserManager: java.lang.String DISALLOW_CREATE_WINDOWS> = "no_create_windows";

        <android.os.UserManager: java.lang.String DISALLOW_SMS> = "no_sms";

        <android.os.UserManager: java.lang.String DISALLOW_OUTGOING_CALLS> = "no_outgoing_calls";

        <android.os.UserManager: java.lang.String DISALLOW_ADJUST_VOLUME> = "no_adjust_volume";

        <android.os.UserManager: java.lang.String DISALLOW_UNMUTE_MICROPHONE> = "no_unmute_microphone";

        <android.os.UserManager: java.lang.String DISALLOW_MOUNT_PHYSICAL_MEDIA> = "no_physical_media";

        <android.os.UserManager: java.lang.String DISALLOW_APPS_CONTROL> = "no_control_apps";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_MOBILE_NETWORKS> = "no_config_mobile_networks";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_CELL_BROADCASTS> = "no_config_cell_broadcasts";

        <android.os.UserManager: java.lang.String ENSURE_VERIFY_APPS> = "ensure_verify_apps";

        <android.os.UserManager: java.lang.String DISALLOW_ADD_USER> = "no_add_user";

        <android.os.UserManager: java.lang.String DISALLOW_FACTORY_RESET> = "no_factory_reset";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_TETHERING> = "no_config_tethering";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_VPN> = "no_config_vpn";

        <android.os.UserManager: java.lang.String DISALLOW_DEBUGGING_FEATURES> = "no_debugging_features";

        <android.os.UserManager: java.lang.String DISALLOW_REMOVE_USER> = "no_remove_user";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_CREDENTIALS> = "no_config_credentials";

        <android.os.UserManager: java.lang.String DISALLOW_USB_FILE_TRANSFER> = "no_usb_file_transfer";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_BLUETOOTH> = "no_config_bluetooth";

        <android.os.UserManager: java.lang.String DISALLOW_INSTALL_UNKNOWN_SOURCES> = "no_install_unknown_sources";

        <android.os.UserManager: java.lang.String DISALLOW_SHARE_LOCATION> = "no_share_location";

        <android.os.UserManager: java.lang.String DISALLOW_UNINSTALL_APPS> = "no_uninstall_apps";

        <android.os.UserManager: java.lang.String DISALLOW_INSTALL_APPS> = "no_install_apps";

        <android.os.UserManager: java.lang.String DISALLOW_CONFIG_WIFI> = "no_config_wifi";

        <android.os.UserManager: java.lang.String DISALLOW_MODIFY_ACCOUNTS> = "no_modify_accounts";

        <android.os.UserManager: java.lang.String TAG> = "UserManager";

        <android.os.UserManager: android.os.UserManager sInstance> = null;

        return;
    }
}
