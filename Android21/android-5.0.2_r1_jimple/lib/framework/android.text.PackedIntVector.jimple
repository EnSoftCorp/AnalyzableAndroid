class android.text.PackedIntVector extends java.lang.Object
{
    private final int mColumns;
    private int mRows;
    private int mRowGapStart;
    private int mRowGapLength;
    private int[] mValues;
    private int[] mValueGap;

    public void <init>(int)
    {
        android.text.PackedIntVector r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.PackedIntVector: int mColumns> = i0;

        r0.<android.text.PackedIntVector: int mRows> = 0;

        r0.<android.text.PackedIntVector: int mRowGapStart> = 0;

        $i1 = r0.<android.text.PackedIntVector: int mRows>;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i1;

        r0.<android.text.PackedIntVector: int[] mValues> = null;

        $i2 = 2 * i0;

        $r1 = newarray (int)[$i2];

        r0.<android.text.PackedIntVector: int[] mValueGap> = $r1;

        return;
    }

    public int getValue(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] r1, $r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        $i4 = i0 | i1;

        if $i4 < 0 goto label1;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 >= $i5 goto label1;

        if i1 < i2 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i6 goto label3;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i11;

     label3:
        $r8 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i7 = i0 * i2;

        $i8 = $i7 + i1;

        i3 = $r8[$i8];

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i10 = r1[i1];

        if i0 < $i10 goto label4;

        $i9 = i1 + i2;

        $i12 = r1[$i9];

        i3 = i3 + $i12;

     label4:
        return i3;
    }

    public void setValue(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] r1, $r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 | i1;

        if $i3 < 0 goto label1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 >= $i4 goto label1;

        $i5 = r0.<android.text.PackedIntVector: int mColumns>;

        if i1 < $i5 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i6 goto label3;

        $i13 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i13;

     label3:
        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i7 = r1[i1];

        if i0 < $i7 goto label4;

        $i12 = r0.<android.text.PackedIntVector: int mColumns>;

        $i11 = i1 + $i12;

        $i14 = r1[$i11];

        i2 = i2 - $i14;

     label4:
        $r8 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i9 = r0.<android.text.PackedIntVector: int mColumns>;

        $i8 = i0 * $i9;

        $i10 = $i8 + i1;

        $r8[$i10] = i2;

        return;
    }

    private void setValueInternal(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] r1, $r2;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i3 goto label1;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i11;

     label1:
        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i4 = r1[i1];

        if i0 < $i4 goto label2;

        $i8 = r0.<android.text.PackedIntVector: int mColumns>;

        $i9 = i1 + $i8;

        $i10 = r1[$i9];

        i2 = i2 - $i10;

     label2:
        $r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i5 = r0.<android.text.PackedIntVector: int mColumns>;

        $i6 = i0 * $i5;

        $i7 = $i6 + i1;

        $r2[$i7] = i2;

        return;
    }

    public void adjustValuesBelow(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        int[] $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 | i1;

        if $i3 < 0 goto label1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 > $i4 goto label1;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if i1 < $i5 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i6 goto label3;

        $i10 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i10;

     label3:
        specialinvoke r0.<android.text.PackedIntVector: void moveValueGapTo(int,int)>(i1, i0);

        $r7 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i7 = r0.<android.text.PackedIntVector: int mColumns>;

        $i8 = i1 + $i7;

        $i9 = $r7[$i8];

        $i11 = $i9 + i2;

        $r7[$i8] = $i11;

        return;
    }

    public void insertAt(int, int[])
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        int[] r1;
        java.lang.IndexOutOfBoundsException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r11;
        java.lang.String $r6, $r10;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 <= $i2 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("row ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        if r1 == null goto label3;

        $i12 = lengthof r1;

        $i11 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if $i12 >= $i11 goto label3;

        $r8 = new java.lang.IndexOutOfBoundsException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value count ");

        $i13 = lengthof r1;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label3:
        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>(i0);

        $i3 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        if $i3 != 0 goto label4;

        specialinvoke r0.<android.text.PackedIntVector: void growBuffer()>();

     label4:
        $i4 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i5 = $i4 + 1;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i5;

        $i6 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i7 = $i6 - 1;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i7;

        if r1 != null goto label7;

        $i9 = r0.<android.text.PackedIntVector: int mColumns>;

        i1 = $i9 - 1;

     label5:
        if i1 < 0 goto label6;

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i1, 0);

        i1 = i1 + -1;

        goto label5;

     label6:
        goto label9;

     label7:
        $i8 = r0.<android.text.PackedIntVector: int mColumns>;

        i14 = $i8 - 1;

     label8:
        if i14 < 0 goto label9;

        $i10 = r1[i14];

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i14, $i10);

        i14 = i14 + -1;

        goto label8;

     label9:
        return;
    }

    public void deleteAt(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i3 = i0 + i1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if $i3 <= $i4 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $i5 = i0 + i1;

        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>($i5);

        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i7 = $i6 - i1;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i7;

        $i8 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i9 = $i8 + i1;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i9;

        return;
    }

    public int size()
    {
        android.text.PackedIntVector r0;
        int $i0, $i1, $i2;

        r0 := @this: android.text.PackedIntVector;

        $i1 = r0.<android.text.PackedIntVector: int mRows>;

        $i0 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int width()
    {
        android.text.PackedIntVector r0;
        int $i0;

        r0 := @this: android.text.PackedIntVector;

        $i0 = r0.<android.text.PackedIntVector: int mColumns>;

        return $i0;
    }

    private final void growBuffer()
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        int[] r1, r2, $r3, $r4, $r5;

        r0 := @this: android.text.PackedIntVector;

        i0 = r0.<android.text.PackedIntVector: int mColumns>;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        $i6 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int growSize(int)>($i5);

        $i7 = $i6 * i0;

        r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i7);

        $i8 = lengthof r1;

        i1 = $i8 / i0;

        r2 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i2 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i11 = r0.<android.text.PackedIntVector: int mRows>;

        $i9 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i10 = i2 + $i9;

        i3 = $i11 - $i10;

        $r3 = r0.<android.text.PackedIntVector: int[] mValues>;

        if $r3 == null goto label1;

        $r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i21 = i0 * i2;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r4, 0, r1, 0, $i21);

        $r5 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i23 = r0.<android.text.PackedIntVector: int mRows>;

        $i25 = $i23 - i3;

        $i26 = $i25 * i0;

        $i24 = i1 - i3;

        $i28 = $i24 * i0;

        $i27 = i3 * i0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r5, $i26, r1, $i28, $i27);

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        $i15 = r2[i4];

        if $i15 < i2 goto label3;

        $i20 = r2[i4];

        $i18 = r0.<android.text.PackedIntVector: int mRows>;

        $i17 = i1 - $i18;

        $i19 = $i20 + $i17;

        r2[i4] = $i19;

        $i22 = r2[i4];

        if $i22 >= i2 goto label3;

        r2[i4] = i2;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $i13 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i12 = r0.<android.text.PackedIntVector: int mRows>;

        $i14 = i1 - $i12;

        $i16 = $i13 + $i14;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i16;

        r0.<android.text.PackedIntVector: int mRows> = i1;

        r0.<android.text.PackedIntVector: int[] mValues> = r1;

        return;
    }

    private final void moveValueGapTo(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        int[] r1, r2;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        $i4 = r1[i0];

        if i1 != $i4 goto label1;

        return;

     label1:
        $i5 = r1[i0];

        if i1 <= $i5 goto label4;

        i3 = r1[i0];

     label2:
        if i3 >= i1 goto label3;

        $i14 = i3 * i2;

        $i13 = $i14 + i0;

        $i18 = r2[$i13];

        $i16 = i0 + i2;

        $i15 = r1[$i16];

        $i17 = $i18 + $i15;

        r2[$i13] = $i17;

        i3 = i3 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        i19 = i1;

     label5:
        $i6 = r1[i0];

        if i19 >= $i6 goto label6;

        $i7 = i19 * i2;

        $i8 = $i7 + i0;

        $i11 = r2[$i8];

        $i9 = i0 + i2;

        $i10 = r1[$i9];

        $i12 = $i11 - $i10;

        r2[$i8] = $i12;

        i19 = i19 + 1;

        goto label5;

     label6:
        r1[i0] = i1;

        return;
    }

    private final void moveRowGapTo(int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, i50, i51, i52;
        int[] r1, r2, r3, r4;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        $i8 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 != $i8 goto label01;

        return;

     label01:
        $i9 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 <= $i9 goto label08;

        $i25 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i32 = i0 + $i25;

        $i27 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i28 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i31 = $i27 + $i28;

        i1 = $i32 - $i31;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i30 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i29 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i3 = $i30 + $i29;

        i4 = i3;

     label02:
        $i35 = i3 + i1;

        if i4 >= $i35 goto label07;

        $i33 = i4 - i3;

        $i36 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        i5 = $i33 + $i36;

        i6 = 0;

     label03:
        if i6 >= i2 goto label06;

        $i34 = i4 * i2;

        $i39 = $i34 + i6;

        i7 = r2[$i39];

        $i40 = r1[i6];

        if i4 < $i40 goto label04;

        $i42 = i6 + i2;

        $i45 = r1[$i42];

        i7 = i7 + $i45;

     label04:
        $i37 = r1[i6];

        if i5 < $i37 goto label05;

        $i44 = i6 + i2;

        $i41 = r1[$i44];

        i7 = i7 - $i41;

     label05:
        $i38 = i5 * i2;

        $i43 = $i38 + i6;

        r2[$i43] = i7;

        i6 = i6 + 1;

        goto label03;

     label06:
        i4 = i4 + 1;

        goto label02;

     label07:
        goto label14;

     label08:
        $i10 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        i46 = $i10 - i0;

        i47 = r0.<android.text.PackedIntVector: int mColumns>;

        r3 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i12 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i48 = $i12 + $i11;

        $i14 = i0 + i46;

        i49 = $i14 - 1;

     label09:
        if i49 < i0 goto label14;

        $i13 = i49 - i0;

        $i16 = $i13 + i48;

        i50 = $i16 - i46;

        i51 = 0;

     label10:
        if i51 >= i47 goto label13;

        $i15 = i49 * i47;

        $i18 = $i15 + i51;

        i52 = r4[$i18];

        $i17 = r3[i51];

        if i49 < $i17 goto label11;

        $i23 = i51 + i47;

        $i26 = r3[$i23];

        i52 = i52 + $i26;

     label11:
        $i20 = r3[i51];

        if i50 < $i20 goto label12;

        $i21 = i51 + i47;

        $i24 = r3[$i21];

        i52 = i52 - $i24;

     label12:
        $i19 = i50 * i47;

        $i22 = $i19 + i51;

        r4[$i22] = i52;

        i51 = i51 + 1;

        goto label10;

     label13:
        i49 = i49 + -1;

        goto label09;

     label14:
        r0.<android.text.PackedIntVector: int mRowGapStart> = i0;

        return;
    }
}
