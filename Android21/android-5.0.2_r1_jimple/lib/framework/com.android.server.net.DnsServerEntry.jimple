class com.android.server.net.DnsServerEntry extends java.lang.Object implements java.lang.Comparable
{
    public final java.net.InetAddress address;
    public long expiry;

    public void <init>(java.net.InetAddress, long) throws java.lang.IllegalArgumentException
    {
        com.android.server.net.DnsServerEntry r0;
        java.net.InetAddress r1;
        long l0;

        r0 := @this: com.android.server.net.DnsServerEntry;

        r1 := @parameter0: java.net.InetAddress;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.net.DnsServerEntry: java.net.InetAddress address> = r1;

        r0.<com.android.server.net.DnsServerEntry: long expiry> = l0;

        return;
    }

    public int compareTo(com.android.server.net.DnsServerEntry)
    {
        com.android.server.net.DnsServerEntry r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @this: com.android.server.net.DnsServerEntry;

        r1 := @parameter0: com.android.server.net.DnsServerEntry;

        $l1 = r1.<com.android.server.net.DnsServerEntry: long expiry>;

        $l0 = r0.<com.android.server.net.DnsServerEntry: long expiry>;

        $i2 = staticinvoke <java.lang.Long: int compare(long,long)>($l1, $l0);

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.android.server.net.DnsServerEntry r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.android.server.net.DnsServerEntry;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.server.net.DnsServerEntry) r1;

        $i0 = virtualinvoke r0.<com.android.server.net.DnsServerEntry: int compareTo(com.android.server.net.DnsServerEntry)>($r2);

        return $i0;
    }
}
