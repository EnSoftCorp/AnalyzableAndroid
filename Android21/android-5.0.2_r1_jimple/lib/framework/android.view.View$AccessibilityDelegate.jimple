public class android.view.View$AccessibilityDelegate extends java.lang.Object
{

    public void <init>()
    {
        android.view.View$AccessibilityDelegate r0;

        r0 := @this: android.view.View$AccessibilityDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void sendAccessibilityEvent(android.view.View, int)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r1.<android.view.View: void sendAccessibilityEventInternal(int)>(i0);

        return;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        int i0;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i0, r2);

        return $z0;
    }

    public void sendAccessibilityEventUnchecked(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r1.<android.view.View: void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        boolean $z0;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r1.<android.view.View: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r2);

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r1.<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r1.<android.view.View: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeInfo r2;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r1.<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r2);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.view.accessibility.AccessibilityEvent r3;
        boolean $z0;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r1.<android.view.ViewGroup: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>(r2, r3);

        return $z0;
    }

    public android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        return null;
    }

    public android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(android.view.View)
    {
        android.view.View$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: android.view.View$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoInternal()>();

        return $r2;
    }
}
