public class android.hardware.camera2.legacy.LegacyFocusStateMapper extends java.lang.Object
{
    private static java.lang.String TAG;
    private static final boolean VERBOSE;
    private final android.hardware.Camera mCamera;
    private int mAfStatePrevious;
    private java.lang.String mAfModePrevious;
    private final java.lang.Object mLock;
    private int mAfRun;
    private int mAfState;

    public void <init>(android.hardware.Camera)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        android.hardware.Camera r1, $r4;
        java.lang.Object $r2, $r3;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r1 := @parameter0: android.hardware.Camera;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious> = 0;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock> = $r2;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = 0;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "camera must not be null");

        $r4 = (android.hardware.Camera) $r3;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera> = $r4;

        return;
    }

    public void processRequestTriggers(android.hardware.camera2.CaptureRequest, android.hardware.Camera$Parameters)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        android.hardware.camera2.CaptureRequest r1;
        android.hardware.Camera$Parameters r2;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, i14, i17, i18;
        java.lang.String r3, $r15, $r25, $r26, $r31, $r34, $r36, $r39, $r42, $r47, $r50, r57, r58;
        java.lang.Object r4, $r13, $r16, $r19, $r27, $r28, $r40, r55, r59, r60, r61;
        java.lang.Throwable r5, r6, r7, r8, r9, $r48, $r49, $r52, $r53, $r54;
        byte b1, b15, b16;
        android.hardware.camera2.CaptureRequest$Key $r11;
        java.lang.Integer $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        android.hardware.camera2.legacy.LegacyFocusStateMapper$1 $r17, r56;
        android.hardware.Camera $r18, $r21, $r29, $r45;
        android.hardware.camera2.legacy.LegacyFocusStateMapper$2 $r20;
        java.lang.StringBuilder $r22, $r23, $r24, $r30, $r32, $r33, $r35, $r37, $r38, $r41, $r43, $r44, $r46, $r51;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        r2 := @parameter1: android.hardware.Camera$Parameters;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "captureRequest must not be null");

        $r11 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_TRIGGER>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r13 = staticinvoke <android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>(r1, $r11, $r12);

        $r14 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        r3 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>();

        $r15 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r15, r3);

        if $z0 != 0 goto label07;

        $z8 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE>;

        if $z8 == 0 goto label01;

        $r47 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestTriggers - AF mode switched from ");

        $r42 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r47, $r50);

     label01:
        $r40 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r4 = $r40;

        entermonitor $r40;

     label02:
        $i10 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        $i11 = $i10 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = $i11;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        exitmonitor r4;

     label03:
        goto label06;

     label04:
        $r54 := @caughtexception;

        r5 = $r54;

        exitmonitor r4;

     label05:
        throw r5;

     label06:
        $r45 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r45.<android.hardware.Camera: void cancelAutoFocus()>();

     label07:
        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String mAfModePrevious> = r3;

        $r16 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r55 = $r16;

        entermonitor $r16;

     label08:
        i14 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        exitmonitor r55;

     label09:
        goto label12;

     label10:
        $r53 := @caughtexception;

        r6 = $r53;

        exitmonitor r55;

     label11:
        throw r6;

     label12:
        $r17 = new android.hardware.camera2.legacy.LegacyFocusStateMapper$1;

        specialinvoke $r17.<android.hardware.camera2.legacy.LegacyFocusStateMapper$1: void <init>(android.hardware.camera2.legacy.LegacyFocusStateMapper,int,java.lang.String)>(r0, i14, r3);

        r56 = $r17;

        r57 = r3;

        b1 = -1;

        $i2 = virtualinvoke r57.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -194628547: goto label16;
            case 3005871: goto label13;
            case 103652300: goto label14;
            case 910005312: goto label15;
            default: goto label17;
        };

     label13:
        $z10 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("auto");

        if $z10 == 0 goto label17;

        b1 = 0;

        goto label17;

     label14:
        $z9 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("macro");

        if $z9 == 0 goto label17;

        b1 = 1;

        goto label17;

     label15:
        $z1 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("continuous-picture");

        if $z1 == 0 goto label17;

        b1 = 2;

        goto label17;

     label16:
        $z11 = virtualinvoke r57.<java.lang.String: boolean equals(java.lang.Object)>("continuous-video");

        if $z11 == 0 goto label17;

        b1 = 3;

     label17:
        tableswitch(b1)
        {
            case 0: goto label18;
            case 1: goto label18;
            case 2: goto label18;
            case 3: goto label18;
            default: goto label19;
        };

     label18:
        $r18 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r18.<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)>(r56);

     label19:
        tableswitch(i0)
        {
            case 0: goto label49;
            case 1: goto label20;
            case 2: goto label37;
            default: goto label50;
        };

     label20:
        r58 = r3;

        b15 = -1;

        $i3 = virtualinvoke r58.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -194628547: goto label24;
            case 3005871: goto label21;
            case 103652300: goto label22;
            case 910005312: goto label23;
            default: goto label25;
        };

     label21:
        $z5 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("auto");

        if $z5 == 0 goto label25;

        b15 = 0;

        goto label25;

     label22:
        $z4 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("macro");

        if $z4 == 0 goto label25;

        b15 = 1;

        goto label25;

     label23:
        $z2 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("continuous-picture");

        if $z2 == 0 goto label25;

        b15 = 2;

        goto label25;

     label24:
        $z6 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("continuous-video");

        if $z6 == 0 goto label25;

        b15 = 3;

     label25:
        tableswitch(b15)
        {
            case 0: goto label26;
            case 1: goto label26;
            case 2: goto label27;
            case 3: goto label27;
            default: goto label28;
        };

     label26:
        b16 = 3;

        goto label29;

     label27:
        b16 = 1;

        goto label29;

     label28:
        b16 = 0;

     label29:
        $r19 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r59 = $r19;

        entermonitor $r19;

     label30:
        $i5 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        $i4 = $i5 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = $i4;

        i17 = $i4;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = b16;

        exitmonitor r59;

     label31:
        goto label34;

     label32:
        $r49 := @caughtexception;

        r7 = $r49;

        exitmonitor r59;

     label33:
        throw r7;

     label34:
        $z3 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE>;

        if $z3 == 0 goto label35;

        $r25 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestTriggers - got AF_TRIGGER_START, new AF run is ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r25, $r26);

     label35:
        if b16 != 0 goto label36;

        goto label51;

     label36:
        $r21 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        $r20 = new android.hardware.camera2.legacy.LegacyFocusStateMapper$2;

        specialinvoke $r20.<android.hardware.camera2.legacy.LegacyFocusStateMapper$2: void <init>(android.hardware.camera2.legacy.LegacyFocusStateMapper,int,java.lang.String)>(r0, i17, r3);

        virtualinvoke $r21.<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>($r20);

        goto label51;

     label37:
        $r28 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r60 = $r28;

        entermonitor $r28;

     label38:
        $r27 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r61 = $r27;

        entermonitor $r27;

     label39:
        $i7 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        $i8 = $i7 + 1;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun> = $i8;

        i18 = $i8;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = 0;

        exitmonitor r61;

     label40:
        goto label43;

     label41:
        $r52 := @caughtexception;

        r8 = $r52;

        exitmonitor r61;

     label42:
        throw r8;

     label43:
        $r29 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: android.hardware.Camera mCamera>;

        virtualinvoke $r29.<android.hardware.Camera: void cancelAutoFocus()>();

        $z7 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE>;

        if $z7 == 0 goto label44;

        $r31 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestTriggers - got AF_TRIGGER_CANCEL, new AF run is ");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r31, $r34);

     label44:
        exitmonitor r60;

     label45:
        goto label48;

     label46:
        $r48 := @caughtexception;

        r9 = $r48;

        exitmonitor r60;

     label47:
        throw r9;

     label48:
        goto label51;

     label49:
        goto label51;

     label50:
        $r39 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequestTriggers - ignoring unknown control.afTrigger = ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r39, $r36);

     label51:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
        catch java.lang.Throwable from label38 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
    }

    public void mapResultTriggers(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        android.hardware.camera2.impl.CameraMetadataNative r1;
        int i0, $i1, $i2;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r13;
        boolean $z0;
        android.hardware.camera2.CaptureResult$Key $r6;
        java.lang.Integer $r7;
        java.lang.Object[] $r8;
        java.lang.String $r9, $r10, $r11, $r12;

        r0 := @this: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "result must not be null");

        $r5 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        i0 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState>;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $z0 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE>;

        if $z0 == 0 goto label6;

        $i1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious>;

        if i0 == $i1 goto label6;

        $r9 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[2];

        $i2 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious>;

        $r10 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String afStateToString(int)>($i2);

        $r8[0] = $r10;

        $r11 = staticinvoke <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String afStateToString(int)>(i0);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("mapResultTriggers - afState changed from %s to %s", $r8);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r9, $r12);

     label6:
        $r6 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r6, $r7);

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfStatePrevious> = i0;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static java.lang.String afStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label7;
            default: goto label8;
        };

     label1:
        return "ACTIVE_SCAN";

     label2:
        return "FOCUSED_LOCKED";

     label3:
        return "INACTIVE";

     label4:
        return "NOT_FOCUSED_LOCKED";

     label5:
        return "PASSIVE_FOCUSED";

     label6:
        return "PASSIVE_SCAN";

     label7:
        return "PASSIVE_UNFOCUSED";

     label8:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static java.lang.Object access$000(android.hardware.camera2.legacy.LegacyFocusStateMapper)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        $r1 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.Object mLock>;

        return $r1;
    }

    static int access$100(android.hardware.camera2.legacy.LegacyFocusStateMapper)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        int $i0;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        $i0 = r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfRun>;

        return $i0;
    }

    static boolean access$200()
    {
        boolean $z0;

        $z0 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE>;

        return $z0;
    }

    static java.lang.String access$300()
    {
        java.lang.String $r0;

        $r0 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        return $r0;
    }

    static int access$402(android.hardware.camera2.legacy.LegacyFocusStateMapper, int)
    {
        android.hardware.camera2.legacy.LegacyFocusStateMapper r0;
        int i0;

        r0 := @parameter0: android.hardware.camera2.legacy.LegacyFocusStateMapper;

        i0 := @parameter1: int;

        r0.<android.hardware.camera2.legacy.LegacyFocusStateMapper: int mAfState> = i0;

        return i0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        boolean $z0;

        <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG> = "LegacyFocusStateMapper";

        $r0 = <android.hardware.camera2.legacy.LegacyFocusStateMapper: java.lang.String TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r0, 2);

        <android.hardware.camera2.legacy.LegacyFocusStateMapper: boolean VERBOSE> = $z0;

        return;
    }
}
