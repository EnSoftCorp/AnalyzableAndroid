public class android.media.MediaRouter$RouteInfo extends java.lang.Object
{
    java.lang.CharSequence mName;
    int mNameResId;
    java.lang.CharSequence mDescription;
    private java.lang.CharSequence mStatus;
    int mSupportedTypes;
    android.media.MediaRouter$RouteGroup mGroup;
    final android.media.MediaRouter$RouteCategory mCategory;
    android.graphics.drawable.Drawable mIcon;
    int mPlaybackType;
    int mVolumeMax;
    int mVolume;
    int mVolumeHandling;
    int mPlaybackStream;
    android.media.MediaRouter$VolumeCallbackInfo mVcb;
    android.view.Display mPresentationDisplay;
    int mPresentationDisplayId;
    java.lang.String mDeviceAddress;
    boolean mEnabled;
    java.lang.String mGlobalRouteId;
    private int mRealStatusCode;
    private int mResolvedStatusCode;
    public static final int STATUS_NONE;
    public static final int STATUS_SCANNING;
    public static final int STATUS_CONNECTING;
    public static final int STATUS_AVAILABLE;
    public static final int STATUS_NOT_AVAILABLE;
    public static final int STATUS_IN_USE;
    public static final int STATUS_CONNECTED;
    private java.lang.Object mTag;
    public static final int PLAYBACK_TYPE_LOCAL;
    public static final int PLAYBACK_TYPE_REMOTE;
    public static final int PLAYBACK_VOLUME_FIXED;
    public static final int PLAYBACK_VOLUME_VARIABLE;
    final android.media.IRemoteVolumeObserver$Stub mRemoteVolObserver;

    void <init>(android.media.MediaRouter$RouteCategory)
    {
        android.media.MediaRouter$RouteInfo r0;
        android.media.MediaRouter$RouteCategory r1;
        android.media.MediaRouter$RouteInfo$1 $r2;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 := @parameter0: android.media.MediaRouter$RouteCategory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType> = 0;

        r0.<android.media.MediaRouter$RouteInfo: int mVolumeMax> = 15;

        r0.<android.media.MediaRouter$RouteInfo: int mVolume> = 15;

        r0.<android.media.MediaRouter$RouteInfo: int mVolumeHandling> = 1;

        r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream> = 3;

        r0.<android.media.MediaRouter$RouteInfo: int mPresentationDisplayId> = -1;

        r0.<android.media.MediaRouter$RouteInfo: boolean mEnabled> = 1;

        $r2 = new android.media.MediaRouter$RouteInfo$1;

        specialinvoke $r2.<android.media.MediaRouter$RouteInfo$1: void <init>(android.media.MediaRouter$RouteInfo)>(r0);

        r0.<android.media.MediaRouter$RouteInfo: android.media.IRemoteVolumeObserver$Stub mRemoteVolObserver> = $r2;

        r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory mCategory> = r1;

        return;
    }

    public java.lang.CharSequence getName()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.media.MediaRouter$Static $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r2 = $r1.<android.media.MediaRouter$Static: android.content.res.Resources mResources>;

        $r3 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>($r2);

        return $r3;
    }

    public java.lang.CharSequence getName(android.content.Context)
    {
        android.media.MediaRouter$RouteInfo r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>($r2);

        return $r3;
    }

    java.lang.CharSequence getName(android.content.res.Resources)
    {
        android.media.MediaRouter$RouteInfo r0;
        android.content.res.Resources r1;
        int $i0, $i1;
        java.lang.CharSequence $r2, $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 := @parameter0: android.content.res.Resources;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mNameResId>;

        if $i0 == 0 goto label1;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mNameResId>;

        $r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i1);

        r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mName> = $r3;

        return $r3;

     label1:
        $r2 = r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mName>;

        return $r2;
    }

    public java.lang.CharSequence getDescription()
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mDescription>;

        return $r1;
    }

    public java.lang.CharSequence getStatus()
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mStatus>;

        return $r1;
    }

    boolean setRealStatusCode(int)
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mRealStatusCode>;

        if $i1 == i0 goto label1;

        r0.<android.media.MediaRouter$RouteInfo: int mRealStatusCode> = i0;

        $z0 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: boolean resolveStatusCode()>();

        return $z0;

     label1:
        return 0;
    }

    boolean resolveStatusCode()
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, i1, $i2;
        boolean $z0;
        android.media.MediaRouter$Static $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        i0 = r0.<android.media.MediaRouter$RouteInfo: int mRealStatusCode>;

        $z0 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: boolean isSelected()>();

        if $z0 == 0 goto label02;

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 3: goto label01;
            default: goto label02;
        };

     label01:
        i0 = 2;

     label02:
        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mResolvedStatusCode>;

        if $i2 != i0 goto label03;

        return 0;

     label03:
        r0.<android.media.MediaRouter$RouteInfo: int mResolvedStatusCode> = i0;

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            default: goto label09;
        };

     label04:
        i1 = 17040838;

        goto label10;

     label05:
        i1 = 17040839;

        goto label10;

     label06:
        i1 = 17040840;

        goto label10;

     label07:
        i1 = 17040841;

        goto label10;

     label08:
        i1 = 17040842;

        goto label10;

     label09:
        i1 = 0;

     label10:
        if i1 == 0 goto label11;

        $r1 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r2 = $r1.<android.media.MediaRouter$Static: android.content.res.Resources mResources>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i1);

        goto label12;

     label11:
        $r3 = null;

     label12:
        r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mStatus> = $r3;

        return 1;
    }

    public int getStatusCode()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mResolvedStatusCode>;

        return $i0;
    }

    public int getSupportedTypes()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mSupportedTypes>;

        return $i0;
    }

    public boolean matchesTypes(int)
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mSupportedTypes>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.media.MediaRouter$RouteGroup getGroup()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.media.MediaRouter$RouteGroup $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup mGroup>;

        return $r1;
    }

    public android.media.MediaRouter$RouteCategory getCategory()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.media.MediaRouter$RouteCategory $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory mCategory>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getIconDrawable()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable mIcon>;

        return $r1;
    }

    public void setTag(java.lang.Object)
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.Object r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 := @parameter0: java.lang.Object;

        r0.<android.media.MediaRouter$RouteInfo: java.lang.Object mTag> = r1;

        virtualinvoke r0.<android.media.MediaRouter$RouteInfo: void routeUpdated()>();

        return;
    }

    public java.lang.Object getTag()
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.Object $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: java.lang.Object mTag>;

        return $r1;
    }

    public int getPlaybackType()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType>;

        return $i0;
    }

    public int getPlaybackStream()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream>;

        return $i0;
    }

    public int getVolume()
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, $i1, $i2, $i3;
        android.os.RemoteException r1, $r4;
        android.media.MediaRouter$Static $r2;
        android.media.IAudioService $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType>;

        if $i1 != 0 goto label5;

        i0 = 0;

     label1:
        $r2 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r3 = $r2.<android.media.MediaRouter$Static: android.media.IAudioService mAudioService>;

        $i3 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream>;

        i0 = interfaceinvoke $r3.<android.media.IAudioService: int getStreamVolume(int)>($i3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouter", "Error getting local stream volume", r1);

     label4:
        return i0;

     label5:
        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mVolume>;

        return $i2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestSetVolume(int)
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, $i1, $i2;
        android.os.RemoteException r1, $r6;
        android.media.MediaRouter$Static $r2, $r3;
        android.media.IAudioService $r4;
        java.lang.String $r5;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType>;

        if $i1 != 0 goto label4;

     label1:
        $r3 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r4 = $r3.<android.media.MediaRouter$Static: android.media.IAudioService mAudioService>;

        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream>;

        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke $r4.<android.media.IAudioService: void setStreamVolume(int,int,int,java.lang.String)>($i2, i0, 0, $r5);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouter", "Error setting local stream volume", r1);

        goto label5;

     label4:
        $r2 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        virtualinvoke $r2.<android.media.MediaRouter$Static: void requestSetVolume(android.media.MediaRouter$RouteInfo,int)>(r0, i0);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void requestUpdateVolume(int)
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.media.MediaRouter$Static $r1, $r2;
        android.media.IAudioService $r3;
        java.lang.String $r4;
        android.os.RemoteException $r5, r6;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        i0 := @parameter0: int;

        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType>;

        if $i2 != 0 goto label4;

     label1:
        $i3 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: int getVolume()>();

        $i4 = $i3 + i0;

        $i5 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: int getVolumeMax()>();

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $r2 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r3 = $r2.<android.media.MediaRouter$Static: android.media.IAudioService mAudioService>;

        $i7 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream>;

        $r4 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke $r3.<android.media.IAudioService: void setStreamVolume(int,int,int,java.lang.String)>($i7, i1, 0, $r4);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouter", "Error setting local stream volume", r6);

        goto label5;

     label4:
        $r1 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        virtualinvoke $r1.<android.media.MediaRouter$Static: void requestUpdateVolume(android.media.MediaRouter$RouteInfo,int)>(r0, i0);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getVolumeMax()
    {
        android.media.MediaRouter$RouteInfo r0;
        int i0, $i1, $i2, $i3;
        android.os.RemoteException r1, $r4;
        android.media.MediaRouter$Static $r2;
        android.media.IAudioService $r3;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i1 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackType>;

        if $i1 != 0 goto label5;

        i0 = 0;

     label1:
        $r2 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r3 = $r2.<android.media.MediaRouter$Static: android.media.IAudioService mAudioService>;

        $i3 = r0.<android.media.MediaRouter$RouteInfo: int mPlaybackStream>;

        i0 = interfaceinvoke $r3.<android.media.IAudioService: int getStreamMaxVolume(int)>($i3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouter", "Error getting local stream volume", r1);

     label4:
        return i0;

     label5:
        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mVolumeMax>;

        return $i2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getVolumeHandling()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mVolumeHandling>;

        return $i0;
    }

    public android.view.Display getPresentationDisplay()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.view.Display $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: android.view.Display mPresentationDisplay>;

        return $r1;
    }

    boolean updatePresentationDisplay()
    {
        android.media.MediaRouter$RouteInfo r0;
        android.view.Display r1, $r2;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 = specialinvoke r0.<android.media.MediaRouter$RouteInfo: android.view.Display choosePresentationDisplay()>();

        $r2 = r0.<android.media.MediaRouter$RouteInfo: android.view.Display mPresentationDisplay>;

        if $r2 == r1 goto label1;

        r0.<android.media.MediaRouter$RouteInfo: android.view.Display mPresentationDisplay> = r1;

        return 1;

     label1:
        return 0;
    }

    private android.view.Display choosePresentationDisplay()
    {
        android.media.MediaRouter$RouteInfo r0, $r7;
        android.view.Display[] r1, r2, r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.view.Display r3, $r8, r12;
        android.media.MediaRouter$Static $r4, $r6;
        java.lang.String $r5, $r9, $r10;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i2 = r0.<android.media.MediaRouter$RouteInfo: int mSupportedTypes>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label9;

        $r4 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        r1 = virtualinvoke $r4.<android.media.MediaRouter$Static: android.view.Display[] getAllPresentationDisplays()>();

        $i4 = r0.<android.media.MediaRouter$RouteInfo: int mPresentationDisplayId>;

        if $i4 < 0 goto label4;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $i8 = virtualinvoke r3.<android.view.Display: int getDisplayId()>();

        $i7 = r0.<android.media.MediaRouter$RouteInfo: int mPresentationDisplayId>;

        if $i8 != $i7 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;

     label4:
        $r5 = r0.<android.media.MediaRouter$RouteInfo: java.lang.String mDeviceAddress>;

        if $r5 == null goto label8;

        r11 = r1;

        i9 = lengthof r11;

        i10 = 0;

     label5:
        if i10 >= i9 goto label7;

        r12 = r11[i10];

        $i6 = virtualinvoke r12.<android.view.Display: int getType()>();

        if $i6 != 3 goto label6;

        $r9 = r0.<android.media.MediaRouter$RouteInfo: java.lang.String mDeviceAddress>;

        $r10 = virtualinvoke r12.<android.view.Display: java.lang.String getAddress()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label6;

        return r12;

     label6:
        i10 = i10 + 1;

        goto label5;

     label7:
        return null;

     label8:
        $r6 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r7 = $r6.<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo mDefaultAudioVideo>;

        if r0 != $r7 goto label9;

        $i5 = lengthof r1;

        if $i5 <= 0 goto label9;

        $r8 = r1[0];

        return $r8;

     label9:
        return null;
    }

    public java.lang.String getDeviceAddress()
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.String $r1;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = r0.<android.media.MediaRouter$RouteInfo: java.lang.String mDeviceAddress>;

        return $r1;
    }

    public boolean isEnabled()
    {
        android.media.MediaRouter$RouteInfo r0;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $z0 = r0.<android.media.MediaRouter$RouteInfo: boolean mEnabled>;

        return $z0;
    }

    public boolean isConnecting()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mResolvedStatusCode>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSelected()
    {
        android.media.MediaRouter$RouteInfo r0, $r2;
        android.media.MediaRouter$Static $r1;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r2 = $r1.<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo mSelectedRoute>;

        if r0 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDefault()
    {
        android.media.MediaRouter$RouteInfo r0, $r2;
        android.media.MediaRouter$Static $r1;
        boolean $z0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $r1 = <android.media.MediaRouter: android.media.MediaRouter$Static sStatic>;

        $r2 = $r1.<android.media.MediaRouter$Static: android.media.MediaRouter$RouteInfo mDefaultAudioVideo>;

        if r0 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void select()
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mSupportedTypes>;

        staticinvoke <android.media.MediaRouter: void selectRouteStatic(int,android.media.MediaRouter$RouteInfo,boolean)>($i0, r0, 1);

        return;
    }

    void setStatusInt(java.lang.CharSequence)
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.CharSequence r1, $r2;
        boolean $z0;
        android.media.MediaRouter$RouteGroup $r3, $r4;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mStatus>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence mStatus> = r1;

        $r3 = r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup mGroup>;

        if $r3 == null goto label1;

        $r4 = r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup mGroup>;

        virtualinvoke $r4.<android.media.MediaRouter$RouteGroup: void memberStatusChanged(android.media.MediaRouter$RouteInfo,java.lang.CharSequence)>(r0, r1);

     label1:
        virtualinvoke r0.<android.media.MediaRouter$RouteInfo: void routeUpdated()>();

     label2:
        return;
    }

    void routeUpdated()
    {
        android.media.MediaRouter$RouteInfo r0;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        staticinvoke <android.media.MediaRouter: void updateRoute(android.media.MediaRouter$RouteInfo)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        android.media.MediaRouter$RouteInfo r0;
        java.lang.String r1, $r4, $r24;
        int $i0;
        java.lang.StringBuilder $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r23;
        java.lang.Class $r3;
        java.lang.CharSequence $r7, $r10, $r13;
        android.media.MediaRouter$RouteCategory $r17;
        android.view.Display $r20;

        r0 := @this: android.media.MediaRouter$RouteInfo;

        $i0 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: int getSupportedTypes()>();

        r1 = staticinvoke <android.media.MediaRouter: java.lang.String typesToString(int)>($i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ name=");

        $r7 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");

        $r10 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getDescription()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=");

        $r13 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", category=");

        $r17 = virtualinvoke r0.<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedTypes=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", presentationDisplay=");

        $r20 = r0.<android.media.MediaRouter$RouteInfo: android.view.Display mPresentationDisplay>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    static int access$100(android.media.MediaRouter$RouteInfo)
    {
        android.media.MediaRouter$RouteInfo r0;
        int $i0;

        r0 := @parameter0: android.media.MediaRouter$RouteInfo;

        $i0 = r0.<android.media.MediaRouter$RouteInfo: int mRealStatusCode>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.media.MediaRouter$RouteInfo: int PLAYBACK_VOLUME_VARIABLE> = 1;

        <android.media.MediaRouter$RouteInfo: int PLAYBACK_VOLUME_FIXED> = 0;

        <android.media.MediaRouter$RouteInfo: int PLAYBACK_TYPE_REMOTE> = 1;

        <android.media.MediaRouter$RouteInfo: int PLAYBACK_TYPE_LOCAL> = 0;

        <android.media.MediaRouter$RouteInfo: int STATUS_CONNECTED> = 6;

        <android.media.MediaRouter$RouteInfo: int STATUS_IN_USE> = 5;

        <android.media.MediaRouter$RouteInfo: int STATUS_NOT_AVAILABLE> = 4;

        <android.media.MediaRouter$RouteInfo: int STATUS_AVAILABLE> = 3;

        <android.media.MediaRouter$RouteInfo: int STATUS_CONNECTING> = 2;

        <android.media.MediaRouter$RouteInfo: int STATUS_SCANNING> = 1;

        <android.media.MediaRouter$RouteInfo: int STATUS_NONE> = 0;

        return;
    }
}
