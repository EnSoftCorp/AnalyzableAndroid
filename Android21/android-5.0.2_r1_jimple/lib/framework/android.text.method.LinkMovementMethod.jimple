public class android.text.method.LinkMovementMethod extends android.text.method.ScrollingMovementMethod
{
    private static final int CLICK;
    private static final int UP;
    private static final int DOWN;
    private static android.text.method.LinkMovementMethod sInstance;
    private static java.lang.Object FROM_BELOW;

    public void <init>()
    {
        android.text.method.LinkMovementMethod r0;

        r0 := @this: android.text.method.LinkMovementMethod;

        specialinvoke r0.<android.text.method.ScrollingMovementMethod: void <init>()>();

        return;
    }

    public boolean canSelectArbitrarily()
    {
        android.text.method.LinkMovementMethod r0;

        r0 := @this: android.text.method.LinkMovementMethod;

        return 1;
    }

    protected boolean handleMovementKey(android.widget.TextView, android.text.Spannable, int, int, android.view.KeyEvent)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, $i2, $i3;
        android.view.KeyEvent r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 23: goto label1;
            case 66: goto label1;
            default: goto label2;
        };

     label1:
        $z0 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r3.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label2;

        $i3 = virtualinvoke r3.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label2;

        $z2 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(1, r1, r2);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>(r1, r2, i0, i1, r3);

        return $z1;
    }

    protected boolean up(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(2, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    protected boolean down(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(3, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    protected boolean left(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(2, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    protected boolean right(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0, $z1;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = specialinvoke r0.<android.text.method.LinkMovementMethod: boolean action(int,android.widget.TextView,android.text.Spannable)>(3, r1, r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z1;
    }

    private boolean action(int, android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        android.text.style.ClickableSpan[] r4, r5;
        java.lang.Object[] $r6, $r8;
        android.text.style.ClickableSpan $r7, $r9, $r10, $r11, $r13;
        java.lang.Object $r12;

        r0 := @this: android.text.method.LinkMovementMethod;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.TextView;

        r2 := @parameter2: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $i16 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingTop()>();

        $i17 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingBottom()>();

        i1 = $i16 + $i17;

        i2 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        $i19 = virtualinvoke r1.<android.widget.TextView: int getHeight()>();

        $i18 = i2 + $i19;

        i3 = $i18 - i1;

        i4 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i2);

        i5 = virtualinvoke r3.<android.text.Layout: int getLineForVertical(int)>(i3);

        i6 = virtualinvoke r3.<android.text.Layout: int getLineStart(int)>(i4);

        i7 = virtualinvoke r3.<android.text.Layout: int getLineEnd(int)>(i5);

        $r6 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i6, i7, class "android/text/style/ClickableSpan");

        r4 = (android.text.style.ClickableSpan[]) $r6;

        i8 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i9 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i8, i9);

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i8, i9);

        if i10 >= 0 goto label01;

        $r12 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        $i23 = interfaceinvoke r2.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r12);

        if $i23 < 0 goto label01;

        $i24 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        i11 = $i24;

        i10 = $i24;

     label01:
        if i10 <= i7 goto label02;

        i11 = 2147483647;

        i10 = 2147483647;

     label02:
        if i11 >= i6 goto label03;

        i11 = -1;

        i10 = -1;

     label03:
        tableswitch(i0)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label12;
            default: goto label17;
        };

     label04:
        if i10 != i11 goto label05;

        return 0;

     label05:
        $r8 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i10, i11, class "android/text/style/ClickableSpan");

        r5 = (android.text.style.ClickableSpan[]) $r8;

        $i20 = lengthof r5;

        if $i20 == 1 goto label06;

        return 0;

     label06:
        $r7 = r5[0];

        virtualinvoke $r7.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

        goto label17;

     label07:
        i13 = -1;

        i12 = -1;

        i15 = 0;

     label08:
        $i22 = lengthof r4;

        if i15 >= $i22 goto label11;

        $r11 = r4[i15];

        i14 = interfaceinvoke r2.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r11);

        if i14 < i11 goto label09;

        if i10 != i11 goto label10;

     label09:
        if i14 <= i12 goto label10;

        $r13 = r4[i15];

        i13 = interfaceinvoke r2.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r13);

        i12 = i14;

     label10:
        i15 = i15 + 1;

        goto label08;

     label11:
        if i13 < 0 goto label17;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r2, i12, i13);

        return 1;

     label12:
        i25 = 2147483647;

        i26 = 2147483647;

        i27 = 0;

     label13:
        $i21 = lengthof r4;

        if i27 >= $i21 goto label16;

        $r10 = r4[i27];

        i28 = interfaceinvoke r2.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r10);

        if i28 > i10 goto label14;

        if i10 != i11 goto label15;

     label14:
        if i28 >= i25 goto label15;

        i25 = i28;

        $r9 = r4[i27];

        i26 = interfaceinvoke r2.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r9);

     label15:
        i27 = i27 + 1;

        goto label13;

     label16:
        if i26 >= 2147483647 goto label17;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r2, i25, i26);

        return 1;

     label17:
        return 0;
    }

    public boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.MotionEvent r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        android.text.Layout r4;
        android.text.style.ClickableSpan[] r5;
        float $f0, $f1, $f2;
        java.lang.Object[] $r6;
        android.text.style.ClickableSpan $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.MotionEvent;

        i0 = virtualinvoke r3.<android.view.MotionEvent: int getAction()>();

        if i0 == 1 goto label1;

        if i0 != 0 goto label5;

     label1:
        $f0 = virtualinvoke r3.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f0;

        $f1 = virtualinvoke r3.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f1;

        $i5 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingLeft()>();

        i12 = i1 - $i5;

        $i6 = virtualinvoke r1.<android.widget.TextView: int getTotalPaddingTop()>();

        i13 = i2 - $i6;

        $i8 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        i14 = i12 + $i8;

        $i7 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        i15 = i13 + $i7;

        r4 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        i3 = virtualinvoke r4.<android.text.Layout: int getLineForVertical(int)>(i15);

        $f2 = (float) i14;

        i4 = virtualinvoke r4.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i3, $f2);

        $r6 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i4, i4, class "android/text/style/ClickableSpan");

        r5 = (android.text.style.ClickableSpan[]) $r6;

        $i9 = lengthof r5;

        if $i9 == 0 goto label4;

        if i0 != 1 goto label2;

        $r9 = r5[0];

        virtualinvoke $r9.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

        goto label3;

     label2:
        if i0 != 0 goto label3;

        $r7 = r5[0];

        $i10 = interfaceinvoke r2.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r7);

        $r8 = r5[0];

        $i11 = interfaceinvoke r2.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r8);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r2, $i10, $i11);

     label3:
        return 1;

     label4:
        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

     label5:
        $z0 = specialinvoke r0.<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r1, r2, r3);

        return $z0;
    }

    public void initialize(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        java.lang.Object $r3;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

        $r3 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

        return;
    }

    public void onTakeFocus(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.LinkMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, $i1;
        java.lang.Object $r3, $r4;

        r0 := @this: android.text.method.LinkMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>(r2);

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r4 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r4, 0, 0, 34);

        goto label2;

     label1:
        $r3 = <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW>;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r3);

     label2:
        return;
    }

    public static android.text.method.MovementMethod getInstance()
    {
        android.text.method.LinkMovementMethod $r0, $r1, $r2;

        $r0 = <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance>;

        if $r0 != null goto label1;

        $r2 = new android.text.method.LinkMovementMethod;

        specialinvoke $r2.<android.text.method.LinkMovementMethod: void <init>()>();

        <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance> = $r2;

     label1:
        $r1 = <android.text.method.LinkMovementMethod: android.text.method.LinkMovementMethod sInstance>;

        return $r1;
    }

    static void <clinit>()
    {
        android.text.NoCopySpan$Concrete $r0;

        <android.text.method.LinkMovementMethod: int DOWN> = 3;

        <android.text.method.LinkMovementMethod: int UP> = 2;

        <android.text.method.LinkMovementMethod: int CLICK> = 1;

        $r0 = new android.text.NoCopySpan$Concrete;

        specialinvoke $r0.<android.text.NoCopySpan$Concrete: void <init>()>();

        <android.text.method.LinkMovementMethod: java.lang.Object FROM_BELOW> = $r0;

        return;
    }
}
