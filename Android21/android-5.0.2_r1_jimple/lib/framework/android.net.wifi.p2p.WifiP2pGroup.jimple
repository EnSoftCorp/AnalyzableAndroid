public class android.net.wifi.p2p.WifiP2pGroup extends java.lang.Object implements android.os.Parcelable
{
    public static final int TEMPORARY_NET_ID;
    public static final int PERSISTENT_NET_ID;
    private java.lang.String mNetworkName;
    private android.net.wifi.p2p.WifiP2pDevice mOwner;
    private boolean mIsGroupOwner;
    private java.util.List mClients;
    private java.lang.String mPassphrase;
    private java.lang.String mInterface;
    private int mNetId;
    private static final java.util.regex.Pattern groupStartedPattern;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients> = $r1;

        return;
    }

    public void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1, r5, $r9, $r10, $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r24, $r25, $r27, $r29, $r30, r31;
        java.lang.String[] r2, r4, r6;
        java.util.regex.Matcher r3;
        int i0, i1, $i2, $i3, $i4;
        android.net.wifi.p2p.WifiP2pDevice r7, $r16, $r17, $r18, $r26;
        java.util.ArrayList $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7;
        java.lang.IllegalArgumentException $r11, $r28;
        java.util.List $r22;
        java.util.regex.Pattern $r23;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients> = $r8;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i2 = lengthof r2;

        if $i2 >= 3 goto label01;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r28;

     label01:
        $r9 = r2[0];

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GROUP");

        if $z0 == 0 goto label05;

        $r20 = r2[1];

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface> = $r20;

        $r24 = r2[2];

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("GO");

        r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner> = $z6;

        $r23 = <android.net.wifi.p2p.WifiP2pGroup: java.util.regex.Pattern groupStartedPattern>;

        r3 = virtualinvoke $r23.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z7 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z7 != 0 goto label02;

        return;

     label02:
        $r27 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName> = $r27;

        $r25 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mPassphrase> = $r25;

        $r26 = new android.net.wifi.p2p.WifiP2pDevice;

        $r29 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        specialinvoke $r26.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>($r29);

        r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner> = $r26;

        $r30 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        if $r30 == null goto label03;

        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = -2;

        goto label04;

     label03:
        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = -1;

     label04:
        goto label13;

     label05:
        $r10 = r2[0];

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("P2P-INVITATION-RECEIVED");

        if $z1 == 0 goto label12;

        r31 = null;

        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = -2;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label06:
        if i1 >= i0 goto label11;

        r5 = r4[i1];

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i3 = lengthof r6;

        if $i3 == 2 goto label07;

        goto label10;

     label07:
        $r12 = r6[0];

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("sa");

        if $z2 == 0 goto label08;

        r31 = r6[1];

        $r18 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r18.<android.net.wifi.p2p.WifiP2pDevice: void <init>()>();

        r7 = $r18;

        $r21 = r6[1];

        r7.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress> = $r21;

        $r22 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label10;

     label08:
        $r13 = r6[0];

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("go_dev_addr");

        if $z3 == 0 goto label09;

        $r17 = new android.net.wifi.p2p.WifiP2pDevice;

        $r19 = r6[1];

        specialinvoke $r17.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>($r19);

        r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner> = $r17;

        goto label10;

     label09:
        $r14 = r6[0];

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("persistent");

        if $z4 == 0 goto label10;

        $r16 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r16.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r31);

        r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner> = $r16;

        $r15 = r6[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = $i4;

        goto label10;

     label10:
        i1 = i1 + 1;

        goto label06;

     label11:
        goto label13;

     label12:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Malformed supplicant event");

        throw $r11;

     label13:
        return;
    }

    public void setNetworkName(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName> = r1;

        return;
    }

    public java.lang.String getNetworkName()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName>;

        return $r1;
    }

    public void setIsGroupOwner(boolean)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        boolean z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        z0 := @parameter0: boolean;

        r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner> = z0;

        return;
    }

    public boolean isGroupOwner()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $z0 = r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner>;

        return $z0;
    }

    public void setOwner(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner> = r1;

        return;
    }

    public android.net.wifi.p2p.WifiP2pDevice getOwner()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner>;

        return $r1;
    }

    public void addClient(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1;
        android.net.wifi.p2p.WifiP2pDevice $r2;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r2.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: void addClient(android.net.wifi.p2p.WifiP2pDevice)>($r2);

        return;
    }

    public void addClient(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1, r3;
        java.util.Iterator r2;
        java.util.List $r4, $r5;
        boolean $z0, $z2;
        java.lang.Object $r6;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r4 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r6;

        $z2 = virtualinvoke r3.<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        $r5 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean removeClient(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1;
        android.net.wifi.p2p.WifiP2pDevice $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $r2 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r2.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean removeClient(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean isClientListEmpty()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r2;
        boolean $z0, $z1;
        java.util.List $r3;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner>;

        $z0 = virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.util.Collection getClientList()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.util.List $r1;
        java.util.Collection $r2;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public void setPassphrase(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mPassphrase> = r1;

        return;
    }

    public java.lang.String getPassphrase()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mPassphrase>;

        return $r1;
    }

    public void setInterface(java.lang.String)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface> = r1;

        return;
    }

    public java.lang.String getInterface()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface>;

        return $r1;
    }

    public int getNetworkId()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        int $i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $i0 = r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId>;

        return $i0;
    }

    public void setNetworkId(int)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        int i0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        i0 := @parameter0: int;

        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = i0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.StringBuffer r1, $r4, $r5, $r8, $r10, $r14, $r17, $r20;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3, $r11;
        java.lang.String $r6, $r16, $r18;
        boolean $z0, $z1;
        java.util.List $r13;
        int $i0;
        java.lang.Object $r21;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("network: ");

        $r6 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n isGO: ");

        $z0 = r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r10 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n GO: ");

        $r11 = r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r21 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r21;

        $r20 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n Client: ");

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n interface: ");

        $r16 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n networkId: ");

        $i0 = r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r18 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;
    }

    public int describeContents()
    {
        android.net.wifi.p2p.WifiP2pGroup r0;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        return 0;
    }

    public void <init>(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0, r1;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3, $r6, $r7;
        java.util.ArrayList $r4;
        java.lang.String $r5, $r9, $r10;
        boolean $z0, $z1;
        java.util.Collection $r8;
        int $i0;
        java.lang.Object $r11;
        java.util.List $r12;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients> = $r4;

        if r1 == null goto label3;

        $r5 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName> = $r5;

        $r6 = new android.net.wifi.p2p.WifiP2pDevice;

        $r7 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        specialinvoke $r6.<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>($r7);

        r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner> = $r6;

        $z0 = r1.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner>;

        r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner> = $z0;

        $r8 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r11;

        $r12 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r9 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mPassphrase> = $r9;

        $r10 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface> = $r10;

        $i0 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()>();

        r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId> = $i0;

     label3:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3, $r5;
        java.lang.String $r4, $r8, $r9;
        boolean $z0, $z1;
        java.util.List $r6, $r7;
        byte $b3;
        java.lang.Object $r10;

        r0 := @this: android.net.wifi.p2p.WifiP2pGroup;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r4 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mNetworkName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice mOwner>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        $z0 = r0.<android.net.wifi.p2p.WifiP2pGroup: boolean mIsGroupOwner>;

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>($b3);

        $r6 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r7 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.util.List mClients>;

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r10;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>(r3, i0);

        goto label3;

     label4:
        $r8 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mPassphrase>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $r9 = r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String mInterface>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $i2 = r0.<android.net.wifi.p2p.WifiP2pGroup: int mNetId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        android.net.wifi.p2p.WifiP2pGroup$1 $r1;

        <android.net.wifi.p2p.WifiP2pGroup: int PERSISTENT_NET_ID> = -2;

        <android.net.wifi.p2p.WifiP2pGroup: int TEMPORARY_NET_ID> = -1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("ssid=\"(.+)\" freq=(\\d+) (?:psk=)?([0-9a-fA-F]{64})?(?:passphrase=)?(?:\"(.{0,63})\")? go_dev_addr=((?:[0-9a-f]{2}:){5}[0-9a-f]{2}) ?(\\[PERSISTENT\\])?");

        <android.net.wifi.p2p.WifiP2pGroup: java.util.regex.Pattern groupStartedPattern> = $r0;

        $r1 = new android.net.wifi.p2p.WifiP2pGroup$1;

        specialinvoke $r1.<android.net.wifi.p2p.WifiP2pGroup$1: void <init>()>();

        <android.net.wifi.p2p.WifiP2pGroup: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
}
