public final class android.media.tv.TvTrackInfo$Builder extends java.lang.Object
{
    private final java.lang.String mId;
    private final int mType;
    private java.lang.String mLanguage;
    private int mAudioChannelCount;
    private int mAudioSampleRate;
    private int mVideoWidth;
    private int mVideoHeight;
    private float mVideoFrameRate;
    private android.os.Bundle mExtra;

    public void <init>(int, java.lang.String)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0;
        java.lang.String r1, $r7;
        java.lang.IllegalArgumentException $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id cannot be null");

        throw $r2;

     label2:
        r0.<android.media.tv.TvTrackInfo$Builder: int mType> = i0;

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mId> = r1;

        return;
    }

    public final android.media.tv.TvTrackInfo$Builder setLanguage(java.lang.String)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        java.lang.String r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mLanguage> = r1;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setAudioChannelCount(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;

     label1:
        r0.<android.media.tv.TvTrackInfo$Builder: int mAudioChannelCount> = i0;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setAudioSampleRate(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not an audio track");

        throw $r1;

     label1:
        r0.<android.media.tv.TvTrackInfo$Builder: int mAudioSampleRate> = i0;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setVideoWidth(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;

     label1:
        r0.<android.media.tv.TvTrackInfo$Builder: int mVideoWidth> = i0;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setVideoHeight(int)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        int i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i1 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;

     label1:
        r0.<android.media.tv.TvTrackInfo$Builder: int mVideoHeight> = i0;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setVideoFrameRate(float)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        float f0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        f0 := @parameter0: float;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not a video track");

        throw $r1;

     label1:
        r0.<android.media.tv.TvTrackInfo$Builder: float mVideoFrameRate> = f0;

        return r0;
    }

    public final android.media.tv.TvTrackInfo$Builder setExtra(android.os.Bundle)
    {
        android.media.tv.TvTrackInfo$Builder r0;
        android.os.Bundle r1, $r2;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r0.<android.media.tv.TvTrackInfo$Builder: android.os.Bundle mExtra> = $r2;

        return r0;
    }

    public android.media.tv.TvTrackInfo build()
    {
        android.media.tv.TvTrackInfo$Builder r0;
        android.media.tv.TvTrackInfo $r1;
        android.os.Bundle $r2;
        float $f0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r4;

        r0 := @this: android.media.tv.TvTrackInfo$Builder;

        $r1 = new android.media.tv.TvTrackInfo;

        $i4 = r0.<android.media.tv.TvTrackInfo$Builder: int mType>;

        $r4 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mId>;

        $r3 = r0.<android.media.tv.TvTrackInfo$Builder: java.lang.String mLanguage>;

        $i3 = r0.<android.media.tv.TvTrackInfo$Builder: int mAudioChannelCount>;

        $i2 = r0.<android.media.tv.TvTrackInfo$Builder: int mAudioSampleRate>;

        $i1 = r0.<android.media.tv.TvTrackInfo$Builder: int mVideoWidth>;

        $i0 = r0.<android.media.tv.TvTrackInfo$Builder: int mVideoHeight>;

        $f0 = r0.<android.media.tv.TvTrackInfo$Builder: float mVideoFrameRate>;

        $r2 = r0.<android.media.tv.TvTrackInfo$Builder: android.os.Bundle mExtra>;

        specialinvoke $r1.<android.media.tv.TvTrackInfo: void <init>(int,java.lang.String,java.lang.String,int,int,int,int,float,android.os.Bundle,android.media.tv.TvTrackInfo$1)>($i4, $r4, $r3, $i3, $i2, $i1, $i0, $f0, $r2, null);

        return $r1;
    }
}
