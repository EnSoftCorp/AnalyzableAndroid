final class android.app.LoadedApk$ServiceDispatcher extends java.lang.Object
{
    private final android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection;
    private final android.content.ServiceConnection mConnection;
    private final android.content.Context mContext;
    private final android.os.Handler mActivityThread;
    private final android.app.ServiceConnectionLeaked mLocation;
    private final int mFlags;
    private java.lang.RuntimeException mUnbindLocation;
    private boolean mDied;
    private boolean mForgotten;
    private final android.util.ArrayMap mActiveConnections;

    void <init>(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ServiceConnection r1;
        android.content.Context r2;
        android.os.Handler r3;
        int i0;
        android.util.ArrayMap $r4;
        android.app.LoadedApk$ServiceDispatcher$InnerConnection $r5;
        android.app.ServiceConnectionLeaked $r6, $r7;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ServiceConnection;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections> = $r4;

        $r5 = new android.app.LoadedApk$ServiceDispatcher$InnerConnection;

        specialinvoke $r5.<android.app.LoadedApk$ServiceDispatcher$InnerConnection: void <init>(android.app.LoadedApk$ServiceDispatcher)>(r0);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection> = $r5;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection> = r1;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext> = r2;

        r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread> = r3;

        $r6 = new android.app.ServiceConnectionLeaked;

        specialinvoke $r6.<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>(null);

        r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation> = $r6;

        $r7 = r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation>;

        virtualinvoke $r7.<android.app.ServiceConnectionLeaked: java.lang.Throwable fillInStackTrace()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: int mFlags> = i0;

        return;
    }

    void validate(android.content.Context, android.os.Handler)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.Context r1, $r3, $r22;
        android.os.Handler r2, $r4, $r11;
        java.lang.RuntimeException $r5, $r16;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27;
        android.content.ServiceConnection $r8, $r21;
        java.lang.String $r17, $r28;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        $r3 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext>;

        if $r3 == r1 goto label1;

        $r16 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r21 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing Context (was ");

        $r22 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.Context mContext>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r28);

        throw $r16;

     label1:
        $r4 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r4 == r2 goto label2;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServiceConnection ");

        $r8 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered with differing handler (was ");

        $r11 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r5;

     label2:
        return;
    }

    void doForget()
    {
        android.app.LoadedApk$ServiceDispatcher r0, r1;
        int i0, $i1;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r2;
        java.lang.Throwable r3, $r11;
        android.util.ArrayMap $r5, $r6, $r7;
        java.lang.Object $r8;
        android.os.IBinder$DeathRecipient $r9;
        android.os.IBinder $r10;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $i1 = virtualinvoke $r5.<android.util.ArrayMap: int size()>();

        if i0 >= $i1 goto label3;

        $r7 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r2 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r8;

        $r10 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r9 = r2.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r10.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r9, 0);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r6.<android.util.ArrayMap: void clear()>();

        r0.<android.app.LoadedApk$ServiceDispatcher: boolean mForgotten> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    android.app.ServiceConnectionLeaked getLocation()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.app.ServiceConnectionLeaked $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked mLocation>;

        return $r1;
    }

    android.content.ServiceConnection getServiceConnection()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ServiceConnection $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        return $r1;
    }

    android.app.IServiceConnection getIServiceConnection()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.app.LoadedApk$ServiceDispatcher$InnerConnection $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: android.app.LoadedApk$ServiceDispatcher$InnerConnection mIServiceConnection>;

        return $r1;
    }

    int getFlags()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        int $i0;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $i0 = r0.<android.app.LoadedApk$ServiceDispatcher: int mFlags>;

        return $i0;
    }

    void setUnbindLocation(java.lang.RuntimeException)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        java.lang.RuntimeException r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: java.lang.RuntimeException;

        r0.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation> = r1;

        return;
    }

    java.lang.RuntimeException getUnbindLocation()
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        $r1 = r0.<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException mUnbindLocation>;

        return $r1;
    }

    public void connected(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.os.Handler $r3, $r5;
        android.app.LoadedApk$ServiceDispatcher$RunConnection $r4;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r3 == null goto label1;

        $r5 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r4 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r4.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>(r0, r1, r2, 0);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        goto label2;

     label1:
        virtualinvoke r0.<android.app.LoadedApk$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>(r1, r2);

     label2:
        return;
    }

    public void death(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0, r4;
        android.content.ComponentName r1;
        android.os.IBinder r2, $r9, $r11;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r3;
        java.lang.Throwable r5, $r15;
        android.util.ArrayMap $r7;
        java.lang.Object $r8;
        android.os.IBinder$DeathRecipient $r10;
        android.os.Handler $r12, $r13;
        android.app.LoadedApk$ServiceDispatcher$RunConnection $r14;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r4 = r0;

        entermonitor r0;

     label01:
        r0.<android.app.LoadedApk$ServiceDispatcher: boolean mDied> = 1;

        $r7 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r8;

        if r3 == null goto label02;

        $r9 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r9 == r2 goto label04;

     label02:
        exitmonitor r4;

     label03:
        return;

     label04:
        $r11 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r10 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r11.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r10, 0);

        exitmonitor r4;

     label05:
        goto label08;

     label06:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r4;

     label07:
        throw r5;

     label08:
        $r12 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        if $r12 == null goto label09;

        $r13 = r0.<android.app.LoadedApk$ServiceDispatcher: android.os.Handler mActivityThread>;

        $r14 = new android.app.LoadedApk$ServiceDispatcher$RunConnection;

        specialinvoke $r14.<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>(r0, r1, r2, 1);

        virtualinvoke $r13.<android.os.Handler: boolean post(java.lang.Runnable)>($r14);

        goto label10;

     label09:
        virtualinvoke r0.<android.app.LoadedApk$ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>(r1, r2);

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public void doConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0, r5;
        android.content.ComponentName r1;
        android.os.IBinder r2, $r16, $r21;
        android.app.LoadedApk$ServiceDispatcher$ConnectionInfo r3, r4, $r18;
        java.lang.Throwable r7, $r26;
        boolean $z0;
        android.util.ArrayMap $r9, $r11, $r19, $r23;
        java.lang.Object $r10;
        android.content.ServiceConnection $r13, $r15;
        android.os.IBinder$DeathRecipient $r14, $r20;
        android.app.LoadedApk$ServiceDispatcher$DeathMonitor $r17;
        android.os.RemoteException $r24;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r5 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<android.app.LoadedApk$ServiceDispatcher: boolean mForgotten>;

        if $z0 == 0 goto label03;

        exitmonitor r5;

     label02:
        return;

     label03:
        $r9 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.app.LoadedApk$ServiceDispatcher$ConnectionInfo) $r10;

        if r3 == null goto label05;

        $r21 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        if $r21 != r2 goto label05;

        exitmonitor r5;

     label04:
        return;

     label05:
        if r2 == null goto label10;

        r0.<android.app.LoadedApk$ServiceDispatcher: boolean mDied> = 0;

        $r18 = new android.app.LoadedApk$ServiceDispatcher$ConnectionInfo;

        specialinvoke $r18.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: void <init>(android.app.LoadedApk$1)>(null);

        r4 = $r18;

        r4.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder> = r2;

        $r17 = new android.app.LoadedApk$ServiceDispatcher$DeathMonitor;

        specialinvoke $r17.<android.app.LoadedApk$ServiceDispatcher$DeathMonitor: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder)>(r0, r1, r2);

        r4.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor> = $r17;

     label06:
        $r20 = r4.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r20, 0);

        $r19 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label07:
        goto label11;

     label08:
        $r24 := @caughtexception;

        $r23 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        exitmonitor r5;

     label09:
        return;

     label10:
        $r11 = r0.<android.app.LoadedApk$ServiceDispatcher: android.util.ArrayMap mActiveConnections>;

        virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label11:
        if r3 == null goto label12;

        $r16 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder binder>;

        $r14 = r3.<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: android.os.IBinder$DeathRecipient deathMonitor>;

        interfaceinvoke $r16.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r14, 0);

     label12:
        exitmonitor r5;

     label13:
        goto label16;

     label14:
        $r26 := @caughtexception;

        r7 = $r26;

        exitmonitor r5;

     label15:
        throw r7;

     label16:
        if r3 == null goto label17;

        $r15 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r15.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>(r1);

     label17:
        if r2 == null goto label18;

        $r13 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r13.<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>(r1, r2);

     label18:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label09 with label14;
        catch java.lang.Throwable from label10 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void doDeath(android.content.ComponentName, android.os.IBinder)
    {
        android.app.LoadedApk$ServiceDispatcher r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.content.ServiceConnection $r3;

        r0 := @this: android.app.LoadedApk$ServiceDispatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = r0.<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection mConnection>;

        interfaceinvoke $r3.<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>(r1);

        return;
    }
}
