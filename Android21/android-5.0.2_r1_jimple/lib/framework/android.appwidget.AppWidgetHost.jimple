public class android.appwidget.AppWidgetHost extends java.lang.Object
{
    static final int HANDLE_UPDATE;
    static final int HANDLE_PROVIDER_CHANGED;
    static final int HANDLE_PROVIDERS_CHANGED;
    static final int HANDLE_VIEW_DATA_CHANGED;
    static final java.lang.Object sServiceLock;
    static com.android.internal.appwidget.IAppWidgetService sService;
    private android.util.DisplayMetrics mDisplayMetrics;
    android.content.Context mContext;
    android.os.Handler mHandler;
    int mHostId;
    android.appwidget.AppWidgetHost$Callbacks mCallbacks;
    final java.util.HashMap mViews;
    private android.widget.RemoteViews$OnClickHandler mOnClickHandler;

    public void <init>(android.content.Context, int)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.os.Looper $r2;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews$OnClickHandler,android.os.Looper)>(r1, i0, null, $r2);

        return;
    }

    public void <init>(android.content.Context, int, android.widget.RemoteViews$OnClickHandler, android.os.Looper)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.widget.RemoteViews$OnClickHandler r2;
        android.os.Looper r3;
        android.appwidget.AppWidgetHost$Callbacks $r4;
        java.util.HashMap $r5;
        android.appwidget.AppWidgetHost$UpdateHandler $r6;
        android.content.res.Resources $r7;
        android.util.DisplayMetrics $r8;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r3 := @parameter3: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.appwidget.AppWidgetHost$Callbacks;

        specialinvoke $r4.<android.appwidget.AppWidgetHost$Callbacks: void <init>(android.appwidget.AppWidgetHost)>(r0);

        r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews> = $r5;

        r0.<android.appwidget.AppWidgetHost: android.content.Context mContext> = r1;

        r0.<android.appwidget.AppWidgetHost: int mHostId> = i0;

        r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler> = r2;

        $r6 = new android.appwidget.AppWidgetHost$UpdateHandler;

        specialinvoke $r6.<android.appwidget.AppWidgetHost$UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>(r0, r3);

        r0.<android.appwidget.AppWidgetHost: android.os.Handler mHandler> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics> = $r8;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

        return;
    }

    private static void bindService()
    {
        java.lang.Object r0, $r3;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        com.android.internal.appwidget.IAppWidgetService $r4, $r5;

        $r3 = <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock>;

        r0 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r4 != null goto label2;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appwidget");

        $r5 = staticinvoke <com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>(r1);

        <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService> = $r5;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void startListening()
    {
        android.appwidget.AppWidgetHost r0;
        int[] r1;
        java.util.ArrayList r2, $r4;
        android.os.RemoteException r3, $r11;
        int i0, $i1, $i2, i3;
        android.content.Context $r5;
        com.android.internal.appwidget.IAppWidgetService $r6;
        android.appwidget.AppWidgetHost$Callbacks $r7;
        java.lang.String $r8;
        java.lang.Object $r9;
        android.widget.RemoteViews $r10;
        java.lang.RuntimeException $r12;

        r0 := @this: android.appwidget.AppWidgetHost;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

     label1:
        $r6 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r7 = r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks>;

        $r5 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r8 = virtualinvoke $r5.<android.content.Context: java.lang.String getOpPackageName()>();

        $i1 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        r1 = interfaceinvoke $r6.<com.android.internal.appwidget.IAppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>($r7, $r8, $i1, r2);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r12;

     label4:
        i3 = lengthof r1;

        i0 = 0;

     label5:
        if i0 >= i3 goto label6;

        $i2 = r1[i0];

        $r9 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (android.widget.RemoteViews) $r9;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews)>($i2, $r10);

        i0 = i0 + 1;

        goto label5;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopListening()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r5;
        android.content.Context $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r2 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: void stopListening(java.lang.String,int)>($r4, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r6;

     label4:
        virtualinvoke r0.<android.appwidget.AppWidgetHost: void clearViews()>();

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int allocateAppWidgetId()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r5;
        android.content.Context $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        java.lang.String $r4;
        int $i0, $i1;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r2 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $i1 = interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: int allocateAppWidgetId(java.lang.String,int)>($r4, $i0);

     label2:
        return $i1;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void startAppWidgetConfigureActivityForResult(android.app.Activity, int, int, int, android.os.Bundle)
    {
        android.appwidget.AppWidgetHost r0;
        android.app.Activity r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        android.content.IntentSender r3;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        java.lang.String $r6;
        android.content.ActivityNotFoundException $r7, $r9;
        android.content.IntentSender$SendIntentException $r8;
        android.os.RemoteException $r10, r13;
        java.lang.RuntimeException $r11;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

     label1:
        $r5 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.String getOpPackageName()>();

        r3 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: android.content.IntentSender createAppWidgetConfigIntentSender(java.lang.String,int,int)>($r6, i0, i1);

        if r3 == null goto label2;

        virtualinvoke r1.<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r3, i2, null, 0, 0, 0, r2);

        goto label3;

     label2:
        $r7 = new android.content.ActivityNotFoundException;

        specialinvoke $r7.<android.content.ActivityNotFoundException: void <init>()>();

        throw $r7;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r9 = new android.content.ActivityNotFoundException;

        specialinvoke $r9.<android.content.ActivityNotFoundException: void <init>()>();

        throw $r9;

     label5:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r13);

        throw $r11;

     label6:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label3 with label4;
        catch android.os.RemoteException from label1 to label3 with label5;
    }

    public int[] getAppWidgetIds()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r7;
        com.android.internal.appwidget.IAppWidgetService $r2, $r4;
        android.content.Context $r3;
        java.lang.String $r5;
        int $i0;
        int[] $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r2 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r2 != null goto label2;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

     label2:
        $r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getOpPackageName()>();

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r6 = interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: int[] getAppWidgetIdsForHost(java.lang.String,int)>($r5, $i0);

     label3:
        return $r6;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r8;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private boolean isLocalBinder()
    {
        android.appwidget.AppWidgetHost r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.appwidget.AppWidgetHost;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void deleteAppWidgetId(int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        java.util.HashMap r1, $r4, $r5;
        android.os.RemoteException r2, $r11;
        java.lang.Throwable r3, $r13;
        java.lang.Integer $r6;
        android.content.Context $r8;
        com.android.internal.appwidget.IAppWidgetService $r9;
        java.lang.String $r10;
        java.lang.RuntimeException $r12;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        $r4 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

     label2:
        $r9 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r10 = virtualinvoke $r8.<android.content.Context: java.lang.String getOpPackageName()>();

        interfaceinvoke $r9.<com.android.internal.appwidget.IAppWidgetService: void deleteAppWidgetId(java.lang.String,int)>($r10, i0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r12;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void deleteHost()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r5;
        android.content.Context $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r2 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getOpPackageName()>();

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: void deleteHost(java.lang.String,int)>($r4, $i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void deleteAllHosts()
    {
        android.os.RemoteException r0, $r2;
        com.android.internal.appwidget.IAppWidgetService $r1;
        java.lang.RuntimeException $r3;

     label1:
        $r1 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        interfaceinvoke $r1.<com.android.internal.appwidget.IAppWidgetService: void deleteAllHosts()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r0);

        throw $r3;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final android.appwidget.AppWidgetHostView createView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1, $r6, $r12;
        int i0;
        android.appwidget.AppWidgetProviderInfo r2;
        android.appwidget.AppWidgetHostView r3;
        java.util.HashMap r4, $r8, $r9;
        java.lang.Throwable r5, $r16;
        android.widget.RemoteViews$OnClickHandler $r7;
        java.lang.Integer $r10;
        java.lang.String $r13;
        com.android.internal.appwidget.IAppWidgetService $r14;
        android.os.RemoteException $r15, r19;
        java.lang.RuntimeException $r17;
        android.widget.RemoteViews r18;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r6 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        r3 = virtualinvoke r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>($r6, i0, r2);

        $r7 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews$OnClickHandler)>($r7);

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>(i0, r2);

        $r8 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        r4 = $r8;

        entermonitor $r8;

     label1:
        $r9 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3);

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        $r14 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r12 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getOpPackageName()>();

        r18 = interfaceinvoke $r14.<com.android.internal.appwidget.IAppWidgetService: android.widget.RemoteViews getAppWidgetViews(java.lang.String,int)>($r13, i0);

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        r19 = $r15;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r19);

        throw $r17;

     label8:
        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r18);

        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    protected android.appwidget.AppWidgetHostView onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.appwidget.AppWidgetProviderInfo r2;
        android.appwidget.AppWidgetHostView $r3;
        android.widget.RemoteViews$OnClickHandler $r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r3 = new android.appwidget.AppWidgetHostView;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        specialinvoke $r3.<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews$OnClickHandler)>(r1, $r4);

        return $r3;
    }

    protected void onProviderChanged(int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.appwidget.AppWidgetProviderInfo r1;
        android.appwidget.AppWidgetHostView r2;
        java.util.HashMap r3, $r9, $r10;
        java.lang.Throwable r4, $r13;
        android.util.DisplayMetrics $r5, $r6, $r7, $r8;
        java.lang.Object $r11;
        java.lang.Integer $r12;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 := @parameter1: android.appwidget.AppWidgetProviderInfo;

        $i1 = r1.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

        $r5 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i2 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i1, $r5);

        r1.<android.appwidget.AppWidgetProviderInfo: int minWidth> = $i2;

        $i3 = r1.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

        $r6 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i4 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i3, $r6);

        r1.<android.appwidget.AppWidgetProviderInfo: int minHeight> = $i4;

        $i5 = r1.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth>;

        $r7 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i6 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i5, $r7);

        r1.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth> = $i6;

        $i8 = r1.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight>;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i7 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i8, $r8);

        r1.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight> = $i7;

        $r10 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        r3 = $r10;

        entermonitor $r10;

     label1:
        $r9 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        r2 = (android.appwidget.AppWidgetHostView) $r11;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        virtualinvoke r2.<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>(r1);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onProvidersChanged()
    {
        android.appwidget.AppWidgetHost r0;

        r0 := @this: android.appwidget.AppWidgetHost;

        return;
    }

    void updateAppWidgetView(int, android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetHost r0;
        int i0;
        android.widget.RemoteViews r1;
        android.appwidget.AppWidgetHostView r2;
        java.util.HashMap r3, $r5, $r6;
        java.lang.Throwable r4, $r9;
        java.lang.Integer $r7;
        java.lang.Object $r8;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $r5 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (android.appwidget.AppWidgetHostView) $r8;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r2 == null goto label6;

        virtualinvoke r2.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r1);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void viewDataChanged(int, int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, i1;
        android.appwidget.AppWidgetHostView r1;
        java.util.HashMap r2, $r4, $r5;
        java.lang.Throwable r3, $r8;
        java.lang.Integer $r6;
        java.lang.Object $r7;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r1 = (android.appwidget.AppWidgetHostView) $r7;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 == null goto label6;

        virtualinvoke r1.<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>(i1);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void clearViews()
    {
        android.appwidget.AppWidgetHost r0;
        java.util.HashMap $r1;

        r0 := @this: android.appwidget.AppWidgetHost;

        $r1 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    static boolean access$000(android.appwidget.AppWidgetHost)
    {
        android.appwidget.AppWidgetHost r0;
        boolean $z0;

        r0 := @parameter0: android.appwidget.AppWidgetHost;

        $z0 = specialinvoke r0.<android.appwidget.AppWidgetHost: boolean isLocalBinder()>();

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.appwidget.AppWidgetHost: int HANDLE_VIEW_DATA_CHANGED> = 4;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDERS_CHANGED> = 3;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDER_CHANGED> = 2;

        <android.appwidget.AppWidgetHost: int HANDLE_UPDATE> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock> = $r0;

        return;
    }
}
