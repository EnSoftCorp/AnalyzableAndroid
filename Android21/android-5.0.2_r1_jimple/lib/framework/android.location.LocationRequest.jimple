public final class android.location.LocationRequest extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACCURACY_FINE;
    public static final int ACCURACY_BLOCK;
    public static final int ACCURACY_CITY;
    public static final int POWER_NONE;
    public static final int POWER_LOW;
    public static final int POWER_HIGH;
    private static final double FASTEST_INTERVAL_FACTOR;
    private int mQuality;
    private long mInterval;
    private long mFastestInterval;
    private boolean mExplicitFastestInterval;
    private long mExpireAt;
    private int mNumUpdates;
    private float mSmallestDisplacement;
    private android.os.WorkSource mWorkSource;
    private boolean mHideFromAppOps;
    private java.lang.String mProvider;
    public static final android.os.Parcelable$Creator CREATOR;

    public static android.location.LocationRequest create()
    {
        android.location.LocationRequest r0, $r1;

        $r1 = new android.location.LocationRequest;

        specialinvoke $r1.<android.location.LocationRequest: void <init>()>();

        r0 = $r1;

        return r0;
    }

    public static android.location.LocationRequest createFromDeprecatedProvider(java.lang.String, long, float, boolean)
    {
        java.lang.String r0, $r2, $r3;
        long l0;
        float f0;
        boolean z0, $z1, $z2;
        short s1;
        android.location.LocationRequest r1, $r4, $r5, $r6, $r7, $r8;
        byte $b2, $b3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        l0 = 0L;

     label1:
        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        f0 = 0.0F;

     label2:
        $r2 = "passive";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        s1 = 200;

        goto label5;

     label3:
        $r3 = "gps";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        s1 = 100;

        goto label5;

     label4:
        s1 = 201;

     label5:
        $r4 = new android.location.LocationRequest;

        specialinvoke $r4.<android.location.LocationRequest: void <init>()>();

        $r5 = virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setProvider(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(s1);

        $r8 = virtualinvoke $r6.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l0);

        $r7 = virtualinvoke $r8.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(l0);

        r1 = virtualinvoke $r7.<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)>(f0);

        if z0 == 0 goto label6;

        virtualinvoke r1.<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)>(1);

     label6:
        return r1;
    }

    public static android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria, long, float, boolean)
    {
        android.location.Criteria r0;
        long l0;
        float f0;
        boolean z0;
        short s1;
        android.location.LocationRequest r1, $r2, $r3, $r4, $r5;
        byte $b2, $b3;
        int $i4, $i5;

        r0 := @parameter0: android.location.Criteria;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        l0 = 0L;

     label1:
        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

        f0 = 0.0F;

     label2:
        $i4 = virtualinvoke r0.<android.location.Criteria: int getAccuracy()>();

        lookupswitch($i4)
        {
            case 1: goto label4;
            case 2: goto label3;
            default: goto label5;
        };

     label3:
        s1 = 102;

        goto label7;

     label4:
        s1 = 100;

        goto label7;

     label5:
        $i5 = virtualinvoke r0.<android.location.Criteria: int getPowerRequirement()>();

        lookupswitch($i5)
        {
            case 3: goto label6;
            default: goto label6;
        };

     label6:
        s1 = 201;

     label7:
        $r2 = new android.location.LocationRequest;

        specialinvoke $r2.<android.location.LocationRequest: void <init>()>();

        $r3 = virtualinvoke $r2.<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>(s1);

        $r4 = virtualinvoke $r3.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l0);

        $r5 = virtualinvoke $r4.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(l0);

        r1 = virtualinvoke $r5.<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)>(f0);

        if z0 == 0 goto label8;

        virtualinvoke r1.<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)>(1);

     label8:
        return r1;
    }

    public void <init>()
    {
        android.location.LocationRequest r0;
        long $l0, $l1;
        double $d0, $d1;

        r0 := @this: android.location.LocationRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.LocationRequest: int mQuality> = 201;

        r0.<android.location.LocationRequest: long mInterval> = 3600000L;

        $l0 = r0.<android.location.LocationRequest: long mInterval>;

        $d0 = (double) $l0;

        $d1 = $d0 / 6.0;

        $l1 = (long) $d1;

        r0.<android.location.LocationRequest: long mFastestInterval> = $l1;

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = 0;

        r0.<android.location.LocationRequest: long mExpireAt> = 9223372036854775807L;

        r0.<android.location.LocationRequest: int mNumUpdates> = 2147483647;

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = 0.0F;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = null;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = 0;

        r0.<android.location.LocationRequest: java.lang.String mProvider> = "fused";

        return;
    }

    public void <init>(android.location.LocationRequest)
    {
        android.location.LocationRequest r0, r1;
        long $l0, $l1, $l3, $l4, $l5;
        double $d0, $d1;
        int $i2, $i6;
        boolean $z0, $z1;
        float $f0;
        java.lang.String $r2;
        android.os.WorkSource $r3;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.location.LocationRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.LocationRequest: int mQuality> = 201;

        r0.<android.location.LocationRequest: long mInterval> = 3600000L;

        $l0 = r0.<android.location.LocationRequest: long mInterval>;

        $d0 = (double) $l0;

        $d1 = $d0 / 6.0;

        $l1 = (long) $d1;

        r0.<android.location.LocationRequest: long mFastestInterval> = $l1;

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = 0;

        r0.<android.location.LocationRequest: long mExpireAt> = 9223372036854775807L;

        r0.<android.location.LocationRequest: int mNumUpdates> = 2147483647;

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = 0.0F;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = null;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = 0;

        r0.<android.location.LocationRequest: java.lang.String mProvider> = "fused";

        $i2 = r1.<android.location.LocationRequest: int mQuality>;

        r0.<android.location.LocationRequest: int mQuality> = $i2;

        $l3 = r1.<android.location.LocationRequest: long mInterval>;

        r0.<android.location.LocationRequest: long mInterval> = $l3;

        $l4 = r1.<android.location.LocationRequest: long mFastestInterval>;

        r0.<android.location.LocationRequest: long mFastestInterval> = $l4;

        $z0 = r1.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = $z0;

        $l5 = r1.<android.location.LocationRequest: long mExpireAt>;

        r0.<android.location.LocationRequest: long mExpireAt> = $l5;

        $i6 = r1.<android.location.LocationRequest: int mNumUpdates>;

        r0.<android.location.LocationRequest: int mNumUpdates> = $i6;

        $f0 = r1.<android.location.LocationRequest: float mSmallestDisplacement>;

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = $f0;

        $r2 = r1.<android.location.LocationRequest: java.lang.String mProvider>;

        r0.<android.location.LocationRequest: java.lang.String mProvider> = $r2;

        $r3 = r1.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = $r3;

        $z1 = r1.<android.location.LocationRequest: boolean mHideFromAppOps>;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = $z1;

        return;
    }

    public android.location.LocationRequest setQuality(int)
    {
        android.location.LocationRequest r0;
        int i0;

        r0 := @this: android.location.LocationRequest;

        i0 := @parameter0: int;

        staticinvoke <android.location.LocationRequest: void checkQuality(int)>(i0);

        r0.<android.location.LocationRequest: int mQuality> = i0;

        return r0;
    }

    public int getQuality()
    {
        android.location.LocationRequest r0;
        int $i0;

        r0 := @this: android.location.LocationRequest;

        $i0 = r0.<android.location.LocationRequest: int mQuality>;

        return $i0;
    }

    public android.location.LocationRequest setInterval(long)
    {
        android.location.LocationRequest r0;
        long l0, $l1, $l2;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        staticinvoke <android.location.LocationRequest: void checkInterval(long)>(l0);

        r0.<android.location.LocationRequest: long mInterval> = l0;

        $z0 = r0.<android.location.LocationRequest: boolean mExplicitFastestInterval>;

        if $z0 != 0 goto label1;

        $l1 = r0.<android.location.LocationRequest: long mInterval>;

        $d0 = (double) $l1;

        $d1 = $d0 / 6.0;

        $l2 = (long) $d1;

        r0.<android.location.LocationRequest: long mFastestInterval> = $l2;

     label1:
        return r0;
    }

    public long getInterval()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mInterval>;

        return $l0;
    }

    public android.location.LocationRequest setFastestInterval(long)
    {
        android.location.LocationRequest r0;
        long l0;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        staticinvoke <android.location.LocationRequest: void checkInterval(long)>(l0);

        r0.<android.location.LocationRequest: boolean mExplicitFastestInterval> = 1;

        r0.<android.location.LocationRequest: long mFastestInterval> = l0;

        return r0;
    }

    public long getFastestInterval()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mFastestInterval>;

        return $l0;
    }

    public android.location.LocationRequest setExpireIn(long)
    {
        android.location.LocationRequest r0;
        long l0, l1, $l2, $l4, $l5;
        byte $b3, $b6;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = 9223372036854775807L - l1;

        $b3 = l0 cmp $l2;

        if $b3 <= 0 goto label1;

        r0.<android.location.LocationRequest: long mExpireAt> = 9223372036854775807L;

        goto label2;

     label1:
        $l4 = l0 + l1;

        r0.<android.location.LocationRequest: long mExpireAt> = $l4;

     label2:
        $l5 = r0.<android.location.LocationRequest: long mExpireAt>;

        $b6 = $l5 cmp 0L;

        if $b6 >= 0 goto label3;

        r0.<android.location.LocationRequest: long mExpireAt> = 0L;

     label3:
        return r0;
    }

    public android.location.LocationRequest setExpireAt(long)
    {
        android.location.LocationRequest r0;
        long l0, $l1;
        byte $b2;

        r0 := @this: android.location.LocationRequest;

        l0 := @parameter0: long;

        r0.<android.location.LocationRequest: long mExpireAt> = l0;

        $l1 = r0.<android.location.LocationRequest: long mExpireAt>;

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label1;

        r0.<android.location.LocationRequest: long mExpireAt> = 0L;

     label1:
        return r0;
    }

    public long getExpireAt()
    {
        android.location.LocationRequest r0;
        long $l0;

        r0 := @this: android.location.LocationRequest;

        $l0 = r0.<android.location.LocationRequest: long mExpireAt>;

        return $l0;
    }

    public android.location.LocationRequest setNumUpdates(int)
    {
        android.location.LocationRequest r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.location.LocationRequest;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid numUpdates: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.location.LocationRequest: int mNumUpdates> = i0;

        return r0;
    }

    public int getNumUpdates()
    {
        android.location.LocationRequest r0;
        int $i0;

        r0 := @this: android.location.LocationRequest;

        $i0 = r0.<android.location.LocationRequest: int mNumUpdates>;

        return $i0;
    }

    public void decrementNumUpdates()
    {
        android.location.LocationRequest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.location.LocationRequest;

        $i0 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if $i0 == 2147483647 goto label1;

        $i2 = r0.<android.location.LocationRequest: int mNumUpdates>;

        $i3 = $i2 - 1;

        r0.<android.location.LocationRequest: int mNumUpdates> = $i3;

     label1:
        $i1 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if $i1 >= 0 goto label2;

        r0.<android.location.LocationRequest: int mNumUpdates> = 0;

     label2:
        return;
    }

    public android.location.LocationRequest setProvider(java.lang.String)
    {
        android.location.LocationRequest r0;
        java.lang.String r1;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.location.LocationRequest: void checkProvider(java.lang.String)>(r1);

        r0.<android.location.LocationRequest: java.lang.String mProvider> = r1;

        return r0;
    }

    public java.lang.String getProvider()
    {
        android.location.LocationRequest r0;
        java.lang.String $r1;

        r0 := @this: android.location.LocationRequest;

        $r1 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        return $r1;
    }

    public android.location.LocationRequest setSmallestDisplacement(float)
    {
        android.location.LocationRequest r0;
        float f0;

        r0 := @this: android.location.LocationRequest;

        f0 := @parameter0: float;

        staticinvoke <android.location.LocationRequest: void checkDisplacement(float)>(f0);

        r0.<android.location.LocationRequest: float mSmallestDisplacement> = f0;

        return r0;
    }

    public float getSmallestDisplacement()
    {
        android.location.LocationRequest r0;
        float $f0;

        r0 := @this: android.location.LocationRequest;

        $f0 = r0.<android.location.LocationRequest: float mSmallestDisplacement>;

        return $f0;
    }

    public void setWorkSource(android.os.WorkSource)
    {
        android.location.LocationRequest r0;
        android.os.WorkSource r1;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.os.WorkSource;

        r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource> = r1;

        return;
    }

    public android.os.WorkSource getWorkSource()
    {
        android.location.LocationRequest r0;
        android.os.WorkSource $r1;

        r0 := @this: android.location.LocationRequest;

        $r1 = r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        return $r1;
    }

    public void setHideFromAppOps(boolean)
    {
        android.location.LocationRequest r0;
        boolean z0;

        r0 := @this: android.location.LocationRequest;

        z0 := @parameter0: boolean;

        r0.<android.location.LocationRequest: boolean mHideFromAppOps> = z0;

        return;
    }

    public boolean getHideFromAppOps()
    {
        android.location.LocationRequest r0;
        boolean $z0;

        r0 := @this: android.location.LocationRequest;

        $z0 = r0.<android.location.LocationRequest: boolean mHideFromAppOps>;

        return $z0;
    }

    private static void checkInterval(long)
    {
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid interval: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    private static void checkQuality(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 100: goto label1;
            case 102: goto label1;
            case 104: goto label1;
            case 200: goto label1;
            case 201: goto label1;
            case 203: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid quality: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label3:
        return;
    }

    private static void checkDisplacement(float)
    {
        float f0;
        byte $b0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid displacement: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return;
    }

    private static void checkProvider(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid provider: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    public int describeContents()
    {
        android.location.LocationRequest r0;

        r0 := @this: android.location.LocationRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.LocationRequest r0;
        android.os.Parcel r1;
        int i0, $i1, $i5;
        long $l2, $l3, $l4;
        float $f0;
        boolean $z0;
        java.lang.String $r2;
        android.os.WorkSource $r3;
        byte $b6;

        r0 := @this: android.location.LocationRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.location.LocationRequest: int mQuality>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.location.LocationRequest: long mFastestInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $l3 = r0.<android.location.LocationRequest: long mInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r0.<android.location.LocationRequest: long mExpireAt>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $i5 = r0.<android.location.LocationRequest: int mNumUpdates>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $f0 = r0.<android.location.LocationRequest: float mSmallestDisplacement>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $z0 = r0.<android.location.LocationRequest: boolean mHideFromAppOps>;

        if $z0 == 0 goto label1;

        $b6 = 1;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b6);

        $r2 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.location.LocationRequest: android.os.WorkSource mWorkSource>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r3, 0);

        return;
    }

    public static java.lang.String qualityToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 100: goto label1;
            case 102: goto label2;
            case 104: goto label3;
            case 200: goto label4;
            case 201: goto label5;
            case 203: goto label6;
            default: goto label7;
        };

     label1:
        return "ACCURACY_FINE";

     label2:
        return "ACCURACY_BLOCK";

     label3:
        return "ACCURACY_CITY";

     label4:
        return "POWER_NONE";

     label5:
        return "POWER_LOW";

     label6:
        return "POWER_HIGH";

     label7:
        return "???";
    }

    public java.lang.String toString()
    {
        android.location.LocationRequest r0;
        java.lang.StringBuilder r1, $r2, $r3, $r10, $r15;
        long l0, $l3, $l4, $l8, $l9, $l10;
        int $i1, $i2, $i6, $i7;
        java.lang.String $r4, $r6, $r8, $r14;
        byte $b5;

        r0 := @this: android.location.LocationRequest;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request[");

        $i1 = r0.<android.location.LocationRequest: int mQuality>;

        $r4 = staticinvoke <android.location.LocationRequest: java.lang.String qualityToString(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        if $r6 == null goto label1;

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r14 = r0.<android.location.LocationRequest: java.lang.String mProvider>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label1:
        $i2 = r0.<android.location.LocationRequest: int mQuality>;

        if $i2 == 200 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested=");

        $l10 = r0.<android.location.LocationRequest: long mInterval>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l10, r1);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fastest=");

        $l3 = r0.<android.location.LocationRequest: long mFastestInterval>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l3, r1);

        $l4 = r0.<android.location.LocationRequest: long mExpireAt>;

        $b5 = $l4 cmp 9223372036854775807L;

        if $b5 == 0 goto label3;

        $l8 = r0.<android.location.LocationRequest: long mExpireAt>;

        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l8 - $l9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expireIn=");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l0, r1);

     label3:
        $i6 = r0.<android.location.LocationRequest: int mNumUpdates>;

        if $i6 == 2147483647 goto label4;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num=");

        $i7 = r0.<android.location.LocationRequest: int mNumUpdates>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        android.location.LocationRequest$1 $r0;

        <android.location.LocationRequest: double FASTEST_INTERVAL_FACTOR> = 6.0;

        <android.location.LocationRequest: int POWER_HIGH> = 203;

        <android.location.LocationRequest: int POWER_LOW> = 201;

        <android.location.LocationRequest: int POWER_NONE> = 200;

        <android.location.LocationRequest: int ACCURACY_CITY> = 104;

        <android.location.LocationRequest: int ACCURACY_BLOCK> = 102;

        <android.location.LocationRequest: int ACCURACY_FINE> = 100;

        $r0 = new android.location.LocationRequest$1;

        specialinvoke $r0.<android.location.LocationRequest$1: void <init>()>();

        <android.location.LocationRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
