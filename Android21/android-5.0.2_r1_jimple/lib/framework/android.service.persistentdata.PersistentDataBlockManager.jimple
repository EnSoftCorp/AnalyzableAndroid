public class android.service.persistentdata.PersistentDataBlockManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.service.persistentdata.IPersistentDataBlockService sService;

    public void <init>(android.service.persistentdata.IPersistentDataBlockService)
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService r1;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

        r1 := @parameter0: android.service.persistentdata.IPersistentDataBlockService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService> = r1;

        return;
    }

    public int write(byte[])
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        byte[] r1;
        android.service.persistentdata.IPersistentDataBlockService $r3;
        int $i0;
        android.os.RemoteException $r4;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

        r1 := @parameter0: byte[];

     label1:
        $r3 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        $i0 = interfaceinvoke $r3.<android.service.persistentdata.IPersistentDataBlockService: int write(byte[])>(r1);

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("writing data");

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] read()
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        byte[] $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        $r3 = interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: byte[] read()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("reading data");

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getDataBlockSize()
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        int $i0;
        android.os.RemoteException $r3;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        $i0 = interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: int getDataBlockSize()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("getting data block size");

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public long getMaximumDataBlockSize()
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        long $l0;
        android.os.RemoteException $r3;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        $l0 = interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: long getMaximumDataBlockSize()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("getting maximum data block size");

        return -1L;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void wipe()
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: void wipe()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("wiping persistent partition");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setOemUnlockEnabled(boolean)
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        boolean z0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: void setOemUnlockEnabled(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting OEM unlock enabled to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>($r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getOemUnlockEnabled()
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        android.service.persistentdata.IPersistentDataBlockService $r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

     label1:
        $r2 = r0.<android.service.persistentdata.PersistentDataBlockManager: android.service.persistentdata.IPersistentDataBlockService sService>;

        $z0 = interfaceinvoke $r2.<android.service.persistentdata.IPersistentDataBlockService: boolean getOemUnlockEnabled()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        specialinvoke r0.<android.service.persistentdata.PersistentDataBlockManager: void onError(java.lang.String)>("getting OEM unlock enabled bit");

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void onError(java.lang.String)
    {
        android.service.persistentdata.PersistentDataBlockManager r0;
        java.lang.String r1, $r3, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;

        r0 := @this: android.service.persistentdata.PersistentDataBlockManager;

        r1 := @parameter0: java.lang.String;

        $r3 = <android.service.persistentdata.PersistentDataBlockManager: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception while ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, $r6);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "android/service/persistentdata/PersistentDataBlockManager";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.service.persistentdata.PersistentDataBlockManager: java.lang.String TAG> = $r1;

        return;
    }
}
