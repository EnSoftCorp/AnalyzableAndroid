public class android.view.ViewPropertyAnimator extends java.lang.Object
{
    final android.view.View mView;
    private long mDuration;
    private boolean mDurationSet;
    private long mStartDelay;
    private boolean mStartDelaySet;
    private android.animation.TimeInterpolator mInterpolator;
    private boolean mInterpolatorSet;
    private android.animation.Animator$AnimatorListener mListener;
    private android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener;
    private android.animation.ValueAnimator mTempValueAnimator;
    private android.view.ViewPropertyAnimatorRT mRTBackend;
    private android.view.ViewPropertyAnimator$AnimatorEventListener mAnimatorEventListener;
    java.util.ArrayList mPendingAnimations;
    private java.lang.Runnable mPendingSetupAction;
    private java.lang.Runnable mPendingCleanupAction;
    private java.lang.Runnable mPendingOnStartAction;
    private java.lang.Runnable mPendingOnEndAction;
    static final int NONE;
    static final int TRANSLATION_X;
    static final int TRANSLATION_Y;
    static final int TRANSLATION_Z;
    static final int SCALE_X;
    static final int SCALE_Y;
    static final int ROTATION;
    static final int ROTATION_X;
    static final int ROTATION_Y;
    static final int X;
    static final int Y;
    static final int Z;
    static final int ALPHA;
    private static final int TRANSFORM_MASK;
    private java.lang.Runnable mAnimationStarter;
    private java.util.HashMap mAnimatorMap;
    private java.util.HashMap mAnimatorSetupMap;
    private java.util.HashMap mAnimatorCleanupMap;
    private java.util.HashMap mAnimatorOnStartMap;
    private java.util.HashMap mAnimatorOnEndMap;

    void <init>(android.view.View)
    {
        android.view.ViewPropertyAnimator r0;
        android.view.View r1;
        android.view.ViewPropertyAnimator$AnimatorEventListener $r2;
        java.util.ArrayList $r3;
        android.view.ViewPropertyAnimator$1 $r4;
        java.util.HashMap $r5;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: boolean mDurationSet> = 0;

        r0.<android.view.ViewPropertyAnimator: long mStartDelay> = 0L;

        r0.<android.view.ViewPropertyAnimator: boolean mStartDelaySet> = 0;

        r0.<android.view.ViewPropertyAnimator: boolean mInterpolatorSet> = 0;

        r0.<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener mListener> = null;

        r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = null;

        $r2 = new android.view.ViewPropertyAnimator$AnimatorEventListener;

        specialinvoke $r2.<android.view.ViewPropertyAnimator$AnimatorEventListener: void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1)>(r0, null);

        r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator$AnimatorEventListener mAnimatorEventListener> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations> = $r3;

        $r4 = new android.view.ViewPropertyAnimator$1;

        specialinvoke $r4.<android.view.ViewPropertyAnimator$1: void <init>(android.view.ViewPropertyAnimator)>(r0);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mAnimationStarter> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap> = $r5;

        r0.<android.view.ViewPropertyAnimator: android.view.View mView> = r1;

        virtualinvoke r1.<android.view.View: void ensureTransformationInfo()>();

        return;
    }

    public android.view.ViewPropertyAnimator setDuration(long)
    {
        android.view.ViewPropertyAnimator r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.view.ViewPropertyAnimator;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animators cannot have negative duration: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.view.ViewPropertyAnimator: boolean mDurationSet> = 1;

        r0.<android.view.ViewPropertyAnimator: long mDuration> = l0;

        return r0;
    }

    public long getDuration()
    {
        android.view.ViewPropertyAnimator r0;
        boolean $z0;
        android.animation.ValueAnimator $r1, $r2, $r3;
        long $l0, $l1;

        r0 := @this: android.view.ViewPropertyAnimator;

        $z0 = r0.<android.view.ViewPropertyAnimator: boolean mDurationSet>;

        if $z0 == 0 goto label1;

        $l1 = r0.<android.view.ViewPropertyAnimator: long mDuration>;

        return $l1;

     label1:
        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator>;

        if $r1 != null goto label2;

        $r3 = new android.animation.ValueAnimator;

        specialinvoke $r3.<android.animation.ValueAnimator: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator> = $r3;

     label2:
        $r2 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator>;

        $l0 = virtualinvoke $r2.<android.animation.ValueAnimator: long getDuration()>();

        return $l0;
    }

    public long getStartDelay()
    {
        android.view.ViewPropertyAnimator r0;
        boolean $z0;
        long $l0;

        r0 := @this: android.view.ViewPropertyAnimator;

        $z0 = r0.<android.view.ViewPropertyAnimator: boolean mStartDelaySet>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.view.ViewPropertyAnimator: long mStartDelay>;

        return $l0;

     label1:
        return 0L;
    }

    public android.view.ViewPropertyAnimator setStartDelay(long)
    {
        android.view.ViewPropertyAnimator r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.view.ViewPropertyAnimator;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animators cannot have negative start delay: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.view.ViewPropertyAnimator: boolean mStartDelaySet> = 1;

        r0.<android.view.ViewPropertyAnimator: long mStartDelay> = l0;

        return r0;
    }

    public android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.TimeInterpolator r1;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: android.animation.TimeInterpolator;

        r0.<android.view.ViewPropertyAnimator: boolean mInterpolatorSet> = 1;

        r0.<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator mInterpolator> = r1;

        return r0;
    }

    public android.animation.TimeInterpolator getInterpolator()
    {
        android.view.ViewPropertyAnimator r0;
        boolean $z0;
        android.animation.ValueAnimator $r1, $r2, $r4;
        android.animation.TimeInterpolator $r3, $r5;

        r0 := @this: android.view.ViewPropertyAnimator;

        $z0 = r0.<android.view.ViewPropertyAnimator: boolean mInterpolatorSet>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator mInterpolator>;

        return $r5;

     label1:
        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator>;

        if $r1 != null goto label2;

        $r4 = new android.animation.ValueAnimator;

        specialinvoke $r4.<android.animation.ValueAnimator: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator> = $r4;

     label2:
        $r2 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator mTempValueAnimator>;

        $r3 = virtualinvoke $r2.<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>();

        return $r3;
    }

    public android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: android.animation.Animator$AnimatorListener;

        r0.<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener mListener> = r1;

        return r0;
    }

    android.animation.Animator$AnimatorListener getListener()
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener mListener>;

        return $r1;
    }

    public android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener r1;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: android.animation.ValueAnimator$AnimatorUpdateListener;

        r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = r1;

        return r0;
    }

    android.animation.ValueAnimator$AnimatorUpdateListener getUpdateListener()
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener $r1;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        return $r1;
    }

    public void start()
    {
        android.view.ViewPropertyAnimator r0;
        java.lang.Runnable $r1;
        android.view.View $r2;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r2 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mAnimationStarter>;

        virtualinvoke $r2.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r1);

        specialinvoke r0.<android.view.ViewPropertyAnimator: void startAnimation()>();

        return;
    }

    public void cancel()
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap r1, $r5, $r11;
        java.util.Set r2;
        java.util.Iterator r3;
        android.animation.Animator r4;
        int $i0;
        java.util.ArrayList $r6;
        java.lang.Runnable $r7;
        android.view.View $r8;
        android.view.ViewPropertyAnimatorRT $r9, $r10;
        java.lang.Object $r12, $r13;
        boolean $z1;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r5 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        $i0 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        if $i0 <= 0 goto label2;

        $r11 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object clone()>();

        r1 = (java.util.HashMap) $r12;

        r2 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.animation.Animator) $r13;

        virtualinvoke r4.<android.animation.Animator: void cancel()>();

        goto label1;

     label2:
        $r6 = r0.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction> = null;

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction> = null;

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction> = null;

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction> = null;

        $r8 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $r7 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mAnimationStarter>;

        virtualinvoke $r8.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r7);

        $r9 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimatorRT mRTBackend>;

        if $r9 == null goto label3;

        $r10 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimatorRT mRTBackend>;

        virtualinvoke $r10.<android.view.ViewPropertyAnimatorRT: void cancelAll()>();

     label3:
        return;
    }

    public android.view.ViewPropertyAnimator x(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(256, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator xBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(256, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator y(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(512, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator yBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(512, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator z(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(1024, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator zBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(1024, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotation(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(32, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotationBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(32, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotationX(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(64, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotationXBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(64, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotationY(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(128, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator rotationYBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(128, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationX(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(1, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationXBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(1, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationY(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(2, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationYBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(2, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationZ(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(4, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator translationZBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(4, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator scaleX(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(8, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator scaleXBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(8, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator scaleY(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(16, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator scaleYBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(16, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator alpha(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animateProperty(int,float)>(2048, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator alphaBy(float)
    {
        android.view.ViewPropertyAnimator r0;
        float f0;

        r0 := @this: android.view.ViewPropertyAnimator;

        f0 := @parameter0: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float)>(2048, f0);

        return r0;
    }

    public android.view.ViewPropertyAnimator withLayer()
    {
        android.view.ViewPropertyAnimator r0;
        int i0;
        android.view.ViewPropertyAnimator$2 $r1;
        android.view.View $r2;
        android.view.ViewPropertyAnimator$3 $r3;
        java.util.HashMap $r4, $r5, $r6, $r7;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r1 = new android.view.ViewPropertyAnimator$2;

        specialinvoke $r1.<android.view.ViewPropertyAnimator$2: void <init>(android.view.ViewPropertyAnimator)>(r0);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction> = $r1;

        $r2 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        i0 = virtualinvoke $r2.<android.view.View: int getLayerType()>();

        $r3 = new android.view.ViewPropertyAnimator$3;

        specialinvoke $r3.<android.view.ViewPropertyAnimator$3: void <init>(android.view.ViewPropertyAnimator,int)>(r0, i0);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction> = $r3;

        $r4 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorSetupMap>;

        if $r4 != null goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorSetupMap> = $r7;

     label1:
        $r5 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorCleanupMap>;

        if $r5 != null goto label2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorCleanupMap> = $r6;

     label2:
        return r0;
    }

    public android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)
    {
        android.view.ViewPropertyAnimator r0;
        java.lang.Runnable r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: java.lang.Runnable;

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction> = r1;

        if r1 == null goto label1;

        $r2 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnStartMap>;

        if $r2 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnStartMap> = $r3;

     label1:
        return r0;
    }

    public android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)
    {
        android.view.ViewPropertyAnimator r0;
        java.lang.Runnable r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: android.view.ViewPropertyAnimator;

        r1 := @parameter0: java.lang.Runnable;

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction> = r1;

        if r1 == null goto label1;

        $r2 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnEndMap>;

        if $r2 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnEndMap> = $r3;

     label1:
        return r0;
    }

    boolean hasActions()
    {
        android.view.ViewPropertyAnimator r0;
        java.lang.Runnable $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction>;

        if $r1 != null goto label1;

        $r2 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction>;

        if $r2 != null goto label1;

        $r3 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction>;

        if $r3 != null goto label1;

        $r4 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction>;

        if $r4 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void startAnimation()
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.ValueAnimator r1;
        java.util.ArrayList r2, $r7, $r9;
        int i0, i1, i2, $i5;
        android.view.ViewPropertyAnimator$NameValuesHolder r3;
        android.view.ViewPropertyAnimatorRT $r4, $r34;
        android.view.View $r5;
        float[] $r6;
        java.lang.Object $r8, $r31;
        android.view.ViewPropertyAnimator$PropertyBundle $r10;
        java.util.HashMap $r12, $r23, $r24, $r26, $r33;
        java.lang.Runnable $r13, $r14, $r15, $r16, $r21, $r22, $r29, $r32;
        android.view.ViewPropertyAnimator$AnimatorEventListener $r17, $r18;
        boolean $z0, $z1, $z2, $z3;
        android.animation.TimeInterpolator $r19;
        long $l3, $l4;

        r0 := @this: android.view.ViewPropertyAnimator;

        $r4 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimatorRT mRTBackend>;

        if $r4 == null goto label01;

        $r34 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimatorRT mRTBackend>;

        $z3 = virtualinvoke $r34.<android.view.ViewPropertyAnimatorRT: boolean startAnimation(android.view.ViewPropertyAnimator)>(r0);

        if $z3 == 0 goto label01;

        return;

     label01:
        $r5 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        virtualinvoke $r5.<android.view.View: void setHasTransientState(boolean)>(1);

        $r6 = newarray (float)[1];

        $r6[0] = 1.0F;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r6);

        $r7 = r0.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object clone()>();

        r2 = (java.util.ArrayList) $r8;

        $r9 = r0.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        i0 = 0;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label02:
        if i2 >= i1 goto label03;

        $r31 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (android.view.ViewPropertyAnimator$NameValuesHolder) $r31;

        $i5 = r3.<android.view.ViewPropertyAnimator$NameValuesHolder: int mNameConstant>;

        i0 = i0 | $i5;

        i2 = i2 + 1;

        goto label02;

     label03:
        $r12 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        $r10 = new android.view.ViewPropertyAnimator$PropertyBundle;

        specialinvoke $r10.<android.view.ViewPropertyAnimator$PropertyBundle: void <init>(int,java.util.ArrayList)>(i0, r2);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10);

        $r14 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction>;

        if $r14 == null goto label04;

        $r33 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorSetupMap>;

        $r32 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r32);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingSetupAction> = null;

     label04:
        $r13 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction>;

        if $r13 == null goto label05;

        $r26 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorCleanupMap>;

        $r29 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r29);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingCleanupAction> = null;

     label05:
        $r16 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction>;

        if $r16 == null goto label06;

        $r23 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnStartMap>;

        $r22 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r22);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnStartAction> = null;

     label06:
        $r15 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction>;

        if $r15 == null goto label07;

        $r24 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnEndMap>;

        $r21 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r21);

        r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mPendingOnEndAction> = null;

     label07:
        $r18 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator$AnimatorEventListener mAnimatorEventListener>;

        virtualinvoke r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r18);

        $r17 = r0.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator$AnimatorEventListener mAnimatorEventListener>;

        virtualinvoke r1.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r17);

        $z1 = r0.<android.view.ViewPropertyAnimator: boolean mStartDelaySet>;

        if $z1 == 0 goto label08;

        $l4 = r0.<android.view.ViewPropertyAnimator: long mStartDelay>;

        virtualinvoke r1.<android.animation.ValueAnimator: void setStartDelay(long)>($l4);

     label08:
        $z0 = r0.<android.view.ViewPropertyAnimator: boolean mDurationSet>;

        if $z0 == 0 goto label09;

        $l3 = r0.<android.view.ViewPropertyAnimator: long mDuration>;

        virtualinvoke r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l3);

     label09:
        $z2 = r0.<android.view.ViewPropertyAnimator: boolean mInterpolatorSet>;

        if $z2 == 0 goto label10;

        $r19 = r0.<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator mInterpolator>;

        virtualinvoke r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r19);

     label10:
        virtualinvoke r1.<android.animation.ValueAnimator: void start()>();

        return;
    }

    private void animateProperty(int, float)
    {
        android.view.ViewPropertyAnimator r0;
        int i0;
        float f0, f1, f2;

        r0 := @this: android.view.ViewPropertyAnimator;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 = specialinvoke r0.<android.view.ViewPropertyAnimator: float getValue(int)>(i0);

        f2 = f0 - f1;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float,float)>(i0, f1, f2);

        return;
    }

    private void animatePropertyBy(int, float)
    {
        android.view.ViewPropertyAnimator r0;
        int i0;
        float f0, f1;

        r0 := @this: android.view.ViewPropertyAnimator;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 = specialinvoke r0.<android.view.ViewPropertyAnimator: float getValue(int)>(i0);

        specialinvoke r0.<android.view.ViewPropertyAnimator: void animatePropertyBy(int,float,float)>(i0, f1, f0);

        return;
    }

    private void animatePropertyBy(int, float, float)
    {
        android.view.ViewPropertyAnimator r0;
        int i0, $i1, $i2;
        float f0, f1;
        android.animation.Animator r1, r4;
        java.util.Set r2;
        java.util.Iterator r3;
        android.view.ViewPropertyAnimator$PropertyBundle r5;
        java.util.HashMap $r6, $r12, $r16;
        android.view.ViewPropertyAnimator$NameValuesHolder $r7, r17;
        java.util.ArrayList $r8;
        java.lang.Runnable $r9, $r11;
        android.view.View $r10, $r13;
        java.lang.Object $r14, $r15;
        boolean $z2, $z3;

        r0 := @this: android.view.ViewPropertyAnimator;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r6 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        $i1 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        if $i1 <= 0 goto label4;

        r1 = null;

        $r12 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        r2 = virtualinvoke $r12.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.animation.Animator) $r14;

        $r16 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (android.view.ViewPropertyAnimator$PropertyBundle) $r15;

        $z3 = virtualinvoke r5.<android.view.ViewPropertyAnimator$PropertyBundle: boolean cancel(int)>(i0);

        if $z3 == 0 goto label2;

        $i2 = r5.<android.view.ViewPropertyAnimator$PropertyBundle: int mPropertyMask>;

        if $i2 != 0 goto label2;

        r1 = r4;

        goto label3;

     label2:
        goto label1;

     label3:
        if r1 == null goto label4;

        virtualinvoke r1.<android.animation.Animator: void cancel()>();

     label4:
        $r7 = new android.view.ViewPropertyAnimator$NameValuesHolder;

        specialinvoke $r7.<android.view.ViewPropertyAnimator$NameValuesHolder: void <init>(int,float,float)>(i0, f0, f1);

        r17 = $r7;

        $r8 = r0.<android.view.ViewPropertyAnimator: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

        $r10 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $r9 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mAnimationStarter>;

        virtualinvoke $r10.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r9);

        $r13 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $r11 = r0.<android.view.ViewPropertyAnimator: java.lang.Runnable mAnimationStarter>;

        virtualinvoke $r13.<android.view.View: void postOnAnimation(java.lang.Runnable)>($r11);

        return;
    }

    private void setValue(int, float)
    {
        android.view.ViewPropertyAnimator r0;
        int i0, $i1, $i2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.view.View$TransformationInfo r1;
        android.view.RenderNode r2;
        android.view.View $r3, $r4, $r5, $r6;

        r0 := @this: android.view.ViewPropertyAnimator;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r3 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        r1 = $r3.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r4 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        r2 = $r4.<android.view.View: android.view.RenderNode mRenderNode>;

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 4: goto label03;
            case 8: goto label07;
            case 16: goto label08;
            case 32: goto label04;
            case 64: goto label05;
            case 128: goto label06;
            case 256: goto label09;
            case 512: goto label10;
            case 1024: goto label11;
            case 2048: goto label12;
            default: goto label13;
        };

     label01:
        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationX(float)>(f0);

        goto label13;

     label02:
        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationY(float)>(f0);

        goto label13;

     label03:
        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationZ(float)>(f0);

        goto label13;

     label04:
        virtualinvoke r2.<android.view.RenderNode: boolean setRotation(float)>(f0);

        goto label13;

     label05:
        virtualinvoke r2.<android.view.RenderNode: boolean setRotationX(float)>(f0);

        goto label13;

     label06:
        virtualinvoke r2.<android.view.RenderNode: boolean setRotationY(float)>(f0);

        goto label13;

     label07:
        virtualinvoke r2.<android.view.RenderNode: boolean setScaleX(float)>(f0);

        goto label13;

     label08:
        virtualinvoke r2.<android.view.RenderNode: boolean setScaleY(float)>(f0);

        goto label13;

     label09:
        $r6 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $i2 = $r6.<android.view.View: int mLeft>;

        $f6 = (float) $i2;

        $f5 = f0 - $f6;

        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationX(float)>($f5);

        goto label13;

     label10:
        $r5 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $i1 = $r5.<android.view.View: int mTop>;

        $f3 = (float) $i1;

        $f4 = f0 - $f3;

        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationY(float)>($f4);

        goto label13;

     label11:
        $f1 = virtualinvoke r2.<android.view.RenderNode: float getElevation()>();

        $f2 = f0 - $f1;

        virtualinvoke r2.<android.view.RenderNode: boolean setTranslationZ(float)>($f2);

        goto label13;

     label12:
        r1.<android.view.View$TransformationInfo: float mAlpha> = f0;

        virtualinvoke r2.<android.view.RenderNode: boolean setAlpha(float)>(f0);

     label13:
        return;
    }

    private float getValue(int)
    {
        android.view.ViewPropertyAnimator r0;
        int i0, $i1, $i2;
        android.view.RenderNode r1;
        android.view.View $r2, $r3, $r5, $r6;
        android.view.View$TransformationInfo $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;

        r0 := @this: android.view.ViewPropertyAnimator;

        i0 := @parameter0: int;

        $r2 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        r1 = $r2.<android.view.View: android.view.RenderNode mRenderNode>;

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 4: goto label03;
            case 8: goto label07;
            case 16: goto label08;
            case 32: goto label04;
            case 64: goto label05;
            case 128: goto label06;
            case 256: goto label09;
            case 512: goto label10;
            case 1024: goto label11;
            case 2048: goto label12;
            default: goto label13;
        };

     label01:
        $f16 = virtualinvoke r1.<android.view.RenderNode: float getTranslationX()>();

        return $f16;

     label02:
        $f17 = virtualinvoke r1.<android.view.RenderNode: float getTranslationY()>();

        return $f17;

     label03:
        $f14 = virtualinvoke r1.<android.view.RenderNode: float getTranslationZ()>();

        return $f14;

     label04:
        $f13 = virtualinvoke r1.<android.view.RenderNode: float getRotation()>();

        return $f13;

     label05:
        $f10 = virtualinvoke r1.<android.view.RenderNode: float getRotationX()>();

        return $f10;

     label06:
        $f11 = virtualinvoke r1.<android.view.RenderNode: float getRotationY()>();

        return $f11;

     label07:
        $f15 = virtualinvoke r1.<android.view.RenderNode: float getScaleX()>();

        return $f15;

     label08:
        $f12 = virtualinvoke r1.<android.view.RenderNode: float getScaleY()>();

        return $f12;

     label09:
        $r6 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $i2 = $r6.<android.view.View: int mLeft>;

        $f7 = (float) $i2;

        $f9 = virtualinvoke r1.<android.view.RenderNode: float getTranslationX()>();

        $f8 = $f7 + $f9;

        return $f8;

     label10:
        $r5 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $i1 = $r5.<android.view.View: int mTop>;

        $f4 = (float) $i1;

        $f5 = virtualinvoke r1.<android.view.RenderNode: float getTranslationY()>();

        $f6 = $f4 + $f5;

        return $f6;

     label11:
        $f1 = virtualinvoke r1.<android.view.RenderNode: float getElevation()>();

        $f2 = virtualinvoke r1.<android.view.RenderNode: float getTranslationZ()>();

        $f3 = $f1 + $f2;

        return $f3;

     label12:
        $r3 = r0.<android.view.ViewPropertyAnimator: android.view.View mView>;

        $r4 = $r3.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r4.<android.view.View$TransformationInfo: float mAlpha>;

        return $f0;

     label13:
        return 0.0F;
    }

    static void access$100(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void startAnimation()>();

        return;
    }

    static java.util.HashMap access$200(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorSetupMap>;

        return $r1;
    }

    static java.util.HashMap access$300(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnStartMap>;

        return $r1;
    }

    static android.animation.Animator$AnimatorListener access$400(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener mListener>;

        return $r1;
    }

    static java.util.HashMap access$500(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorOnEndMap>;

        return $r1;
    }

    static java.util.HashMap access$600(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorCleanupMap>;

        return $r1;
    }

    static java.util.HashMap access$700(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: java.util.HashMap mAnimatorMap>;

        return $r1;
    }

    static void access$800(android.view.ViewPropertyAnimator, int, float)
    {
        android.view.ViewPropertyAnimator r0;
        int i0;
        float f0;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<android.view.ViewPropertyAnimator: void setValue(int,float)>(i0, f0);

        return;
    }

    static android.animation.ValueAnimator$AnimatorUpdateListener access$900(android.view.ViewPropertyAnimator)
    {
        android.view.ViewPropertyAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener $r1;

        r0 := @parameter0: android.view.ViewPropertyAnimator;

        $r1 = r0.<android.view.ViewPropertyAnimator: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.view.ViewPropertyAnimator: int TRANSFORM_MASK> = 2047;

        <android.view.ViewPropertyAnimator: int ALPHA> = 2048;

        <android.view.ViewPropertyAnimator: int Z> = 1024;

        <android.view.ViewPropertyAnimator: int Y> = 512;

        <android.view.ViewPropertyAnimator: int X> = 256;

        <android.view.ViewPropertyAnimator: int ROTATION_Y> = 128;

        <android.view.ViewPropertyAnimator: int ROTATION_X> = 64;

        <android.view.ViewPropertyAnimator: int ROTATION> = 32;

        <android.view.ViewPropertyAnimator: int SCALE_Y> = 16;

        <android.view.ViewPropertyAnimator: int SCALE_X> = 8;

        <android.view.ViewPropertyAnimator: int TRANSLATION_Z> = 4;

        <android.view.ViewPropertyAnimator: int TRANSLATION_Y> = 2;

        <android.view.ViewPropertyAnimator: int TRANSLATION_X> = 1;

        <android.view.ViewPropertyAnimator: int NONE> = 0;

        return;
    }
}
