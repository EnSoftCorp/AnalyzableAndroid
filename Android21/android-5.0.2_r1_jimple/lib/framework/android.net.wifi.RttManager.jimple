public class android.net.wifi.RttManager extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    public static final int RTT_TYPE_UNSPECIFIED;
    public static final int RTT_TYPE_ONE_SIDED;
    public static final int RTT_TYPE_11_V;
    public static final int RTT_TYPE_11_MC;
    public static final int RTT_PEER_TYPE_UNSPECIFIED;
    public static final int RTT_PEER_TYPE_AP;
    public static final int RTT_PEER_TYPE_STA;
    public static final int RTT_CHANNEL_WIDTH_20;
    public static final int RTT_CHANNEL_WIDTH_40;
    public static final int RTT_CHANNEL_WIDTH_80;
    public static final int RTT_CHANNEL_WIDTH_160;
    public static final int RTT_CHANNEL_WIDTH_80P80;
    public static final int RTT_CHANNEL_WIDTH_5;
    public static final int RTT_CHANNEL_WIDTH_10;
    public static final int RTT_CHANNEL_WIDTH_UNSPECIFIED;
    public static final int RTT_STATUS_SUCCESS;
    public static final int RTT_STATUS_FAILURE;
    public static final int RTT_STATUS_FAIL_NO_RSP;
    public static final int RTT_STATUS_FAIL_REJECTED;
    public static final int RTT_STATUS_FAIL_NOT_SCHEDULED_YET;
    public static final int RTT_STATUS_FAIL_TM_TIMEOUT;
    public static final int RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL;
    public static final int RTT_STATUS_FAIL_NO_CAPABILITY;
    public static final int RTT_STATUS_ABORTED;
    public static final int REASON_UNSPECIFIED;
    public static final int REASON_NOT_AVAILABLE;
    public static final int REASON_INVALID_LISTENER;
    public static final int REASON_INVALID_REQUEST;
    public static final java.lang.String DESCRIPTION_KEY;
    public static final int BASE;
    public static final int CMD_OP_START_RANGING;
    public static final int CMD_OP_STOP_RANGING;
    public static final int CMD_OP_FAILED;
    public static final int CMD_OP_SUCCEEDED;
    public static final int CMD_OP_ABORTED;
    private android.content.Context mContext;
    private android.net.wifi.IRttManager mService;
    private static final int INVALID_KEY;
    private static int sListenerKey;
    private static final android.util.SparseArray sListenerMap;
    private static final java.lang.Object sListenerMapLock;
    private static com.android.internal.util.AsyncChannel sAsyncChannel;
    private static java.util.concurrent.CountDownLatch sConnected;
    private static final java.lang.Object sThreadRefLock;
    private static int sThreadRefCount;
    private static android.os.HandlerThread sHandlerThread;

    public android.net.wifi.RttManager$Capabilities getCapabilities()
    {
        android.net.wifi.RttManager r0;
        android.net.wifi.RttManager$Capabilities $r1;

        r0 := @this: android.net.wifi.RttManager;

        $r1 = new android.net.wifi.RttManager$Capabilities;

        specialinvoke $r1.<android.net.wifi.RttManager$Capabilities: void <init>(android.net.wifi.RttManager)>(r0);

        return $r1;
    }

    public void startRanging(android.net.wifi.RttManager$RttParams[], android.net.wifi.RttManager$RttListener)
    {
        android.net.wifi.RttManager r0;
        android.net.wifi.RttManager$RttParams[] r1;
        android.net.wifi.RttManager$RttListener r2;
        android.net.wifi.RttManager$ParcelableRttParams r3, $r4;
        com.android.internal.util.AsyncChannel $r5;
        int $i0;

        r0 := @this: android.net.wifi.RttManager;

        r1 := @parameter0: android.net.wifi.RttManager$RttParams[];

        r2 := @parameter1: android.net.wifi.RttManager$RttListener;

        specialinvoke r0.<android.net.wifi.RttManager: void validateChannel()>();

        $r4 = new android.net.wifi.RttManager$ParcelableRttParams;

        specialinvoke $r4.<android.net.wifi.RttManager$ParcelableRttParams: void <init>(android.net.wifi.RttManager$RttParams[])>(r1);

        r3 = $r4;

        $r5 = <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel>;

        $i0 = staticinvoke <android.net.wifi.RttManager: int putListener(java.lang.Object)>(r2);

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(160256, 0, $i0, r3);

        return;
    }

    public void stopRanging(android.net.wifi.RttManager$RttListener)
    {
        android.net.wifi.RttManager r0;
        android.net.wifi.RttManager$RttListener r1;
        com.android.internal.util.AsyncChannel $r2;
        int $i0;

        r0 := @this: android.net.wifi.RttManager;

        r1 := @parameter0: android.net.wifi.RttManager$RttListener;

        specialinvoke r0.<android.net.wifi.RttManager: void validateChannel()>();

        $r2 = <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel>;

        $i0 = staticinvoke <android.net.wifi.RttManager: int removeListener(java.lang.Object)>(r1);

        virtualinvoke $r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>(160257, 0, $i0);

        return;
    }

    public void <init>(android.content.Context, android.net.wifi.IRttManager)
    {
        android.net.wifi.RttManager r0;
        android.content.Context r1;
        android.net.wifi.IRttManager r2;

        r0 := @this: android.net.wifi.RttManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.wifi.IRttManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.RttManager: android.content.Context mContext> = r1;

        r0.<android.net.wifi.RttManager: android.net.wifi.IRttManager mService> = r2;

        specialinvoke r0.<android.net.wifi.RttManager: void init()>();

        return;
    }

    private void init()
    {
        android.net.wifi.RttManager r0;
        java.lang.Object r1, $r6;
        android.os.Messenger r2;
        java.lang.Throwable r5, $r25;
        int $i0, $i1;
        java.lang.StringBuilder $r7, $r8, $r10;
        android.net.wifi.IRttManager $r9, $r12;
        java.lang.String $r11;
        android.os.HandlerThread $r13, $r17, $r19;
        java.util.concurrent.CountDownLatch $r14, $r22;
        com.android.internal.util.AsyncChannel $r15, $r20;
        android.net.wifi.RttManager$ServiceHandler $r16, r28;
        android.os.Looper $r18;
        android.content.Context $r21;
        java.lang.SecurityException $r23;
        android.os.RemoteException $r24;
        java.lang.InterruptedException $r26;

        r0 := @this: android.net.wifi.RttManager;

        $r6 = <android.net.wifi.RttManager: java.lang.Object sThreadRefLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $i0 = <android.net.wifi.RttManager: int sThreadRefCount>;

        $i1 = $i0 + 1;

        <android.net.wifi.RttManager: int sThreadRefCount> = $i1;

        if $i1 != 1 goto label12;

        r2 = null;

     label02:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get the messenger from ");

        $r9 = r0.<android.net.wifi.RttManager: android.net.wifi.IRttManager mService>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("RttManager", $r11);

        $r12 = r0.<android.net.wifi.RttManager: android.net.wifi.IRttManager mService>;

        r2 = interfaceinvoke $r12.<android.net.wifi.IRttManager: android.os.Messenger getMessenger()>();

     label03:
        goto label06;

     label04:
        $r24 := @caughtexception;

        goto label06;

     label05:
        $r23 := @caughtexception;

     label06:
        if r2 != null goto label08;

        <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel> = null;

        exitmonitor r1;

     label07:
        return;

     label08:
        $r13 = new android.os.HandlerThread;

        specialinvoke $r13.<android.os.HandlerThread: void <init>(java.lang.String)>("WifiScanner");

        <android.net.wifi.RttManager: android.os.HandlerThread sHandlerThread> = $r13;

        $r15 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r15.<com.android.internal.util.AsyncChannel: void <init>()>();

        <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel> = $r15;

        $r14 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r14.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        <android.net.wifi.RttManager: java.util.concurrent.CountDownLatch sConnected> = $r14;

        $r17 = <android.net.wifi.RttManager: android.os.HandlerThread sHandlerThread>;

        virtualinvoke $r17.<android.os.HandlerThread: void start()>();

        $r16 = new android.net.wifi.RttManager$ServiceHandler;

        $r19 = <android.net.wifi.RttManager: android.os.HandlerThread sHandlerThread>;

        $r18 = virtualinvoke $r19.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r16.<android.net.wifi.RttManager$ServiceHandler: void <init>(android.os.Looper)>($r18);

        r28 = $r16;

        $r20 = <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel>;

        $r21 = r0.<android.net.wifi.RttManager: android.content.Context mContext>;

        virtualinvoke $r20.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r21, r28, r2);

     label09:
        $r22 = <android.net.wifi.RttManager: java.util.concurrent.CountDownLatch sConnected>;

        virtualinvoke $r22.<java.util.concurrent.CountDownLatch: void await()>();

     label10:
        goto label12;

     label11:
        $r26 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RttManager", "interrupted wait at init");

     label12:
        exitmonitor r1;

     label13:
        goto label16;

     label14:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r1;

     label15:
        throw r5;

     label16:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.SecurityException from label02 to label03 with label05;
        catch java.lang.InterruptedException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label07 with label14;
        catch java.lang.Throwable from label08 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private void validateChannel()
    {
        android.net.wifi.RttManager r0;
        com.android.internal.util.AsyncChannel $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.net.wifi.RttManager;

        $r1 = <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No permission to access and change wifi or a bad initialization");

        throw $r2;

     label1:
        return;
    }

    private static int putListener(java.lang.Object)
    {
        java.lang.Object r0, r1, $r3;
        int i0, $i1, $i2;
        java.lang.Throwable r2, $r5;
        android.util.SparseArray $r4;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r3 = <android.net.wifi.RttManager: java.lang.Object sListenerMapLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $i1 = <android.net.wifi.RttManager: int sListenerKey>;

        $i2 = $i1 + 1;

        <android.net.wifi.RttManager: int sListenerKey> = $i2;

        i0 = $i1;

        if i0 == 0 goto label2;

        $r4 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r0);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return i0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static java.lang.Object getListener(int)
    {
        int i0;
        java.lang.Object r0, r1, $r3;
        java.lang.Throwable r2, $r5;
        android.util.SparseArray $r4;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r3 = <android.net.wifi.RttManager: java.lang.Object sListenerMapLock>;

        r0 = $r3;

        entermonitor $r3;

     label2:
        $r4 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        r1 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        exitmonitor r0;

     label3:
        return r1;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static int getListenerKey(java.lang.Object)
    {
        java.lang.Object r0, r1, $r3;
        int i0, $i1;
        java.lang.Throwable r2, $r6;
        android.util.SparseArray $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r3 = <android.net.wifi.RttManager: java.lang.Object sListenerMapLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        i0 = virtualinvoke $r4.<android.util.SparseArray: int indexOfValue(java.lang.Object)>(r0);

        if i0 != -1 goto label4;

        exitmonitor r1;

     label3:
        return 0;

     label4:
        $r5 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>(i0);

        exitmonitor r1;

     label5:
        return $i1;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static java.lang.Object removeListener(int)
    {
        int i0;
        java.lang.Object r0, r1, $r3;
        java.lang.Throwable r2, $r6;
        android.util.SparseArray $r4, $r5;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r3 = <android.net.wifi.RttManager: java.lang.Object sListenerMapLock>;

        r0 = $r3;

        entermonitor $r3;

     label2:
        $r4 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        r1 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r5 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r0;

     label3:
        return r1;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static int removeListener(java.lang.Object)
    {
        java.lang.Object r0, r1, $r3;
        int i0;
        java.lang.Throwable r2, $r5;
        android.util.SparseArray $r4;

        r0 := @parameter0: java.lang.Object;

        i0 = staticinvoke <android.net.wifi.RttManager: int getListenerKey(java.lang.Object)>(r0);

        if i0 != 0 goto label1;

        return i0;

     label1:
        $r3 = <android.net.wifi.RttManager: java.lang.Object sListenerMapLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = <android.net.wifi.RttManager: android.util.SparseArray sListenerMap>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static com.android.internal.util.AsyncChannel access$000()
    {
        com.android.internal.util.AsyncChannel $r0;

        $r0 = <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel>;

        return $r0;
    }

    static com.android.internal.util.AsyncChannel access$002(com.android.internal.util.AsyncChannel)
    {
        com.android.internal.util.AsyncChannel r0;

        r0 := @parameter0: com.android.internal.util.AsyncChannel;

        <android.net.wifi.RttManager: com.android.internal.util.AsyncChannel sAsyncChannel> = r0;

        return r0;
    }

    static java.util.concurrent.CountDownLatch access$100()
    {
        java.util.concurrent.CountDownLatch $r0;

        $r0 = <android.net.wifi.RttManager: java.util.concurrent.CountDownLatch sConnected>;

        return $r0;
    }

    static java.lang.Object access$200(int)
    {
        int i0;
        java.lang.Object $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.net.wifi.RttManager: java.lang.Object getListener(int)>(i0);

        return $r0;
    }

    static java.lang.Object access$300(int)
    {
        int i0;
        java.lang.Object $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <android.net.wifi.RttManager: java.lang.Object removeListener(int)>(i0);

        return $r0;
    }

    static void <clinit>()
    {
        android.util.SparseArray $r0;
        java.lang.Object $r1, $r2;

        <android.net.wifi.RttManager: int INVALID_KEY> = 0;

        <android.net.wifi.RttManager: int CMD_OP_ABORTED> = 160260;

        <android.net.wifi.RttManager: int CMD_OP_SUCCEEDED> = 160259;

        <android.net.wifi.RttManager: int CMD_OP_FAILED> = 160258;

        <android.net.wifi.RttManager: int CMD_OP_STOP_RANGING> = 160257;

        <android.net.wifi.RttManager: int CMD_OP_START_RANGING> = 160256;

        <android.net.wifi.RttManager: int BASE> = 160256;

        <android.net.wifi.RttManager: java.lang.String DESCRIPTION_KEY> = "android.net.wifi.RttManager.Description";

        <android.net.wifi.RttManager: int REASON_INVALID_REQUEST> = -4;

        <android.net.wifi.RttManager: int REASON_INVALID_LISTENER> = -3;

        <android.net.wifi.RttManager: int REASON_NOT_AVAILABLE> = -2;

        <android.net.wifi.RttManager: int REASON_UNSPECIFIED> = -1;

        <android.net.wifi.RttManager: int RTT_STATUS_ABORTED> = 8;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_NO_CAPABILITY> = 7;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL> = 6;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_TM_TIMEOUT> = 5;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_NOT_SCHEDULED_YET> = 4;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_REJECTED> = 3;

        <android.net.wifi.RttManager: int RTT_STATUS_FAIL_NO_RSP> = 2;

        <android.net.wifi.RttManager: int RTT_STATUS_FAILURE> = 1;

        <android.net.wifi.RttManager: int RTT_STATUS_SUCCESS> = 0;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_UNSPECIFIED> = -1;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_10> = 6;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_5> = 5;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_80P80> = 4;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_160> = 3;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_80> = 2;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_40> = 1;

        <android.net.wifi.RttManager: int RTT_CHANNEL_WIDTH_20> = 0;

        <android.net.wifi.RttManager: int RTT_PEER_TYPE_STA> = 2;

        <android.net.wifi.RttManager: int RTT_PEER_TYPE_AP> = 1;

        <android.net.wifi.RttManager: int RTT_PEER_TYPE_UNSPECIFIED> = 0;

        <android.net.wifi.RttManager: int RTT_TYPE_11_MC> = 4;

        <android.net.wifi.RttManager: int RTT_TYPE_11_V> = 2;

        <android.net.wifi.RttManager: int RTT_TYPE_ONE_SIDED> = 1;

        <android.net.wifi.RttManager: int RTT_TYPE_UNSPECIFIED> = 0;

        <android.net.wifi.RttManager: java.lang.String TAG> = "RttManager";

        <android.net.wifi.RttManager: boolean DBG> = 1;

        <android.net.wifi.RttManager: int sListenerKey> = 1;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        <android.net.wifi.RttManager: android.util.SparseArray sListenerMap> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.net.wifi.RttManager: java.lang.Object sListenerMapLock> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.net.wifi.RttManager: java.lang.Object sThreadRefLock> = $r2;

        return;
    }
}
