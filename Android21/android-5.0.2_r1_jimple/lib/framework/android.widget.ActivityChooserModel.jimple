public class android.widget.ActivityChooserModel extends android.database.DataSetObservable
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String TAG_HISTORICAL_RECORDS;
    private static final java.lang.String TAG_HISTORICAL_RECORD;
    private static final java.lang.String ATTRIBUTE_ACTIVITY;
    private static final java.lang.String ATTRIBUTE_TIME;
    private static final java.lang.String ATTRIBUTE_WEIGHT;
    public static final java.lang.String DEFAULT_HISTORY_FILE_NAME;
    public static final int DEFAULT_HISTORY_MAX_LENGTH;
    private static final int DEFAULT_ACTIVITY_INFLATION;
    private static final float DEFAULT_HISTORICAL_RECORD_WEIGHT;
    private static final java.lang.String HISTORY_FILE_EXTENSION;
    private static final int INVALID_INDEX;
    private static final java.lang.Object sRegistryLock;
    private static final java.util.Map sDataModelRegistry;
    private final java.lang.Object mInstanceLock;
    private final java.util.List mActivities;
    private final java.util.List mHistoricalRecords;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;
    private final android.content.Context mContext;
    private final java.lang.String mHistoryFileName;
    private android.content.Intent mIntent;
    private android.widget.ActivityChooserModel$ActivitySorter mActivitySorter;
    private int mHistoryMaxSize;
    private boolean mCanReadHistoricalData;
    private boolean mReadShareHistoryCalled;
    private boolean mHistoricalRecordsChanged;
    private boolean mReloadActivities;
    private android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy;

    public static android.widget.ActivityChooserModel get(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.Object r2, $r5, $r7;
        android.widget.ActivityChooserModel r3, $r8;
        java.lang.Throwable r4, $r11;
        java.util.Map $r6, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r5 = <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.widget.ActivityChooserModel) $r7;

        if r3 != null goto label2;

        $r8 = new android.widget.ActivityChooserModel;

        specialinvoke $r8.<android.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        r3 = $r8;

        $r9 = <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        exitmonitor r2;

     label3:
        return r3;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Context r1, $r8, $r9;
        java.lang.String r2, $r14;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5;
        android.widget.ActivityChooserModel$DataModelPackageMonitor $r6;
        android.widget.ActivityChooserModel$DefaultSorter $r7;
        boolean $z0, $z1;
        com.android.internal.content.PackageMonitor $r10;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.database.DataSetObservable: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mActivities> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords> = $r5;

        $r6 = new android.widget.ActivityChooserModel$DataModelPackageMonitor;

        specialinvoke $r6.<android.widget.ActivityChooserModel$DataModelPackageMonitor: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor> = $r6;

        $r7 = new android.widget.ActivityChooserModel$DefaultSorter;

        specialinvoke $r7.<android.widget.ActivityChooserModel$DefaultSorter: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = $r7;

        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = 50;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<android.widget.ActivityChooserModel: android.content.Context mContext> = $r8;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 != 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = $r14;

        goto label2;

     label1:
        r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName> = r2;

     label2:
        $r10 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r9 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        virtualinvoke $r10.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>($r9, null, 1);

        return;
    }

    public void setIntent(android.content.Intent)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Intent r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.Intent;

        $r4 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r5 != r1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent> = r1;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.Intent getIntent()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.content.Intent $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getActivityCount()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;
        int $i0;

        r0 := @this: android.widget.ActivityChooserModel;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.pm.ResolveInfo getActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r8;
        java.util.List $r4;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r6;
        android.content.pm.ResolveInfo $r7;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r5;

        $r7 = $r6.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getActivityIndex(android.content.pm.ResolveInfo)
    {
        android.widget.ActivityChooserModel r0;
        android.content.pm.ResolveInfo r1, $r8;
        java.lang.Object r2, $r6, $r7;
        java.util.List r3;
        int i0, i1;
        android.widget.ActivityChooserModel$ActivityResolveInfo r4;
        java.lang.Throwable r5, $r9;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        $r6 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r7;

        $r8 = r4.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        if $r8 != r1 goto label4;

        exitmonitor r2;

     label3:
        return i1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        return -1;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.content.Intent chooseActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r7, $r10;
        android.widget.ActivityChooserModel$ActivityResolveInfo r2;
        android.content.ComponentName r3, $r11;
        android.content.Intent r4, r5, $r8, $r18, $r19, $r24;
        boolean z0;
        java.lang.Throwable r6, $r25;
        java.util.List $r9;
        android.content.pm.ResolveInfo $r12, $r15;
        android.content.pm.ActivityInfo $r13, $r14;
        java.lang.String $r16, $r17;
        android.widget.ActivityChooserModel$OnChooseActivityListener $r20, $r23;
        long $l1;
        android.widget.ActivityChooserModel$HistoricalRecord $r22, r26;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        $r7 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r8 != null goto label3;

        exitmonitor r1;

     label2:
        return null;

     label3:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r9 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r10;

        $r11 = new android.content.ComponentName;

        $r12 = r2.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = r2.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r14 = $r15.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r14.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r17);

        r3 = $r11;

        $r19 = new android.content.Intent;

        $r18 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        specialinvoke $r19.<android.content.Intent: void <init>(android.content.Intent)>($r18);

        r4 = $r19;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

        $r20 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        if $r20 == null goto label5;

        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(android.content.Intent)>(r4);

        r5 = $r24;

        $r23 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy>;

        z0 = interfaceinvoke $r23.<android.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>(r0, r5);

        if z0 == 0 goto label5;

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r22 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r22.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r3, $l1, 1.0F);

        r26 = $r22;

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>(r26);

        exitmonitor r1;

     label6:
        return r4;

     label7:
        $r25 := @caughtexception;

        r6 = $r25;

        exitmonitor r1;

     label8:
        throw r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setOnChooseActivityListener(android.widget.ActivityChooserModel$OnChooseActivityListener)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$OnChooseActivityListener r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$OnChooseActivityListener;

        $r4 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.pm.ResolveInfo getDefaultActivity()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3, $r6;
        java.lang.Throwable r2, $r9;
        java.util.List $r4, $r5;
        boolean $z0;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r7;
        android.content.pm.ResolveInfo $r8;

        r0 := @this: android.widget.ActivityChooserModel;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r6;

        $r8 = $r7.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        exitmonitor r1;

     label2:
        return $r8;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDefaultActivity(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0;
        java.lang.Object r1, $r7, $r9, $r11;
        android.widget.ActivityChooserModel$ActivityResolveInfo r2, r3;
        float f0, $f1, $f2, $f3;
        android.content.ComponentName r4, $r12;
        android.widget.ActivityChooserModel$HistoricalRecord r5, $r18;
        java.lang.Throwable r6, $r20;
        java.util.List $r8, $r10;
        android.content.pm.ResolveInfo $r13, $r14;
        android.content.pm.ActivityInfo $r15, $r17;
        java.lang.String $r16, $r19;
        long $l1;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        $r7 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r7;

        entermonitor $r7;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r8 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r9;

        $r10 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (android.widget.ActivityChooserModel$ActivityResolveInfo) $r11;

        if r3 == null goto label2;

        $f3 = r3.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f1 = r2.<android.widget.ActivityChooserModel$ActivityResolveInfo: float weight>;

        $f2 = $f3 - $f1;

        f0 = $f2 + 5.0F;

        goto label3;

     label2:
        f0 = 1.0F;

     label3:
        $r12 = new android.content.ComponentName;

        $r13 = r2.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r15 = $r13.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r19 = $r15.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r14 = r2.<android.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo>;

        $r17 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r12.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r16);

        r4 = $r12;

        $r18 = new android.widget.ActivityChooserModel$HistoricalRecord;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r18.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r4, $l1, f0);

        r5 = $r18;

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)>(r5);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r1;

     label6:
        throw r6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void persistHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r7;
        android.widget.ActivityChooserModel$PersistHistoryAsyncTask $r2;
        java.lang.Object[] $r3;
        java.util.ArrayList $r4;
        java.util.List $r5;
        java.util.concurrent.Executor $r6;
        java.lang.IllegalStateException $r9;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled>;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No preceding call to #readHistoricalData");

        throw $r9;

     label1:
        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 != 0 goto label2;

        return;

     label2:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 0;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label3;

        $r2 = new android.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        specialinvoke $r2.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: void <init>(android.widget.ActivityChooserModel,android.widget.ActivityChooserModel$1)>(r0, null);

        $r6 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = new java.util.ArrayList;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r3[0] = $r4;

        $r7 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r3[1] = $r7;

        virtualinvoke $r2.<android.widget.ActivityChooserModel$PersistHistoryAsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r6, $r3);

     label3:
        return;
    }

    public void setActivitySorter(android.widget.ActivityChooserModel$ActivitySorter)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$ActivitySorter r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$ActivitySorter;

        $r4 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r5 != r1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter> = r1;

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setHistoryMaxSize(int)
    {
        android.widget.ActivityChooserModel r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.widget.ActivityChooserModel;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i1 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        if $i1 != i0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize> = i0;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        $z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int getHistoryMaxSize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: android.widget.ActivityChooserModel;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getHistorySize()
    {
        android.widget.ActivityChooserModel r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;
        int $i0;

        r0 := @this: android.widget.ActivityChooserModel;

        $r3 = r0.<android.widget.ActivityChooserModel: java.lang.Object mInstanceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.widget.ActivityChooserModel: void ensureConsistentState()>();

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.widget.ActivityChooserModel r0;
        com.android.internal.content.PackageMonitor $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.widget.ActivityChooserModel: com.android.internal.content.PackageMonitor mPackageMonitor>;

        virtualinvoke $r1.<com.android.internal.content.PackageMonitor: void unregister()>();

        return;
    }

    private void ensureConsistentState()
    {
        android.widget.ActivityChooserModel r0;
        boolean z0, $z1, z3;

        r0 := @this: android.widget.ActivityChooserModel;

        z0 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()>();

        $z1 = specialinvoke r0.<android.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()>();

        z3 = z0 | $z1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        if z3 == 0 goto label1;

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return;
    }

    private boolean sortActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$ActivitySorter $r1, $r6;
        android.content.Intent $r2, $r7;
        java.util.List $r3, $r4, $r5, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel$ActivitySorter mActivitySorter>;

        $r7 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        $r8 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        interfaceinvoke $r6.<android.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>($r7, $r8, $r9);

        return 1;

     label1:
        return 0;
    }

    private boolean loadActivitiesIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        java.util.List r1, $r5, $r13;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ActivityInfo r3;
        boolean $z0, $z1;
        android.content.Intent $r4, $r8;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        java.lang.Object $r9;
        java.lang.String $r10;
        android.content.pm.ApplicationInfo $r11;
        android.widget.ActivityChooserModel$ActivityResolveInfo $r12;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mReloadActivities>;

        if $z0 == 0 goto label4;

        $r4 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        if $r4 == null goto label4;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = 0;

        $r5 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        interfaceinvoke $r5.<java.util.List: void clear()>();

        $r6 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<android.widget.ActivityChooserModel: android.content.Intent mIntent>;

        r1 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r8, 0);

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.content.pm.ResolveInfo) $r9;

        r3 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = r3.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $i2 = staticinvoke <android.os.Process: int myUid()>();

        $r11 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = r3.<android.content.pm.ActivityInfo: boolean exported>;

        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>($r10, $i2, $i3, $z1);

        if $i4 != 0 goto label2;

        $r13 = r0.<android.widget.ActivityChooserModel: java.util.List mActivities>;

        $r12 = new android.widget.ActivityChooserModel$ActivityResolveInfo;

        specialinvoke $r12.<android.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(android.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>(r0, r2);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    private boolean readHistoricalDataIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;

        r0 := @this: android.widget.ActivityChooserModel;

        $z0 = r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged>;

        if $z1 == 0 goto label1;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 0;

        r0.<android.widget.ActivityChooserModel: boolean mReadShareHistoryCalled> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void readHistoricalDataImpl()>();

        return 1;

     label1:
        return 0;
    }

    private boolean addHisoricalRecord(android.widget.ActivityChooserModel$HistoricalRecord)
    {
        android.widget.ActivityChooserModel r0;
        android.widget.ActivityChooserModel$HistoricalRecord r1;
        boolean z0;
        java.util.List $r2;

        r0 := @this: android.widget.ActivityChooserModel;

        r1 := @parameter0: android.widget.ActivityChooserModel$HistoricalRecord;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        specialinvoke r0.<android.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: void persistHistoricalDataIfNeeded()>();

        specialinvoke r0.<android.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()>();

        virtualinvoke r0.<android.widget.ActivityChooserModel: void notifyChanged()>();

     label1:
        return z0;
    }

    private void pruneExcessiveHistoricalRecordsIfNeeded()
    {
        android.widget.ActivityChooserModel r0;
        int i0, i1, $i2, $i3;
        android.widget.ActivityChooserModel$HistoricalRecord r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.widget.ActivityChooserModel;

        $r2 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = r0.<android.widget.ActivityChooserModel: int mHistoryMaxSize>;

        i0 = $i2 - $i3;

        if i0 > 0 goto label1;

        return;

     label1:
        r0.<android.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged> = 1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r1 = (android.widget.ActivityChooserModel$HistoricalRecord) $r4;

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private void readHistoricalDataImpl()
    {
        android.widget.ActivityChooserModel r0;
        int i0, i2;
        java.util.List r1;
        java.lang.String r2, r3, $r6, $r8, $r9, $r10, $r11, $r12, $r18, $r20, $r24, $r26, $r29, $r31;
        long l1;
        float f0;
        android.widget.ActivityChooserModel$HistoricalRecord r4, $r13;
        java.lang.Throwable r5, $r23;
        android.content.Context $r7;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParserException $r14, $r15, $r17, r38;
        java.lang.StringBuilder $r16, $r19, $r21, $r25, $r30, $r32;
        java.io.IOException $r22, $r27, $r28, $r33, $r34, r39;
        java.io.FileNotFoundException $r35;
        java.io.FileInputStream r36;
        org.xmlpull.v1.XmlPullParser r37;

        r0 := @this: android.widget.ActivityChooserModel;

     label01:
        $r7 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        $r6 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        r36 = virtualinvoke $r7.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r6);

     label02:
        goto label04;

     label03:
        $r35 := @caughtexception;

        return;

     label04:
        r37 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r36, null);

        i0 = 0;

     label05:
        if i0 == 1 goto label06;

        if i0 == 2 goto label06;

        i0 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label05;

     label06:
        $r8 = "historical-records";

        $r9 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label07;

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file does not start with historical-records tag.");

        throw $r17;

     label07:
        r1 = r0.<android.widget.ActivityChooserModel: java.util.List mHistoricalRecords>;

        interfaceinvoke r1.<java.util.List: void clear()>();

     label08:
        i2 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 != 1 goto label09;

        goto label12;

     label09:
        if i2 == 3 goto label08;

        if i2 != 4 goto label10;

        goto label08;

     label10:
        r2 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = "historical-record";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label11;

        $r14 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r14.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file not well-formed.");

        throw $r14;

     label11:
        r3 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "activity");

        $r11 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "time");

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        $r12 = interfaceinvoke r37.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "weight");

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r12);

        $r13 = new android.widget.ActivityChooserModel$HistoricalRecord;

        specialinvoke $r13.<android.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>(r3, l1, f0);

        r4 = $r13;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label08;

     label12:
        if r36 == null goto label32;

     label13:
        virtualinvoke r36.<java.io.FileInputStream: void close()>();

     label14:
        goto label32;

     label15:
        $r34 := @caughtexception;

        goto label32;

     label16:
        $r15 := @caughtexception;

        r38 = $r15;

        $r20 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r18 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r20, $r24, r38);

     label17:
        if r36 == null goto label32;

     label18:
        virtualinvoke r36.<java.io.FileInputStream: void close()>();

     label19:
        goto label32;

     label20:
        $r27 := @caughtexception;

        goto label32;

     label21:
        $r28 := @caughtexception;

        r39 = $r28;

        $r26 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading historical recrod file: ");

        $r31 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r26, $r29, r39);

     label22:
        if r36 == null goto label32;

     label23:
        virtualinvoke r36.<java.io.FileInputStream: void close()>();

     label24:
        goto label32;

     label25:
        $r22 := @caughtexception;

        goto label32;

     label26:
        $r23 := @caughtexception;

        r5 = $r23;

     label27:
        if r36 == null goto label31;

     label28:
        virtualinvoke r36.<java.io.FileInputStream: void close()>();

     label29:
        goto label31;

     label30:
        $r33 := @caughtexception;

     label31:
        throw r5;

     label32:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label13 to label14 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label12 with label16;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label04 to label12 with label21;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label04 to label12 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    static android.content.Context access$300(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <android.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        return $r0;
    }

    static java.lang.String access$500(android.widget.ActivityChooserModel)
    {
        android.widget.ActivityChooserModel r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        $r1 = r0.<android.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        return $r1;
    }

    static boolean access$602(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = z0;

        return z0;
    }

    static boolean access$702(android.widget.ActivityChooserModel, boolean)
    {
        android.widget.ActivityChooserModel r0;
        boolean z0;

        r0 := @parameter0: android.widget.ActivityChooserModel;

        z0 := @parameter1: boolean;

        r0.<android.widget.ActivityChooserModel: boolean mReloadActivities> = z0;

        return z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;

        <android.widget.ActivityChooserModel: int INVALID_INDEX> = -1;

        <android.widget.ActivityChooserModel: java.lang.String HISTORY_FILE_EXTENSION> = ".xml";

        <android.widget.ActivityChooserModel: float DEFAULT_HISTORICAL_RECORD_WEIGHT> = 1.0F;

        <android.widget.ActivityChooserModel: int DEFAULT_ACTIVITY_INFLATION> = 5;

        <android.widget.ActivityChooserModel: int DEFAULT_HISTORY_MAX_LENGTH> = 50;

        <android.widget.ActivityChooserModel: java.lang.String DEFAULT_HISTORY_FILE_NAME> = "activity_choser_model_history.xml";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_WEIGHT> = "weight";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_TIME> = "time";

        <android.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_ACTIVITY> = "activity";

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORD> = "historical-record";

        <android.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORDS> = "historical-records";

        <android.widget.ActivityChooserModel: boolean DEBUG> = 0;

        $r0 = class "android/widget/ActivityChooserModel";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.widget.ActivityChooserModel: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <android.widget.ActivityChooserModel: java.lang.Object sRegistryLock> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.widget.ActivityChooserModel: java.util.Map sDataModelRegistry> = $r3;

        return;
    }
}
