public abstract class android.widget.AdapterViewAnimator extends android.widget.AdapterView implements android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback, android.widget.Advanceable
{
    private static final java.lang.String TAG;
    int mWhichChild;
    private int mRestoreWhichChild;
    boolean mAnimateFirstTime;
    int mActiveOffset;
    int mMaxNumActiveViews;
    java.util.HashMap mViewsMap;
    java.util.ArrayList mPreviousViews;
    int mCurrentWindowStart;
    int mCurrentWindowEnd;
    int mCurrentWindowStartUnbounded;
    android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver;
    android.widget.Adapter mAdapter;
    android.widget.RemoteViewsAdapter mRemoteViewsAdapter;
    boolean mDeferNotifyDataSetChanged;
    boolean mFirstTime;
    boolean mLoopViews;
    int mReferenceChildWidth;
    int mReferenceChildHeight;
    android.animation.ObjectAnimator mInAnimation;
    android.animation.ObjectAnimator mOutAnimation;
    private int mTouchMode;
    static final int TOUCH_MODE_NONE;
    static final int TOUCH_MODE_DOWN_IN_CURRENT_VIEW;
    static final int TOUCH_MODE_HANDLED;
    private java.lang.Runnable mPendingCheckForTap;
    private static final int DEFAULT_ANIMATION_DURATION;

    public void <init>(android.content.Context)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3;
        android.content.res.TypedArray r3;
        boolean z0, $z1;
        java.util.HashMap $r4;
        int[] $r5;
        android.animation.ObjectAnimator $r6, $r7;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = 0;

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = -1;

        r0.<android.widget.AdapterViewAnimator: boolean mAnimateFirstTime> = 1;

        r0.<android.widget.AdapterViewAnimator: int mActiveOffset> = 0;

        r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews> = 1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap> = $r4;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = 0;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = -1;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded> = 0;

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AdapterViewAnimator: boolean mFirstTime> = 1;

        r0.<android.widget.AdapterViewAnimator: boolean mLoopViews> = 1;

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth> = -1;

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight> = -1;

        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        $r5 = <com.android.internal.R$styleable: int[] AdapterViewAnimator>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i0, i1);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i2 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>(r1, i2);

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>($r6);

     label2:
        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i3 <= 0 goto label3;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>(r1, i3);

        goto label4;

     label3:
        $r7 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>($r7);

     label4:
        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>(z0);

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        r0.<android.widget.AdapterViewAnimator: boolean mLoopViews> = $z1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.AdapterViewAnimator: void initViewAnimator()>();

        return;
    }

    private void initViewAnimator()
    {
        android.widget.AdapterViewAnimator r0;
        java.util.ArrayList $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews> = $r1;

        return;
    }

    void configureViewAnimator(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, $i2;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 - 1;

        if i1 <= $i2 goto label1;

     label1:
        r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews> = i0;

        r0.<android.widget.AdapterViewAnimator: int mActiveOffset> = i1;

        $r1 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void removeAllViewsInLayout()>();

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = 0;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = -1;

        return;
    }

    void transformViewForTransition(int, int, android.view.View, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1;
        android.view.View r1;
        boolean z0;
        android.animation.ObjectAnimator $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        if i0 != -1 goto label1;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        virtualinvoke $r4.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

        $r5 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void start()>();

        goto label2;

     label1:
        if i1 != -1 goto label2;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

        $r3 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        virtualinvoke $r3.<android.animation.ObjectAnimator: void start()>();

     label2:
        return;
    }

    android.animation.ObjectAnimator getDefaultInAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;
        float[] $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(null, "alpha", $r2);

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(200L);

        return r1;
    }

    android.animation.ObjectAnimator getDefaultOutAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;
        float[] $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r2 = newarray (float)[2];

        $r2[0] = 1.0F;

        $r2[1] = 0.0F;

        r1 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(null, "alpha", $r2);

        virtualinvoke r1.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(200L);

        return r1;
    }

    public void setDisplayedChild(int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>(i0, 1);

        return;
    }

    private void setDisplayedChild(int, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, $z3, $z4, $z5;
        android.widget.Adapter $r1;
        android.view.View $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label9;

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = i0;

        $i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        if i0 < $i1 goto label3;

        $z5 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z5 == 0 goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i5 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        $i6 = $i5 - 1;

     label2:
        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = $i6;

        goto label6;

     label3:
        if i0 >= 0 goto label6;

        $z4 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z4 == 0 goto label4;

        $i3 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        $i4 = $i3 - 1;

        goto label5;

     label4:
        $i4 = 0;

     label5:
        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = $i4;

     label6:
        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getFocusedChild()>();

        if $r2 == null goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        z1 = $z3;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>($i2, z0);

        if z1 == 0 goto label9;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean requestFocus(int)>(2);

     label9:
        return;
    }

    void applyTransformForChildAtIndex(android.view.View, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return;
    }

    public int getDisplayedChild()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        return $i0;
    }

    public void showNext()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0, $i1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        $i1 = $i0 + 1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>($i1);

        return;
    }

    public void showPrevious()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0, $i1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        $i1 = $i0 - 1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>($i1);

        return;
    }

    int modulo(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $i2 = i0 % i1;

        $i3 = i1 + $i2;

        $i4 = $i3 % i1;

        return $i4;

     label1:
        return 0;
    }

    android.view.View getViewAtRelativeIndex(int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.Adapter $r1;
        java.util.HashMap $r2, $r5;
        java.lang.Integer $r3, $r6;
        java.lang.Object $r4, $r7;
        android.view.View $r8;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r9;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        $i3 = $i2 - 1;

        if i0 > $i3 goto label1;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label1;

        $i4 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded>;

        $i5 = $i4 + i0;

        $i6 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>($i5, $i6);

        $r2 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        $r5 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r7;

        $r8 = $r9.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        return $r8;

     label1:
        return null;
    }

    int getNumActiveViews()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label1;

        $i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $i3 = $i1 + 1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        return $i4;

     label1:
        $i0 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        return $i0;
    }

    int getWindowSize()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, $i1, $i2, $i3;
        android.widget.Adapter $r1;
        boolean $z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r1 == null goto label2;

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        if i0 > $i1 goto label1;

        $z0 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mMaxNumActiveViews>;

        $i3 = i0 * $i2;

        return $i3;

     label1:
        return i0;

     label2:
        return 0;
    }

    private android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1, $r7;
        java.util.Iterator r2;
        android.widget.AdapterViewAnimator$ViewAndMetaData r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r6;

        $r7 = r3.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        if $r7 != r1 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2, r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r2 instanceof android.view.ViewGroup$LayoutParams;

        if $z0 == 0 goto label1;

        r3 = r2;

        return r3;

     label1:
        $r4 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r4.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(0, 0);

        return $r4;
    }

    void refreshChildren()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.view.View r1, $r11;
        android.widget.FrameLayout r2;
        android.widget.Adapter $r3, $r4;
        java.util.HashMap $r5, $r8;
        boolean $z0;
        java.lang.Integer $r6, $r7;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r9;
        java.lang.Object $r10;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r3 != null goto label1;

        return;

     label1:
        i0 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart>;

     label2:
        $i3 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        if i0 > $i3 goto label5;

        $i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i0, $i4);

        i2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $i5 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i0, i2);

        r1 = interfaceinvoke $r4.<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>($i5, null, r0);

        $i6 = virtualinvoke r1.<android.view.View: int getImportantForAccessibility()>();

        if $i6 != 0 goto label3;

        virtualinvoke r1.<android.view.View: void setImportantForAccessibility(int)>(1);

     label3:
        $r5 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r8 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r10;

        $r11 = $r9.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        r2 = (android.widget.FrameLayout) $r11;

        if r1 == null goto label4;

        virtualinvoke r2.<android.widget.FrameLayout: void removeAllViewsInLayout()>();

        virtualinvoke r2.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        return;
    }

    android.widget.FrameLayout getFrameForChild()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.FrameLayout $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = new android.widget.FrameLayout;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.content.Context mContext>;

        specialinvoke $r1.<android.widget.FrameLayout: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    void showOnly(int, boolean)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, z11;
        android.view.View r1, r5, r6, r7, $r26;
        android.view.ViewGroup r2;
        java.util.Iterator r3;
        java.lang.Integer r4, $r16, $r18, $r22, $r31, $r32, $r36, $r41, $r43;
        long l7;
        android.widget.Adapter $r8, $r20, $r21;
        android.widget.FrameLayout r9;
        java.util.ArrayList $r10, $r11, $r35, $r52, $r54, $r59;
        java.util.Set $r12;
        java.util.HashMap $r13, $r17, $r19, $r23, $r27, $r30, $r39, $r44, $r45, $r51, $r53, $r56;
        android.widget.RemoteViewsAdapter $r14, $r15;
        java.lang.Object $r24, $r33, $r37, $r40, $r48, $r49, $r50, $r57, $r60, $r61;
        android.widget.AdapterViewAnimator$ViewAndMetaData $r25, $r28, $r34, $r38, $r42, $r46, $r47, $r58;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r8 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r8 != null goto label01;

        return;

     label01:
        i1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getCount()>();

        if i1 != 0 goto label02;

        return;

     label02:
        i2 = 0;

     label03:
        $r10 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $i8 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i2 >= $i8 goto label05;

        $r53 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r52 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r60 = virtualinvoke $r52.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r61 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r60);

        $r58 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r61;

        r1 = $r58.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r56 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r59 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r57 = virtualinvoke $r59.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r57);

        virtualinvoke r1.<android.view.View: void clearAnimation()>();

        $z10 = r1 instanceof android.view.ViewGroup;

        if $z10 == 0 goto label04;

        r2 = (android.view.ViewGroup) r1;

        virtualinvoke r2.<android.view.ViewGroup: void removeAllViewsInLayout()>();

     label04:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r1, -1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void removeViewInLayout(android.view.View)>(r1);

        i2 = i2 + 1;

        goto label03;

     label05:
        $r11 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

        $i10 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        i25 = i0 - $i10;

        $i9 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getNumActiveViews()>();

        $i11 = i25 + $i9;

        i26 = $i11 - 1;

        i27 = staticinvoke <java.lang.Math: int max(int,int)>(0, i25);

        $i12 = i1 - 1;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i12, i26);

        $z3 = r0.<android.widget.AdapterViewAnimator: boolean mLoopViews>;

        if $z3 == 0 goto label06;

        i27 = i25;

        i3 = i26;

     label06:
        $i14 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i27, $i14);

        $i13 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i5 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i3, $i13);

        z1 = 0;

        if i4 <= i5 goto label07;

        z1 = 1;

     label07:
        $r13 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r12 = virtualinvoke $r13.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r49 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r49;

        z2 = 0;

        if z1 != 0 goto label10;

        $i21 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i21 < i4 goto label09;

        $i22 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i22 <= i5 goto label10;

     label09:
        z2 = 1;

        goto label11;

     label10:
        if z1 == 0 goto label11;

        $i23 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i23 <= i5 goto label11;

        $i24 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i24 >= i4 goto label11;

        z2 = 1;

     label11:
        if z2 == 0 goto label12;

        $r51 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r50 = virtualinvoke $r51.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r46 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r50;

        r5 = $r46.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r45 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r48 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r47 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r48;

        i6 = $r47.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex>;

        $r54 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        virtualinvoke $r54.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(i6, -1, r5, z0);

     label12:
        goto label08;

     label13:
        $i16 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart>;

        if i27 != $i16 goto label14;

        $i19 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        if i3 != $i19 goto label14;

        $i20 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded>;

        if i25 == $i20 goto label24;

     label14:
        i28 = i27;

     label15:
        if i28 > i3 goto label23;

        $i18 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getWindowSize()>();

        i29 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i28, $i18);

        $r17 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $z6 = virtualinvoke $r17.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r16);

        if $z6 == 0 goto label16;

        $r44 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r40 = virtualinvoke $r44.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r41);

        $r42 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r40;

        i30 = $r42.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex>;

        goto label17;

     label16:
        i30 = -1;

     label17:
        i31 = i28 - i25;

        $r19 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $z5 = virtualinvoke $r19.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r18);

        if $z5 == 0 goto label18;

        $r35 = r0.<android.widget.AdapterViewAnimator: java.util.ArrayList mPreviousViews>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $z7 = virtualinvoke $r35.<java.util.ArrayList: boolean contains(java.lang.Object)>($r43);

        if $z7 != 0 goto label18;

        $z8 = 1;

        goto label19;

     label18:
        $z8 = 0;

     label19:
        z11 = $z8;

        if z11 == 0 goto label20;

        $r27 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r37 = virtualinvoke $r27.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r36);

        $r38 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r37;

        r7 = $r38.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        $r39 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r33 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r32);

        $r34 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r33;

        $r34.<android.widget.AdapterViewAnimator$ViewAndMetaData: int relativeIndex> = i31;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r7, i31);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(i30, i31, r7, z0);

        goto label22;

     label20:
        i32 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>(i28, i1);

        $r21 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        r6 = interfaceinvoke $r21.<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i32, null, r0);

        $r20 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        l7 = interfaceinvoke $r20.<android.widget.Adapter: long getItemId(int)>(i32);

        r9 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>();

        if r6 == null goto label21;

        virtualinvoke r9.<android.widget.FrameLayout: void addView(android.view.View)>(r6);

     label21:
        $r23 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r28 = new android.widget.AdapterViewAnimator$ViewAndMetaData;

        specialinvoke $r28.<android.widget.AdapterViewAnimator$ViewAndMetaData: void <init>(android.widget.AdapterViewAnimator,android.view.View,int,int,long)>(r0, r9, i31, i32, l7);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r28);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void addChild(android.view.View)>(r9);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>(r9, i31);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>(-1, i31, r9, z0);

     label22:
        $r30 = r0.<android.widget.AdapterViewAnimator: java.util.HashMap mViewsMap>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i29);

        $r24 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r31);

        $r25 = (android.widget.AdapterViewAnimator$ViewAndMetaData) $r24;

        $r26 = $r25.<android.widget.AdapterViewAnimator$ViewAndMetaData: android.view.View view>;

        virtualinvoke $r26.<android.view.View: void bringToFront()>();

        i28 = i28 + 1;

        goto label15;

     label23:
        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart> = i27;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd> = i3;

        r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStartUnbounded> = i25;

        $r14 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r14 == null goto label24;

        $i15 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowStart>;

        i33 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>($i15, i1);

        $i17 = r0.<android.widget.AdapterViewAnimator: int mCurrentWindowEnd>;

        i34 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int modulo(int,int)>($i17, i1);

        $r15 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r15.<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>(i33, i34);

     label24:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void requestLayout()>();

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void invalidate()>();

        return;
    }

    private void addChild(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)>(r1);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, -1, $r2);

        $i1 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        if $i1 == -1 goto label1;

        $i4 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        if $i4 != -1 goto label2;

     label1:
        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i0);

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth> = $i2;

        $i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight> = $i3;

     label2:
        return;
    }

    void showTapFeedback(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(1);

        return;
    }

    void hideTapFeedback(android.view.View)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.View;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

        return;
    }

    void cancelHandleClick()
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>(r1);

     label1:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i3, $i4;
        boolean z0, $z1, $z3;
        android.view.View r2, r10, r11;
        android.widget.AdapterViewAnimator$ViewAndMetaData r3;
        android.os.Handler r4;
        float $f0, $f1, $f2, $f3;
        java.lang.Runnable $r5, $r6, $r9;
        long $l2, $l5;
        android.widget.AdapterViewAnimator$CheckForTap $r7;
        android.widget.AdapterViewAnimator$1 $r8;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 0;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            case 2: goto label03;
            case 3: goto label08;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label04;
            default: goto label10;
        };

     label01:
        r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if r2 == null goto label10;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>($f0, $f1, r2, null);

        if $z1 == 0 goto label10;

        $r5 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        if $r5 != null goto label02;

        $r7 = new android.widget.AdapterViewAnimator$CheckForTap;

        specialinvoke $r7.<android.widget.AdapterViewAnimator$CheckForTap: void <init>(android.widget.AdapterViewAnimator)>(r0);

        r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap> = $r7;

     label02:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 1;

        $r6 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l2 = (long) $i1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean postDelayed(java.lang.Runnable,long)>($r6, $l2);

        goto label10;

     label03:
        goto label10;

     label04:
        goto label10;

     label05:
        $i3 = r0.<android.widget.AdapterViewAnimator: int mTouchMode>;

        if $i3 != 1 goto label07;

        r10 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        r3 = specialinvoke r0.<android.widget.AdapterViewAnimator: android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)>(r10);

        if r10 == null goto label07;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z3 = virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>($f3, $f2, r10, null);

        if $z3 == 0 goto label07;

        r4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.os.Handler getHandler()>();

        if r4 == null goto label06;

        $r9 = r0.<android.widget.AdapterViewAnimator: java.lang.Runnable mPendingCheckForTap>;

        virtualinvoke r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r9);

     label06:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showTapFeedback(android.view.View)>(r10);

        $r8 = new android.widget.AdapterViewAnimator$1;

        specialinvoke $r8.<android.widget.AdapterViewAnimator$1: void <init>(android.widget.AdapterViewAnimator,android.view.View,android.widget.AdapterViewAnimator$ViewAndMetaData)>(r0, r10, r3);

        $i4 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l5 = (long) $i4;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean postDelayed(java.lang.Runnable,long)>($r8, $l5);

        z0 = 1;

     label07:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

        goto label10;

     label08:
        r11 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if r11 == null goto label09;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>(r11);

     label09:
        r0.<android.widget.AdapterViewAnimator: int mTouchMode> = 0;

     label10:
        return z0;
    }

    private void measureChildren()
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getChildCount()>();

        $i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getMeasuredWidth()>();

        $i5 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i7 = $i4 - $i5;

        $i6 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        i1 = $i7 - $i6;

        $i8 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getMeasuredHeight()>();

        $i9 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i11 = $i8 - $i9;

        $i10 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        i2 = $i11 - $i10;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getChildAt(int)>(i3);

        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i1, 1073741824);

        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i13, $i12);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        boolean z0, $z1;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $i7 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        if $i7 == -1 goto label01;

        $i26 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        if $i26 == -1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if i5 != 0 goto label05;

        if z0 == 0 goto label03;

        $i23 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        $i20 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i25 = $i23 + $i20;

        $i22 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        $i24 = $i25 + $i22;

        goto label04;

     label03:
        $i24 = 0;

     label04:
        i3 = $i24;

        goto label07;

     label05:
        if i5 != -2147483648 goto label07;

        if z0 == 0 goto label07;

        $i19 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildHeight>;

        $i16 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i21 = $i19 + $i16;

        $i18 = r0.<android.widget.AdapterViewAnimator: int mPaddingBottom>;

        i6 = $i21 + $i18;

        if i6 <= i3 goto label06;

        i3 = i3 | 16777216;

        goto label07;

     label06:
        i3 = i6;

     label07:
        if i4 != 0 goto label10;

        if z0 == 0 goto label08;

        $i12 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        $i13 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i14 = $i12 + $i13;

        $i15 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        $i17 = $i14 + $i15;

        goto label09;

     label08:
        $i17 = 0;

     label09:
        i2 = $i17;

        goto label12;

     label10:
        if i5 != -2147483648 goto label12;

        if z0 == 0 goto label12;

        $i9 = r0.<android.widget.AdapterViewAnimator: int mReferenceChildWidth>;

        $i8 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i10 = $i9 + $i8;

        $i11 = r0.<android.widget.AdapterViewAnimator: int mPaddingRight>;

        i27 = $i10 + $i11;

        if i27 <= i2 goto label11;

        i2 = i2 | 16777216;

        goto label12;

     label11:
        i2 = i27;

     label12:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setMeasuredDimension(int,int)>(i2, i3);

        specialinvoke r0.<android.widget.AdapterViewAnimator: void measureChildren()>();

        return;
    }

    void checkForAndHandleDataChanged()
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0;
        android.widget.AdapterViewAnimator$2 $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        z0 = r0.<android.widget.AdapterViewAnimator: boolean mDataChanged>;

        if z0 == 0 goto label1;

        $r1 = new android.widget.AdapterViewAnimator$2;

        specialinvoke $r1.<android.widget.AdapterViewAnimator$2: void <init>(android.widget.AdapterViewAnimator)>(r0);

        virtualinvoke r0.<android.widget.AdapterViewAnimator: boolean post(java.lang.Runnable)>($r1);

     label1:
        r0.<android.widget.AdapterViewAnimator: boolean mDataChanged> = 0;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void checkForAndHandleDataChanged()>();

        i4 = virtualinvoke r0.<android.widget.AdapterViewAnimator: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getChildAt(int)>(i5);

        $i8 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i9 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i6 = $i8 + $i9;

        $i10 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        $i12 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i7 = $i10 + $i12;

        $i13 = r0.<android.widget.AdapterViewAnimator: int mPaddingLeft>;

        $i11 = r0.<android.widget.AdapterViewAnimator: int mPaddingTop>;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i13, $i11, i6, i7);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AdapterViewAnimator r0;
        android.os.Parcelable r1;
        android.widget.RemoteViewsAdapter $r2, $r4;
        android.widget.AdapterViewAnimator$SavedState $r3;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r2 == null goto label1;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r4.<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>();

     label1:
        $r3 = new android.widget.AdapterViewAnimator$SavedState;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        specialinvoke $r3.<android.widget.AdapterViewAnimator$SavedState: void <init>(android.os.Parcelable,int)>(r1, $i0);

        return $r3;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AdapterViewAnimator r0;
        android.os.Parcelable r1, $r3;
        android.widget.AdapterViewAnimator$SavedState r2;
        int $i0, $i1, $i2;
        android.widget.RemoteViewsAdapter $r4;
        android.widget.Adapter $r5;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.AdapterViewAnimator$SavedState) r1;

        $r3 = virtualinvoke r2.<android.widget.AdapterViewAnimator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $i0 = r2.<android.widget.AdapterViewAnimator$SavedState: int whichChild>;

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = $i0;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r4 == null goto label1;

        $r5 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r5 != null goto label1;

        $i2 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = $i2;

        goto label2;

     label1:
        $i1 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>($i1, 0);

     label2:
        return;
    }

    public android.view.View getCurrentView()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>($i0);

        return $r1;
    }

    public android.animation.ObjectAnimator getInAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation>;

        return $r1;
    }

    public void setInAnimation(android.animation.ObjectAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.animation.ObjectAnimator;

        r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mInAnimation> = r1;

        return;
    }

    public android.animation.ObjectAnimator getOutAnimation()
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation>;

        return $r1;
    }

    public void setOutAnimation(android.animation.ObjectAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        android.animation.ObjectAnimator r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.animation.ObjectAnimator;

        r0.<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator mOutAnimation> = r1;

        return;
    }

    public void setInAnimation(android.content.Context, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        int i0;
        android.animation.Animator $r2;
        android.animation.ObjectAnimator $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r1, i0);

        $r3 = (android.animation.ObjectAnimator) $r2;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>($r3);

        return;
    }

    public void setOutAnimation(android.content.Context, int)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Context r1;
        int i0;
        android.animation.Animator $r2;
        android.animation.ObjectAnimator $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>(r1, i0);

        $r3 = (android.animation.ObjectAnimator) $r2;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>($r3);

        return;
    }

    public void setAnimateFirstView(boolean)
    {
        android.widget.AdapterViewAnimator r0;
        boolean z0;

        r0 := @this: android.widget.AdapterViewAnimator;

        z0 := @parameter0: boolean;

        r0.<android.widget.AdapterViewAnimator: boolean mAnimateFirstTime> = z0;

        return;
    }

    public int getBaseline()
    {
        android.widget.AdapterViewAnimator r0;
        android.view.View $r1, $r2;
        int $i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>();

        $i0 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<android.widget.AdapterView: int getBaseline()>();

     label2:
        return $i0;
    }

    public android.widget.Adapter getAdapter()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        return $r1;
    }

    public void setAdapter(android.widget.Adapter)
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter r1, $r2, $r3, $r6, $r7, $r10;
        int $i0, $i1;
        android.widget.AdapterView$AdapterDataSetObserver $r4, $r5, $r8, $r9;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r2 == null goto label1;

        $r8 = r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        if $r8 == null goto label1;

        $r10 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $r9 = r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r10.<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r9);

     label1:
        r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter> = r1;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void checkFocus()>();

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r3 == null goto label2;

        $r4 = new android.widget.AdapterView$AdapterDataSetObserver;

        specialinvoke $r4.<android.widget.AdapterView$AdapterDataSetObserver: void <init>(android.widget.AdapterView)>(r0);

        r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver> = $r4;

        $r6 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $r5 = r0.<android.widget.AdapterViewAnimator: android.widget.AdapterView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r6.<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>($r5);

        $r7 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        $i1 = interfaceinvoke $r7.<android.widget.Adapter: int getCount()>();

        r0.<android.widget.AdapterViewAnimator: int mItemCount> = $i1;

     label2:
        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setFocusable(boolean)>(1);

        r0.<android.widget.AdapterViewAnimator: int mWhichChild> = 0;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mWhichChild>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>($i0, 0);

        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent)
    {
        android.widget.AdapterViewAnimator r0;
        android.content.Intent r1, $r12;
        android.content.Intent$FilterComparison r2, r3, $r9, $r10;
        android.widget.RemoteViewsAdapter $r4, $r5, $r7, $r8, $r11;
        android.content.Context $r6;
        boolean $z0, $z1;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.content.Intent;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r4 == null goto label1;

        $r9 = new android.content.Intent$FilterComparison;

        specialinvoke $r9.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r2 = $r9;

        $r10 = new android.content.Intent$FilterComparison;

        $r11 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        $r12 = virtualinvoke $r11.<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>();

        specialinvoke $r10.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r12);

        r3 = $r10;

        $z1 = virtualinvoke r2.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

        $r5 = new android.widget.RemoteViewsAdapter;

        $r6 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback)>($r6, r1, r0);

        r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter> = $r5;

        $r7 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        $z0 = virtualinvoke $r7.<android.widget.RemoteViewsAdapter: boolean isDataReady()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>($r8);

     label2:
        return;
    }

    public void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.RemoteViews$OnClickHandler r1;
        android.widget.RemoteViewsAdapter $r2, $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.widget.RemoteViews$OnClickHandler;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r3.<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>(r1);

     label1:
        return;
    }

    public void setSelection(int)
    {
        android.widget.AdapterViewAnimator r0;
        int i0;

        r0 := @this: android.widget.AdapterViewAnimator;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>(i0);

        return;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mActiveOffset>;

        $r1 = virtualinvoke r0.<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>($i0);

        return $r1;
    }

    public void deferNotifyDataSetChanged()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 1;

        return;
    }

    public boolean onRemoteAdapterConnected()
    {
        android.widget.AdapterViewAnimator r0;
        android.widget.Adapter $r1;
        android.widget.RemoteViewsAdapter $r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.AdapterViewAnimator;

        $r2 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        $r1 = r0.<android.widget.AdapterViewAnimator: android.widget.Adapter mAdapter>;

        if $r2 == $r1 goto label3;

        $r5 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>($r5);

        $z0 = r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged>;

        if $z0 == 0 goto label1;

        $r6 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r6.<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>();

        r0.<android.widget.AdapterViewAnimator: boolean mDeferNotifyDataSetChanged> = 0;

     label1:
        $i0 = r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild>;

        if $i0 <= -1 goto label2;

        $i1 = r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild>;

        specialinvoke r0.<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)>($i1, 0);

        r0.<android.widget.AdapterViewAnimator: int mRestoreWhichChild> = -1;

     label2:
        return 0;

     label3:
        $r3 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.AdapterViewAnimator: android.widget.RemoteViewsAdapter mRemoteViewsAdapter>;

        virtualinvoke $r4.<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>();

        return 1;

     label4:
        return 0;
    }

    public void onRemoteAdapterDisconnected()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        return;
    }

    public void advance()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        virtualinvoke r0.<android.widget.AdapterViewAnimator: void showNext()>();

        return;
    }

    public void fyiWillBeAdvancedByHostKThx()
    {
        android.widget.AdapterViewAnimator r0;

        r0 := @this: android.widget.AdapterViewAnimator;

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/AdapterViewAnimator";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AdapterViewAnimator r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.AdapterViewAnimator;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/AdapterViewAnimator";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    static int access$000(android.widget.AdapterViewAnimator)
    {
        android.widget.AdapterViewAnimator r0;
        int $i0;

        r0 := @parameter0: android.widget.AdapterViewAnimator;

        $i0 = r0.<android.widget.AdapterViewAnimator: int mTouchMode>;

        return $i0;
    }

    public static void <clinit>()
    {
        <android.widget.AdapterViewAnimator: int DEFAULT_ANIMATION_DURATION> = 200;

        <android.widget.AdapterViewAnimator: int TOUCH_MODE_HANDLED> = 2;

        <android.widget.AdapterViewAnimator: int TOUCH_MODE_DOWN_IN_CURRENT_VIEW> = 1;

        <android.widget.AdapterViewAnimator: int TOUCH_MODE_NONE> = 0;

        <android.widget.AdapterViewAnimator: java.lang.String TAG> = "RemoteViewAnimator";

        return;
    }
}
