final class android.hardware.LegacySensorManager extends java.lang.Object
{
    private static boolean sInitialized;
    private static android.view.IWindowManager sWindowManager;
    private static int sRotation;
    private final android.hardware.SensorManager mSensorManager;
    private final java.util.HashMap mLegacyListenersMap;

    public void <init>(android.hardware.SensorManager)
    {
        android.hardware.LegacySensorManager r0;
        android.hardware.SensorManager r1;
        java.lang.Class r2;
        java.lang.Throwable r4, $r12;
        java.util.HashMap $r5;
        boolean $z0;
        android.os.IBinder $r6;
        android.view.IWindowManager $r7, $r8, $r10;
        android.hardware.LegacySensorManager$1 $r9;
        int $i0;
        android.os.RemoteException $r11;

        r0 := @this: android.hardware.LegacySensorManager;

        r1 := @parameter0: android.hardware.SensorManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap> = $r5;

        r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager> = r1;

        r2 = class "android/hardware/SensorManager";

        entermonitor class "android/hardware/SensorManager";

     label1:
        $z0 = <android.hardware.LegacySensorManager: boolean sInitialized>;

        if $z0 != 0 goto label5;

        $r6 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r7 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r6);

        <android.hardware.LegacySensorManager: android.view.IWindowManager sWindowManager> = $r7;

        $r8 = <android.hardware.LegacySensorManager: android.view.IWindowManager sWindowManager>;

        if $r8 == null goto label5;

     label2:
        $r10 = <android.hardware.LegacySensorManager: android.view.IWindowManager sWindowManager>;

        $r9 = new android.hardware.LegacySensorManager$1;

        specialinvoke $r9.<android.hardware.LegacySensorManager$1: void <init>(android.hardware.LegacySensorManager)>(r0);

        $i0 = interfaceinvoke $r10.<android.view.IWindowManager: int watchRotation(android.view.IRotationWatcher)>($r9);

        <android.hardware.LegacySensorManager: int sRotation> = $i0;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getSensors()
    {
        android.hardware.LegacySensorManager r0;
        short s0;
        java.util.List r1;
        java.util.Iterator r2;
        android.hardware.Sensor r3;
        android.hardware.SensorManager $r4;
        boolean $z0;
        java.lang.Object $r5;
        int $i1;

        r0 := @this: android.hardware.LegacySensorManager;

        s0 = 0;

        $r4 = r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager>;

        r1 = virtualinvoke $r4.<android.hardware.SensorManager: java.util.List getFullSensorList()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.Sensor) $r5;

        $i1 = virtualinvoke r3.<android.hardware.Sensor: int getType()>();

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        s0 = s0 | 2;

        goto label5;

     label3:
        s0 = s0 | 8;

        goto label5;

     label4:
        s0 = s0 | 129;

     label5:
        goto label1;

     label6:
        return s0;
    }

    public boolean registerListener(android.hardware.SensorListener, int, int)
    {
        android.hardware.LegacySensorManager r0;
        android.hardware.SensorListener r1;
        int i0, i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, z13, z14, z15;

        r0 := @this: android.hardware.LegacySensorManager;

        r1 := @parameter0: android.hardware.SensorListener;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label01;

        return 0;

     label01:
        z0 = 0;

        $z1 = specialinvoke r0.<android.hardware.LegacySensorManager: boolean registerLegacyListener(int,int,android.hardware.SensorListener,int,int)>(2, 1, r1, i0, i1);

        if $z1 != 0 goto label02;

        if z0 == 0 goto label03;

     label02:
        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z11 = $z10;

        $z2 = specialinvoke r0.<android.hardware.LegacySensorManager: boolean registerLegacyListener(int,int,android.hardware.SensorListener,int,int)>(8, 2, r1, i0, i1);

        if $z2 != 0 goto label05;

        if z11 == 0 goto label06;

     label05:
        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z12 = $z9;

        $z3 = specialinvoke r0.<android.hardware.LegacySensorManager: boolean registerLegacyListener(int,int,android.hardware.SensorListener,int,int)>(128, 3, r1, i0, i1);

        if $z3 != 0 goto label08;

        if z12 == 0 goto label09;

     label08:
        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        z13 = $z8;

        $z4 = specialinvoke r0.<android.hardware.LegacySensorManager: boolean registerLegacyListener(int,int,android.hardware.SensorListener,int,int)>(1, 3, r1, i0, i1);

        if $z4 != 0 goto label11;

        if z13 == 0 goto label12;

     label11:
        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        z14 = $z7;

        $z5 = specialinvoke r0.<android.hardware.LegacySensorManager: boolean registerLegacyListener(int,int,android.hardware.SensorListener,int,int)>(4, 7, r1, i0, i1);

        if $z5 != 0 goto label14;

        if z14 == 0 goto label15;

     label14:
        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        z15 = $z6;

        return z15;
    }

    private boolean registerLegacyListener(int, int, android.hardware.SensorListener, int, int)
    {
        android.hardware.LegacySensorManager r0;
        int i0, i1, i2, i3, $i4;
        android.hardware.SensorListener r1;
        boolean z0, $z1;
        android.hardware.Sensor r2;
        java.util.HashMap r3, $r7, $r8, $r13;
        android.hardware.LegacySensorManager$LegacyListener r4, $r11;
        java.lang.Throwable r5, $r14;
        android.hardware.SensorManager $r6, $r10;
        java.lang.Object $r9;

        r0 := @this: android.hardware.LegacySensorManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.hardware.SensorListener;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 = 0;

        $i4 = i2 & i0;

        if $i4 == 0 goto label8;

        $r6 = r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager>;

        r2 = virtualinvoke $r6.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(i1);

        if r2 == null goto label8;

        $r7 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.hardware.LegacySensorManager$LegacyListener) $r9;

        if r4 != null goto label2;

        $r11 = new android.hardware.LegacySensorManager$LegacyListener;

        specialinvoke $r11.<android.hardware.LegacySensorManager$LegacyListener: void <init>(android.hardware.SensorListener)>(r1);

        r4 = $r11;

        $r13 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label2:
        $z1 = virtualinvoke r4.<android.hardware.LegacySensorManager$LegacyListener: boolean registerSensor(int)>(i0);

        if $z1 == 0 goto label3;

        $r10 = r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager>;

        z0 = virtualinvoke $r10.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r4, r2, i3);

        goto label4;

     label3:
        z0 = 1;

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return z0;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void unregisterListener(android.hardware.SensorListener, int)
    {
        android.hardware.LegacySensorManager r0;
        android.hardware.SensorListener r1;
        int i0;

        r0 := @this: android.hardware.LegacySensorManager;

        r1 := @parameter0: android.hardware.SensorListener;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.hardware.LegacySensorManager: void unregisterLegacyListener(int,int,android.hardware.SensorListener,int)>(2, 1, r1, i0);

        specialinvoke r0.<android.hardware.LegacySensorManager: void unregisterLegacyListener(int,int,android.hardware.SensorListener,int)>(8, 2, r1, i0);

        specialinvoke r0.<android.hardware.LegacySensorManager: void unregisterLegacyListener(int,int,android.hardware.SensorListener,int)>(128, 3, r1, i0);

        specialinvoke r0.<android.hardware.LegacySensorManager: void unregisterLegacyListener(int,int,android.hardware.SensorListener,int)>(1, 3, r1, i0);

        specialinvoke r0.<android.hardware.LegacySensorManager: void unregisterLegacyListener(int,int,android.hardware.SensorListener,int)>(4, 7, r1, i0);

        return;
    }

    private void unregisterLegacyListener(int, int, android.hardware.SensorListener, int)
    {
        android.hardware.LegacySensorManager r0;
        int i0, i1, i2, $i3;
        android.hardware.SensorListener r1;
        android.hardware.Sensor r2;
        java.util.HashMap r3, $r7, $r8, $r11;
        android.hardware.LegacySensorManager$LegacyListener r4;
        java.lang.Throwable r5, $r12;
        android.hardware.SensorManager $r6, $r10;
        java.lang.Object $r9;
        boolean $z0, $z1;

        r0 := @this: android.hardware.LegacySensorManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.hardware.SensorListener;

        i2 := @parameter3: int;

        $i3 = i2 & i0;

        if $i3 == 0 goto label6;

        $r6 = r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager>;

        r2 = virtualinvoke $r6.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(i1);

        if r2 == null goto label6;

        $r7 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (android.hardware.LegacySensorManager$LegacyListener) $r9;

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<android.hardware.LegacySensorManager$LegacyListener: boolean unregisterSensor(int)>(i0);

        if $z0 == 0 goto label2;

        $r10 = r0.<android.hardware.LegacySensorManager: android.hardware.SensorManager mSensorManager>;

        virtualinvoke $r10.<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>(r4, r2);

        $z1 = virtualinvoke r4.<android.hardware.LegacySensorManager$LegacyListener: boolean hasSensors()>();

        if $z1 != 0 goto label2;

        $r11 = r0.<android.hardware.LegacySensorManager: java.util.HashMap mLegacyListenersMap>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void onRotationChanged(int)
    {
        int i0;
        java.lang.Class r0;
        java.lang.Throwable r1, $r2;

        i0 := @parameter0: int;

        r0 = class "android/hardware/SensorManager";

        entermonitor class "android/hardware/SensorManager";

     label1:
        <android.hardware.LegacySensorManager: int sRotation> = i0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

     label4:
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static int getRotation()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 = class "android/hardware/SensorManager";

        entermonitor class "android/hardware/SensorManager";

     label1:
        $i0 = <android.hardware.LegacySensorManager: int sRotation>;

        exitmonitor r0;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        <android.hardware.LegacySensorManager: int sRotation> = 0;

        return;
    }
}
