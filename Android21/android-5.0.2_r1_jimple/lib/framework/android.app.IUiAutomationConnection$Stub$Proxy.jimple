class android.app.IUiAutomationConnection$Stub$Proxy extends java.lang.Object implements android.app.IUiAutomationConnection
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        $r1 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        return "android.app.IUiAutomationConnection";
    }

    public void connect(android.accessibilityservice.IAccessibilityServiceClient) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.accessibilityservice.IAccessibilityServiceClient r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 := @parameter0: android.accessibilityservice.IAccessibilityServiceClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void disconnect() throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        $r4 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean injectInputEvent(android.view.InputEvent, boolean) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.view.InputEvent r1;
        boolean z0, z1, $z3;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;
        int $i0;
        byte $b1;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 := @parameter0: android.view.InputEvent;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        if r1 == null goto label02;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.InputEvent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label03;

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if z0 == 0 goto label04;

        $b1 = 1;

        goto label05;

     label04:
        $b1 = 0;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        z1 = $z3;

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

     label10:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label11:
        return z1;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean setRotation(int) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        boolean z0, $z2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.graphics.Bitmap takeScreenshot(int, int) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        int i0, i1, $i2;
        android.os.Parcel r1, r2;
        android.graphics.Bitmap r3;
        java.lang.Throwable r4, $r8;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label2;

        $r6 = <android.graphics.Bitmap: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r3 = (android.graphics.Bitmap) $r7;

        goto label3;

     label2:
        r3 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void shutdown() throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        $r4 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean clearWindowContentFrameStats(int) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        boolean z0, $z2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.view.WindowContentFrameStats getWindowContentFrameStats(int) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        android.view.WindowContentFrameStats r3;
        java.lang.Throwable r4, $r8;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i1 goto label2;

        $r6 = <android.view.WindowContentFrameStats: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r3 = (android.view.WindowContentFrameStats) $r7;

        goto label3;

     label2:
        r3 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void clearWindowAnimationFrameStats() throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        $r4 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.WindowAnimationFrameStats getWindowAnimationFrameStats() throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        android.view.WindowAnimationFrameStats r3;
        java.lang.Throwable r4, $r8;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        $r5 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $r6 = <android.view.WindowAnimationFrameStats: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r3 = (android.view.WindowAnimationFrameStats) $r7;

        goto label3;

     label2:
        r3 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void executeShellCommand(java.lang.String, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.app.IUiAutomationConnection$Stub$Proxy r0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.app.IUiAutomationConnection$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.IUiAutomationConnection");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        if r2 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r6 = r0.<android.app.IUiAutomationConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
