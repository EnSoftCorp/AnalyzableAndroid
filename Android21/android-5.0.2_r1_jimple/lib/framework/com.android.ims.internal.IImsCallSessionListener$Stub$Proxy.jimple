class com.android.ims.internal.IImsCallSessionListener$Stub$Proxy extends java.lang.Object implements com.android.ims.internal.IImsCallSessionListener
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        $r1 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        return "com.android.ims.internal.IImsCallSessionListener";
    }

    public void callSessionProgressing(com.android.ims.internal.IImsCallSession, com.android.ims.ImsStreamMediaProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsStreamMediaProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsStreamMediaProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionStarted(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionStartFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionTerminated(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionHeld(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionHoldFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionHoldReceived(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionResumed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionResumeFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionResumeReceived(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionMerged(com.android.ims.internal.IImsCallSession, com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1, r2;
        com.android.ims.ImsCallProfile r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r10;
        android.os.IBinder $r7, $r8, $r9;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.internal.IImsCallSession;

        r3 := @parameter2: com.android.ims.ImsCallProfile;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label02;

        $r9 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label03;

     label02:
        $r9 = null;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r9);

        if r2 == null goto label04;

        $r8 = interfaceinvoke r2.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r8 = null;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        if r3 == null goto label06;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label07;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        $r7 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void callSessionMergeFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionUpdated(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionUpdateFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionUpdateReceived(com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsCallProfile r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsCallProfile;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionConferenceExtended(com.android.ims.internal.IImsCallSession, com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1, r2;
        com.android.ims.ImsCallProfile r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r10;
        android.os.IBinder $r7, $r8, $r9;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.internal.IImsCallSession;

        r3 := @parameter2: com.android.ims.ImsCallProfile;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label02;

        $r9 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label03;

     label02:
        $r9 = null;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r9);

        if r2 == null goto label04;

        $r8 = interfaceinvoke r2.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r8 = null;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        if r3 == null goto label06;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label07;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        $r7 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void callSessionConferenceExtendFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionConferenceExtendReceived(com.android.ims.internal.IImsCallSession, com.android.ims.internal.IImsCallSession, com.android.ims.ImsCallProfile) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1, r2;
        com.android.ims.ImsCallProfile r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r10;
        android.os.IBinder $r7, $r8, $r9;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.internal.IImsCallSession;

        r3 := @parameter2: com.android.ims.ImsCallProfile;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label02;

        $r9 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label03;

     label02:
        $r9 = null;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r9);

        if r2 == null goto label04;

        $r8 = interfaceinvoke r2.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r8 = null;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        if r3 == null goto label06;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label07;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label07:
        $r7 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label11;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void callSessionInviteParticipantsRequestDelivered(com.android.ims.internal.IImsCallSession) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void callSessionInviteParticipantsRequestFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionRemoveParticipantsRequestDelivered(com.android.ims.internal.IImsCallSession) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void callSessionRemoveParticipantsRequestFailed(com.android.ims.internal.IImsCallSession, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionConferenceStateUpdated(com.android.ims.internal.IImsCallSession, com.android.ims.ImsConferenceState) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        com.android.ims.ImsConferenceState r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        r2 := @parameter1: com.android.ims.ImsConferenceState;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsConferenceState: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionUssdMessageReceived(com.android.ims.internal.IImsCallSession, int, java.lang.String) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        int i0;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void callSessionHandover(com.android.ims.internal.IImsCallSession, int, int, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        int i0, i1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void callSessionHandoverFailed(com.android.ims.internal.IImsCallSession, int, int, com.android.ims.ImsReasonInfo) throws android.os.RemoteException
    {
        com.android.ims.internal.IImsCallSessionListener$Stub$Proxy r0;
        com.android.ims.internal.IImsCallSession r1;
        int i0, i1;
        com.android.ims.ImsReasonInfo r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: com.android.ims.internal.IImsCallSessionListener$Stub$Proxy;

        r1 := @parameter0: com.android.ims.internal.IImsCallSession;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.ims.ImsReasonInfo;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.ims.internal.IImsCallSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<com.android.ims.internal.IImsCallSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        if r2 == null goto label4;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        $r6 = r0.<com.android.ims.internal.IImsCallSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
