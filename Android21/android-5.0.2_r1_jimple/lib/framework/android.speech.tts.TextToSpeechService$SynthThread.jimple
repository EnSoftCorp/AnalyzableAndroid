class android.speech.tts.TextToSpeechService$SynthThread extends android.os.HandlerThread implements android.os.MessageQueue$IdleHandler
{
    private boolean mFirstIdle;
    final android.speech.tts.TextToSpeechService this$0;

    public void <init>(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService$SynthThread r0;
        android.speech.tts.TextToSpeechService r1;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthThread;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r0.<android.speech.tts.TextToSpeechService$SynthThread: android.speech.tts.TextToSpeechService this$0> = r1;

        specialinvoke r0.<android.os.HandlerThread: void <init>(java.lang.String,int)>("SynthThread", 0);

        r0.<android.speech.tts.TextToSpeechService$SynthThread: boolean mFirstIdle> = 1;

        return;
    }

    protected void onLooperPrepared()
    {
        android.speech.tts.TextToSpeechService$SynthThread r0;
        android.os.Looper $r1;
        android.os.MessageQueue $r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthThread;

        $r1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$SynthThread: android.os.Looper getLooper()>();

        $r2 = virtualinvoke $r1.<android.os.Looper: android.os.MessageQueue getQueue()>();

        virtualinvoke $r2.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>(r0);

        return;
    }

    public boolean queueIdle()
    {
        android.speech.tts.TextToSpeechService$SynthThread r0;
        boolean $z0;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthThread;

        $z0 = r0.<android.speech.tts.TextToSpeechService$SynthThread: boolean mFirstIdle>;

        if $z0 == 0 goto label1;

        r0.<android.speech.tts.TextToSpeechService$SynthThread: boolean mFirstIdle> = 0;

        goto label2;

     label1:
        specialinvoke r0.<android.speech.tts.TextToSpeechService$SynthThread: void broadcastTtsQueueProcessingCompleted()>();

     label2:
        return 1;
    }

    private void broadcastTtsQueueProcessingCompleted()
    {
        android.speech.tts.TextToSpeechService$SynthThread r0;
        android.content.Intent r1, $r2;
        android.speech.tts.TextToSpeechService $r3;

        r0 := @this: android.speech.tts.TextToSpeechService$SynthThread;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED");

        r1 = $r2;

        $r3 = r0.<android.speech.tts.TextToSpeechService$SynthThread: android.speech.tts.TextToSpeechService this$0>;

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService: void sendBroadcast(android.content.Intent)>(r1);

        return;
    }
}
