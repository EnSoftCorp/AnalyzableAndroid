public class android.graphics.drawable.NinePatchDrawable extends android.graphics.drawable.Drawable
{
    private static final boolean DEFAULT_DITHER;
    private android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState;
    private android.graphics.NinePatch mNinePatch;
    private android.graphics.PorterDuffColorFilter mTintFilter;
    private android.graphics.Rect mPadding;
    private android.graphics.Insets mOpticalInsets;
    private android.graphics.Paint mPaint;
    private boolean mMutated;
    private int mTargetDensity;
    private int mBitmapWidth;
    private int mBitmapHeight;

    void <init>()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Insets $r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = -1;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r2;

        return;
    }

    public void <init>(android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Bitmap r1;
        byte[] r2;
        android.graphics.Rect r3;
        java.lang.String r4;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r5;
        android.graphics.NinePatch $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: byte[];

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: java.lang.String;

        $r5 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r6 = new android.graphics.NinePatch;

        specialinvoke $r6.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r1, r2, r4);

        specialinvoke $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r6, r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>($r5, null, null);

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4;
        java.lang.String r5;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r6, $r8;
        android.graphics.NinePatch $r7;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: java.lang.String;

        $r6 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r7 = new android.graphics.NinePatch;

        specialinvoke $r7.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r5);

        specialinvoke $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>($r7, r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>($r6, r1, null);

        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap, byte[], android.graphics.Rect, android.graphics.Rect, java.lang.String)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        byte[] r3;
        android.graphics.Rect r4, r5;
        java.lang.String r6;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r7, $r9;
        android.graphics.NinePatch $r8;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: byte[];

        r4 := @parameter3: android.graphics.Rect;

        r5 := @parameter4: android.graphics.Rect;

        r6 := @parameter5: java.lang.String;

        $r7 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r8 = new android.graphics.NinePatch;

        specialinvoke $r8.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>(r2, r3, r6);

        specialinvoke $r7.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect)>($r8, r4, r5);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>($r7, r1, null);

        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r9.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2;
        android.graphics.Rect $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.NinePatch;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r1, $r3);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>($r2, null, null);

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        android.graphics.NinePatch r2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r3, $r5;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.NinePatch;

        $r3 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        specialinvoke $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>(r2, $r4);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>($r3, r1, null);

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i0;

        return;
    }

    public void setTargetDensity(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getDensity()>();

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTargetDensity(android.util.DisplayMetrics)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.util.DisplayMetrics r1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTargetDensity(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, $i1, $i2;
        android.graphics.NinePatch $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        if i0 == $i1 goto label4;

        if i0 != 0 goto label1;

        $i2 = 160;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = $i2;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        if $r1 == null goto label3;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

     label3:
        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

     label4:
        return;
    }

    private static android.graphics.Insets scaleFromDensity(android.graphics.Insets, int, int)
    {
        android.graphics.Insets r0, $r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;

        r0 := @parameter0: android.graphics.Insets;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i6 = r0.<android.graphics.Insets: int left>;

        i2 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i6, i0, i1);

        $i7 = r0.<android.graphics.Insets: int top>;

        i3 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i7, i0, i1);

        $i8 = r0.<android.graphics.Insets: int right>;

        i4 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i8, i0, i1);

        $i9 = r0.<android.graphics.Insets: int bottom>;

        i5 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i9, i0, i1);

        $r1 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>(i2, i3, i4, i5);

        return $r1;
    }

    private void computeBitmapSize()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.Rect r1, r2, $r7, $r12, $r14;
        android.graphics.NinePatch $r3, $r4, $r5, $r13, $r15;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r6, $r8, $r11, $r17;
        android.graphics.Insets $r9, $r10, $r16;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        i0 = virtualinvoke $r3.<android.graphics.NinePatch: int getDensity()>();

        i1 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        if i0 != i1 goto label1;

        $r13 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i14 = virtualinvoke $r13.<android.graphics.NinePatch: int getWidth()>();

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = $i14;

        $r15 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i15 = virtualinvoke $r15.<android.graphics.NinePatch: int getHeight()>();

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = $i15;

        $r17 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r16 = $r17.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r16;

        goto label4;

     label1:
        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i2 = virtualinvoke $r4.<android.graphics.NinePatch: int getWidth()>();

        $i3 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i2, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = $i3;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $i4 = virtualinvoke $r5.<android.graphics.NinePatch: int getHeight()>();

        $i5 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i4, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = $i5;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r7 = $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if $r7 == null goto label3;

        $r12 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        if $r12 == null goto label3;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        $r11 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        r2 = $r11.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if r1 != r2 goto label2;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r2);

        r1 = $r14;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = $r14;

     label2:
        $i7 = r2.<android.graphics.Rect: int left>;

        $i6 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i7, i0, i1);

        r1.<android.graphics.Rect: int left> = $i6;

        $i9 = r2.<android.graphics.Rect: int top>;

        $i8 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i9, i0, i1);

        r1.<android.graphics.Rect: int top> = $i8;

        $i11 = r2.<android.graphics.Rect: int right>;

        $i10 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i11, i0, i1);

        r1.<android.graphics.Rect: int right> = $i10;

        $i13 = r2.<android.graphics.Rect: int bottom>;

        $i12 = staticinvoke <android.graphics.Bitmap: int scaleFromDensity(int,int,int)>($i13, i0, i1);

        r1.<android.graphics.Rect: int bottom> = $i12;

     label3:
        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r10 = $r8.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets>;

        $r9 = staticinvoke <android.graphics.drawable.NinePatchDrawable: android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int)>($r10, i0, i1);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r9;

     label4:
        return;
    }

    private void setNinePatch(android.graphics.NinePatch)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch r1, $r2;
        android.graphics.Insets $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.NinePatch;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        if $r2 == r1 goto label3;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch> = r1;

        if r1 == null goto label1;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void computeBitmapSize()>();

        goto label2;

     label1:
        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = -1;

        $r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r3;

     label2:
        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        boolean z0, z1;
        int i0, $i2, $i3, $i4, $i5;
        android.graphics.PorterDuffColorFilter $r3, $r16;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r4, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1;
        android.graphics.Paint $r5, $r7, $r8, $r9, $r12, $r14, $r17;
        android.graphics.NinePatch $r6;
        android.graphics.ColorFilter $r13;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        if $r3 == null goto label1;

        $r14 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $r13 = virtualinvoke $r14.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r13 != null goto label1;

        $r17 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $r16 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        virtualinvoke $r17.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r16);

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        z1 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if z1 == 0 goto label3;

        $i3 = r2.<android.graphics.Rect: int right>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i5 = $i3 - $i4;

        $f5 = (float) $i5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f5, 0.0F);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(-1.0F, 1.0F);

     label3:
        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $f0 = $r4.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $b1 = $f0 cmpl 1.0F;

        if $b1 == 0 goto label4;

        $r9 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        i0 = virtualinvoke $r9.<android.graphics.Paint: int getAlpha()>();

        $r12 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $f1 = (float) i0;

        $r11 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $f2 = $r11.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $f4 = $f1 * $f2;

        $f3 = $f4 + 0.5F;

        $i2 = (int) $f3;

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>($i2);

        goto label5;

     label4:
        i0 = -1;

     label5:
        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>(r1, r2, $r5);

        if z0 == 0 goto label6;

        $r8 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label6:
        if i0 < 0 goto label7;

        $r7 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(i0);

     label7:
        return;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i1 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Rect r1, r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding>;

        if r2 == null goto label5;

        $z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z0 == 0 goto label1;

        $i10 = r2.<android.graphics.Rect: int right>;

        $i9 = r2.<android.graphics.Rect: int top>;

        $i8 = r2.<android.graphics.Rect: int left>;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i10, $i9, $i8, $i7);

        goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

     label2:
        $i1 = r1.<android.graphics.Rect: int left>;

        $i0 = r1.<android.graphics.Rect: int top>;

        $i3 = $i1 | $i0;

        $i2 = r1.<android.graphics.Rect: int right>;

        $i5 = $i3 | $i2;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        $i6 = $i5 | $i4;

        if $i6 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public void getOutline(android.graphics.Outline)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Outline r1;
        android.graphics.Rect r2, r4;
        android.graphics.NinePatch$InsetStruct r3;
        boolean $z0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r5, $r6;
        android.graphics.Bitmap $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.Outline;

        r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if $r5 == null goto label2;

        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r7 = virtualinvoke $r6.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Bitmap getBitmap()>();

        r3 = virtualinvoke $r7.<android.graphics.Bitmap: android.graphics.NinePatch$InsetStruct getNinePatchInsets()>();

        if r3 == null goto label2;

        r4 = r3.<android.graphics.NinePatch$InsetStruct: android.graphics.Rect outlineRect>;

        $i1 = r2.<android.graphics.Rect: int left>;

        $i0 = r4.<android.graphics.Rect: int left>;

        $i10 = $i1 + $i0;

        $i3 = r2.<android.graphics.Rect: int top>;

        $i2 = r4.<android.graphics.Rect: int top>;

        $i11 = $i3 + $i2;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i4 = r4.<android.graphics.Rect: int right>;

        $i8 = $i6 - $i4;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        $i5 = r4.<android.graphics.Rect: int bottom>;

        $i9 = $i7 - $i5;

        $f0 = r3.<android.graphics.NinePatch$InsetStruct: float outlineRadius>;

        virtualinvoke r1.<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>($i10, $i11, $i8, $i9, $f0);

        $f1 = r3.<android.graphics.NinePatch$InsetStruct: float outlineAlpha>;

        $i12 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getAlpha()>();

        $f3 = (float) $i12;

        $f2 = $f3 / 255.0F;

        $f4 = $f1 * $f2;

        virtualinvoke r1.<android.graphics.Outline: void setAlpha(float)>($f4);

        return;

     label2:
        specialinvoke r0.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>(r1);

        return;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        android.graphics.Insets $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean needsMirroring()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i3 = $r2.<android.graphics.Insets: int right>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i2 = $r3.<android.graphics.Insets: int top>;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i1 = $r4.<android.graphics.Insets: int left>;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        $i0 = $r5.<android.graphics.Insets: int bottom>;

        $r6 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>($i3, $i2, $i1, $i0);

        return $r6;

     label1:
        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets>;

        return $r1;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if i0 != 255 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        return 255;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 != null goto label1;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.ColorStateList r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3;
        android.graphics.PorterDuff$Mode $r4;
        android.graphics.PorterDuffColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint> = r1;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r4 = $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r5, r1, $r4);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3;
        android.content.res.ColorStateList $r4;
        android.graphics.PorterDuffColorFilter $r5, $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode> = r1;

        $r5 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r4 = $r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r6 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r5, $r4, r1);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter> = $r6;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored> = z0;

        return;
    }

    private boolean needsMirroring()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isAutoMirrored()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        return $z0;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean z0;
        android.graphics.Paint $r1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r1.<android.graphics.Paint: void setFilterBitmap(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void invalidateSelf()>();

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        android.content.res.TypedArray r5;
        int[] $r6;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r2, r3, r4);

        $r6 = <com.android.internal.R$styleable: int[] NinePatchDrawable>;

        r5 = staticinvoke <android.graphics.drawable.NinePatchDrawable: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r4, r3, $r6);

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r5);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray) throws org.xmlpull.v1.XmlPullParserException
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.TypedArray r1;
        android.content.res.Resources r2;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.graphics.BitmapFactory$Options r4, $r13;
        android.graphics.Rect r5, r6, $r16, $r17;
        android.graphics.Bitmap r7;
        android.util.TypedValue r8, $r15;
        java.io.InputStream r9;
        int[] $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, $f1;
        android.graphics.PorterDuff$Mode $r11, $r12;
        android.util.DisplayMetrics $r14;
        android.graphics.NinePatch $r18;
        byte[] $r19, $r20;
        java.lang.StringBuilder $r21, $r27, $r28, $r29, $r30, $r32;
        java.lang.String $r22, $r25, $r31, $r34;
        android.graphics.Insets $r23;
        org.xmlpull.v1.XmlPullParserException $r24, $r26;
        java.io.IOException $r33;
        android.content.res.ColorStateList r36;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.TypedArray;

        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.Resources getResources()>();

        r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i1 = r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations>;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i3 = $i1 | $i2;

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations> = $i3;

        $r10 = virtualinvoke r1.<android.content.res.TypedArray: int[] extractThemeAttrs()>();

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs> = $r10;

        $z1 = r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z1);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither> = $z0;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 == 0 goto label09;

        $r13 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r13.<android.graphics.BitmapFactory$Options: void <init>()>();

        r4 = $r13;

        $z4 = r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        if $z4 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        r4.<android.graphics.BitmapFactory$Options: boolean inDither> = $z5;

        $r14 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i5 = $r14.<android.util.DisplayMetrics: int noncompatDensityDpi>;

        r4.<android.graphics.BitmapFactory$Options: int inScreenDensity> = $i5;

        $r16 = new android.graphics.Rect;

        specialinvoke $r16.<android.graphics.Rect: void <init>()>();

        r5 = $r16;

        $r17 = new android.graphics.Rect;

        specialinvoke $r17.<android.graphics.Rect: void <init>()>();

        r6 = $r17;

        r7 = null;

     label03:
        $r15 = new android.util.TypedValue;

        specialinvoke $r15.<android.util.TypedValue: void <init>()>();

        r8 = $r15;

        r9 = virtualinvoke r2.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i0, r8);

        r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r2, r8, r9, r5, r4);

        virtualinvoke r9.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r33 := @caughtexception;

     label06:
        if r7 != null goto label07;

        $r26 = new org.xmlpull.v1.XmlPullParserException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid src attribute");

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r34);

        throw $r26;

     label07:
        $r20 = virtualinvoke r7.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        if $r20 != null goto label08;

        $r24 = new org.xmlpull.v1.XmlPullParserException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <nine-patch> requires a valid 9-patch source image");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label08:
        virtualinvoke r7.<android.graphics.Bitmap: void getOpticalInsets(android.graphics.Rect)>(r6);

        $r18 = new android.graphics.NinePatch;

        $r19 = virtualinvoke r7.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        specialinvoke $r18.<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>(r7, $r19);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch> = $r18;

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding> = r5;

        $r23 = staticinvoke <android.graphics.Insets: android.graphics.Insets of(android.graphics.Rect)>(r6);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Insets mOpticalInsets> = $r23;

     label09:
        $z2 = r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, $z2);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mAutoMirrored> = $z3;

        $f0 = r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(3, $f0);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: float mBaseAlpha> = $f1;

        i6 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(5, -1);

        if i6 == -1 goto label10;

        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r11 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>(i6, $r12);

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode> = $r11;

     label10:
        r36 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(2);

        if r36 == null goto label11;

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint> = r36;

     label11:
        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r3, r2);

        $i4 = r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity>;

        r3.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity> = $i4;

        return;

        catch java.io.IOException from label03 to label04 with label05;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.content.res.Resources$Theme r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r2;
        android.content.res.TypedArray r3;
        org.xmlpull.v1.XmlPullParserException r4, $r9;
        java.lang.Throwable r5, $r11;
        int[] $r6, $r7, $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources$Theme)>(r1);

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if r2 == null goto label1;

        $r6 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs>;

        if $r6 != null goto label2;

     label1:
        return;

     label2:
        $r8 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs>;

        $r7 = <com.android.internal.R$styleable: int[] NinePatchDrawable>;

        r3 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>($r8, $r7);

     label3:
        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>(r3);

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label8;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r10;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

     label7:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r5;

     label8:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public boolean canApplyTheme()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r2;
        int[] $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        if $r1 == null goto label1;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r3 = $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int[] mThemeAttrs>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.graphics.Paint getPaint()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.Paint $r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setDither(boolean)>(0);

     label1:
        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        return $r2;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getMinimumWidth()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $i0 = r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch $r1;
        boolean $z0;
        android.graphics.Paint $r2, $r3;
        byte $b0;
        int $i1;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $z0 = virtualinvoke $r1.<android.graphics.NinePatch: boolean hasAlpha()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        if $r2 == null goto label2;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r3.<android.graphics.Paint: int getAlpha()>();

        if $i1 >= 255 goto label2;

     label1:
        $b0 = -3;

        goto label3;

     label2:
        $b0 = -1;

     label3:
        return $b0;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.NinePatch $r1;
        android.graphics.Rect $r2;
        android.graphics.Region $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch>;

        $r2 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect getBounds()>();

        $r3 = virtualinvoke $r1.<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>($r2);

        return $r3;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        return $r2;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState $r2, $r3, $r4;
        android.graphics.NinePatch $r5;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        $z0 = r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        $r3 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        specialinvoke $r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState)>($r3);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r2;

        $r4 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r5 = $r4.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.NinePatch mNinePatch> = $r5;

        r0.<android.graphics.drawable.NinePatchDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected boolean onStateChange(int[])
    {
        android.graphics.drawable.NinePatchDrawable r0;
        int[] r1;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r2;
        android.content.res.ColorStateList $r3, $r6;
        android.graphics.PorterDuff$Mode $r4, $r5;
        android.graphics.PorterDuffColorFilter $r7, $r8;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: int[];

        r2 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $r3 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r3 == null goto label1;

        $r4 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode>;

        if $r4 == null goto label1;

        $r7 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        $r6 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r5 = r2.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode>;

        $r8 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r7, $r6, $r5);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter> = $r8;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        boolean $z0, $z1, $z2;
        android.content.res.ColorStateList $r2, $r3;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState>;

        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 != 0 goto label1;

        $r2 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        if $r2 == null goto label2;

        $r3 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $z2 = virtualinvoke $r3.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z2 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1, $r5;
        android.content.res.Resources r2;
        android.content.res.Resources$Theme r3;
        android.graphics.Insets $r4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.Resources$Theme;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets mOpticalInsets> = $r4;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = 160;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapWidth> = -1;

        r0.<android.graphics.drawable.NinePatchDrawable: int mBitmapHeight> = -1;

        if r3 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean canApplyTheme()>();

        if $z0 == 0 goto label1;

        $r5 = new android.graphics.drawable.NinePatchDrawable$NinePatchState;

        specialinvoke $r5.<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState)>(r1);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = $r5;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void applyTheme(android.content.res.Resources$Theme)>(r3);

        goto label2;

     label1:
        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.NinePatchDrawable$NinePatchState mNinePatchState> = r1;

     label2:
        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        int $i0, $i1;
        boolean $z0, $z1;
        android.graphics.Rect $r3, $r9, $r10;
        android.graphics.PorterDuff$Mode $r4;
        android.content.res.ColorStateList $r5;
        android.graphics.PorterDuffColorFilter $r6, $r7;
        android.graphics.NinePatch $r8;
        android.util.DisplayMetrics $r11;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        if r2 == null goto label1;

        $r11 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i1 = $r11.<android.util.DisplayMetrics: int densityDpi>;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = $i1;

        goto label2;

     label1:
        $i0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: int mTargetDensity>;

        r0.<android.graphics.drawable.NinePatchDrawable: int mTargetDensity> = $i0;

     label2:
        $z0 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        if $z0 == 0 goto label3;

        $z1 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: boolean mDither>;

        virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>($z1);

     label3:
        $r3 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        if $r3 == null goto label4;

        $r9 = new android.graphics.Rect;

        $r10 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.Rect mPadding>;

        specialinvoke $r9.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r10);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.Rect mPadding> = $r9;

     label4:
        $r6 = r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter>;

        $r5 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.content.res.ColorStateList mTint>;

        $r4 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.PorterDuff$Mode mTintMode>;

        $r7 = virtualinvoke r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)>($r6, $r5, $r4);

        r0.<android.graphics.drawable.NinePatchDrawable: android.graphics.PorterDuffColorFilter mTintFilter> = $r7;

        $r8 = r1.<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.NinePatch mNinePatch>;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void setNinePatch(android.graphics.NinePatch)>($r8);

        return;
    }

    void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState, android.content.res.Resources, android.content.res.Resources$Theme, android.graphics.drawable.NinePatchDrawable$1)
    {
        android.graphics.drawable.NinePatchDrawable r0;
        android.graphics.drawable.NinePatchDrawable$NinePatchState r1;
        android.content.res.Resources r2;
        android.content.res.Resources$Theme r3;
        android.graphics.drawable.NinePatchDrawable$1 r4;

        r0 := @this: android.graphics.drawable.NinePatchDrawable;

        r1 := @parameter0: android.graphics.drawable.NinePatchDrawable$NinePatchState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.content.res.Resources$Theme;

        r4 := @parameter3: android.graphics.drawable.NinePatchDrawable$1;

        specialinvoke r0.<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.content.res.Resources$Theme)>(r1, r2, r3);

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.NinePatchDrawable: boolean DEFAULT_DITHER> = 0;

        return;
    }
}
