public final class android.provider.CalendarContract$CalendarAlerts extends java.lang.Object implements android.provider.BaseColumns, android.provider.CalendarContract$CalendarAlertsColumns, android.provider.CalendarContract$EventsColumns, android.provider.CalendarContract$CalendarColumns
{
    public static final java.lang.String TABLE_NAME;
    public static final android.net.Uri CONTENT_URI;
    private static final java.lang.String WHERE_ALARM_EXISTS;
    private static final java.lang.String WHERE_FINDNEXTALARMTIME;
    private static final java.lang.String SORT_ORDER_ALARMTIME_ASC;
    private static final java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS;
    public static final android.net.Uri CONTENT_URI_BY_INSTANCE;
    private static final boolean DEBUG;

    private void <init>()
    {
        android.provider.CalendarContract$CalendarAlerts r0;

        r0 := @this: android.provider.CalendarContract$CalendarAlerts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final android.net.Uri insert(android.content.ContentResolver, long, long, long, long, int)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2, l3, l5;
        int i4;
        android.content.ContentValues r1, $r2;
        java.lang.Long $r3, $r4, $r5, $r6, $r7;
        java.lang.Integer $r8, $r9, $r10, $r12;
        android.net.Uri $r11, $r13;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("begin", $r4);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("end", $r5);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("alarmTime", $r6);

        l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("creationTime", $r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("receivedTime", $r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("notifyTime", $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r10);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r12);

        $r13 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r11 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r13, r1);

        return $r11;
    }

    public static final long findNextAlarmTime(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        java.lang.String[] r2, $r8, $r9;
        android.database.Cursor r3;
        java.lang.Throwable r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r7;
        android.net.Uri $r10;
        java.lang.String $r11;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("alarmTime>=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "alarmTime";

        r2 = $r8;

        $r10 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r9 = newarray (java.lang.String)[1];

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r9[0] = $r11;

        r3 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, r2, "alarmTime>=?", $r9, "alarmTime ASC");

        l1 = -1L;

     label1:
        if r3 == null goto label2;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        l1 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(0);

     label2:
        if r3 == null goto label6;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label6;

     label3:
        $r12 := @caughtexception;

        r4 = $r12;

     label4:
        if r3 == null goto label5;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label5:
        throw r4;

     label6:
        return l1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final void rescheduleMissedAlarms(android.content.ContentResolver, android.content.Context, android.app.AlarmManager)
    {
        android.content.ContentResolver r0;
        android.content.Context r1;
        android.app.AlarmManager r2;
        long l0, l1, l2, l3;
        java.lang.String[] r3, $r6, $r8;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r12;
        android.net.Uri $r7;
        java.lang.String $r9, $r10, $r11;
        boolean $z0;
        byte $b4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.app.AlarmManager;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l0 - 86400000L;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "alarmTime";

        r3 = $r6;

        $r7 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r8 = newarray (java.lang.String)[3];

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r8[2] = $r11;

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, r3, "state=0 AND alarmTime<? AND alarmTime>? AND end>=?", $r8, "alarmTime ASC");

        if r4 != null goto label1;

        return;

     label1:
        l2 = -1L;

     label2:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label4;

        l3 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(0);

        $b4 = l2 cmp l3;

        if $b4 == 0 goto label3;

        staticinvoke <android.provider.CalendarContract$CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>(r1, r2, l3);

        l2 = l3;

     label3:
        goto label2;

     label4:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label7;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

     label6:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void scheduleAlarm(android.content.Context, android.app.AlarmManager, long)
    {
        android.content.Context r0;
        android.app.AlarmManager r1;
        long l0;
        android.content.Intent r2, $r4;
        android.app.PendingIntent r3;
        android.net.Uri $r5, $r6;
        java.lang.Object $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.AlarmManager;

        l0 := @parameter2: long;

        if r1 != null goto label1;

        $r9 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r1 = (android.app.AlarmManager) $r9;

     label1:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EVENT_REMINDER");

        r2 = $r4;

        $r5 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r5, l0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r6);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("alarmTime", l0);

        r3 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, r2, 0);

        virtualinvoke r1.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, l0, r3);

        return;
    }

    public static final boolean alarmExists(android.content.ContentResolver, long, long, long)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2;
        java.lang.String[] r1, $r4, $r5;
        android.database.Cursor r2;
        boolean z0;
        java.lang.Throwable r3, $r10;
        android.net.Uri $r6;
        java.lang.String $r7, $r8, $r9;
        int $i3;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "alarmTime";

        r1 = $r4;

        $r6 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r5 = newarray (java.lang.String)[3];

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r5[1] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $r5[2] = $r9;

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, r1, "event_id=? AND begin=? AND alarmTime=?", $r5, null);

        z0 = 0;

     label1:
        if r2 == null goto label2;

        $i3 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        if $i3 <= 0 goto label2;

        z0 = 1;

     label2:
        if r2 == null goto label6;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

     label4:
        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label5:
        throw r3;

     label6:
        return z0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.CalendarContract$CalendarAlerts: boolean DEBUG> = 0;

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS> = "state=0 AND alarmTime<? AND alarmTime>? AND end>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String SORT_ORDER_ALARMTIME_ASC> = "alarmTime ASC";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_FINDNEXTALARMTIME> = "alarmTime>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_ALARM_EXISTS> = "event_id=? AND begin=? AND alarmTime=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String TABLE_NAME> = "CalendarAlerts";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts/by_instance");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE> = $r1;

        return;
    }
}
