public class com.android.internal.widget.LockPatternUtilsCache extends java.lang.Object implements com.android.internal.widget.ILockSettings
{
    private static final java.lang.String HAS_LOCK_PATTERN_CACHE_KEY;
    private static final java.lang.String HAS_LOCK_PASSWORD_CACHE_KEY;
    private static com.android.internal.widget.LockPatternUtilsCache sInstance;
    private final com.android.internal.widget.ILockSettings mService;
    private final android.util.ArrayMap mCache;
    private final com.android.internal.widget.LockPatternUtilsCache$CacheKey mCacheKey;
    private final com.android.internal.widget.ILockSettingsObserver mObserver;

    public static synchronized com.android.internal.widget.LockPatternUtilsCache getInstance(com.android.internal.widget.ILockSettings)
    {
        com.android.internal.widget.ILockSettings r0;
        com.android.internal.widget.LockPatternUtilsCache $r1, $r2, $r3;

        r0 := @parameter0: com.android.internal.widget.ILockSettings;

        $r1 = <com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache sInstance>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.widget.LockPatternUtilsCache;

        specialinvoke $r3.<com.android.internal.widget.LockPatternUtilsCache: void <init>(com.android.internal.widget.ILockSettings)>(r0);

        <com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache sInstance> = $r3;

     label1:
        $r2 = <com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache sInstance>;

        return $r2;
    }

    private void <init>(com.android.internal.widget.ILockSettings)
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        com.android.internal.widget.ILockSettings r1;
        android.os.RemoteException r2, $r7;
        android.util.ArrayMap $r3;
        com.android.internal.widget.LockPatternUtilsCache$CacheKey $r4;
        com.android.internal.widget.LockPatternUtilsCache$1 $r5;
        com.android.internal.widget.ILockSettingsObserver $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: com.android.internal.widget.ILockSettings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache> = $r3;

        $r4 = new com.android.internal.widget.LockPatternUtilsCache$CacheKey;

        specialinvoke $r4.<com.android.internal.widget.LockPatternUtilsCache$CacheKey: void <init>(com.android.internal.widget.LockPatternUtilsCache$1)>(null);

        r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache$CacheKey mCacheKey> = $r4;

        $r5 = new com.android.internal.widget.LockPatternUtilsCache$1;

        specialinvoke $r5.<com.android.internal.widget.LockPatternUtilsCache$1: void <init>(com.android.internal.widget.LockPatternUtilsCache)>(r0);

        r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettingsObserver mObserver> = $r5;

        r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService> = r1;

     label1:
        $r6 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettingsObserver mObserver>;

        interfaceinvoke r1.<com.android.internal.widget.ILockSettings: void registerObserver(com.android.internal.widget.ILockSettingsObserver)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r8;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBoolean(java.lang.String, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        boolean z0;
        int i0;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>(r1, i0);

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void setBoolean(java.lang.String,boolean,int)>(r1, z0, i0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i0, $r3);

        return;
    }

    public void setLong(java.lang.String, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        long l0;
        int i1;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Long $r3;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>(r1, i1);

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void setLong(java.lang.String,long,int)>(r1, l0, i1);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i1, $r3);

        return;
    }

    public void setString(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1, r2;
        int i0;
        com.android.internal.widget.ILockSettings $r3;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>(r1, i0);

        $r3 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r3.<com.android.internal.widget.ILockSettings: void setString(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public long getLong(java.lang.String, long, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        long l0, l2, $l3;
        int i1;
        java.lang.Object r2;
        boolean $z0;
        com.android.internal.widget.ILockSettings $r3;
        java.lang.Long $r4, $r5;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 = specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: java.lang.Object peekCache(java.lang.String,int)>(r1, i1);

        $z0 = r2 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r5 = (java.lang.Long) r2;

        $l3 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        return $l3;

     label1:
        $r3 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        l2 = interfaceinvoke $r3.<com.android.internal.widget.ILockSettings: long getLong(java.lang.String,long,int)>(r1, l0, i1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i1, $r4);

        return l2;
    }

    public java.lang.String getString(java.lang.String, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1, r2, r4, $r6;
        int i0;
        java.lang.Object r3;
        boolean $z0;
        com.android.internal.widget.ILockSettings $r5;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: java.lang.Object peekCache(java.lang.String,int)>(r1, i0);

        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r6 = (java.lang.String) r3;

        return $r6;

     label1:
        $r5 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        r4 = interfaceinvoke $r5.<com.android.internal.widget.ILockSettings: java.lang.String getString(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i0, r4);

        return r4;
    }

    public boolean getBoolean(java.lang.String, boolean, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3;
        int i0;
        java.lang.Object r2;
        com.android.internal.widget.ILockSettings $r3;
        java.lang.Boolean $r4, $r5;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 = specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: java.lang.Object peekCache(java.lang.String,int)>(r1, i0);

        $z2 = r2 instanceof java.lang.Boolean;

        if $z2 == 0 goto label1;

        $r5 = (java.lang.Boolean) r2;

        $z3 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label1:
        $r3 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        z1 = interfaceinvoke $r3.<com.android.internal.widget.ILockSettings: boolean getBoolean(java.lang.String,boolean,int)>(r1, z0, i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>(r1, i0, $r4);

        return z1;
    }

    public void setLockPattern(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>("LockPatternUtils.Cache.HasLockPatternCacheKey", i0);

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void setLockPattern(java.lang.String,int)>(r1, i0);

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>("LockPatternUtils.Cache.HasLockPatternCacheKey", i0, $r4);

        return;
    }

    public boolean checkPattern(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        com.android.internal.widget.ILockSettings $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        $z0 = interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: boolean checkPattern(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public void setLockPassword(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>("LockPatternUtils.Cache.HasLockPasswordCacheKey", i0);

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void setLockPassword(java.lang.String,int)>(r1, i0);

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>("LockPatternUtils.Cache.HasLockPasswordCacheKey", i0, $r4);

        return;
    }

    public boolean checkPassword(java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        com.android.internal.widget.ILockSettings $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        $z0 = interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: boolean checkPassword(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean checkVoldPassword(int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        int i0;
        com.android.internal.widget.ILockSettings $r1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        $z0 = interfaceinvoke $r1.<com.android.internal.widget.ILockSettings: boolean checkVoldPassword(int)>(i0);

        return $z0;
    }

    public boolean havePattern(int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        int i0;
        java.lang.Object r1;
        boolean z0, $z1, $z2;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Boolean $r3, $r4;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: java.lang.Object peekCache(java.lang.String,int)>("LockPatternUtils.Cache.HasLockPatternCacheKey", i0);

        $z1 = r1 instanceof java.lang.Boolean;

        if $z1 == 0 goto label1;

        $r4 = (java.lang.Boolean) r1;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        z0 = interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: boolean havePattern(int)>(i0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>("LockPatternUtils.Cache.HasLockPatternCacheKey", i0, $r3);

        return z0;
    }

    public boolean havePassword(int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        int i0;
        java.lang.Object r1;
        boolean z0, $z1, $z2;
        com.android.internal.widget.ILockSettings $r2;
        java.lang.Boolean $r3, $r4;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: java.lang.Object peekCache(java.lang.String,int)>("LockPatternUtils.Cache.HasLockPasswordCacheKey", i0);

        $z1 = r1 instanceof java.lang.Boolean;

        if $z1 == 0 goto label1;

        $r4 = (java.lang.Boolean) r1;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        z0 = interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: boolean havePassword(int)>(i0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void putCache(java.lang.String,int,java.lang.Object)>("LockPatternUtils.Cache.HasLockPasswordCacheKey", i0, $r3);

        return z0;
    }

    public void removeUser(int) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        int i0;
        com.android.internal.widget.ILockSettings $r1;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r1.<com.android.internal.widget.ILockSettings: void removeUser(int)>(i0);

        return;
    }

    public void registerObserver(com.android.internal.widget.ILockSettingsObserver) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        com.android.internal.widget.ILockSettingsObserver r1;
        com.android.internal.widget.ILockSettings $r2;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: com.android.internal.widget.ILockSettingsObserver;

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void registerObserver(com.android.internal.widget.ILockSettingsObserver)>(r1);

        return;
    }

    public void unregisterObserver(com.android.internal.widget.ILockSettingsObserver) throws android.os.RemoteException
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        com.android.internal.widget.ILockSettingsObserver r1;
        com.android.internal.widget.ILockSettings $r2;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: com.android.internal.widget.ILockSettingsObserver;

        $r2 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        interfaceinvoke $r2.<com.android.internal.widget.ILockSettings: void unregisterObserver(com.android.internal.widget.ILockSettingsObserver)>(r1);

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        com.android.internal.widget.ILockSettings $r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        $r1 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.ILockSettings mService>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.ILockSettings: android.os.IBinder asBinder()>();

        return $r2;
    }

    private java.lang.Object peekCache(java.lang.String, int)
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap r2, $r4, $r6;
        java.lang.Throwable r3, $r9;
        com.android.internal.widget.LockPatternUtilsCache$CacheKey $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        $r5 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache$CacheKey mCacheKey>;

        $r7 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtilsCache$CacheKey: com.android.internal.widget.LockPatternUtilsCache$CacheKey set(java.lang.String,int)>(r1, i0);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void putCache(java.lang.String, int, java.lang.Object)
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2;
        android.util.ArrayMap r3, $r5, $r7;
        java.lang.Throwable r4, $r10;
        com.android.internal.widget.LockPatternUtilsCache$CacheKey $r6, $r8;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r5 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r7 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        $r6 = new com.android.internal.widget.LockPatternUtilsCache$CacheKey;

        specialinvoke $r6.<com.android.internal.widget.LockPatternUtilsCache$CacheKey: void <init>(com.android.internal.widget.LockPatternUtilsCache$1)>(null);

        $r8 = virtualinvoke $r6.<com.android.internal.widget.LockPatternUtilsCache$CacheKey: com.android.internal.widget.LockPatternUtilsCache$CacheKey set(java.lang.String,int)>(r1, i0);

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void invalidateCache(java.lang.String, int)
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;
        android.util.ArrayMap r2, $r4, $r6;
        java.lang.Throwable r3, $r9;
        com.android.internal.widget.LockPatternUtilsCache$CacheKey $r5, $r7;

        r0 := @this: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r0.<com.android.internal.widget.LockPatternUtilsCache: android.util.ArrayMap mCache>;

        $r5 = r0.<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache$CacheKey mCacheKey>;

        $r7 = virtualinvoke $r5.<com.android.internal.widget.LockPatternUtilsCache$CacheKey: com.android.internal.widget.LockPatternUtilsCache$CacheKey set(java.lang.String,int)>(r1, i0);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void access$100(com.android.internal.widget.LockPatternUtilsCache, java.lang.String, int)
    {
        com.android.internal.widget.LockPatternUtilsCache r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.internal.widget.LockPatternUtilsCache;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.internal.widget.LockPatternUtilsCache: void invalidateCache(java.lang.String,int)>(r1, i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.LockPatternUtilsCache: java.lang.String HAS_LOCK_PASSWORD_CACHE_KEY> = "LockPatternUtils.Cache.HasLockPasswordCacheKey";

        <com.android.internal.widget.LockPatternUtilsCache: java.lang.String HAS_LOCK_PATTERN_CACHE_KEY> = "LockPatternUtils.Cache.HasLockPatternCacheKey";

        return;
    }
}
