class android.app.ActivityThread$ApplicationThread extends android.app.ApplicationThreadNative
{
    private static final java.lang.String ONE_COUNT_COLUMN;
    private static final java.lang.String TWO_COUNT_COLUMNS;
    private static final java.lang.String DB_INFO_FORMAT;
    private int mLastProcessState;
    final android.app.ActivityThread this$0;

    private void <init>(android.app.ActivityThread)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.app.ActivityThread;

        r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0> = r1;

        specialinvoke r0.<android.app.ApplicationThreadNative: void <init>()>();

        r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState> = -1;

        return;
    }

    private void updatePendingConfiguration(android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.res.Configuration r1, $r7, $r10;
        android.app.ResourcesManager r2, $r5;
        java.lang.Throwable r3, $r11;
        android.app.ActivityThread $r4, $r6, $r8, $r9;
        boolean $z0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.res.Configuration;

        $r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r5 = staticinvoke <android.app.ActivityThread: android.app.ResourcesManager access$200(android.app.ActivityThread)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r7 = $r6.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r7 == null goto label2;

        $r9 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r10 = $r9.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z0 = virtualinvoke $r10.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r1);

        if $z0 == 0 goto label3;

     label2:
        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r8.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = r1;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void schedulePauseActivity(android.os.IBinder, boolean, boolean, int, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0, z1, z2;
        int i0;
        byte $b1, $b2, $b3, $b4;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        z2 := @parameter4: boolean;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b4 = 102;

        goto label2;

     label1:
        $b4 = 101;

     label2:
        if z1 == 0 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 0;

     label4:
        if z2 == 0 goto label5;

        $b2 = 2;

        goto label6;

     label5:
        $b2 = 0;

     label6:
        $b1 = $b3 | $b2;

        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, $b4, r1, $b1, i0);

        return;
    }

    public final void scheduleStopActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0;
        android.app.ActivityThread $r2;
        byte $b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b1 = 103;

        goto label2;

     label1:
        $b1 = 104;

     label2:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, $b1, r1, 0, i0);

        return;
    }

    public final void scheduleWindowVisibility(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread $r2;
        byte $b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b0 = 105;

        goto label2;

     label1:
        $b0 = 106;

     label2:
        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, $b0, r1);

        return;
    }

    public final void scheduleSleeping(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread $r2;
        byte $b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 137, r1, $b0);

        return;
    }

    public final void scheduleResumeActivity(android.os.IBinder, int, boolean, android.os.Bundle)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        int i0;
        boolean z0;
        android.os.Bundle r2;
        android.app.ActivityThread $r3;
        byte $b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.os.Bundle;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        $r3 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r3, 107, r1, $b1);

        return;
    }

    public final void scheduleSendResult(android.os.IBinder, java.util.List)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        java.util.List r2;
        android.app.ActivityThread$ResultData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        $r4 = new android.app.ActivityThread$ResultData;

        specialinvoke $r4.<android.app.ActivityThread$ResultData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$ResultData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$ResultData: java.util.List results> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 108, r3);

        return;
    }

    public final void scheduleLaunchActivity(android.content.Intent, android.os.IBinder, int, android.content.pm.ActivityInfo, android.content.res.Configuration, android.content.res.CompatibilityInfo, com.android.internal.app.IVoiceInteractor, int, android.os.Bundle, android.os.PersistableBundle, java.util.List, java.util.List, boolean, boolean, android.app.ProfilerInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.Intent r1;
        android.os.IBinder r2;
        int i0, i1;
        android.content.pm.ActivityInfo r3;
        android.content.res.Configuration r4;
        android.content.res.CompatibilityInfo r5;
        com.android.internal.app.IVoiceInteractor r6;
        android.os.Bundle r7;
        android.os.PersistableBundle r8;
        java.util.List r9, r10;
        boolean z0, z1;
        android.app.ProfilerInfo r11;
        android.app.ActivityThread$ActivityClientRecord $r12, r13;
        android.app.ActivityThread $r14;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.pm.ActivityInfo;

        r4 := @parameter4: android.content.res.Configuration;

        r5 := @parameter5: android.content.res.CompatibilityInfo;

        r6 := @parameter6: com.android.internal.app.IVoiceInteractor;

        i1 := @parameter7: int;

        r7 := @parameter8: android.os.Bundle;

        r8 := @parameter9: android.os.PersistableBundle;

        r9 := @parameter10: java.util.List;

        r10 := @parameter11: java.util.List;

        z0 := @parameter12: boolean;

        z1 := @parameter13: boolean;

        r11 := @parameter14: android.app.ProfilerInfo;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i1, 0);

        $r12 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke $r12.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

        r13 = $r12;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r2;

        r13.<android.app.ActivityThread$ActivityClientRecord: int ident> = i0;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent> = r1;

        r13.<android.app.ActivityThread$ActivityClientRecord: com.android.internal.app.IVoiceInteractor voiceInteractor> = r6;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo> = r3;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.content.res.CompatibilityInfo compatInfo> = r5;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r7;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.os.PersistableBundle persistentState> = r8;

        r13.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r9;

        r13.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r10;

        r13.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = z0;

        r13.<android.app.ActivityThread$ActivityClientRecord: boolean isForward> = z1;

        r13.<android.app.ActivityThread$ActivityClientRecord: android.app.ProfilerInfo profilerInfo> = r11;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void updatePendingConfiguration(android.content.res.Configuration)>(r4);

        $r14 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r14, 100, r13);

        return;
    }

    public final void scheduleRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, boolean, android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        java.util.List r2, r3;
        int i0;
        boolean z0;
        android.content.res.Configuration r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: android.content.res.Configuration;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        virtualinvoke $r5.<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>(r1, r2, r3, i0, z0, r4, 1);

        return;
    }

    public final void scheduleNewIntent(java.util.List, android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.util.List r1;
        android.os.IBinder r2;
        android.app.ActivityThread$NewIntentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.IBinder;

        $r4 = new android.app.ActivityThread$NewIntentData;

        specialinvoke $r4.<android.app.ActivityThread$NewIntentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$NewIntentData: java.util.List intents> = r1;

        r3.<android.app.ActivityThread$NewIntentData: android.os.IBinder token> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 112, r3);

        return;
    }

    public final void scheduleDestroyActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0;
        android.app.ActivityThread $r2;
        byte $b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, 109, r1, $b1, i0);

        return;
    }

    public final void scheduleReceiver(android.content.Intent, android.content.pm.ActivityInfo, android.content.res.CompatibilityInfo, int, java.lang.String, android.os.Bundle, boolean, int, int)
    {
        android.app.ActivityThread$ApplicationThread r0, $r9;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0, i1, i2;
        java.lang.String r4;
        android.os.Bundle r5;
        boolean z0;
        android.app.ActivityThread$ReceiverData r6, $r7;
        android.app.ActivityThread $r8, $r11;
        android.os.IBinder $r10;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Bundle;

        z0 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i2, 0);

        $r7 = new android.app.ActivityThread$ReceiverData;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r9 = $r8.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r10 = virtualinvoke $r9.<android.app.ActivityThread$ApplicationThread: android.os.IBinder asBinder()>();

        specialinvoke $r7.<android.app.ActivityThread$ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder,int)>(r1, i0, r4, r5, z0, 0, $r10, i1);

        r6 = $r7;

        r6.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info> = r2;

        r6.<android.app.ActivityThread$ReceiverData: android.content.res.CompatibilityInfo compatInfo> = r3;

        $r11 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r11, 113, r6);

        return;
    }

    public final void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0;
        android.app.ActivityThread$CreateBackupAgentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $r4 = new android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke $r4.<android.app.ActivityThread$CreateBackupAgentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo> = r1;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo> = r2;

        r3.<android.app.ActivityThread$CreateBackupAgentData: int backupMode> = i0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 128, r3);

        return;
    }

    public final void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        android.app.ActivityThread$CreateBackupAgentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r4 = new android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke $r4.<android.app.ActivityThread$CreateBackupAgentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo> = r1;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 129, r3);

        return;
    }

    public final void scheduleCreateService(android.os.IBinder, android.content.pm.ServiceInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.pm.ServiceInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0;
        android.app.ActivityThread$CreateServiceData r4, $r5;
        android.app.ActivityThread $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.pm.ServiceInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        $r5 = new android.app.ActivityThread$CreateServiceData;

        specialinvoke $r5.<android.app.ActivityThread$CreateServiceData: void <init>()>();

        r4 = $r5;

        r4.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token> = r1;

        r4.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info> = r2;

        r4.<android.app.ActivityThread$CreateServiceData: android.content.res.CompatibilityInfo compatInfo> = r3;

        $r6 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r6, 114, r4);

        return;
    }

    public final void scheduleBindService(android.os.IBinder, android.content.Intent, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        boolean z0;
        int i0;
        android.app.ActivityThread$BindServiceData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        $r4 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r4.<android.app.ActivityThread$BindServiceData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = r2;

        r3.<android.app.ActivityThread$BindServiceData: boolean rebind> = z0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 121, r3);

        return;
    }

    public final void scheduleUnbindService(android.os.IBinder, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        android.app.ActivityThread$BindServiceData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        $r4 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r4.<android.app.ActivityThread$BindServiceData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 122, r3);

        return;
    }

    public final void scheduleServiceArgs(android.os.IBinder, boolean, int, int, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0, i1;
        android.content.Intent r2;
        android.app.ActivityThread$ServiceArgsData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.content.Intent;

        $r4 = new android.app.ActivityThread$ServiceArgsData;

        specialinvoke $r4.<android.app.ActivityThread$ServiceArgsData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$ServiceArgsData: boolean taskRemoved> = z0;

        r3.<android.app.ActivityThread$ServiceArgsData: int startId> = i0;

        r3.<android.app.ActivityThread$ServiceArgsData: int flags> = i1;

        r3.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 115, r3);

        return;
    }

    public final void scheduleStopService(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 116, r1);

        return;
    }

    public final void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, java.util.List, android.content.ComponentName, android.app.ProfilerInfo, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, boolean, boolean, boolean, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.util.Map, android.os.Bundle)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1, $r16, $r18, $r20, $r23, $r24, $r25, $r26;
        android.content.pm.ApplicationInfo r2, $r21, $r22;
        java.util.List r3;
        android.content.ComponentName r4;
        android.app.ProfilerInfo r5;
        android.os.Bundle r6, r13;
        android.app.IInstrumentationWatcher r7;
        android.app.IUiAutomationConnection r8;
        int i0, $i1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, z9;
        android.content.res.Configuration r9;
        android.content.res.CompatibilityInfo r10;
        java.util.Map r11;
        android.content.pm.IPackageManager r12;
        android.content.pm.PackageInfo r15;
        android.app.ActivityThread$AppBindData $r17, r28;
        android.app.ActivityThread $r19;
        android.os.RemoteException $r27;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.content.ComponentName;

        r5 := @parameter4: android.app.ProfilerInfo;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: android.app.IInstrumentationWatcher;

        r8 := @parameter7: android.app.IUiAutomationConnection;

        i0 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        z2 := @parameter11: boolean;

        r9 := @parameter12: android.content.res.Configuration;

        r10 := @parameter13: android.content.res.CompatibilityInfo;

        r11 := @parameter14: java.util.Map;

        r13 := @parameter15: android.os.Bundle;

        if r11 == null goto label01;

        staticinvoke <android.os.ServiceManager: void initServiceCache(java.util.Map)>(r11);

     label01:
        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void setCoreSettings(android.os.Bundle)>(r13);

        r12 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        r15 = null;

     label02:
        $r16 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r15 = interfaceinvoke r12.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>($r16, 0, $i1);

     label03:
        goto label05;

     label04:
        $r27 := @caughtexception;

     label05:
        if r15 == null goto label13;

        $r18 = r15.<android.content.pm.PackageInfo: java.lang.String sharedUserId>;

        if $r18 == null goto label06;

        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        z9 = $z8;

        $r21 = r15.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r21 == null goto label08;

        $r26 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r22 = r15.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r25 = $r22.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $z6 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z6 != 0 goto label08;

        $z7 = 1;

        goto label09;

     label08:
        $z7 = 0;

     label09:
        z4 = $z7;

        if z9 != 0 goto label10;

        if z4 == 0 goto label11;

     label10:
        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        z3 = $z5;

        if z3 != 0 goto label13;

        $r24 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        $r20 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        staticinvoke <dalvik.system.VMRuntime: void registerAppInfo(java.lang.String,java.lang.String,java.lang.String)>($r24, $r23, $r20);

     label13:
        $r17 = new android.app.ActivityThread$AppBindData;

        specialinvoke $r17.<android.app.ActivityThread$AppBindData: void <init>()>();

        r28 = $r17;

        r28.<android.app.ActivityThread$AppBindData: java.lang.String processName> = r1;

        r28.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo> = r2;

        r28.<android.app.ActivityThread$AppBindData: java.util.List providers> = r3;

        r28.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName> = r4;

        r28.<android.app.ActivityThread$AppBindData: android.os.Bundle instrumentationArgs> = r6;

        r28.<android.app.ActivityThread$AppBindData: android.app.IInstrumentationWatcher instrumentationWatcher> = r7;

        r28.<android.app.ActivityThread$AppBindData: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = r8;

        r28.<android.app.ActivityThread$AppBindData: int debugMode> = i0;

        r28.<android.app.ActivityThread$AppBindData: boolean enableOpenGlTrace> = z0;

        r28.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode> = z1;

        r28.<android.app.ActivityThread$AppBindData: boolean persistent> = z2;

        r28.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config> = r9;

        r28.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo> = r10;

        r28.<android.app.ActivityThread$AppBindData: android.app.ProfilerInfo initProfilerInfo> = r5;

        $r19 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r19, 110, r28);

        return;

        catch android.os.RemoteException from label02 to label03 with label04;
    }

    public final void scheduleExit()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 111, null);

        return;
    }

    public final void scheduleSuicide()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 130, null);

        return;
    }

    public void scheduleConfigurationChanged(android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.res.Configuration r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void updatePendingConfiguration(android.content.res.Configuration)>(r1);

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 118, r1);

        return;
    }

    public void updateTimeZone()
    {
        android.app.ActivityThread$ApplicationThread r0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        return;
    }

    public void clearDnsCache()
    {
        android.app.ActivityThread$ApplicationThread r0;
        libcore.net.event.NetworkEventDispatcher $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        staticinvoke <java.net.InetAddress: void clearDnsCache()>();

        $r1 = staticinvoke <libcore.net.event.NetworkEventDispatcher: libcore.net.event.NetworkEventDispatcher getInstance()>();

        virtualinvoke $r1.<libcore.net.event.NetworkEventDispatcher: void onNetworkConfigurationChanged()>();

        return;
    }

    public void setHttpProxy(java.lang.String, java.lang.String, java.lang.String, android.net.Uri)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1, r2, r3;
        android.net.Uri r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.Uri;

        staticinvoke <android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>(r1, r2, r3, r4);

        return;
    }

    public void processInBackground()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1, $r3, $r4;
        android.app.ActivityThread$H $r2, $r5, $r6;
        android.os.Message $r7;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r2 = $r1.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r2.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        $r3 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r6 = $r3.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r5 = $r4.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r7 = virtualinvoke $r5.<android.app.ActivityThread$H: android.os.Message obtainMessage(int)>(120);

        virtualinvoke $r6.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void dumpService(java.io.FileDescriptor, android.os.IBinder, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;
        android.app.ActivityThread$DumpComponentInfo r4, $r6;
        java.io.IOException r5, $r9;
        android.os.ParcelFileDescriptor $r7;
        android.app.ActivityThread $r8;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        $r6 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r6.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r4 = $r6;

     label1:
        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r7;

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r4.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r3;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r8, 123, r4, 0, 0, 1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpService failed", r5);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void scheduleRegisteredReceiver(android.content.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean, boolean, int, int) throws android.os.RemoteException
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.IIntentReceiver r1;
        android.content.Intent r2;
        int i0, i1, i2;
        java.lang.String r3;
        android.os.Bundle r4;
        boolean z0, z1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.IIntentReceiver;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i2, 0);

        interfaceinvoke r1.<android.content.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>(r2, i0, r3, r4, z0, z1, i1);

        return;
    }

    public void scheduleLowMemory()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 124, null);

        return;
    }

    public void scheduleActivityConfigurationChanged(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 125, r1);

        return;
    }

    public void profilerControl(boolean, android.app.ProfilerInfo, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        boolean z0;
        android.app.ProfilerInfo r1;
        int i0;
        android.app.ActivityThread $r2;
        byte $b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.app.ProfilerInfo;

        i0 := @parameter2: int;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>($r2, 127, r1, $b1, i0);

        return;
    }

    public void dumpHeap(boolean, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.app.ActivityThread$ApplicationThread r0;
        boolean z0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        android.app.ActivityThread$DumpHeapData r3, $r4;
        android.app.ActivityThread $r5;
        byte $b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        $r4 = new android.app.ActivityThread$DumpHeapData;

        specialinvoke $r4.<android.app.ActivityThread$DumpHeapData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$DumpHeapData: java.lang.String path> = r1;

        r3.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r5, 135, r3, $b0, 0, 1);

        return;
    }

    public void setSchedulingGroup(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0, $i1;
        java.lang.Exception r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

     label1:
        $i1 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>($i1, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setting process group to ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r6, r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void dispatchPackageBroadcast(int, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;
        java.lang.String[] r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 133, r1, i0);

        return;
    }

    public void scheduleCrash(java.lang.String)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 134, r1);

        return;
    }

    public void dumpActivity(java.io.FileDescriptor, android.os.IBinder, java.lang.String, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String r3;
        java.lang.String[] r4;
        android.app.ActivityThread$DumpComponentInfo r5, $r7;
        java.io.IOException r6, $r10;
        android.os.ParcelFileDescriptor $r8;
        android.app.ActivityThread $r9;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r7 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r7.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r5 = $r7;

     label1:
        $r8 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r5.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r8;

        r5.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r5.<android.app.ActivityThread$DumpComponentInfo: java.lang.String prefix> = r3;

        r5.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r4;

        $r9 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r9, 136, r5, 0, 0, 1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r6 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpActivity failed", r6);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void dumpProvider(java.io.FileDescriptor, android.os.IBinder, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;
        android.app.ActivityThread$DumpComponentInfo r4, $r6;
        java.io.IOException r5, $r9;
        android.os.ParcelFileDescriptor $r7;
        android.app.ActivityThread $r8;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        $r6 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r6.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r4 = $r6;

     label1:
        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r7;

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r4.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r3;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r8, 141, r4, 0, 0, 1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpProvider failed", r5);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void dumpMemInfo(java.io.FileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2;
        java.lang.String[] r3;
        java.io.FileOutputStream r4, $r7;
        com.android.internal.util.FastPrintWriter r5, $r8;
        java.lang.Throwable r6, $r9;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String[];

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        r4 = $r7;

        $r8 = new com.android.internal.util.FastPrintWriter;

        specialinvoke $r8.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r4);

        r5 = $r8;

     label1:
        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void dumpMemInfo(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean)>(r5, r2, z0, z1, z2);

     label2:
        virtualinvoke r5.<java.io.PrintWriter: void flush()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

        r6 = $r9;

     label4:
        virtualinvoke r5.<java.io.PrintWriter: void flush()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void dumpMemInfo(java.io.PrintWriter, android.os.Debug$MemoryInfo, boolean, boolean, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.PrintWriter r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l16, $l17, $l18, $l19, $l20, $l21, $l31, $l33, $l34, $l36, $l42, $l50;
        java.lang.Runtime r3;
        int i10, i11, i12, i13, i14, i15, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i38, $i39, $i40, $i41, $i44, $i45, $i46, $i47, $i48, $i49, $i51, i52, i53;
        android.database.sqlite.SQLiteDebug$PagerStats r4;
        android.database.sqlite.SQLiteDebug$DbStats r5, r6;
        java.lang.Object[] $r7, $r13, $r14, $r16, $r21, $r23, $r26, $r28, $r31, $r36;
        android.app.ActivityThread$AppBindData $r8, $r48;
        android.app.ActivityThread $r9, $r47;
        java.lang.Long $r10, $r11, $r12, $r15, $r25;
        java.lang.Integer $r17, $r18, $r19, $r20, $r22, $r24, $r27, $r33;
        java.util.ArrayList $r29, $r32, $r40, $r42;
        java.lang.Object $r30, $r41;
        java.lang.String $r34, $r35, $r37, $r38, $r43, $r44, $r45, $r46, $r49, r50;
        byte $b30, $b32;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $l17 = staticinvoke <android.os.Debug: long getNativeHeapSize()>();

        l0 = $l17 / 1024L;

        $l18 = staticinvoke <android.os.Debug: long getNativeHeapAllocatedSize()>();

        l1 = $l18 / 1024L;

        $l21 = staticinvoke <android.os.Debug: long getNativeHeapFreeSize()>();

        l2 = $l21 / 1024L;

        r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l19 = virtualinvoke r3.<java.lang.Runtime: long totalMemory()>();

        l3 = $l19 / 1024L;

        $l20 = virtualinvoke r3.<java.lang.Runtime: long freeMemory()>();

        l4 = $l20 / 1024L;

        l5 = l3 - l4;

        l6 = staticinvoke <android.view.ViewDebug: long getViewInstanceCount()>();

        l7 = staticinvoke <android.view.ViewDebug: long getViewRootImplCount()>();

        l8 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "android/app/ContextImpl");

        l9 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "android/app/Activity");

        i10 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetCount()>();

        i12 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetManagerCount()>();

        i11 = staticinvoke <android.os.Debug: int getBinderLocalObjectCount()>();

        i14 = staticinvoke <android.os.Debug: int getBinderProxyObjectCount()>();

        i13 = staticinvoke <android.os.Debug: int getBinderDeathObjectCount()>();

        l16 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "com/android/org/conscrypt/OpenSSLSocketImpl");

        r4 = staticinvoke <android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()>();

        $i22 = staticinvoke <android.os.Process: int myPid()>();

        $r9 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r8 = $r9.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r8 == null goto label01;

        $r47 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r48 = $r47.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        $r49 = $r48.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

        goto label02;

     label01:
        $r49 = "unknown";

     label02:
        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r1, r2, z0, z1, z2, $i22, $r49, l0, l1, l2, l3, l5, l4);

        if z0 == 0 goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l6);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l7);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l9);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l16);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i45 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i44 = $i45 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i44);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i47 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i46 = $i47 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i46);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i49 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int pageCacheOverflow>;

        $i48 = $i49 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i48);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i40 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int largestMemAlloc>;

        $i39 = $i40 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i39);

        i15 = 0;

     label03:
        $r40 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        $i41 = virtualinvoke $r40.<java.util.ArrayList: int size()>();

        if i15 >= $i41 goto label04;

        $r42 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        $r41 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r5 = (android.database.sqlite.SQLiteDebug$DbStats) $r41;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r43 = r5.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String dbName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $l42 = r5.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l42);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $l50 = r5.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l50);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i51 = r5.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i51);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r45 = r5.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r45);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r46 = r5.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r46);

        i15 = i15 + 1;

        goto label03;

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        return;

     label05:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" Objects");

        $r7 = newarray (java.lang.Object)[4];

        $r7[0] = "Views:";

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        $r7[1] = $r11;

        $r7[2] = "ViewRootImpl:";

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        $r7[3] = $r10;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", $r7);

        $r14 = newarray (java.lang.Object)[4];

        $r14[0] = "AppContexts:";

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        $r14[1] = $r15;

        $r14[2] = "Activities:";

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        $r14[3] = $r12;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", $r14);

        $r13 = newarray (java.lang.Object)[4];

        $r13[0] = "Assets:";

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        $r13[1] = $r18;

        $r13[2] = "AssetManagers:";

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r13[3] = $r19;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", $r13);

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = "Local Binders:";

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r16[1] = $r17;

        $r16[2] = "Proxy Binders:";

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        $r16[3] = $r22;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", $r16);

        $r23 = newarray (java.lang.Object)[2];

        $r23[0] = "Death Recipients:";

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        $r23[1] = $r20;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", $r23);

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = "OpenSSL Sockets:";

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        $r21[1] = $r25;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", $r21);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" SQL");

        $r26 = newarray (java.lang.Object)[2];

        $r26[0] = "MEMORY_USED:";

        $i24 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i23 = $i24 / 1024;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r26[1] = $r24;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", $r26);

        $r28 = newarray (java.lang.Object)[4];

        $r28[0] = "PAGECACHE_OVERFLOW:";

        $i28 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int pageCacheOverflow>;

        $i27 = $i28 / 1024;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r28[1] = $r27;

        $r28[2] = "MALLOC_SIZE:";

        $i25 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int largestMemAlloc>;

        $i26 = $i25 / 1024;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        $r28[3] = $r33;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", $r28);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r32 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        i52 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

        if i52 <= 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" DATABASES");

        $r31 = newarray (java.lang.Object)[5];

        $r31[0] = "pgsz";

        $r31[1] = "dbsz";

        $r31[2] = "Lookaside(b)";

        $r31[3] = "cache";

        $r31[4] = "Dbname";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "  %8s %8s %14s %14s  %s", $r31);

        i53 = 0;

     label06:
        if i53 >= i52 goto label13;

        $r29 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        $r30 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i53);

        r6 = (android.database.sqlite.SQLiteDebug$DbStats) $r30;

        $r36 = newarray (java.lang.Object)[5];

        $l33 = r6.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        $b32 = $l33 cmp 0L;

        if $b32 <= 0 goto label07;

        $l34 = r6.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l34);

        goto label08;

     label07:
        $r44 = " ";

     label08:
        $r36[0] = $r44;

        $l31 = r6.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        $b30 = $l31 cmp 0L;

        if $b30 <= 0 goto label09;

        $l36 = r6.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        $r37 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l36);

        goto label10;

     label09:
        $r37 = " ";

     label10:
        $r36[1] = $r37;

        $i29 = r6.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        if $i29 <= 0 goto label11;

        $i38 = r6.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i38);

        goto label12;

     label11:
        $r38 = " ";

     label12:
        $r36[2] = $r38;

        $r35 = r6.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        $r36[3] = $r35;

        $r34 = r6.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String dbName>;

        $r36[4] = $r34;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "  %8s %8s %14s %14s  %s", $r36);

        i53 = i53 + 1;

        goto label06;

     label13:
        r50 = staticinvoke <android.content.res.AssetManager: java.lang.String getAssetAllocations()>();

        if r50 == null goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" Asset Allocations");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r50);

     label14:
        return;
    }

    public void dumpGfxInfo(java.io.FileDescriptor, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        android.app.ActivityThread $r3;
        android.view.WindowManagerGlobal $r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        $r3 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$700(android.app.ActivityThread,java.io.FileDescriptor)>($r3, r1);

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        virtualinvoke $r4.<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)>(r1);

        return;
    }

    public void dumpDbInfo(java.io.FileDescriptor, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        com.android.internal.util.FastPrintWriter r3, $r5;
        android.util.PrintWriterPrinter r4, $r7;
        java.io.FileOutputStream $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        $r5 = new com.android.internal.util.FastPrintWriter;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        specialinvoke $r5.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r6);

        r3 = $r5;

        $r7 = new android.util.PrintWriterPrinter;

        specialinvoke $r7.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r3);

        r4 = $r7;

        staticinvoke <android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>(r4, r2);

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void unstableProviderDied(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 142, r1);

        return;
    }

    public void requestAssistContextExtras(android.os.IBinder, android.os.IBinder, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1, r2;
        int i0;
        android.app.ActivityThread$RequestAssistContextExtras r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $r4 = new android.app.ActivityThread$RequestAssistContextExtras;

        specialinvoke $r4.<android.app.ActivityThread$RequestAssistContextExtras: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder activityToken> = r1;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder requestToken> = r2;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: int requestType> = i0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 143, r3);

        return;
    }

    public void setCoreSettings(android.os.Bundle)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.Bundle r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 138, r1);

        return;
    }

    public void updatePackageCompatibilityInfo(java.lang.String, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1;
        android.content.res.CompatibilityInfo r2;
        android.app.ActivityThread$UpdateCompatibilityData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r4 = new android.app.ActivityThread$UpdateCompatibilityData;

        specialinvoke $r4.<android.app.ActivityThread$UpdateCompatibilityData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg> = r1;

        r3.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 139, r3);

        return;
    }

    public void scheduleTrimMemory(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r1, 140, null, i0);

        return;
    }

    public void scheduleTranslucentConversionComplete(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread $r2;
        byte $b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 144, r1, $b0);

        return;
    }

    public void scheduleOnNewActivityOptions(android.os.IBinder, android.app.ActivityOptions)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityOptions r2;
        android.util.Pair $r3;
        android.app.ActivityThread $r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.ActivityOptions;

        $r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r3 = new android.util.Pair;

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r4, 146, $r3);

        return;
    }

    public void setProcessState(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 1);

        return;
    }

    public void updateProcessState(int, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0, r1;
        int i0, $i2;
        boolean z0;
        byte b1;
        java.lang.Throwable r2, $r5;
        dalvik.system.VMRuntime $r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0;

        entermonitor r0;

     label1:
        $i2 = r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState>;

        if $i2 == i0 goto label3;

        r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState> = i0;

        b1 = 1;

        if i0 > 3 goto label2;

        b1 = 0;

     label2:
        $r4 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        virtualinvoke $r4.<dalvik.system.VMRuntime: void updateProcessState(int)>(b1);

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void scheduleInstallProvider(android.content.pm.ProviderInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ProviderInfo r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 145, r1);

        return;
    }

    public final void updateTimePrefs(boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        boolean z0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        z0 := @parameter0: boolean;

        staticinvoke <java.text.DateFormat: void set24HourTimePref(boolean)>(z0);

        return;
    }

    public void scheduleCancelVisibleBehind(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 147, r1);

        return;
    }

    public void scheduleBackgroundVisibleBehindChanged(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread $r2;
        byte $b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 148, r1, $b0);

        return;
    }

    public void scheduleEnterAnimationComplete(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 149, r1);

        return;
    }

    void <init>(android.app.ActivityThread, android.app.ActivityThread$1)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread r1;
        android.app.ActivityThread$1 r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.app.ActivityThread$1;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.app.ActivityThread$ApplicationThread: java.lang.String DB_INFO_FORMAT> = "  %8s %8s %14s %14s  %s";

        <android.app.ActivityThread$ApplicationThread: java.lang.String TWO_COUNT_COLUMNS> = "%21s %8d %21s %8d";

        <android.app.ActivityThread$ApplicationThread: java.lang.String ONE_COUNT_COLUMN> = "%21s %8d";

        return;
    }
}
