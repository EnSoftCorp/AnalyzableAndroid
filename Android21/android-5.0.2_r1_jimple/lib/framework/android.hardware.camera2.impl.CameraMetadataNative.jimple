public class android.hardware.camera2.impl.CameraMetadataNative extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    private static final boolean VERBOSE;
    public static final int NATIVE_JPEG_FORMAT;
    private static final java.lang.String CELLID_PROCESS;
    private static final java.lang.String GPS_PROCESS;
    private static final int FACE_LANDMARK_SIZE;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int TYPE_BYTE;
    public static final int TYPE_INT32;
    public static final int TYPE_FLOAT;
    public static final int TYPE_INT64;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_RATIONAL;
    public static final int NUM_TYPES;
    private static final java.util.HashMap sGetCommandMap;
    private static final java.util.HashMap sSetCommandMap;
    private long mMetadataPtr;

    private static java.lang.String translateLocationProviderToProcess(java.lang.String)
    {
        java.lang.String r0, r1;
        byte b0;
        int $i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = r0;

        b0 = -1;

        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 102570: goto label2;
            case 1843485230: goto label3;
            default: goto label4;
        };

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("gps");

        if $z1 == 0 goto label4;

        b0 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("network");

        if $z0 == 0 goto label4;

        b0 = 1;

     label4:
        lookupswitch(b0)
        {
            case 0: goto label5;
            case 1: goto label6;
            default: goto label7;
        };

     label5:
        return "GPS";

     label6:
        return "CELLID";

     label7:
        return null;
    }

    private static java.lang.String translateProcessToLocationProvider(java.lang.String)
    {
        java.lang.String r0, r1;
        byte b0;
        int $i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = r0;

        b0 = -1;

        $i1 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 70794: goto label2;
            case 1984215549: goto label3;
            default: goto label4;
        };

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GPS");

        if $z1 == 0 goto label4;

        b0 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("CELLID");

        if $z0 == 0 goto label4;

        b0 = 1;

     label4:
        lookupswitch(b0)
        {
            case 0: goto label5;
            case 1: goto label6;
            default: goto label7;
        };

     label5:
        return "gps";

     label6:
        return "network";

     label7:
        return null;
    }

    public void <init>()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        long $l0, $l1;
        byte $b2;
        java.lang.OutOfMemoryError $r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: long nativeAllocate()>();

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = $l0;

        $l1 = r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r1 = new java.lang.OutOfMemoryError;

        specialinvoke $r1.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("Failed to allocate native CameraMetadata");

        throw $r1;

     label1:
        return;
    }

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0, r1;
        long $l0, $l1;
        byte $b2;
        java.lang.OutOfMemoryError $r2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: long nativeAllocateCopy(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = $l0;

        $l1 = r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = new java.lang.OutOfMemoryError;

        specialinvoke $r2.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("Failed to allocate native CameraMetadata");

        throw $r2;

     label1:
        return;
    }

    public static android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0, r1, $r2;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = new android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke $r2.<android.hardware.camera2.impl.CameraMetadataNative: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative: void swap(android.hardware.camera2.impl.CameraMetadataNative)>(r0);

        return r1;
    }

    public int describeContents()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeWriteToParcel(android.os.Parcel)>(r1);

        return;
    }

    public java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    public java.lang.Object get(android.hardware.camera2.CaptureResult$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureResult$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    public java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    public java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        android.hardware.camera2.impl.GetCommand r2;
        java.util.HashMap $r4;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "key must not be null");

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.hardware.camera2.impl.GetCommand) $r5;

        if r2 == null goto label1;

        $r7 = interfaceinvoke r2.<android.hardware.camera2.impl.GetCommand: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)>(r0, r1);

        return $r7;

     label1:
        $r6 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.impl.CameraMetadataNative$Key)>(r1);

        return $r6;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.os.Parcel r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeReadFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public static native int nativeSetupGlobalVendorTagDescriptor();

    public void set(android.hardware.camera2.impl.CameraMetadataNative$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        java.lang.Object r2, $r5;
        android.hardware.camera2.impl.SetCommand r3;
        java.util.HashMap $r4;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        r2 := @parameter1: java.lang.Object;

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.hardware.camera2.impl.SetCommand) $r5;

        if r3 == null goto label1;

        interfaceinvoke r3.<android.hardware.camera2.impl.SetCommand: void setValue(android.hardware.camera2.impl.CameraMetadataNative,java.lang.Object)>(r0, r2);

        return;

     label1:
        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>(r1, r2);

        return;
    }

    public void set(android.hardware.camera2.CaptureRequest$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    public void set(android.hardware.camera2.CaptureResult$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureResult$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    public void set(android.hardware.camera2.CameraCharacteristics$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    private void close()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeClose()>();

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = 0L;

        return;
    }

    private java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    private java.lang.Object getBase(android.hardware.camera2.CaptureResult$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureResult$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    private java.lang.Object getBase(android.hardware.camera2.CaptureRequest$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        $r2 = virtualinvoke r1.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.impl.CameraMetadataNative$Key)>($r2);

        return $r3;
    }

    private java.lang.Object getBase(android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        int i0;
        byte[] r2;
        android.hardware.camera2.marshal.Marshaler r3;
        java.nio.ByteBuffer r4, $r5;
        java.nio.ByteOrder $r6;
        java.lang.Object $r7;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        i0 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: int getTag()>();

        r2 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: byte[] readValues(int)>(i0);

        if r2 != null goto label1;

        return null;

     label1:
        r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.marshal.Marshaler getMarshalerForKey(android.hardware.camera2.impl.CameraMetadataNative$Key)>(r1);

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        r4 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r7 = virtualinvoke r3.<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>(r4);

        return $r7;
    }

    private int[] getAvailableFormats()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] r1;
        int i0, $i1, $i2;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS>;

        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (int[]) $r3;

        if r1 == null goto label3;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $i2 = r1[i0];

        if $i2 != 33 goto label2;

        r1[i0] = 256;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r1;
    }

    private boolean setFaces(android.hardware.camera2.params.Face[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.Face[] r1, r2, r4;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, i31, i32, i33, i34, i35;
        boolean z0;
        android.hardware.camera2.params.Face r3, r5;
        byte b6, $b9;
        android.hardware.camera2.CaptureResult$Key $r6, $r7, $r8, $r9;
        android.graphics.Rect $r10;
        android.graphics.Point $r11, $r12, $r13, $r14, $r15, $r16;
        android.graphics.Rect[] r17;
        byte[] r18;
        int[] r19, r20;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.params.Face[];

        if r1 != null goto label01;

        return 0;

     label01:
        i0 = lengthof r1;

        z0 = 1;

        r2 = r1;

        i1 = lengthof r2;

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        r3 = r2[i2];

        if r3 != null goto label03;

        i0 = i0 + -1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "setFaces - null face detected, skipping");

        goto label04;

     label03:
        $i29 = virtualinvoke r3.<android.hardware.camera2.params.Face: int getId()>();

        if $i29 != -1 goto label04;

        z0 = 0;

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        r17 = newarray (android.graphics.Rect)[i0];

        r18 = newarray (byte)[i0];

        r19 = null;

        r20 = null;

        if z0 == 0 goto label06;

        r19 = newarray (int)[i0];

        $i30 = i0 * 6;

        r20 = newarray (int)[$i30];

     label06:
        i3 = 0;

        r4 = r1;

        i4 = lengthof r4;

        i5 = 0;

     label07:
        if i5 >= i4 goto label11;

        r5 = r4[i5];

        if r5 != null goto label08;

        goto label10;

     label08:
        $r10 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()>();

        r17[i3] = $r10;

        $i7 = virtualinvoke r5.<android.hardware.camera2.params.Face: int getScore()>();

        $b9 = (byte) $i7;

        r18[i3] = $b9;

        if z0 == 0 goto label09;

        $i8 = virtualinvoke r5.<android.hardware.camera2.params.Face: int getId()>();

        r19[i3] = $i8;

        b6 = 0;

        $i10 = i3 * 6;

        i31 = b6 + 1;

        $i11 = $i10 + b6;

        $r11 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>();

        $i12 = $r11.<android.graphics.Point: int x>;

        r20[$i11] = $i12;

        $i14 = i3 * 6;

        i32 = i31 + 1;

        $i13 = $i14 + i31;

        $r12 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>();

        $i15 = $r12.<android.graphics.Point: int y>;

        r20[$i13] = $i15;

        $i17 = i3 * 6;

        i33 = i32 + 1;

        $i16 = $i17 + i32;

        $r13 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>();

        $i20 = $r13.<android.graphics.Point: int x>;

        r20[$i16] = $i20;

        $i18 = i3 * 6;

        i34 = i33 + 1;

        $i19 = $i18 + i33;

        $r14 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>();

        $i22 = $r14.<android.graphics.Point: int y>;

        r20[$i19] = $i22;

        $i21 = i3 * 6;

        i35 = i34 + 1;

        $i24 = $i21 + i34;

        $r15 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>();

        $i23 = $r15.<android.graphics.Point: int x>;

        r20[$i24] = $i23;

        $i27 = i3 * 6;

        $i26 = $i27 + i35;

        $r16 = virtualinvoke r5.<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>();

        $i25 = $r16.<android.graphics.Point: int y>;

        r20[$i26] = $i25;

     label09:
        i3 = i3 + 1;

     label10:
        i5 = i5 + 1;

        goto label07;

     label11:
        $r6 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r6, r17);

        $r7 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_IDS>;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r7, r19);

        $r9 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_LANDMARKS>;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r9, r20);

        $r8 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_SCORES>;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r8, r18);

        return 1;
    }

    private android.hardware.camera2.params.Face[] getFaces()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.lang.Integer r1, $r33, $r34, $r35, $r37, $r42;
        byte[] r2;
        android.graphics.Rect[] r3;
        int[] r4, r5;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i48, $i49, $i50, i54, i55;
        java.util.ArrayList r6, $r23;
        android.graphics.Point r7, r8, r9, $r25, $r26, $r27;
        android.hardware.camera2.params.Face r10, $r28, $r29;
        android.hardware.camera2.CaptureResult$Key $r11, $r13, $r14, $r16, $r18;
        java.lang.Object $r12, $r15, $r17, $r19, $r21;
        java.lang.Object[] $r20, $r32, $r38;
        boolean $z0;
        android.hardware.camera2.params.Face[] $r22, $r43, $r44, r47;
        byte $b10, $b14, $b33, $b34, $b35, $b36;
        android.graphics.Rect $r30, $r31;
        java.lang.String $r36, $r41, $r45;
        java.lang.StringBuilder $r39, $r40, $r46;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r11 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_DETECT_MODE>;

        $r12 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r11);

        r1 = (java.lang.Integer) $r12;

        $r13 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_SCORES>;

        $r15 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r13);

        r2 = (byte[]) $r15;

        $r14 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        $r17 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r14);

        r3 = (android.graphics.Rect[]) $r17;

        $r16 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_IDS>;

        $r19 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r16);

        r4 = (int[]) $r19;

        $r18 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_LANDMARKS>;

        $r21 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r18);

        r5 = (int[]) $r21;

        $r20 = newarray (java.lang.Object)[5];

        $r20[0] = r1;

        $r20[1] = r2;

        $r20[2] = r3;

        $r20[3] = r4;

        $r20[4] = r5;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: boolean areValuesAllNull(java.lang.Object[])>($r20);

        if $z0 == 0 goto label01;

        return null;

     label01:
        if r1 != null goto label02;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Face detect mode metadata is null, assuming the mode is SIMPLE");

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label04;

     label02:
        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label03;

        $r43 = newarray (android.hardware.camera2.params.Face)[0];

        return $r43;

     label03:
        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i4 == 1 goto label04;

        $i50 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i50 == 2 goto label04;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown face detect mode: ");

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r45);

        $r44 = newarray (android.hardware.camera2.params.Face)[0];

        return $r44;

     label04:
        if r2 == null goto label05;

        if r3 != null goto label06;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Expect face scores and rectangles to be non-null");

        $r22 = newarray (android.hardware.camera2.params.Face)[0];

        return $r22;

     label06:
        $i7 = lengthof r2;

        $i5 = lengthof r3;

        if $i7 == $i5 goto label07;

        $r38 = newarray (java.lang.Object)[2];

        $i48 = lengthof r2;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i48);

        $r38[0] = $r37;

        $i47 = lengthof r3;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i47);

        $r38[1] = $r42;

        $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Face score size(%d) doesn match face rectangle size(%d)!", $r38);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r41);

     label07:
        $i9 = lengthof r2;

        $i6 = lengthof r3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i6);

        $i8 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i8 != 2 goto label12;

        if r4 == null goto label08;

        if r5 != null goto label09;

     label08:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Expect face ids and landmarks to be non-null for FULL mode,fallback to SIMPLE mode");

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label12;

     label09:
        $i39 = lengthof r4;

        if $i39 != i0 goto label10;

        $i49 = lengthof r5;

        $i44 = i0 * 6;

        if $i49 == $i44 goto label11;

     label10:
        $r32 = newarray (java.lang.Object)[3];

        $i37 = lengthof r4;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i37);

        $r32[0] = $r35;

        $i41 = lengthof r5;

        $i40 = $i41 * 6;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i40);

        $r32[1] = $r33;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r32[2] = $r34;

        $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Face id size(%d), or face landmark size(%d) don\'tmatch face number(%d)!", $r32);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r36);

     label11:
        $i46 = lengthof r4;

        i54 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i46);

        $i43 = lengthof r5;

        $i42 = $i43 / 6;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i54, $i42);

     label12:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r6 = $r23;

        $i11 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i11 != 1 goto label16;

        i1 = 0;

     label13:
        if i1 >= i0 goto label15;

        $b36 = r2[i1];

        if $b36 > 100 goto label14;

        $b33 = r2[i1];

        if $b33 < 1 goto label14;

        $r29 = new android.hardware.camera2.params.Face;

        $r30 = r3[i1];

        $b34 = r2[i1];

        specialinvoke $r29.<android.hardware.camera2.params.Face: void <init>(android.graphics.Rect,int)>($r30, $b34);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label14:
        i1 = i1 + 1;

        goto label13;

     label15:
        goto label19;

     label16:
        i55 = 0;

     label17:
        if i55 >= i0 goto label19;

        $b10 = r2[i55];

        if $b10 > 100 goto label18;

        $b14 = r2[i55];

        if $b14 < 1 goto label18;

        $i15 = r4[i55];

        if $i15 < 0 goto label18;

        $r25 = new android.graphics.Point;

        $i13 = i55 * 6;

        $i17 = r5[$i13];

        $i18 = i55 * 6;

        $i19 = $i18 + 1;

        $i16 = r5[$i19];

        specialinvoke $r25.<android.graphics.Point: void <init>(int,int)>($i17, $i16);

        r7 = $r25;

        $r26 = new android.graphics.Point;

        $i22 = i55 * 6;

        $i21 = $i22 + 2;

        $i23 = r5[$i21];

        $i20 = i55 * 6;

        $i25 = $i20 + 3;

        $i24 = r5[$i25];

        specialinvoke $r26.<android.graphics.Point: void <init>(int,int)>($i23, $i24);

        r8 = $r26;

        $r27 = new android.graphics.Point;

        $i29 = i55 * 6;

        $i28 = $i29 + 4;

        $i31 = r5[$i28];

        $i27 = i55 * 6;

        $i26 = $i27 + 5;

        $i32 = r5[$i26];

        specialinvoke $r27.<android.graphics.Point: void <init>(int,int)>($i31, $i32);

        r9 = $r27;

        $r28 = new android.hardware.camera2.params.Face;

        $r31 = r3[i55];

        $b35 = r2[i55];

        $i30 = r4[i55];

        specialinvoke $r28.<android.hardware.camera2.params.Face: void <init>(android.graphics.Rect,int,int,android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r31, $b35, $i30, r7, r8, r9);

        r10 = $r28;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label18:
        i55 = i55 + 1;

        goto label17;

     label19:
        $i12 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        r47 = newarray (android.hardware.camera2.params.Face)[$i12];

        virtualinvoke r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r47);

        return r47;
    }

    private android.graphics.Rect[] getFaceRectangles()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.graphics.Rect[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.hardware.camera2.CaptureResult$Key $r3;
        java.lang.Object $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r3 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        $r4 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CaptureResult$Key)>($r3);

        r1 = (android.graphics.Rect[]) $r4;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = lengthof r1;

        r2 = newarray (android.graphics.Rect)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label3;

        $r5 = new android.graphics.Rect;

        $r6 = r1[i0];

        $i10 = $r6.<android.graphics.Rect: int left>;

        $r7 = r1[i0];

        $i8 = $r7.<android.graphics.Rect: int top>;

        $r8 = r1[i0];

        $i4 = $r8.<android.graphics.Rect: int right>;

        $r9 = r1[i0];

        $i3 = $r9.<android.graphics.Rect: int left>;

        $i9 = $i4 - $i3;

        $r10 = r1[i0];

        $i7 = $r10.<android.graphics.Rect: int bottom>;

        $r11 = r1[i0];

        $i5 = $r11.<android.graphics.Rect: int top>;

        $i6 = $i7 - $i5;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>($i10, $i8, $i9, $i6);

        r2[i0] = $r5;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r2;
    }

    private android.hardware.camera2.params.LensShadingMap getLensShadingMap()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        float[] r1;
        android.util.Size r2;
        android.hardware.camera2.params.LensShadingMap r3, $r8;
        android.hardware.camera2.CaptureResult$Key $r4;
        java.lang.Object $r5, $r7;
        android.hardware.camera2.CameraCharacteristics$Key $r6;
        int $i0, $i1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r4 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_MAP>;

        $r5 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CaptureResult$Key)>($r4);

        r1 = (float[]) $r5;

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_INFO_SHADING_MAP_SIZE>;

        $r7 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        r2 = (android.util.Size) $r7;

        if r1 != null goto label1;

        return null;

     label1:
        if r2 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "getLensShadingMap - Lens shading map size was null.");

        return null;

     label2:
        $r8 = new android.hardware.camera2.params.LensShadingMap;

        $i0 = virtualinvoke r2.<android.util.Size: int getHeight()>();

        $i1 = virtualinvoke r2.<android.util.Size: int getWidth()>();

        specialinvoke $r8.<android.hardware.camera2.params.LensShadingMap: void <init>(float[],int,int)>(r1, $i0, $i1);

        r3 = $r8;

        return r3;
    }

    private android.location.Location getGpsLocation()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.lang.String r1, $r13;
        double[] r2;
        java.lang.Long r3;
        android.location.Location r4, $r12;
        android.hardware.camera2.CaptureResult$Key $r5, $r7, $r9;
        java.lang.Object $r6, $r8, $r10;
        java.lang.Object[] $r11;
        boolean $z0;
        double $d0, $d1, $d2;
        long $l2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r5 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_PROCESSING_METHOD>;

        $r6 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r5);

        r1 = (java.lang.String) $r6;

        $r7 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_COORDINATES>;

        $r8 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r7);

        r2 = (double[]) $r8;

        $r9 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_TIMESTAMP>;

        $r10 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r9);

        r3 = (java.lang.Long) $r10;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r1;

        $r11[1] = r2;

        $r11[2] = r3;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: boolean areValuesAllNull(java.lang.Object[])>($r11);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r12 = new android.location.Location;

        $r13 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String translateProcessToLocationProvider(java.lang.String)>(r1);

        specialinvoke $r12.<android.location.Location: void <init>(java.lang.String)>($r13);

        r4 = $r12;

        if r3 == null goto label2;

        $l2 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        virtualinvoke r4.<android.location.Location: void setTime(long)>($l2);

        goto label3;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "getGpsLocation - No timestamp for GPS location.");

     label3:
        if r2 == null goto label4;

        $d0 = r2[0];

        virtualinvoke r4.<android.location.Location: void setLatitude(double)>($d0);

        $d2 = r2[1];

        virtualinvoke r4.<android.location.Location: void setLongitude(double)>($d2);

        $d1 = r2[2];

        virtualinvoke r4.<android.location.Location: void setAltitude(double)>($d1);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "getGpsLocation - No coordinates for GPS location");

     label5:
        return r4;
    }

    private boolean setGpsLocation(android.location.Location)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.location.Location r1;
        double[] r2, $r4;
        java.lang.String r3, $r5;
        long l0;
        double $d0, $d1, $d2;
        java.lang.Long $r6;
        android.hardware.camera2.CaptureRequest$Key $r7, $r8, $r9;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.location.Location;

        if r1 != null goto label1;

        return 0;

     label1:
        $r4 = newarray (double)[3];

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $r4[0] = $d0;

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $r4[1] = $d1;

        $d2 = virtualinvoke r1.<android.location.Location: double getAltitude()>();

        $r4[2] = $d2;

        r2 = $r4;

        $r5 = virtualinvoke r1.<android.location.Location: java.lang.String getProvider()>();

        r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String translateLocationProviderToProcess(java.lang.String)>($r5);

        l0 = virtualinvoke r1.<android.location.Location: long getTime()>();

        $r7 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_GPS_TIMESTAMP>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r7, $r6);

        $r9 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_GPS_COORDINATES>;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r9, r2);

        if r3 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "setGpsLocation - No process method, Location is not from a GPS or NETWORKprovider");

        goto label3;

     label2:
        $r8 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_GPS_PROCESSING_METHOD>;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r8, r3);

     label3:
        return 1;
    }

    private android.hardware.camera2.params.StreamConfigurationMap getStreamConfigurationMap()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.StreamConfiguration[] r1;
        android.hardware.camera2.params.StreamConfigurationDuration[] r2, r3;
        android.hardware.camera2.params.HighSpeedVideoConfiguration[] r4;
        android.hardware.camera2.CameraCharacteristics$Key $r5, $r7, $r9, $r11;
        java.lang.Object $r6, $r8, $r10, $r12;
        android.hardware.camera2.params.StreamConfigurationMap $r13;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STREAM_CONFIGURATIONS>;

        $r6 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r1 = (android.hardware.camera2.params.StreamConfiguration[]) $r6;

        $r7 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MIN_FRAME_DURATIONS>;

        $r8 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r7);

        r2 = (android.hardware.camera2.params.StreamConfigurationDuration[]) $r8;

        $r9 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_STALL_DURATIONS>;

        $r10 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r9);

        r3 = (android.hardware.camera2.params.StreamConfigurationDuration[]) $r10;

        $r11 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_HIGH_SPEED_VIDEO_CONFIGURATIONS>;

        $r12 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r11);

        r4 = (android.hardware.camera2.params.HighSpeedVideoConfiguration[]) $r12;

        $r13 = new android.hardware.camera2.params.StreamConfigurationMap;

        specialinvoke $r13.<android.hardware.camera2.params.StreamConfigurationMap: void <init>(android.hardware.camera2.params.StreamConfiguration[],android.hardware.camera2.params.StreamConfigurationDuration[],android.hardware.camera2.params.StreamConfigurationDuration[],android.hardware.camera2.params.HighSpeedVideoConfiguration[])>(r1, r2, r3, r4);

        return $r13;
    }

    private java.lang.Integer getMaxRegions(android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        int[] r2;
        android.hardware.camera2.CameraCharacteristics$Key $r3, $r5, $r6, $r7;
        java.lang.Object $r4;
        boolean $z2, $z3, $z4;
        java.lang.AssertionError $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        int $i1, $i2, $i3;
        java.lang.String $r12;
        java.lang.Integer $r13, $r14, $r15;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        $r3 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS>;

        $r4 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r3);

        r2 = (int[]) $r4;

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE>;

        $z2 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $i3 = r2[0];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r15;

     label2:
        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB>;

        $z3 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label3;

        $i2 = r2[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r14;

     label3:
        $r7 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF>;

        $z4 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label4;

        $i1 = r2[2];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r13;

     label4:
        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r8;
    }

    private java.lang.Integer getMaxNumOutputs(android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        int[] r2;
        android.hardware.camera2.CameraCharacteristics$Key $r3, $r5, $r6, $r7;
        java.lang.Object $r4;
        boolean $z2, $z3, $z4;
        java.lang.AssertionError $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        int $i1, $i2, $i3;
        java.lang.String $r12;
        java.lang.Integer $r13, $r14, $r15;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        $r3 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_STREAMS>;

        $r4 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraCharacteristics$Key)>($r3);

        r2 = (int[]) $r4;

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW>;

        $z2 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $i3 = r2[0];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r15;

     label2:
        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC>;

        $z3 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label3;

        $i2 = r2[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r14;

     label3:
        $r7 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING>;

        $z4 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: boolean equals(java.lang.Object)>($r7);

        if $z4 == 0 goto label4;

        $i1 = r2[2];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r13;

     label4:
        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid key ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r8;
    }

    private android.hardware.camera2.params.TonemapCurve getTonemapCurve()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        float[] r1, r2, r3;
        android.hardware.camera2.params.TonemapCurve r4, $r12;
        android.hardware.camera2.CaptureRequest$Key $r5, $r7, $r9;
        java.lang.Object $r6, $r8, $r10;
        java.lang.Object[] $r11;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r5 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_RED>;

        $r6 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CaptureRequest$Key)>($r5);

        r1 = (float[]) $r6;

        $r7 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_GREEN>;

        $r8 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CaptureRequest$Key)>($r7);

        r2 = (float[]) $r8;

        $r9 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_BLUE>;

        $r10 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CaptureRequest$Key)>($r9);

        r3 = (float[]) $r10;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r1;

        $r11[1] = r2;

        $r11[2] = r3;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: boolean areValuesAllNull(java.lang.Object[])>($r11);

        if $z0 == 0 goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        if r2 == null goto label2;

        if r3 != null goto label3;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "getTonemapCurve - missing tone curve components");

        return null;

     label3:
        $r12 = new android.hardware.camera2.params.TonemapCurve;

        specialinvoke $r12.<android.hardware.camera2.params.TonemapCurve: void <init>(float[],float[],float[])>(r1, r2, r3);

        r4 = $r12;

        return r4;
    }

    private void setBase(android.hardware.camera2.CameraCharacteristics$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraCharacteristics$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    private void setBase(android.hardware.camera2.CaptureResult$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureResult$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureResult$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    private void setBase(android.hardware.camera2.CaptureRequest$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.impl.CameraMetadataNative$Key,java.lang.Object)>($r3, r2);

        return;
    }

    private void setBase(android.hardware.camera2.impl.CameraMetadataNative$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        java.lang.Object r2;
        int i0, i1;
        android.hardware.camera2.marshal.Marshaler r3;
        byte[] r4;
        java.nio.ByteBuffer r5, $r6;
        java.nio.ByteOrder $r7;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative$Key: int getTag()>();

        if r2 != null goto label1;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void writeValues(int,byte[])>(i0, null);

        return;

     label1:
        r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.marshal.Marshaler getMarshalerForKey(android.hardware.camera2.impl.CameraMetadataNative$Key)>(r1);

        i1 = virtualinvoke r3.<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>(r2);

        r4 = newarray (byte)[i1];

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r4);

        $r7 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        r5 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);

        virtualinvoke r3.<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>(r2, r5);

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void writeValues(int,byte[])>(i0, r4);

        return;
    }

    private boolean setAvailableFormats(int[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.camera2.CameraCharacteristics$Key $r4;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: int[];

        r2 = r1;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof r2;

        r3 = newarray (int)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label4;

        $i3 = r2[i0];

        r3[i0] = $i3;

        $i4 = r2[i0];

        if $i4 != 256 goto label3;

        r3[i0] = 33;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r4 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS>;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CameraCharacteristics$Key,java.lang.Object)>($r4, r3);

        return 1;
    }

    private boolean setFaceRectangles(android.graphics.Rect[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.graphics.Rect[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.hardware.camera2.CaptureResult$Key $r3;
        android.graphics.Rect $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.graphics.Rect[];

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof r1;

        r2 = newarray (android.graphics.Rect)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r4 = new android.graphics.Rect;

        $r5 = r1[i0];

        $i9 = $r5.<android.graphics.Rect: int left>;

        $r6 = r1[i0];

        $i10 = $r6.<android.graphics.Rect: int top>;

        $r7 = r1[i0];

        $i4 = $r7.<android.graphics.Rect: int right>;

        $r8 = r1[i0];

        $i3 = $r8.<android.graphics.Rect: int left>;

        $i7 = $i4 + $i3;

        $r9 = r1[i0];

        $i5 = $r9.<android.graphics.Rect: int bottom>;

        $r10 = r1[i0];

        $i6 = $r10.<android.graphics.Rect: int top>;

        $i8 = $i5 + $i6;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>($i9, $i10, $i7, $i8);

        r2[i0] = $r4;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r3 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CaptureResult$Key,java.lang.Object)>($r3, r2);

        return 1;
    }

    private boolean setTonemapCurve(android.hardware.camera2.params.TonemapCurve)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.TonemapCurve r1;
        float[][] r2;
        int i0, i1, $i2;
        float[] $r3, $r5, $r7, $r9, $r10;
        android.hardware.camera2.CaptureRequest$Key $r4, $r6, $r8;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.params.TonemapCurve;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = newarray (float[])[3];

        i0 = 0;

     label2:
        if i0 > 2 goto label3;

        i1 = virtualinvoke r1.<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>(i0);

        $i2 = i1 * 2;

        $r9 = newarray (float)[$i2];

        r2[i0] = $r9;

        $r10 = r2[i0];

        virtualinvoke r1.<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>(i0, $r10, 0);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r4 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_RED>;

        $r3 = r2[0];

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r4, $r3);

        $r6 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_GREEN>;

        $r5 = r2[1];

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r6, $r5);

        $r8 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE_BLUE>;

        $r7 = r2[2];

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r8, $r7);

        return 1;
    }

    private native long nativeAllocate();

    private native long nativeAllocateCopy(android.hardware.camera2.impl.CameraMetadataNative) throws java.lang.NullPointerException;

    private synchronized native void nativeWriteToParcel(android.os.Parcel);

    private synchronized native void nativeReadFromParcel(android.os.Parcel);

    private synchronized native void nativeSwap(android.hardware.camera2.impl.CameraMetadataNative) throws java.lang.NullPointerException;

    private synchronized native void nativeClose();

    private synchronized native boolean nativeIsEmpty();

    private synchronized native int nativeGetEntryCount();

    private synchronized native byte[] nativeReadValues(int);

    private synchronized native void nativeWriteValues(int, byte[]);

    private synchronized native void nativeDump() throws java.io.IOException;

    private static native int nativeGetTagFromKey(java.lang.String) throws java.lang.IllegalArgumentException;

    private static native int nativeGetTypeFromTag(int) throws java.lang.IllegalArgumentException;

    private static native void nativeClassInit();

    public void swap(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0, r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeSwap(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        return;
    }

    public int getEntryCount()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int $i0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $i0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: int nativeGetEntryCount()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean nativeIsEmpty()>();

        return $z0;
    }

    public static int getTag(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int nativeGetTagFromKey(java.lang.String)>(r0);

        return $i0;
    }

    public static int getNativeType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int nativeGetTypeFromTag(int)>(i0);

        return $i1;
    }

    public void writeValues(int, byte[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int i0;
        byte[] r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeWriteValues(int,byte[])>(i0, r1);

        return;
    }

    public byte[] readValues(int)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int i0;
        byte[] $r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: byte[] nativeReadValues(int)>(i0);

        return $r1;
    }

    public void dumpToLog()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.io.IOException r1, $r2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

     label1:
        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeDump()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("CameraMetadataJV", "Dump logging failed", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

     label1:
        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static android.hardware.camera2.marshal.Marshaler getMarshalerForKey(android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative$Key r0;
        android.hardware.camera2.utils.TypeReference $r1;
        int $i0, $i1;
        android.hardware.camera2.marshal.Marshaler $r2;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative$Key;

        $r1 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative$Key: android.hardware.camera2.utils.TypeReference getTypeReference()>();

        $i0 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative$Key: int getTag()>();

        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int)>($i0);

        $r2 = staticinvoke <android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>($r1, $i1);

        return $r2;
    }

    private static void registerAllMarshalers()
    {
        android.hardware.camera2.marshal.MarshalQueryable[] r0, r1, $r3;
        int i0, i1;
        android.hardware.camera2.marshal.MarshalQueryable r2;
        boolean $z0, $z1;
        android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive $r4;
        android.hardware.camera2.marshal.impl.MarshalQueryableEnum $r5;
        android.hardware.camera2.marshal.impl.MarshalQueryableArray $r6;
        android.hardware.camera2.marshal.impl.MarshalQueryableBoolean $r7;
        android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger $r8;
        android.hardware.camera2.marshal.impl.MarshalQueryableRect $r9;
        android.hardware.camera2.marshal.impl.MarshalQueryableSize $r10;
        android.hardware.camera2.marshal.impl.MarshalQueryableSizeF $r11;
        android.hardware.camera2.marshal.impl.MarshalQueryableString $r12;
        android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap $r13;
        android.hardware.camera2.marshal.impl.MarshalQueryableRange $r14;
        android.hardware.camera2.marshal.impl.MarshalQueryablePair $r15;
        android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle $r16;
        android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration $r17;
        android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform $r18;
        android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector $r19;
        android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration $r20;
        android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration $r21;
        android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern $r22;
        android.hardware.camera2.marshal.impl.MarshalQueryableParcelable $r23;

        $z0 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", "Shall register metadata marshalers");

     label1:
        $r3 = newarray (android.hardware.camera2.marshal.MarshalQueryable)[20];

        $r4 = new android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive;

        specialinvoke $r4.<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive: void <init>()>();

        $r3[0] = $r4;

        $r5 = new android.hardware.camera2.marshal.impl.MarshalQueryableEnum;

        specialinvoke $r5.<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: void <init>()>();

        $r3[1] = $r5;

        $r6 = new android.hardware.camera2.marshal.impl.MarshalQueryableArray;

        specialinvoke $r6.<android.hardware.camera2.marshal.impl.MarshalQueryableArray: void <init>()>();

        $r3[2] = $r6;

        $r7 = new android.hardware.camera2.marshal.impl.MarshalQueryableBoolean;

        specialinvoke $r7.<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean: void <init>()>();

        $r3[3] = $r7;

        $r8 = new android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger;

        specialinvoke $r8.<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger: void <init>()>();

        $r3[4] = $r8;

        $r9 = new android.hardware.camera2.marshal.impl.MarshalQueryableRect;

        specialinvoke $r9.<android.hardware.camera2.marshal.impl.MarshalQueryableRect: void <init>()>();

        $r3[5] = $r9;

        $r10 = new android.hardware.camera2.marshal.impl.MarshalQueryableSize;

        specialinvoke $r10.<android.hardware.camera2.marshal.impl.MarshalQueryableSize: void <init>()>();

        $r3[6] = $r10;

        $r11 = new android.hardware.camera2.marshal.impl.MarshalQueryableSizeF;

        specialinvoke $r11.<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF: void <init>()>();

        $r3[7] = $r11;

        $r12 = new android.hardware.camera2.marshal.impl.MarshalQueryableString;

        specialinvoke $r12.<android.hardware.camera2.marshal.impl.MarshalQueryableString: void <init>()>();

        $r3[8] = $r12;

        $r13 = new android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap;

        specialinvoke $r13.<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap: void <init>()>();

        $r3[9] = $r13;

        $r14 = new android.hardware.camera2.marshal.impl.MarshalQueryableRange;

        specialinvoke $r14.<android.hardware.camera2.marshal.impl.MarshalQueryableRange: void <init>()>();

        $r3[10] = $r14;

        $r15 = new android.hardware.camera2.marshal.impl.MarshalQueryablePair;

        specialinvoke $r15.<android.hardware.camera2.marshal.impl.MarshalQueryablePair: void <init>()>();

        $r3[11] = $r15;

        $r16 = new android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle;

        specialinvoke $r16.<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle: void <init>()>();

        $r3[12] = $r16;

        $r18 = new android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform;

        specialinvoke $r18.<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform: void <init>()>();

        $r3[13] = $r18;

        $r17 = new android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration;

        specialinvoke $r17.<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration: void <init>()>();

        $r3[14] = $r17;

        $r20 = new android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration;

        specialinvoke $r20.<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration: void <init>()>();

        $r3[15] = $r20;

        $r19 = new android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector;

        specialinvoke $r19.<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector: void <init>()>();

        $r3[16] = $r19;

        $r22 = new android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern;

        specialinvoke $r22.<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern: void <init>()>();

        $r3[17] = $r22;

        $r21 = new android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration;

        specialinvoke $r21.<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration: void <init>()>();

        $r3[18] = $r21;

        $r23 = new android.hardware.camera2.marshal.impl.MarshalQueryableParcelable;

        specialinvoke $r23.<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable: void <init>()>();

        $r3[19] = $r23;

        r0 = $r3;

        r1 = r0;

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        staticinvoke <android.hardware.camera2.marshal.MarshalRegistry: void registerMarshalQueryable(android.hardware.camera2.marshal.MarshalQueryable)>(r2);

        i1 = i1 + 1;

        goto label2;

     label3:
        $z1 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z1 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", "Registered metadata marshalers");

     label4:
        return;
    }

    private static transient boolean areValuesAllNull(java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int i0, i1;
        java.lang.Object r2;

        r0 := @parameter0: java.lang.Object[];

        r1 = r0;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        if r2 == null goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    static int[] access$000(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: int[] getAvailableFormats()>();

        return $r1;
    }

    static android.hardware.camera2.params.Face[] access$100(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.Face[] $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.params.Face[] getFaces()>();

        return $r1;
    }

    static android.graphics.Rect[] access$200(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.graphics.Rect[] $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.graphics.Rect[] getFaceRectangles()>();

        return $r1;
    }

    static android.hardware.camera2.params.StreamConfigurationMap access$300(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.StreamConfigurationMap $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.params.StreamConfigurationMap getStreamConfigurationMap()>();

        return $r1;
    }

    static java.lang.Integer access$400(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        java.lang.Integer $r2;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative$Key;

        $r2 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Integer getMaxRegions(android.hardware.camera2.impl.CameraMetadataNative$Key)>(r1);

        return $r2;
    }

    static java.lang.Integer access$500(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.impl.CameraMetadataNative$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.impl.CameraMetadataNative$Key r1;
        java.lang.Integer $r2;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative$Key;

        $r2 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Integer getMaxNumOutputs(android.hardware.camera2.impl.CameraMetadataNative$Key)>(r1);

        return $r2;
    }

    static android.hardware.camera2.params.TonemapCurve access$600(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.TonemapCurve $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.params.TonemapCurve getTonemapCurve()>();

        return $r1;
    }

    static android.location.Location access$700(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.location.Location $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.location.Location getGpsLocation()>();

        return $r1;
    }

    static android.hardware.camera2.params.LensShadingMap access$800(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.LensShadingMap $r1;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.params.LensShadingMap getLensShadingMap()>();

        return $r1;
    }

    static boolean access$900(android.hardware.camera2.impl.CameraMetadataNative, int[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] r1;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: int[];

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setAvailableFormats(int[])>(r1);

        return $z0;
    }

    static boolean access$1000(android.hardware.camera2.impl.CameraMetadataNative, android.graphics.Rect[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.graphics.Rect[] r1;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.graphics.Rect[];

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setFaceRectangles(android.graphics.Rect[])>(r1);

        return $z0;
    }

    static boolean access$1100(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.params.Face[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.Face[] r1;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.params.Face[];

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setFaces(android.hardware.camera2.params.Face[])>(r1);

        return $z0;
    }

    static boolean access$1200(android.hardware.camera2.impl.CameraMetadataNative, android.hardware.camera2.params.TonemapCurve)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.params.TonemapCurve r1;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.hardware.camera2.params.TonemapCurve;

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setTonemapCurve(android.hardware.camera2.params.TonemapCurve)>(r1);

        return $z0;
    }

    static boolean access$1300(android.hardware.camera2.impl.CameraMetadataNative, android.location.Location)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.location.Location r1;
        boolean $z0;

        r0 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter1: android.location.Location;

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setGpsLocation(android.location.Location)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        boolean $z0;
        android.hardware.camera2.impl.CameraMetadataNative$1 $r0;
        java.util.HashMap $r1, $r3, $r8, $r13, $r17, $r24, $r27, $r31, $r36, $r45, $r49, $r52, $r55, $r63, $r65, $r67, $r78, $r79, $r84, $r92;
        android.hardware.camera2.CameraCharacteristics$Key $r2, $r18, $r21, $r28, $r34, $r35, $r40, $r50, $r64;
        android.hardware.camera2.impl.CameraMetadataNative$Key $r4, $r9, $r14, $r20, $r23, $r30, $r32, $r41, $r46, $r48, $r51, $r62, $r66, $r68, $r71, $r82, $r83, $r91;
        android.hardware.camera2.impl.CameraMetadataNative$2 $r5;
        android.hardware.camera2.CaptureResult$Key $r7, $r12, $r56, $r59, $r74, $r77, $r89;
        android.hardware.camera2.impl.CameraMetadataNative$3 $r10;
        android.hardware.camera2.impl.CameraMetadataNative$4 $r16;
        android.hardware.camera2.impl.CameraMetadataNative$5 $r19;
        android.hardware.camera2.impl.CameraMetadataNative$6 $r26;
        android.hardware.camera2.impl.CameraMetadataNative$7 $r29;
        android.hardware.camera2.impl.CameraMetadataNative$8 $r37;
        android.hardware.camera2.impl.CameraMetadataNative$9 $r42;
        android.hardware.camera2.impl.CameraMetadataNative$10 $r43;
        android.hardware.camera2.impl.CameraMetadataNative$11 $r47;
        android.hardware.camera2.CaptureRequest$Key $r53, $r80;
        android.hardware.camera2.impl.CameraMetadataNative$12 $r58;
        android.hardware.camera2.impl.CameraMetadataNative$13 $r61;
        android.hardware.camera2.impl.CameraMetadataNative$14 $r69;
        android.hardware.camera2.impl.CameraMetadataNative$16 $r72;
        android.hardware.camera2.impl.CameraMetadataNative$15 $r75;
        android.hardware.camera2.impl.CameraMetadataNative$18 $r81;
        android.hardware.camera2.impl.CameraMetadataNative$17 $r86;
        android.hardware.camera2.impl.CameraMetadataNative$19 $r88;

        <android.hardware.camera2.impl.CameraMetadataNative: int NUM_TYPES> = 6;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_RATIONAL> = 5;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_DOUBLE> = 4;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_INT64> = 3;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_FLOAT> = 2;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_INT32> = 1;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_BYTE> = 0;

        <android.hardware.camera2.impl.CameraMetadataNative: int FACE_LANDMARK_SIZE> = 6;

        <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String GPS_PROCESS> = "GPS";

        <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String CELLID_PROCESS> = "CELLID";

        <android.hardware.camera2.impl.CameraMetadataNative: int NATIVE_JPEG_FORMAT> = 33;

        <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String TAG> = "CameraMetadataJV";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CameraMetadataJV", 2);

        <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE> = $z0;

        $r0 = new android.hardware.camera2.impl.CameraMetadataNative$1;

        specialinvoke $r0.<android.hardware.camera2.impl.CameraMetadataNative$1: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: android.os.Parcelable$Creator CREATOR> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap> = $r1;

        $r3 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS>;

        $r4 = virtualinvoke $r2.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r5 = new android.hardware.camera2.impl.CameraMetadataNative$2;

        specialinvoke $r5.<android.hardware.camera2.impl.CameraMetadataNative$2: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r8 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r7 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACES>;

        $r9 = virtualinvoke $r7.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r10 = new android.hardware.camera2.impl.CameraMetadataNative$3;

        specialinvoke $r10.<android.hardware.camera2.impl.CameraMetadataNative$3: void <init>()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r13 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r12 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        $r14 = virtualinvoke $r12.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r16 = new android.hardware.camera2.impl.CameraMetadataNative$4;

        specialinvoke $r16.<android.hardware.camera2.impl.CameraMetadataNative$4: void <init>()>();

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16);

        $r17 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r18 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP>;

        $r20 = virtualinvoke $r18.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r19 = new android.hardware.camera2.impl.CameraMetadataNative$5;

        specialinvoke $r19.<android.hardware.camera2.impl.CameraMetadataNative$5: void <init>()>();

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r19);

        $r24 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r21 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE>;

        $r23 = virtualinvoke $r21.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r26 = new android.hardware.camera2.impl.CameraMetadataNative$6;

        specialinvoke $r26.<android.hardware.camera2.impl.CameraMetadataNative$6: void <init>()>();

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r26);

        $r27 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r28 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AWB>;

        $r30 = virtualinvoke $r28.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r29 = new android.hardware.camera2.impl.CameraMetadataNative$7;

        specialinvoke $r29.<android.hardware.camera2.impl.CameraMetadataNative$7: void <init>()>();

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r29);

        $r31 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r34 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF>;

        $r32 = virtualinvoke $r34.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r37 = new android.hardware.camera2.impl.CameraMetadataNative$8;

        specialinvoke $r37.<android.hardware.camera2.impl.CameraMetadataNative$8: void <init>()>();

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r37);

        $r36 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r35 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_RAW>;

        $r41 = virtualinvoke $r35.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r42 = new android.hardware.camera2.impl.CameraMetadataNative$9;

        specialinvoke $r42.<android.hardware.camera2.impl.CameraMetadataNative$9: void <init>()>();

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, $r42);

        $r45 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r40 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC>;

        $r46 = virtualinvoke $r40.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r43 = new android.hardware.camera2.impl.CameraMetadataNative$10;

        specialinvoke $r43.<android.hardware.camera2.impl.CameraMetadataNative$10: void <init>()>();

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r43);

        $r49 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r50 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key REQUEST_MAX_NUM_OUTPUT_PROC_STALLING>;

        $r48 = virtualinvoke $r50.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r47 = new android.hardware.camera2.impl.CameraMetadataNative$11;

        specialinvoke $r47.<android.hardware.camera2.impl.CameraMetadataNative$11: void <init>()>();

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r47);

        $r52 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r53 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE>;

        $r51 = virtualinvoke $r53.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r58 = new android.hardware.camera2.impl.CameraMetadataNative$12;

        specialinvoke $r58.<android.hardware.camera2.impl.CameraMetadataNative$12: void <init>()>();

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, $r58);

        $r55 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r56 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_LOCATION>;

        $r62 = virtualinvoke $r56.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r61 = new android.hardware.camera2.impl.CameraMetadataNative$13;

        specialinvoke $r61.<android.hardware.camera2.impl.CameraMetadataNative$13: void <init>()>();

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, $r61);

        $r67 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sGetCommandMap>;

        $r59 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_LENS_SHADING_CORRECTION_MAP>;

        $r68 = virtualinvoke $r59.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r69 = new android.hardware.camera2.impl.CameraMetadataNative$14;

        specialinvoke $r69.<android.hardware.camera2.impl.CameraMetadataNative$14: void <init>()>();

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r68, $r69);

        $r63 = new java.util.HashMap;

        specialinvoke $r63.<java.util.HashMap: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap> = $r63;

        $r65 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r64 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_FORMATS>;

        $r66 = virtualinvoke $r64.<android.hardware.camera2.CameraCharacteristics$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r75 = new android.hardware.camera2.impl.CameraMetadataNative$15;

        specialinvoke $r75.<android.hardware.camera2.impl.CameraMetadataNative$15: void <init>()>();

        virtualinvoke $r65.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r66, $r75);

        $r78 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r77 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACE_RECTANGLES>;

        $r71 = virtualinvoke $r77.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r72 = new android.hardware.camera2.impl.CameraMetadataNative$16;

        specialinvoke $r72.<android.hardware.camera2.impl.CameraMetadataNative$16: void <init>()>();

        virtualinvoke $r78.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, $r72);

        $r84 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r74 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key STATISTICS_FACES>;

        $r83 = virtualinvoke $r74.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r86 = new android.hardware.camera2.impl.CameraMetadataNative$17;

        specialinvoke $r86.<android.hardware.camera2.impl.CameraMetadataNative$17: void <init>()>();

        virtualinvoke $r84.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r83, $r86);

        $r79 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r80 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key TONEMAP_CURVE>;

        $r82 = virtualinvoke $r80.<android.hardware.camera2.CaptureRequest$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r81 = new android.hardware.camera2.impl.CameraMetadataNative$18;

        specialinvoke $r81.<android.hardware.camera2.impl.CameraMetadataNative$18: void <init>()>();

        virtualinvoke $r79.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r82, $r81);

        $r92 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sSetCommandMap>;

        $r89 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key JPEG_GPS_LOCATION>;

        $r91 = virtualinvoke $r89.<android.hardware.camera2.CaptureResult$Key: android.hardware.camera2.impl.CameraMetadataNative$Key getNativeKey()>();

        $r88 = new android.hardware.camera2.impl.CameraMetadataNative$19;

        specialinvoke $r88.<android.hardware.camera2.impl.CameraMetadataNative$19: void <init>()>();

        virtualinvoke $r92.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r91, $r88);

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void nativeClassInit()>();

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void registerAllMarshalers()>();

        return;
    }
}
