public class android.renderscript.ProgramVertexFixedFunction$Builder extends java.lang.Object
{
    boolean mTextureMatrixEnable;
    java.lang.String mShader;
    android.renderscript.RenderScript mRS;

    public void <init>(android.renderscript.RenderScript)
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        r1 := @parameter0: android.renderscript.RenderScript;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS> = r1;

        return;
    }

    public android.renderscript.ProgramVertexFixedFunction$Builder setTextureMatrixEnable(boolean)
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        boolean z0;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        z0 := @parameter0: boolean;

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: boolean mTextureMatrixEnable> = z0;

        return r0;
    }

    static android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element$Builder r1, $r3;
        android.renderscript.Type$Builder r2, $r12;
        android.renderscript.Element $r4, $r6, $r8, $r10, $r13;
        android.renderscript.Type $r15;

        r0 := @parameter0: android.renderscript.RenderScript;

        $r3 = new android.renderscript.Element$Builder;

        specialinvoke $r3.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>(r0);

        r1 = $r3;

        $r4 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r4, "MV");

        $r6 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r6, "P");

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r8, "TexMatrix");

        $r10 = staticinvoke <android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>(r0);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r10, "MVP");

        $r12 = new android.renderscript.Type$Builder;

        $r13 = virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        specialinvoke $r12.<android.renderscript.Type$Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>(r0, $r13);

        r2 = $r12;

        virtualinvoke r2.<android.renderscript.Type$Builder: android.renderscript.Type$Builder setX(int)>(1);

        $r15 = virtualinvoke r2.<android.renderscript.Type$Builder: android.renderscript.Type create()>();

        return $r15;
    }

    private void buildShaderString()
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r17, $r18, $r19, $r20, $r22, $r25, $r27, $r28, $r29, $r31, $r32, $r33, $r36, $r38, $r39, $r41, $r44, $r45;
        java.lang.String $r2, $r5, $r7, $r10, $r12, $r15, $r16, $r21, $r23, $r24, $r26, $r30, $r34, $r35, $r37, $r40, $r42, $r43;
        boolean $z0;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = "//rs_shader_internal\n";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("varying vec4 varColor;\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("varying vec2 varTex0;\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void main() {\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gl_Position = UNI_MVP * ATTRIB_position;\n");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r21;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gl_PointSize = 1.0;\n");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r24;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varColor = ATTRIB_color;\n");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r30;

        $z0 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: boolean mTextureMatrixEnable>;

        if $z0 == 0 goto label1;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varTex0 = (UNI_TexMatrix * vec4(ATTRIB_texture0, 0.0, 1.0)).xy;\n");

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r43;

        goto label2;

     label1:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  varTex0 = ATTRIB_texture0;\n");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r37;

     label2:
        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r35 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader> = $r42;

        return;
    }

    public android.renderscript.ProgramVertexFixedFunction create()
    {
        android.renderscript.ProgramVertexFixedFunction$Builder r0;
        android.renderscript.ProgramVertexFixedFunction$InternalBuilder r1, $r3;
        android.renderscript.Element$Builder r2, $r10;
        android.renderscript.RenderScript $r4, $r7, $r11, $r12, $r15, $r19, $r20;
        java.lang.String $r5;
        android.renderscript.Type $r8;
        android.renderscript.Element $r13, $r17, $r18, $r23, $r25;
        android.renderscript.ProgramVertexFixedFunction $r26;

        r0 := @this: android.renderscript.ProgramVertexFixedFunction$Builder;

        specialinvoke r0.<android.renderscript.ProgramVertexFixedFunction$Builder: void buildShaderString()>();

        $r3 = new android.renderscript.ProgramVertexFixedFunction$InternalBuilder;

        $r4 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r3.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: void <init>(android.renderscript.RenderScript)>($r4);

        r1 = $r3;

        $r5 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: java.lang.String mShader>;

        virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.Program$BaseProgramBuilder setShader(java.lang.String)>($r5);

        $r7 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r8 = staticinvoke <android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.Type getConstantInputType(android.renderscript.RenderScript)>($r7);

        virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.Program$BaseProgramBuilder addConstant(android.renderscript.Type)>($r8);

        $r10 = new android.renderscript.Element$Builder;

        $r11 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        specialinvoke $r10.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>($r11);

        r2 = $r10;

        $r12 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r13 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r12);

        virtualinvoke r2.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r13, "position");

        $r15 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r17 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r15);

        virtualinvoke r2.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r17, "color");

        $r19 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r18 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r19);

        virtualinvoke r2.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r18, "normal");

        $r20 = r0.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.RenderScript mRS>;

        $r23 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r20);

        virtualinvoke r2.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r23, "texture0");

        $r25 = virtualinvoke r2.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.ProgramVertexFixedFunction$InternalBuilder addInput(android.renderscript.Element)>($r25);

        $r26 = virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$InternalBuilder: android.renderscript.ProgramVertexFixedFunction create()>();

        return $r26;
    }
}
