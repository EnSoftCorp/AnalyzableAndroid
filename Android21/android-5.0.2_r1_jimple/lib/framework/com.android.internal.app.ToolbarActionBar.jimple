public class com.android.internal.app.ToolbarActionBar extends android.app.ActionBar
{
    private android.widget.Toolbar mToolbar;
    private com.android.internal.widget.DecorToolbar mDecorToolbar;
    private boolean mToolbarMenuPrepared;
    private android.view.Window$Callback mWindowCallback;
    private boolean mMenuCallbackSet;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private final java.lang.Runnable mMenuInvalidator;
    private final android.widget.Toolbar$OnMenuItemClickListener mMenuClicker;

    public void <init>(android.widget.Toolbar, java.lang.CharSequence, android.view.Window$Callback)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar r1;
        java.lang.CharSequence r2;
        android.view.Window$Callback r3, $r9;
        java.util.ArrayList $r4;
        com.android.internal.app.ToolbarActionBar$1 $r5;
        com.android.internal.app.ToolbarActionBar$2 $r6;
        com.android.internal.widget.ToolbarWidgetWrapper $r7;
        com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper $r8;
        com.android.internal.widget.DecorToolbar $r10, $r12;
        android.widget.Toolbar$OnMenuItemClickListener $r11;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.widget.Toolbar;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.view.Window$Callback;

        specialinvoke r0.<android.app.ActionBar: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r4;

        $r5 = new com.android.internal.app.ToolbarActionBar$1;

        specialinvoke $r5.<com.android.internal.app.ToolbarActionBar$1: void <init>(com.android.internal.app.ToolbarActionBar)>(r0);

        r0.<com.android.internal.app.ToolbarActionBar: java.lang.Runnable mMenuInvalidator> = $r5;

        $r6 = new com.android.internal.app.ToolbarActionBar$2;

        specialinvoke $r6.<com.android.internal.app.ToolbarActionBar$2: void <init>(com.android.internal.app.ToolbarActionBar)>(r0);

        r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar$OnMenuItemClickListener mMenuClicker> = $r6;

        r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar> = r1;

        $r7 = new com.android.internal.widget.ToolbarWidgetWrapper;

        specialinvoke $r7.<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean)>(r1, 0);

        r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar> = $r7;

        $r8 = new com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper;

        specialinvoke $r8.<com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper: void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback)>(r0, r3);

        r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback> = $r8;

        $r10 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r9 = r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback>;

        interfaceinvoke $r10.<com.android.internal.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>($r9);

        $r11 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar$OnMenuItemClickListener mMenuClicker>;

        virtualinvoke r1.<android.widget.Toolbar: void setOnMenuItemClickListener(android.widget.Toolbar$OnMenuItemClickListener)>($r11);

        $r12 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r12.<com.android.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>(r2);

        return;
    }

    public android.view.Window$Callback getWrappedWindowCallback()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.Window$Callback $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback>;

        return $r1;
    }

    public void setCustomView(android.view.View)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.View r1;
        android.app.ActionBar$LayoutParams $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.view.View;

        $r2 = new android.app.ActionBar$LayoutParams;

        specialinvoke $r2.<android.app.ActionBar$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)>(r1, $r2);

        return;
    }

    public void setCustomView(android.view.View, android.app.ActionBar$LayoutParams)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.View r1;
        android.app.ActionBar$LayoutParams r2;
        com.android.internal.widget.DecorToolbar $r3;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.app.ActionBar$LayoutParams;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        $r3 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<com.android.internal.widget.DecorToolbar: void setCustomView(android.view.View)>(r1);

        return;
    }

    public void setCustomView(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        android.view.LayoutInflater r1;
        android.widget.Toolbar $r2, $r4;
        android.content.Context $r3;
        android.view.View $r5;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r3 = virtualinvoke $r2.<android.widget.Toolbar: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $r4 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r5 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, $r4, 0);

        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View)>($r5);

        return;
    }

    public void setIcon(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setIcon(int)>(i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setLogo(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setLogo(int)>(i0);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public void setElevation(float)
    {
        com.android.internal.app.ToolbarActionBar r0;
        float f0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setElevation(float)>(f0);

        return;
    }

    public float getElevation()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        float $f0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $f0 = virtualinvoke $r1.<android.widget.Toolbar: float getElevation()>();

        return $f0;
    }

    public android.content.Context getThemedContext()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: android.content.Context getContext()>();

        return $r2;
    }

    public boolean isTitleTruncated()
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $z0 = specialinvoke r0.<android.app.ActionBar: boolean isTitleTruncated()>();

        return $z0;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setNavigationIcon(int)>(i0);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>(r1);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(int)>(i0);

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.ActionMode$Callback r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.view.ActionMode$Callback;

        return null;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar$OnNavigationListener)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.SpinnerAdapter r1;
        android.app.ActionBar$OnNavigationListener r2;
        com.android.internal.app.NavItemSelectedListener $r3;
        com.android.internal.widget.DecorToolbar $r4;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.widget.SpinnerAdapter;

        r2 := @parameter1: android.app.ActionBar$OnNavigationListener;

        $r4 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r3 = new com.android.internal.app.NavItemSelectedListener;

        specialinvoke $r3.<com.android.internal.app.NavItemSelectedListener: void <init>(android.app.ActionBar$OnNavigationListener)>(r2);

        interfaceinvoke $r4.<com.android.internal.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)>(r1, $r3);

        return;
    }

    public void setSelectedNavigationItem(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0, $i1;
        com.android.internal.widget.DecorToolbar $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getNavigationMode()>();

        lookupswitch($i1)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setDropdownSelectedPosition(int)>(i0);

        goto label3;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r3;

     label3:
        return;
    }

    public int getSelectedNavigationIndex()
    {
        com.android.internal.app.ToolbarActionBar r0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        return -1;
    }

    public int getNavigationItemCount()
    {
        com.android.internal.app.ToolbarActionBar r0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        return 0;
    }

    public void setTitle(java.lang.CharSequence)
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setTitle(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1, $r2;
        android.content.Context $r3;
        java.lang.CharSequence $r4;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if i0 == 0 goto label1;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r3 = interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        $r4 = null;

     label2:
        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>($r4);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.CharSequence r1;
        com.android.internal.widget.DecorToolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>(r1);

        return;
    }

    public void setSubtitle(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1, $r2;
        android.content.Context $r3;
        java.lang.CharSequence $r4;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        if i0 == 0 goto label1;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r3 = interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        $r4 = null;

     label2:
        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>($r4);

        return;
    }

    public void setDisplayOptions(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>(i0, -1);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.internal.widget.DecorToolbar $r1, $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        i2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>();

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i5 = i0 & i1;

        $i3 = i1 ^ -1;

        $i4 = i2 & $i3;

        $i6 = $i5 | $i4;

        interfaceinvoke $r2.<com.android.internal.widget.DecorToolbar: void setDisplayOptions(int)>($i6);

        return;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>($b0, 1);

        return;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>($b0, 2);

        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 4;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>($b0, 4);

        return;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>($b0, 8);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 16;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>($b0, 16);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable r1;
        android.widget.Toolbar $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void setBackground(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public android.view.View getCustomView()
    {
        com.android.internal.app.ToolbarActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        android.view.View $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: android.view.View getCustomView()>();

        return $r2;
    }

    public java.lang.CharSequence getTitle()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: java.lang.CharSequence getTitle()>();

        return $r2;
    }

    public java.lang.CharSequence getSubtitle()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        java.lang.CharSequence $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r2 = virtualinvoke $r1.<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>();

        return $r2;
    }

    public int getNavigationMode()
    {
        com.android.internal.app.ToolbarActionBar r0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        return 0;
    }

    public void setNavigationMode(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        com.android.internal.widget.DecorToolbar $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Tabs not supported in this configuration");

        throw $r2;

     label1:
        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: void setNavigationMode(int)>(i0);

        return;
    }

    public int getDisplayOptions()
    {
        com.android.internal.app.ToolbarActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>();

        return $i0;
    }

    public android.app.ActionBar$Tab newTab()
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public void addTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(android.app.ActionBar$Tab, boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        boolean z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(android.app.ActionBar$Tab, int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        int i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(android.app.ActionBar$Tab, int, boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        int i0;
        boolean z0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void removeTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void removeTabAt(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public void removeAllTabs()
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public void selectTab(android.app.ActionBar$Tab)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$Tab r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$Tab;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public android.app.ActionBar$Tab getSelectedTab()
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public android.app.ActionBar$Tab getTabAt(int)
    {
        com.android.internal.app.ToolbarActionBar r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public int getTabCount()
    {
        com.android.internal.app.ToolbarActionBar r0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        return 0;
    }

    public int getHeight()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        int $i0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $i0 = virtualinvoke $r1.<android.widget.Toolbar: int getHeight()>();

        return $i0;
    }

    public void show()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setVisibility(int)>(0);

        return;
    }

    public void hide()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r1.<android.widget.Toolbar: void setVisibility(int)>(8);

        return;
    }

    public boolean isShowing()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $i0 = virtualinvoke $r1.<android.widget.Toolbar: int getVisibility()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean openOptionsMenu()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;
        boolean $z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean showOverflowMenu()>();

        return $z0;
    }

    public boolean invalidateOptionsMenu()
    {
        com.android.internal.app.ToolbarActionBar r0;
        java.lang.Runnable $r1, $r3;
        android.widget.Toolbar $r2, $r4;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: java.lang.Runnable mMenuInvalidator>;

        virtualinvoke $r2.<android.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r3 = r0.<com.android.internal.app.ToolbarActionBar: java.lang.Runnable mMenuInvalidator>;

        virtualinvoke $r4.<android.widget.Toolbar: void postOnAnimation(java.lang.Runnable)>($r3);

        return 1;
    }

    public boolean collapseActionView()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $z0 = virtualinvoke $r1.<android.widget.Toolbar: boolean hasExpandedActionView()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        virtualinvoke $r2.<android.widget.Toolbar: void collapseActionView()>();

        return 1;

     label1:
        return 0;
    }

    void populateOptionsMenu()
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.Menu r1;
        com.android.internal.view.menu.MenuBuilder r2, $r7;
        java.lang.Throwable r3, $r11;
        boolean $z0, $z1, $z2, $z3;
        android.widget.Toolbar $r4, $r9;
        android.view.Window$Callback $r5, $r6;
        com.android.internal.app.ToolbarActionBar$ActionMenuPresenterCallback $r8;
        com.android.internal.app.ToolbarActionBar$MenuBuilderCallback $r10;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        $z0 = r0.<com.android.internal.app.ToolbarActionBar: boolean mMenuCallbackSet>;

        if $z0 != 0 goto label01;

        $r9 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        $r8 = new com.android.internal.app.ToolbarActionBar$ActionMenuPresenterCallback;

        specialinvoke $r8.<com.android.internal.app.ToolbarActionBar$ActionMenuPresenterCallback: void <init>(com.android.internal.app.ToolbarActionBar,com.android.internal.app.ToolbarActionBar$1)>(r0, null);

        $r10 = new com.android.internal.app.ToolbarActionBar$MenuBuilderCallback;

        specialinvoke $r10.<com.android.internal.app.ToolbarActionBar$MenuBuilderCallback: void <init>(com.android.internal.app.ToolbarActionBar,com.android.internal.app.ToolbarActionBar$1)>(r0, null);

        virtualinvoke $r9.<android.widget.Toolbar: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)>($r8, $r10);

        r0.<com.android.internal.app.ToolbarActionBar: boolean mMenuCallbackSet> = 1;

     label01:
        $r4 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        r1 = virtualinvoke $r4.<android.widget.Toolbar: android.view.Menu getMenu()>();

        $z1 = r1 instanceof com.android.internal.view.menu.MenuBuilder;

        if $z1 == 0 goto label02;

        $r7 = (com.android.internal.view.menu.MenuBuilder) r1;

        goto label03;

     label02:
        $r7 = null;

     label03:
        r2 = $r7;

        if r2 == null goto label04;

        virtualinvoke r2.<com.android.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

     label04:
        interfaceinvoke r1.<android.view.Menu: void clear()>();

        $r5 = r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback>;

        $z2 = interfaceinvoke $r5.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>(0, r1);

        if $z2 == 0 goto label05;

        $r6 = r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback>;

        $z3 = interfaceinvoke $r6.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, null, r1);

        if $z3 != 0 goto label06;

     label05:
        interfaceinvoke r1.<android.view.Menu: void clear()>();

     label06:
        if r2 == null goto label10;

        virtualinvoke r2.<com.android.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        goto label10;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        if r2 == null goto label09;

        virtualinvoke r2.<com.android.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public boolean onMenuKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.KeyEvent r1;
        int $i0;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 1 goto label1;

        virtualinvoke r0.<com.android.internal.app.ToolbarActionBar: boolean openOptionsMenu()>();

     label1:
        return 1;
    }

    public void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.app.ActionBar$OnMenuVisibilityListener r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        r1 := @parameter0: android.app.ActionBar$OnMenuVisibilityListener;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0, $z1;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.app.ActionBar$OnMenuVisibilityListener $r4;

        r0 := @this: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.app.ToolbarActionBar: boolean mLastMenuVisibility>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<com.android.internal.app.ToolbarActionBar: boolean mLastMenuVisibility> = z0;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = r0.<com.android.internal.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.app.ActionBar$OnMenuVisibilityListener) $r3;

        interfaceinvoke $r4.<android.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>(z0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    static android.view.Window$Callback access$000(com.android.internal.app.ToolbarActionBar)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.view.Window$Callback $r1;

        r0 := @parameter0: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback>;

        return $r1;
    }

    static boolean access$300(com.android.internal.app.ToolbarActionBar)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.app.ToolbarActionBar;

        $z0 = r0.<com.android.internal.app.ToolbarActionBar: boolean mToolbarMenuPrepared>;

        return $z0;
    }

    static com.android.internal.widget.DecorToolbar access$400(com.android.internal.app.ToolbarActionBar)
    {
        com.android.internal.app.ToolbarActionBar r0;
        com.android.internal.widget.DecorToolbar $r1;

        r0 := @parameter0: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: com.android.internal.widget.DecorToolbar mDecorToolbar>;

        return $r1;
    }

    static boolean access$302(com.android.internal.app.ToolbarActionBar, boolean)
    {
        com.android.internal.app.ToolbarActionBar r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.app.ToolbarActionBar;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.app.ToolbarActionBar: boolean mToolbarMenuPrepared> = z0;

        return z0;
    }

    static android.widget.Toolbar access$500(com.android.internal.app.ToolbarActionBar)
    {
        com.android.internal.app.ToolbarActionBar r0;
        android.widget.Toolbar $r1;

        r0 := @parameter0: com.android.internal.app.ToolbarActionBar;

        $r1 = r0.<com.android.internal.app.ToolbarActionBar: android.widget.Toolbar mToolbar>;

        return $r1;
    }
}
