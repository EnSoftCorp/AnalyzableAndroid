public final class android.telecom.RemoteConference extends java.lang.Object
{
    private final java.lang.String mId;
    private final com.android.internal.telecom.IConnectionService mConnectionService;
    private final java.util.Set mCallbacks;
    private final java.util.List mChildConnections;
    private final java.util.List mUnmodifiableChildConnections;
    private final java.util.List mConferenceableConnections;
    private final java.util.List mUnmodifiableConferenceableConnections;
    private int mState;
    private android.telecom.DisconnectCause mDisconnectCause;
    private int mCallCapabilities;

    void <init>(java.lang.String, com.android.internal.telecom.IConnectionService)
    {
        android.telecom.RemoteConference r0;
        java.lang.String r1;
        com.android.internal.telecom.IConnectionService r2;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        java.util.List $r5, $r6, $r8, $r9;
        java.util.ArrayList $r7;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IConnectionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.Set mCallbacks> = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.List mChildConnections> = $r4;

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableChildConnections> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections> = $r7;

        $r8 = r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections>;

        $r9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r8);

        r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections> = $r9;

        r0.<android.telecom.RemoteConference: int mState> = 1;

        r0.<android.telecom.RemoteConference: java.lang.String mId> = r1;

        r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService> = r2;

        return;
    }

    java.lang.String getId()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        return $r1;
    }

    void setDestroyed()
    {
        android.telecom.RemoteConference r0;
        java.util.Iterator r1, r7;
        android.telecom.RemoteConnection r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.util.Set $r4;
        java.lang.Object $r5, $r6;
        android.telecom.RemoteConference$Callback r8;

        r0 := @this: android.telecom.RemoteConference;

        $r3 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConnection) $r6;

        virtualinvoke r2.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(null);

        goto label1;

     label2:
        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r7 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.telecom.RemoteConference$Callback) $r5;

        virtualinvoke r8.<android.telecom.RemoteConference$Callback: void onDestroyed(android.telecom.RemoteConference)>(r0);

        goto label3;

     label4:
        return;
    }

    void setState(int)
    {
        android.telecom.RemoteConference r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        android.telecom.RemoteConference$Callback r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        r0 := @this: android.telecom.RemoteConference;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 5 goto label1;

        if i0 == 6 goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <android.telecom.Connection: java.lang.String stateToString(int)>(i0);

        $r5[0] = $r6;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Unsupported state transition for Conference call.", $r5);

        return;

     label1:
        $i2 = r0.<android.telecom.RemoteConference: int mState>;

        if $i2 == i0 goto label3;

        i1 = r0.<android.telecom.RemoteConference: int mState>;

        r0.<android.telecom.RemoteConference: int mState> = i0;

        $r3 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConference$Callback) $r4;

        virtualinvoke r2.<android.telecom.RemoteConference$Callback: void onStateChanged(android.telecom.RemoteConference,int,int)>(r0, i1, i0);

        goto label2;

     label3:
        return;
    }

    void addConnection(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConnection r1;
        java.util.Iterator r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.List $r4, $r5;
        boolean $z0, $z2;
        java.util.Set $r6;
        java.lang.Object $r7;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(r0);

        $r6 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConference$Callback) $r7;

        virtualinvoke r3.<android.telecom.RemoteConference$Callback: void onConnectionAdded(android.telecom.RemoteConference,android.telecom.RemoteConnection)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    void removeConnection(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConnection r1;
        java.util.Iterator r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.List $r4, $r5;
        boolean $z0, $z2;
        java.util.Set $r6;
        java.lang.Object $r7;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConnection;

        $r4 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r1.<android.telecom.RemoteConnection: void setConference(android.telecom.RemoteConference)>(null);

        $r6 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConference$Callback) $r7;

        virtualinvoke r3.<android.telecom.RemoteConference$Callback: void onConnectionRemoved(android.telecom.RemoteConference,android.telecom.RemoteConnection)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    void setCallCapabilities(int)
    {
        android.telecom.RemoteConference r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.telecom.RemoteConference$Callback r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.telecom.RemoteConference;

        i0 := @parameter0: int;

        $i1 = r0.<android.telecom.RemoteConference: int mCallCapabilities>;

        if $i1 == i0 goto label2;

        r0.<android.telecom.RemoteConference: int mCallCapabilities> = i0;

        $r3 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.RemoteConference$Callback) $r4;

        $i2 = r0.<android.telecom.RemoteConference: int mCallCapabilities>;

        virtualinvoke r2.<android.telecom.RemoteConference$Callback: void onCapabilitiesChanged(android.telecom.RemoteConference,int)>(r0, $i2);

        goto label1;

     label2:
        return;
    }

    void setConferenceableConnections(java.util.List)
    {
        android.telecom.RemoteConference r0;
        java.util.List r1, $r4, $r5, $r8;
        java.util.Iterator r2;
        android.telecom.RemoteConference$Callback r3;
        java.util.Set $r6;
        boolean $z1;
        java.lang.Object $r7;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.telecom.RemoteConference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        $r6 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConference$Callback) $r7;

        $r8 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections>;

        virtualinvoke r3.<android.telecom.RemoteConference$Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConference,java.util.List)>(r0, $r8);

        goto label1;

     label2:
        return;
    }

    void setDisconnected(android.telecom.DisconnectCause)
    {
        android.telecom.RemoteConference r0;
        android.telecom.DisconnectCause r1;
        java.util.Iterator r2;
        android.telecom.RemoteConference$Callback r3;
        int $i0;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.DisconnectCause;

        $i0 = r0.<android.telecom.RemoteConference: int mState>;

        if $i0 == 6 goto label2;

        r0.<android.telecom.RemoteConference: android.telecom.DisconnectCause mDisconnectCause> = r1;

        virtualinvoke r0.<android.telecom.RemoteConference: void setState(int)>(6);

        $r4 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.RemoteConference$Callback) $r5;

        virtualinvoke r3.<android.telecom.RemoteConference$Callback: void onDisconnected(android.telecom.RemoteConference,android.telecom.DisconnectCause)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final java.util.List getConnections()
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableChildConnections>;

        return $r1;
    }

    public final int getState()
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mState>;

        return $i0;
    }

    public final int getCallCapabilities()
    {
        android.telecom.RemoteConference r0;
        int $i0;

        r0 := @this: android.telecom.RemoteConference;

        $i0 = r0.<android.telecom.RemoteConference: int mCallCapabilities>;

        return $i0;
    }

    public void disconnect()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void disconnect(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void separate(android.telecom.RemoteConnection)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConnection r1;
        java.util.List $r3;
        boolean $z0;
        com.android.internal.telecom.IConnectionService $r4;
        java.lang.String $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConnection;

        $r3 = r0.<android.telecom.RemoteConference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

     label1:
        $r4 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r5 = virtualinvoke r1.<android.telecom.RemoteConnection: java.lang.String getId()>();

        interfaceinvoke $r4.<com.android.internal.telecom.IConnectionService: void splitFromConference(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void merge()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void mergeConference(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void swap()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void swapConference(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void hold()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void hold(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unhold()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void unhold(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.telecom.DisconnectCause getDisconnectCause()
    {
        android.telecom.RemoteConference r0;
        android.telecom.DisconnectCause $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: android.telecom.DisconnectCause mDisconnectCause>;

        return $r1;
    }

    public void playDtmfTone(char)
    {
        android.telecom.RemoteConference r0;
        char c0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

        c0 := @parameter0: char;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void playDtmfTone(java.lang.String,char)>($r2, c0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void stopDtmfTone()
    {
        android.telecom.RemoteConference r0;
        java.lang.String $r2;
        com.android.internal.telecom.IConnectionService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.RemoteConference;

     label1:
        $r3 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r2 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r3.<com.android.internal.telecom.IConnectionService: void stopDtmfTone(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAudioState(android.telecom.AudioState)
    {
        android.telecom.RemoteConference r0;
        android.telecom.AudioState r1;
        java.lang.String $r3;
        com.android.internal.telecom.IConnectionService $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.AudioState;

     label1:
        $r4 = r0.<android.telecom.RemoteConference: com.android.internal.telecom.IConnectionService mConnectionService>;

        $r3 = r0.<android.telecom.RemoteConference: java.lang.String mId>;

        interfaceinvoke $r4.<com.android.internal.telecom.IConnectionService: void onAudioStateChanged(java.lang.String,android.telecom.AudioState)>($r3, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getConferenceableConnections()
    {
        android.telecom.RemoteConference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.RemoteConference;

        $r1 = r0.<android.telecom.RemoteConference: java.util.List mUnmodifiableConferenceableConnections>;

        return $r1;
    }

    public final void registerCallback(android.telecom.RemoteConference$Callback)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConference$Callback r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConference$Callback;

        $r2 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void unregisterCallback(android.telecom.RemoteConference$Callback)
    {
        android.telecom.RemoteConference r0;
        android.telecom.RemoteConference$Callback r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.RemoteConference;

        r1 := @parameter0: android.telecom.RemoteConference$Callback;

        $r2 = r0.<android.telecom.RemoteConference: java.util.Set mCallbacks>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }
}
