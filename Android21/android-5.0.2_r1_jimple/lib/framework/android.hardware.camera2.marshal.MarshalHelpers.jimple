public final class android.hardware.camera2.marshal.MarshalHelpers extends java.lang.Object
{
    public static final int SIZEOF_BYTE;
    public static final int SIZEOF_INT32;
    public static final int SIZEOF_INT64;
    public static final int SIZEOF_FLOAT;
    public static final int SIZEOF_DOUBLE;
    public static final int SIZEOF_RATIONAL;

    public static int getPrimitiveTypeSize(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        return 1;

     label2:
        return 4;

     label3:
        return 4;

     label4:
        return 8;

     label5:
        return 8;

     label6:
        return 8;

     label7:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type, can\'t get size for ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static java.lang.Class checkPrimitiveClass(java.lang.Class)
    {
        java.lang.Class r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "klass must not be null");

        $z0 = staticinvoke <android.hardware.camera2.marshal.MarshalHelpers: boolean isPrimitiveClass(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported class \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; expected a metadata primitive class");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public static boolean isPrimitiveClass(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label01;

        return 0;

     label01:
        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 == $r1 goto label02;

        if r0 != class "java/lang/Byte" goto label03;

     label02:
        return 1;

     label03:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 == $r2 goto label04;

        if r0 != class "java/lang/Integer" goto label05;

     label04:
        return 1;

     label05:
        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 == $r3 goto label06;

        if r0 != class "java/lang/Float" goto label07;

     label06:
        return 1;

     label07:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 == $r4 goto label08;

        if r0 != class "java/lang/Long" goto label09;

     label08:
        return 1;

     label09:
        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 == $r5 goto label10;

        if r0 != class "java/lang/Double" goto label11;

     label10:
        return 1;

     label11:
        if r0 != class "android/util/Rational" goto label12;

        return 1;

     label12:
        return 0;
    }

    public static java.lang.Class wrapClassIfPrimitive(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        return class "java/lang/Byte";

     label1:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        return class "java/lang/Integer";

     label2:
        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        return class "java/lang/Float";

     label3:
        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        return class "java/lang/Long";

     label4:
        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        return class "java/lang/Double";

     label5:
        return r0;
    }

    public static java.lang.String toStringNativeType(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        return "TYPE_BYTE";

     label2:
        return "TYPE_INT32";

     label3:
        return "TYPE_FLOAT";

     label4:
        return "TYPE_INT64";

     label5:
        return "TYPE_DOUBLE";

     label6:
        return "TYPE_RATIONAL";

     label7:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static int checkNativeType(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        return i0;

     label2:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown nativeType ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static int checkNativeTypeEquals(int, int)
    {
        int i0, i1;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == i1 goto label1;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Expected native type %d, but got %d", $r1);

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return i1;
    }

    private void <init>()
    {
        android.hardware.camera2.marshal.MarshalHelpers r0;
        java.lang.AssertionError $r1;

        r0 := @this: android.hardware.camera2.marshal.MarshalHelpers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_RATIONAL> = 8;

        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_DOUBLE> = 8;

        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_FLOAT> = 4;

        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_INT64> = 8;

        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_INT32> = 4;

        <android.hardware.camera2.marshal.MarshalHelpers: int SIZEOF_BYTE> = 1;

        return;
    }
}
