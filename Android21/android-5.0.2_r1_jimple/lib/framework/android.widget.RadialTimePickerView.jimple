public class android.widget.RadialTimePickerView extends android.view.View implements android.view.View$OnTouchListener
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int DEBUG_COLOR;
    private static final int DEBUG_TEXT_COLOR;
    private static final int DEBUG_STROKE_WIDTH;
    private static final int HOURS;
    private static final int MINUTES;
    private static final int HOURS_INNER;
    private static final int AMPM;
    private static final int SELECTOR_CIRCLE;
    private static final int SELECTOR_DOT;
    private static final int SELECTOR_LINE;
    private static final int AM;
    private static final int PM;
    private static final int ALPHA_OPAQUE;
    private static final int ALPHA_TRANSPARENT;
    private static final int ALPHA_SELECTOR;
    private static final int ALPHA_AMPM_SELECTED;
    private static final int ALPHA_AMPM_PRESSED;
    private static final float COSINE_30_DEGREES;
    private static final float SINE_30_DEGREES;
    private static final int DEGREES_FOR_ONE_HOUR;
    private static final int DEGREES_FOR_ONE_MINUTE;
    private static final int[] HOURS_NUMBERS;
    private static final int[] HOURS_NUMBERS_24;
    private static final int[] MINUTES_NUMBERS;
    private static final int CENTER_RADIUS;
    private static final int[] STATE_SET_SELECTED;
    private static int[] sSnapPrefer30sMap;
    private final java.lang.String[] mHours12Texts;
    private final java.lang.String[] mOuterHours24Texts;
    private final java.lang.String[] mInnerHours24Texts;
    private final java.lang.String[] mMinutesTexts;
    private final java.lang.String[] mAmPmText;
    private final android.graphics.Paint[] mPaint;
    private final int[] mColor;
    private final android.widget.RadialTimePickerView$IntHolder[] mAlpha;
    private final android.graphics.Paint mPaintCenter;
    private final android.graphics.Paint[][] mPaintSelector;
    private final int[][] mColorSelector;
    private final android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector;
    private final android.graphics.Paint mPaintAmPmText;
    private final android.graphics.Paint[] mPaintAmPmCircle;
    private final android.graphics.Paint mPaintBackground;
    private final android.graphics.Paint mPaintDisabled;
    private final android.graphics.Paint mPaintDebug;
    private android.graphics.Typeface mTypeface;
    private boolean mIs24HourMode;
    private boolean mShowHours;
    private boolean mIsOnInnerCircle;
    private int mXCenter;
    private int mYCenter;
    private float[] mCircleRadius;
    private int mMinHypotenuseForInnerNumber;
    private int mMaxHypotenuseForOuterNumber;
    private int mHalfwayHypotenusePoint;
    private float[] mTextSize;
    private float mInnerTextSize;
    private float[][] mTextGridHeights;
    private float[][] mTextGridWidths;
    private float[] mInnerTextGridHeights;
    private float[] mInnerTextGridWidths;
    private java.lang.String[] mOuterTextHours;
    private java.lang.String[] mInnerTextHours;
    private java.lang.String[] mOuterTextMinutes;
    private float[] mCircleRadiusMultiplier;
    private float[] mNumbersRadiusMultiplier;
    private float[] mTextSizeMultiplier;
    private float[] mAnimationRadiusMultiplier;
    private float mTransitionMidRadiusMultiplier;
    private float mTransitionEndRadiusMultiplier;
    private android.animation.AnimatorSet mTransition;
    private android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener;
    private int[] mLineLength;
    private int[] mSelectionRadius;
    private float mSelectionRadiusMultiplier;
    private int[] mSelectionDegrees;
    private int mAmPmCircleRadius;
    private float mAmPmYCenter;
    private float mAmPmCircleRadiusMultiplier;
    private int mAmPmTextColor;
    private float mLeftIndicatorXCenter;
    private float mRightIndicatorXCenter;
    private int mAmPmUnselectedColor;
    private int mAmPmSelectedColor;
    private int mAmOrPm;
    private int mAmOrPmPressed;
    private int mDisabledAlpha;
    private android.graphics.RectF mRectF;
    private boolean mInputEnabled;
    private android.widget.RadialTimePickerView$OnValueSelectedListener mListener;
    private final java.util.ArrayList mHoursToMinutesAnims;
    private final java.util.ArrayList mMinuteToHoursAnims;

    private static void preparePrefer30sMap()
    {
        int i0, i1, i3, $i4;
        byte b2;
        int[] $r0;

        i0 = 0;

        i1 = 1;

        b2 = 8;

        i3 = 0;

     label1:
        if i3 >= 361 goto label7;

        $r0 = <android.widget.RadialTimePickerView: int[] sSnapPrefer30sMap>;

        $r0[i3] = i0;

        if i1 != b2 goto label5;

        i0 = i0 + 6;

        if i0 != 360 goto label2;

        b2 = 7;

        goto label4;

     label2:
        $i4 = i0 % 30;

        if $i4 != 0 goto label3;

        b2 = 14;

        goto label4;

     label3:
        b2 = 4;

     label4:
        i1 = 1;

        goto label6;

     label5:
        i1 = i1 + 1;

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        return;
    }

    private static int snapPrefer30s(int)
    {
        int i0, $i1;
        int[] $r0, $r1;

        i0 := @parameter0: int;

        $r0 = <android.widget.RadialTimePickerView: int[] sSnapPrefer30sMap>;

        if $r0 != null goto label1;

        return -1;

     label1:
        $r1 = <android.widget.RadialTimePickerView: int[] sSnapPrefer30sMap>;

        $i1 = $r1[i0];

        return $i1;
    }

    private static int snapOnly30s(int, int)
    {
        int i0, i1, i3, i4, $i5, $i6, $i7, i8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i5 = i0 / 30;

        i3 = $i5 * 30;

        i4 = i3 + 30;

        if i1 != 1 goto label1;

        i8 = i4;

        goto label5;

     label1:
        if i1 != -1 goto label3;

        if i0 != i3 goto label2;

        i3 = i3 + -30;

     label2:
        i8 = i3;

        goto label5;

     label3:
        $i7 = i0 - i3;

        $i6 = i4 - i0;

        if $i7 >= $i6 goto label4;

        i8 = i3;

        goto label5;

     label4:
        i8 = i4;

     label5:
        return i8;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.RadialTimePickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.RadialTimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843933);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.RadialTimePickerView r0;
        android.content.Context r1, $r44;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        android.util.TypedValue r3, $r39;
        android.content.res.Resources r4;
        android.content.res.TypedArray r5;
        android.content.res.ColorStateList r6, r155;
        java.lang.String[] $r7, $r8, $r9, $r10, $r11;
        int[] $r12, $r34, $r35, $r37, $r43, $r45, $r51, $r62, $r76, $r79, $r96, $r102, $r106, $r115;
        android.graphics.Paint[] $r13, $r21, $r49, $r53, $r56, $r58, $r63, $r64, $r68, $r77, $r82, $r84, $r86, $r88, $r91, $r95, $r98, $r109, $r112, $r114, $r121, $r125, $r127, $r129, $r136, $r138;
        android.graphics.Paint $r14, $r18, $r20, $r22, $r23, $r48, $r52, $r54, $r55, $r59, $r61, $r65, $r67, $r69, $r71, $r74, $r78, $r81, $r85, $r89, $r92, $r94, $r101, $r104, $r108, $r111, $r117, $r119, $r120, $r124, $r128, $r130, $r131, $r132, $r133, $r134, $r137, $r146;
        android.widget.RadialTimePickerView$IntHolder[] $r15, $r47, $r149, $r151, $r153;
        int[][] $r16, $r75, $r80, $r97, $r100, $r105, $r123;
        android.graphics.Paint[][] $r17, $r66, $r70, $r73, $r83, $r87, $r90, $r93, $r99, $r103, $r107, $r110, $r113, $r122, $r126;
        android.widget.RadialTimePickerView$IntHolder[][] $r19, $r50, $r152, $r154;
        float[] $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r141, $r145;
        float[][] $r28, $r29, $r140, $r144;
        android.widget.RadialTimePickerView$InvalidateUpdateListener $r36;
        java.util.ArrayList $r38, $r41;
        android.graphics.RectF $r40;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.content.res.Resources$Theme $r42;
        android.graphics.Typeface $r46, $r118;
        android.graphics.Paint$Align $r57, $r60, $r72, $r135;
        java.util.Locale $r139;
        java.lang.String $r142, $r143, $r147;
        android.widget.RadialTimePickerView$IntHolder $r148, $r150;
        java.util.Calendar r156;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r7 = newarray (java.lang.String)[12];

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mHours12Texts> = $r7;

        $r8 = newarray (java.lang.String)[12];

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterHours24Texts> = $r8;

        $r9 = newarray (java.lang.String)[12];

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerHours24Texts> = $r9;

        $r11 = newarray (java.lang.String)[12];

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mMinutesTexts> = $r11;

        $r10 = newarray (java.lang.String)[2];

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText> = $r10;

        $r13 = newarray (android.graphics.Paint)[2];

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint> = $r13;

        $r12 = newarray (int)[2];

        r0.<android.widget.RadialTimePickerView: int[] mColor> = $r12;

        $r15 = newarray (android.widget.RadialTimePickerView$IntHolder)[2];

        r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha> = $r15;

        $r14 = new android.graphics.Paint;

        specialinvoke $r14.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintCenter> = $r14;

        $r17 = newmultiarray (android.graphics.Paint)[2][3];

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector> = $r17;

        $r16 = newmultiarray (int)[2][3];

        r0.<android.widget.RadialTimePickerView: int[][] mColorSelector> = $r16;

        $r19 = newmultiarray (android.widget.RadialTimePickerView$IntHolder)[2][3];

        r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector> = $r19;

        $r18 = new android.graphics.Paint;

        specialinvoke $r18.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText> = $r18;

        $r21 = newarray (android.graphics.Paint)[2];

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle> = $r21;

        $r20 = new android.graphics.Paint;

        specialinvoke $r20.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintBackground> = $r20;

        $r23 = new android.graphics.Paint;

        specialinvoke $r23.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDisabled> = $r23;

        $r22 = new android.graphics.Paint;

        specialinvoke $r22.<android.graphics.Paint: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug> = $r22;

        $r25 = newarray (float)[3];

        r0.<android.widget.RadialTimePickerView: float[] mCircleRadius> = $r25;

        $r24 = newarray (float)[2];

        r0.<android.widget.RadialTimePickerView: float[] mTextSize> = $r24;

        $r28 = newmultiarray (float)[2][7];

        r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights> = $r28;

        $r29 = newmultiarray (float)[2][7];

        r0.<android.widget.RadialTimePickerView: float[][] mTextGridWidths> = $r29;

        $r26 = newarray (float)[7];

        r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridHeights> = $r26;

        $r27 = newarray (float)[7];

        r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridWidths> = $r27;

        $r32 = newarray (float)[2];

        r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier> = $r32;

        $r33 = newarray (float)[3];

        r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier> = $r33;

        $r30 = newarray (float)[3];

        r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier> = $r30;

        $r31 = newarray (float)[3];

        r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier> = $r31;

        $r36 = new android.widget.RadialTimePickerView$InvalidateUpdateListener;

        specialinvoke $r36.<android.widget.RadialTimePickerView$InvalidateUpdateListener: void <init>(android.widget.RadialTimePickerView,android.widget.RadialTimePickerView$1)>(r0, null);

        r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener> = $r36;

        $r37 = newarray (int)[3];

        r0.<android.widget.RadialTimePickerView: int[] mLineLength> = $r37;

        $r34 = newarray (int)[3];

        r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius> = $r34;

        $r35 = newarray (int)[3];

        r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees> = $r35;

        $r40 = new android.graphics.RectF;

        specialinvoke $r40.<android.graphics.RectF: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF> = $r40;

        r0.<android.widget.RadialTimePickerView: boolean mInputEnabled> = 1;

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims> = $r41;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims> = $r38;

        $r39 = new android.util.TypedValue;

        specialinvoke $r39.<android.util.TypedValue: void <init>()>();

        r3 = $r39;

        $r42 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r42.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842803, r3, 1);

        $f1 = virtualinvoke r3.<android.util.TypedValue: float getFloat()>();

        $f0 = $f1 * 255.0F;

        $f2 = $f0 + 0.5F;

        $i6 = (int) $f2;

        r0.<android.widget.RadialTimePickerView: int mDisabledAlpha> = $i6;

        r4 = virtualinvoke r0.<android.widget.RadialTimePickerView: android.content.res.Resources getResources()>();

        $r44 = r0.<android.widget.RadialTimePickerView: android.content.Context mContext>;

        $r43 = <com.android.internal.R$styleable: int[] TimePicker>;

        r5 = virtualinvoke $r44.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r43, i0, 0);

        r6 = virtualinvoke r5.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(7);

        if r6 != null goto label1;

        r6 = virtualinvoke r4.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>(17170668);

     label1:
        $i7 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(17170667);

        i1 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(12, $i7);

        r155 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>(r6, 16842913, i1);

        $r45 = <android.widget.RadialTimePickerView: int[] STATE_SET_SELECTED>;

        $i10 = virtualinvoke r155.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r45, i1);

        r0.<android.widget.RadialTimePickerView: int mAmPmSelectedColor> = $i10;

        $i11 = virtualinvoke r155.<android.content.res.ColorStateList: int getDefaultColor()>();

        r0.<android.widget.RadialTimePickerView: int mAmPmUnselectedColor> = $i11;

        $i12 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(17170666);

        $i8 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(6, $i12);

        r0.<android.widget.RadialTimePickerView: int mAmPmTextColor> = $i8;

        $r46 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>("sans-serif", 0);

        r0.<android.widget.RadialTimePickerView: android.graphics.Typeface mTypeface> = $r46;

        i2 = 0;

     label2:
        $r47 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $i9 = lengthof $r47;

        if i2 >= $i9 goto label3;

        $r151 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r150 = new android.widget.RadialTimePickerView$IntHolder;

        specialinvoke $r150.<android.widget.RadialTimePickerView$IntHolder: void <init>(int)>(255);

        $r151[i2] = $r150;

        i2 = i2 + 1;

        goto label2;

     label3:
        i25 = 0;

     label4:
        $r50 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $i13 = lengthof $r50;

        if i25 >= $i13 goto label7;

        i3 = 0;

     label5:
        $r152 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r153 = $r152[i25];

        $i24 = lengthof $r153;

        if i3 >= $i24 goto label6;

        $r154 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r149 = $r154[i25];

        $r148 = new android.widget.RadialTimePickerView$IntHolder;

        specialinvoke $r148.<android.widget.RadialTimePickerView$IntHolder: void <init>(int)>(255);

        $r149[i3] = $r148;

        i3 = i3 + 1;

        goto label5;

     label6:
        i25 = i25 + 1;

        goto label4;

     label7:
        $i14 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(17170666);

        i26 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(3, $i14);

        $r49 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r48 = new android.graphics.Paint;

        specialinvoke $r48.<android.graphics.Paint: void <init>()>();

        $r49[0] = $r48;

        $r56 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r55 = $r56[0];

        virtualinvoke $r55.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r58 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r52 = $r58[0];

        $r57 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r52.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r57);

        $r51 = r0.<android.widget.RadialTimePickerView: int[] mColor>;

        $r51[0] = i26;

        $r53 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r54 = new android.graphics.Paint;

        specialinvoke $r54.<android.graphics.Paint: void <init>()>();

        $r53[1] = $r54;

        $r63 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r65 = $r63[1];

        virtualinvoke $r65.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r64 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r59 = $r64[1];

        $r60 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r59.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r60);

        $r62 = r0.<android.widget.RadialTimePickerView: int[] mColor>;

        $r62[1] = i26;

        $r61 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintCenter>;

        virtualinvoke $r61.<android.graphics.Paint: void setColor(int)>(i26);

        $r71 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintCenter>;

        virtualinvoke $r71.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r69 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintCenter>;

        $r72 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r69.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r72);

        $r70 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r68 = $r70[0];

        $r67 = new android.graphics.Paint;

        specialinvoke $r67.<android.graphics.Paint: void <init>()>();

        $r68[0] = $r67;

        $r66 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r77 = $r66[0];

        $r78 = $r77[0];

        virtualinvoke $r78.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r75 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r76 = $r75[0];

        $i15 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r76[0] = $i15;

        $r73 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r84 = $r73[0];

        $r74 = new android.graphics.Paint;

        specialinvoke $r74.<android.graphics.Paint: void <init>()>();

        $r84[1] = $r74;

        $r83 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r82 = $r83[0];

        $r81 = $r82[1];

        virtualinvoke $r81.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r80 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r79 = $r80[0];

        $i16 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r79[1] = $i16;

        $r90 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r88 = $r90[0];

        $r89 = new android.graphics.Paint;

        specialinvoke $r89.<android.graphics.Paint: void <init>()>();

        $r88[2] = $r89;

        $r87 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r86 = $r87[0];

        $r85 = $r86[2];

        virtualinvoke $r85.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r99 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r98 = $r99[0];

        $r101 = $r98[2];

        virtualinvoke $r101.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r100 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r102 = $r100[0];

        $i17 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r102[2] = $i17;

        $r103 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r91 = $r103[1];

        $r92 = new android.graphics.Paint;

        specialinvoke $r92.<android.graphics.Paint: void <init>()>();

        $r91[0] = $r92;

        $r93 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r95 = $r93[1];

        $r94 = $r95[0];

        virtualinvoke $r94.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r97 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r96 = $r97[1];

        $i19 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r96[0] = $i19;

        $r110 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r112 = $r110[1];

        $r111 = new android.graphics.Paint;

        specialinvoke $r111.<android.graphics.Paint: void <init>()>();

        $r112[1] = $r111;

        $r113 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r114 = $r113[1];

        $r104 = $r114[1];

        virtualinvoke $r104.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r105 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r106 = $r105[1];

        $i18 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r106[1] = $i18;

        $r107 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r109 = $r107[1];

        $r108 = new android.graphics.Paint;

        specialinvoke $r108.<android.graphics.Paint: void <init>()>();

        $r109[2] = $r108;

        $r122 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r121 = $r122[1];

        $r120 = $r121[2];

        virtualinvoke $r120.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r126 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $r125 = $r126[1];

        $r124 = $r125[2];

        virtualinvoke $r124.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r123 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $r115 = $r123[1];

        $i21 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(5, 17170669);

        $r115[2] = $i21;

        $r119 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $i20 = r0.<android.widget.RadialTimePickerView: int mAmPmTextColor>;

        virtualinvoke $r119.<android.graphics.Paint: void setColor(int)>($i20);

        $r117 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $r118 = r0.<android.widget.RadialTimePickerView: android.graphics.Typeface mTypeface>;

        virtualinvoke $r117.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r118);

        $r134 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        virtualinvoke $r134.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r132 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $r135 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r132.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r135);

        $r138 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r133 = new android.graphics.Paint;

        specialinvoke $r133.<android.graphics.Paint: void <init>()>();

        $r138[0] = $r133;

        $r136 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r137 = $r136[0];

        virtualinvoke $r137.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r129 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r128 = new android.graphics.Paint;

        specialinvoke $r128.<android.graphics.Paint: void <init>()>();

        $r129[1] = $r128;

        $r127 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r130 = $r127[1];

        virtualinvoke $r130.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r131 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintBackground>;

        $i22 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(17170670);

        $i23 = virtualinvoke r5.<android.content.res.TypedArray: int getColor(int,int)>(4, $i22);

        virtualinvoke $r131.<android.graphics.Paint: void setColor(int)>($i23);

        $r146 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintBackground>;

        virtualinvoke $r146.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r0.<android.widget.RadialTimePickerView: boolean mShowHours> = 1;

        r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode> = 0;

        r0.<android.widget.RadialTimePickerView: int mAmOrPm> = 0;

        r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed> = -1;

        specialinvoke r0.<android.widget.RadialTimePickerView: void initHoursAndMinutesText()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void initData()>();

        $r147 = virtualinvoke r4.<android.content.res.Resources: java.lang.String getString(int)>(17039441);

        $f5 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r147);

        r0.<android.widget.RadialTimePickerView: float mTransitionMidRadiusMultiplier> = $f5;

        $r143 = virtualinvoke r4.<android.content.res.Resources: java.lang.String getString(int)>(17039442);

        $f4 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r143);

        r0.<android.widget.RadialTimePickerView: float mTransitionEndRadiusMultiplier> = $f4;

        $r144 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r145 = newarray (float)[7];

        $r144[0] = $r145;

        $r140 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r141 = newarray (float)[7];

        $r140[1] = $r141;

        $r142 = virtualinvoke r4.<android.content.res.Resources: java.lang.String getString(int)>(17039433);

        $f3 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r142);

        r0.<android.widget.RadialTimePickerView: float mSelectionRadiusMultiplier> = $f3;

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setClickable(boolean)>(1);

        $r139 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r156 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r139);

        i4 = virtualinvoke r156.<java.util.Calendar: int get(int)>(11);

        i5 = virtualinvoke r156.<java.util.Calendar: int get(int)>(12);

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i4);

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i5);

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setHapticFeedbackEnabled(boolean)>(1);

        return;
    }

    public void onMeasure(int, int)
    {
        android.widget.RadialTimePickerView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i4);

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, i3);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, i5);

        specialinvoke r0.<android.view.View: void onMeasure(int,int)>($i7, $i8);

        return;
    }

    public void initialize(int, int, boolean)
    {
        android.widget.RadialTimePickerView r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode> = z0;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i0);

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i1);

        return;
    }

    public void setCurrentItemShowing(int, boolean)
    {
        android.widget.RadialTimePickerView r0;
        int i0;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<android.widget.RadialTimePickerView: void showHours(boolean)>(z0);

        goto label4;

     label2:
        virtualinvoke r0.<android.widget.RadialTimePickerView: void showMinutes(boolean)>(z0);

        goto label4;

     label3:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClockView does not support showing item ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ClockView", $r4);

     label4:
        return;
    }

    public int getCurrentItemShowing()
    {
        android.widget.RadialTimePickerView r0;
        boolean $z0;
        byte $b0;

        r0 := @this: android.widget.RadialTimePickerView;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        return $b0;
    }

    public void setOnValueSelectedListener(android.widget.RadialTimePickerView$OnValueSelectedListener)
    {
        android.widget.RadialTimePickerView r0;
        android.widget.RadialTimePickerView$OnValueSelectedListener r1;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.widget.RadialTimePickerView$OnValueSelectedListener;

        r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener> = r1;

        return;
    }

    public void setCurrentHour(int)
    {
        android.widget.RadialTimePickerView r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        boolean $z0, $z1;
        byte $b4;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        $i2 = i0 % 12;

        i1 = $i2 * 30;

        $r1 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r1[0] = i1;

        $r2 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r2[2] = i1;

        if i0 == 0 goto label1;

        $i3 = i0 % 24;

        if $i3 >= 12 goto label2;

     label1:
        $b4 = 0;

        goto label3;

     label2:
        $b4 = 1;

     label3:
        r0.<android.widget.RadialTimePickerView: int mAmOrPm> = $b4;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z0 == 0 goto label6;

        if i0 < 1 goto label4;

        if i0 > 12 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle> = $z1;

        goto label7;

     label6:
        r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle> = 0;

     label7:
        specialinvoke r0.<android.widget.RadialTimePickerView: void initData()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void updateLayoutData()>();

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    public int getCurrentHour()
    {
        android.widget.RadialTimePickerView r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3;
        int[] $r1;
        byte $b4;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle>;

        if $z0 == 0 goto label1;

        $b4 = 2;

        goto label2;

     label1:
        $b4 = 0;

     label2:
        $i1 = $r1[$b4];

        $i2 = $i1 / 30;

        i0 = $i2 % 12;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z1 == 0 goto label4;

        $z2 = r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle>;

        if $z2 == 0 goto label3;

        if i0 != 0 goto label3;

        i0 = 12;

        goto label5;

     label3:
        $z3 = r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle>;

        if $z3 != 0 goto label5;

        if i0 == 0 goto label5;

        i0 = i0 + 12;

        goto label5;

     label4:
        $i3 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        if $i3 != 1 goto label5;

        i0 = i0 + 12;

     label5:
        return i0;
    }

    public void setCurrentMinute(int)
    {
        android.widget.RadialTimePickerView r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $i1 = i0 % 60;

        $i2 = $i1 * 6;

        $r1[1] = $i2;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    public int getCurrentMinute()
    {
        android.widget.RadialTimePickerView r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $i0 = $r1[1];

        $i1 = $i0 / 6;

        return $i1;
    }

    public void setAmOrPm(int)
    {
        android.widget.RadialTimePickerView r0;
        int i0, $i1;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        $i1 = i0 % 2;

        r0.<android.widget.RadialTimePickerView: int mAmOrPm> = $i1;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    public int getAmOrPm()
    {
        android.widget.RadialTimePickerView r0;
        int $i0;

        r0 := @this: android.widget.RadialTimePickerView;

        $i0 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        return $i0;
    }

    public void swapAmPm()
    {
        android.widget.RadialTimePickerView r0;
        int $i0;
        byte $b1;

        r0 := @this: android.widget.RadialTimePickerView;

        $i0 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        if $i0 != 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        r0.<android.widget.RadialTimePickerView: int mAmOrPm> = $b1;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    public void showHours(boolean)
    {
        android.widget.RadialTimePickerView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.RadialTimePickerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.RadialTimePickerView: boolean mShowHours> = 1;

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.RadialTimePickerView: void startMinutesToHoursAnimation()>();

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView: void initData()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void updateLayoutData()>();

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    public void showMinutes(boolean)
    {
        android.widget.RadialTimePickerView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.RadialTimePickerView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z1 != 0 goto label1;

        return;

     label1:
        r0.<android.widget.RadialTimePickerView: boolean mShowHours> = 0;

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.RadialTimePickerView: void startHoursToMinutesAnimation()>();

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView: void initData()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void updateLayoutData()>();

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    private void initHoursAndMinutesText()
    {
        android.widget.RadialTimePickerView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.content.Context $r1;
        java.lang.String $r2, $r4, $r10, $r14, $r19, $r25;
        java.lang.String[] $r3, $r5, $r8, $r13, $r18, $r21, r26;
        java.lang.Object[] $r6, $r12, $r17, $r22;
        int[] $r7, $r11, $r16, $r23;
        java.lang.Integer $r9, $r15, $r20, $r24;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 = 0;

     label1:
        if i0 >= 12 goto label2;

        $r8 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mHours12Texts>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = <android.widget.RadialTimePickerView: int[] HOURS_NUMBERS>;

        $i1 = $r7[i0];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r6);

        $r8[i0] = $r10;

        $r13 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterHours24Texts>;

        $r12 = newarray (java.lang.Object)[1];

        $r11 = <android.widget.RadialTimePickerView: int[] HOURS_NUMBERS_24>;

        $i2 = $r11[i0];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12[0] = $r15;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r12);

        $r13[i0] = $r14;

        $r18 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerHours24Texts>;

        $r17 = newarray (java.lang.Object)[1];

        $r16 = <android.widget.RadialTimePickerView: int[] HOURS_NUMBERS>;

        $i3 = $r16[i0];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r17[0] = $r20;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r17);

        $r18[i0] = $r19;

        $r21 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mMinutesTexts>;

        $r22 = newarray (java.lang.Object)[1];

        $r23 = <android.widget.RadialTimePickerView: int[] MINUTES_NUMBERS>;

        $i4 = $r23[i0];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r22[0] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r22);

        $r21[i0] = $r25;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.widget.RadialTimePickerView: android.content.Context mContext>;

        r26 = staticinvoke <android.widget.TimePickerClockDelegate: java.lang.String[] getAmPmStrings(android.content.Context)>($r1);

        $r3 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r2 = r26[0];

        $r3[0] = $r2;

        $r5 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r4 = r26[1];

        $r5[1] = $r4;

        return;
    }

    private void initData()
    {
        android.widget.RadialTimePickerView r0;
        android.content.res.Resources r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String[] $r2, $r3, $r50, $r53;
        float[] $r4, $r6, $r8, $r10, $r11, $r12, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r52;
        java.lang.String $r5, $r7, $r9, $r13, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.widget.RadialTimePickerView$IntHolder[] $r14, $r15, $r18, $r21, $r24, $r27, $r30, $r32;
        android.widget.RadialTimePickerView$IntHolder $r16, $r17, $r22, $r25, $r28, $r31, $r34, $r35;
        android.widget.RadialTimePickerView$IntHolder[][] $r19, $r20, $r23, $r26, $r29, $r33;
        short $s0, $s3, $s6, $s7;
        byte $b1, $b2, $b4, $b5;

        r0 := @this: android.widget.RadialTimePickerView;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z0 == 0 goto label01;

        $r50 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterHours24Texts>;

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterTextHours> = $r50;

        $r53 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerHours24Texts>;

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerTextHours> = $r53;

        goto label02;

     label01:
        $r2 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mHours12Texts>;

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterTextHours> = $r2;

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerTextHours> = null;

     label02:
        $r3 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mMinutesTexts>;

        r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterTextMinutes> = $r3;

        r1 = virtualinvoke r0.<android.widget.RadialTimePickerView: android.content.res.Resources getResources()>();

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z1 == 0 goto label04;

        $z10 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z10 == 0 goto label03;

        $r44 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $r41 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039432);

        $f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r41);

        $r44[0] = $f6;

        $r42 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $r47 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039437);

        $f9 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r47);

        $r42[0] = $f9;

        $r48 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $r45 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039440);

        $f8 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r45);

        $r48[0] = $f8;

        $r46 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $r51 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039436);

        $f11 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r51);

        $r46[2] = $f11;

        $r52 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $r49 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039439);

        $f10 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r49);

        $r52[2] = $f10;

        goto label05;

     label03:
        $r36 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $r39 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039431);

        $f5 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r39);

        $r36[0] = $f5;

        $r40 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $r37 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039435);

        $f4 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r37);

        $r40[0] = $f4;

        $r38 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $r43 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039438);

        $f7 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r43);

        $r38[0] = $f7;

        goto label05;

     label04:
        $r4 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $r5 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039431);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        $r4[1] = $f0;

        $r6 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $r7 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039435);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r7);

        $r6[1] = $f1;

        $r8 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $r9 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039438);

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r9);

        $r8[1] = $f2;

     label05:
        $r10 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r10[0] = 1.0F;

        $r12 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r12[2] = 1.0F;

        $r11 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r11[1] = 1.0F;

        $r13 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>(17039434);

        $f3 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r13);

        r0.<android.widget.RadialTimePickerView: float mAmPmCircleRadiusMultiplier> = $f3;

        $r14 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r16 = $r14[0];

        $z2 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z2 == 0 goto label06;

        $s6 = 255;

        goto label07;

     label06:
        $s6 = 0;

     label07:
        virtualinvoke $r16.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($s6);

        $r15 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r17 = $r15[1];

        $z3 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z3 == 0 goto label08;

        $s7 = 0;

        goto label09;

     label08:
        $s7 = 255;

     label09:
        virtualinvoke $r17.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($s7);

        $r19 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r18 = $r19[0];

        $r22 = $r18[0];

        $z4 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z4 == 0 goto label10;

        $b2 = 60;

        goto label11;

     label10:
        $b2 = 0;

     label11:
        virtualinvoke $r22.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($b2);

        $r20 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r21 = $r20[0];

        $r25 = $r21[1];

        $z5 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z5 == 0 goto label12;

        $s3 = 255;

        goto label13;

     label12:
        $s3 = 0;

     label13:
        virtualinvoke $r25.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($s3);

        $r23 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r24 = $r23[0];

        $r28 = $r24[2];

        $z6 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z6 == 0 goto label14;

        $b4 = 60;

        goto label15;

     label14:
        $b4 = 0;

     label15:
        virtualinvoke $r28.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($b4);

        $r26 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r27 = $r26[1];

        $r31 = $r27[0];

        $z7 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z7 == 0 goto label16;

        $b5 = 0;

        goto label17;

     label16:
        $b5 = 60;

     label17:
        virtualinvoke $r31.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($b5);

        $r29 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r30 = $r29[1];

        $r34 = $r30[1];

        $z8 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z8 == 0 goto label18;

        $s0 = 0;

        goto label19;

     label18:
        $s0 = 255;

     label19:
        virtualinvoke $r34.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($s0);

        $r33 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r32 = $r33[1];

        $r35 = $r32[2];

        $z9 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z9 == 0 goto label20;

        $b1 = 0;

        goto label21;

     label20:
        $b1 = 60;

     label21:
        virtualinvoke $r35.<android.widget.RadialTimePickerView$IntHolder: void setValue(int)>($b1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.RadialTimePickerView r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.RadialTimePickerView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.RadialTimePickerView: void updateLayoutData()>();

        return;
    }

    private void updateLayoutData()
    {
        android.widget.RadialTimePickerView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r31, $r32, $r33, $r34, $r35;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55;
        boolean $z0, $z1;
        int[] $r9, $r12, $r24, $r25, $r26, $r27;
        android.graphics.Paint $r30;

        r0 := @this: android.widget.RadialTimePickerView;

        $i2 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getWidth()>();

        $i3 = $i2 / 2;

        r0.<android.widget.RadialTimePickerView: int mXCenter> = $i3;

        $i4 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getHeight()>();

        $i5 = $i4 / 2;

        r0.<android.widget.RadialTimePickerView: int mYCenter> = $i5;

        $i7 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $i6 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f1 = (float) i0;

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $f0 = $r1[0];

        $f2 = $f1 * $f0;

        $r2[0] = $f2;

        $r4 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f3 = (float) i0;

        $r3 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $f4 = $r3[0];

        $f5 = $f3 * $f4;

        $r4[2] = $f5;

        $r6 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f8 = (float) i0;

        $r5 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadiusMultiplier>;

        $f6 = $r5[1];

        $f7 = $f8 * $f6;

        $r6[1] = $f7;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z0 != 0 goto label1;

        $r33 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f55 = $r33[0];

        $f49 = r0.<android.widget.RadialTimePickerView: float mAmPmCircleRadiusMultiplier>;

        $f54 = $f55 * $f49;

        i1 = (int) $f54;

        $i28 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $i29 = i1 / 2;

        $i27 = $i28 - $i29;

        r0.<android.widget.RadialTimePickerView: int mYCenter> = $i27;

     label1:
        $r8 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f9 = $r8[0];

        $r7 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f10 = $r7[2];

        $f11 = $f9 * $f10;

        $i10 = (int) $f11;

        $r9 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i9 = $r9[0];

        $i8 = $i10 - $i9;

        r0.<android.widget.RadialTimePickerView: int mMinHypotenuseForInnerNumber> = $i8;

        $r10 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f12 = $r10[0];

        $r11 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f14 = $r11[0];

        $f13 = $f12 * $f14;

        $i11 = (int) $f13;

        $r12 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i13 = $r12[0];

        $i12 = $i11 + $i13;

        r0.<android.widget.RadialTimePickerView: int mMaxHypotenuseForOuterNumber> = $i12;

        $r14 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f16 = $r14[0];

        $r15 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f19 = $r15[0];

        $r13 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f15 = $r13[2];

        $f18 = $f19 + $f15;

        $f17 = $f18 / 2.0F;

        $f20 = $f16 * $f17;

        $i14 = (int) $f20;

        r0.<android.widget.RadialTimePickerView: int mHalfwayHypotenusePoint> = $i14;

        $r18 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $r17 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f22 = $r17[0];

        $r16 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $f23 = $r16[0];

        $f21 = $f22 * $f23;

        $r18[0] = $f21;

        $r21 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $r20 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f24 = $r20[1];

        $r19 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $f25 = $r19[1];

        $f29 = $f24 * $f25;

        $r21[1] = $f29;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z1 == 0 goto label2;

        $r35 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f51 = $r35[0];

        $r34 = r0.<android.widget.RadialTimePickerView: float[] mTextSizeMultiplier>;

        $f52 = $r34[2];

        $f50 = $f51 * $f52;

        r0.<android.widget.RadialTimePickerView: float mInnerTextSize> = $f50;

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView: void calculateGridSizesHours()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void calculateGridSizesMinutes()>();

        $r24 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $r22 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f27 = $r22[0];

        $f26 = r0.<android.widget.RadialTimePickerView: float mSelectionRadiusMultiplier>;

        $f28 = $f27 * $f26;

        $i15 = (int) $f28;

        $r24[0] = $i15;

        $r26 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $r25 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i16 = $r25[0];

        $r26[2] = $i16;

        $r27 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $r23 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f31 = $r23[1];

        $f30 = r0.<android.widget.RadialTimePickerView: float mSelectionRadiusMultiplier>;

        $f32 = $f31 * $f30;

        $i19 = (int) $f32;

        $r27[1] = $i19;

        $r28 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f34 = $r28[0];

        $f35 = r0.<android.widget.RadialTimePickerView: float mAmPmCircleRadiusMultiplier>;

        $f33 = $f34 * $f35;

        $i18 = (int) $f33;

        r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius> = $i18;

        $r30 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $i17 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        $i22 = $i17 * 3;

        $i21 = $i22 / 4;

        $f38 = (float) $i21;

        virtualinvoke $r30.<android.graphics.Paint: void setTextSize(float)>($f38);

        $i20 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f36 = (float) $i20;

        $r29 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f37 = $r29[0];

        $f43 = $f36 + $f37;

        r0.<android.widget.RadialTimePickerView: float mAmPmYCenter> = $f43;

        $i24 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f41 = (float) $i24;

        $r31 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f42 = $r31[0];

        $f40 = $f41 - $f42;

        $i23 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        $f39 = (float) $i23;

        $f48 = $f40 + $f39;

        r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter> = $f48;

        $i26 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f46 = (float) $i26;

        $r32 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f47 = $r32[0];

        $f45 = $f46 + $f47;

        $i25 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        $f44 = (float) $i25;

        $f53 = $f45 - $f44;

        r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter> = $f53;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        boolean $z0, $z1, $z2;
        float[] $r2, $r11, $r12, $r15, $r23, $r24, $r34, $r35;
        float[][] $r3, $r4, $r14, $r17;
        android.graphics.Paint[] $r5, $r16, $r29;
        int[] $r6, $r19, $r26;
        android.widget.RadialTimePickerView$IntHolder[] $r7, $r18, $r27;
        android.widget.RadialTimePickerView$IntHolder $r8, $r20, $r32;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Typeface $r9, $r22, $r30;
        java.lang.String[] $r10, $r21, $r28, $r31;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Paint $r13, $r25, $r33;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mInputEnabled>;

        if $z0 != 0 goto label1;

        $i6 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getWidth()>();

        $f4 = (float) $i6;

        $i9 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getHeight()>();

        $f3 = (float) $i9;

        $i8 = r0.<android.widget.RadialTimePickerView: int mDisabledAlpha>;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>(0.0F, 0.0F, $f4, $f3, $i8);

        goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Canvas: int save()>();

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView: void calculateGridSizesHours()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void calculateGridSizesMinutes()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawCircleBackground(android.graphics.Canvas)>(r1);

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawSelector(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $f0 = $r2[0];

        $r9 = r0.<android.widget.RadialTimePickerView: android.graphics.Typeface mTypeface>;

        $r10 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterTextHours>;

        $r3 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridWidths>;

        $r11 = $r3[0];

        $r4 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r12 = $r4[0];

        $r5 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r13 = $r5[0];

        $r6 = r0.<android.widget.RadialTimePickerView: int[] mColor>;

        $i1 = $r6[0];

        $r7 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r8 = $r7[0];

        $i2 = virtualinvoke $r8.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawTextElements(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[],android.graphics.Paint,int,int)>(r1, $f0, $r9, $r10, $r11, $r12, $r13, $i1, $i2);

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z1 == 0 goto label3;

        $r28 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerTextHours>;

        if $r28 == null goto label3;

        $f2 = r0.<android.widget.RadialTimePickerView: float mInnerTextSize>;

        $r30 = r0.<android.widget.RadialTimePickerView: android.graphics.Typeface mTypeface>;

        $r31 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mInnerTextHours>;

        $r34 = r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridWidths>;

        $r35 = r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridHeights>;

        $r29 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r33 = $r29[0];

        $r26 = r0.<android.widget.RadialTimePickerView: int[] mColor>;

        $i5 = $r26[0];

        $r27 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r32 = $r27[0];

        $i7 = virtualinvoke $r32.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawTextElements(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[],android.graphics.Paint,int,int)>(r1, $f2, $r30, $r31, $r34, $r35, $r33, $i5, $i7);

     label3:
        $r15 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $f1 = $r15[1];

        $r22 = r0.<android.widget.RadialTimePickerView: android.graphics.Typeface mTypeface>;

        $r21 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mOuterTextMinutes>;

        $r14 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridWidths>;

        $r24 = $r14[1];

        $r17 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r23 = $r17[1];

        $r16 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r25 = $r16[1];

        $r19 = r0.<android.widget.RadialTimePickerView: int[] mColor>;

        $i4 = $r19[1];

        $r18 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r20 = $r18[1];

        $i3 = virtualinvoke $r20.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawTextElements(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[],android.graphics.Paint,int,int)>(r1, $f1, $r22, $r21, $r24, $r23, $r25, $i4, $i3);

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawCenter(android.graphics.Canvas)>(r1);

        $z2 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z2 != 0 goto label4;

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawAmPm(android.graphics.Canvas)>(r1);

     label4:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    private void drawCircleBackground(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        int $i0, $i1;
        float[] $r2;
        android.graphics.Paint $r3;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f2 = (float) $i0;

        $i1 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f1 = (float) $i1;

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f0 = $r2[0];

        $r3 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintBackground>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f2, $f1, $f0, $r3);

        return;
    }

    private void drawCenter(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        int $i0, $i1;
        android.graphics.Paint $r2;
        float $f0, $f1;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f1 = (float) $i0;

        $i1 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f0 = (float) $i1;

        $r2 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintCenter>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f0, 2.0F, $r2);

        return;
    }

    private void drawSelector(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        boolean $z0;
        byte $b0;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle>;

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        specialinvoke r0.<android.widget.RadialTimePickerView: void drawSelector(android.graphics.Canvas,int)>(r1, $b0);

        specialinvoke r0.<android.widget.RadialTimePickerView: void drawSelector(android.graphics.Canvas,int)>(r1, 1);

        return;
    }

    private void drawAmPm(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        boolean z0;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        short s1, s3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.graphics.Paint[] $r2, $r4, $r6, $r9, $r11, $r13;
        android.graphics.Paint $r3, $r5, $r7, $r8, $r10, $r12, $r14, $r15, $r16, $r18, $r19;
        java.lang.String[] $r17, $r20, $r22, $r23;
        java.lang.String $r21, $r24;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        z0 = virtualinvoke r0.<android.widget.RadialTimePickerView: boolean isLayoutRtl()>();

        i0 = r0.<android.widget.RadialTimePickerView: int mAmPmUnselectedColor>;

        s1 = 255;

        i2 = r0.<android.widget.RadialTimePickerView: int mAmPmUnselectedColor>;

        s3 = 255;

        $i4 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        if $i4 != 0 goto label01;

        i0 = r0.<android.widget.RadialTimePickerView: int mAmPmSelectedColor>;

        s1 = 60;

        goto label02;

     label01:
        $i5 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        if $i5 != 1 goto label02;

        i2 = r0.<android.widget.RadialTimePickerView: int mAmPmSelectedColor>;

        s3 = 60;

     label02:
        $i6 = r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed>;

        if $i6 != 0 goto label03;

        i0 = r0.<android.widget.RadialTimePickerView: int mAmPmSelectedColor>;

        s1 = 255;

        goto label04;

     label03:
        $i7 = r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed>;

        if $i7 != 1 goto label04;

        i2 = r0.<android.widget.RadialTimePickerView: int mAmPmSelectedColor>;

        s3 = 255;

     label04:
        $r2 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r3 = $r2[0];

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        $r4 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r5 = $r4[0];

        $i8 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i0, s1);

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>($i8);

        if z0 == 0 goto label05;

        $f2 = r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter>;

        goto label06;

     label05:
        $f2 = r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter>;

     label06:
        $f3 = r0.<android.widget.RadialTimePickerView: float mAmPmYCenter>;

        $i9 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        $f1 = (float) $i9;

        $r6 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r7 = $r6[0];

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f2, $f3, $f1, $r7);

        $r9 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r8 = $r9[1];

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>(i2);

        $r11 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r10 = $r11[1];

        $i11 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i2, s3);

        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>($i11);

        if z0 == 0 goto label07;

        $f4 = r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter>;

        goto label08;

     label07:
        $f4 = r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter>;

     label08:
        $f6 = r0.<android.widget.RadialTimePickerView: float mAmPmYCenter>;

        $i10 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        $f5 = (float) $i10;

        $r13 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaintAmPmCircle>;

        $r12 = $r13[1];

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f4, $f6, $f5, $r12);

        $r14 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $i12 = r0.<android.widget.RadialTimePickerView: int mAmPmTextColor>;

        virtualinvoke $r14.<android.graphics.Paint: void setColor(int)>($i12);

        $f7 = r0.<android.widget.RadialTimePickerView: float mAmPmYCenter>;

        $r15 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $f8 = virtualinvoke $r15.<android.graphics.Paint: float descent()>();

        $r16 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        $f10 = virtualinvoke $r16.<android.graphics.Paint: float ascent()>();

        $f9 = $f8 + $f10;

        $i13 = (int) $f9;

        $i14 = $i13 / 2;

        $f11 = (float) $i14;

        f0 = $f7 - $f11;

        if z0 == 0 goto label09;

        $r22 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r21 = $r22[1];

        goto label10;

     label09:
        $r17 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r21 = $r17[0];

     label10:
        $f12 = r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter>;

        $r18 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r21, $f12, f0, $r18);

        if z0 == 0 goto label11;

        $r23 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r24 = $r23[0];

        goto label12;

     label11:
        $r20 = r0.<android.widget.RadialTimePickerView: java.lang.String[] mAmPmText>;

        $r24 = $r20[1];

     label12:
        $f13 = r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter>;

        $r19 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintAmPmText>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r24, $f13, f0, $r19);

        return;
    }

    private int getMultipliedAlpha(int, int)
    {
        android.widget.RadialTimePickerView r0;
        int i0, i1, $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $d2 = (double) $i2;

        $d0 = (double) i1;

        $d1 = $d0 / 255.0;

        $d3 = $d2 * $d1;

        $d4 = $d3 + 0.5;

        $i3 = (int) $d4;

        return $i3;
    }

    private void drawSelector(android.graphics.Canvas, int)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, i42, i43;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        android.graphics.Paint r2, r36, r37;
        float[] $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        int[] $r6, $r7, $r8, $r9, $r12, $r15, $r18, $r19, $r20, $r25, $r28, $r31;
        android.widget.RadialTimePickerView$IntHolder[][] $r10, $r21, $r30;
        int[][] $r11, $r24, $r29;
        android.widget.RadialTimePickerView$IntHolder[] $r13, $r22, $r34;
        android.widget.RadialTimePickerView$IntHolder $r14, $r23, $r35;
        android.graphics.Paint[] $r16, $r26, $r33;
        android.graphics.Paint[][] $r17, $r27, $r32;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        $r7 = r0.<android.widget.RadialTimePickerView: int[] mLineLength>;

        $r3 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f1 = $r3[i0];

        $r4 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f0 = $r4[i0];

        $f2 = $f1 * $f0;

        $r5 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $f3 = $r5[i0];

        $f4 = $f2 * $f3;

        $i6 = (int) $f4;

        $r7[i0] = $i6;

        $r6 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $i7 = $r6[i0];

        $d1 = (double) $i7;

        d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $i8 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $r8 = r0.<android.widget.RadialTimePickerView: int[] mLineLength>;

        $i9 = $r8[i0];

        $d3 = (double) $i9;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d4 = $d3 * $d2;

        $i10 = (int) $d4;

        i1 = $i8 + $i10;

        $i11 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $r9 = r0.<android.widget.RadialTimePickerView: int[] mLineLength>;

        $i12 = $r9[i0];

        $d5 = (double) $i12;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d7 = $d5 * $d6;

        $i13 = (int) $d7;

        i2 = $i11 - $i13;

        $r11 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $i14 = i0 % 2;

        $r12 = $r11[$i14];

        i3 = $r12[0];

        $r10 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $i15 = i0 % 2;

        $r13 = $r10[$i15];

        $r14 = $r13[0];

        i4 = virtualinvoke $r14.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        $r17 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $i16 = i0 % 2;

        $r16 = $r17[$i16];

        r2 = $r16[0];

        virtualinvoke r2.<android.graphics.Paint: void setColor(int)>(i3);

        $i17 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i3, i4);

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>($i17);

        $f5 = (float) i1;

        $f6 = (float) i2;

        $r15 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i18 = $r15[i0];

        $f7 = (float) $i18;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f5, $f6, $f7, r2);

        $r19 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $i20 = $r19[i0];

        $i19 = $i20 % 30;

        if $i19 == 0 goto label1;

        $r29 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $i34 = i0 % 2;

        $r28 = $r29[$i34];

        i40 = $r28[1];

        $r30 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $i33 = i0 % 2;

        $r34 = $r30[$i33];

        $r35 = $r34[1];

        i41 = virtualinvoke $r35.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        $r32 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $i36 = i0 % 2;

        $r33 = $r32[$i36];

        r36 = $r33[1];

        virtualinvoke r36.<android.graphics.Paint: void setColor(int)>(i40);

        $i35 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i40, i41);

        virtualinvoke r36.<android.graphics.Paint: void setAlpha(int)>($i35);

        $f13 = (float) i1;

        $f12 = (float) i2;

        $r31 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i38 = $r31[i0];

        $i39 = $i38 * 2;

        $i37 = $i39 / 7;

        $f14 = (float) $i37;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f13, $f12, $f14, r36);

        goto label2;

     label1:
        $r18 = r0.<android.widget.RadialTimePickerView: int[] mLineLength>;

        $i22 = $r18[i0];

        $r20 = r0.<android.widget.RadialTimePickerView: int[] mSelectionRadius>;

        $i23 = $r20[i0];

        i5 = $i22 - $i23;

        $i21 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $d11 = (double) i5;

        $d12 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $d13 = $d11 * $d12;

        $i25 = (int) $d13;

        i1 = $i21 + $i25;

        $i24 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $d8 = (double) i5;

        $d9 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d10 = $d8 * $d9;

        $i27 = (int) $d10;

        i2 = $i24 - $i27;

     label2:
        $r24 = r0.<android.widget.RadialTimePickerView: int[][] mColorSelector>;

        $i28 = i0 % 2;

        $r25 = $r24[$i28];

        i42 = $r25[2];

        $r21 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $i26 = i0 % 2;

        $r22 = $r21[$i26];

        $r23 = $r22[2];

        i43 = virtualinvoke $r23.<android.widget.RadialTimePickerView$IntHolder: int getValue()>();

        $r27 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[][] mPaintSelector>;

        $i32 = i0 % 2;

        $r26 = $r27[$i32];

        r37 = $r26[2];

        virtualinvoke r37.<android.graphics.Paint: void setColor(int)>(i42);

        $i30 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i42, i43);

        virtualinvoke r37.<android.graphics.Paint: void setAlpha(int)>($i30);

        $i29 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f11 = (float) $i29;

        $i31 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f9 = (float) $i31;

        $f10 = (float) i1;

        $f8 = (float) i2;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f11, $f9, $f10, $f8, r37);

        return;
    }

    private void drawDebug(android.graphics.Canvas)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, f38, f39, f40, f41;
        java.lang.String r2, $r33;
        android.view.ViewGroup$LayoutParams r3, $r30;
        android.widget.TextView r4, $r32;
        android.text.TextPaint r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        float[] $r6, $r7, $r9, $r10, $r12, $r17, $r18, $r19, $r24;
        android.graphics.Paint $r8, $r11, $r13, $r15, $r21, $r25;
        android.graphics.RectF $r14, $r16, $r20, $r22, $r23, $r26;
        java.lang.Integer $r27, $r28;
        java.lang.Object[] $r29;
        android.content.Context $r31;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        $r7 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f9 = $r7[0];

        $r6 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f10 = $r6[0];

        f0 = $f9 * $f10;

        $i2 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f12 = (float) $i2;

        $i1 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f11 = (float) $i1;

        $r8 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f12, $f11, f0, $r8);

        $r9 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f14 = $r9[0];

        $r10 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f13 = $r10[2];

        f1 = $f14 * $f13;

        $i3 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f16 = (float) $i3;

        $i4 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f15 = (float) $i4;

        $r11 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f16, $f15, f1, $r11);

        $i5 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f20 = (float) $i5;

        $i6 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f18 = (float) $i6;

        $r12 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f17 = $r12[0];

        $r13 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f20, $f18, $f17, $r13);

        $i8 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f19 = (float) $i8;

        f2 = $f19 - f0;

        $i7 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f22 = (float) $i7;

        f3 = $f22 - f0;

        $i10 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f21 = (float) $i10;

        f4 = $f21 + f0;

        $i9 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f23 = (float) $i9;

        f5 = $f23 + f0;

        $r16 = new android.graphics.RectF;

        specialinvoke $r16.<android.graphics.RectF: void <init>(float,float,float,float)>(f2, f3, f4, f5);

        r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF> = $r16;

        $r14 = r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF>;

        $r15 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r14, $r15);

        $i11 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f24 = (float) $i11;

        $r17 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f25 = $r17[0];

        f38 = $f24 - $f25;

        $i12 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f26 = (float) $i12;

        $r18 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f27 = $r18[0];

        f39 = $f26 - $f27;

        $i13 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f28 = (float) $i13;

        $r19 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f29 = $r19[0];

        f40 = $f28 + $f29;

        $i14 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f31 = (float) $i14;

        $r24 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f30 = $r24[0];

        f41 = $f31 + $f30;

        $r20 = r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF>;

        virtualinvoke $r20.<android.graphics.RectF: void set(float,float,float,float)>(f38, f39, f40, f41);

        $r22 = r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF>;

        $r21 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r22, $r21);

        $r23 = r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF>;

        $i16 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getWidth()>();

        $f33 = (float) $i16;

        $i15 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getHeight()>();

        $f32 = (float) $i15;

        virtualinvoke $r23.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f33, $f32);

        $r26 = r0.<android.widget.RadialTimePickerView: android.graphics.RectF mRectF>;

        $r25 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint mPaintDebug>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r26, $r25);

        $r29 = newarray (java.lang.Object)[2];

        $i18 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r29[0] = $r27;

        $i17 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r29[1] = $r28;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d", $r29);

        $r30 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r30.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        r3 = $r30;

        $r32 = new android.widget.TextView;

        $r31 = virtualinvoke r0.<android.widget.RadialTimePickerView: android.content.Context getContext()>();

        specialinvoke $r32.<android.widget.TextView: void <init>(android.content.Context)>($r31);

        r4 = $r32;

        virtualinvoke r4.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        virtualinvoke r4.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        virtualinvoke r4.<android.widget.TextView: void measure(int,int)>(0, 0);

        r5 = virtualinvoke r4.<android.widget.TextView: android.text.TextPaint getPaint()>();

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>(1627324416);

        i0 = virtualinvoke r4.<android.widget.TextView: int getMeasuredWidth()>();

        $f35 = virtualinvoke r5.<android.graphics.Paint: float descent()>();

        $f34 = virtualinvoke r5.<android.graphics.Paint: float ascent()>();

        f6 = $f35 - $f34;

        $i22 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $i21 = i0 / 2;

        $i19 = $i22 - $i21;

        f7 = (float) $i19;

        $i20 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f37 = (float) $i20;

        $f36 = 1.5F * f6;

        f8 = $f37 + $f36;

        $r33 = virtualinvoke r2.<java.lang.String: java.lang.String toString()>();

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r33, f7, f8, r5);

        return;
    }

    private void calculateGridSizesHours()
    {
        android.widget.RadialTimePickerView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        float[] $r1, $r2, $r3, $r5, $r8, $r9, $r11, $r12, $r13, $r15, $r16;
        android.graphics.Paint[] $r4, $r14;
        int $i0, $i1, $i2, $i3;
        float[][] $r6, $r7;
        android.graphics.Paint $r10, $r17;
        boolean $z0;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f3 = $r1[0];

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f2 = $r2[0];

        $f5 = $f3 * $f2;

        $r3 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $f4 = $r3[0];

        f0 = $f5 * $f4;

        $r4 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r10 = $r4[0];

        $i0 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f8 = (float) $i0;

        $i1 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f6 = (float) $i1;

        $r5 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $f7 = $r5[0];

        $r6 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r8 = $r6[0];

        $r7 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridWidths>;

        $r9 = $r7[0];

        staticinvoke <android.widget.RadialTimePickerView: void calculateGridSizes(android.graphics.Paint,float,float,float,float,float[],float[])>($r10, f0, $f8, $f6, $f7, $r8, $r9);

        $z0 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        $r11 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f10 = $r11[2];

        $r12 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f9 = $r12[2];

        $f11 = $f10 * $f9;

        $r13 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $f12 = $r13[2];

        f1 = $f11 * $f12;

        $r14 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r17 = $r14[0];

        $i2 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f15 = (float) $i2;

        $i3 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f14 = (float) $i3;

        $f13 = r0.<android.widget.RadialTimePickerView: float mInnerTextSize>;

        $r15 = r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridHeights>;

        $r16 = r0.<android.widget.RadialTimePickerView: float[] mInnerTextGridWidths>;

        staticinvoke <android.widget.RadialTimePickerView: void calculateGridSizes(android.graphics.Paint,float,float,float,float,float[],float[])>($r17, f1, $f15, $f14, $f13, $r15, $r16);

     label1:
        return;
    }

    private void calculateGridSizesMinutes()
    {
        android.widget.RadialTimePickerView r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        float[] $r1, $r2, $r3, $r5, $r8, $r9;
        android.graphics.Paint[] $r4;
        int $i0, $i1;
        float[][] $r6, $r7;
        android.graphics.Paint $r10;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f2 = $r1[1];

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f1 = $r2[1];

        $f4 = $f2 * $f1;

        $r3 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $f3 = $r3[1];

        f0 = $f4 * $f3;

        $r4 = r0.<android.widget.RadialTimePickerView: android.graphics.Paint[] mPaint>;

        $r10 = $r4[1];

        $i0 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f6 = (float) $i0;

        $i1 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f7 = (float) $i1;

        $r5 = r0.<android.widget.RadialTimePickerView: float[] mTextSize>;

        $f5 = $r5[1];

        $r6 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridHeights>;

        $r9 = $r6[1];

        $r7 = r0.<android.widget.RadialTimePickerView: float[][] mTextGridWidths>;

        $r8 = $r7[1];

        staticinvoke <android.widget.RadialTimePickerView: void calculateGridSizes(android.graphics.Paint,float,float,float,float,float[],float[])>($r10, f0, $f6, $f7, $f5, $r9, $r8);

        return;
    }

    private static void calculateGridSizes(android.graphics.Paint, float, float, float, float, float[], float[])
    {
        android.graphics.Paint r0;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24;
        float[] r1, r2;

        r0 := @parameter0: android.graphics.Paint;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        r1 := @parameter5: float[];

        r2 := @parameter6: float[];

        f4 = f0;

        $f7 = <android.widget.RadialTimePickerView: float COSINE_30_DEGREES>;

        f5 = f0 * $f7;

        f6 = f0 * 0.5F;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f3);

        $f8 = virtualinvoke r0.<android.graphics.Paint: float descent()>();

        $f9 = virtualinvoke r0.<android.graphics.Paint: float ascent()>();

        $f10 = $f8 + $f9;

        $f11 = $f10 / 2.0F;

        f24 = f2 - $f11;

        $f12 = f24 - f4;

        r1[0] = $f12;

        $f14 = f1 - f4;

        r2[0] = $f14;

        $f13 = f24 - f5;

        r1[1] = $f13;

        $f16 = f1 - f5;

        r2[1] = $f16;

        $f15 = f24 - f6;

        r1[2] = $f15;

        $f18 = f1 - f6;

        r2[2] = $f18;

        r1[3] = f24;

        r2[3] = f1;

        $f17 = f24 + f6;

        r1[4] = $f17;

        $f20 = f1 + f6;

        r2[4] = $f20;

        $f19 = f24 + f5;

        r1[5] = $f19;

        $f22 = f1 + f5;

        r2[5] = $f22;

        $f21 = f24 + f4;

        r1[6] = $f21;

        $f23 = f1 + f4;

        r2[6] = $f23;

        return;
    }

    private void drawTextElements(android.graphics.Canvas, float, android.graphics.Typeface, java.lang.String[], float[], float[], android.graphics.Paint, int, int)
    {
        android.widget.RadialTimePickerView r0;
        android.graphics.Canvas r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        android.graphics.Typeface r2;
        java.lang.String[] r3;
        float[] r4, r5;
        android.graphics.Paint r6;
        int i0, i1, $i2;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        r2 := @parameter2: android.graphics.Typeface;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: float[];

        r5 := @parameter5: float[];

        r6 := @parameter6: android.graphics.Paint;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        virtualinvoke r6.<android.graphics.Paint: void setTextSize(float)>(f0);

        virtualinvoke r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r2);

        virtualinvoke r6.<android.graphics.Paint: void setColor(int)>(i0);

        $i2 = specialinvoke r0.<android.widget.RadialTimePickerView: int getMultipliedAlpha(int,int)>(i0, i1);

        virtualinvoke r6.<android.graphics.Paint: void setAlpha(int)>($i2);

        $r8 = r3[0];

        $f2 = r4[3];

        $f1 = r5[0];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r8, $f2, $f1, r6);

        $r9 = r3[1];

        $f4 = r4[4];

        $f3 = r5[1];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r9, $f4, $f3, r6);

        $r10 = r3[2];

        $f5 = r4[5];

        $f6 = r5[2];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r10, $f5, $f6, r6);

        $r11 = r3[3];

        $f8 = r4[6];

        $f7 = r5[3];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f8, $f7, r6);

        $r12 = r3[4];

        $f9 = r4[5];

        $f10 = r5[4];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r12, $f9, $f10, r6);

        $r13 = r3[5];

        $f12 = r4[4];

        $f11 = r5[5];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r13, $f12, $f11, r6);

        $r15 = r3[6];

        $f13 = r4[3];

        $f14 = r5[6];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r15, $f13, $f14, r6);

        $r14 = r3[7];

        $f15 = r4[2];

        $f16 = r5[5];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r14, $f15, $f16, r6);

        $r16 = r3[8];

        $f19 = r4[1];

        $f18 = r5[4];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r16, $f19, $f18, r6);

        $r17 = r3[9];

        $f22 = r4[0];

        $f17 = r5[3];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r17, $f22, $f17, r6);

        $r19 = r3[10];

        $f21 = r4[1];

        $f20 = r5[2];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r19, $f21, $f20, r6);

        $r18 = r3[11];

        $f23 = r4[2];

        $f24 = r5[1];

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r18, $f23, $f24, r6);

        return;
    }

    private void setAnimationRadiusMultiplierHours(float)
    {
        android.widget.RadialTimePickerView r0;
        float f0;
        float[] $r1, $r2;

        r0 := @this: android.widget.RadialTimePickerView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r1[0] = f0;

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r2[2] = f0;

        return;
    }

    private void setAnimationRadiusMultiplierMinutes(float)
    {
        android.widget.RadialTimePickerView r0;
        float f0;
        float[] $r1;

        r0 := @this: android.widget.RadialTimePickerView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mAnimationRadiusMultiplier>;

        $r1[1] = f0;

        return;
    }

    private static android.animation.ObjectAnimator getRadiusDisappearAnimator(java.lang.Object, java.lang.String, android.widget.RadialTimePickerView$InvalidateUpdateListener, float, float)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.widget.RadialTimePickerView$InvalidateUpdateListener r2;
        float f0, f1, f2;
        android.animation.Keyframe r3, r4, r5;
        short s0;
        android.animation.PropertyValuesHolder r6;
        android.animation.ObjectAnimator r7, $r10;
        android.animation.Keyframe[] $r8;
        android.animation.PropertyValuesHolder[] $r9;
        long $l1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.widget.RadialTimePickerView$InvalidateUpdateListener;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 = 0.2F;

        s0 = 500;

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        r4 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f2, f0);

        r5 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, f1);

        $r8 = newarray (android.animation.Keyframe)[3];

        $r8[0] = r3;

        $r8[1] = r4;

        $r8[2] = r5;

        r6 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>(r1, $r8);

        $r9 = newarray (android.animation.PropertyValuesHolder)[1];

        $r9[0] = r6;

        $r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r9);

        $l1 = (long) s0;

        r7 = virtualinvoke $r10.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l1);

        virtualinvoke r7.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r2);

        return r7;
    }

    private static android.animation.ObjectAnimator getRadiusReappearAnimator(java.lang.Object, java.lang.String, android.widget.RadialTimePickerView$InvalidateUpdateListener, float, float)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.widget.RadialTimePickerView$InvalidateUpdateListener r2;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14;
        android.animation.Keyframe r3, r4, r5, r6;
        short s0;
        int i1;
        android.animation.ObjectAnimator r7, $r11;
        android.animation.PropertyValuesHolder r8;
        android.animation.Keyframe[] $r9;
        android.animation.PropertyValuesHolder[] $r10;
        long $l2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.widget.RadialTimePickerView$InvalidateUpdateListener;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 = 0.2F;

        s0 = 500;

        f3 = 0.25F;

        f4 = 1.0F;

        f5 = f4 + f3;

        $f8 = (float) s0;

        $f7 = $f8 * f5;

        i1 = (int) $f7;

        $f10 = (float) s0;

        $f12 = f3 * $f10;

        $f9 = (float) i1;

        f6 = $f12 / $f9;

        $f11 = 1.0F - f6;

        $f13 = f2 * $f11;

        f14 = 1.0F - $f13;

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, f1);

        r4 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f6, f1);

        r5 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f14, f0);

        r6 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r9 = newarray (android.animation.Keyframe)[4];

        $r9[0] = r3;

        $r9[1] = r4;

        $r9[2] = r5;

        $r9[3] = r6;

        r8 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>(r1, $r9);

        $r10 = newarray (android.animation.PropertyValuesHolder)[1];

        $r10[0] = r8;

        $r11 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r10);

        $l2 = (long) i1;

        r7 = virtualinvoke $r11.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        virtualinvoke r7.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r2);

        return r7;
    }

    private static android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder, int, int, android.widget.RadialTimePickerView$InvalidateUpdateListener)
    {
        android.widget.RadialTimePickerView$IntHolder r0;
        int i0, i1;
        android.widget.RadialTimePickerView$InvalidateUpdateListener r1;
        short s2;
        android.animation.ObjectAnimator r2;
        int[] $r3;
        long $l3;

        r0 := @parameter0: android.widget.RadialTimePickerView$IntHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.widget.RadialTimePickerView$InvalidateUpdateListener;

        s2 = 500;

        $r3 = newarray (int)[2];

        $r3[0] = i0;

        $r3[1] = i1;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r0, "value", $r3);

        $l3 = (long) s2;

        virtualinvoke r2.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        virtualinvoke r2.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r1);

        return r2;
    }

    private static android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder, int, int, android.widget.RadialTimePickerView$InvalidateUpdateListener)
    {
        android.widget.RadialTimePickerView$IntHolder r0;
        int i0, i1, i3;
        android.widget.RadialTimePickerView$InvalidateUpdateListener r1;
        android.animation.Keyframe r2, r3, r4;
        short s2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8;
        android.animation.PropertyValuesHolder r5;
        android.animation.ObjectAnimator r6, $r9;
        android.animation.Keyframe[] $r7;
        android.animation.PropertyValuesHolder[] $r8;
        long $l4;

        r0 := @parameter0: android.widget.RadialTimePickerView$IntHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.widget.RadialTimePickerView$InvalidateUpdateListener;

        s2 = 500;

        f0 = 0.25F;

        f1 = 1.0F;

        f2 = f1 + f0;

        $f4 = (float) s2;

        $f6 = $f4 * f2;

        i3 = (int) $f6;

        $f5 = (float) s2;

        $f7 = f0 * $f5;

        $f8 = (float) i3;

        f3 = $f7 / $f8;

        r2 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>(0.0F, i0);

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>(f3, i0);

        r4 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>(1.0F, i1);

        $r7 = newarray (android.animation.Keyframe)[3];

        $r7[0] = r2;

        $r7[1] = r3;

        $r7[2] = r4;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("value", $r7);

        $r8 = newarray (android.animation.PropertyValuesHolder)[1];

        $r8[0] = r5;

        $r9 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r8);

        $l4 = (long) i3;

        r6 = virtualinvoke $r9.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l4);

        virtualinvoke r6.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r1);

        return r6;
    }

    private void startHoursToMinutesAnimation()
    {
        android.widget.RadialTimePickerView r0;
        java.util.ArrayList $r1, $r4, $r10, $r16, $r20, $r25, $r34, $r36, $r41, $r49, $r56, $r59;
        int $i0;
        android.animation.AnimatorSet $r2, $r3, $r5, $r6, $r7, $r8;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        android.widget.RadialTimePickerView$InvalidateUpdateListener $r9, $r14, $r18, $r27, $r30, $r35, $r37, $r44, $r54, $r57;
        android.animation.ObjectAnimator $r11, $r15, $r22, $r26, $r32, $r39, $r40, $r48, $r50, $r60;
        android.widget.RadialTimePickerView$IntHolder[] $r12, $r19, $r23, $r29, $r38, $r45, $r52, $r53;
        android.widget.RadialTimePickerView$IntHolder $r13, $r21, $r28, $r33, $r42, $r43, $r55, $r58;
        android.widget.RadialTimePickerView$IntHolder[][] $r17, $r24, $r31, $r46, $r47, $r51;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r10 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r9 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $f1 = r0.<android.widget.RadialTimePickerView: float mTransitionMidRadiusMultiplier>;

        $f0 = r0.<android.widget.RadialTimePickerView: float mTransitionEndRadiusMultiplier>;

        $r11 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusDisappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView$InvalidateUpdateListener,float,float)>(r0, "animationRadiusMultiplierHours", $r9, $f1, $f0);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r16 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r12 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r13 = $r12[0];

        $r14 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r15 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r13, 255, 0, $r14);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r20 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r17 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r19 = $r17[0];

        $r21 = $r19[0];

        $r18 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r22 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r21, 60, 0, $r18);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        $r25 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r24 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r23 = $r24[0];

        $r28 = $r23[1];

        $r27 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r26 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r28, 255, 0, $r27);

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        $r34 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r31 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r29 = $r31[0];

        $r33 = $r29[2];

        $r30 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r32 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r33, 60, 0, $r30);

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        $r36 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r35 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $f3 = r0.<android.widget.RadialTimePickerView: float mTransitionMidRadiusMultiplier>;

        $f2 = r0.<android.widget.RadialTimePickerView: float mTransitionEndRadiusMultiplier>;

        $r39 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusReappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView$InvalidateUpdateListener,float,float)>(r0, "animationRadiusMultiplierMinutes", $r35, $f3, $f2);

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        $r41 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r38 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r42 = $r38[1];

        $r37 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r40 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r42, 0, 255, $r37);

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

        $r49 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r46 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r45 = $r46[1];

        $r43 = $r45[0];

        $r44 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r48 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r43, 0, 60, $r44);

        virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);

        $r56 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r47 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r53 = $r47[1];

        $r55 = $r53[1];

        $r54 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r50 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r55, 0, 255, $r54);

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

        $r59 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        $r51 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r52 = $r51[1];

        $r58 = $r52[2];

        $r57 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r60 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r58, 0, 60, $r57);

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>($r60);

     label1:
        $r2 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        if $r2 == null goto label2;

        $r7 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        $z0 = virtualinvoke $r7.<android.animation.AnimatorSet: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        virtualinvoke $r8.<android.animation.AnimatorSet: void end()>();

     label2:
        $r3 = new android.animation.AnimatorSet;

        specialinvoke $r3.<android.animation.AnimatorSet: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition> = $r3;

        $r5 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        $r4 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mHoursToMinutesAnims>;

        virtualinvoke $r5.<android.animation.AnimatorSet: void playTogether(java.util.Collection)>($r4);

        $r6 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        virtualinvoke $r6.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private void startMinutesToHoursAnimation()
    {
        android.widget.RadialTimePickerView r0;
        java.util.ArrayList $r1, $r4, $r10, $r16, $r20, $r25, $r34, $r36, $r41, $r49, $r56, $r59;
        int $i0;
        android.animation.AnimatorSet $r2, $r3, $r5, $r6, $r7, $r8;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        android.widget.RadialTimePickerView$InvalidateUpdateListener $r9, $r14, $r18, $r27, $r30, $r35, $r37, $r44, $r54, $r57;
        android.animation.ObjectAnimator $r11, $r15, $r22, $r26, $r32, $r39, $r40, $r48, $r50, $r60;
        android.widget.RadialTimePickerView$IntHolder[] $r12, $r19, $r23, $r29, $r38, $r45, $r52, $r53;
        android.widget.RadialTimePickerView$IntHolder $r13, $r21, $r28, $r33, $r42, $r43, $r55, $r58;
        android.widget.RadialTimePickerView$IntHolder[][] $r17, $r24, $r31, $r46, $r47, $r51;

        r0 := @this: android.widget.RadialTimePickerView;

        $r1 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r10 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r9 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $f1 = r0.<android.widget.RadialTimePickerView: float mTransitionMidRadiusMultiplier>;

        $f0 = r0.<android.widget.RadialTimePickerView: float mTransitionEndRadiusMultiplier>;

        $r11 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusDisappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView$InvalidateUpdateListener,float,float)>(r0, "animationRadiusMultiplierMinutes", $r9, $f1, $f0);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r16 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r12 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r13 = $r12[1];

        $r14 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r15 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r13, 255, 0, $r14);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r20 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r17 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r19 = $r17[1];

        $r21 = $r19[0];

        $r18 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r22 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r21, 60, 0, $r18);

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        $r25 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r24 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r23 = $r24[1];

        $r28 = $r23[1];

        $r27 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r26 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r28, 255, 0, $r27);

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        $r34 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r31 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r29 = $r31[1];

        $r33 = $r29[2];

        $r30 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r32 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeOutAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r33, 60, 0, $r30);

        virtualinvoke $r34.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        $r36 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r35 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $f3 = r0.<android.widget.RadialTimePickerView: float mTransitionMidRadiusMultiplier>;

        $f2 = r0.<android.widget.RadialTimePickerView: float mTransitionEndRadiusMultiplier>;

        $r39 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getRadiusReappearAnimator(java.lang.Object,java.lang.String,android.widget.RadialTimePickerView$InvalidateUpdateListener,float,float)>(r0, "animationRadiusMultiplierHours", $r35, $f3, $f2);

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        $r41 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r38 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[] mAlpha>;

        $r42 = $r38[0];

        $r37 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r40 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r42, 0, 255, $r37);

        virtualinvoke $r41.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

        $r49 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r46 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r45 = $r46[0];

        $r43 = $r45[0];

        $r44 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r48 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r43, 0, 60, $r44);

        virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);

        $r56 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r47 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r53 = $r47[0];

        $r55 = $r53[1];

        $r54 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r50 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r55, 0, 255, $r54);

        virtualinvoke $r56.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

        $r59 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        $r51 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$IntHolder[][] mAlphaSelector>;

        $r52 = $r51[0];

        $r58 = $r52[2];

        $r57 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$InvalidateUpdateListener mInvalidateUpdateListener>;

        $r60 = staticinvoke <android.widget.RadialTimePickerView: android.animation.ObjectAnimator getFadeInAnimator(android.widget.RadialTimePickerView$IntHolder,int,int,android.widget.RadialTimePickerView$InvalidateUpdateListener)>($r58, 0, 60, $r57);

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>($r60);

     label1:
        $r2 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        if $r2 == null goto label2;

        $r7 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        $z0 = virtualinvoke $r7.<android.animation.AnimatorSet: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        virtualinvoke $r8.<android.animation.AnimatorSet: void end()>();

     label2:
        $r3 = new android.animation.AnimatorSet;

        specialinvoke $r3.<android.animation.AnimatorSet: void <init>()>();

        r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition> = $r3;

        $r5 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        $r4 = r0.<android.widget.RadialTimePickerView: java.util.ArrayList mMinuteToHoursAnims>;

        virtualinvoke $r5.<android.animation.AnimatorSet: void playTogether(java.util.Collection)>($r4);

        $r6 = r0.<android.widget.RadialTimePickerView: android.animation.AnimatorSet mTransition>;

        virtualinvoke $r6.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private int getDegreesFromXY(float, float)
    {
        android.widget.RadialTimePickerView r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i13, $i14, $i15, $i17, $i18, $i22, i23, i24, i25;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        float[] $r1, $r2, $r3, $r4, $r5;
        byte $b7, $b10, $b12, $b16, $b19, $b20, $b21;

        r0 := @this: android.widget.RadialTimePickerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i3 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f3 = (float) $i3;

        $f6 = f1 - $f3;

        $i4 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f4 = (float) $i4;

        $f5 = f1 - $f4;

        $f11 = $f6 * $f5;

        $i5 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f7 = (float) $i5;

        $f9 = f0 - $f7;

        $i6 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f8 = (float) $i6;

        $f10 = f0 - $f8;

        $f12 = $f9 * $f10;

        $f13 = $f11 + $f12;

        $d1 = (double) $f13;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        $r1 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f14 = $r1[0];

        $d2 = (double) $f14;

        $b7 = d0 cmpl $d2;

        if $b7 <= 0 goto label01;

        return -1;

     label01:
        $z1 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z1 == 0 goto label04;

        $z5 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z5 == 0 goto label04;

        $i18 = r0.<android.widget.RadialTimePickerView: int mMinHypotenuseForInnerNumber>;

        $d10 = (double) $i18;

        $b19 = d0 cmpl $d10;

        if $b19 < 0 goto label02;

        $i22 = r0.<android.widget.RadialTimePickerView: int mHalfwayHypotenusePoint>;

        $d12 = (double) $i22;

        $b20 = d0 cmpg $d12;

        if $b20 > 0 goto label02;

        r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle> = 1;

        goto label07;

     label02:
        $i15 = r0.<android.widget.RadialTimePickerView: int mMaxHypotenuseForOuterNumber>;

        $d9 = (double) $i15;

        $b16 = d0 cmpg $d9;

        if $b16 > 0 goto label03;

        $i17 = r0.<android.widget.RadialTimePickerView: int mHalfwayHypotenusePoint>;

        $d11 = (double) $i17;

        $b21 = d0 cmpl $d11;

        if $b21 < 0 goto label03;

        r0.<android.widget.RadialTimePickerView: boolean mIsOnInnerCircle> = 0;

        goto label07;

     label03:
        return -1;

     label04:
        $z2 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z2 == 0 goto label05;

        $i13 = 0;

        goto label06;

     label05:
        $i13 = 1;

     label06:
        i0 = $i13;

        $r3 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f16 = $r3[i0];

        $r2 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f15 = $r2[i0];

        f2 = $f16 * $f15;

        $d5 = (double) f2;

        $d3 = d0 - $d5;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        i1 = (int) $d4;

        $r4 = r0.<android.widget.RadialTimePickerView: float[] mCircleRadius>;

        $f20 = $r4[i0];

        $r5 = r0.<android.widget.RadialTimePickerView: float[] mNumbersRadiusMultiplier>;

        $f17 = $r5[i0];

        $f18 = 1.0F - $f17;

        $f21 = $f20 * $f18;

        i2 = (int) $f21;

        if i1 <= i2 goto label07;

        return -1;

     label07:
        $i8 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f19 = (float) $i8;

        $f22 = f1 - $f19;

        f25 = staticinvoke <java.lang.Math: float abs(float)>($f22);

        $d7 = (double) f25;

        $d6 = $d7 / d0;

        $d8 = staticinvoke <java.lang.Math: double asin(double)>($d6);

        d13 = staticinvoke <java.lang.Math: double toDegrees(double)>($d8);

        $i9 = r0.<android.widget.RadialTimePickerView: int mXCenter>;

        $f23 = (float) $i9;

        $b12 = f0 cmpl $f23;

        if $b12 <= 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z6 = $z3;

        $i11 = r0.<android.widget.RadialTimePickerView: int mYCenter>;

        $f24 = (float) $i11;

        $b10 = f1 cmpg $f24;

        if $b10 >= 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        z0 = $z4;

        if z6 == 0 goto label12;

        if z0 == 0 goto label12;

        d14 = 90.0 - d13;

        i23 = (int) d14;

        return i23;

     label12:
        if z6 == 0 goto label13;

        if z0 != 0 goto label13;

        d15 = 90.0 + d13;

        i24 = (int) d15;

        return i24;

     label13:
        if z6 != 0 goto label14;

        if z0 != 0 goto label14;

        d16 = 270.0 - d13;

        i25 = (int) d16;

        return i25;

     label14:
        if z6 != 0 goto label15;

        if z0 == 0 goto label15;

        d13 = 270.0 + d13;

     label15:
        $i14 = (int) d13;

        return $i14;
    }

    private int getIsTouchingAmOrPm(float, float)
    {
        android.widget.RadialTimePickerView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        boolean z0;
        int i0, i1, i2, $i3, $i5;
        double $d0, $d1, $d2, $d3;
        byte $b4, $b6;

        r0 := @this: android.widget.RadialTimePickerView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 = virtualinvoke r0.<android.widget.RadialTimePickerView: boolean isLayoutRtl()>();

        $f2 = r0.<android.widget.RadialTimePickerView: float mAmPmYCenter>;

        $f5 = f1 - $f2;

        $f3 = r0.<android.widget.RadialTimePickerView: float mAmPmYCenter>;

        $f4 = f1 - $f3;

        $f6 = $f5 * $f4;

        i0 = (int) $f6;

        $f7 = r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter>;

        $f11 = f0 - $f7;

        $f8 = r0.<android.widget.RadialTimePickerView: float mLeftIndicatorXCenter>;

        $f9 = f0 - $f8;

        $f13 = $f11 * $f9;

        $f10 = (float) i0;

        $f12 = $f13 + $f10;

        $d1 = (double) $f12;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        i1 = (int) $d0;

        $i3 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        if i1 > $i3 goto label3;

        if z0 == 0 goto label1;

        $b4 = 1;

        goto label2;

     label1:
        $b4 = 0;

     label2:
        return $b4;

     label3:
        $f14 = r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter>;

        $f18 = f0 - $f14;

        $f16 = r0.<android.widget.RadialTimePickerView: float mRightIndicatorXCenter>;

        $f15 = f0 - $f16;

        $f20 = $f18 * $f15;

        $f17 = (float) i0;

        $f19 = $f20 + $f17;

        $d3 = (double) $f19;

        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        i2 = (int) $d2;

        $i5 = r0.<android.widget.RadialTimePickerView: int mAmPmCircleRadius>;

        if i2 > $i5 goto label6;

        if z0 == 0 goto label4;

        $b6 = 0;

        goto label5;

     label4:
        $b6 = 1;

     label5:
        return $b6;

     label6:
        return -1;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        android.widget.RadialTimePickerView r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        float f0, f1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8;
        int[] $r3, $r7, $r8, $r10, $r13, $r14;
        android.widget.RadialTimePickerView$OnValueSelectedListener $r4, $r5, $r6, $r9, $r11, $r12, $r15, $r16;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mInputEnabled>;

        if $z1 != 0 goto label01;

        return 1;

     label01:
        f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        z0 = 0;

        $i2 = virtualinvoke r2.<android.view.MotionEvent: int getAction()>();

        tableswitch($i2)
        {
            case 0: goto label02;
            case 1: goto label11;
            case 2: goto label02;
            default: goto label23;
        };

     label02:
        $i3 = specialinvoke r0.<android.widget.RadialTimePickerView: int getIsTouchingAmOrPm(float,float)>(f0, f1);

        r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed> = $i3;

        $i4 = r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed>;

        if $i4 == -1 goto label03;

        z0 = 1;

        goto label10;

     label03:
        i0 = specialinvoke r0.<android.widget.RadialTimePickerView: int getDegreesFromXY(float,float)>(f0, f1);

        if i0 == -1 goto label10;

        $z2 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z2 == 0 goto label04;

        $i5 = staticinvoke <android.widget.RadialTimePickerView: int snapOnly30s(int,int)>(i0, 0);

        goto label05;

     label04:
        $i5 = staticinvoke <android.widget.RadialTimePickerView: int snapPrefer30s(int)>(i0);

     label05:
        i1 = $i5 % 360;

        $z3 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z3 == 0 goto label06;

        $r8 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r8[0] = i1;

        $r7 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r7[2] = i1;

        goto label07;

     label06:
        $r3 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r3[1] = i1;

     label07:
        virtualinvoke r0.<android.widget.RadialTimePickerView: boolean performHapticFeedback(int)>(4);

        $r4 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        if $r4 == null goto label09;

        $z5 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z5 == 0 goto label08;

        $r6 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        $i7 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        interfaceinvoke $r6.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(0, $i7, 0);

        goto label09;

     label08:
        $r5 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        $i6 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        interfaceinvoke $r5.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(1, $i6, 0);

     label09:
        z0 = 1;

     label10:
        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return z0;

     label11:
        $i8 = specialinvoke r0.<android.widget.RadialTimePickerView: int getIsTouchingAmOrPm(float,float)>(f0, f1);

        r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed> = $i8;

        $i10 = r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed>;

        if $i10 == -1 goto label14;

        $i13 = r0.<android.widget.RadialTimePickerView: int mAmOrPm>;

        $i14 = r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed>;

        if $i13 == $i14 goto label12;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void swapAmPm()>();

     label12:
        r0.<android.widget.RadialTimePickerView: int mAmOrPmPressed> = -1;

        $r15 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        if $r15 == null goto label13;

        $r16 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        $i15 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        interfaceinvoke $r16.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(3, $i15, 1);

     label13:
        z0 = 1;

        goto label21;

     label14:
        i16 = specialinvoke r0.<android.widget.RadialTimePickerView: int getDegreesFromXY(float,float)>(f0, f1);

        if i16 == -1 goto label21;

        $z6 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z6 == 0 goto label15;

        $i9 = staticinvoke <android.widget.RadialTimePickerView: int snapOnly30s(int,int)>(i16, 0);

        goto label16;

     label15:
        $i9 = staticinvoke <android.widget.RadialTimePickerView: int snapPrefer30s(int)>(i16);

     label16:
        i17 = $i9 % 360;

        $z8 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z8 == 0 goto label17;

        $r13 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r13[0] = i17;

        $r14 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r14[2] = i17;

        goto label18;

     label17:
        $r10 = r0.<android.widget.RadialTimePickerView: int[] mSelectionDegrees>;

        $r10[1] = i17;

     label18:
        $r9 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        if $r9 == null goto label20;

        $z7 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z7 == 0 goto label19;

        $r11 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        $i12 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        interfaceinvoke $r11.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(0, $i12, 1);

        goto label20;

     label19:
        $r12 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        $i11 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        interfaceinvoke $r12.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(1, $i11, 1);

     label20:
        z0 = 1;

     label21:
        if z0 == 0 goto label22;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

     label22:
        return z0;

     label23:
        return 0;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.RadialTimePickerView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.RadialTimePickerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.text.format.Time r2, $r5;
        long l0;
        short s1;
        java.lang.String r3;
        int $i2, $i3, $i4;
        boolean $z0, $z1;
        java.util.List $r4, $r7;
        android.content.Context $r6;

        r0 := @this: android.widget.RadialTimePickerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i2 != 32 goto label2;

        $r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = new android.text.format.Time;

        specialinvoke $r5.<android.text.format.Time: void <init>()>();

        r2 = $r5;

        $i3 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        r2.<android.text.format.Time: int hour> = $i3;

        $i4 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

        r2.<android.text.format.Time: int minute> = $i4;

        l0 = virtualinvoke r2.<android.text.format.Time: long normalize(boolean)>(1);

        s1 = 1;

        $z1 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z1 == 0 goto label1;

        s1 = s1 | 128;

     label1:
        $r6 = virtualinvoke r0.<android.widget.RadialTimePickerView: android.content.Context getContext()>();

        r3 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r6, l0, s1);

        $r7 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

        return 1;

     label2:
        $z0 = specialinvoke r0.<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.RadialTimePickerView r0;
        int i0, i2, $i4, i6, i7, i8;
        android.os.Bundle r1;
        byte b1, b3, b5, b9;
        boolean $z3, $z4, $z5, $z6, $z7;
        android.widget.RadialTimePickerView$OnValueSelectedListener $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.RadialTimePickerView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z3 = specialinvoke r0.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        if $z3 == 0 goto label01;

        return 1;

     label01:
        b1 = 0;

        if i0 != 4096 goto label02;

        b1 = 1;

        goto label03;

     label02:
        if i0 != 8192 goto label03;

        b1 = -1;

     label03:
        if b1 == 0 goto label13;

        $z4 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z4 == 0 goto label04;

        b5 = 30;

        $i4 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentHour()>();

        i6 = $i4 % 12;

        goto label05;

     label04:
        b5 = 6;

        i6 = virtualinvoke r0.<android.widget.RadialTimePickerView: int getCurrentMinute()>();

     label05:
        i2 = i6 * b5;

        i7 = staticinvoke <android.widget.RadialTimePickerView: int snapOnly30s(int,int)>(i2, b1);

        i8 = i7 / b5;

        b3 = 0;

        $z5 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z5 == 0 goto label07;

        $z7 = r0.<android.widget.RadialTimePickerView: boolean mIs24HourMode>;

        if $z7 == 0 goto label06;

        b9 = 23;

        goto label08;

     label06:
        b9 = 12;

        b3 = 1;

        goto label08;

     label07:
        b9 = 55;

     label08:
        if i8 <= b9 goto label09;

        i8 = b3;

        goto label10;

     label09:
        if i8 >= b3 goto label10;

        i8 = b9;

     label10:
        $z6 = r0.<android.widget.RadialTimePickerView: boolean mShowHours>;

        if $z6 == 0 goto label11;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentHour(int)>(i8);

        $r3 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        if $r3 == null goto label12;

        $r5 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        interfaceinvoke $r5.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(0, i8, 0);

        goto label12;

     label11:
        virtualinvoke r0.<android.widget.RadialTimePickerView: void setCurrentMinute(int)>(i8);

        $r2 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        if $r2 == null goto label12;

        $r4 = r0.<android.widget.RadialTimePickerView: android.widget.RadialTimePickerView$OnValueSelectedListener mListener>;

        interfaceinvoke $r4.<android.widget.RadialTimePickerView$OnValueSelectedListener: void onValueSelected(int,int,boolean)>(1, i8, 0);

     label12:
        return 1;

     label13:
        return 0;
    }

    public void setInputEnabled(boolean)
    {
        android.widget.RadialTimePickerView r0;
        boolean z0;

        r0 := @this: android.widget.RadialTimePickerView;

        z0 := @parameter0: boolean;

        r0.<android.widget.RadialTimePickerView: boolean mInputEnabled> = z0;

        virtualinvoke r0.<android.widget.RadialTimePickerView: void invalidate()>();

        return;
    }

    static void <clinit>()
    {
        double $d0;
        float $f0, $f1;
        int[] $r0, $r1, $r2, $r3, $r4;

        <android.widget.RadialTimePickerView: int CENTER_RADIUS> = 2;

        <android.widget.RadialTimePickerView: int DEGREES_FOR_ONE_MINUTE> = 6;

        <android.widget.RadialTimePickerView: int DEGREES_FOR_ONE_HOUR> = 30;

        <android.widget.RadialTimePickerView: float SINE_30_DEGREES> = 0.5F;

        <android.widget.RadialTimePickerView: int ALPHA_AMPM_PRESSED> = 255;

        <android.widget.RadialTimePickerView: int ALPHA_AMPM_SELECTED> = 60;

        <android.widget.RadialTimePickerView: int ALPHA_SELECTOR> = 60;

        <android.widget.RadialTimePickerView: int ALPHA_TRANSPARENT> = 0;

        <android.widget.RadialTimePickerView: int ALPHA_OPAQUE> = 255;

        <android.widget.RadialTimePickerView: int PM> = 1;

        <android.widget.RadialTimePickerView: int AM> = 0;

        <android.widget.RadialTimePickerView: int SELECTOR_LINE> = 2;

        <android.widget.RadialTimePickerView: int SELECTOR_DOT> = 1;

        <android.widget.RadialTimePickerView: int SELECTOR_CIRCLE> = 0;

        <android.widget.RadialTimePickerView: int AMPM> = 3;

        <android.widget.RadialTimePickerView: int HOURS_INNER> = 2;

        <android.widget.RadialTimePickerView: int MINUTES> = 1;

        <android.widget.RadialTimePickerView: int HOURS> = 0;

        <android.widget.RadialTimePickerView: int DEBUG_STROKE_WIDTH> = 2;

        <android.widget.RadialTimePickerView: int DEBUG_TEXT_COLOR> = 1627324416;

        <android.widget.RadialTimePickerView: int DEBUG_COLOR> = 553582592;

        <android.widget.RadialTimePickerView: boolean DEBUG> = 0;

        <android.widget.RadialTimePickerView: java.lang.String TAG> = "ClockView";

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(3.0);

        $f0 = (float) $d0;

        $f1 = $f0 * 0.5F;

        <android.widget.RadialTimePickerView: float COSINE_30_DEGREES> = $f1;

        $r0 = newarray (int)[12];

        $r0[0] = 12;

        $r0[1] = 1;

        $r0[2] = 2;

        $r0[3] = 3;

        $r0[4] = 4;

        $r0[5] = 5;

        $r0[6] = 6;

        $r0[7] = 7;

        $r0[8] = 8;

        $r0[9] = 9;

        $r0[10] = 10;

        $r0[11] = 11;

        <android.widget.RadialTimePickerView: int[] HOURS_NUMBERS> = $r0;

        $r1 = newarray (int)[12];

        $r1[0] = 0;

        $r1[1] = 13;

        $r1[2] = 14;

        $r1[3] = 15;

        $r1[4] = 16;

        $r1[5] = 17;

        $r1[6] = 18;

        $r1[7] = 19;

        $r1[8] = 20;

        $r1[9] = 21;

        $r1[10] = 22;

        $r1[11] = 23;

        <android.widget.RadialTimePickerView: int[] HOURS_NUMBERS_24> = $r1;

        $r2 = newarray (int)[12];

        $r2[0] = 0;

        $r2[1] = 5;

        $r2[2] = 10;

        $r2[3] = 15;

        $r2[4] = 20;

        $r2[5] = 25;

        $r2[6] = 30;

        $r2[7] = 35;

        $r2[8] = 40;

        $r2[9] = 45;

        $r2[10] = 50;

        $r2[11] = 55;

        <android.widget.RadialTimePickerView: int[] MINUTES_NUMBERS> = $r2;

        $r3 = newarray (int)[1];

        $r3[0] = 16842913;

        <android.widget.RadialTimePickerView: int[] STATE_SET_SELECTED> = $r3;

        $r4 = newarray (int)[361];

        <android.widget.RadialTimePickerView: int[] sSnapPrefer30sMap> = $r4;

        staticinvoke <android.widget.RadialTimePickerView: void preparePrefer30sMap()>();

        return;
    }
}
