public final class android.util.Range extends java.lang.Object
{
    private final java.lang.Comparable mLower;
    private final java.lang.Comparable mUpper;

    public void <init>(java.lang.Comparable, java.lang.Comparable)
    {
        android.util.Range r0;
        java.lang.Comparable r1, r2, $r4, $r6;
        java.lang.Object $r3, $r5;
        int $i0;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "lower must not be null");

        $r4 = (java.lang.Comparable) $r3;

        r0.<android.util.Range: java.lang.Comparable mLower> = $r4;

        $r5 = staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "upper must not be null");

        $r6 = (java.lang.Comparable) $r5;

        r0.<android.util.Range: java.lang.Comparable mUpper> = $r6;

        $i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        if $i0 <= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lower must be less than or equal to upper");

        throw $r7;

     label1:
        return;
    }

    public static android.util.Range create(java.lang.Comparable, java.lang.Comparable)
    {
        java.lang.Comparable r0, r1;
        android.util.Range $r2;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $r2 = new android.util.Range;

        specialinvoke $r2.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>(r0, r1);

        return $r2;
    }

    public java.lang.Comparable getLower()
    {
        android.util.Range r0;
        java.lang.Comparable $r1;

        r0 := @this: android.util.Range;

        $r1 = r0.<android.util.Range: java.lang.Comparable mLower>;

        return $r1;
    }

    public java.lang.Comparable getUpper()
    {
        android.util.Range r0;
        java.lang.Comparable $r1;

        r0 := @this: android.util.Range;

        $r1 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        return $r1;
    }

    public boolean contains(java.lang.Comparable)
    {
        android.util.Range r0;
        java.lang.Comparable r1, $r3, $r4;
        boolean z0, z1, $z2, $z3, $z4;
        int $i0, $i1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "value must not be null");

        $r3 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        if $i0 < 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r4 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $i1 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i1 > 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

        if z0 == 0 goto label5;

        if z1 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public boolean contains(android.util.Range)
    {
        android.util.Range r0, r1;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.Comparable $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: android.util.Range;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "value must not be null");

        $r4 = r1.<android.util.Range: java.lang.Comparable mLower>;

        $r3 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        if $i0 < 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r6 = r1.<android.util.Range: java.lang.Comparable mUpper>;

        $r5 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $i1 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i1 > 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

        if z0 == 0 goto label5;

        if z1 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.Range r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Comparable $r3, $r4, $r5, $r6;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof android.util.Range;

        if $z0 == 0 goto label5;

        r2 = (android.util.Range) r1;

        $r4 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $r3 = r2.<android.util.Range: java.lang.Comparable mLower>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $r5 = r2.<android.util.Range: java.lang.Comparable mUpper>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        return 0;
    }

    public java.lang.Comparable clamp(java.lang.Comparable)
    {
        android.util.Range r0;
        java.lang.Comparable r1, $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "value must not be null");

        $r3 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        if $i0 >= 0 goto label1;

        $r6 = r0.<android.util.Range: java.lang.Comparable mLower>;

        return $r6;

     label1:
        $r4 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $i1 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i1 <= 0 goto label2;

        $r5 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        return $r5;

     label2:
        return r1;
    }

    public android.util.Range intersect(android.util.Range)
    {
        android.util.Range r0, r1, $r9;
        int i0, i1;
        java.lang.Comparable $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.util.Range;

        r1 := @parameter0: android.util.Range;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "range must not be null");

        $r4 = r1.<android.util.Range: java.lang.Comparable mLower>;

        $r3 = r0.<android.util.Range: java.lang.Comparable mLower>;

        i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        $r6 = r1.<android.util.Range: java.lang.Comparable mUpper>;

        $r5 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        i1 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if i0 > 0 goto label1;

        if i1 < 0 goto label1;

        return r0;

     label1:
        if i0 < 0 goto label2;

        if i1 > 0 goto label2;

        return r1;

     label2:
        if i0 > 0 goto label3;

        $r8 = r0.<android.util.Range: java.lang.Comparable mLower>;

        goto label4;

     label3:
        $r8 = r1.<android.util.Range: java.lang.Comparable mLower>;

     label4:
        if i1 < 0 goto label5;

        $r7 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        goto label6;

     label5:
        $r7 = r1.<android.util.Range: java.lang.Comparable mUpper>;

     label6:
        $r9 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r8, $r7);

        return $r9;
    }

    public android.util.Range intersect(java.lang.Comparable, java.lang.Comparable)
    {
        android.util.Range r0, $r7;
        java.lang.Comparable r1, r2, $r5, $r6, $r8, $r9;
        int i0, i1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "lower must not be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "upper must not be null");

        $r5 = r0.<android.util.Range: java.lang.Comparable mLower>;

        i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        $r6 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        i1 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if i0 > 0 goto label1;

        if i1 < 0 goto label1;

        return r0;

     label1:
        if i0 > 0 goto label2;

        $r9 = r0.<android.util.Range: java.lang.Comparable mLower>;

        goto label3;

     label2:
        $r9 = r1;

     label3:
        if i1 < 0 goto label4;

        $r8 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        goto label5;

     label4:
        $r8 = r2;

     label5:
        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r9, $r8);

        return $r7;
    }

    public android.util.Range extend(android.util.Range)
    {
        android.util.Range r0, r1, $r9;
        int i0, i1;
        java.lang.Comparable $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.util.Range;

        r1 := @parameter0: android.util.Range;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "range must not be null");

        $r4 = r1.<android.util.Range: java.lang.Comparable mLower>;

        $r3 = r0.<android.util.Range: java.lang.Comparable mLower>;

        i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        $r6 = r1.<android.util.Range: java.lang.Comparable mUpper>;

        $r5 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        i1 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if i0 > 0 goto label1;

        if i1 < 0 goto label1;

        return r1;

     label1:
        if i0 < 0 goto label2;

        if i1 > 0 goto label2;

        return r0;

     label2:
        if i0 < 0 goto label3;

        $r8 = r0.<android.util.Range: java.lang.Comparable mLower>;

        goto label4;

     label3:
        $r8 = r1.<android.util.Range: java.lang.Comparable mLower>;

     label4:
        if i1 > 0 goto label5;

        $r7 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        goto label6;

     label5:
        $r7 = r1.<android.util.Range: java.lang.Comparable mUpper>;

     label6:
        $r9 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r8, $r7);

        return $r9;
    }

    public android.util.Range extend(java.lang.Comparable, java.lang.Comparable)
    {
        android.util.Range r0, $r7;
        java.lang.Comparable r1, r2, $r5, $r6, $r8, $r9;
        int i0, i1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Comparable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "lower must not be null");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "upper must not be null");

        $r5 = r0.<android.util.Range: java.lang.Comparable mLower>;

        i0 = interfaceinvoke r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        $r6 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        i1 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if i0 < 0 goto label1;

        if i1 > 0 goto label1;

        return r0;

     label1:
        if i0 < 0 goto label2;

        $r9 = r0.<android.util.Range: java.lang.Comparable mLower>;

        goto label3;

     label2:
        $r9 = r1;

     label3:
        if i1 > 0 goto label4;

        $r8 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        goto label5;

     label4:
        $r8 = r2;

     label5:
        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r9, $r8);

        return $r7;
    }

    public android.util.Range extend(java.lang.Comparable)
    {
        android.util.Range r0, $r3;
        java.lang.Comparable r1;

        r0 := @this: android.util.Range;

        r1 := @parameter0: java.lang.Comparable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "value must not be null");

        $r3 = virtualinvoke r0.<android.util.Range: android.util.Range extend(java.lang.Comparable,java.lang.Comparable)>(r1, r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        android.util.Range r0;
        java.lang.Object[] $r1;
        java.lang.Comparable $r2, $r3;
        java.lang.String $r4;

        r0 := @this: android.util.Range;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $r1[0] = $r2;

        $r3 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s, %s]", $r1);

        return $r4;
    }

    public int hashCode()
    {
        android.util.Range r0;
        java.lang.Comparable $r1, $r2;
        int $i0;

        r0 := @this: android.util.Range;

        $r2 = r0.<android.util.Range: java.lang.Comparable mLower>;

        $r1 = r0.<android.util.Range: java.lang.Comparable mUpper>;

        $i0 = staticinvoke <android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $i0;
    }
}
