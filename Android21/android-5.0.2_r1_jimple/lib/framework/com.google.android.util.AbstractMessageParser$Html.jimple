public class com.google.android.util.AbstractMessageParser$Html extends com.google.android.util.AbstractMessageParser$Token
{
    private java.lang.String html;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.google.android.util.AbstractMessageParser$Html r0;
        java.lang.String r1, r2;
        com.google.android.util.AbstractMessageParser$Token$Type $r3;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = <com.google.android.util.AbstractMessageParser$Token$Type: com.google.android.util.AbstractMessageParser$Token$Type HTML>;

        specialinvoke r0.<com.google.android.util.AbstractMessageParser$Token: void <init>(com.google.android.util.AbstractMessageParser$Token$Type,java.lang.String)>($r3, r1);

        r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html> = r2;

        return;
    }

    public boolean isHtml()
    {
        com.google.android.util.AbstractMessageParser$Html r0;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        return 1;
    }

    public java.lang.String toHtml(boolean)
    {
        com.google.android.util.AbstractMessageParser$Html r0;
        boolean z0;
        java.lang.String $r1, $r2;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html>;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        goto label2;

     label1:
        $r1 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html>;

     label2:
        return $r1;
    }

    public java.util.List getInfo()
    {
        com.google.android.util.AbstractMessageParser$Html r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void trimLeadingWhitespace()
    {
        com.google.android.util.AbstractMessageParser$Html r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        $r1 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String text>;

        $r2 = staticinvoke <com.google.android.util.AbstractMessageParser$Html: java.lang.String trimLeadingWhitespace(java.lang.String)>($r1);

        r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String text> = $r2;

        $r3 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html>;

        $r4 = staticinvoke <com.google.android.util.AbstractMessageParser$Html: java.lang.String trimLeadingWhitespace(java.lang.String)>($r3);

        r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html> = $r4;

        return;
    }

    public void trimTrailingWhitespace()
    {
        com.google.android.util.AbstractMessageParser$Html r0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @this: com.google.android.util.AbstractMessageParser$Html;

        $r1 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String text>;

        $r2 = staticinvoke <com.google.android.util.AbstractMessageParser$Html: java.lang.String trimTrailingWhitespace(java.lang.String)>($r1);

        r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String text> = $r2;

        $r3 = r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html>;

        $r4 = staticinvoke <com.google.android.util.AbstractMessageParser$Html: java.lang.String trimTrailingWhitespace(java.lang.String)>($r3);

        r0.<com.google.android.util.AbstractMessageParser$Html: java.lang.String html> = $r4;

        return;
    }

    private static java.lang.String trimLeadingWhitespace(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label2;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r1;
    }

    public static java.lang.String trimTrailingWhitespace(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i0 <= 0 goto label2;

        $i1 = i0 - 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        i0 = i0 + -1;

        goto label1;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }
}
