class com.android.server.net.DnsServerRepository extends java.lang.Object
{
    public static final int NUM_CURRENT_SERVERS;
    public static final int NUM_SERVERS;
    private java.util.Set mCurrentServers;
    public static final java.lang.String TAG;
    private java.util.ArrayList mAllServers;
    private java.util.HashMap mIndex;

    public void <init>()
    {
        com.android.server.net.DnsServerRepository r0;
        java.util.HashSet $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.server.net.DnsServerRepository;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.net.DnsServerRepository: java.util.Set mCurrentServers> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(12);

        r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(12);

        r0.<com.android.server.net.DnsServerRepository: java.util.HashMap mIndex> = $r3;

        return;
    }

    public synchronized void setDnsServersOn(android.net.LinkProperties)
    {
        com.android.server.net.DnsServerRepository r0;
        android.net.LinkProperties r1;
        java.util.Set $r2;

        r0 := @this: com.android.server.net.DnsServerRepository;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<com.android.server.net.DnsServerRepository: java.util.Set mCurrentServers>;

        virtualinvoke r1.<android.net.LinkProperties: void setDnsServers(java.util.Collection)>($r2);

        return;
    }

    public synchronized boolean addServers(long, java.lang.String[])
    {
        com.android.server.net.DnsServerRepository r0;
        long l0, l1, l2, $l5;
        java.lang.String[] r1, r2;
        int i3, i4;
        java.lang.String r3;
        java.net.InetAddress r4;
        boolean $z0, $z1;
        java.util.ArrayList $r6, $r8;
        com.android.server.net.DnsServerEntry $r7, r12;
        byte $b6;
        java.util.HashMap $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.android.server.net.DnsServerRepository;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String[];

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = 1000L * l0;

        l2 = l1 + $l5;

        r2 = r1;

        i3 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i3 goto label7;

        r3 = r2[i4];

     label2:
        r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>(r3);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        goto label6;

     label5:
        $z1 = specialinvoke r0.<com.android.server.net.DnsServerRepository: boolean updateExistingEntry(java.net.InetAddress,long)>(r4, l2);

        if $z1 != 0 goto label6;

        $b6 = l2 cmp l1;

        if $b6 <= 0 goto label6;

        $r7 = new com.android.server.net.DnsServerEntry;

        specialinvoke $r7.<com.android.server.net.DnsServerEntry: void <init>(java.net.InetAddress,long)>(r4, l2);

        r12 = $r7;

        $r8 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        $r10 = r0.<com.android.server.net.DnsServerRepository: java.util.HashMap mIndex>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r12);

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $r6 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r6);

        $z0 = specialinvoke r0.<com.android.server.net.DnsServerRepository: boolean updateCurrentServers()>();

        return $z0;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private synchronized boolean updateExistingEntry(java.net.InetAddress, long)
    {
        com.android.server.net.DnsServerRepository r0;
        java.net.InetAddress r1;
        long l0;
        com.android.server.net.DnsServerEntry r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.net.DnsServerRepository;

        r1 := @parameter0: java.net.InetAddress;

        l0 := @parameter1: long;

        $r3 = r0.<com.android.server.net.DnsServerRepository: java.util.HashMap mIndex>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.net.DnsServerEntry) $r4;

        if r2 == null goto label1;

        r2.<com.android.server.net.DnsServerEntry: long expiry> = l0;

        return 1;

     label1:
        return 0;
    }

    private synchronized boolean updateCurrentServers()
    {
        com.android.server.net.DnsServerRepository r0;
        long l0, $l4;
        boolean z0, $z1, $z2, $z3;
        int i1, $i2, $i3;
        com.android.server.net.DnsServerEntry r1, $r17, r19;
        java.util.ArrayList $r2, $r3, $r9, $r16;
        java.lang.Object $r4, $r8, $r15;
        java.util.Set $r5, $r7, $r14;
        java.net.InetAddress $r6, $r11, $r12;
        java.util.HashMap $r10;
        byte $b5;
        java.util.Iterator r18;

        r0 := @this: com.android.server.net.DnsServerRepository;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        z0 = 0;

        $r2 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        if i1 >= 12 goto label2;

        $r16 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r17 = (com.android.server.net.DnsServerEntry) $r15;

        $l4 = $r17.<com.android.server.net.DnsServerEntry: long expiry>;

        $b5 = $l4 cmp l0;

        if $b5 >= 0 goto label3;

     label2:
        $r9 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        r1 = (com.android.server.net.DnsServerEntry) $r8;

        $r10 = r0.<com.android.server.net.DnsServerRepository: java.util.HashMap mIndex>;

        $r11 = r1.<com.android.server.net.DnsServerEntry: java.net.InetAddress address>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r11);

        $r14 = r0.<com.android.server.net.DnsServerRepository: java.util.Set mCurrentServers>;

        $r12 = r1.<com.android.server.net.DnsServerEntry: java.net.InetAddress address>;

        $z3 = interfaceinvoke $r14.<java.util.Set: boolean remove(java.lang.Object)>($r12);

        z0 = z0 | $z3;

        i1 = i1 + -1;

        goto label1;

     label3:
        $r3 = r0.<com.android.server.net.DnsServerRepository: java.util.ArrayList mAllServers>;

        r18 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.server.net.DnsServerEntry) $r4;

        $r5 = r0.<com.android.server.net.DnsServerRepository: java.util.Set mCurrentServers>;

        $i3 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i3 >= 3 goto label5;

        $r7 = r0.<com.android.server.net.DnsServerRepository: java.util.Set mCurrentServers>;

        $r6 = r19.<com.android.server.net.DnsServerEntry: java.net.InetAddress address>;

        $z2 = interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r6);

        z0 = z0 | $z2;

        goto label4;

     label5:
        return z0;
    }

    public static void <clinit>()
    {
        <com.android.server.net.DnsServerRepository: java.lang.String TAG> = "DnsServerRepository";

        <com.android.server.net.DnsServerRepository: int NUM_SERVERS> = 12;

        <com.android.server.net.DnsServerRepository: int NUM_CURRENT_SERVERS> = 3;

        return;
    }
}
