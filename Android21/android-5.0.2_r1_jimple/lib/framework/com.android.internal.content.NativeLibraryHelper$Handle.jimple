public class com.android.internal.content.NativeLibraryHelper$Handle extends java.lang.Object implements java.io.Closeable
{
    private final dalvik.system.CloseGuard mGuard;
    private volatile boolean mClosed;
    final long[] apkHandles;
    final boolean multiArch;

    public static com.android.internal.content.NativeLibraryHelper$Handle create(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        android.content.pm.PackageParser$PackageLite r1;
        com.android.internal.content.NativeLibraryHelper$Handle $r2;
        android.content.pm.PackageParser$PackageParserException $r3, r9;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: java.io.File;

     label1:
        r1 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parsePackageLite(java.io.File,int)>(r0, 0);

        $r2 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(android.content.pm.PackageParser$PackageLite)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r9 = $r3;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse package: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r9);

        throw $r4;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label3;
    }

    public static com.android.internal.content.NativeLibraryHelper$Handle create(android.content.pm.PackageParser$Package) throws java.io.IOException
    {
        android.content.pm.PackageParser$Package r0;
        java.util.List $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1;
        com.android.internal.content.NativeLibraryHelper$Handle $r3;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageParser$Package;

        $r1 = virtualinvoke r0.<android.content.pm.PackageParser$Package: java.util.List getAllCodePaths()>();

        $r2 = r0.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(java.util.List,boolean)>($r1, $z0);

        return $r3;
    }

    public static com.android.internal.content.NativeLibraryHelper$Handle create(android.content.pm.PackageParser$PackageLite) throws java.io.IOException
    {
        android.content.pm.PackageParser$PackageLite r0;
        java.util.List $r1;
        boolean $z0;
        com.android.internal.content.NativeLibraryHelper$Handle $r2;

        r0 := @parameter0: android.content.pm.PackageParser$PackageLite;

        $r1 = virtualinvoke r0.<android.content.pm.PackageParser$PackageLite: java.util.List getAllCodePaths()>();

        $z0 = r0.<android.content.pm.PackageParser$PackageLite: boolean multiArch>;

        $r2 = staticinvoke <com.android.internal.content.NativeLibraryHelper$Handle: com.android.internal.content.NativeLibraryHelper$Handle create(java.util.List,boolean)>($r1, $z0);

        return $r2;
    }

    private static com.android.internal.content.NativeLibraryHelper$Handle create(java.util.List, boolean) throws java.io.IOException
    {
        java.util.List r0;
        boolean z0;
        int i0, i1, i2;
        long[] r1;
        java.lang.String r2, $r8;
        com.android.internal.content.NativeLibraryHelper$Handle $r3;
        java.lang.Object $r4;
        long $l3, $l4, $l6;
        byte $b5;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (long)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (java.lang.String) $r4;

        $l3 = staticinvoke <com.android.internal.content.NativeLibraryHelper: long access$000(java.lang.String)>(r2);

        r1[i1] = $l3;

        $l4 = r1[i1];

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label4;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $l6 = r1[i2];

        staticinvoke <com.android.internal.content.NativeLibraryHelper: void access$100(long)>($l6);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open APK: ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r3 = new com.android.internal.content.NativeLibraryHelper$Handle;

        specialinvoke $r3.<com.android.internal.content.NativeLibraryHelper$Handle: void <init>(long[],boolean)>(r1, z0);

        return $r3;
    }

    void <init>(long[], boolean)
    {
        com.android.internal.content.NativeLibraryHelper$Handle r0;
        long[] r1;
        boolean z0;
        dalvik.system.CloseGuard $r2, $r3;

        r0 := @this: com.android.internal.content.NativeLibraryHelper$Handle;

        r1 := @parameter0: long[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<com.android.internal.content.NativeLibraryHelper$Handle: dalvik.system.CloseGuard mGuard> = $r2;

        r0.<com.android.internal.content.NativeLibraryHelper$Handle: long[] apkHandles> = r1;

        r0.<com.android.internal.content.NativeLibraryHelper$Handle: boolean multiArch> = z0;

        $r3 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    public void close()
    {
        com.android.internal.content.NativeLibraryHelper$Handle r0;
        long[] r1;
        int i0, i1;
        long l2;
        dalvik.system.CloseGuard $r2;

        r0 := @this: com.android.internal.content.NativeLibraryHelper$Handle;

        r1 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: long[] apkHandles>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        l2 = r1[i1];

        staticinvoke <com.android.internal.content.NativeLibraryHelper: void access$100(long)>(l2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

        r0.<com.android.internal.content.NativeLibraryHelper$Handle: boolean mClosed> = 1;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.internal.content.NativeLibraryHelper$Handle r0;
        java.lang.Throwable r1, $r4;
        dalvik.system.CloseGuard $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.internal.content.NativeLibraryHelper$Handle;

        $r2 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: dalvik.system.CloseGuard mGuard>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label1:
        $z0 = r0.<com.android.internal.content.NativeLibraryHelper$Handle: boolean mClosed>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.content.NativeLibraryHelper$Handle: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
