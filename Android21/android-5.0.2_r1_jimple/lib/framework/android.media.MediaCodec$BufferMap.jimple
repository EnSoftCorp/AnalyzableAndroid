class android.media.MediaCodec$BufferMap extends java.lang.Object
{
    private final java.util.Map mMap;

    private void <init>()
    {
        android.media.MediaCodec$BufferMap r0;
        java.util.HashMap $r1;

        r0 := @this: android.media.MediaCodec$BufferMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap> = $r1;

        return;
    }

    public void remove(int)
    {
        android.media.MediaCodec$BufferMap r0;
        int i0;
        android.media.MediaCodec$BufferMap$CodecBuffer r1;
        java.util.Map $r2, $r5;
        java.lang.Integer $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: android.media.MediaCodec$BufferMap;

        i0 := @parameter0: int;

        $r2 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.media.MediaCodec$BufferMap$CodecBuffer) $r4;

        if r1 == null goto label1;

        virtualinvoke r1.<android.media.MediaCodec$BufferMap$CodecBuffer: void free()>();

        $r5 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

     label1:
        return;
    }

    public void put(int, java.nio.ByteBuffer)
    {
        android.media.MediaCodec$BufferMap r0;
        int i0;
        java.nio.ByteBuffer r1;
        android.media.MediaCodec$BufferMap$CodecBuffer r2, $r6;
        java.util.Map $r3, $r7;
        java.lang.Integer $r4, $r8;
        java.lang.Object $r5;

        r0 := @this: android.media.MediaCodec$BufferMap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.ByteBuffer;

        $r3 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.media.MediaCodec$BufferMap$CodecBuffer) $r5;

        if r2 != null goto label1;

        $r6 = new android.media.MediaCodec$BufferMap$CodecBuffer;

        specialinvoke $r6.<android.media.MediaCodec$BufferMap$CodecBuffer: void <init>(android.media.MediaCodec$1)>(null);

        r2 = $r6;

        $r7 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2);

     label1:
        virtualinvoke r2.<android.media.MediaCodec$BufferMap$CodecBuffer: void setByteBuffer(java.nio.ByteBuffer)>(r1);

        return;
    }

    public void put(int, android.media.Image)
    {
        android.media.MediaCodec$BufferMap r0;
        int i0;
        android.media.Image r1;
        android.media.MediaCodec$BufferMap$CodecBuffer r2, $r6;
        java.util.Map $r3, $r7;
        java.lang.Integer $r4, $r8;
        java.lang.Object $r5;

        r0 := @this: android.media.MediaCodec$BufferMap;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.Image;

        $r3 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.media.MediaCodec$BufferMap$CodecBuffer) $r5;

        if r2 != null goto label1;

        $r6 = new android.media.MediaCodec$BufferMap$CodecBuffer;

        specialinvoke $r6.<android.media.MediaCodec$BufferMap$CodecBuffer: void <init>(android.media.MediaCodec$1)>(null);

        r2 = $r6;

        $r7 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r2);

     label1:
        virtualinvoke r2.<android.media.MediaCodec$BufferMap$CodecBuffer: void setImage(android.media.Image)>(r1);

        return;
    }

    public void clear()
    {
        android.media.MediaCodec$BufferMap r0;
        java.util.Iterator r1;
        android.media.MediaCodec$BufferMap$CodecBuffer r2;
        java.util.Map $r3, $r5;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: android.media.MediaCodec$BufferMap;

        $r3 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.media.MediaCodec$BufferMap$CodecBuffer) $r6;

        virtualinvoke r2.<android.media.MediaCodec$BufferMap$CodecBuffer: void free()>();

        goto label1;

     label2:
        $r5 = r0.<android.media.MediaCodec$BufferMap: java.util.Map mMap>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        return;
    }

    void <init>(android.media.MediaCodec$1)
    {
        android.media.MediaCodec$BufferMap r0;
        android.media.MediaCodec$1 r1;

        r0 := @this: android.media.MediaCodec$BufferMap;

        r1 := @parameter0: android.media.MediaCodec$1;

        specialinvoke r0.<android.media.MediaCodec$BufferMap: void <init>()>();

        return;
    }
}
