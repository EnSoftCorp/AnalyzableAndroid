final class android.content.ContentProviderProxy extends java.lang.Object implements android.content.IContentProvider
{
    private android.os.IBinder mRemote;

    public void <init>(android.os.IBinder)
    {
        android.content.ContentProviderProxy r0;
        android.os.IBinder r1;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.content.ContentProviderProxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.content.ContentProviderProxy;

        $r1 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public android.database.Cursor query(java.lang.String, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.ICancellationSignal) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r4, r6, $r18, $r21;
        android.net.Uri r2;
        java.lang.String[] r3, r5;
        android.os.ICancellationSignal r7;
        android.database.BulkCursorToCursorAdaptor r8, $r12, r25;
        android.os.Parcel r9, r10;
        int i0, i1, $i2, i3, i4;
        java.lang.Throwable r11, $r23;
        android.database.IContentObserver $r13;
        android.os.IBinder $r14, $r15, $r19;
        java.lang.Object $r16;
        android.os.Parcelable$Creator $r17;
        android.os.RemoteException $r20, r26;
        java.lang.RuntimeException $r22, r27;
        android.database.BulkCursorDescriptor r24;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: android.os.ICancellationSignal;

        $r12 = new android.database.BulkCursorToCursorAdaptor;

        specialinvoke $r12.<android.database.BulkCursorToCursorAdaptor: void <init>()>();

        r8 = $r12;

        r9 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r10 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r9.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r9, 0);

        i0 = 0;

        if r3 == null goto label02;

        i0 = lengthof r3;

     label02:
        virtualinvoke r9.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label03:
        if i1 >= i0 goto label04;

        $r21 = r3[i1];

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>($r21);

        i1 = i1 + 1;

        goto label03;

     label04:
        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        if r5 == null goto label05;

        i3 = lengthof r5;

        goto label06;

     label05:
        i3 = 0;

     label06:
        virtualinvoke r9.<android.os.Parcel: void writeInt(int)>(i3);

        i4 = 0;

     label07:
        if i4 >= i3 goto label08;

        $r18 = r5[i4];

        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>($r18);

        i4 = i4 + 1;

        goto label07;

     label08:
        virtualinvoke r9.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r13 = virtualinvoke r8.<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>();

        $r15 = interfaceinvoke $r13.<android.database.IContentObserver: android.os.IBinder asBinder()>();

        virtualinvoke r9.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r15);

        if r7 == null goto label09;

        $r19 = interfaceinvoke r7.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

        goto label10;

     label09:
        $r19 = null;

     label10:
        virtualinvoke r9.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r19);

        $r14 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r14.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r9, r10, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r10);

        $i2 = virtualinvoke r10.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label11;

        $r17 = <android.database.BulkCursorDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r10);

        r24 = (android.database.BulkCursorDescriptor) $r16;

        virtualinvoke r8.<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>(r24);

        goto label12;

     label11:
        virtualinvoke r8.<android.database.BulkCursorToCursorAdaptor: void close()>();

        r8 = null;

     label12:
        r25 = r8;

     label13:
        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        virtualinvoke r10.<android.os.Parcel: void recycle()>();

        return r25;

     label14:
        $r20 := @caughtexception;

        r26 = $r20;

        virtualinvoke r8.<android.database.BulkCursorToCursorAdaptor: void close()>();

        throw r26;

     label15:
        $r22 := @caughtexception;

        r27 = $r22;

        virtualinvoke r8.<android.database.BulkCursorToCursorAdaptor: void close()>();

        throw r27;

     label16:
        $r23 := @caughtexception;

        r11 = $r23;

     label17:
        virtualinvoke r9.<android.os.Parcel: void recycle()>();

        virtualinvoke r10.<android.os.Parcel: void recycle()>();

        throw r11;

        catch android.os.RemoteException from label01 to label13 with label14;
        catch java.lang.RuntimeException from label01 to label13 with label15;
        catch java.lang.Throwable from label01 to label13 with label16;
        catch java.lang.Throwable from label14 to label17 with label16;
    }

    public java.lang.String getType(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.net.Uri r1;
        android.os.Parcel r2, r3;
        java.lang.String r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: android.net.Uri;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r3);

        r4 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

        r5 = r4;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.net.Uri insert(java.lang.String, android.net.Uri, android.content.ContentValues) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        android.net.Uri r2, r6, r7;
        android.content.ContentValues r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r8, $r12;
        android.os.IBinder $r9;
        android.os.Parcelable$Creator $r10;
        java.lang.Object $r11;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r3.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        $r9 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r5);

        $r10 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r6 = (android.net.Uri) $r11;

        r7 = r6;

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r7;

     label3:
        $r12 := @caughtexception;

        r8 = $r12;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int bulkInsert(java.lang.String, android.net.Uri, android.content.ContentValues[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.content.ContentValues[] r3;
        android.os.Parcel r4, r5;
        int i0, i1;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues[];

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        virtualinvoke r4.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r3, 0);

        $r7 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r4, r5, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r5);

        i0 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        i1 = i0;

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.util.ArrayList) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.os.Parcel r3, r4;
        java.util.Iterator r5;
        android.content.ContentProviderOperation r6;
        java.lang.Throwable r7, $r12;
        int $i0;
        boolean $z0;
        android.os.IBinder $r8;
        android.os.Parcelable$Creator $r9;
        java.lang.Object $r10;
        java.lang.Object[] $r11;
        android.content.ContentProviderResult[] r13, r14;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i0);

        r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.ContentProviderOperation) $r10;

        virtualinvoke r6.<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label2;

     label3:
        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>(r4);

        $r9 = <android.content.ContentProviderResult: android.os.Parcelable$Creator CREATOR>;

        $r11 = virtualinvoke r4.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r9);

        r13 = (android.content.ContentProviderResult[]) $r11;

        r14 = r13;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r14;

     label5:
        $r12 := @caughtexception;

        r7 = $r12;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r7;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int delete(java.lang.String, android.net.Uri, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        java.lang.String[] r4;
        android.os.Parcel r5, r6;
        int i0, i1;
        java.lang.Throwable r7, $r9;
        android.os.IBinder $r8;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r5.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r4);

        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r6);

        i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        i1 = i0;

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r9 := @caughtexception;

        r7 = $r9;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int update(java.lang.String, android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r4;
        android.net.Uri r2;
        android.content.ContentValues r3;
        java.lang.String[] r5;
        android.os.Parcel r6, r7;
        int i0, i1;
        java.lang.Throwable r8, $r10;
        android.os.IBinder $r9;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r6, 0);

        virtualinvoke r3.<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>(r6, 0);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        virtualinvoke r6.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r5);

        $r9 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r9.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r6, r7, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r7);

        i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        i1 = i0;

     label2:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r10 := @caughtexception;

        r8 = $r10;

     label4:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        throw r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        android.os.Parcel r5, r6;
        int i0;
        android.os.ParcelFileDescriptor r7, r8, $r12;
        java.lang.Throwable r9, $r13;
        android.os.IBinder $r10, $r11;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        if r4 == null goto label2;

        $r11 = interfaceinvoke r4.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r11 = null;

     label3:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r11);

        $r10 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r6);

        i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label4;

        $r12 = virtualinvoke r6.<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>();

        goto label5;

     label4:
        $r12 = null;

     label5:
        r7 = $r12;

        r8 = r7;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r8;

     label7:
        $r13 := @caughtexception;

        r9 = $r13;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        android.os.Parcel r5, r6;
        int i0;
        android.content.res.AssetFileDescriptor r7, r8, $r14;
        java.lang.Throwable r9, $r15;
        android.os.IBinder $r10, $r13;
        java.lang.Object $r11;
        android.os.Parcelable$Creator $r12;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r5, 0);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        if r4 == null goto label2;

        $r13 = interfaceinvoke r4.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r13 = null;

     label3:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r13);

        $r10 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r6);

        i0 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label4;

        $r12 = <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        $r14 = (android.content.res.AssetFileDescriptor) $r11;

        goto label5;

     label4:
        $r14 = null;

     label5:
        r7 = $r14;

        r8 = r7;

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r8;

     label7:
        $r15 := @caughtexception;

        r9 = $r15;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r2, r3;
        android.os.Bundle r4, r7, r8;
        android.os.Parcel r5, r6;
        java.lang.Throwable r9, $r11;
        android.os.IBinder $r10;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r5.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r5.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r4);

        $r10 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r5, r6, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r6);

        r7 = virtualinvoke r6.<android.os.Parcel: android.os.Bundle readBundle()>();

        r8 = r7;

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        return r8;

     label3:
        $r11 := @caughtexception;

        r9 = $r11;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        throw r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.String[] r5, r6;
        java.lang.Throwable r7, $r9;
        android.os.IBinder $r8;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r1.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        r5 = virtualinvoke r4.<android.os.Parcel: java.lang.String[] createStringArray()>();

        r6 = r5;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r6;

     label3:
        $r9 := @caughtexception;

        r7 = $r9;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.Bundle, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.Bundle r4;
        android.os.ICancellationSignal r5;
        android.os.Parcel r6, r7;
        int i0;
        android.content.res.AssetFileDescriptor r8, r9, $r13;
        java.lang.Throwable r10, $r15;
        android.os.IBinder $r11, $r16;
        android.os.Parcelable$Creator $r12;
        java.lang.Object $r14;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.ICancellationSignal;

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r7 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r6.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r6, 0);

        virtualinvoke r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        virtualinvoke r6.<android.os.Parcel: void writeBundle(android.os.Bundle)>(r4);

        if r5 == null goto label2;

        $r16 = interfaceinvoke r5.<android.os.ICancellationSignal: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r16 = null;

     label3:
        virtualinvoke r6.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r16);

        $r11 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r11.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r6, r7, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>(r7);

        i0 = virtualinvoke r7.<android.os.Parcel: int readInt()>();

        if i0 == 0 goto label4;

        $r12 = <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r12.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r7);

        $r13 = (android.content.res.AssetFileDescriptor) $r14;

        goto label5;

     label4:
        $r13 = null;

     label5:
        r8 = $r13;

        r9 = r8;

     label6:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        return r9;

     label7:
        $r15 := @caughtexception;

        r10 = $r15;

     label8:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r7.<android.os.Parcel: void recycle()>();

        throw r10;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.os.ICancellationSignal createCancellationSignal() throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        android.os.Parcel r1, r2;
        android.os.ICancellationSignal r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.content.ContentProviderProxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        $r6 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r1, r2, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r2);

        $r7 = virtualinvoke r2.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r3 = staticinvoke <android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>($r7);

        r4 = r3;

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.net.Uri canonicalize(java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        android.net.Uri r2, r5, r6;
        android.os.Parcel r3, r4;
        java.lang.Throwable r7, $r11;
        android.os.IBinder $r8;
        android.os.Parcelable$Creator $r9;
        java.lang.Object $r10;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        $r9 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r5 = (android.net.Uri) $r10;

        r6 = r5;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r6;

     label3:
        $r11 := @caughtexception;

        r7 = $r11;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.net.Uri uncanonicalize(java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderProxy r0;
        java.lang.String r1;
        android.net.Uri r2, r5, r6;
        android.os.Parcel r3, r4;
        java.lang.Throwable r7, $r11;
        android.os.IBinder $r8;
        android.os.Parcelable$Creator $r9;
        java.lang.Object $r10;

        r0 := @this: android.content.ContentProviderProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.content.IContentProvider");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.net.Uri: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        $r8 = r0.<android.content.ContentProviderProxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r3, r4, 0);

        staticinvoke <android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>(r4);

        $r9 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r4);

        r5 = (android.net.Uri) $r10;

        r6 = r5;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r6;

     label3:
        $r11 := @caughtexception;

        r7 = $r11;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
