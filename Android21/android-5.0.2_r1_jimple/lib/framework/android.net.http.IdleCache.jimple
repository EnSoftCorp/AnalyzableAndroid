class android.net.http.IdleCache extends java.lang.Object
{
    private static final int IDLE_CACHE_MAX;
    private static final int EMPTY_CHECK_MAX;
    private static final int TIMEOUT;
    private static final int CHECK_INTERVAL;
    private android.net.http.IdleCache$Entry[] mEntries;
    private int mCount;
    private android.net.http.IdleCache$IdleReaper mThread;
    private int mCached;
    private int mReused;

    void <init>()
    {
        android.net.http.IdleCache r0;
        int i0;
        android.net.http.IdleCache$Entry[] $r1, $r3;
        android.net.http.IdleCache$Entry $r2;

        r0 := @this: android.net.http.IdleCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (android.net.http.IdleCache$Entry)[8];

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries> = $r1;

        r0.<android.net.http.IdleCache: int mCount> = 0;

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = null;

        r0.<android.net.http.IdleCache: int mCached> = 0;

        r0.<android.net.http.IdleCache: int mReused> = 0;

        i0 = 0;

     label1:
        if i0 >= 8 goto label2;

        $r3 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        $r2 = new android.net.http.IdleCache$Entry;

        specialinvoke $r2.<android.net.http.IdleCache$Entry: void <init>(android.net.http.IdleCache)>(r0);

        $r3[i0] = $r2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    synchronized boolean cacheConnection(org.apache.http.HttpHost, android.net.http.Connection)
    {
        android.net.http.IdleCache r0;
        org.apache.http.HttpHost r1, $r5;
        android.net.http.Connection r2;
        boolean z0;
        long l0, $l3;
        int i1, $i2, $i4, $i5;
        android.net.http.IdleCache$Entry r3;
        android.net.http.IdleCache$Entry[] $r4;
        android.net.http.IdleCache$IdleReaper $r6, $r7, $r8;

        r0 := @this: android.net.http.IdleCache;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: android.net.http.Connection;

        z0 = 0;

        $i2 = r0.<android.net.http.IdleCache: int mCount>;

        if $i2 >= 8 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i1 = 0;

     label1:
        if i1 >= 8 goto label3;

        $r4 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r3 = $r4[i1];

        $r5 = r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r5 != null goto label2;

        r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = r1;

        r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = r2;

        $l3 = l0 + 6000L;

        r3.<android.net.http.IdleCache$Entry: long mTimeout> = $l3;

        $i4 = r0.<android.net.http.IdleCache: int mCount>;

        $i5 = $i4 + 1;

        r0.<android.net.http.IdleCache: int mCount> = $i5;

        z0 = 1;

        $r6 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread>;

        if $r6 != null goto label3;

        $r8 = new android.net.http.IdleCache$IdleReaper;

        specialinvoke $r8.<android.net.http.IdleCache$IdleReaper: void <init>(android.net.http.IdleCache,android.net.http.IdleCache$1)>(r0, null);

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = $r8;

        $r7 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread>;

        virtualinvoke $r7.<android.net.http.IdleCache$IdleReaper: void start()>();

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }

    synchronized android.net.http.Connection getConnection(org.apache.http.HttpHost)
    {
        android.net.http.IdleCache r0;
        org.apache.http.HttpHost r1, r4;
        android.net.http.Connection r2;
        int i0, $i1, $i2, $i3;
        android.net.http.IdleCache$Entry r3;
        android.net.http.IdleCache$Entry[] $r5;
        boolean $z0;

        r0 := @this: android.net.http.IdleCache;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 = null;

        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        if $i1 <= 0 goto label3;

        i0 = 0;

     label1:
        if i0 >= 8 goto label3;

        $r5 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r3 = $r5[i0];

        r4 = r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        r2 = r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        r3.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        r3.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i2 = r0.<android.net.http.IdleCache: int mCount>;

        $i3 = $i2 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i3;

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r2;
    }

    synchronized void clear()
    {
        android.net.http.IdleCache r0;
        int i0, $i1, $i2, $i3;
        android.net.http.IdleCache$Entry r1;
        android.net.http.IdleCache$Entry[] $r2;
        org.apache.http.HttpHost $r3;
        android.net.http.Connection $r4;

        r0 := @this: android.net.http.IdleCache;

        i0 = 0;

     label1:
        $i1 = r0.<android.net.http.IdleCache: int mCount>;

        if $i1 <= 0 goto label3;

        if i0 >= 8 goto label3;

        $r2 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r1 = $r2[i0];

        $r3 = r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r3 == null goto label2;

        r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r4 = r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r4.<android.net.http.Connection: void closeConnection()>();

        r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i2 = r0.<android.net.http.IdleCache: int mCount>;

        $i3 = $i2 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private synchronized void clearIdle()
    {
        android.net.http.IdleCache r0;
        long l0, $l3;
        int i1, $i2, $i5, $i6;
        android.net.http.IdleCache$Entry r1;
        android.net.http.IdleCache$Entry[] $r2;
        org.apache.http.HttpHost $r3;
        byte $b4;
        android.net.http.Connection $r4;

        r0 := @this: android.net.http.IdleCache;

        $i2 = r0.<android.net.http.IdleCache: int mCount>;

        if $i2 <= 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i1 = 0;

     label1:
        if i1 >= 8 goto label3;

        $r2 = r0.<android.net.http.IdleCache: android.net.http.IdleCache$Entry[] mEntries>;

        r1 = $r2[i1];

        $r3 = r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost>;

        if $r3 == null goto label2;

        $l3 = r1.<android.net.http.IdleCache$Entry: long mTimeout>;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label2;

        r1.<android.net.http.IdleCache$Entry: org.apache.http.HttpHost mHost> = null;

        $r4 = r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection>;

        virtualinvoke $r4.<android.net.http.Connection: void closeConnection()>();

        r1.<android.net.http.IdleCache$Entry: android.net.http.Connection mConnection> = null;

        $i5 = r0.<android.net.http.IdleCache: int mCount>;

        $i6 = $i5 - 1;

        r0.<android.net.http.IdleCache: int mCount> = $i6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    static int access$100(android.net.http.IdleCache)
    {
        android.net.http.IdleCache r0;
        int $i0;

        r0 := @parameter0: android.net.http.IdleCache;

        $i0 = r0.<android.net.http.IdleCache: int mCount>;

        return $i0;
    }

    static void access$200(android.net.http.IdleCache)
    {
        android.net.http.IdleCache r0;

        r0 := @parameter0: android.net.http.IdleCache;

        specialinvoke r0.<android.net.http.IdleCache: void clearIdle()>();

        return;
    }

    static android.net.http.IdleCache$IdleReaper access$302(android.net.http.IdleCache, android.net.http.IdleCache$IdleReaper)
    {
        android.net.http.IdleCache r0;
        android.net.http.IdleCache$IdleReaper r1;

        r0 := @parameter0: android.net.http.IdleCache;

        r1 := @parameter1: android.net.http.IdleCache$IdleReaper;

        r0.<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper mThread> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <android.net.http.IdleCache: int CHECK_INTERVAL> = 2000;

        <android.net.http.IdleCache: int TIMEOUT> = 6000;

        <android.net.http.IdleCache: int EMPTY_CHECK_MAX> = 5;

        <android.net.http.IdleCache: int IDLE_CACHE_MAX> = 8;

        return;
    }
}
