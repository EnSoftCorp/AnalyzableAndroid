public abstract class android.media.SubtitleTrack extends java.lang.Object implements android.media.MediaTimeProvider$OnMediaTimeListener
{
    private static final java.lang.String TAG;
    private long mLastUpdateTimeMs;
    private long mLastTimeMs;
    private java.lang.Runnable mRunnable;
    protected final android.util.LongSparseArray mRunsByEndTime;
    protected final android.util.LongSparseArray mRunsByID;
    protected android.media.SubtitleTrack$CueList mCues;
    protected final java.util.Vector mActiveCues;
    protected boolean mVisible;
    public boolean DEBUG;
    protected android.os.Handler mHandler;
    private android.media.MediaFormat mFormat;
    private long mNextScheduledTimeMs;
    protected android.media.MediaTimeProvider mTimeProvider;

    public void <init>(android.media.MediaFormat)
    {
        android.media.SubtitleTrack r0;
        android.media.MediaFormat r1;
        android.util.LongSparseArray $r2, $r3;
        java.util.Vector $r4;
        android.os.Handler $r5;
        android.media.SubtitleTrack$CueList $r6;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.MediaFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.LongSparseArray;

        specialinvoke $r2.<android.util.LongSparseArray: void <init>()>();

        r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime> = $r2;

        $r3 = new android.util.LongSparseArray;

        specialinvoke $r3.<android.util.LongSparseArray: void <init>()>();

        r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues> = $r4;

        r0.<android.media.SubtitleTrack: boolean DEBUG> = 0;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<android.media.SubtitleTrack: android.os.Handler mHandler> = $r5;

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = -1L;

        r0.<android.media.SubtitleTrack: android.media.MediaFormat mFormat> = r1;

        $r6 = new android.media.SubtitleTrack$CueList;

        specialinvoke $r6.<android.media.SubtitleTrack$CueList: void <init>()>();

        r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues> = $r6;

        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

        r0.<android.media.SubtitleTrack: long mLastTimeMs> = -1L;

        return;
    }

    public final android.media.MediaFormat getFormat()
    {
        android.media.SubtitleTrack r0;
        android.media.MediaFormat $r1;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.media.MediaFormat mFormat>;

        return $r1;
    }

    protected void onData(android.media.SubtitleData)
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleData r1;
        long l0, $l1, $l2, $l3, $l4, $l5;
        byte[] $r2;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.SubtitleData;

        $l1 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        l0 = $l1 + 1L;

        $r2 = virtualinvoke r1.<android.media.SubtitleData: byte[] getData()>();

        virtualinvoke r0.<android.media.SubtitleTrack: void onData(byte[],boolean,long)>($r2, 1, l0);

        $l2 = virtualinvoke r1.<android.media.SubtitleData: long getStartTimeUs()>();

        $l3 = virtualinvoke r1.<android.media.SubtitleData: long getDurationUs()>();

        $l4 = $l2 + $l3;

        $l5 = $l4 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void setRunDiscardTimeMs(long,long)>(l0, $l5);

        return;
    }

    public abstract void onData(byte[], boolean, long);

    public abstract android.media.SubtitleTrack$RenderingWidget getRenderingWidget();

    public abstract void updateView(java.util.Vector);

    protected synchronized void updateActiveCues(boolean, long)
    {
        android.media.SubtitleTrack r0;
        boolean z0, $z1, $z2, $z5;
        long l0, $l1, $l3, $l5, $l7, $l8, $l9, $l12, $l14;
        java.util.Iterator r1;
        android.util.Pair r2;
        android.media.SubtitleTrack$Cue r3;
        android.media.SubtitleTrack$CueList $r4;
        java.lang.Iterable $r5;
        android.util.LongSparseArray $r6, $r7;
        int $i2;
        java.lang.Object $r8, $r9, $r10, $r13;
        byte $b4, $b6, $b10, $b13, $b16;
        java.lang.Long $r11, $r12;
        long[] $r14, $r15;
        java.lang.StringBuilder $r16, $r19, $r20, $r22, $r23, $r25;
        java.util.Vector $r17, $r21;
        java.lang.String $r18, $r24;

        r0 := @this: android.media.SubtitleTrack;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        if z0 != 0 goto label01;

        $l14 = r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs>;

        $b16 = $l14 cmp l0;

        if $b16 <= 0 goto label02;

     label01:
        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

     label02:
        $r4 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        $l1 = r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs>;

        $r5 = virtualinvoke $r4.<android.media.SubtitleTrack$CueList: java.lang.Iterable entriesBetween(long,long)>($l1, l0);

        r1 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.util.Pair) $r8;

        $r10 = r2.<android.util.Pair: java.lang.Object second>;

        r3 = (android.media.SubtitleTrack$Cue) $r10;

        $l5 = r3.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $r9 = r2.<android.util.Pair: java.lang.Object first>;

        $r11 = (java.lang.Long) $r9;

        $l7 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        $b6 = $l5 cmp $l7;

        if $b6 != 0 goto label05;

        $z5 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z5 == 0 goto label04;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r24);

     label04:
        $r21 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r21.<java.util.Vector: boolean remove(java.lang.Object)>(r3);

        $l12 = r3.<android.media.SubtitleTrack$Cue: long mRunID>;

        $b13 = $l12 cmp 0L;

        if $b13 != 0 goto label09;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label09;

     label05:
        $l9 = r3.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $r13 = r2.<android.util.Pair: java.lang.Object first>;

        $r12 = (java.lang.Long) $r13;

        $l8 = virtualinvoke $r12.<java.lang.Long: long longValue()>();

        $b10 = $l9 cmp $l8;

        if $b10 != 0 goto label08;

        $z2 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z2 == 0 goto label06;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r18);

     label06:
        $r15 = r3.<android.media.SubtitleTrack$Cue: long[] mInnerTimesMs>;

        if $r15 == null goto label07;

        virtualinvoke r3.<android.media.SubtitleTrack$Cue: void onTime(long)>(l0);

     label07:
        $r17 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r17.<java.util.Vector: boolean add(java.lang.Object)>(r3);

        goto label09;

     label08:
        $r14 = r3.<android.media.SubtitleTrack$Cue: long[] mInnerTimesMs>;

        if $r14 == null goto label09;

        virtualinvoke r3.<android.media.SubtitleTrack$Cue: void onTime(long)>(l0);

     label09:
        goto label03;

     label10:
        $r6 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $i2 = virtualinvoke $r6.<android.util.LongSparseArray: int size()>();

        if $i2 <= 0 goto label11;

        $r7 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $l3 = virtualinvoke $r7.<android.util.LongSparseArray: long keyAt(int)>(0);

        $b4 = $l3 cmp l0;

        if $b4 > 0 goto label11;

        specialinvoke r0.<android.media.SubtitleTrack: void removeRunsByEndTimeIndex(int)>(0);

        goto label10;

     label11:
        r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs> = l0;

        return;
    }

    private void removeRunsByEndTimeIndex(int)
    {
        android.media.SubtitleTrack r0;
        int i0;
        android.media.SubtitleTrack$Run r1, r9;
        android.media.SubtitleTrack$Cue r2, r3;
        android.util.LongSparseArray $r4, $r6, $r7;
        java.lang.Object $r5;
        long $l1;
        android.media.SubtitleTrack$CueList $r8;

        r0 := @this: android.media.SubtitleTrack;

        i0 := @parameter0: int;

        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        $r5 = virtualinvoke $r4.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i0);

        r1 = (android.media.SubtitleTrack$Run) $r5;

     label1:
        if r1 == null goto label4;

        r2 = r1.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue>;

     label2:
        if r2 == null goto label3;

        $r8 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        virtualinvoke $r8.<android.media.SubtitleTrack$CueList: void remove(android.media.SubtitleTrack$Cue)>(r2);

        r3 = r2.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun>;

        r2.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun> = null;

        r2 = r3;

        goto label2;

     label3:
        $r7 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l1 = r1.<android.media.SubtitleTrack$Run: long mRunID>;

        virtualinvoke $r7.<android.util.LongSparseArray: void remove(long)>($l1);

        r9 = r1.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mNextRunAtEndTimeMs>;

        r1.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mPrevRunAtEndTimeMs> = null;

        r1.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Run mNextRunAtEndTimeMs> = null;

        r1 = r9;

        goto label1;

     label4:
        $r6 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke $r6.<android.util.LongSparseArray: void removeAt(int)>(i0);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.SubtitleTrack r0;
        int i0, i1;
        android.util.LongSparseArray $r1;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        i0 = virtualinvoke $r1.<android.util.LongSparseArray: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        specialinvoke r0.<android.media.SubtitleTrack: void removeRunsByEndTimeIndex(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    private synchronized void takeTime(long)
    {
        android.media.SubtitleTrack r0;
        long l0;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        r0.<android.media.SubtitleTrack: long mLastTimeMs> = l0;

        return;
    }

    protected synchronized void clearActiveCues()
    {
        android.media.SubtitleTrack r0;
        boolean $z0;
        java.util.Vector $r1, $r4;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        int $i0;
        java.lang.String $r7;

        r0 := @this: android.media.SubtitleTrack;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing ");

        $r4 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" active cues");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r7);

     label1:
        $r1 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        r0.<android.media.SubtitleTrack: long mLastUpdateTimeMs> = -1L;

        return;
    }

    protected void scheduleTimedEvents()
    {
        android.media.SubtitleTrack r0;
        android.media.MediaTimeProvider $r1, $r3;
        long $l0, $l1, $l2, $l4, $l5, $l6, $l7;
        android.media.SubtitleTrack$CueList $r2;
        boolean $z0;
        byte $b3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r1 == null goto label4;

        $r2 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        $l0 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $l1 = virtualinvoke $r2.<android.media.SubtitleTrack$CueList: long nextTimeAfter(long)>($l0);

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = $l1;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sched @");

        $l6 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $l7 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r8);

     label1:
        $r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l2 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label2;

        $l4 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $l5 = $l4 * 1000L;

        goto label3;

     label2:
        $l5 = -1L;

     label3:
        interfaceinvoke $r3.<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider$OnMediaTimeListener)>($l5, r0);

     label4:
        return;
    }

    public void onTimedEvent(long)
    {
        android.media.SubtitleTrack r0, r1;
        long l0, l1;
        java.lang.Throwable r2, $r9;
        boolean $z0;
        java.util.Vector $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTimedEvent ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r8);

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        l1 = l0 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>(0, l1);

        specialinvoke r0.<android.media.SubtitleTrack: void takeTime(long)>(l1);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r4 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r4);

        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onSeek(long)
    {
        android.media.SubtitleTrack r0, r1;
        long l0, l1;
        java.lang.Throwable r2, $r9;
        boolean $z0;
        java.util.Vector $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSeek ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", $r8);

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        l1 = l0 / 1000L;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>(1, l1);

        specialinvoke r0.<android.media.SubtitleTrack: void takeTime(long)>(l1);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r4 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r4);

        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onStop()
    {
        android.media.SubtitleTrack r0, r1;
        java.lang.Throwable r2, $r6;
        boolean $z0;
        java.util.Vector $r4;
        android.media.MediaTimeProvider $r5;

        r0 := @this: android.media.SubtitleTrack;

        r1 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SubtitleTrack", "onStop");

     label2:
        virtualinvoke r0.<android.media.SubtitleTrack: void clearActiveCues()>();

        r0.<android.media.SubtitleTrack: long mLastTimeMs> = -1L;

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r4 = r0.<android.media.SubtitleTrack: java.util.Vector mActiveCues>;

        virtualinvoke r0.<android.media.SubtitleTrack: void updateView(java.util.Vector)>($r4);

        r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs> = -1L;

        $r5 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r5.<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider$OnMediaTimeListener)>(-1L, r0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void show()
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleTrack$RenderingWidget r1;
        boolean $z0;
        android.media.MediaTimeProvider $r2, $r3;

        r0 := @this: android.media.SubtitleTrack;

        $z0 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.media.SubtitleTrack: boolean mVisible> = 1;

        r1 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if r1 == null goto label2;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void setVisible(boolean)>(1);

     label2:
        $r2 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r2 == null goto label3;

        $r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r3.<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label3:
        return;
    }

    public void hide()
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleTrack$RenderingWidget r1;
        boolean $z0;
        android.media.MediaTimeProvider $r2, $r3;

        r0 := @this: android.media.SubtitleTrack;

        $z0 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r3.<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label2:
        r1 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if r1 == null goto label3;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void setVisible(boolean)>(0);

     label3:
        r0.<android.media.SubtitleTrack: boolean mVisible> = 0;

        return;
    }

    protected synchronized boolean addCue(android.media.SubtitleTrack$Cue)
    {
        android.media.SubtitleTrack r0, r31;
        android.media.SubtitleTrack$Cue r1, $r29;
        android.media.SubtitleTrack$Run r2, $r30;
        long l0, $l1, $l3, $l4, $l5, $l8, $l10, $l12, $l13, $l14, $l18, $l19, $l21, $l22, $l23, $l25, $l26, $l27, $l28, $l29, l30;
        android.media.SubtitleTrack$CueList $r4;
        byte $b2, $b6, $b7, $b9, $b11, $b15, $b24;
        android.media.MediaTimeProvider $r5, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Runnable $r6, $r7, $r11;
        android.media.SubtitleTrack$1 $r8;
        android.os.Handler $r9, $r12;
        java.lang.StringBuilder $r10, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23;
        java.lang.String $r22;
        android.util.LongSparseArray $r24, $r27;
        java.lang.Object $r26;
        java.lang.IllegalStateException $r28;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.SubtitleTrack$Cue;

        $r4 = r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$CueList mCues>;

        virtualinvoke $r4.<android.media.SubtitleTrack$CueList: void add(android.media.SubtitleTrack$Cue)>(r1);

        $l1 = r1.<android.media.SubtitleTrack$Cue: long mRunID>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label03;

        $r24 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l22 = r1.<android.media.SubtitleTrack$Cue: long mRunID>;

        $r26 = virtualinvoke $r24.<android.util.LongSparseArray: java.lang.Object get(long)>($l22);

        r2 = (android.media.SubtitleTrack$Run) $r26;

        if r2 != null goto label01;

        $r30 = new android.media.SubtitleTrack$Run;

        specialinvoke $r30.<android.media.SubtitleTrack$Run: void <init>(android.media.SubtitleTrack$1)>(null);

        r2 = $r30;

        $r27 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $l29 = r1.<android.media.SubtitleTrack$Cue: long mRunID>;

        virtualinvoke $r27.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l29, r2);

        $l27 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        r2.<android.media.SubtitleTrack$Run: long mEndTimeMs> = $l27;

        goto label02;

     label01:
        $l25 = r2.<android.media.SubtitleTrack$Run: long mEndTimeMs>;

        $l26 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $b24 = $l25 cmp $l26;

        if $b24 >= 0 goto label02;

        $l28 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        r2.<android.media.SubtitleTrack$Run: long mEndTimeMs> = $l28;

     label02:
        $r29 = r2.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue>;

        r1.<android.media.SubtitleTrack$Cue: android.media.SubtitleTrack$Cue mNextInRun> = $r29;

        r2.<android.media.SubtitleTrack$Run: android.media.SubtitleTrack$Cue mFirstCue> = r1;

     label03:
        l30 = -1L;

        $r5 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r5 == null goto label07;

     label04:
        $r25 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l23 = interfaceinvoke $r25.<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>(0, 1);

        l30 = $l23 / 1000L;

     label05:
        goto label07;

     label06:
        $r28 := @caughtexception;

     label07:
        $z0 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z0 == 0 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mVisible=");

        $z6 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $l18 = r1.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l30);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $l19 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $l21 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", $r22);

     label08:
        $z1 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z1 == 0 goto label12;

        $l12 = r1.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $b11 = $l12 cmp l30;

        if $b11 > 0 goto label12;

        $l13 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $l14 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $b15 = $l13 cmp $l14;

        if $b15 < 0 goto label12;

        $r6 = r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable>;

        if $r6 == null goto label09;

        $r12 = r0.<android.media.SubtitleTrack: android.os.Handler mHandler>;

        $r11 = r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable>;

        virtualinvoke $r12.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r11);

     label09:
        r31 = r0;

        l0 = l30;

        $r8 = new android.media.SubtitleTrack$1;

        specialinvoke $r8.<android.media.SubtitleTrack$1: void <init>(android.media.SubtitleTrack,android.media.SubtitleTrack,long)>(r0, r31, l0);

        r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable> = $r8;

        $r9 = r0.<android.media.SubtitleTrack: android.os.Handler mHandler>;

        $r7 = r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable>;

        $z3 = virtualinvoke $r9.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, 10L);

        if $z3 == 0 goto label10;

        $z4 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z4 == 0 goto label11;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SubtitleTrack", "scheduling update");

        goto label11;

     label10:
        $z5 = r0.<android.media.SubtitleTrack: boolean DEBUG>;

        if $z5 == 0 goto label11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SubtitleTrack", "failed to schedule subtitle view update");

     label11:
        return 1;

     label12:
        $z2 = r0.<android.media.SubtitleTrack: boolean mVisible>;

        if $z2 == 0 goto label14;

        $l4 = r1.<android.media.SubtitleTrack$Cue: long mEndTimeMs>;

        $l3 = r0.<android.media.SubtitleTrack: long mLastTimeMs>;

        $b6 = $l4 cmp $l3;

        if $b6 < 0 goto label14;

        $l8 = r1.<android.media.SubtitleTrack$Cue: long mStartTimeMs>;

        $l5 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b7 = $l8 cmp $l5;

        if $b7 < 0 goto label13;

        $l10 = r0.<android.media.SubtitleTrack: long mNextScheduledTimeMs>;

        $b9 = $l10 cmp 0L;

        if $b9 >= 0 goto label14;

     label13:
        virtualinvoke r0.<android.media.SubtitleTrack: void scheduleTimedEvents()>();

     label14:
        return 0;

        catch java.lang.IllegalStateException from label04 to label05 with label06;
    }

    public synchronized void setTimeProvider(android.media.MediaTimeProvider)
    {
        android.media.SubtitleTrack r0;
        android.media.MediaTimeProvider r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.media.SubtitleTrack;

        r1 := @parameter0: android.media.MediaTimeProvider;

        $r2 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r2 != r1 goto label1;

        return;

     label1:
        $r3 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r3 == null goto label2;

        $r6 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r6.<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label2:
        r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider> = r1;

        $r4 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r4 == null goto label3;

        $r5 = r0.<android.media.SubtitleTrack: android.media.MediaTimeProvider mTimeProvider>;

        interfaceinvoke $r5.<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)>(r0);

     label3:
        return;
    }

    protected void finishedRun(long)
    {
        android.media.SubtitleTrack r0;
        long l0;
        android.media.SubtitleTrack$Run r1;
        byte $b1, $b2;
        android.util.LongSparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp -1L;

        if $b2 == 0 goto label1;

        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (android.media.SubtitleTrack$Run) $r3;

        if r1 == null goto label1;

        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke r1.<android.media.SubtitleTrack$Run: void storeByEndTimeMs(android.util.LongSparseArray)>($r4);

     label1:
        return;
    }

    public void setRunDiscardTimeMs(long, long)
    {
        android.media.SubtitleTrack r0;
        long l0, l1;
        android.media.SubtitleTrack$Run r1;
        byte $b2, $b3;
        android.util.LongSparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.media.SubtitleTrack;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label1;

        $r2 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByID>;

        $r3 = virtualinvoke $r2.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r1 = (android.media.SubtitleTrack$Run) $r3;

        if r1 == null goto label1;

        r1.<android.media.SubtitleTrack$Run: long mEndTimeMs> = l1;

        $r4 = r0.<android.media.SubtitleTrack: android.util.LongSparseArray mRunsByEndTime>;

        virtualinvoke r1.<android.media.SubtitleTrack$Run: void storeByEndTimeMs(android.util.LongSparseArray)>($r4);

     label1:
        return;
    }

    public boolean isTimedText()
    {
        android.media.SubtitleTrack r0;
        android.media.SubtitleTrack$RenderingWidget $r1;
        boolean $z0;

        r0 := @this: android.media.SubtitleTrack;

        $r1 = virtualinvoke r0.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static java.lang.Runnable access$102(android.media.SubtitleTrack, java.lang.Runnable)
    {
        android.media.SubtitleTrack r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.media.SubtitleTrack;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.media.SubtitleTrack: java.lang.Runnable mRunnable> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <android.media.SubtitleTrack: java.lang.String TAG> = "SubtitleTrack";

        return;
    }
}
