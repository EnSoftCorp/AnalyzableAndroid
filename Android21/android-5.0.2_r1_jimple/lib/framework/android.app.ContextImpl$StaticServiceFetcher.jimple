abstract class android.app.ContextImpl$StaticServiceFetcher extends android.app.ContextImpl$ServiceFetcher
{
    private java.lang.Object mCachedInstance;

    void <init>()
    {
        android.app.ContextImpl$StaticServiceFetcher r0;

        r0 := @this: android.app.ContextImpl$StaticServiceFetcher;

        specialinvoke r0.<android.app.ContextImpl$ServiceFetcher: void <init>()>();

        return;
    }

    public final java.lang.Object getService(android.app.ContextImpl)
    {
        android.app.ContextImpl$StaticServiceFetcher r0, r2;
        android.app.ContextImpl r1;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r7;

        r0 := @this: android.app.ContextImpl$StaticServiceFetcher;

        r1 := @parameter0: android.app.ContextImpl;

        r2 = r0;

        entermonitor r0;

     label1:
        r3 = r0.<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object mCachedInstance>;

        if r3 == null goto label3;

        exitmonitor r2;

     label2:
        return r3;

     label3:
        $r6 = virtualinvoke r0.<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object createStaticService()>();

        r0.<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object mCachedInstance> = $r6;

        exitmonitor r2;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public abstract java.lang.Object createStaticService();
}
