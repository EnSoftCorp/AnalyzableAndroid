class android.media.MediaPlayer$TimeProvider extends java.lang.Object implements android.media.MediaPlayer$OnSeekCompleteListener, android.media.MediaTimeProvider
{
    private static final java.lang.String TAG;
    private static final long MAX_NS_WITHOUT_POSITION_CHECK;
    private static final long MAX_EARLY_CALLBACK_US;
    private static final long TIME_ADJUSTMENT_RATE;
    private long mLastTimeUs;
    private android.media.MediaPlayer mPlayer;
    private boolean mPaused;
    private boolean mStopped;
    private long mLastReportedTime;
    private long mTimeAdjustment;
    private android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners;
    private long[] mTimes;
    private long mLastNanoTime;
    private android.os.Handler mEventHandler;
    private boolean mRefresh;
    private boolean mPausing;
    private boolean mSeeking;
    private static final int NOTIFY;
    private static final int NOTIFY_TIME;
    private static final int REFRESH_AND_NOTIFY_TIME;
    private static final int NOTIFY_STOP;
    private static final int NOTIFY_SEEK;
    private android.os.HandlerThread mHandlerThread;
    public boolean DEBUG;

    public void <init>(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaPlayer r1;
        android.os.Looper $r3, $r7, r12;
        android.media.MediaPlayer$TimeProvider$EventHandler $r4;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r5;
        long[] $r6;
        android.os.HandlerThread $r8, $r9, $r10;
        java.lang.IllegalStateException $r11;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer> = r1;

     label1:
        virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

     label4:
        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r12 = $r3;

        if $r3 != null goto label5;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r12 = $r7;

        if $r7 != null goto label5;

        $r8 = new android.os.HandlerThread;

        specialinvoke $r8.<android.os.HandlerThread: void <init>(java.lang.String,int)>("MediaPlayerMTPEventThread", -2);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = $r8;

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r9.<android.os.HandlerThread: void start()>();

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        r12 = virtualinvoke $r10.<android.os.HandlerThread: android.os.Looper getLooper()>();

     label5:
        $r4 = new android.media.MediaPlayer$TimeProvider$EventHandler;

        specialinvoke $r4.<android.media.MediaPlayer$TimeProvider$EventHandler: void <init>(android.media.MediaPlayer$TimeProvider,android.os.Looper)>(r0, r12);

        r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler> = $r4;

        $r5 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[0];

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = $r5;

        $r6 = newarray (long)[0];

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = $r6;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = 0L;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    private void scheduleNotification(int, long)
    {
        android.media.MediaPlayer$TimeProvider r0;
        int i0, $i3;
        long l1, $l2, $l4;
        android.os.Message r1;
        boolean $z0, $z1;
        android.os.Handler $r2, $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

        if $z0 == 0 goto label2;

        if i0 == 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduleNotification ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r9);

     label3:
        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(1);

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        r1 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        $l2 = l1 / 1000L;

        $i3 = (int) $l2;

        $l4 = (long) $i3;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r1, $l4);

        return;
    }

    public void close()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.Handler $r1;
        android.os.HandlerThread $r2, $r3;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if $r2 == null goto label1;

        $r3 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r3.<android.os.HandlerThread: boolean quitSafely()>();

        r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread> = null;

     label1:
        return;
    }

    protected void finalize()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.os.HandlerThread $r1, $r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $r1 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.MediaPlayer$TimeProvider: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quitSafely()>();

     label1:
        return;
    }

    public void onPaused(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0, r1;
        boolean z0, $z1, $z2;
        java.lang.Throwable r2, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        r1 = r0;

        entermonitor r0;

     label1:
        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPaused: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r7);

     label2:
        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z2 == 0 goto label3;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        goto label4;

     label3:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = z0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(1, 0L);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onStopped()
    {
        android.media.MediaPlayer$TimeProvider r0, r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onStopped");

     label2:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(2, 0L);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onSeekComplete(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$TimeProvider r0, r2;
        android.media.MediaPlayer r1;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaPlayer;

        r2 = r0;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onNewPlayer()
    {
        android.media.MediaPlayer$TimeProvider r0, r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh>;

        if $z0 == 0 goto label5;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private synchronized void notifySeek()
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r1;
        int i1, i2;
        android.media.MediaTimeProvider$OnMediaTimeListener r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 0;

     label1:
        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(1, 0);

        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSeekComplete at ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r6);

     label2:
        r1 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i1 = lengthof r1;

        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        r2 = r1[i2];

        if r2 != null goto label4;

        goto label5;

     label4:
        interfaceinvoke r2.<android.media.MediaTimeProvider$OnMediaTimeListener: void onSeek(long)>(l0);

        i2 = i2 + 1;

        goto label3;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z1 == 0 goto label7;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "onSeekComplete but no player");

     label7:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(0);

     label8:
        return;

        catch java.lang.IllegalStateException from label1 to label5 with label6;
    }

    private synchronized void notifyStop()
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r1;
        int i0, i1;
        android.media.MediaTimeProvider$OnMediaTimeListener r2;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        if r2 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke r2.<android.media.MediaTimeProvider$OnMediaTimeListener: void onStop()>();

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1, $r7, $r16, $r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.media.MediaTimeProvider$OnMediaTimeListener[] r2, $r4, $r5, $r6, $r8, $r10, $r11, $r13, $r15;
        long[] r3, $r9, $r12, $r14;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        i0 = 0;

     label1:
        $r4 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label3;

        $r13 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r16 = $r13[i0];

        if $r16 == r1 goto label3;

        $r15 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r17 = $r15[i0];

        if $r17 != null goto label2;

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i2 = lengthof $r5;

        if i0 < $i2 goto label4;

        $i3 = i0 + 1;

        r2 = newarray (android.media.MediaTimeProvider$OnMediaTimeListener)[$i3];

        $i4 = i0 + 1;

        r3 = newarray (long)[$i4];

        $r11 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i5 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r2, 0, $i5);

        $r14 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i6 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>($r14, 0, r3, 0, $i6);

        r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners> = r2;

        r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes> = r3;

     label4:
        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r7 = $r6[i0];

        if $r7 != null goto label5;

        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r8[i0] = r1;

        $r9 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r9[i0] = -1L;

     label5:
        return i0;
    }

    public void notifyAt(long, android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0, r2;
        long l0;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        java.lang.Throwable r3, $r10;
        boolean $z0;
        long[] $r5;
        int $i1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: android.media.MediaTimeProvider$OnMediaTimeListener;

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyAt ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r9);

     label2:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i1 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r1);

        $r5[$i1] = l0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void scheduleUpdate(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0, r2;
        android.media.MediaTimeProvider$OnMediaTimeListener r1;
        int i0;
        java.lang.Throwable r3, $r6;
        boolean $z0, $z1;
        long[] $r5;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        r2 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "scheduleUpdate");

     label2:
        i0 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: int registerListener(android.media.MediaTimeProvider$OnMediaTimeListener)>(r1);

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped>;

        if $z1 != 0 goto label3;

        $r5 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r5[i0] = 0L;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void cancelNotifications(android.media.MediaTimeProvider$OnMediaTimeListener)
    {
        android.media.MediaPlayer$TimeProvider r0, r2;
        android.media.MediaTimeProvider$OnMediaTimeListener r1, $r7, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.Throwable r3, $r20;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r5, $r6, $r8, $r10, $r11, $r12, $r15, $r18;
        long[] $r13, $r14, $r16, $r17, $r19;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        r1 := @parameter0: android.media.MediaTimeProvider$OnMediaTimeListener;

        r2 = r0;

        entermonitor r0;

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label5;

        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r7 = $r6[i0];

        if $r7 != r1 goto label3;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i5 = i0 + 1;

        $r11 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r10 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i2 = lengthof $r10;

        $i3 = $i2 - i0;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i5, $r11, i0, $i4);

        $r16 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i9 = i0 + 1;

        $r14 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r13 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i6 = lengthof $r13;

        $i8 = $i6 - i0;

        $i7 = $i8 - 1;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>($r16, $i9, $r14, i0, $i7);

        $r18 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r15 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $i11 = lengthof $r15;

        $i10 = $i11 - 1;

        $r18[$i10] = null;

        $r19 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r17 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i12 = lengthof $r17;

        $i13 = $i12 - 1;

        $r19[$i13] = -1L;

        goto label5;

     label3:
        $r8 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r9 = $r8[i0];

        if $r9 != null goto label4;

        goto label5;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, 0L);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r20 := @caughtexception;

        r3 = $r20;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private synchronized void notifyTimedEvent(boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8;
        long l0, l3, $l6, $l8, $l10, $l12, $l13, $l17, l20;
        java.lang.StringBuilder r2, $r8, $r9, $r10, $r11, $r13, $r22, $r24, $r25, $r26, $r29;
        long[] r3, $r4, $r16, $r17, $r18, $r19, $r23;
        int i1, i2, $i5, i21;
        java.util.Vector $r5, r34;
        byte $b4, $b9, $b11, $b14, $b15, $b19;
        android.os.Handler $r6;
        java.lang.Object $r7;
        android.media.MediaTimeProvider$OnMediaTimeListener[] $r12, $r21;
        java.lang.String $r14, $r32;
        android.media.MediaTimeProvider$OnMediaTimeListener $r15, $r20, r36;
        java.lang.IllegalStateException $r31;
        java.util.Iterator r35;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

     label01:
        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z0, 1);

     label02:
        goto label04;

     label03:
        $r31 := @caughtexception;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mRefresh> = 1;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 1;

        l0 = virtualinvoke r0.<android.media.MediaPlayer$TimeProvider: long getCurrentTimeUs(boolean,boolean)>(z0, 1);

     label04:
        l20 = l0;

        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking>;

        if $z2 == 0 goto label05;

        return;

     label05:
        $z3 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z3 == 0 goto label11;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        r2 = $r22;

        $r26 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyTimedEvent(");

        $l17 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") from {");

        z1 = 1;

        r3 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        i1 = lengthof r3;

        i2 = 0;

     label06:
        if i2 >= i1 goto label10;

        l3 = r3[i2];

        $b19 = l3 cmp -1L;

        if $b19 != 0 goto label07;

        goto label09;

     label07:
        if z1 != 0 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label08:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        z1 = 0;

     label09:
        i2 = i2 + 1;

        goto label06;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r32 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r32);

     label11:
        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r34 = $r5;

        i21 = 0;

     label12:
        $r4 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $i5 = lengthof $r4;

        if i21 >= $i5 goto label19;

        $r12 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r15 = $r12[i21];

        if $r15 != null goto label13;

        goto label19;

     label13:
        $r16 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l8 = $r16[i21];

        $b9 = $l8 cmp -1L;

        if $b9 > 0 goto label14;

        goto label18;

     label14:
        $r17 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l10 = $r17[i21];

        $l12 = l0 + 1000L;

        $b11 = $l10 cmp $l12;

        if $b11 > 0 goto label16;

        $r21 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaTimeProvider$OnMediaTimeListener[] mListeners>;

        $r20 = $r21[i21];

        virtualinvoke r34.<java.util.Vector: boolean add(java.lang.Object)>($r20);

        $z8 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z8 == 0 goto label15;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", "removed");

     label15:
        $r23 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $r23[i21] = -1L;

        goto label18;

     label16:
        $b14 = l20 cmp l0;

        if $b14 == 0 goto label17;

        $r18 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        $l13 = $r18[i21];

        $b15 = $l13 cmp l20;

        if $b15 >= 0 goto label18;

     label17:
        $r19 = r0.<android.media.MediaPlayer$TimeProvider: long[] mTimes>;

        l20 = $r19[i21];

     label18:
        i21 = i21 + 1;

        goto label12;

     label19:
        $b4 = l20 cmp l0;

        if $b4 <= 0 goto label21;

        $z6 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z6 != 0 goto label21;

        $z5 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z5 == 0 goto label20;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduling for ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l20);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r14);

     label20:
        $l6 = l20 - l0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(0, $l6);

        goto label22;

     label21:
        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.os.Handler mEventHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(1);

     label22:
        r35 = virtualinvoke r34.<java.util.Vector: java.util.Iterator iterator()>();

     label23:
        $z4 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label24;

        $r7 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (android.media.MediaTimeProvider$OnMediaTimeListener) $r7;

        interfaceinvoke r36.<android.media.MediaTimeProvider$OnMediaTimeListener: void onTimedEvent(long)>(l0);

        goto label23;

     label24:
        return;

        catch java.lang.IllegalStateException from label01 to label02 with label03;
    }

    private long getEstimatedTime(long, boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l15, $l16, $l17;
        boolean z0, $z1;
        byte $b8, $b13;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z1 == 0 goto label1;

        $l17 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l14 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $l16 = $l17 + $l14;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l16;

        goto label3;

     label1:
        $l3 = r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime>;

        $l4 = l0 - $l3;

        l1 = $l4 / 1000L;

        $l5 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l6 = $l5 + l1;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l6;

        $l7 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $b8 = $l7 cmp 0L;

        if $b8 <= 0 goto label3;

        $l10 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $l11 = l1 / 2L;

        l2 = $l10 - $l11;

        $b13 = l2 cmp 0L;

        if $b13 > 0 goto label2;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

        goto label3;

     label2:
        $l12 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l15 = $l12 + l2;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime> = $l15;

     label3:
        $l9 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        return $l9;
    }

    public long getCurrentTimeUs(boolean, boolean) throws java.lang.IllegalStateException
    {
        android.media.MediaPlayer$TimeProvider r0, r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l9, $l10, $l12, $l13, $l14, $l16, $l17, $l20, $l21;
        java.lang.IllegalStateException r2, $r14;
        java.lang.Throwable r3, $r19;
        android.media.MediaPlayer $r5, $r6;
        int $i1;
        byte $b8, $b11, $b18;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r15, $r17, $r18;
        java.lang.String $r11, $r13, $r16;

        r0 := @this: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = r0;

        entermonitor r0;

     label01:
        $z2 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z2 == 0 goto label03;

        if z0 != 0 goto label03;

        $l16 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r1;

     label02:
        return $l16;

     label03:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        if z0 != 0 goto label04;

        $l14 = r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime>;

        $l17 = $l14 + 5000000000L;

        $b18 = l0 cmp $l17;

        if $b18 < 0 goto label16;

     label04:
        $r5 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $i1 = virtualinvoke $r5.<android.media.MediaPlayer: int getCurrentPosition()>();

        $l2 = (long) $i1;

        $l3 = $l2 * 1000L;

        r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs> = $l3;

        $r6 = r0.<android.media.MediaPlayer$TimeProvider: android.media.MediaPlayer mPlayer>;

        $z4 = virtualinvoke $r6.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z4 != 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = $z6;

        $z3 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z3 == 0 goto label09;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $z5 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused>;

        if $z5 == 0 goto label07;

        $r13 = "paused";

        goto label08;

     label07:
        $r13 = "playing";

     label08:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $l13 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MTP", $r11);

     label09:
        goto label14;

     label10:
        $r14 := @caughtexception;

        r2 = $r14;

        $z8 = r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing>;

        if $z8 == 0 goto label13;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPausing> = 0;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: long getEstimatedTime(long,boolean)>(l0, z1);

        r0.<android.media.MediaPlayer$TimeProvider: boolean mPaused> = 1;

        $z7 = r0.<android.media.MediaPlayer$TimeProvider: boolean DEBUG>;

        if $z7 == 0 goto label11;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal state, but pausing: estimating at ");

        $l21 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MTP", $r16);

     label11:
        $l20 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        exitmonitor r1;

     label12:
        return $l20;

     label13:
        throw r2;

     label14:
        r0.<android.media.MediaPlayer$TimeProvider: long mLastNanoTime> = l0;

        if z1 == 0 goto label15;

        $l5 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l6 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $b8 = $l5 cmp $l6;

        if $b8 >= 0 goto label15;

        $l10 = r0.<android.media.MediaPlayer$TimeProvider: long mLastReportedTime>;

        $l7 = r0.<android.media.MediaPlayer$TimeProvider: long mLastTimeUs>;

        $l9 = $l10 - $l7;

        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = $l9;

        $l12 = r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment>;

        $b11 = $l12 cmp 1000000L;

        if $b11 <= 0 goto label16;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mStopped> = 0;

        r0.<android.media.MediaPlayer$TimeProvider: boolean mSeeking> = 1;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void scheduleNotification(int,long)>(3, 0L);

        goto label16;

     label15:
        r0.<android.media.MediaPlayer$TimeProvider: long mTimeAdjustment> = 0L;

     label16:
        $l4 = specialinvoke r0.<android.media.MediaPlayer$TimeProvider: long getEstimatedTime(long,boolean)>(l0, z1);

        exitmonitor r1;

     label17:
        return $l4;

     label18:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r1;

     label19:
        throw r3;

        catch java.lang.IllegalStateException from label04 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label12 with label18;
        catch java.lang.Throwable from label13 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    static void access$1800(android.media.MediaPlayer$TimeProvider, boolean)
    {
        android.media.MediaPlayer$TimeProvider r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyTimedEvent(boolean)>(z0);

        return;
    }

    static void access$1900(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifyStop()>();

        return;
    }

    static void access$2000(android.media.MediaPlayer$TimeProvider)
    {
        android.media.MediaPlayer$TimeProvider r0;

        r0 := @parameter0: android.media.MediaPlayer$TimeProvider;

        specialinvoke r0.<android.media.MediaPlayer$TimeProvider: void notifySeek()>();

        return;
    }

    public static void <clinit>()
    {
        <android.media.MediaPlayer$TimeProvider: int NOTIFY_SEEK> = 3;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_STOP> = 2;

        <android.media.MediaPlayer$TimeProvider: int REFRESH_AND_NOTIFY_TIME> = 1;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY_TIME> = 0;

        <android.media.MediaPlayer$TimeProvider: int NOTIFY> = 1;

        <android.media.MediaPlayer$TimeProvider: long TIME_ADJUSTMENT_RATE> = 2L;

        <android.media.MediaPlayer$TimeProvider: long MAX_EARLY_CALLBACK_US> = 1000L;

        <android.media.MediaPlayer$TimeProvider: long MAX_NS_WITHOUT_POSITION_CHECK> = 5000000000L;

        <android.media.MediaPlayer$TimeProvider: java.lang.String TAG> = "MTP";

        return;
    }
}
