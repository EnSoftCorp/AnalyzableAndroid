public class android.graphics.Color extends java.lang.Object
{
    public static final int BLACK;
    public static final int DKGRAY;
    public static final int GRAY;
    public static final int LTGRAY;
    public static final int WHITE;
    public static final int RED;
    public static final int GREEN;
    public static final int BLUE;
    public static final int YELLOW;
    public static final int CYAN;
    public static final int MAGENTA;
    public static final int TRANSPARENT;
    private static final java.util.HashMap sColorNameMap;

    public void <init>()
    {
        android.graphics.Color r0;

        r0 := @this: android.graphics.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int alpha(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >>> 24;

        return $i1;
    }

    public static int red(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 16;

        $i2 = $i1 & 255;

        return $i2;
    }

    public static int green(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        $i2 = $i1 & 255;

        return $i2;
    }

    public static int blue(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        return $i1;
    }

    public static int rgb(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 << 16;

        $i5 = -16777216 | $i3;

        $i4 = i1 << 8;

        $i6 = $i5 | $i4;

        $i7 = $i6 | i2;

        return $i7;
    }

    public static int argb(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i5 = i0 << 24;

        $i4 = i1 << 16;

        $i7 = $i5 | $i4;

        $i6 = i2 << 8;

        $i8 = $i7 | $i6;

        $i9 = $i8 | i3;

        return $i9;
    }

    public static float hue(int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, f10;
        byte $b14;

        i0 := @parameter0: int;

        $i6 = i0 >> 16;

        i1 = $i6 & 255;

        $i7 = i0 >> 8;

        i2 = $i7 & 255;

        i3 = i0 & 255;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i8);

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i9);

        if i4 != i5 goto label1;

        f0 = 0.0F;

        goto label5;

     label1:
        $i10 = i4 - i5;

        f1 = (float) $i10;

        $i11 = i4 - i1;

        $f5 = (float) $i11;

        f2 = $f5 / f1;

        $i12 = i4 - i2;

        $f6 = (float) $i12;

        f3 = $f6 / f1;

        $i13 = i4 - i3;

        $f7 = (float) $i13;

        f4 = $f7 / f1;

        if i1 != i4 goto label2;

        f10 = f4 - f3;

        goto label4;

     label2:
        if i2 != i4 goto label3;

        $f9 = 2.0F + f2;

        f10 = $f9 - f4;

        goto label4;

     label3:
        $f8 = 4.0F + f3;

        f10 = $f8 - f2;

     label4:
        f0 = f10 / 6.0F;

        $b14 = f0 cmpg 0.0F;

        if $b14 >= 0 goto label5;

        f0 = f0 + 1.0F;

     label5:
        return f0;
    }

    public static float saturation(int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        float f0, $f1, $f2;

        i0 := @parameter0: int;

        $i6 = i0 >> 16;

        i1 = $i6 & 255;

        $i7 = i0 >> 8;

        i2 = $i7 & 255;

        i3 = i0 & 255;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i8);

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i9);

        if i4 != i5 goto label1;

        f0 = 0.0F;

        goto label2;

     label1:
        $i10 = i4 - i5;

        $f2 = (float) $i10;

        $f1 = (float) i4;

        f0 = $f2 / $f1;

     label2:
        return f0;
    }

    public static float brightness(int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        float $f0, $f1;

        i0 := @parameter0: int;

        $i5 = i0 >> 16;

        i1 = $i5 & 255;

        $i6 = i0 >> 8;

        i2 = $i6 & 255;

        i3 = i0 & 255;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i7);

        $f0 = (float) i4;

        $f1 = $f0 / 255.0F;

        return $f1;
    }

    public static int parseColor(java.lang.String)
    {
        java.lang.String r0, $r3, $r6;
        long l0, l6;
        char $c1;
        java.util.Locale $r1;
        java.util.HashMap $r2;
        java.lang.Object $r4;
        int $i2, $i3, $i4, $i5, i7;
        java.lang.Integer r8;
        java.lang.IllegalArgumentException r9, r10;

        r0 := @parameter0: java.lang.String;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label3;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r6, 16);

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 7 goto label1;

        l6 = l0 | -16777216L;

        i7 = (int) l6;

        return i7;

     label1:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 == 9 goto label2;

        r9 = new java.lang.IllegalArgumentException;

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw r9;

     label2:
        $i5 = (int) l0;

        return $i5;

     label3:
        $r2 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r8 = (java.lang.Integer) $r4;

        if r8 == null goto label4;

        $i2 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        return $i2;

     label4:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown color");

        throw r10;
    }

    public static int HSBtoColor(float[])
    {
        float[] r0;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @parameter0: float[];

        $f2 = r0[0];

        $f1 = r0[1];

        $f0 = r0[2];

        $i0 = staticinvoke <android.graphics.Color: int HSBtoColor(float,float,float)>($f2, $f1, $f0);

        return $i0;
    }

    public static int HSBtoColor(float, float, float)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, f23, f24, f25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f23 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f0, 0.0F, 1.0F);

        f24 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f1, 0.0F, 1.0F);

        f25 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f2, 0.0F, 1.0F);

        f3 = 0.0F;

        f4 = 0.0F;

        f5 = 0.0F;

        $i1 = (int) f23;

        $f12 = (float) $i1;

        $f11 = f23 - $f12;

        f6 = $f11 * 6.0F;

        i0 = (int) f6;

        $f14 = (float) i0;

        f7 = f6 - $f14;

        $f13 = 1.0F - f24;

        f8 = f25 * $f13;

        $f16 = f24 * f7;

        $f15 = 1.0F - $f16;

        f9 = f25 * $f15;

        $f18 = 1.0F - f7;

        $f17 = f24 * $f18;

        $f20 = 1.0F - $f17;

        f10 = f25 * $f20;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        f3 = f25;

        f4 = f10;

        f5 = f8;

        goto label7;

     label2:
        f3 = f9;

        f4 = f25;

        f5 = f8;

        goto label7;

     label3:
        f3 = f8;

        f4 = f25;

        f5 = f10;

        goto label7;

     label4:
        f3 = f8;

        f4 = f9;

        f5 = f25;

        goto label7;

     label5:
        f3 = f10;

        f4 = f8;

        f5 = f25;

        goto label7;

     label6:
        f3 = f25;

        f4 = f8;

        f5 = f9;

     label7:
        $f19 = f3 * 255.0F;

        $i3 = (int) $f19;

        $i2 = $i3 << 16;

        $i5 = -16777216 | $i2;

        $f21 = f4 * 255.0F;

        $i4 = (int) $f21;

        $i6 = $i4 << 8;

        $i7 = $i5 | $i6;

        $f22 = f5 * 255.0F;

        $i9 = (int) $f22;

        $i8 = $i7 | $i9;

        return $i8;
    }

    public static void RGBToHSV(int, int, int, float[])
    {
        int i0, i1, i2, $i3;
        float[] r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        $i3 = lengthof r0;

        if $i3 >= 3 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;

     label1:
        staticinvoke <android.graphics.Color: void nativeRGBToHSV(int,int,int,float[])>(i0, i1, i2, r0);

        return;
    }

    public static void colorToHSV(int, float[])
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        float[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = i0 >> 16;

        $i5 = $i1 & 255;

        $i2 = i0 >> 8;

        $i4 = $i2 & 255;

        $i3 = i0 & 255;

        staticinvoke <android.graphics.Color: void RGBToHSV(int,int,int,float[])>($i5, $i4, $i3, r0);

        return;
    }

    public static int HSVToColor(float[])
    {
        float[] r0;
        int $i0;

        r0 := @parameter0: float[];

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(255, r0);

        return $i0;
    }

    public static int HSVToColor(int, float[])
    {
        int i0, $i1, $i2;
        float[] r0;
        java.lang.RuntimeException $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = lengthof r0;

        if $i1 >= 3 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("3 components required for hsv");

        throw $r1;

     label1:
        $i2 = staticinvoke <android.graphics.Color: int nativeHSVToColor(int,float[])>(i0, r0);

        return $i2;
    }

    private static native void nativeRGBToHSV(int, int, int, float[]);

    private static native int nativeHSVToColor(int, float[]);

    public static int getHtmlColor(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.Integer r1;
        java.util.Locale $r3;
        java.util.HashMap $r4;
        java.lang.Object $r6;
        int $i0, $i1;
        java.lang.NumberFormatException $r7;

        r0 := @parameter0: java.lang.String;

        $r4 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (java.lang.Integer) $r6;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        $i0 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>(r0, -1);

     label2:
        return $i0;

     label3:
        $r7 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r4, $r7, $r10, $r12, $r15, $r18, $r21, $r26, $r29, $r32, $r35, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r60, $r63, $r67;
        java.lang.Integer $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r50, $r53, $r56, $r59, $r62, $r65, $r69;

        <android.graphics.Color: int TRANSPARENT> = 0;

        <android.graphics.Color: int MAGENTA> = -65281;

        <android.graphics.Color: int CYAN> = -16711681;

        <android.graphics.Color: int YELLOW> = -256;

        <android.graphics.Color: int BLUE> = -16776961;

        <android.graphics.Color: int GREEN> = -16711936;

        <android.graphics.Color: int RED> = -65536;

        <android.graphics.Color: int WHITE> = -1;

        <android.graphics.Color: int LTGRAY> = -3355444;

        <android.graphics.Color: int GRAY> = -7829368;

        <android.graphics.Color: int DKGRAY> = -12303292;

        <android.graphics.Color: int BLACK> = -16777216;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.graphics.Color: java.util.HashMap sColorNameMap> = $r0;

        $r1 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16777216);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("black", $r2);

        $r4 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-12303292);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgray", $r5);

        $r7 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7829368);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("gray", $r8);

        $r10 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-3355444);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgray", $r11);

        $r12 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("white", $r14);

        $r15 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65536);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("red", $r17);

        $r18 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711936);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("green", $r20);

        $r21 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16776961);

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("blue", $r23);

        $r26 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-256);

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("yellow", $r24);

        $r29 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711681);

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("cyan", $r27);

        $r32 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65281);

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("magenta", $r30);

        $r35 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711681);

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("aqua", $r33);

        $r37 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-65281);

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("fuchsia", $r36);

        $r40 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-12303292);

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("darkgrey", $r39);

        $r43 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-7829368);

        virtualinvoke $r43.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("grey", $r42);

        $r46 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-3355444);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lightgrey", $r45);

        $r52 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16711936);

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lime", $r53);

        $r49 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8388608);

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("maroon", $r50);

        $r58 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16777088);

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("navy", $r59);

        $r55 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8355840);

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("olive", $r56);

        $r63 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-8388480);

        virtualinvoke $r63.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("purple", $r65);

        $r60 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-4144960);

        virtualinvoke $r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("silver", $r62);

        $r67 = <android.graphics.Color: java.util.HashMap sColorNameMap>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-16744320);

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("teal", $r69);

        return;
    }
}
