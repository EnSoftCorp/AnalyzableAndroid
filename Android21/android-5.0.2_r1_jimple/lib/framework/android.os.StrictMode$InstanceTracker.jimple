final class android.os.StrictMode$InstanceTracker extends java.lang.Object
{
    private static final java.util.HashMap sInstanceCounts;
    private final java.lang.Class mKlass;

    public void <init>(java.lang.Object)
    {
        android.os.StrictMode$InstanceTracker r0;
        java.lang.Object r1, $r9;
        java.util.HashMap r2, $r6, $r8, $r10;
        java.lang.Integer r3, $r12;
        int i0, $i1, $i2;
        java.lang.Throwable r4, $r14;
        java.lang.Class $r5, $r7, $r11;

        r0 := @this: android.os.StrictMode$InstanceTracker;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass> = $r5;

        $r6 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r8 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r7 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (java.lang.Integer) $r9;

        if r3 == null goto label2;

        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i1 = $i2 + 1;

        goto label3;

     label2:
        $i1 = 1;

     label3:
        i0 = $i1;

        $r10 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r11 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.StrictMode$InstanceTracker r0;
        java.util.HashMap r1, $r5, $r7, $r10, $r12;
        java.lang.Integer r2, $r13;
        int i0, $i1;
        java.lang.Throwable r3, r4, $r15, $r17;
        java.lang.Class $r6, $r9, $r14;
        java.lang.Object $r8;

        r0 := @this: android.os.StrictMode$InstanceTracker;

     label01:
        $r5 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        r1 = $r5;

        entermonitor $r5;

     label02:
        $r7 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r6 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r2 = (java.lang.Integer) $r8;

        if r2 == null goto label04;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        i0 = $i1 - 1;

        if i0 <= 0 goto label03;

        $r12 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r14 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        goto label04;

     label03:
        $r10 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r9 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r9);

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r1;

     label07:
        throw r3;

     label08:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label11;

     label09:
        $r17 := @caughtexception;

        r4 = $r17;

     label10:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static int getInstanceCount(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.HashMap r1, $r4, $r5;
        java.lang.Integer r2;
        java.lang.Throwable r3, $r7;
        java.lang.Object $r6;
        int $i0;

        r0 := @parameter0: java.lang.Class;

        $r4 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (java.lang.Integer) $r6;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        goto label3;

     label2:
        $i0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $i0;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts> = $r0;

        return;
    }
}
