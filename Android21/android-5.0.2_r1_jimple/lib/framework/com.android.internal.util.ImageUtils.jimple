public class com.android.internal.util.ImageUtils extends java.lang.Object
{
    private static final int TOLERANCE;
    private static final int ALPHA_TOLERANCE;
    private static final int COMPACT_BITMAP_SIZE;
    private int[] mTempBuffer;
    private android.graphics.Bitmap mTempCompactBitmap;
    private android.graphics.Canvas mTempCompactBitmapCanvas;
    private android.graphics.Paint mTempCompactBitmapPaint;
    private final android.graphics.Matrix mTempMatrix;

    public void <init>()
    {
        com.android.internal.util.ImageUtils r0;
        android.graphics.Matrix $r1;

        r0 := @this: com.android.internal.util.ImageUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.internal.util.ImageUtils: android.graphics.Matrix mTempMatrix> = $r1;

        return;
    }

    public boolean isGrayscale(android.graphics.Bitmap)
    {
        com.android.internal.util.ImageUtils r0;
        android.graphics.Bitmap r1, $r2, $r12, $r14;
        int i0, i1, i2, i3, $i4;
        android.graphics.Matrix $r3, $r4, $r9;
        float $f0, $f1, $f2, $f3;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.Paint $r6, $r16, $r17;
        android.graphics.Canvas $r7, $r8, $r15;
        int[] $r10, $r11;
        boolean $z0;
        android.graphics.Bitmap$Config $r13;

        r0 := @this: com.android.internal.util.ImageUtils;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if i0 > 64 goto label1;

        if i1 <= 64 goto label3;

     label1:
        $r2 = r0.<com.android.internal.util.ImageUtils: android.graphics.Bitmap mTempCompactBitmap>;

        if $r2 != null goto label2;

        $r13 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r12 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(64, 64, $r13);

        r0.<com.android.internal.util.ImageUtils: android.graphics.Bitmap mTempCompactBitmap> = $r12;

        $r15 = new android.graphics.Canvas;

        $r14 = r0.<com.android.internal.util.ImageUtils: android.graphics.Bitmap mTempCompactBitmap>;

        specialinvoke $r15.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r14);

        r0.<com.android.internal.util.ImageUtils: android.graphics.Canvas mTempCompactBitmapCanvas> = $r15;

        $r17 = new android.graphics.Paint;

        specialinvoke $r17.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.android.internal.util.ImageUtils: android.graphics.Paint mTempCompactBitmapPaint> = $r17;

        $r16 = r0.<com.android.internal.util.ImageUtils: android.graphics.Paint mTempCompactBitmapPaint>;

        virtualinvoke $r16.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

     label2:
        $r3 = r0.<com.android.internal.util.ImageUtils: android.graphics.Matrix mTempMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: void reset()>();

        $r4 = r0.<com.android.internal.util.ImageUtils: android.graphics.Matrix mTempMatrix>;

        $f0 = (float) i1;

        $f3 = 64.0F / $f0;

        $f1 = (float) i0;

        $f2 = 64.0F / $f1;

        virtualinvoke $r4.<android.graphics.Matrix: void setScale(float,float,float,float)>($f3, $f2, 0.0F, 0.0F);

        $r7 = r0.<com.android.internal.util.ImageUtils: android.graphics.Canvas mTempCompactBitmapCanvas>;

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        virtualinvoke $r7.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r5);

        $r8 = r0.<com.android.internal.util.ImageUtils: android.graphics.Canvas mTempCompactBitmapCanvas>;

        $r9 = r0.<com.android.internal.util.ImageUtils: android.graphics.Matrix mTempMatrix>;

        $r6 = r0.<com.android.internal.util.ImageUtils: android.graphics.Paint mTempCompactBitmapPaint>;

        virtualinvoke $r8.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>(r1, $r9, $r6);

        r1 = r0.<com.android.internal.util.ImageUtils: android.graphics.Bitmap mTempCompactBitmap>;

        i0 = 64;

        i1 = 64;

     label3:
        i2 = i0 * i1;

        specialinvoke r0.<com.android.internal.util.ImageUtils: void ensureBufferSize(int)>(i2);

        $r11 = r0.<com.android.internal.util.ImageUtils: int[] mTempBuffer>;

        virtualinvoke r1.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r11, 0, i1, 0, 0, i1, i0);

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        $r10 = r0.<com.android.internal.util.ImageUtils: int[] mTempBuffer>;

        $i4 = $r10[i3];

        $z0 = staticinvoke <com.android.internal.util.ImageUtils: boolean isGrayscale(int)>($i4);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 1;
    }

    private void ensureBufferSize(int)
    {
        com.android.internal.util.ImageUtils r0;
        int i0, $i1;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.util.ImageUtils;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.util.ImageUtils: int[] mTempBuffer>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.util.ImageUtils: int[] mTempBuffer>;

        $i1 = lengthof $r3;

        if $i1 >= i0 goto label2;

     label1:
        $r2 = newarray (int)[i0];

        r0.<com.android.internal.util.ImageUtils: int[] mTempBuffer> = $r2;

     label2:
        return;
    }

    public static boolean isGrayscale(int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;

        i0 := @parameter0: int;

        $i5 = i0 >> 24;

        i1 = 255 & $i5;

        if i1 >= 50 goto label1;

        return 1;

     label1:
        $i6 = i0 >> 16;

        i2 = 255 & $i6;

        $i7 = i0 >> 8;

        i3 = 255 & $i7;

        i4 = 255 & i0;

        $i8 = i2 - i3;

        $i9 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        if $i9 >= 20 goto label2;

        $i10 = i2 - i4;

        $i11 = staticinvoke <java.lang.Math: int abs(int)>($i10);

        if $i11 >= 20 goto label2;

        $i12 = i3 - i4;

        $i13 = staticinvoke <java.lang.Math: int abs(int)>($i12);

        if $i13 >= 20 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.ImageUtils: int COMPACT_BITMAP_SIZE> = 64;

        <com.android.internal.util.ImageUtils: int ALPHA_TOLERANCE> = 50;

        <com.android.internal.util.ImageUtils: int TOLERANCE> = 20;

        return;
    }
}
