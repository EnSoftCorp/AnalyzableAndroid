class android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper extends android.bluetooth.BluetoothGattCallbackWrapper
{
    private static final int REGISTRATION_CALLBACK_TIMEOUT_MILLIS;
    private final android.bluetooth.le.ScanCallback mScanCallback;
    private final java.util.List mFilters;
    private android.bluetooth.le.ScanSettings mSettings;
    private android.bluetooth.IBluetoothGatt mBluetoothGatt;
    private java.util.List mResultStorages;
    private int mClientIf;
    final android.bluetooth.le.BluetoothLeScanner this$0;

    public void <init>(android.bluetooth.le.BluetoothLeScanner, android.bluetooth.IBluetoothGatt, java.util.List, android.bluetooth.le.ScanSettings, android.bluetooth.le.ScanCallback, java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        android.bluetooth.le.BluetoothLeScanner r1;
        android.bluetooth.IBluetoothGatt r2;
        java.util.List r3, r6;
        android.bluetooth.le.ScanSettings r4;
        android.bluetooth.le.ScanCallback r5;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 := @parameter0: android.bluetooth.le.BluetoothLeScanner;

        r2 := @parameter1: android.bluetooth.IBluetoothGatt;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.bluetooth.le.ScanSettings;

        r5 := @parameter4: android.bluetooth.le.ScanCallback;

        r6 := @parameter5: java.util.List;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0> = r1;

        specialinvoke r0.<android.bluetooth.BluetoothGattCallbackWrapper: void <init>()>();

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt> = r2;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mFilters> = r3;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanSettings mSettings> = r4;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback> = r5;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf> = 0;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mResultStorages> = r6;

        return;
    }

    public void startRegisteration()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r1;
        java.util.UUID r2;
        java.lang.Throwable r3, $r16;
        int $i0, $i1;
        android.os.ParcelUuid $r5;
        android.bluetooth.IBluetoothGatt $r6;
        android.bluetooth.le.ScanCallback $r7, $r11, $r15;
        android.bluetooth.le.BluetoothLeScanner $r8, $r9, $r14;
        java.util.Map $r10;
        java.lang.Exception $r13, r17;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 = r0;

        entermonitor r0;

     label01:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i0 != -1 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r6 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $r5 = new android.os.ParcelUuid;

        specialinvoke $r5.<android.os.ParcelUuid: void <init>(java.util.UUID)>(r2);

        interfaceinvoke $r6.<android.bluetooth.IBluetoothGatt: void registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback)>($r5, r0);

        virtualinvoke r0.<java.lang.Object: void wait(long)>(2000L);

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        r17 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "application registeration exception", r17);

        $r14 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r15 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        staticinvoke <android.bluetooth.le.BluetoothLeScanner: void access$000(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>($r14, $r15, 3);

     label06:
        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i1 <= 0 goto label07;

        $r9 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r10 = staticinvoke <android.bluetooth.le.BluetoothLeScanner: java.util.Map access$100(android.bluetooth.le.BluetoothLeScanner)>($r9);

        $r11 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r0);

        goto label08;

     label07:
        $r8 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.BluetoothLeScanner this$0>;

        $r7 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        staticinvoke <android.bluetooth.le.BluetoothLeScanner: void access$000(android.bluetooth.le.BluetoothLeScanner,android.bluetooth.le.ScanCallback,int)>($r8, $r7, 2);

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r1;

     label11:
        throw r3;

     label12:
        return;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void stopLeScan()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r1;
        android.os.RemoteException r2, $r12;
        java.lang.Throwable r3, $r11;
        int $i0, $i1, $i2, $i3;
        android.bluetooth.IBluetoothGatt $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 = r0;

        entermonitor r0;

     label01:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i0 > 0 goto label03;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error state, mLeHandle: ");

        $i3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r10);

        exitmonitor r1;

     label02:
        return;

     label03:
        $r5 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        interfaceinvoke $r5.<android.bluetooth.IBluetoothGatt: void stopScan(int,boolean)>($i1, 0);

        $r6 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        interfaceinvoke $r6.<android.bluetooth.IBluetoothGatt: void unregisterClient(int)>($i2);

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

        r2 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "Failed to stop scan and unregister", r2);

     label06:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf> = -1;

        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void flushPendingBatchResults()
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r1;
        android.os.RemoteException r2, $r10;
        java.lang.Throwable r3, $r11;
        int $i0, $i1, $i2;
        android.bluetooth.IBluetoothGatt $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 = r0;

        entermonitor r0;

     label01:
        $i0 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i0 > 0 goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error state, mLeHandle: ");

        $i2 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r9);

        exitmonitor r1;

     label02:
        return;

     label03:
        $r5 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        interfaceinvoke $r5.<android.bluetooth.IBluetoothGatt: void flushPendingBatchResults(int,boolean)>($i1, 0);

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothLeScanner", "Failed to get pending scan results", r2);

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onClientRegistered(int, int)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r1;
        int i0, i1, $i3, $i4;
        android.os.RemoteException r2, $r16;
        java.lang.Throwable r3, $r15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r17, $r18, $r19;
        java.lang.String $r9, $r20;
        java.util.List $r11, $r13;
        android.bluetooth.le.ScanSettings $r12;
        android.bluetooth.IBluetoothGatt $r14;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onClientRegistered() - status=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientIf=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r9);

        r1 = r0;

        entermonitor r0;

     label01:
        $i3 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i3 != -1 goto label02;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", "onClientRegistered LE scan canceled");

     label02:
        if i0 != 0 goto label06;

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf> = i1;

     label03:
        $r14 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.IBluetoothGatt mBluetoothGatt>;

        $i4 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        $r12 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanSettings mSettings>;

        $r13 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mFilters>;

        $r11 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: java.util.List mResultStorages>;

        interfaceinvoke $r14.<android.bluetooth.IBluetoothGatt: void startScan(int,boolean,android.bluetooth.le.ScanSettings,java.util.List,java.util.List)>($i4, 0, $r12, $r13, $r11);

     label04:
        goto label07;

     label05:
        $r16 := @caughtexception;

        r2 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail to start le scan: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r20);

        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf> = -1;

        goto label07;

     label06:
        r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf> = -1;

     label07:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r1;

     label10:
        throw r3;

     label11:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onScanResult(android.bluetooth.le.ScanResult)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r2;
        android.bluetooth.le.ScanResult r1;
        java.lang.Throwable r3, $r13;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        int $i1;
        android.os.Handler $r10, r14;
        android.os.Looper $r11;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1 $r12;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 := @parameter0: android.bluetooth.le.ScanResult;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onScanResult() - ");

        $r6 = virtualinvoke r1.<android.bluetooth.le.ScanResult: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r8);

        r2 = r0;

        entermonitor r0;

     label1:
        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i1 > 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 = new android.os.Handler;

        $r11 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r10.<android.os.Handler: void <init>(android.os.Looper)>($r11);

        r14 = $r10;

        $r12 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1;

        specialinvoke $r12.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,android.bluetooth.le.ScanResult)>(r0, r1);

        virtualinvoke r14.<android.os.Handler: boolean post(java.lang.Runnable)>($r12);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onBatchScanResults(java.util.List)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        java.util.List r1;
        android.os.Handler r2, $r3;
        android.os.Looper $r4;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2 $r5;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        r1 := @parameter0: java.util.List;

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r2 = $r3;

        $r5 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2;

        specialinvoke $r5.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,java.util.List)>(r0, r1);

        virtualinvoke r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void onFoundOrLost(boolean, android.bluetooth.le.ScanResult)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0, r2;
        boolean z0;
        android.bluetooth.le.ScanResult r1;
        java.lang.Throwable r3, $r15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        int $i1;
        android.os.Handler $r12, r16;
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3 $r13;
        android.os.Looper $r14;

        r0 := @this: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.bluetooth.le.ScanResult;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onFoundOrLost() - onFound = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke r1.<android.bluetooth.le.ScanResult: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothLeScanner", $r10);

        r2 = r0;

        entermonitor r0;

     label1:
        $i1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int mClientIf>;

        if $i1 > 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r12 = new android.os.Handler;

        $r14 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r12.<android.os.Handler: void <init>(android.os.Looper)>($r14);

        r16 = $r12;

        $r13 = new android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3;

        specialinvoke $r13.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3: void <init>(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper,boolean,android.bluetooth.le.ScanResult)>(r0, z0, r1);

        virtualinvoke r16.<android.os.Handler: boolean post(java.lang.Runnable)>($r13);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static android.bluetooth.le.ScanCallback access$200(android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper)
    {
        android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper r0;
        android.bluetooth.le.ScanCallback $r1;

        r0 := @parameter0: android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper;

        $r1 = r0.<android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: android.bluetooth.le.ScanCallback mScanCallback>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper: int REGISTRATION_CALLBACK_TIMEOUT_MILLIS> = 2000;

        return;
    }
}
