public final class android.database.sqlite.SQLiteQuery extends android.database.sqlite.SQLiteProgram
{
    private static final java.lang.String TAG;
    private final android.os.CancellationSignal mCancellationSignal;

    void <init>(android.database.sqlite.SQLiteDatabase, java.lang.String, android.os.CancellationSignal)
    {
        android.database.sqlite.SQLiteQuery r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;
        android.os.CancellationSignal r3;

        r0 := @this: android.database.sqlite.SQLiteQuery;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        specialinvoke r0.<android.database.sqlite.SQLiteProgram: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal)>(r1, r2, null, r3);

        r0.<android.database.sqlite.SQLiteQuery: android.os.CancellationSignal mCancellationSignal> = r3;

        return;
    }

    int fillWindow(android.database.CursorWindow, int, int, boolean)
    {
        android.database.sqlite.SQLiteQuery r0;
        android.database.CursorWindow r1;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        java.lang.Throwable r2, r3, $r8, $r19;
        android.database.sqlite.SQLiteSession $r4;
        java.lang.String $r5, $r12, $r17, $r18;
        java.lang.Object[] $r6;
        android.os.CancellationSignal $r7;
        android.database.sqlite.SQLiteException $r9, r21;
        android.database.sqlite.SQLiteDatabaseCorruptException $r10, r20;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16;

        r0 := @this: android.database.sqlite.SQLiteQuery;

        r1 := @parameter0: android.database.CursorWindow;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<android.database.sqlite.SQLiteQuery: void acquireReference()>();

     label01:
        virtualinvoke r1.<android.database.CursorWindow: void acquireReference()>();

     label02:
        $r4 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: android.database.sqlite.SQLiteSession getSession()>();

        $r5 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r6 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: java.lang.Object[] getBindArgs()>();

        $i4 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: int getConnectionFlags()>();

        $r7 = r0.<android.database.sqlite.SQLiteQuery: android.os.CancellationSignal mCancellationSignal>;

        i2 = virtualinvoke $r4.<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>($r5, $r6, r1, i0, i1, z0, $i4, $r7);

        i3 = i2;

     label03:
        virtualinvoke r1.<android.database.CursorWindow: void releaseReference()>();

     label04:
        virtualinvoke r0.<android.database.sqlite.SQLiteQuery: void releaseReference()>();

        return i3;

     label05:
        $r10 := @caughtexception;

        r20 = $r10;

        virtualinvoke r0.<android.database.sqlite.SQLiteQuery: void onCorruption()>();

        throw r20;

     label06:
        $r9 := @caughtexception;

        r21 = $r9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r12 = virtualinvoke r21.<android.database.sqlite.SQLiteException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; query: ");

        $r17 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SQLiteQuery", $r18);

        throw r21;

     label07:
        $r19 := @caughtexception;

        r2 = $r19;

     label08:
        virtualinvoke r1.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

     label09:
        $r8 := @caughtexception;

        r3 = $r8;

     label10:
        virtualinvoke r0.<android.database.sqlite.SQLiteQuery: void releaseReference()>();

        throw r3;

        catch android.database.sqlite.SQLiteDatabaseCorruptException from label02 to label03 with label05;
        catch android.database.sqlite.SQLiteException from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label08 with label07;
        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label10 with label09;
    }

    public java.lang.String toString()
    {
        android.database.sqlite.SQLiteQuery r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.database.sqlite.SQLiteQuery;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SQLiteQuery: ");

        $r3 = virtualinvoke r0.<android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <android.database.sqlite.SQLiteQuery: java.lang.String TAG> = "SQLiteQuery";

        return;
    }
}
