class android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange extends android.hardware.camera2.marshal.Marshaler
{
    private final java.lang.Class mClass;
    private final java.lang.reflect.Constructor mConstructor;
    private final android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler;
    final android.hardware.camera2.marshal.impl.MarshalQueryableRange this$0;

    protected void <init>(android.hardware.camera2.marshal.impl.MarshalQueryableRange, android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.hardware.camera2.marshal.impl.MarshalQueryableRange r1;
        android.hardware.camera2.utils.TypeReference r2, r5;
        int i0, $i1;
        java.lang.reflect.ParameterizedType r3;
        java.lang.ClassCastException r4, $r13;
        java.lang.NoSuchMethodException r6, $r15;
        java.lang.Class $r7, $r12;
        java.lang.reflect.Type $r8, r18;
        java.lang.reflect.Type[] $r9;
        android.hardware.camera2.marshal.Marshaler $r10;
        java.lang.Class[] $r11;
        java.lang.reflect.Constructor $r14;
        java.lang.AssertionError $r16, $r17;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: android.hardware.camera2.marshal.impl.MarshalQueryableRange;

        r2 := @parameter1: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter2: int;

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.impl.MarshalQueryableRange this$0> = r1;

        specialinvoke r0.<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>(r1, r2, i0);

        $r7 = virtualinvoke r2.<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>();

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.Class mClass> = $r7;

     label1:
        $r8 = virtualinvoke r2.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>();

        r3 = (java.lang.reflect.ParameterizedType) $r8;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        r4 = $r13;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("Raw use of Range is not supported", r4);

        throw $r16;

     label4:
        $r9 = interfaceinvoke r3.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        r18 = $r9[0];

        r5 = staticinvoke <android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)>(r18);

        $i1 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int mNativeType>;

        $r10 = staticinvoke <android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>(r5, $i1);

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler> = $r10;

     label5:
        $r12 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.Class mClass>;

        $r11 = newarray (java.lang.Class)[2];

        $r11[0] = class "java/lang/Comparable";

        $r11[1] = class "java/lang/Comparable";

        $r14 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r11);

        r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.reflect.Constructor mConstructor> = $r14;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        r6 = $r15;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(r6);

        throw $r17;

     label8:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    public void marshal(android.util.Range, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.util.Range r1;
        java.nio.ByteBuffer r2;
        android.hardware.camera2.marshal.Marshaler $r3, $r5;
        java.lang.Comparable $r4, $r6;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: android.util.Range;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r4 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getLower()>();

        virtualinvoke $r3.<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>($r4, r2);

        $r5 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r6 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        virtualinvoke $r5.<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>($r6, r2);

        return;
    }

    public android.util.Range unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.nio.ByteBuffer r1;
        java.lang.Comparable r2, r3;
        java.lang.InstantiationException r4, $r18;
        android.hardware.camera2.marshal.Marshaler $r5, $r7;
        java.lang.Object $r6, $r8, $r11;
        java.lang.Object[] $r9;
        java.lang.reflect.Constructor $r10;
        android.util.Range $r12;
        java.lang.IllegalAccessException $r13, r21;
        java.lang.AssertionError $r14, $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r15, r22;
        java.lang.reflect.InvocationTargetException $r16, r23;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r5 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r6 = virtualinvoke $r5.<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>(r1);

        r2 = (java.lang.Comparable) $r6;

        $r7 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r8 = virtualinvoke $r7.<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>(r1);

        r3 = (java.lang.Comparable) $r8;

     label1:
        $r10 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: java.lang.reflect.Constructor mConstructor>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r2;

        $r9[1] = r3;

        $r11 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r9);

        $r12 = (android.util.Range) $r11;

     label2:
        return $r12;

     label3:
        $r18 := @caughtexception;

        r4 = $r18;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>(r4);

        throw $r20;

     label4:
        $r13 := @caughtexception;

        r21 = $r13;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(r21);

        throw $r14;

     label5:
        $r15 := @caughtexception;

        r22 = $r15;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(r22);

        throw $r17;

     label6:
        $r16 := @caughtexception;

        r23 = $r16;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>(java.lang.Object)>(r23);

        throw $r19;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    public int getNativeSize()
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        int i0, $i1, $i2, $i3;
        android.hardware.camera2.marshal.Marshaler $r1;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        $r1 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        i0 = virtualinvoke $r1.<android.hardware.camera2.marshal.Marshaler: int getNativeSize()>();

        $i1 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        if i0 == $i1 goto label1;

        $i3 = i0 * 2;

        return $i3;

     label1:
        $i2 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        return $i2;
    }

    public int calculateMarshalSize(android.util.Range)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        android.util.Range r1;
        int i0, i1, i2, $i3, $i4;
        android.hardware.camera2.marshal.Marshaler $r2, $r4;
        java.lang.Comparable $r3, $r5;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: android.util.Range;

        i0 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int getNativeSize()>();

        $i3 = <android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int NATIVE_SIZE_DYNAMIC>;

        if i0 == $i3 goto label1;

        return i0;

     label1:
        $r2 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r3 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getLower()>();

        i1 = virtualinvoke $r2.<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>($r3);

        $r4 = r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.hardware.camera2.marshal.Marshaler mNestedTypeMarshaler>;

        $r5 = virtualinvoke r1.<android.util.Range: java.lang.Comparable getUpper()>();

        i2 = virtualinvoke $r4.<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>($r5);

        $i4 = i1 + i2;

        return $i4;
    }

    public volatile java.lang.Object unmarshal(java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.nio.ByteBuffer r1;
        android.util.Range $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: android.util.Range unmarshal(java.nio.ByteBuffer)>(r1);

        return $r2;
    }

    public volatile int calculateMarshalSize(java.lang.Object)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.lang.Object r1;
        android.util.Range $r2;
        int $i0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.util.Range) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: int calculateMarshalSize(android.util.Range)>($r2);

        return $i0;
    }

    public volatile void marshal(java.lang.Object, java.nio.ByteBuffer)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange r0;
        java.lang.Object r1;
        java.nio.ByteBuffer r2;
        android.util.Range $r3;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.nio.ByteBuffer;

        $r3 = (android.util.Range) r1;

        virtualinvoke r0.<android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange: void marshal(android.util.Range,java.nio.ByteBuffer)>($r3, r2);

        return;
    }
}
