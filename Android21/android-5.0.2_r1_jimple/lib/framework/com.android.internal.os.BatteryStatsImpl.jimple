public final class com.android.internal.os.BatteryStatsImpl extends android.os.BatteryStats
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean DEBUG_HISTORY;
    private static final boolean USE_OLD_HISTORY;
    private static final int MAGIC;
    private static final int VERSION;
    private static final int MAX_HISTORY_ITEMS;
    private static final int MAX_MAX_HISTORY_ITEMS;
    private static final int MAX_WAKELOCKS_PER_UID;
    private static int sNumSpeedSteps;
    private final com.android.internal.util.JournaledFile mFile;
    public final com.android.internal.os.AtomicFile mCheckinFile;
    static final int MSG_UPDATE_WAKELOCKS;
    static final int MSG_REPORT_POWER_CHANGE;
    static final long DELAY_UPDATE_WAKELOCKS;
    public final com.android.internal.os.BatteryStatsImpl$MyHandler mHandler;
    private com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback;
    final android.util.SparseIntArray mIsolatedUids;
    final android.util.SparseArray mUidStats;
    final java.util.ArrayList mPartialTimers;
    final java.util.ArrayList mFullTimers;
    final java.util.ArrayList mWindowTimers;
    final android.util.SparseArray mSensorTimers;
    final java.util.ArrayList mWifiRunningTimers;
    final java.util.ArrayList mFullWifiLockTimers;
    final java.util.ArrayList mWifiMulticastTimers;
    final java.util.ArrayList mWifiScanTimers;
    final android.util.SparseArray mWifiBatchedScanTimers;
    final java.util.ArrayList mAudioTurnedOnTimers;
    final java.util.ArrayList mVideoTurnedOnTimers;
    final java.util.ArrayList mLastPartialTimers;
    final com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase;
    final com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase;
    boolean mDistributeWakelockCpu;
    boolean mShuttingDown;
    final android.os.BatteryStats$HistoryEventTracker mActiveEvents;
    long mHistoryBaseTime;
    boolean mHaveBatteryLevel;
    boolean mRecordingHistory;
    int mNumHistoryItems;
    static final int MAX_HISTORY_BUFFER;
    static final int MAX_MAX_HISTORY_BUFFER;
    final android.os.Parcel mHistoryBuffer;
    final android.os.BatteryStats$HistoryItem mHistoryLastWritten;
    final android.os.BatteryStats$HistoryItem mHistoryLastLastWritten;
    final android.os.BatteryStats$HistoryItem mHistoryReadTmp;
    final android.os.BatteryStats$HistoryItem mHistoryAddTmp;
    final java.util.HashMap mHistoryTagPool;
    java.lang.String[] mReadHistoryStrings;
    int[] mReadHistoryUids;
    int mReadHistoryChars;
    int mNextHistoryTagIdx;
    int mNumHistoryTagChars;
    int mHistoryBufferLastPos;
    boolean mHistoryOverflow;
    long mLastHistoryElapsedRealtime;
    long mTrackRunningHistoryElapsedRealtime;
    long mTrackRunningHistoryUptime;
    final android.os.BatteryStats$HistoryItem mHistoryCur;
    android.os.BatteryStats$HistoryItem mHistory;
    android.os.BatteryStats$HistoryItem mHistoryEnd;
    android.os.BatteryStats$HistoryItem mHistoryLastEnd;
    android.os.BatteryStats$HistoryItem mHistoryCache;
    private android.os.BatteryStats$HistoryItem mHistoryIterator;
    private boolean mReadOverflow;
    private boolean mIteratingHistory;
    int mStartCount;
    long mStartClockTime;
    java.lang.String mStartPlatformVersion;
    java.lang.String mEndPlatformVersion;
    long mLastRecordedClockTime;
    long mLastRecordedClockRealtime;
    long mUptime;
    long mUptimeStart;
    long mRealtime;
    long mRealtimeStart;
    int mWakeLockNesting;
    boolean mWakeLockImportant;
    boolean mRecordAllHistory;
    boolean mNoAutoReset;
    int mScreenState;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer;
    int mScreenBrightnessBin;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer;
    boolean mInteractive;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer;
    boolean mLowPowerModeEnabled;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer;
    boolean mPhoneOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer;
    int mAudioOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer;
    int mVideoOnNesting;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer;
    boolean mFlashlightOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer;
    int mPhoneSignalStrengthBin;
    int mPhoneSignalStrengthBinRaw;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer;
    int mPhoneDataConnectionType;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer;
    final com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters;
    final com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters;
    boolean mWifiOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer;
    boolean mGlobalWifiRunning;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer;
    int mWifiState;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer;
    int mWifiSupplState;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer;
    int mWifiSignalStrengthBin;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer;
    boolean mBluetoothOn;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer;
    int mBluetoothState;
    final com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer;
    int mMobileRadioPowerState;
    long mMobileRadioActiveStartTime;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer;
    com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime;
    com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount;
    android.bluetooth.BluetoothHeadset mBtHeadset;
    boolean mOnBattery;
    boolean mOnBatteryInternal;
    int mDischargeStartLevel;
    int mDischargeUnplugLevel;
    int mDischargePlugLevel;
    int mDischargeCurrentLevel;
    int mCurrentBatteryLevel;
    int mLowDischargeAmountSinceCharge;
    int mHighDischargeAmountSinceCharge;
    int mDischargeScreenOnUnplugLevel;
    int mDischargeScreenOffUnplugLevel;
    int mDischargeAmountScreenOn;
    int mDischargeAmountScreenOnSinceCharge;
    int mDischargeAmountScreenOff;
    int mDischargeAmountScreenOffSinceCharge;
    static final int MAX_LEVEL_STEPS;
    int mInitStepMode;
    int mCurStepMode;
    int mModStepMode;
    int mLastDischargeStepLevel;
    long mLastDischargeStepTime;
    int mMinDischargeStepLevel;
    int mNumDischargeStepDurations;
    final long[] mDischargeStepDurations;
    int mLastChargeStepLevel;
    long mLastChargeStepTime;
    int mMaxChargeStepLevel;
    int mNumChargeStepDurations;
    final long[] mChargeStepDurations;
    long mLastWriteTime;
    private int mBluetoothPingCount;
    private int mBluetoothPingStart;
    private int mPhoneServiceState;
    private int mPhoneServiceStateRaw;
    private int mPhoneSimStateRaw;
    private final java.util.HashMap mKernelWakelockStats;
    private static int sKernelWakelockUpdateVersion;
    java.lang.String mLastWakeupReason;
    long mLastWakeupUptimeMs;
    private final java.util.HashMap mWakeupReasonStats;
    private static final int[] PROC_WAKELOCKS_FORMAT;
    private static final int[] WAKEUP_SOURCES_FORMAT;
    private final java.lang.String[] mProcWakelocksName;
    private final long[] mProcWakelocksData;
    private final java.util.Map mProcWakelockFileStats;
    private final com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory;
    private android.net.NetworkStats mCurMobileSnapshot;
    private android.net.NetworkStats mLastMobileSnapshot;
    private android.net.NetworkStats mCurWifiSnapshot;
    private android.net.NetworkStats mLastWifiSnapshot;
    private android.net.NetworkStats mTmpNetworkStats;
    private final android.net.NetworkStats$Entry mTmpNetworkStatsEntry;
    private java.lang.String[] mMobileIfaces;
    private java.lang.String[] mWifiIfaces;
    static final int DELTA_TIME_MASK;
    static final int DELTA_TIME_LONG;
    static final int DELTA_TIME_INT;
    static final int DELTA_TIME_ABS;
    static final int DELTA_BATTERY_LEVEL_FLAG;
    static final int DELTA_STATE_FLAG;
    static final int DELTA_STATE2_FLAG;
    static final int DELTA_WAKELOCK_FLAG;
    static final int DELTA_EVENT_FLAG;
    static final int DELTA_STATE_MASK;
    static final int STATE_BATTERY_STATUS_MASK;
    static final int STATE_BATTERY_STATUS_SHIFT;
    static final int STATE_BATTERY_HEALTH_MASK;
    static final int STATE_BATTERY_HEALTH_SHIFT;
    static final int STATE_BATTERY_PLUG_MASK;
    static final int STATE_BATTERY_PLUG_SHIFT;
    int mChangedStates;
    int mChangedStates2;
    private java.lang.String mInitialAcquireWakeName;
    private int mInitialAcquireWakeUid;
    int mSensorNesting;
    int mGpsNesting;
    int mWifiFullLockNesting;
    int mWifiScanNesting;
    int mWifiMulticastNesting;
    private static final int BATTERY_PLUGGED_NONE;
    static final int NET_UPDATE_MOBILE;
    static final int NET_UPDATE_WIFI;
    static final int NET_UPDATE_ALL;
    android.os.Parcel mPendingWrite;
    final java.util.concurrent.locks.ReentrantLock mWriteLock;
    public static final android.os.Parcelable$Creator CREATOR;

    public java.util.Map getKernelWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        return $r1;
    }

    public java.util.Map getWakeupReasonStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        return $r1;
    }

    public void <init>()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseIntArray $r1;
        android.util.SparseArray $r2, $r6, $r11;
        java.util.ArrayList $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r15, $r17;
        android.os.BatteryStats$HistoryEventTracker $r16;
        android.os.BatteryStats$HistoryItem $r18, $r20, $r21, $r23, $r25;
        android.os.Parcel $r19;
        java.util.HashMap $r22, $r35, $r38, $r42;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r24, $r26, $r27, $r30, $r31, $r33, $r34;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r28, $r29;
        int $i0;
        long[] $r32, $r37, $r41;
        java.lang.String[] $r36, $r48, $r49;
        com.android.internal.net.NetworkStatsFactory $r39;
        android.net.NetworkStats $r40, $r43, $r44, $r46;
        long $l1, $l2, $l3, $l4;
        android.net.NetworkStats$Entry $r45;
        java.util.concurrent.locks.ReentrantLock $r47;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r10;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r14;

        $r15 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r15.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r15;

        $r17 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r17.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r17;

        $r16 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r16.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r16;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r19 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r19;

        $r18 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r18.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r18;

        $r21 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r21.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r21;

        $r20 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r20.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r20;

        $r23 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r23.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r23;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r22;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r25 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r25.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r25;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r24 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r24;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r27 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r27;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r26 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r26;

        $r29 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r29;

        $r28 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r28;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r31 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r31;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r30 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r33 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r33;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState> = -1;

        $r34 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer> = $r34;

        $i0 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_LOW>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = $i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r32 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations> = $r32;

        $r37 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations> = $r37;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r38;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r35;

        $r36 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r36;

        $r41 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r41;

        $r42 = new java.util.HashMap;

        specialinvoke $r42.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r42;

        $r39 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r39.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r39;

        $r40 = new android.net.NetworkStats;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r40.<android.net.NetworkStats: void <init>(long,int)>($l2, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurMobileSnapshot> = $r40;

        $r44 = new android.net.NetworkStats;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r44.<android.net.NetworkStats: void <init>(long,int)>($l1, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastMobileSnapshot> = $r44;

        $r43 = new android.net.NetworkStats;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r43.<android.net.NetworkStats: void <init>(long,int)>($l4, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurWifiSnapshot> = $r43;

        $r46 = new android.net.NetworkStats;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r46.<android.net.NetworkStats: void <init>(long,int)>($l3, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiSnapshot> = $r46;

        $r45 = new android.net.NetworkStats$Entry;

        specialinvoke $r45.<android.net.NetworkStats$Entry: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats$Entry mTmpNetworkStatsEntry> = $r45;

        $r49 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces> = $r49;

        $r48 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r48;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r47 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r47.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r47;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = null;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,boolean)>($r6, 1);

        r2 = $r5;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return r2;
    }

    private final java.util.Map readKernelWakelockStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.FileInputStream r1, $r5, $r9;
        byte[] r2;
        int i0, i2;
        boolean z0;
        java.util.Map $r6;
        byte $b1;
        java.io.FileNotFoundException $r7, $r8;
        java.io.IOException $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r2 = newarray (byte)[8192];

        z0 = 0;

     label01:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/wakelocks");

        r1 = $r5;

     label02:
        goto label08;

     label03:
        $r8 := @caughtexception;

     label04:
        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>("/d/wakeup_sources");

        r1 = $r9;

        z0 = 1;

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

     label07:
        return null;

     label08:
        i0 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[])>(r2);

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        return null;

     label11:
        if i0 <= 0 goto label14;

        i2 = 0;

     label12:
        if i2 >= i0 goto label14;

        $b1 = r2[i2];

        if $b1 != 0 goto label13;

        i0 = i2;

        goto label14;

     label13:
        i2 = i2 + 1;

        goto label12;

     label14:
        $r6 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map parseProcWakelocks(byte[],int,boolean)>(r2, i0, z0);

        return $r6;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.FileNotFoundException from label04 to label05 with label06;
        catch java.io.IOException from label01 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private final java.util.Map parseProcWakelocks(byte[], int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0, r3;
        byte[] r1;
        int i0, i1, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i19, $i20, $i21, $i24, $i25, $i27, i34;
        boolean z0, $z1, $z2, z3;
        java.lang.String r2;
        long l2, $l14, $l17, $l18, $l22, $l23, $l26;
        java.util.Map r4;
        java.lang.String[] r5;
        long[] r6;
        com.android.internal.os.BatteryStatsImpl$KernelWakelockStats r7, $r11, $r16;
        java.lang.Throwable r8, $r17;
        java.util.Collection $r10;
        java.lang.Object $r12, $r14;
        int[] $r13;
        byte $b28, $b30, $b31, $b32, $b33;
        short $s29;
        java.util.Iterator r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i5 = 0;

        i6 = 0;

     label01:
        if i6 >= i0 goto label02;

        $b32 = r1[i6];

        if $b32 == 10 goto label02;

        $b31 = r1[i6];

        if $b31 == 0 goto label02;

        i6 = i6 + 1;

        goto label01;

     label02:
        $i8 = i6 + 1;

        i4 = $i8;

        i3 = $i8;

        r3 = r0;

        entermonitor r0;

     label03:
        r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats>;

        $i9 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        $i11 = $i9 + 1;

        <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion> = $i11;

     label04:
        if i4 >= i0 goto label19;

        i34 = i3;

     label05:
        if i34 >= i0 goto label06;

        $b28 = r1[i34];

        if $b28 == 10 goto label06;

        $b33 = r1[i34];

        if $b33 == 0 goto label06;

        i34 = i34 + 1;

        goto label05;

     label06:
        i4 = i34 + 1;

        $i15 = i0 - 1;

        if i4 < $i15 goto label08;

        exitmonitor r3;

     label07:
        return r4;

     label08:
        r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName>;

        r6 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData>;

        i7 = i3;

     label09:
        if i7 >= i4 goto label11;

        $b30 = r1[i7];

        $s29 = $b30 & 128;

        if $s29 == 0 goto label10;

        r1[i7] = 63;

     label10:
        i7 = i7 + 1;

        goto label09;

     label11:
        if z0 == 0 goto label12;

        $r13 = <com.android.internal.os.BatteryStatsImpl: int[] WAKEUP_SOURCES_FORMAT>;

        goto label13;

     label12:
        $r13 = <com.android.internal.os.BatteryStatsImpl: int[] PROC_WAKELOCKS_FORMAT>;

     label13:
        z3 = staticinvoke <android.os.Process: boolean parseProcLine(byte[],int,int,int[],java.lang.String[],long[],float[])>(r1, i3, i4, $r13, r5, r6, null);

        r2 = r5[0];

        $l14 = r6[1];

        i1 = (int) $l14;

        if z0 == 0 goto label14;

        $l26 = r6[2];

        l2 = $l26 * 1000L;

        goto label15;

     label14:
        $l17 = r6[2];

        $l18 = $l17 + 500L;

        l2 = $l18 / 1000L;

     label15:
        if z3 == 0 goto label18;

        $i16 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i16 <= 0 goto label18;

        $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z2 != 0 goto label16;

        $r16 = new com.android.internal.os.BatteryStatsImpl$KernelWakelockStats;

        $i27 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        specialinvoke $r16.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: void <init>(com.android.internal.os.BatteryStatsImpl,int,long,int)>(r0, i1, l2, $i27);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r16);

        i5 = i5 + 1;

        goto label18;

     label16:
        $r14 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r7 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r14;

        $i19 = r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion>;

        $i21 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i19 != $i21 goto label17;

        $i24 = r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount>;

        $i25 = $i24 + i1;

        r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount> = $i25;

        $l22 = r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime>;

        $l23 = $l22 + l2;

        r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime> = $l23;

        goto label18;

     label17:
        r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount> = i1;

        r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime> = l2;

        $i20 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        r7.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion> = $i20;

        i5 = i5 + 1;

     label18:
        i3 = i4;

        goto label04;

     label19:
        $i10 = interfaceinvoke r4.<java.util.Map: int size()>();

        if $i10 == i5 goto label21;

        $r10 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>();

        r18 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r12;

        $i12 = $r11.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mVersion>;

        $i13 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i12 == $i13 goto label20;

        interfaceinvoke r18.<java.util.Iterator: void remove()>();

        goto label20;

     label21:
        exitmonitor r3;

     label22:
        return r4;

     label23:
        $r17 := @caughtexception;

        r8 = $r17;

        exitmonitor r3;

     label24:
        throw r8;

        catch java.lang.Throwable from label03 to label07 with label23;
        catch java.lang.Throwable from label08 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r2, $r5;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r4;

        if r2 != null goto label1;

        $r5 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,boolean)>($r6, 1);

        r2 = $r5;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label1:
        return r2;
    }

    private int getCurrentBluetoothPingCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.List r1;
        android.bluetooth.BluetoothHeadset $r2, $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        android.bluetooth.BluetoothDevice $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        r1 = virtualinvoke $r3.<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (android.bluetooth.BluetoothDevice) $r5;

        $i1 = virtualinvoke $r4.<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>($r6);

        return $i1;

     label1:
        return -1;
    }

    public int getBluetoothPingCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.bluetooth.BluetoothHeadset $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        if $i0 != -1 goto label1;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount>;

        return $i4;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r1 == null goto label2;

        $i1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        $i3 = $i1 - $i2;

        return $i3;

     label2:
        return 0;
    }

    public void setBtHeadset(android.bluetooth.BluetoothHeadset)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.bluetooth.BluetoothHeadset r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.bluetooth.BluetoothHeadset;

        if r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset>;

        if $r2 != null goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart>;

        if $i0 != -1 goto label1;

        $i1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = $i1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: android.bluetooth.BluetoothHeadset mBtHeadset> = r1;

        return;
    }

    private int writeHistoryTag(android.os.BatteryStats$HistoryTag)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryTag r1, r3, $r6;
        java.lang.Integer r2, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.HashMap $r4, $r7;
        java.lang.Object $r5;
        java.lang.String $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryTag;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        $r6 = new android.os.BatteryStats$HistoryTag;

        specialinvoke $r6.<android.os.BatteryStats$HistoryTag: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>(r1);

        r1.<android.os.BatteryStats$HistoryTag: int poolIdx> = i0;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r8);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        $i2 = $i1 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = $i2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars>;

        $r10 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i6 = $i4 + 1;

        $i5 = $i3 + $i6;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = $i5;

     label2:
        return i0;
    }

    private void readHistoryTag(int, android.os.BatteryStats$HistoryTag)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        android.os.BatteryStats$HistoryTag r1;
        java.lang.String[] $r2;
        java.lang.String $r3;
        int[] $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.BatteryStats$HistoryTag;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $r3 = $r2[i0];

        r1.<android.os.BatteryStats$HistoryTag: java.lang.String string> = $r3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i1 = $r4[i0];

        r1.<android.os.BatteryStats$HistoryTag: int uid> = $i1;

        r1.<android.os.BatteryStats$HistoryTag: int poolIdx> = i0;

        return;
    }

    public void writeHistoryDelta(android.os.Parcel, android.os.BatteryStats$HistoryItem, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.os.BatteryStats$HistoryItem r2, r3;
        long l0, $l10, $l11;
        int i1, i2, i3, i4, i5, i6, i7, i9, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i28, i29;
        boolean z0, z1, z2, $z3, $z4, $z5;
        byte $b8, $b13, $b26, $b27;
        android.os.BatteryStats$HistoryTag $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.BatteryStats$HistoryItem;

        r3 := @parameter2: android.os.BatteryStats$HistoryItem;

        if r3 == null goto label01;

        $b8 = r2.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b8 == 0 goto label02;

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(524285);

        virtualinvoke r2.<android.os.BatteryStats$HistoryItem: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        return;

     label02:
        $l10 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l11 = r3.<android.os.BatteryStats$HistoryItem: long time>;

        l0 = $l10 - $l11;

        i1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)>(r3);

        i2 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildStateInt(android.os.BatteryStats$HistoryItem)>(r3);

        $b13 = l0 cmp 0L;

        if $b13 < 0 goto label03;

        $b27 = l0 cmp 2147483647L;

        if $b27 <= 0 goto label04;

     label03:
        i3 = 524287;

        goto label06;

     label04:
        $b26 = l0 cmp 524285L;

        if $b26 < 0 goto label05;

        i3 = 524286;

        goto label06;

     label05:
        i3 = (int) l0;

     label06:
        $i12 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i14 = $i12 & -16777216;

        i4 = i3 | $i14;

        i5 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)>(r2);

        if i5 == i1 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z0 = $z5;

        if z0 == 0 goto label09;

        i4 = i4 | 524288;

     label09:
        i6 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int buildStateInt(android.os.BatteryStats$HistoryItem)>(r2);

        if i6 == i2 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        z1 = $z3;

        if z1 == 0 goto label12;

        i4 = i4 | 1048576;

     label12:
        $i16 = r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i15 = r3.<android.os.BatteryStats$HistoryItem: int states2>;

        if $i16 == $i15 goto label13;

        $z4 = 1;

        goto label14;

     label13:
        $z4 = 0;

     label14:
        z2 = $z4;

        if z2 == 0 goto label15;

        i4 = i4 | 2097152;

     label15:
        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r4 != null goto label16;

        $r12 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r12 == null goto label17;

     label16:
        i4 = i4 | 4194304;

     label17:
        $i17 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i17 == 0 goto label18;

        i4 = i4 | 8388608;

     label18:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i4);

        if i3 < 524286 goto label20;

        if i3 != 524286 goto label19;

        $i25 = (int) l0;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        goto label20;

     label19:
        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

     label20:
        if z0 == 0 goto label21;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

     label21:
        if z1 == 0 goto label22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i6);

     label22:
        if z2 == 0 goto label23;

        $i24 = r2.<android.os.BatteryStats$HistoryItem: int states2>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

     label23:
        $r5 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r5 != null goto label24;

        $r10 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r10 == null goto label29;

     label24:
        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r6 == null goto label25;

        $r11 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        i7 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r11);

        goto label26;

     label25:
        i7 = 65535;

     label26:
        $r7 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r7 == null goto label27;

        $r9 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        i9 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r9);

        goto label28;

     label27:
        i9 = 65535;

     label28:
        $i18 = i9 << 16;

        $i19 = $i18 | i7;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

     label29:
        $i21 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i21 == 0 goto label30;

        $r8 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        i28 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int writeHistoryTag(android.os.BatteryStats$HistoryTag)>($r8);

        $i20 = r2.<android.os.BatteryStats$HistoryItem: int eventCode>;

        $i23 = $i20 & 65535;

        $i22 = i28 << 16;

        i29 = $i23 | $i22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i29);

     label30:
        return;
    }

    private int buildBatteryLevelInt(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        byte $b0;
        int $i1, $i3, $i4, $i5, $i8, $i9;
        short $s2;
        char $c6, $c7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $b0 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $i1 = $b0 << 25;

        $i5 = $i1 & -33554432;

        $s2 = r1.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i3 = $s2 << 14;

        $i4 = $i3 & 33538048;

        $i8 = $i5 | $i4;

        $c6 = r1.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $c7 = $c6 & 16383;

        $i9 = $i8 | $c7;

        return $i9;
    }

    private int buildStateInt(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        byte b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b13;
        int $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        b0 = 0;

        $b1 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b2 = $b1 & 1;

        if $b2 == 0 goto label1;

        b0 = 1;

        goto label3;

     label1:
        $b3 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b4 = $b3 & 2;

        if $b4 == 0 goto label2;

        b0 = 2;

        goto label3;

     label2:
        $b5 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b6 = $b5 & 4;

        if $b6 == 0 goto label3;

        b0 = 3;

     label3:
        $b7 = r1.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $b8 = $b7 & 7;

        $i12 = $b8 << 29;

        $b9 = r1.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        $b10 = $b9 & 7;

        $i11 = $b10 << 26;

        $i14 = $i12 | $i11;

        $b13 = b0 & 3;

        $i15 = $b13 << 24;

        $i19 = $i14 | $i15;

        $i17 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i16 = $i17 & 16777215;

        $i18 = $i19 | $i16;

        return $i18;
    }

    public void readHistoryDelta(android.os.Parcel, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        android.os.BatteryStats$HistoryItem r2;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i35, $i36, $i38, $i39, $i41, $i43, $i44, $i46, $i48, $i51, $i52, $i53, $i54, $i59, $i60, i63, i64, i65, i66, i67;
        long $l5, $l6, $l49, $l50, $l55, $l56, $l57, $l58, $l61, l62;
        android.os.BatteryStats$HistoryTag $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b33, $b34, $b37, $b40, $b42;
        char $c45;
        short $s47;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.BatteryStats$HistoryItem;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = i0 & 524287;

        r2.<android.os.BatteryStats$HistoryItem: byte cmd> = 0;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = 1;

        if i1 >= 524285 goto label01;

        $l56 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l61 = (long) i1;

        $l57 = $l56 + $l61;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l57;

        goto label04;

     label01:
        if i1 != 524285 goto label02;

        $l58 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l58;

        $i59 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i60 = $i59 + 2;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i60;

        virtualinvoke r2.<android.os.BatteryStats$HistoryItem: void readFromParcel(android.os.Parcel)>(r1);

        return;

     label02:
        if i1 != 524286 goto label03;

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $l49 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l55 = (long) i2;

        $l50 = $l49 + $l55;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l50;

        $i51 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i52 = $i51 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i52;

        goto label04;

     label03:
        l62 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $l5 = r2.<android.os.BatteryStats$HistoryItem: long time>;

        $l6 = $l5 + l62;

        r2.<android.os.BatteryStats$HistoryItem: long time> = $l6;

        $i7 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i8 = $i7 + 2;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i8;

     label04:
        $i9 = i0 & 524288;

        if $i9 == 0 goto label05;

        i63 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i44 = i63 >> 25;

        $i43 = $i44 & 127;

        $b42 = (byte) $i43;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b42;

        $i41 = i63 << 7;

        $i48 = $i41 >> 21;

        $s47 = (short) $i48;

        r2.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s47;

        $i46 = i63 & 16383;

        $c45 = (char) $i46;

        r2.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c45;

        $i53 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i54 = $i53 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i54;

     label05:
        $i10 = i0 & 1048576;

        if $i10 == 0 goto label10;

        i64 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i29 = i0 & -16777216;

        $i28 = i64 & 16777215;

        $i26 = $i29 | $i28;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i26;

        $i27 = i64 >> 29;

        $i32 = $i27 & 7;

        $b33 = (byte) $i32;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b33;

        $i30 = i64 >> 26;

        $i31 = $i30 & 7;

        $b37 = (byte) $i31;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b37;

        $i36 = i64 >> 24;

        $i35 = $i36 & 3;

        $b34 = (byte) $i35;

        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b34;

        $b40 = r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        tableswitch($b40)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            default: goto label09;
        };

     label06:
        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = 1;

        goto label09;

     label07:
        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = 2;

        goto label09;

     label08:
        r2.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = 4;

     label09:
        $i39 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i38 = $i39 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i38;

        goto label11;

     label10:
        $i14 = i0 & -16777216;

        $i12 = r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i11 = $i12 & 16777215;

        $i13 = $i14 | $i11;

        r2.<android.os.BatteryStats$HistoryItem: int states> = $i13;

     label11:
        $i16 = i0 & 2097152;

        if $i16 == 0 goto label12;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<android.os.BatteryStats$HistoryItem: int states2> = $i25;

     label12:
        $i15 = i0 & 4194304;

        if $i15 == 0 goto label17;

        i65 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = i65 & 65535;

        $i22 = i65 >> 16;

        i4 = $i22 & 65535;

        if i3 == 65535 goto label13;

        $r7 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r7;

        $r8 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>(i3, $r8);

        goto label14;

     label13:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

     label14:
        if i4 == 65535 goto label15;

        $r5 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r5;

        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>(i4, $r6);

        goto label16;

     label15:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

     label16:
        $i23 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i24 = $i23 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i24;

        goto label18;

     label17:
        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

     label18:
        $i17 = i0 & 8388608;

        if $i17 == 0 goto label19;

        $r3 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r3;

        i66 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i18 = i66 & 65535;

        r2.<android.os.BatteryStats$HistoryItem: int eventCode> = $i18;

        $i19 = i66 >> 16;

        i67 = $i19 & 65535;

        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryTag(int,android.os.BatteryStats$HistoryTag)>(i67, $r4);

        $i21 = r2.<android.os.BatteryStats$HistoryItem: int numReadInts>;

        $i20 = $i21 + 1;

        r2.<android.os.BatteryStats$HistoryItem: int numReadInts> = $i20;

        goto label20;

     label19:
        r2.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

     label20:
        return;
    }

    public void commitCurrentHistoryBatchLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r1.<android.os.BatteryStats$HistoryItem: byte cmd> = -1;

        return;
    }

    void addHistoryBufferLocked(long, long, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, $l8, $l9, $l10, $l20, $l21, $l48, $l49;
        android.os.BatteryStats$HistoryItem r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r32, $r34, $r36, $r40, $r41, $r46;
        int i3, i4, i5, i6, i7, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i22, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i35, $i36, $i50, $i52, $i53, $i54, $i55;
        boolean $z0, $z1, $z2;
        android.os.Parcel $r9, $r26, $r27;
        byte $b23, $b24, $b33, $b34, $b37, $b38, $b39, $b40, $b41, $b42, $b46, $b47;
        android.os.BatteryStats$HistoryTag $r15, $r19, $r31, $r33, $r35, $r37, $r38, $r39, $r42, $r43, $r44, $r45, $r47, $r48, $r49;
        short $s43, $s44;
        char $c45, $c51;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.os.BatteryStats$HistoryItem;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z0 == 0 goto label01;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z1 != 0 goto label02;

     label01:
        return;

     label02:
        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l10 = $l8 + l0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l9 = $r2.<android.os.BatteryStats$HistoryItem: long time>;

        l2 = $l10 - $l9;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i11 = $r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i12 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        i3 = $i11 ^ $i12;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i14 = $r4.<android.os.BatteryStats$HistoryItem: int states2>;

        $i13 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        i4 = $i14 ^ $i13;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i16 = $r5.<android.os.BatteryStats$HistoryItem: int states>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $i15 = $r6.<android.os.BatteryStats$HistoryItem: int states>;

        i5 = $i16 ^ $i15;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i18 = $r7.<android.os.BatteryStats$HistoryItem: int states2>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $i17 = $r8.<android.os.BatteryStats$HistoryItem: int states2>;

        i6 = $i18 ^ $i17;

        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        if $i19 < 0 goto label09;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b34 = $r13.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b34 != 0 goto label09;

        $b33 = l2 cmp 1000L;

        if $b33 >= 0 goto label09;

        $i32 = i3 & i5;

        if $i32 != 0 goto label09;

        $i35 = i4 & i6;

        if $i35 != 0 goto label09;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r15 = $r16.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r15 == null goto label03;

        $r49 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r49 != null goto label09;

     label03:
        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r19 = $r14.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r19 == null goto label04;

        $r42 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r42 != null goto label09;

     label04:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i36 = $r18.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i36 == 0 goto label05;

        $i55 = r1.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i55 != 0 goto label09;

     label05:
        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b41 = $r17.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $b40 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b41 != $b40 goto label09;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b37 = $r21.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $b42 = r1.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b37 != $b42 goto label09;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b39 = $r20.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        $b38 = r1.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        if $b39 != $b38 goto label09;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b47 = $r23.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        $b46 = r1.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b47 != $b46 goto label09;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $s44 = $r24.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $s43 = r1.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        if $s44 != $s43 goto label09;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $c51 = $r22.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $c45 = r1.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        if $c51 != $c45 goto label09;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i50 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r27.<android.os.Parcel: void setDataSize(int)>($i50);

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i52 = r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos>;

        virtualinvoke $r26.<android.os.Parcel: void setDataPosition(int)>($i52);

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l48 = $r25.<android.os.BatteryStats$HistoryItem: long time>;

        $l49 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        l0 = $l48 - $l49;

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r31 = $r32.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r31 == null goto label06;

        $r45 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r45;

        $r44 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r43 = $r46.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        virtualinvoke $r44.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r43);

     label06:
        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r33 = $r34.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        if $r33 == null goto label07;

        $r35 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r35;

        $r48 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r47 = $r36.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        virtualinvoke $r48.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r47);

     label07:
        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i53 = $r28.<android.os.BatteryStats$HistoryItem: int eventCode>;

        if $i53 == 0 goto label08;

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i54 = $r41.<android.os.BatteryStats$HistoryItem: int eventCode>;

        r1.<android.os.BatteryStats$HistoryItem: int eventCode> = $i54;

        $r39 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r39;

        $r38 = r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r37 = $r40.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        virtualinvoke $r38.<android.os.BatteryStats$HistoryTag: void setTo(android.os.BatteryStats$HistoryTag)>($r37);

     label08:
        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r29.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r30);

     label09:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i7 = virtualinvoke $r9.<android.os.Parcel: int dataSize()>();

        if i7 < 262144 goto label13;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow>;

        if $z2 != 0 goto label10;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, 0, r1);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, 6, r1);

        return;

     label10:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b24 = $r10.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        $b23 = r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b24 != $b23 goto label12;

        if i7 >= 327680 goto label11;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i26 = $r11.<android.os.BatteryStats$HistoryItem: int states>;

        $i22 = r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i27 = $i26 ^ $i22;

        $i25 = $i27 & 1900544;

        if $i25 == 0 goto label11;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $i30 = $r12.<android.os.BatteryStats$HistoryItem: int states2>;

        $i31 = r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i29 = $i30 ^ $i31;

        $i28 = $i29 & -1879048192;

        if $i28 != 0 goto label12;

     label11:
        return;

     label12:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, 0, r1);

        return;

     label13:
        if i7 != 0 goto label14;

        $l20 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l20;

        $l21 = r1.<android.os.BatteryStats$HistoryItem: long currentTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime> = $l21;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockRealtime> = l0;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, 7, r1);

     label14:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, 0, r1);

        return;
    }

    private void addHistoryBufferLocked(long, long, byte, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l4, $l5;
        byte b2;
        android.os.BatteryStats$HistoryItem r1, $r3, $r4, $r5, $r6, $r8;
        boolean $z0;
        android.os.Parcel $r2, $r7;
        int $i3;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        b2 := @parameter2: byte;

        r1 := @parameter3: android.os.BatteryStats$HistoryItem;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory>;

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t do this while iterating history!");

        throw $r9;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i3 = virtualinvoke $r2.<android.os.Parcel: int dataPosition()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = $i3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r4.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l5 = $l4 + l0;

        virtualinvoke $r5.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l5, b2, r1);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem,android.os.BatteryStats$HistoryItem)>($r7, $r8, $r6);

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = l0;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

        r1.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = null;

        return;
    }

    void addHistoryRecordLocked(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3, l4, $l5, $l9, $l10, $l11, $l12;
        byte $b6, $b13;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i7, $i8, $i14, $i15;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l5 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label1;

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime>;

        l2 = l0 - $l9;

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime>;

        l3 = l1 - $l11;

        $l10 = l2 - 20L;

        $b13 = l3 cmp $l10;

        if $b13 >= 0 goto label1;

        $l12 = l2 - l3;

        l4 = l0 - $l12;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r3.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>($r4);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r6.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r5.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = null;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $r8.<android.os.BatteryStats$HistoryItem: int eventCode> = 0;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        $i15 = $r7.<android.os.BatteryStats$HistoryItem: int states>;

        $i14 = $i15 & 2147483647;

        $r7.<android.os.BatteryStats$HistoryItem: int states> = $i14;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordInnerLocked(long,long,android.os.BatteryStats$HistoryItem)>(l4, l1, $r9);

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = $i7 | -2147483648;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = l1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordInnerLocked(long,long,android.os.BatteryStats$HistoryItem)>(l0, l1, $r2);

        return;
    }

    void addHistoryRecordInnerLocked(long, long, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        android.os.BatteryStats$HistoryItem r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: android.os.BatteryStats$HistoryItem;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,android.os.BatteryStats$HistoryItem)>(l0, l1, r1);

        return;
    }

    void addHistoryEventLocked(long, long, int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, i3;
        java.lang.String r1;
        android.os.BatteryStats$HistoryItem $r2, $r3, $r5, $r6, $r8;
        android.os.BatteryStats$HistoryTag $r4, $r7, $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r2.<android.os.BatteryStats$HistoryItem: int eventCode> = i2;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r4 = $r3.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localEventTag>;

        $r5.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag> = $r4;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r7 = $r6.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r7.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r9 = $r8.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag eventTag>;

        $r9.<android.os.BatteryStats$HistoryTag: int uid> = i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        return;
    }

    void addHistoryRecordLocked(long, long, byte, android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l3, $l4;
        byte b2;
        android.os.BatteryStats$HistoryItem r1, r2, $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        b2 := @parameter2: byte;

        r1 := @parameter3: android.os.BatteryStats$HistoryItem;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache>;

        if r2 == null goto label1;

        $r4 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCache> = $r4;

        goto label2;

     label1:
        $r3 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r3.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r2 = $r3;

     label2:
        $l3 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l4 = $l3 + l0;

        virtualinvoke r2.<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>($l4, b2, r1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)>(r2);

        return;
    }

    void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryItems> = $i1;

        r1.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = null;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastEnd> = $r2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd>;

        $r4.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryEnd> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory> = r1;

     label2:
        return;
    }

    void clearHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2, $r3;
        android.os.BatteryStats$HistoryItem $r4, $r5;
        java.util.HashMap $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r1.<android.os.Parcel: void setDataSize(int)>(0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r3.<android.os.Parcel: void setDataCapacity(int)>(131072);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten>;

        virtualinvoke $r4.<android.os.BatteryStats$HistoryItem: void clear()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        virtualinvoke $r5.<android.os.BatteryStats$HistoryItem: void clear()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockRealtime> = 0L;

        return;
    }

    public void updateTimeBasesLocked(boolean, boolean, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1, z2, $z3, $z4, $z6;
        long l0, l1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r2, $r3;
        int $i2, $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z3 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean setRunning(boolean,long,long)>(z0, l0, l1);

        if $z3 == 0 goto label2;

        if z0 == 0 goto label1;

        $i3 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getCurrentBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = $i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = 0;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

     label2:
        if z0 == 0 goto label3;

        if z1 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z2 = $z6;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z4 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if z2 == $z4 goto label6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestWakelockCpuUpdate()>();

        if z2 != 0 goto label5;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mDistributeWakelockCpu> = 1;

     label5:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean setRunning(boolean,long,long)>(z2, l0, l1);

     label6:
        return;
    }

    public void addIsolatedUidLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        virtualinvoke $r1.<android.util.SparseIntArray: void put(int,int)>(i0, i1);

        return;
    }

    public void removeIsolatedUidLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        i2 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i2 != i1 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        virtualinvoke $r2.<android.util.SparseIntArray: void delete(int)>(i0);

     label1:
        return;
    }

    public int mapUid(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids>;

        i1 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 <= 0 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        return $i2;
    }

    public void noteEventLocked(int, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i4;
        java.lang.String r1;
        long l2, l3;
        android.os.BatteryStats$HistoryEventTracker $r2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r2.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(i0, r1, i4, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l2, l3, i0, r1, i4);

        return;
    }

    public void noteCurrentTimeChangedLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3, $l4, $l6, $l7, $l8, $l9, $l10;
        boolean $z0, $z1;
        byte $b5, $b11, $b12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isStartClockTimeValid()>();

        if $z0 == 0 goto label1;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label1;

        $l9 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime>;

        $l7 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockRealtime>;

        $l6 = l1 - $l7;

        l3 = $l9 + $l6;

        $l8 = l3 - 500L;

        $b11 = l0 cmp $l8;

        if $b11 < 0 goto label1;

        $l10 = l3 + 500L;

        $b12 = l0 cmp $l10;

        if $b12 > 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordCurrentTimeChangeLocked(long,long,long)>(l0, l1, l2);

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isStartClockTimeValid()>();

        if $z1 == 0 goto label2;

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = l0;

     label2:
        return;
    }

    public void noteProcessStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i2;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        long l1, l3;
        boolean $z0, $z1, $z2;
        android.os.BatteryStats$HistoryEventTracker $r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        $r4 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incStartsLocked()>();

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z1 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32769, r1, i2, 0);

        if $z1 != 0 goto label2;

        return;

     label2:
        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z2 != 0 goto label3;

        return;

     label3:
        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l3, l1, 32769, r1, i2);

        return;
    }

    public void noteProcessStateLocked(java.lang.String, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i1, i3;
        long l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void updateProcessStateLocked(java.lang.String,int,long)>(r1, i1, l2);

        return;
    }

    public void noteProcessFinishLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3;
        long l1, l2;
        android.os.BatteryStats$HistoryEventTracker $r2;
        boolean $z0, $z1;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r2.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16385, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void updateProcessStateLocked(java.lang.String,int,long)>(r1, 3, l1);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z1 != 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 16385, r1, i3);

        return;
    }

    public void noteSyncStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        android.os.BatteryStats$HistoryEventTracker $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSyncLocked(java.lang.String,long)>(r1, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32772, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 32772, r1, i3);

        return;
    }

    public void noteSyncFinishLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        android.os.BatteryStats$HistoryEventTracker $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSyncLocked(java.lang.String,long)>(r1, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16388, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 16388, r1, i3);

        return;
    }

    public void noteJobStartLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        android.os.BatteryStats$HistoryEventTracker $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartJobLocked(java.lang.String,long)>(r1, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32774, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 32774, r1, i3);

        return;
    }

    public void noteJobFinishLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0, i3;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r2;
        android.os.BatteryStats$HistoryEventTracker $r3;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopJobLocked(java.lang.String,long)>(r1, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z0 = virtualinvoke $r3.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16390, r1, i3, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l1, l2, 16390, r1, i3);

        return;
    }

    private void requestWakelockCpuUpdate()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Message r1;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean hasMessages(int)>(1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        r1 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$MyHandler: android.os.Message obtainMessage(int)>(1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>(r1, 5000L);

     label1:
        return;
    }

    public void setRecordAllHistoryLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1, $z2;
        java.util.HashMap r1, r18;
        long l0, l1, l7, l8;
        java.util.Iterator r2, r19;
        java.util.Map$Entry r3, r20;
        android.util.SparseIntArray r4, r21;
        int i2, $i3, $i4, $i5, $i6, i9;
        android.os.BatteryStats$HistoryEventTracker $r5, $r11, $r12;
        java.util.Set $r6, $r13;
        java.lang.Object $r7, $r8, $r10, $r14, $r15, $r17;
        java.lang.String $r9, $r16;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory> = z0;

        if z0 != 0 goto label5;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        virtualinvoke $r11.<android.os.BatteryStats$HistoryEventTracker: void removeEvents(int)>(5);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r1 = virtualinvoke $r12.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(1);

        if r1 == null goto label4;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r13 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r15;

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (android.util.SparseIntArray) $r14;

        i2 = 0;

     label2:
        $i5 = virtualinvoke r4.<android.util.SparseIntArray: int size()>();

        if i2 >= $i5 goto label3;

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r17;

        $i6 = virtualinvoke r4.<android.util.SparseIntArray: int keyAt(int)>(i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, 16385, $r16, $i6);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        goto label9;

     label5:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r18 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(1);

        if r18 == null goto label9;

        l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = virtualinvoke r18.<java.util.HashMap: java.util.Set entrySet()>();

        r19 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r8;

        $r7 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        r21 = (android.util.SparseIntArray) $r7;

        i9 = 0;

     label7:
        $i3 = virtualinvoke r21.<android.util.SparseIntArray: int size()>();

        if i9 >= $i3 goto label8;

        $r10 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r10;

        $i4 = virtualinvoke r21.<android.util.SparseIntArray: int keyAt(int)>(i9);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l7, l8, 32769, $r9, $i4);

        i9 = i9 + 1;

        goto label7;

     label8:
        goto label6;

     label9:
        return;
    }

    public void setNoAutoReset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mNoAutoReset> = z0;

        return;
    }

    public void noteStartWakeLocked(int, int, java.lang.String, java.lang.String, int, boolean, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i5, $i6, $i7, $i9, $i10, i11;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2, $z3, $z4;
        long l3, l4;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        byte $b8;
        android.os.BatteryStats$HistoryItem $r4, $r6, $r7, $r8, $r9, $r12, $r14, $r15, $r17, $r18, $r19, $r21;
        android.os.BatteryStats$HistoryTag $r5, $r10, $r11, $r13, $r16, $r20, $r22;
        android.os.BatteryStats$HistoryEventTracker $r23;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        l3 := @parameter6: long;

        l4 := @parameter7: long;

        i11 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        if i2 != 0 goto label8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void aggregateLastWakeupUptimeLocked(long)>(l4);

        if r2 != null goto label1;

        r2 = r1;

     label1:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z1 == 0 goto label2;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z3 = virtualinvoke $r23.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(32773, r2, i11, 0);

        if $z3 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l3, l4, 32773, r2, i11);

     label2:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i5 != 0 goto label5;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i9 = $r15.<android.os.BatteryStats$HistoryItem: int states>;

        $i10 = $i9 | 1073741824;

        $r15.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r16 = $r18.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        $r17.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r16;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r22 = $r21.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = r2;

        $r22.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r2;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r20 = $r19.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = i11;

        $r20.<android.os.BatteryStats$HistoryTag: int uid> = i11;

        if z0 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant> = $z4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

        goto label7;

     label5:
        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant>;

        if $z2 != 0 goto label7;

        if z0 != 0 goto label7;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $b8 = $r4.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b8 != 0 goto label7;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r5 = $r6.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        if $r5 == null goto label6;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten>;

        $r8.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = null;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r10 = $r7.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakelockTag>;

        $r9.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag> = $r10;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r11 = $r12.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = r2;

        $r11.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r2;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r13 = $r14.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakelockTag>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = i11;

        $r13.<android.os.BatteryStats$HistoryTag: int uid> = i11;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

     label6:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWakeLockImportant> = 1;

     label7:
        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i6 = $i7 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i6;

     label8:
        if i11 < 0 goto label9;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestWakelockCpuUpdate()>();

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i11);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartWakeLocked(int,java.lang.String,int,long)>(i1, r1, i2, l3);

     label9:
        return;
    }

    public void noteStopWakeLocked(int, int, java.lang.String, java.lang.String, int, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String r1, r2;
        long l3, l4;
        com.android.internal.os.BatteryStatsImpl$Uid $r3;
        boolean $z0, $z1;
        android.os.BatteryStats$HistoryItem $r4;
        android.os.BatteryStats$HistoryEventTracker $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        i10 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        if i2 != 0 goto label3;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        $i6 = $i5 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting> = $i6;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z0 == 0 goto label2;

        if r2 != null goto label1;

        r2 = r1;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        $z1 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>(16389, r2, i10, 0);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l3, l4, 16389, r2, i10);

     label2:
        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mWakeLockNesting>;

        if $i7 != 0 goto label3;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i8 = $r4.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = $i8 & -1073741825;

        $r4.<android.os.BatteryStats$HistoryItem: int states> = $i9;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mInitialAcquireWakeName> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

     label3:
        if i10 < 0 goto label4;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void requestWakelockCpuUpdate()>();

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i10);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopWakeLocked(int,java.lang.String,int,long)>(i1, r1, i2, l3);

     label4:
        return;
    }

    public void noteStartWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i4, i5, $i6;
        java.lang.String r2, r3;
        boolean z0;
        long l2, l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i4 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,java.lang.String,int,boolean,long,long)>($i6, i0, r2, r3, i1, z0, l2, l3);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteChangeWakelockFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int, android.os.WorkSource, int, java.lang.String, java.lang.String, int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1, r4;
        int i0, i1, i2, i3, i6, i7, i8, $i9, $i10, i11;
        java.lang.String r2, r3, r5, r6;
        boolean z0;
        long l4, l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.os.WorkSource;

        i2 := @parameter6: int;

        r5 := @parameter7: java.lang.String;

        r6 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

        z0 := @parameter10: boolean;

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i7 = virtualinvoke r4.<android.os.WorkSource: int size()>();

        i6 = 0;

     label1:
        if i6 >= i7 goto label2;

        $i10 = virtualinvoke r4.<android.os.WorkSource: int get(int)>(i6);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,java.lang.String,int,boolean,long,long)>($i10, i2, r5, r6, i3, z0, l4, l5);

        i6 = i6 + 1;

        goto label1;

     label2:
        i11 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i8 = 0;

     label3:
        if i8 >= i11 goto label4;

        $i9 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i8);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,java.lang.String,int,long,long)>($i9, i0, r2, r3, i1, l4, l5);

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    public void noteStopWakeFromSourceLocked(android.os.WorkSource, int, java.lang.String, java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i4, i5, $i6;
        java.lang.String r2, r3;
        long l2, l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i4 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i5);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,java.lang.String,int,long,long)>($i6, i0, r2, r3, i1, l2, l3);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    void aggregateLastWakeupUptimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason>;

        if $r2 == null goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs>;

        l1 = l0 - $l2;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason>;

        r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>($r3);

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void addCurrentReportedCount(int)>(1);

        $l3 = l1 * 1000L;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void addCurrentReportedTotalTime(long)>($l3);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

     label1:
        return;
    }

    public void noteWakeupReasonLocked(java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        long l0, l1;
        android.os.BatteryStats$HistoryItem $r2, $r4, $r5, $r7;
        android.os.BatteryStats$HistoryTag $r3, $r6, $r8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void aggregateLastWakeupUptimeLocked(long)>(l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3 = $r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag localWakeReasonTag>;

        $r4.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag> = $r3;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r6 = $r5.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r6.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r1;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r8 = $r7.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryTag wakeReasonTag>;

        $r8.<android.os.BatteryStats$HistoryTag: int uid> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = l1;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        return;
    }

    public int startAddingCpuLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r3;
        java.util.ArrayList $r4, $r6, $r8;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$MyHandler: void removeMessages(int)>(1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r8.<java.util.ArrayList: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mDistributeWakelockCpu> = 0;

        return 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $z0 = virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        if $z0 != 0 goto label2;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mDistributeWakelockCpu>;

        if $z2 != 0 goto label2;

        return 0;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mDistributeWakelockCpu> = 0;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r7;

        $z1 = r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z1 == 0 goto label4;

        r2 = r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r2 == null goto label4;

        $i2 = r2.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i2 == 1000 goto label4;

        return 50;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public void finishAddingCpuLocked(int, int, int, long[])
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, i10, i11, i12, i13, i14, i15;
        long[] r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer r2, $r14, $r15, r25, r29;
        com.android.internal.os.BatteryStatsImpl$Uid r3, r26, r27;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r4, r28;
        java.util.ArrayList $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r18, $r20, $r21, $r24;
        java.lang.Object $r8, $r11, $r16, $r17, $r19, $r22, $r23;
        boolean $z1, $z2, $z3, $z4, z5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: long[];

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 == 0 goto label08;

        i4 = 0;

        i5 = 0;

     label01:
        if i5 >= i3 goto label03;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r23 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r2 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r23;

        $z4 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z4 == 0 goto label02;

        r3 = r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r3 == null goto label02;

        $i9 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i9 == 1000 goto label02;

        i4 = i4 + 1;

     label02:
        i5 = i5 + 1;

        goto label01;

     label03:
        if i4 == 0 goto label06;

        i10 = 0;

     label04:
        if i10 >= i3 goto label06;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r25 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r22;

        $z3 = r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList>;

        if $z3 == 0 goto label05;

        r26 = r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: com.android.internal.os.BatteryStatsImpl$Uid mUid>;

        if r26 == null goto label05;

        $i8 = r26.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i8 == 1000 goto label05;

        i6 = i1 / i4;

        i7 = i2 / i4;

        i1 = i1 - i6;

        i2 = i2 - i7;

        i4 = i4 + -1;

        r4 = virtualinvoke r26.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*wakelock*");

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>(i6, i7);

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r1);

     label05:
        i10 = i10 + 1;

        goto label04;

     label06:
        if i1 != 0 goto label07;

        if i2 == 0 goto label08;

     label07:
        r27 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(1000);

        if r27 == null goto label08;

        r28 = virtualinvoke r27.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*lost*");

        virtualinvoke r28.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>(i1, i2);

        virtualinvoke r28.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r1);

     label08:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        i11 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i3 == i11 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z5 = $z2;

        i12 = 0;

     label11:
        if i12 >= i11 goto label14;

        if z5 != 0 goto label14;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r17 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $r19 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        if $r17 == $r19 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        z5 = z5 | $z1;

        i12 = i12 + 1;

        goto label11;

     label14:
        if z5 != 0 goto label17;

        i13 = 0;

     label15:
        if i13 >= i11 goto label16;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r16 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r15 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r16;

        $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        i13 = i13 + 1;

        goto label15;

     label16:
        return;

     label17:
        i14 = 0;

     label18:
        if i14 >= i11 goto label19;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r14 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r11;

        $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 0;

        i14 = i14 + 1;

        goto label18;

     label19:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        i15 = 0;

     label20:
        if i15 >= i3 goto label21;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r29 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r8;

        r29.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean mInList> = 1;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r29);

        i15 = i15 + 1;

        goto label20;

     label21:
        return;
    }

    public void noteProcessDiedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 == null goto label1;

        $r4 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i1);

     label1:
        return;
    }

    public long getProcessWakeTime(int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i3, i8;
        long l2, $l4, $l5, $l6, $l7;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.os.BatteryStats$Uid$Pid r2;
        android.util.SparseArray $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i8);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r1 == null goto label3;

        $r5 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mPids>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r2 = (android.os.BatteryStats$Uid$Pid) $r6;

        if r2 == null goto label3;

        $l4 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeSumMs>;

        $i3 = r2.<android.os.BatteryStats$Uid$Pid: int mWakeNesting>;

        if $i3 <= 0 goto label1;

        $l6 = r2.<android.os.BatteryStats$Uid$Pid: long mWakeStartMs>;

        $l7 = l2 - $l6;

        goto label2;

     label1:
        $l7 = 0L;

     label2:
        $l5 = $l4 + $l7;

        return $l5;

     label3:
        return 0L;
    }

    public void reportExcessiveWakeLocked(int, java.lang.String, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3;
        java.lang.String r1;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveWakeLocked(java.lang.String,long,long)>(r1, l1, l2);

     label1:
        return;
    }

    public void reportExcessiveCpuLocked(int, java.lang.String, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3;
        java.lang.String r1;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveCpuLocked(java.lang.String,long,long)>(r1, l1, l2);

     label1:
        return;
    }

    public void noteStartSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, i9;
        long l2, l3;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        if $i4 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = $i7 | 8388608;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

     label1:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        $i6 = $i5 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = $i6;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i9);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSensor(int,long)>(i1, l2);

        return;
    }

    public void noteStopSensorLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, i9;
        long l2, l3;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        $i5 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting> = $i5;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mSensorNesting>;

        if $i6 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i8 = $i7 & -8388609;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i9);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSensor(int,long)>(i1, l2);

        return;
    }

    public void noteStartGpsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 536870912;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartGps(long)>(l1);

        return;
    }

    public void noteStopGpsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        $i4 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting> = $i4;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mGpsNesting>;

        if $i5 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -536870913;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopGps(long)>(l1);

        return;
    }

    public void noteScreenStateLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i11, $i12, $i13, $i14, $i16, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        long l3, $l8, $l9, $l10, $l15, $l17, $l18, l28, l29, l30;
        android.os.BatteryStats$HistoryItem $r1, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r5, $r7, $r11;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r3, $r8;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r10;
        java.lang.StringBuilder $r9, $r13, $r14;
        java.lang.String $r12;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i4 == i0 goto label7;

        i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = i0;

        if i0 == 0 goto label2;

        i2 = i0 - 1;

        if i2 >= 4 goto label1;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i22 = $i23 & 3;

        $i21 = $i22 ^ i2;

        $i27 = $i20 | $i21;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = $i27;

        $i26 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i25 = $i26 & -4;

        $i24 = $i25 | i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = $i24;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected screen state: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r12);

     label2:
        if i0 != 2 goto label5;

        l28 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i13 = $r6.<android.os.BatteryStats$HistoryItem: int states>;

        $i12 = $i13 | 1048576;

        $r6.<android.os.BatteryStats$HistoryItem: int states> = $i12;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l28, l3);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l28);

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i14 < 0 goto label3;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i16 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r11 = $r10[$i16];

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l28);

     label3:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z2 = virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $l15 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l18 = $l15 * 1000L;

        $l17 = l28 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,boolean,long,long)>($z2, 0, $l18, $l17);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,java.lang.String,int,boolean,long,long)>(-1, -1, "screen", null, 0, 0, l28, l3);

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z3 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(0, 1);

     label4:
        goto label7;

     label5:
        if i1 != 2 goto label7;

        l29 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l30 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i5 & -1048577;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i6;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l29, l30);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l29);

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i7 < 0 goto label6;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r5 = $r4[$i11];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l29);

     label6:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,java.lang.String,int,long,long)>(-1, -1, "screen", "screen", 0, l29, l30);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $z0 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l10 = $l9 * 1000L;

        $l8 = l29 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,boolean,long,long)>($z0, 1, $l10, $l8);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z1 == 0 goto label7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(1, 0);

     label7:
        return;
    }

    public void noteScreenBrightnessLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        long l2, l3;
        android.os.BatteryStats$HistoryItem $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 = i0 / 51;

        if i1 >= 0 goto label1;

        i1 = 0;

        goto label2;

     label1:
        if i1 < 5 goto label2;

        i1 = 4;

     label2:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i4 == i1 goto label5;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i5 & -8;

        $i6 = i1 << 0;

        $i8 = $i7 | $i6;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i10 != 2 goto label4;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        if $i9 < 0 goto label3;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin>;

        $r6 = $r5[$i11];

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

     label3:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r3 = $r4[i1];

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = i1;

     label5:
        return;
    }

    public void noteUserActivityLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z0 == 0 goto label1;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteUserActivityLocked(int)>(i1);

     label1:
        return;
    }

    public void noteInteractiveLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        long l0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive>;

        if $z1 == z0 goto label2;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = z0;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label2:
        return;
    }

    public void noteMobileRadioPowerState(int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i6, $i8, $i10, $i11, $i14, $i15, $i16;
        long l1, l2, l3, l4, l5, $l12;
        boolean z0, $z1;
        byte $b7, $b9;
        android.os.BatteryStats$HistoryItem $r1, $r13;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r3, $r4, $r5;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12;
        java.lang.String $r10;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState>;

        if $i6 == i0 goto label9;

        $i8 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_MEDIUM>;

        if i0 == $i8 goto label1;

        $i15 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_HIGH>;

        if i0 != $i15 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        l4 = l2;

        r0.<com.android.internal.os.BatteryStatsImpl: long mMobileRadioActiveStartTime> = l2;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i16 = $r13.<android.os.BatteryStats$HistoryItem: int states>;

        $i14 = $i16 | 33554432;

        $r13.<android.os.BatteryStats$HistoryItem: int states> = $i14;

        goto label7;

     label4:
        l4 = l1 / 1000000L;

        l5 = r0.<com.android.internal.os.BatteryStatsImpl: long mMobileRadioActiveStartTime>;

        $b7 = l4 cmp l5;

        if $b7 >= 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data connection inactive timestamp ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is before start time ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

        l4 = l2;

        goto label6;

     label5:
        $b9 = l4 cmp l2;

        if $b9 >= 0 goto label6;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        $l12 = l2 - l4;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l12);

     label6:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i11 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i10 = $i11 & -33554433;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i10;

     label7:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = i0;

        if z0 == 0 goto label8;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

        goto label9;

     label8:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l4);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked(int,long)>(1, l4);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l4);

     label9:
        return;
    }

    public void noteLowPowerMode(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        byte b0, $b15;
        long l1, l2;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.os.BatteryStats$HistoryItem $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mLowPowerModeEnabled>;

        if $z1 == z0 goto label5;

        if z0 == 0 goto label1;

        $b15 = 4;

        goto label2;

     label1:
        $b15 = 0;

     label2:
        b0 = $b15;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i4 = $i3 & 4;

        $i5 = $i4 ^ b0;

        $i7 = $i6 | $i5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = $i7;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        $i9 = $i8 & -5;

        $i10 = $i9 | b0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = $i10;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mLowPowerModeEnabled> = z0;

        if z0 == 0 goto label3;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i13 = $r3.<android.os.BatteryStats$HistoryItem: int states2>;

        $i14 = $i13 | -2147483648;

        $r3.<android.os.BatteryStats$HistoryItem: int states2> = $i14;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        goto label4;

     label3:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i11 = $r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i12 = $i11 & 2147483647;

        $r1.<android.os.BatteryStats$HistoryItem: int states2> = $i12;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label4:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label5:
        return;
    }

    public void notePhoneOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 != 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i3 = $i2 | 262144;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void notePhoneOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn>;

        if $z0 == 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i3 = $i2 & -262145;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    void stopAllPhoneSignalStrengthTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i2 = 0;

     label1:
        if i2 >= 5 goto label4;

        if i2 != i0 goto label2;

        goto label3;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i2];

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r4 = $r3[i2];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private int fixPhoneServiceState(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        if $i2 != 1 goto label1;

        if i0 != 1 goto label1;

        if i1 <= 0 goto label1;

        i0 = 0;

     label1:
        return i0;
    }

    private void updateAllPhoneStateLocked(int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean z0, z1, $z2, $z3, $z4;
        long l3, l4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r6, $r7;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r5, $r9, $r11, $r14, $r15, $r16;
        android.os.BatteryStats$HistoryItem $r3, $r4, $r8, $r10, $r12, $r13;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 = 0;

        z1 = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = i1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = i2;

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        if i1 != 1 goto label01;

        if i0 != 1 goto label01;

        if i2 <= 0 goto label01;

        i0 = 0;

     label01:
        if i0 != 3 goto label02;

        i2 = -1;

        goto label04;

     label02:
        if i0 != 0 goto label03;

        goto label04;

     label03:
        if i0 != 1 goto label04;

        z0 = 1;

        i2 = 0;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $z4 = virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z4 != 0 goto label04;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i19 = $r13.<android.os.BatteryStats$HistoryItem: int states>;

        $i20 = $i19 | 2097152;

        $r13.<android.os.BatteryStats$HistoryItem: int states> = $i20;

        z1 = 1;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l3);

     label04:
        if z0 != 0 goto label05;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $z3 = virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z3 == 0 goto label05;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i17 = $r12.<android.os.BatteryStats$HistoryItem: int states>;

        $i18 = $i17 & -2097153;

        $r12.<android.os.BatteryStats$HistoryItem: int states> = $i18;

        z1 = 1;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l3);

     label05:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState>;

        if $i5 == i0 goto label06;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i14 = $r8.<android.os.BatteryStats$HistoryItem: int states>;

        $i15 = $i14 & -449;

        $i13 = i0 << 6;

        $i16 = $i15 | $i13;

        $r10.<android.os.BatteryStats$HistoryItem: int states> = $i16;

        z1 = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = i0;

     label06:
        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i6 == i2 goto label11;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        if $i7 < 0 goto label07;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $i12 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin>;

        $r9 = $r7[$i12];

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l3);

     label07:
        if i2 < 0 goto label09;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i2];

        $z2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z2 != 0 goto label08;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r5 = $r6[i2];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l3);

     label08:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i8 = $r3.<android.os.BatteryStats$HistoryItem: int states>;

        $i9 = $i8 & -57;

        $i10 = i2 << 3;

        $i11 = $i9 | $i10;

        $r4.<android.os.BatteryStats$HistoryItem: int states> = $i11;

        z1 = 1;

        goto label10;

     label09:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllPhoneSignalStrengthTimersLocked(int)>(-1);

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = i2;

     label11:
        if z1 == 0 goto label12;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l3, l4);

     label12:
        return;
    }

    public void notePhoneStateLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>(i0, i1, $i2);

        return;
    }

    public void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.telephony.SignalStrength r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.telephony.SignalStrength;

        i0 = virtualinvoke r1.<android.telephony.SignalStrength: int getLevel()>();

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateAllPhoneStateLocked(int,int,int)>($i2, $i1, i0);

        return;
    }

    public void notePhoneDataConnectionStateLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0;
        byte b1;
        long l2, l3;
        android.os.BatteryStats$HistoryItem $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r4, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        b1 = 0;

        if z0 == 0 goto label17;

        tableswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            default: goto label16;
        };

     label01:
        b1 = 2;

        goto label17;

     label02:
        b1 = 1;

        goto label17;

     label03:
        b1 = 3;

        goto label17;

     label04:
        b1 = 4;

        goto label17;

     label05:
        b1 = 5;

        goto label17;

     label06:
        b1 = 6;

        goto label17;

     label07:
        b1 = 7;

        goto label17;

     label08:
        b1 = 8;

        goto label17;

     label09:
        b1 = 9;

        goto label17;

     label10:
        b1 = 10;

        goto label17;

     label11:
        b1 = 11;

        goto label17;

     label12:
        b1 = 12;

        goto label17;

     label13:
        b1 = 13;

        goto label17;

     label14:
        b1 = 14;

        goto label17;

     label15:
        b1 = 15;

        goto label17;

     label16:
        b1 = 16;

     label17:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i4 == b1 goto label19;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i5 & -15873;

        $i6 = b1 << 9;

        $i8 = $i7 | $i6;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        if $i9 < 0 goto label18;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType>;

        $r6 = $r5[$i10];

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

     label18:
        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = b1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r3 = $r4[b1];

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

     label19:
        return;
    }

    public void noteWifiOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 != 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 | 268435456;

        $r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteWifiOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 & -268435457;

        $r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteAudioOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 4194304;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOnLocked(long)>(l1);

        return;
    }

    public void noteAudioOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        $i5 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = $i5;

        if $i5 != 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -4194305;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label2:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOffLocked(long)>(l1);

        return;
    }

    public void noteVideoOnLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i6 | 1073741824;

        $r2.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOnLocked(long)>(l1);

        return;
    }

    public void noteVideoOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i3 != 0 goto label1;

        return;

     label1:
        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        $i5 = $i4 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = $i5;

        if $i5 != 0 goto label2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i6 & -1073741825;

        $r2.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label2:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOffLocked(long)>(l1);

        return;
    }

    public void noteResetAudioLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting>;

        if $i3 <= 0 goto label2;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i5 = $i4 & -4194305;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i2 = 0;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i6 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i2 >= $i6 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r5 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r5;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetAudioLocked(long)>(l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteResetVideoLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, $i3, $i4, $i5, $i6;
        com.android.internal.os.BatteryStatsImpl$Uid r1;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        android.util.SparseArray $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting>;

        if $i3 <= 0 goto label2;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i4 = $r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i5 = $i4 & -1073741825;

        $r2.<android.os.BatteryStats$HistoryItem: int states2> = $i5;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopAllRunningLocked(long)>(l0);

        i2 = 0;

     label1:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i6 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i2 >= $i6 goto label2;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r5 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r5;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteResetVideoLocked(long)>(l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteActivityResumedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityResumedLocked(long)>($l1);

        return;
    }

    public void noteActivityPausedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteActivityPausedLocked(long)>($l1);

        return;
    }

    public void noteVibratorOnLocked(int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOnLocked(long)>(l1);

        return;
    }

    public void noteVibratorOffLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteVibratorOffLocked()>();

        return;
    }

    public void noteFlashlightOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn>;

        if $z0 != 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 | 134217728;

        $r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteFlashlightOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states2>;

        $i3 = $i2 & -134217729;

        $r1.<android.os.BatteryStats$HistoryItem: int states2> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteWifiRunningLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        long l0, l1;
        int i2, i3, i4, $i6, $i7, $i8;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 != 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i6 | 536870912;

        $r2.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

        i2 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $i8 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i3);

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i8);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i4);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningLocked -- called while WIFI running");

     label4:
        return;
    }

    public void noteWifiRunningChangedLocked(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1, r2;
        long l0;
        int i1, i2, i3, $i5, $i6, i7, i8, i9;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$Uid $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label5;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i1 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i6 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i2);

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i6);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i2 = i2 + 1;

        goto label1;

     label2:
        i7 = virtualinvoke r2.<android.os.WorkSource: int size()>();

        i8 = 0;

     label3:
        if i8 >= i7 goto label4;

        $i5 = virtualinvoke r2.<android.os.WorkSource: int get(int)>(i8);

        i9 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i5);

        $r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i9);

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked(long)>(l0);

        i8 = i8 + 1;

        goto label3;

     label4:
        goto label6;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiRunningChangedLocked -- called while WIFI not running");

     label6:
        return;
    }

    public void noteWifiStoppedLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        long l0, l1;
        int i2, i3, i4, $i6, $i7, $i8;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3;
        com.android.internal.os.BatteryStatsImpl$Uid $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning>;

        if $z0 == 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states2>;

        $i7 = $i6 & -536870913;

        $r2.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

        i2 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $i8 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i3);

        i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i8);

        $r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i4);

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked(long)>(l0);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "noteWifiStoppedLocked -- called while WIFI not running");

     label4:
        return;
    }

    public void noteWifiStateLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2, $i3, $i4;
        java.lang.String r1;
        long l1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r2, $r4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r3, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState>;

        if $i2 == i0 goto label2;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState>;

        if $i3 < 0 goto label1;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState>;

        $r5 = $r4[$i4];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = i0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r3 = $r2[i0];

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label2:
        return;
    }

    public void noteWifiSupplicantStateChangedLocked(int, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r6;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r5;
        android.os.BatteryStats$HistoryItem $r3, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState>;

        if $i3 == i0 goto label2;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState>;

        if $i4 < 0 goto label1;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState>;

        $r5 = $r6[$i9];

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = i0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i5 = $r3.<android.os.BatteryStats$HistoryItem: int states2>;

        $i8 = $i5 & -16;

        $i6 = i0 << 0;

        $i7 = $i8 | $i6;

        $r4.<android.os.BatteryStats$HistoryItem: int states2> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label2:
        return;
    }

    void stopAllWifiSignalStrengthTimersLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i2 = 0;

     label1:
        if i2 >= 5 goto label4;

        if i2 != i0 goto label2;

        goto label3;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i2];

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r4 = $r3[i2];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public void noteWifiRssiChangedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        long l2, l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r4, $r8;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r6, $r7;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r3, $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>(i0, 5);

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin>;

        if $i4 == i1 goto label5;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin>;

        if $i5 < 0 goto label1;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin>;

        $r7 = $r8[$i10];

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l2);

     label1:
        if i1 < 0 goto label3;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i1];

        $z0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r6 = $r4[i1];

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l2);

     label2:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r3.<android.os.BatteryStats$HistoryItem: int states2>;

        $i9 = $i7 & -113;

        $i6 = i1 << 4;

        $i8 = $i9 | $i6;

        $r5.<android.os.BatteryStats$HistoryItem: int states2> = $i8;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l3);

        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void stopAllWifiSignalStrengthTimersLocked(int)>(-1);

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = i1;

     label5:
        return;
    }

    public void noteBluetoothOnLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 != 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i3 = $i2 | 65536;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteBluetoothOffLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1;
        int $i2, $i3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn>;

        if $z0 == 0 goto label1;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i2 = $r1.<android.os.BatteryStats$HistoryItem: int states>;

        $i3 = $i2 & -65537;

        $r1.<android.os.BatteryStats$HistoryItem: int states> = $i3;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l0);

     label1:
        return;
    }

    public void noteBluetoothStateLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2, $i3, $i4;
        long l1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1, $r3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState>;

        if $i2 == i0 goto label2;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState>;

        if $i3 < 0 goto label1;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState>;

        $r4 = $r3[$i4];

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(long)>(l1);

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState> = i0;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(long)>(l1);

     label2:
        return;
    }

    public void noteFullWifiLockAcquiredLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 268435456;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockAcquiredLocked(long)>(l1);

        return;
    }

    public void noteFullWifiLockReleasedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        $i4 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = $i4;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting>;

        if $i5 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -268435457;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockReleasedLocked(long)>(l1);

        return;
    }

    public void noteWifiScanStartedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 134217728;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStartedLocked(long)>(l1);

        return;
    }

    public void noteWifiScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        $i4 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = $i4;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting>;

        if $i5 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -134217729;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiScanStoppedLocked(long)>(l1);

        return;
    }

    public void noteWifiBatchedScanStartedLocked(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, i3;
        long l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i3);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStartedLocked(int,long)>(i1, l2);

        return;
    }

    public void noteWifiBatchedScanStoppedLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i2);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiBatchedScanStoppedLocked(long)>(l1);

        return;
    }

    public void noteWifiMulticastEnabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        if $i3 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 | 67108864;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = $i5;

        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastEnabledLocked(long)>(l1);

        return;
    }

    public void noteWifiMulticastDisabledLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        long l1, l2;
        com.android.internal.os.BatteryStatsImpl$Uid $r1;
        android.os.BatteryStats$HistoryItem $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i8 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        $i4 = $i3 - 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = $i4;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting>;

        if $i5 != 0 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i6 = $r2.<android.os.BatteryStats$HistoryItem: int states>;

        $i7 = $i6 & -67108865;

        $r2.<android.os.BatteryStats$HistoryItem: int states> = $i7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l1, l2);

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i8);

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastDisabledLocked(long)>(l1);

        return;
    }

    public void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, i2, $i3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i3 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i2);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedLocked(int,int)>($i3, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.WorkSource r1;
        int i0, i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.WorkSource;

        i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.WorkSource: int get(int)>(i1);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static java.lang.String[] includeInStringArray(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>(r0, r1);

        if $i0 < 0 goto label1;

        return r0;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 + 1;

        r2 = newarray (java.lang.String)[$i2];

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, $i3);

        $i4 = lengthof r0;

        r2[$i4] = r1;

        return r2;
    }

    private static java.lang.String[] excludeFromStringArray(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i0 = staticinvoke <com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>(r0, r1);

        if i0 < 0 goto label3;

        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        r2 = newarray (java.lang.String)[$i2];

        if i0 <= 0 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, i0);

     label1:
        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        if i0 >= $i4 goto label2;

        $i8 = i0 + 1;

        $i5 = lengthof r0;

        $i6 = $i5 - i0;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i8, r2, i0, $i7);

     label2:
        return r2;

     label3:
        return r0;
    }

    public void noteNetworkInterfaceTypeLocked(java.lang.String, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String r1;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>(i0);

        if $z1 == 0 goto label2;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces>;

        $r9 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] includeInStringArray(java.lang.String[],java.lang.String)>($r8, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces> = $r9;

        goto label3;

     label2:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces>;

        $r3 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] excludeFromStringArray(java.lang.String[],java.lang.String)>($r2, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces> = $r3;

     label3:
        $z2 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeWifi(int)>(i0);

        if $z2 == 0 goto label4;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $r7 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] includeInStringArray(java.lang.String[],java.lang.String)>($r6, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r7;

        goto label5;

     label4:
        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $r5 = staticinvoke <com.android.internal.os.BatteryStatsImpl: java.lang.String[] excludeFromStringArray(java.lang.String[],java.lang.String)>($r4, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r5;

     label5:
        return;
    }

    public void noteNetworkStatsEnabledLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked(int,long)>(65535, $l0);

        return;
    }

    public long getScreenOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getScreenOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getScreenBrightnessTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public long getInteractiveTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getLowPowerModeEnabledTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getLowPowerModeEnabledCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getPhoneOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getPhoneOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getPhoneSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public long getPhoneSignalScanningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getPhoneSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getPhoneDataConnectionTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getPhoneDataConnectionCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getMobileRadioActiveTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public int getMobileRadioActiveCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        return $i1;
    }

    public long getMobileRadioActiveAdjustedTime(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public long getMobileRadioActiveUnknownTime(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        return $l1;
    }

    public int getMobileRadioActiveUnknownCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r1;
        long $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i0);

        $i2 = (int) $l1;

        return $i2;
    }

    public long getWifiOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getGlobalWifiRunningTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getWifiStateTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getWifiStateCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getWifiSupplStateTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getWifiSupplStateCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getWifiSignalStrengthTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getWifiSignalStrengthCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getBluetoothOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getBluetoothStateTime(int, long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2;
        long l1, $l3;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r2 = $r1[i0];

        $l3 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l1, i2);

        return $l3;
    }

    public int getBluetoothStateCount(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r2 = $r1[i0];

        $i2 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i1);

        return $i2;
    }

    public long getFlashlightOnTime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long getTotalTimeLocked(long,int)>(l0, i1);

        return $l2;
    }

    public long getFlashlightOnCount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1;
        long $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        $i1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int getCountLocked(int)>(i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public long getNetworkActivityBytes(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r3;
        long $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $i2 = lengthof $r1;

        if i0 >= $i2 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r3 = $r2[i0];

        $l3 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i1);

        return $l3;

     label1:
        return 0L;
    }

    public long getNetworkActivityPackets(int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r1, $r2;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r3;
        long $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $i2 = lengthof $r1;

        if i0 >= $i2 goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r3 = $r2[i0];

        $l3 = virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: long getCountLocked(int)>(i1);

        return $l3;

     label1:
        return 0L;
    }

    boolean isStartClockTimeValid()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        $b1 = $l0 cmp 31536000000L;

        if $b1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getStartClockTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isStartClockTimeValid()>();

        if $z0 != 0 goto label1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l1;

        $z1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: boolean isStartClockTimeValid()>();

        if $z1 == 0 goto label1;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void recordCurrentTimeChangeLocked(long,long,long)>($l2, $l3, $l4);

     label1:
        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime>;

        return $l0;
    }

    public java.lang.String getStartPlatformVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        return $r1;
    }

    public java.lang.String getEndPlatformVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        return $r1;
    }

    public int getParcelVersion()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 114;
    }

    public boolean getIsOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public android.util.SparseArray getUidStats()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        return $r1;
    }

    public void <init>(java.io.File, android.os.Handler)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.File r1, $r52, $r111, $r112;
        android.os.Handler r2;
        int i0, $i2, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        long l1, $l3, $l4, $l5, $l6, $l9, $l10, l25;
        android.util.SparseIntArray $r3;
        android.util.SparseArray $r4, $r8, $r12;
        java.util.ArrayList $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r16, $r19, $r55, $r57, $r61, $r63, $r65, $r67, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r87, $r88, $r92, $r95, $r98, $r101, $r102, $r105, $r108, $r115, $r118;
        android.os.BatteryStats$HistoryEventTracker $r18;
        android.os.BatteryStats$HistoryItem $r20, $r22, $r23, $r25, $r27;
        android.os.Parcel $r21;
        java.util.HashMap $r24, $r37, $r40, $r41;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r26, $r30, $r31, $r32, $r33, $r34, $r35, $r90, $r93, $r97, $r100, $r110, $r114, $r117;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r28, $r29, $r104, $r107;
        long[] $r36, $r38, $r39;
        java.lang.String[] $r42, $r48, $r49;
        android.net.NetworkStats $r43, $r44, $r46, $r47;
        com.android.internal.net.NetworkStatsFactory $r45;
        android.net.NetworkStats$Entry $r50;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r51;
        com.android.internal.os.AtomicFile $r53;
        java.util.concurrent.locks.ReentrantLock $r54;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r71, $r77, $r79, $r81, $r83, $r86, $r89, $r91, $r94, $r99, $r103, $r113, $r116;
        android.os.Looper $r59;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r69, $r73, $r75, $r96, $r106;
        java.lang.String $r85;
        com.android.internal.util.JournaledFile $r109;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r11;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r13;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r12;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r15;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r14;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r17;

        $r16 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r16.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r16;

        $r19 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r19.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r19;

        $r18 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r18.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r18;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r21 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r21;

        $r20 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r20.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r20;

        $r23 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r23.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r23;

        $r22 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r22.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r22;

        $r25 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r25.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r25;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r24;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r27 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r27.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r27;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r26 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r26;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r30 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r31 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r31;

        $r28 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r28;

        $r29 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r29;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r34 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r34;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r35 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r35;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r32 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r32;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState> = -1;

        $r33 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer> = $r33;

        $i2 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_LOW>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = $i2;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r38 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations> = $r38;

        $r36 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations> = $r36;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r37 = new java.util.HashMap;

        specialinvoke $r37.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r37;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r41 = new java.util.HashMap;

        specialinvoke $r41.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r41;

        $r42 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r42;

        $r39 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r39;

        $r40 = new java.util.HashMap;

        specialinvoke $r40.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r40;

        $r45 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r45.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r45;

        $r44 = new android.net.NetworkStats;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r44.<android.net.NetworkStats: void <init>(long,int)>($l3, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurMobileSnapshot> = $r44;

        $r43 = new android.net.NetworkStats;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r43.<android.net.NetworkStats: void <init>(long,int)>($l5, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastMobileSnapshot> = $r43;

        $r47 = new android.net.NetworkStats;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r47.<android.net.NetworkStats: void <init>(long,int)>($l4, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurWifiSnapshot> = $r47;

        $r46 = new android.net.NetworkStats;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r46.<android.net.NetworkStats: void <init>(long,int)>($l6, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiSnapshot> = $r46;

        $r50 = new android.net.NetworkStats$Entry;

        specialinvoke $r50.<android.net.NetworkStats$Entry: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats$Entry mTmpNetworkStatsEntry> = $r50;

        $r49 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces> = $r49;

        $r48 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r48;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r54 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r54.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r54;

        if r1 == null goto label01;

        $r109 = new com.android.internal.util.JournaledFile;

        $r112 = new java.io.File;

        specialinvoke $r112.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats.bin");

        $r111 = new java.io.File;

        specialinvoke $r111.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats.bin.tmp");

        specialinvoke $r109.<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>($r112, $r111);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = $r109;

        goto label02;

     label01:
        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = null;

     label02:
        $r53 = new com.android.internal.os.AtomicFile;

        $r52 = new java.io.File;

        specialinvoke $r52.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats-checkin.bin");

        specialinvoke $r53.<com.android.internal.os.AtomicFile: void <init>(java.io.File)>($r52);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile> = $r53;

        $r51 = new com.android.internal.os.BatteryStatsImpl$MyHandler;

        $r59 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r51.<com.android.internal.os.BatteryStatsImpl$MyHandler: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Looper)>(r0, $r59);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = $r51;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i8 = $i7 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i8;

        $r60 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r60.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -1, null, $r55);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = $r60;

        i0 = 0;

     label03:
        if i0 >= 5 goto label04;

        $r110 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r116 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i17 = -100 - i0;

        $r118 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r116.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i17, null, $r118);

        $r110[i0] = $r116;

        i0 = i0 + 1;

        goto label03;

     label04:
        $r56 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r56.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -9, null, $r57);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer> = $r56;

        $r58 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r65 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r58.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -2, null, $r65);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer> = $r58;

        $r66 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r67 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r66.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -3, null, $r67);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = $r66;

        i18 = 0;

     label05:
        if i18 >= 5 goto label06;

        $r117 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r113 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i16 = -200 - i18;

        $r115 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r113.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i16, null, $r115);

        $r117[i18] = $r113;

        i18 = i18 + 1;

        goto label05;

     label06:
        $r68 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r68.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -199, null, $r61);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = $r68;

        i19 = 0;

     label07:
        if i19 >= 17 goto label08;

        $r114 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r103 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i15 = -300 - i19;

        $r102 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r103.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i15, null, $r102);

        $r114[i19] = $r103;

        i19 = i19 + 1;

        goto label07;

     label08:
        i20 = 0;

     label09:
        if i20 >= 4 goto label10;

        $r107 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r96 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r108 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r96.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r108);

        $r107[i20] = $r96;

        $r104 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r106 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r105 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r106.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r105);

        $r104[i20] = $r106;

        i20 = i20 + 1;

        goto label09;

     label10:
        $r62 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r63 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r62.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -400, null, $r63);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer> = $r62;

        $r64 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r74 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r64.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -401, null, $r74);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer> = $r64;

        $r73 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r76 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r73.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r76);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime> = $r73;

        $r75 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r70 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r75.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r70);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime> = $r75;

        $r69 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r72 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r69.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r72);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount> = $r69;

        $r71 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r82 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r71.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -4, null, $r82);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = $r71;

        $r81 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r84 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r81.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -5, null, $r84);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = $r81;

        i21 = 0;

     label11:
        if i21 >= 8 goto label12;

        $r97 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r99 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i13 = -600 - i21;

        $r98 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r99.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i13, null, $r98);

        $r97[i21] = $r99;

        i21 = i21 + 1;

        goto label11;

     label12:
        i22 = 0;

     label13:
        if i22 >= 13 goto label14;

        $r100 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r91 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i14 = -700 - i22;

        $r101 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r91.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i14, null, $r101);

        $r100[i22] = $r91;

        i22 = i22 + 1;

        goto label13;

     label14:
        i23 = 0;

     label15:
        if i23 >= 5 goto label16;

        $r90 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r94 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i11 = -800 - i23;

        $r92 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r94.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i11, null, $r92);

        $r90[i23] = $r94;

        i23 = i23 + 1;

        goto label15;

     label16:
        $r83 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r78 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r83.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -6, null, $r78);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer> = $r83;

        i24 = 0;

     label17:
        if i24 >= 4 goto label18;

        $r93 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r86 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i12 = -500 - i24;

        $r95 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r86.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, $i12, null, $r95);

        $r93[i24] = $r86;

        i24 = i24 + 1;

        goto label17;

     label18:
        $r77 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r80 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r77.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -7, null, $r80);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer> = $r77;

        $r79 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r88 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r79.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -8, null, $r88);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer> = $r79;

        $r89 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r87 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r89.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -9, null, $r87);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer> = $r89;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = 0;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l25 = $l9 * 1000L;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = $l10 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes(long,long)>(l25, l1);

        $r85 = <android.os.Build: java.lang.String ID>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r85;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = $r85;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r18;
        android.util.SparseIntArray $r2;
        android.util.SparseArray $r3, $r7, $r12;
        java.util.ArrayList $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r16, $r17;
        android.os.BatteryStats$HistoryEventTracker $r19;
        android.os.BatteryStats$HistoryItem $r20, $r21, $r22, $r23, $r24;
        java.util.HashMap $r25, $r35, $r36, $r39;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r26, $r27, $r29, $r30, $r32, $r33, $r34;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r28, $r31;
        int $i0;
        long[] $r37, $r38, $r42;
        com.android.internal.net.NetworkStatsFactory $r40;
        java.lang.String[] $r41, $r48, $r49;
        android.net.NetworkStats $r43, $r44, $r45, $r46;
        long $l1, $l2, $l3, $l4;
        java.util.concurrent.locks.ReentrantLock $r47;
        android.net.NetworkStats$Entry $r50;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.os.BatteryStats: void <init>()>();

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseIntArray mIsolatedUids> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mSensorTimers> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers> = $r11;

        $r12 = new android.util.SparseArray;

        specialinvoke $r12.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers> = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers> = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mLastPartialTimers> = $r15;

        $r17 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r17.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase> = $r17;

        $r16 = new com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke $r16.<com.android.internal.os.BatteryStatsImpl$TimeBase: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase> = $r16;

        $r19 = new android.os.BatteryStats$HistoryEventTracker;

        specialinvoke $r19.<android.os.BatteryStats$HistoryEventTracker: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents> = $r19;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

        $r18 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer> = $r18;

        $r21 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r21.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastWritten> = $r21;

        $r20 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r20.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryLastLastWritten> = $r20;

        $r23 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r23.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp> = $r23;

        $r22 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r22.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryAddTmp> = $r22;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool> = $r25;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHistoryBufferLastPos> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHistoryOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryElapsedRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mTrackRunningHistoryUptime> = 0L;

        $r24 = new android.os.BatteryStats$HistoryItem;

        specialinvoke $r24.<android.os.BatteryStats$HistoryItem: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur> = $r24;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenBrightnessBin> = -1;

        $r27 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer> = $r27;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBin> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSignalStrengthBinRaw> = -1;

        $r26 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer> = $r26;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneDataConnectionType> = -1;

        $r29 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[17];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer> = $r29;

        $r28 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters> = $r28;

        $r31 = newarray (com.android.internal.os.BatteryStatsImpl$LongSamplingCounter)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters> = $r31;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiState> = -1;

        $r30 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[8];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSupplState> = -1;

        $r33 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[13];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer> = $r33;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiSignalStrengthBin> = -1;

        $r34 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[5];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer> = $r34;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothState> = -1;

        $r32 = newarray (com.android.internal.os.BatteryStatsImpl$StopwatchTimer)[4];

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer> = $r32;

        $i0 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_LOW>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = $i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        $r37 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations> = $r37;

        $r38 = newarray (long)[200];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations> = $r38;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceState> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneServiceStateRaw> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mPhoneSimStateRaw> = -1;

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats> = $r35;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mLastWakeupReason> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWakeupUptimeMs> = 0L;

        $r36 = new java.util.HashMap;

        specialinvoke $r36.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats> = $r36;

        $r41 = newarray (java.lang.String)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mProcWakelocksName> = $r41;

        $r42 = newarray (long)[3];

        r0.<com.android.internal.os.BatteryStatsImpl: long[] mProcWakelocksData> = $r42;

        $r39 = new java.util.HashMap;

        specialinvoke $r39.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map mProcWakelockFileStats> = $r39;

        $r40 = new com.android.internal.net.NetworkStatsFactory;

        specialinvoke $r40.<com.android.internal.net.NetworkStatsFactory: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory> = $r40;

        $r44 = new android.net.NetworkStats;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r44.<android.net.NetworkStats: void <init>(long,int)>($l2, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurMobileSnapshot> = $r44;

        $r43 = new android.net.NetworkStats;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r43.<android.net.NetworkStats: void <init>(long,int)>($l1, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastMobileSnapshot> = $r43;

        $r46 = new android.net.NetworkStats;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r46.<android.net.NetworkStats: void <init>(long,int)>($l4, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurWifiSnapshot> = $r46;

        $r45 = new android.net.NetworkStats;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke $r45.<android.net.NetworkStats: void <init>(long,int)>($l3, 50);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiSnapshot> = $r45;

        $r50 = new android.net.NetworkStats$Entry;

        specialinvoke $r50.<android.net.NetworkStats$Entry: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats$Entry mTmpNetworkStatsEntry> = $r50;

        $r49 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces> = $r49;

        $r48 = newarray (java.lang.String)[0];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces> = $r48;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mChangedStates2> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitialAcquireWakeUid> = -1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiFullLockNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiScanNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mWifiMulticastNesting> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        $r47 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r47.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r47;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.AtomicFile mCheckinFile> = null;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler> = null;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$BatteryCallback;

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback> = r1;

        return;
    }

    public void setNumSpeedSteps(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $i1 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        if $i1 != 0 goto label1;

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = i0;

     label1:
        return;
    }

    public void setRadioScanningTimeout(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setTimeout(long)>(l0);

     label1:
        return;
    }

    public boolean startIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem $r1, $r3;
        android.os.Parcel $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistory>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = $r1;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke $r3.<android.os.BatteryStats$HistoryItem: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        return 1;
    }

    public boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1, r2, $r6, $r7, $r11, $r13, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.util.FastPrintWriter r3, $r8;
        android.os.Parcel $r4, $r5, $r15;
        int $i0, $i1;
        android.util.LogWriter $r9;
        android.os.BatteryStats$HistoryPrinter $r10, $r12;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r4.<android.os.Parcel: int dataPosition()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r5.<android.os.Parcel: int dataSize()>();

        if $i0 < $i1 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        z0 = $z7;

        if z0 != 0 goto label5;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>($r15, $r13);

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $b4 = $r14.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b4 != 6 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        $z6 = $z4 | $z5;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = $z6;

     label5:
        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator>;

        if r2 != null goto label7;

        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z3 != 0 goto label6;

        if z0 != 0 goto label6;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Old history ends before new history!");

     label6:
        return 0;

     label7:
        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>(r2);

        $r6 = r2.<android.os.BatteryStats$HistoryItem: android.os.BatteryStats$HistoryItem next>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = $r6;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow>;

        if $z1 != 0 goto label9;

        if z0 == 0 goto label8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "New history ends before old history!");

        goto label9;

     label8:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        $z2 = virtualinvoke r1.<android.os.BatteryStats$HistoryItem: boolean same(android.os.BatteryStats$HistoryItem)>($r7);

        if $z2 != 0 goto label9;

        $r8 = new com.android.internal.util.FastPrintWriter;

        $r9 = new android.util.LogWriter;

        specialinvoke $r9.<android.util.LogWriter: void <init>(int,java.lang.String)>(5, "BatteryStatsImpl");

        specialinvoke $r8.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>($r9);

        r3 = $r8;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Histories differ!");

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("Old history:");

        $r10 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke $r10.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        virtualinvoke $r10.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long,boolean,boolean)>(r3, r1, 0L, 0, 1);

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("New history:");

        $r12 = new android.os.BatteryStats$HistoryPrinter;

        specialinvoke $r12.<android.os.BatteryStats$HistoryPrinter: void <init>()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryReadTmp>;

        virtualinvoke $r12.<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long,boolean,boolean)>(r3, $r11, 0L, 0, 1);

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label9:
        return 1;
    }

    public void finishIteratingOldHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>($i0);

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryIterator> = null;

        return;
    }

    public int getHistoryTotalSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 262144;
    }

    public int getHistoryUsedSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        return $i0;
    }

    public boolean startIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        android.os.BatteryStats$HistoryTag r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.Parcel $r4, $r5;
        java.util.HashMap $r6, $r8, $r10;
        java.lang.String[] $r7, $r17;
        int[] $r9, $r19;
        java.util.Set $r11;
        boolean $z0;
        java.lang.Object $r12, $r13, $r15;
        java.lang.Integer $r14;
        java.lang.String $r16, $r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r4.<android.os.Parcel: int dataSize()>();

        if $i1 > 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r5.<android.os.Parcel: void setDataPosition(int)>(0);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mReadOverflow> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 1;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i2 = virtualinvoke $r6.<java.util.HashMap: int size()>();

        $r7 = newarray (java.lang.String)[$i2];

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings> = $r7;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i3 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        $r9 = newarray (int)[$i3];

        r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids> = $r9;

        r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars> = 0;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r13;

        $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (android.os.BatteryStats$HistoryTag) $r12;

        $r15 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Integer) $r15;

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $r16 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $r17[i0] = $r16;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i4 = r3.<android.os.BatteryStats$HistoryTag: int uid>;

        $r19[i0] = $i4;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars>;

        $r18 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i5 = virtualinvoke $r18.<java.lang.String: int length()>();

        $i8 = $i5 + 1;

        $i7 = $i6 + $i8;

        r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars> = $i7;

        goto label2;

     label3:
        return 1;
    }

    public int getHistoryStringPoolSize()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String[] $r1;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getHistoryStringPoolBytes()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $i0 = lengthof $r1;

        $i3 = $i0 * 12;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mReadHistoryChars>;

        $i2 = $i1 * 2;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public java.lang.String getHistoryTagPoolString(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getHistoryTagPoolUid(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: int[] mReadHistoryUids>;

        $i1 = $r1[i0];

        return $i1;
    }

    public boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.BatteryStats$HistoryItem r1;
        int i0, $i3;
        boolean z0, $z1;
        long l1, l2, $l7, $l8, $l9;
        android.os.Parcel $r2, $r3, $r4;
        byte $b4, $b5, $b6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.BatteryStats$HistoryItem;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        i0 = virtualinvoke $r2.<android.os.Parcel: int dataPosition()>();

        if i0 != 0 goto label1;

        virtualinvoke r1.<android.os.BatteryStats$HistoryItem: void clear()>();

     label1:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i3 = virtualinvoke $r3.<android.os.Parcel: int dataSize()>();

        if i0 < $i3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        return 0;

     label4:
        l1 = r1.<android.os.BatteryStats$HistoryItem: long time>;

        l2 = r1.<android.os.BatteryStats$HistoryItem: long currentTime>;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistoryDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>($r4, r1);

        $b4 = r1.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b4 == 5 goto label5;

        $b5 = r1.<android.os.BatteryStats$HistoryItem: byte cmd>;

        if $b5 == 7 goto label5;

        $b6 = l2 cmp 0L;

        if $b6 == 0 goto label5;

        $l8 = r1.<android.os.BatteryStats$HistoryItem: long time>;

        $l7 = $l8 - l1;

        $l9 = l2 + $l7;

        r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l9;

     label5:
        return 1;
    }

    public void finishIteratingHistoryLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel $r1, $r2;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mIteratingHistory> = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i0 = virtualinvoke $r1.<android.os.Parcel: int dataSize()>();

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>($i0);

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mReadHistoryStrings> = null;

        return;
    }

    public long getHistoryBaseTime()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        return $l0;
    }

    public int getStartCount()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        return $i0;
    }

    public boolean isOnBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        return $z0;
    }

    public boolean isScreenOn()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void initTimes(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1, $r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l2;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: void init(long,long)>(l0, l1);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$TimeBase: void init(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = l1;

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = l0;

        return;
    }

    void initDischarge()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastDischargeStepTime> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastChargeStepTime> = -1L;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations> = 0;

        return;
    }

    public void resetAllStatsCmdLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2, l3;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r4, $r6, $r7;
        byte $b4, $b5, $b9, $b10;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r3, $r5;
        int $i6, $i7, $i8;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = l0 * 1000L;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = l2 * 1000L;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b4 = $r1.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = $b4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l2, l0);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b5 = $r2.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = $b5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = $b5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $b5;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $b5;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$TimeBase: void reset(long,long)>(l1, l3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: void reset(long,long)>(l1, l3);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i7 = $r4.<android.os.BatteryStats$HistoryItem: int states>;

        $i6 = $i7 & 524288;

        if $i6 != 0 goto label3;

        $i8 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i8 != 2 goto label1;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b10 = $r7.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = $b10;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label2;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b9 = $r6.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = $b9;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

     label3:
        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initActiveHistoryEventsLocked(long,long)>(l2, l0);

        return;
    }

    private void resetAllStatsLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r1, r56;
        long $l1, $l2, $l3, $l4;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r17, $r38, $r39, $r41, $r47, $r50, $r51, $r52;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r12, $r13, $r14, $r42, $r44;
        java.util.HashMap $r18, $r20, $r22, $r23, $r26, $r30;
        android.util.SparseArray $r19, $r33, $r35, $r36;
        java.util.Collection $r21, $r25;
        java.lang.Object $r24, $r29, $r32;
        boolean $z13, $z14, $z15;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r27, $r28;
        com.android.internal.os.BatteryStatsImpl$Uid $r31;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r34, $r37, $r40, $r45, $r46, $r49, $r53;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r43, $r48;
        java.util.Iterator r54, r55;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = 0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l1 * 1000L;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = $l3 * 1000L;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initTimes(long,long)>($l2, $l4);

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i0 = 0;

     label01:
        if i0 >= 5 goto label02;

        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r50 = $r49[i0];

        virtualinvoke $r50.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i0 = i0 + 1;

        goto label01;

     label02:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer>;

        virtualinvoke $r6.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i9 = 0;

     label03:
        if i9 >= 5 goto label04;

        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r52 = $r53[i9];

        virtualinvoke $r52.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i9 = i9 + 1;

        goto label03;

     label04:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i10 = 0;

     label05:
        if i10 >= 17 goto label06;

        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r51 = $r45[i10];

        virtualinvoke $r51.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i10 = i10 + 1;

        goto label05;

     label06:
        i11 = 0;

     label07:
        if i11 >= 4 goto label08;

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r42 = $r48[i11];

        virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r44 = $r43[i11];

        virtualinvoke $r44.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        i11 = i11 + 1;

        goto label07;

     label08:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void reset(boolean)>(0);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i12 = 0;

     label09:
        if i12 >= 8 goto label10;

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r47 = $r46[i12];

        virtualinvoke $r47.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i12 = i12 + 1;

        goto label09;

     label10:
        i13 = 0;

     label11:
        if i13 >= 13 goto label12;

        $r37 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r38 = $r37[i13];

        virtualinvoke $r38.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i13 = i13 + 1;

        goto label11;

     label12:
        i14 = 0;

     label13:
        if i14 >= 5 goto label14;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r41 = $r40[i14];

        virtualinvoke $r41.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i14 = i14 + 1;

        goto label13;

     label14:
        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i15 = 0;

     label15:
        if i15 >= 4 goto label16;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r39 = $r34[i15];

        virtualinvoke $r39.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(boolean)>(0);

        i15 = i15 + 1;

        goto label15;

     label16:
        i16 = 0;

     label17:
        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i6 = virtualinvoke $r19.<android.util.SparseArray: int size()>();

        if i16 >= $i6 goto label19;

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r32 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object valueAt(int)>(i16);

        $r31 = (com.android.internal.os.BatteryStatsImpl$Uid) $r32;

        $z15 = virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl$Uid: boolean reset()>();

        if $z15 == 0 goto label18;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i8 = virtualinvoke $r36.<android.util.SparseArray: int keyAt(int)>(i16);

        virtualinvoke $r35.<android.util.SparseArray: void remove(int)>($i8);

        i16 = i16 + -1;

     label18:
        i16 = i16 + 1;

        goto label17;

     label19:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i5 = virtualinvoke $r18.<java.util.HashMap: int size()>();

        if $i5 <= 0 goto label22;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r25 = virtualinvoke $r26.<java.util.HashMap: java.util.Collection values()>();

        r54 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z14 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label21;

        $r29 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r29;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r1);

        goto label20;

     label21:
        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r30.<java.util.HashMap: void clear()>();

     label22:
        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i7 = virtualinvoke $r22.<java.util.HashMap: int size()>();

        if $i7 <= 0 goto label25;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.util.Collection values()>();

        r55 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>();

     label23:
        $z13 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label24;

        $r24 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>();

        r56 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r24;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$TimeBase: void remove(com.android.internal.os.BatteryStatsImpl$TimeBaseObs)>(r56);

        goto label23;

     label24:
        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r23.<java.util.HashMap: void clear()>();

     label25:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initDischarge()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>();

        return;
    }

    private void initActiveHistoryEventsLocked(long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1;
        int i2, i3, $i4, $i5;
        java.util.HashMap r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        android.util.SparseIntArray r4;
        boolean $z0, $z1;
        android.os.BatteryStats$HistoryEventTracker $r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 = 0;

     label1:
        if i2 >= 9 goto label8;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordAllHistory>;

        if $z0 != 0 goto label2;

        if i2 != 1 goto label2;

        goto label7;

     label2:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryEventTracker mActiveEvents>;

        r1 = virtualinvoke $r5.<android.os.BatteryStats$HistoryEventTracker: java.util.HashMap getStateForEvent(int)>(i2);

        if r1 != null goto label3;

        goto label7;

     label3:
        $r6 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (android.util.SparseIntArray) $r8;

        i3 = 0;

     label5:
        $i4 = virtualinvoke r4.<android.util.SparseIntArray: int size()>();

        if i3 >= $i4 goto label6;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r10;

        $i5 = virtualinvoke r4.<android.util.SparseIntArray: int keyAt(int)>(i3);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryEventLocked(long,long,int,java.lang.String,int)>(l0, l1, i2, $r9, $i5);

        i3 = i3 + 1;

        goto label5;

     label6:
        goto label4;

     label7:
        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    void updateDischargeScreenLevelsLocked(boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i0 = $i10 - $i9;

        if i0 <= 0 goto label1;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        $i12 = $i11 + i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i12;

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        $i13 = $i14 + i0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i13;

     label1:
        goto label3;

     label2:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        i15 = $i2 - $i1;

        if i15 <= 0 goto label3;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        $i6 = $i5 + i15;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i6;

        $i7 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        $i8 = $i7 + i15;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i8;

     label3:
        if z1 == 0 goto label4;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = $i4;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label5;

     label4:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = $i3;

     label5:
        return;
    }

    public void pullPendingStateUpdatesLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1, $z2;
        long $l0;
        int $i1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>();

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateNetworkActivityLocked(int,long)>(65535, $l0);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z1 == 0 goto label3;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i1 != 2 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(z0, z0);

     label3:
        return;
    }

    void setOnBatteryLocked(long, long, boolean, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l4, l5, $l12, $l13;
        boolean z0, z1, z2, z3, $z5, $z6, $z7, $z8;
        int i2, i3, $i6, $i8, $i9, $i10, $i11, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i36;
        android.os.Message r1;
        com.android.internal.os.BatteryStatsImpl$MyHandler $r2, $r4;
        android.os.Parcel r3, $r24;
        android.os.BatteryStats$HistoryItem $r5, $r6, $r8, $r9;
        byte $b7, $b16, $b25, $b34;
        com.android.internal.util.JournaledFile $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        android.os.Handler $r20;
        com.android.internal.os.BatteryStatsImpl$1 $r21;
        java.lang.String $r23;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z1 = 0;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        r1 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl$MyHandler: android.os.Message obtainMessage(int)>(2);

        if z0 == 0 goto label01;

        $b34 = 1;

        goto label02;

     label01:
        $b34 = 0;

     label02:
        r1.<android.os.Message: int arg1> = $b34;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$MyHandler mHandler>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$MyHandler: boolean sendMessage(android.os.Message)>(r1);

        l4 = l1 * 1000L;

        l5 = l0 * 1000L;

        $i6 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i6 != 2 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        z2 = $z8;

        if z0 == 0 goto label14;

        z3 = 0;

        $z6 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mNoAutoReset>;

        if $z6 != 0 goto label08;

        if i2 == 5 goto label06;

        if i3 >= 90 goto label06;

        $i35 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        if $i35 >= 20 goto label05;

        if i3 >= 80 goto label06;

     label05:
        $i36 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        if $i36 < 200 goto label08;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i33 = virtualinvoke $r24.<android.os.Parcel: int dataSize()>();

        if $i33 < 262144 goto label08;

     label06:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resetting battery stats: level=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dischargeLevel=");

        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowAmount=");

        $i29 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" highAmount=");

        $i31 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r23);

        $i30 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        if $i30 < 20 goto label07;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel,boolean)>(r3, 1);

        $r20 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r21 = new com.android.internal.os.BatteryStatsImpl$1;

        specialinvoke $r21.<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl,android.os.Parcel)>(r0, r3);

        virtualinvoke $r20.<android.os.Handler: boolean post(java.lang.Runnable)>($r21);

     label07:
        z1 = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeStartLevel> = i3;

        z3 = 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations> = 0;

     label08:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = z0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = z0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastDischargeStepTime> = -1L;

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i24;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b25 = (byte) i3;

        $r8.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b25;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i27 = $r9.<android.os.BatteryStats$HistoryItem: int states>;

        $i26 = $i27 & -524289;

        $r9.<android.os.BatteryStats$HistoryItem: int states> = $i26;

        if z3 == 0 goto label09;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l0, l1, z3);

     label09:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        if z2 == 0 goto label10;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = 0;

        goto label11;

     label10:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel> = i3;

     label11:
        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = 0;

        if z2 != 0 goto label12;

        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,boolean,long,long)>(1, $z7, l4, l5);

        goto label18;

     label14:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = z0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = z0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b7 = (byte) i3;

        $r5.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b7;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i8 = $r6.<android.os.BatteryStats$HistoryItem: int states>;

        $i10 = $i8 | 524288;

        $r6.<android.os.BatteryStats$HistoryItem: int states> = $i10;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l0, l1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if i3 >= $i9 goto label15;

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i15 = $i14 - i3;

        $i19 = $i15 - 1;

        $i17 = $i20 + $i19;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i17;

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        $i18 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i22 = $i18 - i3;

        $i21 = $i23 + $i22;

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i21;

     label15:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>(z2, z2);

        if z2 != 0 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,boolean,long,long)>(0, $z5, l4, l5);

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastChargeStepTime> = -1L;

        $i11 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i11;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

     label18:
        if z1 != 0 goto label19;

        $l13 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        $l12 = $l13 + 60000L;

        $b16 = $l12 cmp l0;

        if $b16 >= 0 goto label20;

     label19:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r7 == null goto label20;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label20:
        return;
    }

    private void startRecordingHistory(long, long, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l2, $l3;
        boolean z0;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3, $r4;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1.<android.os.BatteryStats$HistoryItem: long currentTime> = $l2;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $l3 = $r2.<android.os.BatteryStats$HistoryItem: long currentTime>;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime> = $l3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockRealtime> = l0;

        if z0 == 0 goto label1;

        $b4 = 7;

        goto label2;

     label1:
        $b4 = 5;

     label2:
        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l0, l1, $b4, $r3);

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r4.<android.os.BatteryStats$HistoryItem: long currentTime> = 0L;

        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void initActiveHistoryEventsLocked(long,long)>(l0, l1);

     label3:
        return;
    }

    private void recordCurrentTimeChangeLocked(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, l2;
        boolean $z0;
        android.os.BatteryStats$HistoryItem $r1, $r2, $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r1.<android.os.BatteryStats$HistoryItem: long currentTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastRecordedClockRealtime> = l1;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l1, l2, 5, $r2);

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $r3.<android.os.BatteryStats$HistoryItem: long currentTime> = 0L;

     label1:
        return;
    }

    private static int addLevelSteps(long[], int, long, int, long, long)
    {
        long[] r0;
        int i0, i2, i6, $i9, $i10, $i11, $i13;
        long l1, l3, l4, l5, l7, $l12, $l14;
        byte $b8, $b15;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        l4 := @parameter5: long;

        $b8 = l1 cmp 0L;

        if $b8 < 0 goto label4;

        if i2 <= 0 goto label4;

        l5 = l4 - l1;

        i6 = 0;

     label1:
        if i6 >= i2 goto label3;

        $i11 = lengthof r0;

        $i10 = $i11 - 1;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r0, 0, r0, 1, $i10);

        $i13 = i2 - i6;

        $l12 = (long) $i13;

        l7 = l5 / $l12;

        l5 = l5 - l7;

        $b15 = l7 cmp 1099511627775L;

        if $b15 <= 0 goto label2;

        l7 = 1099511627775L;

     label2:
        $l14 = l7 | l3;

        r0[0] = $l14;

        i6 = i6 + 1;

        goto label1;

     label3:
        i0 = i0 + i2;

        $i9 = lengthof r0;

        if i0 <= $i9 goto label4;

        i0 = lengthof r0;

     label4:
        return i0;
    }

    public void setBatteryState(int, int, int, int, int, int)
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, i1, i2, i3, i4, i5, i8, $i10, $i15, $i19, $i20, $i25, $i28, $i30, $i31, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i48, $i51, $i60, $i61, $i63, $i64;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long l6, l7, l9, $l22, $l23, $l24, $l26, $l27, $l29, $l32, $l34, $l46;
        java.lang.Throwable r2, $r28;
        android.os.BatteryStats$HistoryItem $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29;
        byte $b11, $b12, $b13, $b16, $b49, $b52, $b53, $b54, $b55, $b56, $b58, $b59;
        short $s14, $s18, $s47, $s57;
        char $c17, $c21, $c50, $c62;
        long[] $r13, $r14;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = r0;

        entermonitor r0;

     label01:
        if i2 != 0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        z0 = $z7;

        l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        i8 = $r4.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel>;

        if $z2 != 0 goto label06;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mHaveBatteryLevel> = 1;

        $z4 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 != $z4 goto label05;

        if z0 == 0 goto label04;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i64 = $r29.<android.os.BatteryStats$HistoryItem: int states>;

        $i63 = $i64 & -524289;

        $r29.<android.os.BatteryStats$HistoryItem: int states> = $i63;

        goto label05;

     label04:
        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $i60 = $r26.<android.os.BatteryStats$HistoryItem: int states>;

        $i61 = $i60 | 524288;

        $r26.<android.os.BatteryStats$HistoryItem: int states> = $i61;

     label05:
        i8 = i0;

     label06:
        if z0 == 0 goto label07;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = i3;

        $z6 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z6 != 0 goto label08;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l7, l6, 1);

        goto label08;

     label07:
        if i3 >= 96 goto label08;

        $z5 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory>;

        if $z5 != 0 goto label08;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l7, l6, 1);

     label08:
        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = i3;

        $i10 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        if $i10 >= 0 goto label09;

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = i3;

     label09:
        $z3 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if z0 == $z3 goto label10;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b53 = (byte) i3;

        $r19.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b53;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b58 = (byte) i0;

        $r24.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b58;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b59 = (byte) i1;

        $r25.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b59;

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b56 = (byte) i2;

        $r22.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b56;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s57 = (short) i4;

        $r23.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s57;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c62 = (char) i5;

        $r27.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c62;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(long,long,boolean,int,int)>(l7, l6, z0, i8, i3);

        goto label21;

     label10:
        z1 = 0;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b11 = $r5.<android.os.BatteryStats$HistoryItem: byte batteryLevel>;

        if $b11 == i3 goto label11;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b52 = (byte) i3;

        $r18.<android.os.BatteryStats$HistoryItem: byte batteryLevel> = $b52;

        z1 = 1;

     label11:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b12 = $r6.<android.os.BatteryStats$HistoryItem: byte batteryStatus>;

        if $b12 == i0 goto label12;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b55 = (byte) i0;

        $r21.<android.os.BatteryStats$HistoryItem: byte batteryStatus> = $b55;

        z1 = 1;

     label12:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b13 = $r7.<android.os.BatteryStats$HistoryItem: byte batteryHealth>;

        if $b13 == i1 goto label13;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b54 = (byte) i1;

        $r20.<android.os.BatteryStats$HistoryItem: byte batteryHealth> = $b54;

        z1 = 1;

     label13:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b16 = $r8.<android.os.BatteryStats$HistoryItem: byte batteryPlugType>;

        if $b16 == i2 goto label14;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $b49 = (byte) i2;

        $r15.<android.os.BatteryStats$HistoryItem: byte batteryPlugType> = $b49;

        z1 = 1;

     label14:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s14 = $r9.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i15 = $s14 + 10;

        if i4 >= $i15 goto label15;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s47 = $r17.<android.os.BatteryStats$HistoryItem: short batteryTemperature>;

        $i48 = $s47 - 10;

        if i4 > $i48 goto label16;

     label15:
        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $s18 = (short) i4;

        $r11.<android.os.BatteryStats$HistoryItem: short batteryTemperature> = $s18;

        z1 = 1;

     label16:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c17 = $r10.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i20 = $c17 + 20;

        if i5 > $i20 goto label17;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c50 = $r16.<android.os.BatteryStats$HistoryItem: char batteryVoltage>;

        $i51 = $c50 - 20;

        if i5 >= $i51 goto label18;

     label17:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        $c21 = (char) i5;

        $r12.<android.os.BatteryStats$HistoryItem: char batteryVoltage> = $c21;

        z1 = 1;

     label18:
        if z1 == 0 goto label19;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,long)>(l7, l6);

     label19:
        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode>;

        $l24 = (long) $i19;

        $l29 = $l24 << 48;

        $i25 = r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode>;

        $l22 = (long) $i25;

        $l23 = $l22 << 56;

        $l32 = $l29 | $l23;

        $i28 = i3 & 255;

        $l27 = (long) $i28;

        $l26 = $l27 << 40;

        l9 = $l32 | $l26;

        if z0 == 0 goto label20;

        $i37 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel>;

        if $i37 == i3 goto label21;

        $i43 = r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel>;

        if $i43 <= i3 goto label21;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        $i40 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        $l46 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastDischargeStepTime>;

        $i44 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel>;

        $i45 = $i44 - i3;

        $i41 = staticinvoke <com.android.internal.os.BatteryStatsImpl: int addLevelSteps(long[],int,long,int,long,long)>($r14, $i40, $l46, $i45, l9, l7);

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations> = $i41;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastDischargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMinDischargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastDischargeStepTime> = l7;

        $i42 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i42;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

        goto label21;

     label20:
        $i31 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        if $i31 == i3 goto label21;

        $i30 = r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel>;

        if $i30 >= i3 goto label21;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        $i33 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        $l34 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastChargeStepTime>;

        $i36 = r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel>;

        $i35 = i3 - $i36;

        $i39 = staticinvoke <com.android.internal.os.BatteryStatsImpl: int addLevelSteps(long[],int,long,int,long,long)>($r13, $i33, $l34, $i35, l9, l7);

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations> = $i39;

        r0.<com.android.internal.os.BatteryStatsImpl: int mLastChargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMaxChargeStepLevel> = i3;

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastChargeStepTime> = l7;

        $i38 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurStepMode>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mInitStepMode> = $i38;

        r0.<com.android.internal.os.BatteryStatsImpl: int mModStepMode> = 0;

     label21:
        if z0 != 0 goto label22;

        if i0 != 5 goto label22;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 0;

     label22:
        exitmonitor r1;

     label23:
        goto label26;

     label24:
        $r28 := @caughtexception;

        r2 = $r28;

        exitmonitor r1;

     label25:
        throw r2;

     label26:
        return;

        catch java.lang.Throwable from label01 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public void updateKernelWakelocksLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.util.Map r1;
        java.util.Iterator r2, r22;
        java.util.Map$Entry r3, r23;
        java.lang.String r4;
        com.android.internal.os.BatteryStatsImpl$KernelWakelockStats r5;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r6, $r19, r24;
        java.util.Set $r7, $r10;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.HashMap $r8, $r9, $r15, $r20;
        java.lang.Object $r11, $r12, $r13, $r14, $r16, $r17;
        long $l6;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r18;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: java.util.Map readKernelWakelockStats()>();

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", "Couldn\'t get kernel wake lock stats");

        return;

     label1:
        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r14;

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r13;

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (com.android.internal.os.BatteryStatsImpl$KernelWakelockStats) $r16;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r17;

        if r6 != null goto label3;

        $r19 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r19.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,boolean)>($r18, 1);

        r6 = $r19;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r6);

     label3:
        $i4 = r5.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: int mCount>;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedCount(int)>($i4);

        $l6 = r5.<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: long mTotalTime>;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedTotalTime(long)>($l6);

        $i5 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setUpdateVersion(int)>($i5);

        goto label2;

     label4:
        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i1 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i0 == $i1 goto label7;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        r22 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r12 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r12;

        $r11 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        r24 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r11;

        $i3 = virtualinvoke r24.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>();

        $i2 = <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion>;

        if $i3 == $i2 goto label6;

        virtualinvoke r24.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setStale()>();

     label6:
        goto label5;

     label7:
        return;
    }

    private void updateNetworkActivityLocked(int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i3, i5, i6, $i9, $i10, $i11, $i14, $i15, $i26, $i31, $i36, i48;
        long l1, l2, l4, l7, l8, $l12, $l16, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l29, $l32, $l33, $l34, $l37, $l38, $l39, $l40, $l41, $l43, $l44, $l45, $l46;
        android.net.NetworkStats r1, r2, $r9, $r11, $r20, $r26, r40, r41, r42, r44;
        java.io.IOException r3, $r36, $r39, r43;
        com.android.internal.os.BatteryStatsImpl$Uid r4, r6;
        android.net.NetworkStats$Entry r5, $r12, $r29, r45;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r7, $r8, $r21, $r24;
        com.android.internal.net.NetworkStatsFactory $r10, $r23;
        byte $b13, $b17, $b27, $b28, $b30, $b35;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r13, $r16, $r19, $r22, $r25, $r28, $r32, $r33, $r34, $r37;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r14, $r15, $r17, $r18, $r30, $r31, $r35, $r38;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r27;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 != 0 goto label01;

        return;

     label01:
        $i10 = i0 & 1;

        if $i10 == 0 goto label11;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces>;

        $i26 = lengthof $r21;

        if $i26 <= 0 goto label11;

        r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurMobileSnapshot>;

     label02:
        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory>;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mMobileIfaces>;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastMobileSnapshot>;

        r1 = virtualinvoke $r23.<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail(int,java.lang.String[],int,android.net.NetworkStats)>(-1, $r24, 0, $r20);

     label03:
        goto label05;

     label04:
        $r39 := @caughtexception;

        r3 = $r39;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Failed to read mobile network stats", r3);

        return;

     label05:
        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurMobileSnapshot> = r1;

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastMobileSnapshot> = r2;

        $z2 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z2 == 0 goto label11;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mTmpNetworkStats>;

        r40 = staticinvoke <android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats$NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>(r1, r2, null, null, $r26);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mTmpNetworkStats> = r40;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        l2 = virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long checkpointRunningLocked(long)>(l1);

        l4 = virtualinvoke r40.<android.net.NetworkStats: long getTotalPackets()>();

        i5 = virtualinvoke r40.<android.net.NetworkStats: int size()>();

        i6 = 0;

     label06:
        if i6 >= i5 goto label10;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats$Entry mTmpNetworkStatsEntry>;

        r5 = virtualinvoke r40.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i6, $r29);

        $l32 = r5.<android.net.NetworkStats$Entry: long rxBytes>;

        $b28 = $l32 cmp 0L;

        if $b28 == 0 goto label09;

        $l29 = r5.<android.net.NetworkStats$Entry: long txBytes>;

        $b30 = $l29 cmp 0L;

        if $b30 != 0 goto label07;

        goto label09;

     label07:
        $i31 = r5.<android.net.NetworkStats$Entry: int uid>;

        $i36 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i31);

        r6 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i36);

        $l37 = r5.<android.net.NetworkStats$Entry: long rxBytes>;

        $l38 = r5.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(0, $l37, $l38);

        $l33 = r5.<android.net.NetworkStats$Entry: long txBytes>;

        $l34 = r5.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(1, $l33, $l34);

        $b35 = l2 cmp 0L;

        if $b35 <= 0 goto label08;

        $l43 = r5.<android.net.NetworkStats$Entry: long rxPackets>;

        $l45 = r5.<android.net.NetworkStats$Entry: long txPackets>;

        l7 = $l43 + $l45;

        $l44 = l2 * l7;

        l8 = $l44 / l4;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid: void noteMobileRadioActiveTimeLocked(long)>(l8);

        l2 = l2 - l8;

        l4 = l4 - l7;

     label08:
        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r34 = $r30[0];

        $l40 = r5.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l40);

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r32 = $r35[1];

        $l41 = r5.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r32.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l41);

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r33 = $r31[0];

        $l39 = r5.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke $r33.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l39);

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r37 = $r38[1];

        $l46 = r5.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke $r37.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l46);

     label09:
        i6 = i6 + 1;

        goto label06;

     label10:
        $b27 = l2 cmp 0L;

        if $b27 <= 0 goto label11;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(l2);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>(1L);

     label11:
        $i9 = i0 & 2;

        if $i9 == 0 goto label19;

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $i11 = lengthof $r7;

        if $i11 <= 0 goto label19;

        r41 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurWifiSnapshot>;

     label12:
        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.net.NetworkStatsFactory mNetworkStatsFactory>;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String[] mWifiIfaces>;

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiSnapshot>;

        r42 = virtualinvoke $r10.<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail(int,java.lang.String[],int,android.net.NetworkStats)>(-1, $r8, 0, $r9);

     label13:
        goto label15;

     label14:
        $r36 := @caughtexception;

        r43 = $r36;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStatsImpl", "Failed to read wifi network stats", r43);

        return;

     label15:
        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mCurWifiSnapshot> = r42;

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mLastWifiSnapshot> = r41;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal>;

        if $z1 == 0 goto label19;

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mTmpNetworkStats>;

        r44 = staticinvoke <android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats$NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>(r42, r41, null, null, $r11);

        r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats mTmpNetworkStats> = r44;

        i48 = virtualinvoke r44.<android.net.NetworkStats: int size()>();

        i3 = 0;

     label16:
        if i3 >= i48 goto label19;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats$Entry mTmpNetworkStatsEntry>;

        r45 = virtualinvoke r44.<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>(i3, $r12);

        $l12 = r45.<android.net.NetworkStats$Entry: long rxBytes>;

        $b13 = $l12 cmp 0L;

        if $b13 == 0 goto label18;

        $l16 = r45.<android.net.NetworkStats$Entry: long txBytes>;

        $b17 = $l16 cmp 0L;

        if $b17 != 0 goto label17;

        goto label18;

     label17:
        $i14 = r45.<android.net.NetworkStats$Entry: int uid>;

        $i15 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>($i14);

        r4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>($i15);

        $l18 = r45.<android.net.NetworkStats$Entry: long rxBytes>;

        $l20 = r45.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(2, $l18, $l20);

        $l22 = r45.<android.net.NetworkStats$Entry: long txBytes>;

        $l19 = r45.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void noteNetworkActivityLocked(int,long,long)>(3, $l22, $l19);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r13 = $r14[2];

        $l21 = r45.<android.net.NetworkStats$Entry: long rxBytes>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l21);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r16 = $r17[3];

        $l23 = r45.<android.net.NetworkStats$Entry: long txBytes>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l23);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r19 = $r15[2];

        $l25 = r45.<android.net.NetworkStats$Entry: long rxPackets>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l25);

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r22 = $r18[3];

        $l24 = r45.<android.net.NetworkStats$Entry: long txPackets>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void addCountLocked(long)>($l24);

     label18:
        i3 = i3 + 1;

        goto label16;

     label19:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public long getAwakeTimeBattery()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>();

        $l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>($l0, 1);

        return $l1;
    }

    public long getAwakeTimePlugged()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $l0 * 1000L;

        $l2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        $l3 = $l1 - $l2;

        return $l3;
    }

    public long computeUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l3 = l0 - $l2;

        $l5 = $l4 + $l3;

        return $l5;

     label2:
        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        $l9 = l0 - $l8;

        return $l9;

     label3:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l6 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptimeStart()>();

        $l7 = l0 - $l6;

        return $l7;

     label4:
        return 0L;
    }

    public long computeRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $l4 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l3 = l0 - $l2;

        $l5 = $l4 + $l3;

        return $l5;

     label2:
        $l8 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        $l9 = l0 - $l8;

        return $l9;

     label3:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l6 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtimeStart()>();

        $l7 = l0 - $l6;

        return $l7;

     label4:
        return 0L;
    }

    public long computeBatteryUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeUptime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeRealtime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryScreenOffUptime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeUptime(long,int)>(l0, i1);

        return $l2;
    }

    public long computeBatteryScreenOffRealtime(long, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l2;
        int i1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long computeRealtime(long,int)>(l0, i1);

        return $l2;
    }

    private long computeTimePerLevel(long[], int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] r1;
        int i0, i2;
        long l1, $l3, $l4, $l5, $l6;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: long[];

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        return -1L;

     label1:
        l1 = 0L;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        $l5 = r1[i2];

        $l6 = $l5 & 1099511627775L;

        l1 = l1 + $l6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $l3 = (long) i0;

        $l4 = l1 / $l3;

        return $l4;
    }

    public long computeBatteryTimeRemaining(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l6, $l7, $l8;
        boolean $z0;
        int $i2, $i3, $i5;
        long[] $r1;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        if $i2 >= 1 goto label2;

        return -1L;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        l1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeTimePerLevel(long[],int)>($r1, $i3);

        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label3;

        return -1L;

     label3:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        $l6 = (long) $i5;

        $l7 = l1 * $l6;

        $l8 = $l7 * 1000L;

        return $l8;
    }

    public int getNumDischargeStepDurations()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        return $i0;
    }

    public long[] getDischargeStepDurationsArray()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        return $r1;
    }

    public long computeChargeTimeRemaining(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, l1, $l7, $l8, $l9;
        boolean $z0;
        int $i2, $i3, $i5, $i6;
        long[] $r1;
        byte $b4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        if $i2 >= 1 goto label2;

        return -1L;

     label2:
        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        l1 = specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeTimePerLevel(long[],int)>($r1, $i3);

        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label3;

        return -1L;

     label3:
        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        $i6 = 100 - $i5;

        $l7 = (long) $i6;

        $l8 = l1 * $l7;

        $l9 = $l8 * 1000L;

        return $l9;
    }

    public int getNumChargeStepDurations()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        return $i0;
    }

    public long[] getChargeStepDurationsArray()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long[] $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        return $r1;
    }

    long getBatteryUptimeLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $l0 * 1000L;

        $l2 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>($l1);

        return $l2;
    }

    public long getBatteryUptime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>(l0);

        return $l1;
    }

    public long getBatteryRealtime(long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        long l0, $l1;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l1 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l0);

        return $l1;
    }

    public int getDischargeStartLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getDischargeStartLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        return $i0;
    }

    public int getDischargeCurrentLevel()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        $i0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getDischargeCurrentLevelLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        return $i0;
    }

    public int getLowDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        $i6 = $i5 - 1;

        i0 = i0 + $i6;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getHighDischargeAmountSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        if $i2 >= $i1 goto label2;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i5 = $i4 - $i3;

        i0 = i0 + $i5;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getDischargeAmount(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>();

        $i3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>();

        $i4 = $i2 - $i3;

     label2:
        i1 = $i4;

        if i1 >= 0 goto label3;

        i1 = 0;

     label3:
        return i1;
    }

    public int getDischargeAmountScreenOn()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i1 != 2 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i3 >= $i2 goto label2;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i0 = i0 + $i6;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getDischargeAmountScreenOnSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i1 != 2 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        if $i3 >= $i2 goto label2;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOnUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i0 = i0 + $i6;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getDischargeAmountScreenOff()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i1 == 2 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i3 >= $i2 goto label2;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i0 = i0 + $i6;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getDischargeAmountScreenOffSinceCharge()
    {
        com.android.internal.os.BatteryStatsImpl r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 = r0;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState>;

        if $i1 == 2 goto label2;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        if $i3 >= $i2 goto label2;

        $i5 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeScreenOffUnplugLevel>;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        $i6 = $i5 - $i4;

        i0 = i0 + $i6;

     label2:
        exitmonitor r1;

     label3:
        return i0;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getCpuSpeedSteps()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $i0 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        return $i0;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl$Uid r1, $r4;
        android.util.SparseArray $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r4.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i0);

        r1 = $r4;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

     label1:
        return r1;
    }

    public void removeUidStatsLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r3 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl$Uid r2;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        r2 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r3 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r1);

        return $r3;
    }

    public com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int, java.lang.String, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i1;
        java.lang.String r1, r2;
        com.android.internal.os.BatteryStatsImpl$Uid r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv $r4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>(i0);

        r3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>(i1);

        $r4 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void distributeWorkLocked(int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        int i0, i2, i4, i7, $i10, $i11, $i13, $i30, $i31, $i33, $i35;
        com.android.internal.os.BatteryStatsImpl$Uid r1, r3;
        long l1, l3, l5, l6, $l8, $l9, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l34, l37, l38, l39, l40, l41, l42, l43;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r2, r4;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r5, r7, $r19;
        android.util.SparseArray $r6, $r12, $r13;
        java.lang.Object $r8, $r10, $r14;
        android.util.ArrayMap $r9, $r11;
        byte $b12;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r15, $r16, $r18, $r21;
        java.util.concurrent.atomic.AtomicInteger $r17, $r22;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r20;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r8 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(1010);

        r1 = (com.android.internal.os.BatteryStatsImpl$Uid) $r8;

        if r1 == null goto label9;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l8 * 1000L;

        l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>($l9, i0);

        $r9 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $i10 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

        i2 = $i10 - 1;

     label1:
        if i2 < 0 goto label9;

        $r11 = r1.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $r10 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r10;

        l3 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>(l1, i0);

        i4 = 0;

     label2:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i11 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i4 >= $i11 goto label8;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r14 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r3 = (com.android.internal.os.BatteryStatsImpl$Uid) $r14;

        $i13 = r3.<com.android.internal.os.BatteryStatsImpl$Uid: int mUid>;

        if $i13 == 1010 goto label7;

        l5 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)>(l1, i0);

        $b12 = l5 cmp 0L;

        if $b12 <= 0 goto label7;

        r4 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>("*wifi*");

        l6 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)>(i0);

        $l14 = l6 * l5;

        l37 = $l14 / l3;

        $l15 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l17 = $l15 + l37;

        r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l17;

        $l18 = r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        $l16 = $l18 - l37;

        r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l16;

        l38 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)>(i0);

        $l21 = l38 * l5;

        l39 = $l21 / l3;

        $l22 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l19 = $l22 + l39;

        r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l19;

        $l20 = r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        $l25 = $l20 - l39;

        r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l25;

        l40 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)>(i0);

        $l24 = l40 * l5;

        l41 = $l24 / l3;

        $l23 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l28 = $l23 + l41;

        r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l28;

        $l27 = r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        $l26 = $l27 - l41;

        r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l26;

        i7 = 0;

     label3:
        $r15 = r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $i31 = lengthof $r15;

        if i7 >= $i31 goto label6;

        $r16 = r2.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r5 = $r16[i7];

        if r5 == null goto label5;

        $i30 = virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: int getCountLocked(int)>(i0);

        l42 = (long) $i30;

        $l29 = l42 * l5;

        l43 = $l29 / l3;

        $r18 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        r7 = $r18[i7];

        if r7 != null goto label4;

        $r19 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r19.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r20);

        r7 = $r19;

        $r21 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r21[i7] = r7;

     label4:
        $r17 = r7.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i33 = (int) l43;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i33);

        $r22 = r5.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $l34 = neg l43;

        $i35 = (int) $l34;

        virtualinvoke $r22.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i35);

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        l3 = l3 - l5;

     label7:
        i4 = i4 + 1;

        goto label2;

     label8:
        i2 = i2 + -1;

        goto label1;

     label9:
        return;
    }

    public void shutdownLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown> = 1;

        return;
    }

    public void writeAsyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeLocked(boolean)>(0);

        return;
    }

    public void writeSyncLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeLocked(boolean)>(1);

        return;
    }

    void writeLocked(boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        boolean z0, $z1;
        android.os.Parcel r1, $r3, $r6;
        com.android.internal.util.JournaledFile $r2;
        long $l0;
        android.os.Handler $r4;
        com.android.internal.os.BatteryStatsImpl$2 $r5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "writeLocked: no file associated with this instance");

        return;

     label1:
        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mShuttingDown>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel,boolean)>(r1, 1);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l0;

        $r3 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        if $r3 == null goto label3;

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        virtualinvoke $r6.<android.os.Parcel: void recycle()>();

     label3:
        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = r1;

        if z0 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk()>();

        goto label5;

     label4:
        $r4 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r5 = new com.android.internal.os.BatteryStatsImpl$2;

        specialinvoke $r5.<com.android.internal.os.BatteryStatsImpl$2: void <init>(com.android.internal.os.BatteryStatsImpl)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

     label5:
        return;
    }

    public void commitPendingDataToDisk()
    {
        com.android.internal.os.BatteryStatsImpl r0, r2;
        android.os.Parcel r1;
        java.lang.Throwable r3, r4, $r13, $r18;
        java.util.concurrent.locks.ReentrantLock $r6, $r12, $r15, $r17;
        java.io.FileOutputStream $r7, r19;
        com.android.internal.util.JournaledFile $r8, $r11, $r16;
        java.io.File $r9;
        byte[] $r10;
        java.io.IOException $r14, r20;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r2 = r0;

        entermonitor r0;

     label01:
        r1 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite>;

        r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mPendingWrite> = null;

        if r1 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $r7 = new java.io.FileOutputStream;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        $r9 = virtualinvoke $r8.<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>();

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

        r19 = $r7;

        $r10 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r19.<java.io.FileOutputStream: void write(byte[])>($r10);

        virtualinvoke r19.<java.io.FileOutputStream: void flush()>();

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r19);

        virtualinvoke r19.<java.io.FileOutputStream: void close()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        virtualinvoke $r11.<com.android.internal.util.JournaledFile: void commit()>();

     label08:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label13;

     label09:
        $r14 := @caughtexception;

        r20 = $r14;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error writing battery statistics", r20);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        virtualinvoke $r16.<com.android.internal.util.JournaledFile: void rollback()>();

     label10:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label13;

     label11:
        $r18 := @caughtexception;

        r4 = $r18;

     label12:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r17.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r4;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void readLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;
        java.io.File r1;
        java.io.FileInputStream r2, $r8;
        byte[] r3;
        android.os.Parcel r4, $r10;
        com.android.internal.util.JournaledFile $r5, $r7;
        android.util.SparseArray $r6;
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r9;
        android.os.BatteryStats$HistoryItem $r11;
        java.lang.Exception $r12, r13;
        long l4, l5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        if $r5 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "readLocked: no file associated with this instance");

        return;

     label1:
        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r6.<android.util.SparseArray: void clear()>();

     label2:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.util.JournaledFile mFile>;

        r1 = virtualinvoke $r7.<com.android.internal.util.JournaledFile: java.io.File chooseForRead()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

     label3:
        return;

     label4:
        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r2 = $r8;

        r3 = staticinvoke <com.android.internal.os.BatteryStatsHelper: byte[] readFully(java.io.FileInputStream)>(r2);

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r3;

        virtualinvoke r4.<android.os.Parcel: void unmarshall(byte[],int,int)>(r3, 0, $i0);

        virtualinvoke r4.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r2.<java.io.FileInputStream: void close()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>(r4);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r13 = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BatteryStats", "Error reading battery statistics", r13);

     label7:
        $r9 = <android.os.Build: java.lang.String ID>;

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r9;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i1 = virtualinvoke $r10.<android.os.Parcel: int dataPosition()>();

        if $i1 <= 0 goto label8;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mRecordingHistory> = 1;

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.BatteryStats$HistoryItem mHistoryCur>;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,long,byte,android.os.BatteryStats$HistoryItem)>(l4, l5, 4, $r11);

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl: void startRecordingHistory(long,long,boolean)>(l4, l5, 0);

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public int describeContents()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        return 0;
    }

    void readHistory(android.os.Parcel, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r4, $r5, $r7;
        boolean z0;
        long l0, $l6, $l9, $l10, $l11, l22;
        int i1, i2, i3, i4, $i5, $i7, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;
        java.lang.String r2, $r10, $r15, $r18;
        android.os.BatteryStats$HistoryTag r3, $r16;
        java.util.HashMap $r6, $r17;
        byte $b8;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14;
        java.lang.Integer $r19;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r4.<android.os.Parcel: void setDataSize(int)>(0);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r5.<android.os.Parcel: void setDataPosition(int)>(0);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = 0;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r16 = new android.os.BatteryStats$HistoryTag;

        specialinvoke $r16.<android.os.BatteryStats$HistoryTag: void <init>()>();

        r3 = $r16;

        r3.<android.os.BatteryStats$HistoryTag: java.lang.String string> = r2;

        r3.<android.os.BatteryStats$HistoryTag: int uid> = i4;

        r3.<android.os.BatteryStats$HistoryTag: int poolIdx> = i3;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r19);

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx>;

        if i3 < $i14 goto label2;

        $i19 = i3 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNextHistoryTagIdx> = $i19;

     label2:
        $i18 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars>;

        $r18 = r3.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        $i17 = virtualinvoke $r18.<java.lang.String: int length()>();

        $i16 = $i17 + 1;

        $i15 = $i18 + $i16;

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumHistoryTagChars> = $i15;

        i2 = i2 + 1;

        goto label1;

     label3:
        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i21 = virtualinvoke r1.<android.os.Parcel: int dataPosition()>();

        if i20 < 983040 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer too large ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r15);

        goto label6;

     label4:
        $i5 = i20 & -4;

        if $i5 == i20 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: history data buffer not aligned ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r10);

        goto label6;

     label5:
        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        virtualinvoke $r7.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>(r1, i21, i20);

        $i7 = i21 + i20;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>($i7);

     label6:
        if z0 == 0 goto label7;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readOldHistory(android.os.Parcel)>(r1);

     label7:
        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = l0;

        $l6 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $b8 = $l6 cmp 0L;

        if $b8 <= 0 goto label8;

        l22 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l10 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l9 = $l10 - l22;

        $l11 = $l9 + 1L;

        r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime> = $l11;

     label8:
        return;
    }

    void readOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    void writeHistory(android.os.Parcel, boolean, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1, $r8, $r9, $r10;
        boolean z0, z1, $z2;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        android.os.BatteryStats$HistoryTag r4;
        long $l0, $l1, $l2;
        java.util.HashMap $r5, $r6;
        int $i3, $i4, $i5, $i6, $i7;
        java.util.Set $r7;
        java.lang.Object $r11, $r12, $r14;
        java.lang.Integer $r13;
        java.lang.String $r15;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl: long mHistoryBaseTime>;

        $l0 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastHistoryElapsedRealtime>;

        $l2 = $l1 + $l0;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        if z0 != 0 goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $i3 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mHistoryTagPool>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r12;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (android.os.BatteryStats$HistoryTag) $r11;

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r14;

        $i6 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $r15 = r4.<android.os.BatteryStats$HistoryTag: java.lang.String string>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        $i7 = r4.<android.os.BatteryStats$HistoryTag: int uid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        goto label2;

     label3:
        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i4 = virtualinvoke $r8.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: android.os.Parcel mHistoryBuffer>;

        $i5 = virtualinvoke $r10.<android.os.Parcel: int dataSize()>();

        virtualinvoke r1.<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>($r9, 0, $i5);

        if z1 == 0 goto label4;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeOldHistory(android.os.Parcel)>(r1);

     label4:
        return;
    }

    void writeOldHistory(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        return;
    }

    public void readSummaryFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i44, $i47, $i48, $i51, $i58, $i59, $i60, $i62, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93;
        java.lang.String r2, r3, r5, r6, r7, $r10, $r11, $r36, $r39, $r43, $r57, $r59, $r63, $r67, $r71, $r85, $r101, $r107, $r116, $r122, r137, r138, r140;
        com.android.internal.os.BatteryStatsImpl$Uid r4, $r33;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r8;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r9;
        long $l9, $l11, $l12, $l41, $l45, $l49, $l50;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r12, $r13, $r53;
        long[] $r14, $r15;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r29, $r55, $r86, $r87, $r90, $r91, $r93, $r95, $r96, $r97, $r98, $r109, $r113, $r115, $r118, $r129, $r131, $r133;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r21, $r22, $r28, $r73, $r75, $r79, $r83, $r111, $r135;
        java.lang.StringBuilder $r30, $r31, $r35, $r37, $r38, $r40, $r41, $r42, $r44, $r47, $r48, $r49, $r54, $r56, $r58, $r60, $r61, $r62, $r64, $r65, $r66, $r68, $r69, $r70, $r80, $r81, $r82, $r89, $r100, $r102, $r103, $r105, $r106, $r119, $r120, $r121, $r123, $r124, $r125, $r126, $r127, $r128;
        android.os.BadParcelableException $r32;
        android.util.SparseArray $r34;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter $r45, $r50;
        boolean $z0;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r46, $r51, $r52;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r72, $r74, $r84, $r110, $r136;
        com.android.internal.os.BatteryStatsImpl$Counter $r76;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r77, $r78;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r88, $r92, $r108, $r112, $r114, $r117, $r130, $r132, $r134;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r94;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer $r99, $r104;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r139;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == 114 goto label01;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readFromParcel: version got ");

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r124 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(114);

        $r123 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; erasing old stats");

        $r122 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", $r122);

        return;

     label01:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistory(android.os.Parcel,boolean)>(r1, 1);

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i10;

        $l9 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l9;

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l12;

        $l11 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l11;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = $r11;

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r10;

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r1);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readSummaryFromParcel(android.os.Parcel)>(r1);

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i14;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = $i13;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i16;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = $i15;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i19;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i20;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i17;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i18;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations> = $i22;

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>($r15);

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations> = $i21;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>($r14);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        $i24 = $i23 + 1;

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i24;

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i1 = 0;

     label02:
        if i1 >= 5 goto label03;

        $r130 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r129 = $r130[i1];

        virtualinvoke $r129.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i1 = i1 + 1;

        goto label02;

     label03:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = 0;

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i66 = 0;

     label04:
        if i66 >= 5 goto label05;

        $r132 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r131 = $r132[i66];

        virtualinvoke $r131.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i66 = i66 + 1;

        goto label04;

     label05:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i67 = 0;

     label06:
        if i67 >= 17 goto label07;

        $r134 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r133 = $r134[i67];

        virtualinvoke $r133.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i67 = i67 + 1;

        goto label06;

     label07:
        i68 = 0;

     label08:
        if i68 >= 4 goto label09;

        $r110 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r111 = $r110[i68];

        virtualinvoke $r111.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r136 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r135 = $r136[i68];

        virtualinvoke $r135.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i68 = i68 + 1;

        goto label08;

     label09:
        $i25 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_LOW>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = $i25;

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i69 = 0;

     label10:
        if i69 >= 8 goto label11;

        $r108 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r109 = $r108[i69];

        virtualinvoke $r109.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i69 = i69 + 1;

        goto label10;

     label11:
        i70 = 0;

     label12:
        if i70 >= 13 goto label13;

        $r114 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r115 = $r114[i70];

        virtualinvoke $r115.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i70 = i70 + 1;

        goto label12;

     label13:
        i71 = 0;

     label14:
        if i71 >= 5 goto label15;

        $r112 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r113 = $r112[i71];

        virtualinvoke $r113.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i71 = i71 + 1;

        goto label14;

     label15:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i72 = 0;

     label16:
        if i72 >= 4 goto label17;

        $r117 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r118 = $r117[i72];

        virtualinvoke $r118.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i72 = i72 + 1;

        goto label16;

     label17:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn> = 0;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r29.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i73 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i73 <= 10000 goto label18;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many kernel wake locks ");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i73);

        $r116 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r116);

        return;

     label18:
        i2 = 0;

     label19:
        if i2 >= i73 goto label21;

        $i60 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i60 == 0 goto label20;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r99 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>(r2);

        virtualinvoke $r99.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label20:
        i2 = i2 + 1;

        goto label19;

     label21:
        i74 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i74 <= 10000 goto label22;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wakeup reasons ");

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i74);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r101);

        return;

     label22:
        i75 = 0;

     label23:
        if i75 >= i74 goto label25;

        $i62 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i62 == 0 goto label24;

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r104 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>(r3);

        virtualinvoke $r104.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label24:
        i75 = i75 + 1;

        goto label23;

     label25:
        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = $i26;

        $i27 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        if $i27 < 0 goto label26;

        $i29 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        if $i29 <= 100 goto label27;

     label26:
        $r32 = new android.os.BadParcelableException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad speed steps in data: ");

        $i28 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<android.os.BadParcelableException: void <init>(java.lang.String)>($r36);

        throw $r32;

     label27:
        i76 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i76 <= 10000 goto label28;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many uids ");

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i76);

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r107);

        return;

     label28:
        i77 = 0;

     label29:
        if i77 >= i76 goto label78;

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r33 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r33.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i3);

        r4 = $r33;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r34.<android.util.SparseArray: void put(int,java.lang.Object)>(i3, r4);

        r4.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiRunning> = 0;

        $i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i34 == 0 goto label30;

        $r91 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r91.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label30:
        r4.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mFullWifiLockOut> = 0;

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label31;

        $r90 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r90.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label31:
        r4.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiScanStarted> = 0;

        $i36 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i36 == 0 goto label32;

        $r87 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        virtualinvoke $r87.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label32:
        r4.<com.android.internal.os.BatteryStatsImpl$Uid: int mWifiBatchedScanBinStarted> = -1;

        i4 = 0;

     label33:
        if i4 >= 5 goto label35;

        $i58 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i58 == 0 goto label34;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void makeWifiBatchedScanBin(int,android.os.Parcel)>(i4, null);

        $r88 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r86 = $r88[i4];

        virtualinvoke $r86.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label34:
        i4 = i4 + 1;

        goto label33;

     label35:
        r4.<com.android.internal.os.BatteryStatsImpl$Uid: boolean mWifiMulticastEnabled> = 0;

        $i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label36;

        $r96 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r96.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label36:
        $i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label37;

        $r95 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createAudioTurnedOnTimerLocked()>();

        virtualinvoke $r95.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label37:
        $i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label38;

        $r98 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createVideoTurnedOnTimerLocked()>();

        virtualinvoke $r98.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label38:
        $i32 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label39;

        $r97 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer createForegroundActivityTimerLocked()>();

        virtualinvoke $r97.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label39:
        r4.<com.android.internal.os.BatteryStatsImpl$Uid: int mProcessState> = 3;

        i78 = 0;

     label40:
        if i78 >= 3 goto label42;

        $i59 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i59 == 0 goto label41;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void makeProcessState(int,android.os.Parcel)>(i78, null);

        $r92 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r93 = $r92[i78];

        virtualinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label41:
        i78 = i78 + 1;

        goto label40;

     label42:
        $i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i33 == 0 goto label43;

        $r94 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer createVibratorOnTimerLocked()>();

        virtualinvoke $r94.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label43:
        $i39 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label46;

        $r78 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r78 != null goto label44;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>();

     label44:
        i79 = 0;

     label45:
        if i79 >= 3 goto label46;

        $r77 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r76 = $r77[i79];

        virtualinvoke $r76.<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i79 = i79 + 1;

        goto label45;

     label46:
        $i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i38 == 0 goto label50;

        $r84 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        if $r84 != null goto label47;

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void initNetworkActivityLocked()>();

     label47:
        i80 = 0;

     label48:
        if i80 >= 4 goto label49;

        $r74 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r73 = $r74[i80];

        virtualinvoke $r73.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r72 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r79 = $r72[i80];

        virtualinvoke $r79.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i80 = i80 + 1;

        goto label48;

     label49:
        $r83 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveTime>;

        virtualinvoke $r83.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r75 = r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveCount>;

        virtualinvoke $r75.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label50:
        i81 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i81 <= 100 goto label51;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many wake locks ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i81);

        $r85 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r85);

        return;

     label51:
        i5 = 0;

     label52:
        if i5 >= i81 goto label53;

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void readWakeSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>(r5, r1);

        i5 = i5 + 1;

        goto label52;

     label53:
        i82 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i82 <= 100 goto label54;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many syncs ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i82);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r67);

        return;

     label54:
        i83 = 0;

     label55:
        if i83 >= i82 goto label56;

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void readSyncSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>(r6, r1);

        i83 = i83 + 1;

        goto label55;

     label56:
        i84 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i84 <= 100 goto label57;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many job timers ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i84);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r71);

        return;

     label57:
        i85 = 0;

     label58:
        if i85 >= i84 goto label59;

        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: void readJobSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>(r7, r1);

        i85 = i85 + 1;

        goto label58;

     label59:
        i86 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i86 <= 1000 goto label60;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many sensors ");

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i86);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r57);

        return;

     label60:
        i87 = 0;

     label61:
        if i87 >= i86 goto label63;

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i51 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label62;

        $r55 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getSensorTimerLocked(int,boolean)>(i6, 1);

        virtualinvoke $r55.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label62:
        i87 = i87 + 1;

        goto label61;

     label63:
        i88 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i88 <= 1000 goto label64;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many processes ");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i88);

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r63);

        return;

     label64:
        i89 = 0;

     label65:
        if i89 >= i88 goto label71;

        r137 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r8 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>(r137);

        $l45 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedUserTime> = $l45;

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime> = $l45;

        $l50 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedSystemTime> = $l50;

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime> = $l50;

        $l49 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mLoadedForegroundTime> = $l49;

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime> = $l49;

        $i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mLoadedStarts> = $i48;

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts> = $i48;

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i8 <= 100 goto label66;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many speed bins ");

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r59 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r59);

        return;

     label66:
        $r46 = newarray (com.android.internal.os.BatteryStatsImpl$SamplingCounter)[i8];

        r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins> = $r46;

        i7 = 0;

     label67:
        if i7 >= i8 goto label69;

        $i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label68;

        $r52 = r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r45 = new com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r45.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>($r53);

        $r52[i7] = $r45;

        $r51 = r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r50 = $r51[i7];

        virtualinvoke $r50.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label68:
        i7 = i7 + 1;

        goto label67;

     label69:
        $z0 = virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean readExcessivePowerFromParcelLocked(android.os.Parcel)>(r1);

        if $z0 != 0 goto label70;

        return;

     label70:
        i89 = i89 + 1;

        goto label65;

     label71:
        i90 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i90 <= 10000 goto label72;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many packages ");

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i90);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r43);

        return;

     label72:
        i91 = 0;

     label73:
        if i91 >= i90 goto label77;

        r138 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r139 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>(r138);

        $i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r139.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mLoadedWakeups> = $i42;

        r139.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups> = $i42;

        i92 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i92 <= 1000 goto label74;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File corrupt: too many services ");

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i92);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStatsImpl", $r39);

        return;

     label74:
        i93 = 0;

     label75:
        if i93 >= i92 goto label76;

        r140 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r9 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>(r138, r140);

        $l41 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mLoadedStartTime> = $l41;

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long mStartTime> = $l41;

        $i40 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedStarts> = $i40;

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts> = $i40;

        $i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLoadedLaunches> = $i44;

        r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches> = $i44;

        i93 = i93 + 1;

        goto label75;

     label76:
        i91 = i91 + 1;

        goto label73;

     label77:
        i77 = i77 + 1;

        goto label29;

     label78:
        return;
    }

    public void writeSummaryToParcel(android.os.Parcel, boolean)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3, $z4;
        long l0, l1, l2, l13, $l14, $l16, $l17, $l18, $l34, $l35, $l36, $l38;
        int i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i37, $i39, $i40, $i41, i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59;
        java.util.Map$Entry r2, r8, r153, r160;
        com.android.internal.os.BatteryStatsImpl$Timer r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Wakelock r4;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Sensor r6;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r7;
        java.lang.String $r9, $r10, $r61, $r64, $r70, $r80, $r84, $r100, $r129, $r133;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r11, $r12, $r73;
        long[] $r13, $r16;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r14, $r15, $r17, $r18, $r19, $r20, $r24, $r25, $r26, $r27, $r28, $r37, $r38, $r39, $r40, $r42, $r48, $r49, $r77, $r78, $r82, $r93, $r94, $r95, $r102, $r104, $r105, $r106, $r109, $r110, $r111, $r112, $r113, $r115, $r117, $r120, $r121, $r123, $r125, $r127, $r131, $r137, $r140, $r142, $r145, $r147;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r21, $r22, $r23, $r44, $r47, $r97, $r99, $r143, $r149;
        java.util.HashMap $r29, $r30, $r31, $r35, $r59, $r68;
        java.util.Set $r32, $r36, $r55, $r67;
        android.util.SparseArray $r33, $r34, $r41, $r58, $r89, $r90;
        java.lang.Object $r43, $r60, $r62, $r63, $r65, $r66, $r71, $r74, $r75, $r79, $r81, $r83, $r91, $r101, $r103, $r107, $r132, $r134, $r135, $r136, $r138, $r139;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r45, $r92, $r98, $r148, $r150;
        com.android.internal.os.BatteryStatsImpl$OverflowArrayMap $r46, $r52, $r53;
        com.android.internal.os.BatteryStatsImpl$Counter[] $r50, $r96;
        com.android.internal.os.BatteryStatsImpl$BatchTimer $r51, $r119;
        android.util.ArrayMap $r54, $r56, $r57, $r69, $r76, r156, r157, r158;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter[] $r72, $r85, $r87;
        com.android.internal.os.BatteryStatsImpl$SamplingCounter $r86, $r88;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r108, $r114, $r116, $r122, $r124, $r126, $r128, $r130, $r141, $r144, $r146;
        com.android.internal.os.BatteryStatsImpl$Counter $r118;
        java.util.Iterator r151, r152, r159, r162;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r154;
        com.android.internal.os.BatteryStatsImpl$Uid r155;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg r161;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        l0 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        $l14 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = $l14 * 1000L;

        $l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = $l16 * 1000L;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(114);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean,boolean)>(r1, z0, 1);

        $i15 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $l17 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>(l1, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l17);

        $l18 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>(l2, 0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l18);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l1, l2);

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeSummaryToParcel(android.os.Parcel,long,long)>(r1, l1, l2);

        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i21 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $i22 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $i26 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $i27 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $i25 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r13);

        $i28 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r16);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i3 = 0;

     label01:
        if i3 >= 5 goto label02;

        $r141 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r142 = $r141[i3];

        virtualinvoke $r142.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i3 = i3 + 1;

        goto label01;

     label02:
        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i42 = 0;

     label03:
        if i42 >= 5 goto label04;

        $r146 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r140 = $r146[i42];

        virtualinvoke $r140.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i42 = i42 + 1;

        goto label03;

     label04:
        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i43 = 0;

     label05:
        if i43 >= 17 goto label06;

        $r144 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r145 = $r144[i43];

        virtualinvoke $r145.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i43 = i43 + 1;

        goto label05;

     label06:
        i44 = 0;

     label07:
        if i44 >= 4 goto label08;

        $r148 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r149 = $r148[i44];

        virtualinvoke $r149.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r150 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r143 = $r150[i44];

        virtualinvoke $r143.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i44 = i44 + 1;

        goto label07;

     label08:
        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r24.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r27.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i45 = 0;

     label09:
        if i45 >= 8 goto label10;

        $r126 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r147 = $r126[i45];

        virtualinvoke $r147.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i45 = i45 + 1;

        goto label09;

     label10:
        i46 = 0;

     label11:
        if i46 >= 13 goto label12;

        $r124 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r127 = $r124[i46];

        virtualinvoke $r127.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i46 = i46 + 1;

        goto label11;

     label12:
        i47 = 0;

     label13:
        if i47 >= 5 goto label14;

        $r130 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r125 = $r130[i47];

        virtualinvoke $r125.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i47 = i47 + 1;

        goto label13;

     label14:
        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r26.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i48 = 0;

     label15:
        if i48 >= 4 goto label16;

        $r128 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r131 = $r128[i48];

        virtualinvoke $r131.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i48 = i48 + 1;

        goto label15;

     label16:
        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r25.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i30 = virtualinvoke $r30.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r32 = virtualinvoke $r31.<java.util.HashMap: java.util.Set entrySet()>();

        r151 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z1 = interfaceinvoke r151.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r132 = interfaceinvoke r151.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r132;

        $r135 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.internal.os.BatteryStatsImpl$Timer) $r135;

        if r3 == null goto label18;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r134 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r129 = (java.lang.String) $r134;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r129);

        virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label19;

     label18:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        goto label17;

     label20:
        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i29 = virtualinvoke $r29.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r36 = virtualinvoke $r35.<java.util.HashMap: java.util.Set entrySet()>();

        r152 = interfaceinvoke $r36.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z2 = interfaceinvoke r152.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r136 = interfaceinvoke r152.<java.util.Iterator: java.lang.Object next()>();

        r153 = (java.util.Map$Entry) $r136;

        $r139 = interfaceinvoke r153.<java.util.Map$Entry: java.lang.Object getValue()>();

        r154 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r139;

        if r154 == null goto label22;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r138 = interfaceinvoke r153.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r133 = (java.lang.String) $r138;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r133);

        virtualinvoke r154.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label23;

     label22:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label23:
        goto label21;

     label24:
        $i31 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i49 = virtualinvoke $r33.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i49);

        i50 = 0;

     label25:
        if i50 >= i49 goto label83;

        $r34 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i32 = virtualinvoke $r34.<android.util.SparseArray: int keyAt(int)>(i50);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r43 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i50);

        r155 = (com.android.internal.os.BatteryStatsImpl$Uid) $r43;

        $r42 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        if $r42 == null goto label26;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r137 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiRunningTimer>;

        virtualinvoke $r137.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label27;

     label26:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label27:
        $r38 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        if $r38 == null goto label28;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r113 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFullWifiLockTimer>;

        virtualinvoke $r113.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label29;

     label28:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label29:
        $r37 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        if $r37 == null goto label30;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r112 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiScanTimer>;

        virtualinvoke $r112.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label31;

     label30:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label31:
        i4 = 0;

     label32:
        if i4 >= 5 goto label35;

        $r108 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r109 = $r108[i4];

        if $r109 == null goto label33;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r114 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiBatchedScanTimer>;

        $r115 = $r114[i4];

        virtualinvoke $r115.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label34;

     label33:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label34:
        i4 = i4 + 1;

        goto label32;

     label35:
        $r40 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        if $r40 == null goto label36;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r111 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiMulticastTimer>;

        virtualinvoke $r111.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label37;

     label36:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label37:
        $r39 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        if $r39 == null goto label38;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r110 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioTurnedOnTimer>;

        virtualinvoke $r110.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label39;

     label38:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label39:
        $r49 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        if $r49 == null goto label40;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r121 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoTurnedOnTimer>;

        virtualinvoke $r121.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label41;

     label40:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label41:
        $r48 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        if $r48 == null goto label42;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r120 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mForegroundActivityTimer>;

        virtualinvoke $r120.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label43;

     label42:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label43:
        i51 = 0;

     label44:
        if i51 >= 3 goto label47;

        $r116 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r117 = $r116[i51];

        if $r117 == null goto label45;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r122 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mProcessStateTimer>;

        $r123 = $r122[i51];

        virtualinvoke $r123.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label46;

     label45:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label46:
        i51 = i51 + 1;

        goto label44;

     label47:
        $r51 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        if $r51 == null goto label48;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r119 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$BatchTimer mVibratorOnTimer>;

        virtualinvoke $r119.<com.android.internal.os.BatteryStatsImpl$BatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label49;

     label48:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label49:
        $r50 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        if $r50 != null goto label50;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label52;

     label50:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i52 = 0;

     label51:
        if i52 >= 3 goto label52;

        $r96 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Counter[] mUserActivityCounters>;

        $r118 = $r96[i52];

        virtualinvoke $r118.<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i52 = i52 + 1;

        goto label51;

     label52:
        $r45 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        if $r45 != null goto label53;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label56;

     label53:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        i53 = 0;

     label54:
        if i53 >= 4 goto label55;

        $r92 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r99 = $r92[i53];

        virtualinvoke $r99.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r98 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r97 = $r98[i53];

        virtualinvoke $r97.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        i53 = i53 + 1;

        goto label54;

     label55:
        $r44 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveTime>;

        virtualinvoke $r44.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $r47 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveCount>;

        virtualinvoke $r47.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

     label56:
        $r46 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mWakelockStats>;

        r156 = virtualinvoke $r46.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i5 = virtualinvoke r156.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i5);

        i6 = 0;

     label57:
        if i6 >= i5 goto label64;

        $r101 = virtualinvoke r156.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i6);

        $r100 = (java.lang.String) $r101;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r100);

        $r107 = virtualinvoke r156.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i6);

        r4 = (com.android.internal.os.BatteryStatsImpl$Uid$Wakelock) $r107;

        $r106 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        if $r106 == null goto label58;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r93 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerFull>;

        virtualinvoke $r93.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label59;

     label58:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label59:
        $r105 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerPartial>;

        if $r105 == null goto label60;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r94 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerPartial>;

        virtualinvoke $r94.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label61;

     label60:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label61:
        $r104 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        if $r104 == null goto label62;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r95 = r4.<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimerWindow>;

        virtualinvoke $r95.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label63;

     label62:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label63:
        i6 = i6 + 1;

        goto label57;

     label64:
        $r53 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mSyncStats>;

        r157 = virtualinvoke $r53.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i54 = virtualinvoke r157.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i54);

        i8 = 0;

     label65:
        if i8 >= i54 goto label66;

        $r83 = virtualinvoke r157.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i8);

        $r84 = (java.lang.String) $r83;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r84);

        $r103 = virtualinvoke r157.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        $r102 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r103;

        virtualinvoke $r102.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i8 = i8 + 1;

        goto label65;

     label66:
        $r52 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$OverflowArrayMap mJobStats>;

        r158 = virtualinvoke $r52.<com.android.internal.os.BatteryStatsImpl$OverflowArrayMap: android.util.ArrayMap getMap()>();

        i7 = virtualinvoke r158.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i7);

        i10 = 0;

     label67:
        if i10 >= i7 goto label68;

        $r79 = virtualinvoke r158.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i10);

        $r80 = (java.lang.String) $r79;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r80);

        $r81 = virtualinvoke r158.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i10);

        $r82 = (com.android.internal.os.BatteryStatsImpl$StopwatchTimer) $r81;

        virtualinvoke $r82.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        i10 = i10 + 1;

        goto label67;

     label68:
        $r58 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        i55 = virtualinvoke $r58.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i55);

        i9 = 0;

     label69:
        if i9 >= i55 goto label72;

        $r89 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        $i41 = virtualinvoke $r89.<android.util.SparseArray: int keyAt(int)>(i9);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i41);

        $r90 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray mSensorStats>;

        $r91 = virtualinvoke $r90.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r6 = (com.android.internal.os.BatteryStatsImpl$Uid$Sensor) $r91;

        $r77 = r6.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimer>;

        if $r77 == null goto label70;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r78 = r6.<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mTimer>;

        virtualinvoke $r78.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l2);

        goto label71;

     label70:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label71:
        i9 = i9 + 1;

        goto label69;

     label72:
        $r57 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        i56 = virtualinvoke $r57.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i56);

        i57 = 0;

     label73:
        if i57 >= i56 goto label78;

        $r76 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $r75 = virtualinvoke $r76.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i57);

        $r70 = (java.lang.String) $r75;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r70);

        $r69 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mProcessStats>;

        $r71 = virtualinvoke $r69.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i57);

        r5 = (com.android.internal.os.BatteryStatsImpl$Uid$Proc) $r71;

        $l34 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mUserTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l34);

        $l36 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mSystemTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l36);

        $l35 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long mForegroundTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l35);

        $i37 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i37);

        $r72 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        i12 = lengthof $r72;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i12);

        i11 = 0;

     label74:
        if i11 >= i12 goto label77;

        $r85 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r86 = $r85[i11];

        if $r86 == null goto label75;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r87 = r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl$SamplingCounter[] mSpeedBins>;

        $r88 = $r87[i11];

        virtualinvoke $r88.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void writeSummaryFromParcelLocked(android.os.Parcel)>(r1);

        goto label76;

     label75:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label76:
        i11 = i11 + 1;

        goto label74;

     label77:
        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>(r1);

        i57 = i57 + 1;

        goto label73;

     label78:
        $r56 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mPackageStats>;

        i58 = virtualinvoke $r56.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i58);

        if i58 <= 0 goto label82;

        $r54 = r155.<com.android.internal.os.BatteryStatsImpl$Uid: android.util.ArrayMap mPackageStats>;

        $r55 = virtualinvoke $r54.<android.util.ArrayMap: java.util.Set entrySet()>();

        r159 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>();

     label79:
        $z3 = interfaceinvoke r159.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label82;

        $r63 = interfaceinvoke r159.<java.util.Iterator: java.lang.Object next()>();

        r160 = (java.util.Map$Entry) $r63;

        $r62 = interfaceinvoke r160.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r61 = (java.lang.String) $r62;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r61);

        $r60 = interfaceinvoke r160.<java.util.Map$Entry: java.lang.Object getValue()>();

        r161 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg) $r60;

        $i33 = r161.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int mWakeups>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $r59 = r161.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        i59 = virtualinvoke $r59.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i59);

        if i59 <= 0 goto label81;

        $r68 = r161.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.HashMap mServiceStats>;

        $r67 = virtualinvoke $r68.<java.util.HashMap: java.util.Set entrySet()>();

        r162 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>();

     label80:
        $z4 = interfaceinvoke r162.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label81;

        $r66 = interfaceinvoke r162.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r66;

        $r65 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r64 = (java.lang.String) $r65;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r64);

        $r74 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv) $r74;

        $r73 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $l38 = virtualinvoke $r73.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getUptime(long)>(l1);

        l13 = virtualinvoke r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>($l38);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l13);

        $i40 = r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mStarts>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i40);

        $i39 = r7.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int mLaunches>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i39);

        goto label80;

     label81:
        goto label79;

     label82:
        i50 = i50 + 1;

        goto label25;

     label83:
        return;
    }

    public void readFromParcel(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>(r1);

        return;
    }

    void readFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i3, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47;
        java.lang.String r2, $r6, $r7, $r94, $r101, r102;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r3, r4, $r58, $r65;
        com.android.internal.os.BatteryStatsImpl$Uid r5, $r60;
        long $l4, $l5, $l6, $l7, $l8, $l21;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r8, $r10, $r12, $r14, $r16, $r18, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r36, $r38, $r40, $r57, $r59, $r62, $r66, $r71, $r74, $r76, $r79, $r81, $r84, $r87, $r96, $r99;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r9, $r11, $r13, $r15, $r17, $r20, $r22, $r28, $r32, $r34, $r37, $r39, $r41, $r70, $r73, $r77, $r80, $r82, $r97, $r100;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r24, $r26, $r30, $r85, $r88;
        java.util.HashMap $r42, $r49, $r63, $r67;
        long[] $r43, $r44;
        java.util.ArrayList $r45, $r46, $r47, $r48, $r50, $r51, $r53, $r55, $r56;
        android.util.SparseArray $r52, $r54, $r61;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r69, $r72, $r75, $r78, $r89, $r95, $r98;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r83, $r86;
        android.os.ParcelFormatException $r90;
        boolean $z0;
        java.lang.StringBuilder $r91, $r92, $r93;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 == -1166707595 goto label01;

        $r90 = new android.os.ParcelFormatException;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad magic number: #");

        $r94 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94);

        $r101 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<android.os.ParcelFormatException: void <init>(java.lang.String)>($r101);

        throw $r90;

     label01:
        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void readHistory(android.os.Parcel,boolean)>(r1, 0);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount> = $i3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mStartClockTime> = $l4;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion> = $r6;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion> = $r7;

        $l5 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptime> = $l5;

        $l6 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart> = $l6;

        $l8 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime> = $l8;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart> = $l7;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery> = $z0;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBatteryInternal> = 0;

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readFromParcel(android.os.Parcel)>(r1);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$TimeBase: void readFromParcel(android.os.Parcel)>(r1);

        r0.<com.android.internal.os.BatteryStatsImpl: int mScreenState> = 0;

        $r9 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -1, null, $r12, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer> = $r9;

        i1 = 0;

     label04:
        if i1 >= 5 goto label05;

        $r89 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r100 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i32 = -100 - i1;

        $r99 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r100.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i32, null, $r99, r1);

        $r89[i1] = $r100;

        i1 = i1 + 1;

        goto label04;

     label05:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mInteractive> = 0;

        $r11 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r11.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -9, null, $r14, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer> = $r11;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mPhoneOn> = 0;

        $r13 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r13.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -2, null, $r16, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer> = $r13;

        $r15 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -3, null, $r18, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer> = $r15;

        i35 = 0;

     label06:
        if i35 >= 5 goto label07;

        $r98 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r97 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i34 = -200 - i35;

        $r96 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r97.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i34, null, $r96, r1);

        $r98[i35] = $r97;

        i35 = i35 + 1;

        goto label06;

     label07:
        $r17 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r17.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -199, null, $r19, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer> = $r17;

        i36 = 0;

     label08:
        if i36 >= 17 goto label09;

        $r95 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r82 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i33 = -300 - i36;

        $r81 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r82.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i33, null, $r81, r1);

        $r95[i36] = $r82;

        i36 = i36 + 1;

        goto label08;

     label09:
        i37 = 0;

     label10:
        if i37 >= 4 goto label11;

        $r86 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r88 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r87 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r88.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r87, r1);

        $r86[i37] = $r88;

        $r83 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r85 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r84 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r85.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r84, r1);

        $r83[i37] = $r85;

        i37 = i37 + 1;

        goto label10;

     label11:
        $i10 = <android.telephony.DataConnectionRealTimeInfo: int DC_POWER_STATE_LOW>;

        r0.<com.android.internal.os.BatteryStatsImpl: int mMobileRadioPowerState> = $i10;

        $r22 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -400, null, $r23, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer> = $r22;

        $r20 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -401, null, $r21, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer> = $r20;

        $r26 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r27 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r26.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r27, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime> = $r26;

        $r24 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r24.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r25, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime> = $r24;

        $r30 = new com.android.internal.os.BatteryStatsImpl$LongSamplingCounter;

        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r30.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r31, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount> = $r30;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mWifiOn> = 0;

        $r28 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r28.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -4, null, $r29, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer> = $r28;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mGlobalWifiRunning> = 0;

        $r34 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r35 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r34.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -5, null, $r35, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer> = $r34;

        i38 = 0;

     label12:
        if i38 >= 8 goto label13;

        $r75 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r77 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i30 = -600 - i38;

        $r76 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r77.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i30, null, $r76, r1);

        $r75[i38] = $r77;

        i38 = i38 + 1;

        goto label12;

     label13:
        i39 = 0;

     label14:
        if i39 >= 13 goto label15;

        $r78 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r80 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i31 = -700 - i39;

        $r79 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r80.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i31, null, $r79, r1);

        $r78[i39] = $r80;

        i39 = i39 + 1;

        goto label14;

     label15:
        i40 = 0;

     label16:
        if i40 >= 5 goto label17;

        $r69 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r70 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i28 = -800 - i40;

        $r71 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r70.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i28, null, $r71, r1);

        $r69[i40] = $r70;

        i40 = i40 + 1;

        goto label16;

     label17:
        r0.<com.android.internal.os.BatteryStatsImpl: boolean mBluetoothOn> = 0;

        $r32 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r32.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -6, null, $r33, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer> = $r32;

        i41 = 0;

     label18:
        if i41 >= 4 goto label19;

        $r72 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r73 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $i29 = -500 - i41;

        $r74 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r73.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, $i29, null, $r74, r1);

        $r72[i41] = $r73;

        i41 = i41 + 1;

        goto label18;

     label19:
        r0.<com.android.internal.os.BatteryStatsImpl: int mAudioOnNesting> = 0;

        $r39 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r38 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r39.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -7, null, $r38);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mAudioOnTimer> = $r39;

        r0.<com.android.internal.os.BatteryStatsImpl: int mVideoOnNesting> = 0;

        $r37 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r36 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r37.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)>(null, -8, null, $r36);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mVideoOnTimer> = $r37;

        r0.<com.android.internal.os.BatteryStatsImpl: boolean mFlashlightOn> = 0;

        $r41 = new com.android.internal.os.BatteryStatsImpl$StopwatchTimer;

        $r40 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r41.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(null, -9, null, $r40, r1);

        r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer> = $r41;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel> = $i12;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel> = $i11;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel> = $i16;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel> = $i15;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge> = $i14;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge> = $i13;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn> = $i20;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge> = $i19;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff> = $i18;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge> = $i17;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations> = $i23;

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>($r43);

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations> = $i24;

        $r44 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void readLongArray(long[])>($r44);

        $l21 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime> = $l21;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingCount> = $i22;

        r0.<com.android.internal.os.BatteryStatsImpl: int mBluetoothPingStart> = -1;

        $r42 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r42.<java.util.HashMap: void clear()>();

        i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label20:
        if i2 >= i42 goto label22;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label21;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r65 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r66 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        specialinvoke $r65.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r66, r1);

        r3 = $r65;

        $r63 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        virtualinvoke $r63.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label21:
        i2 = i2 + 1;

        goto label20;

     label22:
        $r49 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r49.<java.util.HashMap: void clear()>();

        i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i44 = 0;

     label23:
        if i44 >= i43 goto label25;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label24;

        r102 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r58 = new com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $r57 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        specialinvoke $r58.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r57, r1);

        r4 = $r58;

        $r67 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r102, r4);

     label24:
        i44 = i44 + 1;

        goto label23;

     label25:
        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mPartialTimers>;

        virtualinvoke $r50.<java.util.ArrayList: void clear()>();

        $r51 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullTimers>;

        virtualinvoke $r51.<java.util.ArrayList: void clear()>();

        $r45 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWindowTimers>;

        virtualinvoke $r45.<java.util.ArrayList: void clear()>();

        $r46 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiRunningTimers>;

        virtualinvoke $r46.<java.util.ArrayList: void clear()>();

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mFullWifiLockTimers>;

        virtualinvoke $r47.<java.util.ArrayList: void clear()>();

        $r48 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiScanTimers>;

        virtualinvoke $r48.<java.util.ArrayList: void clear()>();

        $r54 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mWifiBatchedScanTimers>;

        virtualinvoke $r54.<android.util.SparseArray: void clear()>();

        $r53 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mWifiMulticastTimers>;

        virtualinvoke $r53.<java.util.ArrayList: void clear()>();

        $r56 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mAudioTurnedOnTimers>;

        virtualinvoke $r56.<java.util.ArrayList: void clear()>();

        $r55 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.ArrayList mVideoTurnedOnTimers>;

        virtualinvoke $r55.<java.util.ArrayList: void clear()>();

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps> = $i25;

        i45 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r52.<android.util.SparseArray: void clear()>();

        i46 = 0;

     label26:
        if i46 >= i45 goto label27;

        i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r60 = new com.android.internal.os.BatteryStatsImpl$Uid;

        specialinvoke $r60.<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>(r0, i47);

        r5 = $r60;

        $r62 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke r5.<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(com.android.internal.os.BatteryStatsImpl$TimeBase,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>($r62, $r59, r1);

        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        virtualinvoke $r61.<android.util.SparseArray: void append(int,java.lang.Object)>(i47, r5);

        i46 = i46 + 1;

        goto label26;

     label27:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 1, i0);

        return;
    }

    public void writeToParcelWithoutUids(android.os.Parcel, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>(r1, 0, i0);

        return;
    }

    void writeToParcelLocked(android.os.Parcel, boolean, int)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.os.Parcel r1;
        boolean z0, $z1, $z2, $z3;
        int i0, i6, $i9, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, i33, i34, i35, i36, i37, i38, i39, i40, i41;
        long l1, l2, l3, $l7, $l8, $l10, $l11, $l12, $l13, $l26;
        java.util.Map$Entry r2, r64;
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r3, r65;
        com.android.internal.os.BatteryStatsImpl$TimeBase $r4, $r5, $r10, $r11;
        java.lang.String $r6, $r7, $r38, $r48;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer $r8, $r9, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23, $r42, $r44, $r53, $r55, $r57, $r58, $r60;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter $r16, $r17, $r19, $r49, $r51;
        long[] $r24, $r25;
        android.util.SparseArray $r26, $r29, $r30;
        java.lang.Object $r27, $r35, $r36, $r37, $r40, $r45, $r46;
        java.util.HashMap $r28, $r31, $r32, $r33;
        java.util.Set $r34, $r39;
        com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] $r41, $r43, $r47, $r50, $r56, $r59, $r61;
        com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] $r52, $r54;
        byte $b32;
        java.util.Iterator r62, r63;
        com.android.internal.os.BatteryStatsImpl$Uid r66;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        l1 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        $l8 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = $l8 * 1000L;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l3 = $l7 * 1000L;

        $r4 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l3);

        $r5 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl$TimeBase: long getRealtime(long)>(l3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(-1166707595);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean,boolean)>(r1, 1, 0);

        $i9 = r0.<com.android.internal.os.BatteryStatsImpl: int mStartCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r6 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mStartPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.os.BatteryStatsImpl: java.lang.String mEndPlatformVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $l10 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l10);

        $l12 = r0.<com.android.internal.os.BatteryStatsImpl: long mUptimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l12);

        $l11 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l11);

        $l13 = r0.<com.android.internal.os.BatteryStatsImpl: long mRealtimeStart>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l13);

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl: boolean mOnBattery>;

        if $z1 == 0 goto label01;

        $b32 = 1;

        goto label02;

     label01:
        $b32 = 0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b32);

        $r10 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryTimeBase>;

        virtualinvoke $r10.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeToParcel(android.os.Parcel,long,long)>(r1, l2, l3);

        $r11 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$TimeBase mOnBatteryScreenOffTimeBase>;

        virtualinvoke $r11.<com.android.internal.os.BatteryStatsImpl$TimeBase: void writeToParcel(android.os.Parcel,long,long)>(r1, l2, l3);

        $r8 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mScreenOnTimer>;

        virtualinvoke $r8.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i6 = 0;

     label03:
        if i6 >= 5 goto label04;

        $r59 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mScreenBrightnessTimer>;

        $r57 = $r59[i6];

        virtualinvoke $r57.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i6 = i6 + 1;

        goto label03;

     label04:
        $r9 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mInteractiveTimer>;

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $r14 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mLowPowerModeEnabledTimer>;

        virtualinvoke $r14.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $r15 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneOnTimer>;

        virtualinvoke $r15.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i33 = 0;

     label05:
        if i33 >= 5 goto label06;

        $r61 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneSignalStrengthsTimer>;

        $r58 = $r61[i33];

        virtualinvoke $r58.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i33 = i33 + 1;

        goto label05;

     label06:
        $r12 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mPhoneSignalScanningTimer>;

        virtualinvoke $r12.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i34 = 0;

     label07:
        if i34 >= 17 goto label08;

        $r50 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mPhoneDataConnectionsTimer>;

        $r60 = $r50[i34];

        virtualinvoke $r60.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i34 = i34 + 1;

        goto label07;

     label08:
        i35 = 0;

     label09:
        if i35 >= 4 goto label10;

        $r54 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkByteActivityCounters>;

        $r51 = $r54[i35];

        virtualinvoke $r51.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r52 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter[] mNetworkPacketActivityCounters>;

        $r49 = $r52[i35];

        virtualinvoke $r49.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        i35 = i35 + 1;

        goto label09;

     label10:
        $r13 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActiveTimer>;

        virtualinvoke $r13.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $r18 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mMobileRadioActivePerAppTimer>;

        virtualinvoke $r18.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $r19 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveAdjustedTime>;

        virtualinvoke $r19.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r16 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownTime>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r17 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$LongSamplingCounter mMobileRadioActiveUnknownCount>;

        virtualinvoke $r17.<com.android.internal.os.BatteryStatsImpl$LongSamplingCounter: void writeToParcel(android.os.Parcel)>(r1);

        $r22 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mWifiOnTimer>;

        virtualinvoke $r22.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $r23 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mGlobalWifiRunningTimer>;

        virtualinvoke $r23.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i36 = 0;

     label11:
        if i36 >= 8 goto label12;

        $r56 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiStateTimer>;

        $r53 = $r56[i36];

        virtualinvoke $r53.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i36 = i36 + 1;

        goto label11;

     label12:
        i37 = 0;

     label13:
        if i37 >= 13 goto label14;

        $r43 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSupplStateTimer>;

        $r55 = $r43[i37];

        virtualinvoke $r55.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i37 = i37 + 1;

        goto label13;

     label14:
        i38 = 0;

     label15:
        if i38 >= 5 goto label16;

        $r41 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mWifiSignalStrengthsTimer>;

        $r44 = $r41[i38];

        virtualinvoke $r44.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i38 = i38 + 1;

        goto label15;

     label16:
        $r20 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mBluetoothOnTimer>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i39 = 0;

     label17:
        if i39 >= 4 goto label18;

        $r47 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer[] mBluetoothStateTimer>;

        $r42 = $r47[i39];

        virtualinvoke $r42.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        i39 = i39 + 1;

        goto label17;

     label18:
        $r21 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$StopwatchTimer mFlashlightOnTimer>;

        virtualinvoke $r21.<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        $i17 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeUnplugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $i16 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargePlugLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i15 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeCurrentLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i14 = r0.<com.android.internal.os.BatteryStatsImpl: int mCurrentBatteryLevel>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i21 = r0.<com.android.internal.os.BatteryStatsImpl: int mLowDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $i20 = r0.<com.android.internal.os.BatteryStatsImpl: int mHighDischargeAmountSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $i19 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOn>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i18 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOnSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $i24 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOff>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i23 = r0.<com.android.internal.os.BatteryStatsImpl: int mDischargeAmountScreenOffSinceCharge>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i22 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $r24 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mDischargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r24);

        $i27 = r0.<com.android.internal.os.BatteryStatsImpl: int mNumChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $r25 = r0.<com.android.internal.os.BatteryStatsImpl: long[] mChargeStepDurations>;

        virtualinvoke r1.<android.os.Parcel: void writeLongArray(long[])>($r25);

        $l26 = r0.<com.android.internal.os.BatteryStatsImpl: long mLastWriteTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l26);

        $i25 = virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        if z0 == 0 goto label27;

        $r28 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $i31 = virtualinvoke $r28.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r33 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mKernelWakelockStats>;

        $r34 = virtualinvoke $r33.<java.util.HashMap: java.util.Set entrySet()>();

        r62 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label22;

        $r37 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r37;

        $r46 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r46;

        if r3 == null goto label20;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r45 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r48 = (java.lang.String) $r45;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r48);

        virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        goto label21;

     label20:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label21:
        goto label19;

     label22:
        $r31 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $i30 = virtualinvoke $r31.<java.util.HashMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $r32 = r0.<com.android.internal.os.BatteryStatsImpl: java.util.HashMap mWakeupReasonStats>;

        $r39 = virtualinvoke $r32.<java.util.HashMap: java.util.Set entrySet()>();

        r63 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z3 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        $r40 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r64 = (java.util.Map$Entry) $r40;

        $r36 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getValue()>();

        r65 = (com.android.internal.os.BatteryStatsImpl$SamplingTimer) $r36;

        if r65 == null goto label24;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r35 = interfaceinvoke r64.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r38 = (java.lang.String) $r35;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r38);

        virtualinvoke r65.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>(r1, l3);

        goto label25;

     label24:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label25:
        goto label23;

     label26:
        goto label28;

     label27:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label28:
        $i29 = <com.android.internal.os.BatteryStatsImpl: int sNumSpeedSteps>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        if z0 == 0 goto label31;

        $r29 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        i40 = virtualinvoke $r29.<android.util.SparseArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i40);

        i41 = 0;

     label29:
        if i41 >= i40 goto label30;

        $r30 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $i28 = virtualinvoke $r30.<android.util.SparseArray: int keyAt(int)>(i41);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $r26 = r0.<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray mUidStats>;

        $r27 = virtualinvoke $r26.<android.util.SparseArray: java.lang.Object valueAt(int)>(i41);

        r66 = (com.android.internal.os.BatteryStatsImpl$Uid) $r27;

        virtualinvoke r66.<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long)>(r1, l3);

        i41 = i41 + 1;

        goto label29;

     label30:
        goto label32;

     label31:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label32:
        return;
    }

    public void prepareForDumpLocked()
    {
        com.android.internal.os.BatteryStatsImpl r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>();

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>();

        return;
    }

    public void dumpLocked(android.content.Context, java.io.PrintWriter, int, int, long)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        android.content.Context r1;
        java.io.PrintWriter r2;
        int i0, i1;
        long l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.io.PrintWriter;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        specialinvoke r0.<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>(r1, r2, i0, i1, l2);

        return;
    }

    static com.android.internal.os.BatteryStatsImpl$BatteryCallback access$000(com.android.internal.os.BatteryStatsImpl)
    {
        com.android.internal.os.BatteryStatsImpl r0;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback $r1;

        r0 := @parameter0: com.android.internal.os.BatteryStatsImpl;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback mCallback>;

        return $r1;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;
        com.android.internal.os.BatteryStatsImpl$3 $r2;

        <com.android.internal.os.BatteryStatsImpl: int NET_UPDATE_ALL> = 65535;

        <com.android.internal.os.BatteryStatsImpl: int NET_UPDATE_WIFI> = 2;

        <com.android.internal.os.BatteryStatsImpl: int NET_UPDATE_MOBILE> = 1;

        <com.android.internal.os.BatteryStatsImpl: int BATTERY_PLUGGED_NONE> = 0;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_PLUG_SHIFT> = 24;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_PLUG_MASK> = 3;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_HEALTH_SHIFT> = 26;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_HEALTH_MASK> = 7;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_STATUS_SHIFT> = 29;

        <com.android.internal.os.BatteryStatsImpl: int STATE_BATTERY_STATUS_MASK> = 7;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE_MASK> = -16777216;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_EVENT_FLAG> = 8388608;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_WAKELOCK_FLAG> = 4194304;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE2_FLAG> = 2097152;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_STATE_FLAG> = 1048576;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_BATTERY_LEVEL_FLAG> = 524288;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_ABS> = 524285;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_INT> = 524286;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_LONG> = 524287;

        <com.android.internal.os.BatteryStatsImpl: int DELTA_TIME_MASK> = 524287;

        <com.android.internal.os.BatteryStatsImpl: int MAX_LEVEL_STEPS> = 200;

        <com.android.internal.os.BatteryStatsImpl: int MAX_MAX_HISTORY_BUFFER> = 327680;

        <com.android.internal.os.BatteryStatsImpl: int MAX_HISTORY_BUFFER> = 262144;

        <com.android.internal.os.BatteryStatsImpl: long DELAY_UPDATE_WAKELOCKS> = 5000L;

        <com.android.internal.os.BatteryStatsImpl: int MSG_REPORT_POWER_CHANGE> = 2;

        <com.android.internal.os.BatteryStatsImpl: int MSG_UPDATE_WAKELOCKS> = 1;

        <com.android.internal.os.BatteryStatsImpl: int MAX_WAKELOCKS_PER_UID> = 100;

        <com.android.internal.os.BatteryStatsImpl: int MAX_MAX_HISTORY_ITEMS> = 3000;

        <com.android.internal.os.BatteryStatsImpl: int MAX_HISTORY_ITEMS> = 2000;

        <com.android.internal.os.BatteryStatsImpl: int VERSION> = 114;

        <com.android.internal.os.BatteryStatsImpl: int MAGIC> = -1166707595;

        <com.android.internal.os.BatteryStatsImpl: boolean USE_OLD_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG_HISTORY> = 0;

        <com.android.internal.os.BatteryStatsImpl: boolean DEBUG> = 0;

        <com.android.internal.os.BatteryStatsImpl: java.lang.String TAG> = "BatteryStatsImpl";

        <com.android.internal.os.BatteryStatsImpl: int sKernelWakelockUpdateVersion> = 0;

        $r0 = newarray (int)[6];

        $r0[0] = 5129;

        $r0[1] = 8201;

        $r0[2] = 9;

        $r0[3] = 9;

        $r0[4] = 9;

        $r0[5] = 8201;

        <com.android.internal.os.BatteryStatsImpl: int[] PROC_WAKELOCKS_FORMAT> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = 4105;

        $r1[1] = 8457;

        $r1[2] = 265;

        $r1[3] = 265;

        $r1[4] = 265;

        $r1[5] = 265;

        $r1[6] = 8457;

        <com.android.internal.os.BatteryStatsImpl: int[] WAKEUP_SOURCES_FORMAT> = $r1;

        $r2 = new com.android.internal.os.BatteryStatsImpl$3;

        specialinvoke $r2.<com.android.internal.os.BatteryStatsImpl$3: void <init>()>();

        <com.android.internal.os.BatteryStatsImpl: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }
}
