public class android.hardware.camera2.legacy.RequestHandlerThread extends android.os.HandlerThread
{
    public static final int MSG_POKE_IDLE_HANDLER;
    private final android.os.ConditionVariable mStarted;
    private final android.os.ConditionVariable mIdle;
    private android.os.Handler$Callback mCallback;
    private volatile android.os.Handler mHandler;
    private final android.os.MessageQueue$IdleHandler mIdleHandler;

    public void <init>(java.lang.String, android.os.Handler$Callback)
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        java.lang.String r1;
        android.os.Handler$Callback r2;
        android.os.ConditionVariable $r3, $r4;
        android.hardware.camera2.legacy.RequestHandlerThread$1 $r5;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Handler$Callback;

        specialinvoke r0.<android.os.HandlerThread: void <init>(java.lang.String,int)>(r1, 10);

        $r3 = new android.os.ConditionVariable;

        specialinvoke $r3.<android.os.ConditionVariable: void <init>(boolean)>(0);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted> = $r3;

        $r4 = new android.os.ConditionVariable;

        specialinvoke $r4.<android.os.ConditionVariable: void <init>(boolean)>(1);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle> = $r4;

        $r5 = new android.hardware.camera2.legacy.RequestHandlerThread$1;

        specialinvoke $r5.<android.hardware.camera2.legacy.RequestHandlerThread$1: void <init>(android.hardware.camera2.legacy.RequestHandlerThread)>(r0);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.MessageQueue$IdleHandler mIdleHandler> = $r5;

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler$Callback mCallback> = r2;

        return;
    }

    protected void onLooperPrepared()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        android.os.Handler$Callback $r3;
        android.os.ConditionVariable $r4;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = new android.os.Handler;

        $r2 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Looper getLooper()>();

        $r3 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler$Callback mCallback>;

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r2, $r3);

        r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler> = $r1;

        $r4 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted>;

        virtualinvoke $r4.<android.os.ConditionVariable: void open()>();

        return;
    }

    public void waitUntilStarted()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.ConditionVariable $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mStarted>;

        virtualinvoke $r1.<android.os.ConditionVariable: void block()>();

        return;
    }

    public android.os.Handler getHandler()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        return $r1;
    }

    public android.os.Handler waitAndGetHandler()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilStarted()>();

        $r1 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>();

        return $r1;
    }

    public boolean hasAnyMessages(int[])
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        int[] r1, r3;
        android.os.MessageQueue r2, $r7;
        int i0, i1, i2;
        java.lang.Throwable r4, $r9;
        android.os.Handler $r5, $r8;
        android.os.Looper $r6;
        boolean $z0;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 := @parameter0: int[];

        $r5 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        $r7 = virtualinvoke $r6.<android.os.Looper: android.os.MessageQueue getQueue()>();

        r2 = $r7;

        entermonitor $r7;

     label1:
        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        i2 = r3[i1];

        $r8 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r8.<android.os.Handler: boolean hasMessages(int)>(i2);

        if $z0 == 0 goto label4;

        exitmonitor r2;

     label3:
        return 1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return 0;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void removeMessages(int[])
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        int[] r1, r3;
        android.os.MessageQueue r2, $r7;
        int i0, i1, i2;
        java.lang.Throwable r4, $r9;
        android.os.Handler $r5, $r8;
        android.os.Looper $r6;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 := @parameter0: int[];

        $r5 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        $r7 = virtualinvoke $r6.<android.os.Looper: android.os.MessageQueue getQueue()>();

        r2 = $r7;

        entermonitor $r7;

     label1:
        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        i2 = r3[i1];

        $r8 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int)>(i2);

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void waitUntilIdle()
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.Handler r1;
        android.os.Looper r2;
        boolean $z0, $z2;
        android.os.ConditionVariable $r3, $r6;
        android.os.MessageQueue $r4;
        android.os.MessageQueue$IdleHandler $r5;

        r0 := @this: android.hardware.camera2.legacy.RequestHandlerThread;

        r1 = virtualinvoke r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()>();

        r2 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        $z0 = virtualinvoke r2.<android.os.Looper: boolean isIdling()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        virtualinvoke $r3.<android.os.ConditionVariable: void close()>();

        $r4 = virtualinvoke r2.<android.os.Looper: android.os.MessageQueue getQueue()>();

        $r5 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.MessageQueue$IdleHandler mIdleHandler>;

        virtualinvoke $r4.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r5);

        virtualinvoke r1.<android.os.Handler: boolean sendEmptyMessage(int)>(-1);

        $z2 = virtualinvoke r2.<android.os.Looper: boolean isIdling()>();

        if $z2 == 0 goto label2;

        return;

     label2:
        $r6 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        virtualinvoke $r6.<android.os.ConditionVariable: void block()>();

        return;
    }

    static android.os.ConditionVariable access$000(android.hardware.camera2.legacy.RequestHandlerThread)
    {
        android.hardware.camera2.legacy.RequestHandlerThread r0;
        android.os.ConditionVariable $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.RequestHandlerThread;

        $r1 = r0.<android.hardware.camera2.legacy.RequestHandlerThread: android.os.ConditionVariable mIdle>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.legacy.RequestHandlerThread: int MSG_POKE_IDLE_HANDLER> = -1;

        return;
    }
}
