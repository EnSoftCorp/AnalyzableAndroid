public class android.content.res.CompatibilityInfo$Translator extends java.lang.Object
{
    public final float applicationScale;
    public final float applicationInvertedScale;
    private android.graphics.Rect mContentInsetsBuffer;
    private android.graphics.Rect mVisibleInsetsBuffer;
    private android.graphics.Region mTouchableAreaBuffer;
    final android.content.res.CompatibilityInfo this$0;

    void <init>(android.content.res.CompatibilityInfo, float, float)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.content.res.CompatibilityInfo r1;
        float f0, f1;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.content.res.CompatibilityInfo;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r0.<android.content.res.CompatibilityInfo$Translator: android.content.res.CompatibilityInfo this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer> = null;

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer> = null;

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer> = null;

        r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale> = f0;

        r0.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale> = f1;

        return;
    }

    void <init>(android.content.res.CompatibilityInfo)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.content.res.CompatibilityInfo r1;
        float $f0, $f1;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.content.res.CompatibilityInfo;

        $f1 = r1.<android.content.res.CompatibilityInfo: float applicationScale>;

        $f0 = r1.<android.content.res.CompatibilityInfo: float applicationInvertedScale>;

        specialinvoke r0.<android.content.res.CompatibilityInfo$Translator: void <init>(android.content.res.CompatibilityInfo,float,float)>(r1, $f1, $f0);

        return;
    }

    public void translateRectInScreenToAppWinFrame(android.graphics.Rect)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Rect r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Rect;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        virtualinvoke r1.<android.graphics.Rect: void scale(float)>($f0);

        return;
    }

    public void translateRegionInWindowToScreen(android.graphics.Region)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Region r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Region;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke r1.<android.graphics.Region: void scale(float)>($f0);

        return;
    }

    public void translateCanvas(android.graphics.Canvas)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Canvas r1;
        float $f1, $f2, $f3;
        byte $b0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Canvas;

        $f1 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        $b0 = $f1 cmpl 1.5F;

        if $b0 != 0 goto label1;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0026143792F, 0.0026143792F);

     label1:
        $f3 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        $f2 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>($f3, $f2);

        return;
    }

    public void translateEventInScreenToAppWindow(android.view.MotionEvent)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.view.MotionEvent r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.view.MotionEvent;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        virtualinvoke r1.<android.view.MotionEvent: void scale(float)>($f0);

        return;
    }

    public void translateWindowLayout(android.view.WindowManager$LayoutParams)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.view.WindowManager$LayoutParams r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void scale(float)>($f0);

        return;
    }

    public void translateRectInAppWindowToScreen(android.graphics.Rect)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Rect r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Rect;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke r1.<android.graphics.Rect: void scale(float)>($f0);

        return;
    }

    public void translateRectInScreenToAppWindow(android.graphics.Rect)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Rect r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Rect;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        virtualinvoke r1.<android.graphics.Rect: void scale(float)>($f0);

        return;
    }

    public void translatePointInScreenToAppWindow(android.graphics.PointF)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.PointF r1;
        float f0, $f1, $f2, $f3, $f4;
        byte $b0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.PointF;

        f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        $f1 = r1.<android.graphics.PointF: float x>;

        $f2 = $f1 * f0;

        r1.<android.graphics.PointF: float x> = $f2;

        $f3 = r1.<android.graphics.PointF: float y>;

        $f4 = $f3 * f0;

        r1.<android.graphics.PointF: float y> = $f4;

     label1:
        return;
    }

    public void translateLayoutParamsInAppWindowToScreen(android.view.WindowManager$LayoutParams)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.view.WindowManager$LayoutParams r1;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void scale(float)>($f0);

        return;
    }

    public android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer>;

        if $r2 != null goto label1;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer> = $r6;

     label1:
        $r3 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r4 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer>;

        virtualinvoke r0.<android.content.res.CompatibilityInfo$Translator: void translateRectInAppWindowToScreen(android.graphics.Rect)>($r4);

        $r5 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mContentInsetsBuffer>;

        return $r5;
    }

    public android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer>;

        if $r2 != null goto label1;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer> = $r6;

     label1:
        $r3 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        $r4 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer>;

        virtualinvoke r0.<android.content.res.CompatibilityInfo$Translator: void translateRectInAppWindowToScreen(android.graphics.Rect)>($r4);

        $r5 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect mVisibleInsetsBuffer>;

        return $r5;
    }

    public android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)
    {
        android.content.res.CompatibilityInfo$Translator r0;
        android.graphics.Region r1, $r2, $r3, $r4, $r5, $r6;
        float $f0;

        r0 := @this: android.content.res.CompatibilityInfo$Translator;

        r1 := @parameter0: android.graphics.Region;

        $r2 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer>;

        if $r2 != null goto label1;

        $r6 = new android.graphics.Region;

        specialinvoke $r6.<android.graphics.Region: void <init>()>();

        r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer> = $r6;

     label1:
        $r3 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer>;

        virtualinvoke $r3.<android.graphics.Region: boolean set(android.graphics.Region)>(r1);

        $r4 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer>;

        $f0 = r0.<android.content.res.CompatibilityInfo$Translator: float applicationScale>;

        virtualinvoke $r4.<android.graphics.Region: void scale(float)>($f0);

        $r5 = r0.<android.content.res.CompatibilityInfo$Translator: android.graphics.Region mTouchableAreaBuffer>;

        return $r5;
    }
}
