public class com.android.server.net.NetlinkTracker extends com.android.server.net.BaseNetworkObserver
{
    private final java.lang.String TAG;
    private final java.lang.String mInterfaceName;
    private final com.android.server.net.NetlinkTracker$Callback mCallback;
    private final android.net.LinkProperties mLinkProperties;
    private com.android.server.net.DnsServerRepository mDnsServerRepository;
    private static final boolean DBG;

    public void <init>(java.lang.String, com.android.server.net.NetlinkTracker$Callback)
    {
        com.android.server.net.NetlinkTracker r0;
        java.lang.String r1, $r6, $r8;
        com.android.server.net.NetlinkTracker$Callback r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        android.net.LinkProperties $r7, $r9;
        com.android.server.net.DnsServerRepository $r10;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.net.NetlinkTracker$Callback;

        specialinvoke r0.<com.android.server.net.BaseNetworkObserver: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetlinkTracker/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.net.NetlinkTracker: java.lang.String TAG> = $r6;

        r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName> = r1;

        r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback> = r2;

        $r7 = new android.net.LinkProperties;

        specialinvoke $r7.<android.net.LinkProperties: void <init>()>();

        r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties> = $r7;

        $r9 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        $r8 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        virtualinvoke $r9.<android.net.LinkProperties: void setInterfaceName(java.lang.String)>($r8);

        $r10 = new com.android.server.net.DnsServerRepository;

        specialinvoke $r10.<com.android.server.net.DnsServerRepository: void <init>()>();

        r0.<com.android.server.net.NetlinkTracker: com.android.server.net.DnsServerRepository mDnsServerRepository> = $r10;

        return;
    }

    private void maybeLog(java.lang.String, java.lang.String, android.net.LinkAddress)
    {
        com.android.server.net.NetlinkTracker r0;
        java.lang.String r1, r2;
        android.net.LinkAddress r3;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.LinkAddress;

        return;
    }

    private void maybeLog(java.lang.String, java.lang.Object)
    {
        com.android.server.net.NetlinkTracker r0;
        java.lang.String r1;
        java.lang.Object r2;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public void addressUpdated(java.lang.String, android.net.LinkAddress)
    {
        com.android.server.net.NetlinkTracker r0, r3;
        java.lang.String r1, $r5;
        android.net.LinkAddress r2;
        boolean z0, $z1;
        java.lang.Throwable r4, $r9;
        android.net.LinkProperties $r7;
        com.android.server.net.NetlinkTracker$Callback $r8;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.LinkAddress;

        $r5 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.server.net.NetlinkTracker: void maybeLog(java.lang.String,java.lang.String,android.net.LinkAddress)>("addressUpdated", r1, r2);

        r3 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        z0 = virtualinvoke $r7.<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>(r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if z0 == 0 goto label6;

        $r8 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.net.NetlinkTracker$Callback: void update()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addressRemoved(java.lang.String, android.net.LinkAddress)
    {
        com.android.server.net.NetlinkTracker r0, r3;
        java.lang.String r1, $r5;
        android.net.LinkAddress r2;
        boolean z0, $z1;
        java.lang.Throwable r4, $r9;
        android.net.LinkProperties $r7;
        com.android.server.net.NetlinkTracker$Callback $r8;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.LinkAddress;

        $r5 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.server.net.NetlinkTracker: void maybeLog(java.lang.String,java.lang.String,android.net.LinkAddress)>("addressRemoved", r1, r2);

        r3 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        z0 = virtualinvoke $r7.<android.net.LinkProperties: boolean removeLinkAddress(android.net.LinkAddress)>(r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if z0 == 0 goto label6;

        $r8 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.net.NetlinkTracker$Callback: void update()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void routeUpdated(android.net.RouteInfo)
    {
        com.android.server.net.NetlinkTracker r0, r2;
        android.net.RouteInfo r1;
        boolean z0, $z1;
        java.lang.Throwable r3, $r9;
        java.lang.String $r4, $r5;
        android.net.LinkProperties $r7;
        com.android.server.net.NetlinkTracker$Callback $r8;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: android.net.RouteInfo;

        $r4 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        $r5 = virtualinvoke r1.<android.net.RouteInfo: java.lang.String getInterface()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.server.net.NetlinkTracker: void maybeLog(java.lang.String,java.lang.Object)>("routeUpdated", r1);

        r2 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        z0 = virtualinvoke $r7.<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if z0 == 0 goto label6;

        $r8 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.net.NetlinkTracker$Callback: void update()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void routeRemoved(android.net.RouteInfo)
    {
        com.android.server.net.NetlinkTracker r0, r2;
        android.net.RouteInfo r1;
        boolean z0, $z1;
        java.lang.Throwable r3, $r9;
        java.lang.String $r4, $r5;
        android.net.LinkProperties $r7;
        com.android.server.net.NetlinkTracker$Callback $r8;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: android.net.RouteInfo;

        $r4 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        $r5 = virtualinvoke r1.<android.net.RouteInfo: java.lang.String getInterface()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label6;

        specialinvoke r0.<com.android.server.net.NetlinkTracker: void maybeLog(java.lang.String,java.lang.Object)>("routeRemoved", r1);

        r2 = r0;

        entermonitor r0;

     label1:
        $r7 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        z0 = virtualinvoke $r7.<android.net.LinkProperties: boolean removeRoute(android.net.RouteInfo)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if z0 == 0 goto label6;

        $r8 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback>;

        interfaceinvoke $r8.<com.android.server.net.NetlinkTracker$Callback: void update()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void interfaceDnsServerInfo(java.lang.String, long, java.lang.String[])
    {
        com.android.server.net.NetlinkTracker r0, r3;
        java.lang.String r1, $r5, $r6;
        long l0;
        java.lang.String[] r2;
        boolean z0, $z1;
        java.lang.Throwable r4, $r11;
        com.android.server.net.DnsServerRepository $r7, $r10;
        android.net.LinkProperties $r9;
        com.android.server.net.NetlinkTracker$Callback $r12;

        r0 := @this: com.android.server.net.NetlinkTracker;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String[];

        $r5 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);

        specialinvoke r0.<com.android.server.net.NetlinkTracker: void maybeLog(java.lang.String,java.lang.Object)>("interfaceDnsServerInfo", $r6);

        $r7 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.DnsServerRepository mDnsServerRepository>;

        z0 = virtualinvoke $r7.<com.android.server.net.DnsServerRepository: boolean addServers(long,java.lang.String[])>(l0, r2);

        if z0 == 0 goto label6;

        r3 = r0;

        entermonitor r0;

     label1:
        $r10 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.DnsServerRepository mDnsServerRepository>;

        $r9 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r10.<com.android.server.net.DnsServerRepository: void setDnsServersOn(android.net.LinkProperties)>($r9);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        $r12 = r0.<com.android.server.net.NetlinkTracker: com.android.server.net.NetlinkTracker$Callback mCallback>;

        interfaceinvoke $r12.<com.android.server.net.NetlinkTracker$Callback: void update()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public synchronized android.net.LinkProperties getLinkProperties()
    {
        com.android.server.net.NetlinkTracker r0;
        android.net.LinkProperties $r1, $r2;

        r0 := @this: com.android.server.net.NetlinkTracker;

        $r1 = new android.net.LinkProperties;

        $r2 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r1.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r2);

        return $r1;
    }

    public synchronized void clearLinkProperties()
    {
        com.android.server.net.NetlinkTracker r0;
        com.android.server.net.DnsServerRepository $r1;
        android.net.LinkProperties $r2, $r4;
        java.lang.String $r3;

        r0 := @this: com.android.server.net.NetlinkTracker;

        $r1 = new com.android.server.net.DnsServerRepository;

        specialinvoke $r1.<com.android.server.net.DnsServerRepository: void <init>()>();

        r0.<com.android.server.net.NetlinkTracker: com.android.server.net.DnsServerRepository mDnsServerRepository> = $r1;

        $r2 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<android.net.LinkProperties: void clear()>();

        $r4 = r0.<com.android.server.net.NetlinkTracker: android.net.LinkProperties mLinkProperties>;

        $r3 = r0.<com.android.server.net.NetlinkTracker: java.lang.String mInterfaceName>;

        virtualinvoke $r4.<android.net.LinkProperties: void setInterfaceName(java.lang.String)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.net.NetlinkTracker: boolean DBG> = 0;

        return;
    }
}
