public class android.media.RingtoneManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int TYPE_RINGTONE;
    public static final int TYPE_NOTIFICATION;
    public static final int TYPE_ALARM;
    public static final int TYPE_ALL;
    public static final java.lang.String ACTION_RINGTONE_PICKER;
    public static final java.lang.String EXTRA_RINGTONE_SHOW_DEFAULT;
    public static final java.lang.String EXTRA_RINGTONE_SHOW_SILENT;
    public static final java.lang.String EXTRA_RINGTONE_INCLUDE_DRM;
    public static final java.lang.String EXTRA_RINGTONE_EXISTING_URI;
    public static final java.lang.String EXTRA_RINGTONE_DEFAULT_URI;
    public static final java.lang.String EXTRA_RINGTONE_TYPE;
    public static final java.lang.String EXTRA_RINGTONE_TITLE;
    public static final java.lang.String EXTRA_RINGTONE_PICKED_URI;
    private static final java.lang.String[] INTERNAL_COLUMNS;
    private static final java.lang.String[] MEDIA_COLUMNS;
    public static final int ID_COLUMN_INDEX;
    public static final int TITLE_COLUMN_INDEX;
    public static final int URI_COLUMN_INDEX;
    private android.app.Activity mActivity;
    private android.content.Context mContext;
    private android.database.Cursor mCursor;
    private int mType;
    private final java.util.List mFilterColumns;
    private boolean mStopPreviousRingtone;
    private android.media.Ringtone mPreviousRingtone;

    public void <init>(android.app.Activity)
    {
        android.media.RingtoneManager r0;
        android.app.Activity r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: android.media.RingtoneManager;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RingtoneManager: int mType> = 1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RingtoneManager: java.util.List mFilterColumns> = $r2;

        r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = 1;

        r0.<android.media.RingtoneManager: android.app.Activity mActivity> = r1;

        r0.<android.media.RingtoneManager: android.content.Context mContext> = r1;

        $i0 = r0.<android.media.RingtoneManager: int mType>;

        virtualinvoke r0.<android.media.RingtoneManager: void setType(int)>($i0);

        return;
    }

    public void <init>(android.content.Context)
    {
        android.media.RingtoneManager r0;
        android.content.Context r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: android.media.RingtoneManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RingtoneManager: int mType> = 1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.media.RingtoneManager: java.util.List mFilterColumns> = $r2;

        r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = 1;

        r0.<android.media.RingtoneManager: android.content.Context mContext> = r1;

        $i0 = r0.<android.media.RingtoneManager: int mType>;

        virtualinvoke r0.<android.media.RingtoneManager: void setType(int)>($i0);

        return;
    }

    public void setType(int)
    {
        android.media.RingtoneManager r0;
        int i0;
        android.database.Cursor $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.media.RingtoneManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Setting filter columns should be done before querying for ringtones.");

        throw $r2;

     label1:
        r0.<android.media.RingtoneManager: int mType> = i0;

        specialinvoke r0.<android.media.RingtoneManager: void setFilterColumnsList(int)>(i0);

        return;
    }

    public int inferStreamType()
    {
        android.media.RingtoneManager r0;
        int $i0;

        r0 := @this: android.media.RingtoneManager;

        $i0 = r0.<android.media.RingtoneManager: int mType>;

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 4: goto label1;
            default: goto label3;
        };

     label1:
        return 4;

     label2:
        return 5;

     label3:
        return 2;
    }

    public void setStopPreviousRingtone(boolean)
    {
        android.media.RingtoneManager r0;
        boolean z0;

        r0 := @this: android.media.RingtoneManager;

        z0 := @parameter0: boolean;

        r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone> = z0;

        return;
    }

    public boolean getStopPreviousRingtone()
    {
        android.media.RingtoneManager r0;
        boolean $z0;

        r0 := @this: android.media.RingtoneManager;

        $z0 = r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone>;

        return $z0;
    }

    public void stopPreviousRingtone()
    {
        android.media.RingtoneManager r0;
        android.media.Ringtone $r1, $r2;

        r0 := @this: android.media.RingtoneManager;

        $r1 = r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        virtualinvoke $r2.<android.media.Ringtone: void stop()>();

     label1:
        return;
    }

    public boolean getIncludeDrm()
    {
        android.media.RingtoneManager r0;

        r0 := @this: android.media.RingtoneManager;

        return 0;
    }

    public void setIncludeDrm(boolean)
    {
        android.media.RingtoneManager r0;
        boolean z0;

        r0 := @this: android.media.RingtoneManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RingtoneManager", "setIncludeDrm no longer supported");

     label1:
        return;
    }

    public android.database.Cursor getCursor()
    {
        android.media.RingtoneManager r0;
        android.database.Cursor r1, r2, $r3, $r6, $r7;
        com.android.internal.database.SortCursor $r4;
        android.database.Cursor[] $r5;
        boolean $z0;

        r0 := @this: android.media.RingtoneManager;

        $r3 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        if $r3 == null goto label1;

        $r6 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean requery()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        return $r7;

     label1:
        r1 = specialinvoke r0.<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()>();

        r2 = specialinvoke r0.<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()>();

        $r4 = new com.android.internal.database.SortCursor;

        $r5 = newarray (android.database.Cursor)[2];

        $r5[0] = r1;

        $r5[1] = r2;

        specialinvoke $r4.<com.android.internal.database.SortCursor: void <init>(android.database.Cursor[],java.lang.String)>($r5, "title_key");

        r0.<android.media.RingtoneManager: android.database.Cursor mCursor> = $r4;

        return $r4;
    }

    public android.media.Ringtone getRingtone(int)
    {
        android.media.RingtoneManager r0;
        int i0, $i1;
        boolean $z0;
        android.content.Context $r1;
        android.net.Uri $r2;
        android.media.Ringtone $r3, $r4, $r5, $r6;

        r0 := @this: android.media.RingtoneManager;

        i0 := @parameter0: int;

        $z0 = r0.<android.media.RingtoneManager: boolean mStopPreviousRingtone>;

        if $z0 == 0 goto label1;

        $r5 = r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        if $r5 == null goto label1;

        $r6 = r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        virtualinvoke $r6.<android.media.Ringtone: void stop()>();

     label1:
        $r1 = r0.<android.media.RingtoneManager: android.content.Context mContext>;

        $r2 = virtualinvoke r0.<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>(i0);

        $i1 = virtualinvoke r0.<android.media.RingtoneManager: int inferStreamType()>();

        $r3 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>($r1, $r2, $i1);

        r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone> = $r3;

        $r4 = r0.<android.media.RingtoneManager: android.media.Ringtone mPreviousRingtone>;

        return $r4;
    }

    public android.net.Uri getRingtoneUri(int)
    {
        android.media.RingtoneManager r0;
        int i0;
        android.database.Cursor $r1, $r2, $r3;
        boolean $z0;
        android.net.Uri $r4;

        r0 := @this: android.media.RingtoneManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToPosition(int)>(i0);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<android.media.RingtoneManager: android.database.Cursor mCursor>;

        $r4 = staticinvoke <android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)>($r3);

        return $r4;
    }

    private static android.net.Uri getUriFromCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.lang.String $r1;
        android.net.Uri $r2, $r3;
        long $l0;

        r0 := @parameter0: android.database.Cursor;

        $r1 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $l0 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(0);

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, $l0);

        return $r3;
    }

    public int getRingtonePosition(android.net.Uri)
    {
        android.media.RingtoneManager r0;
        android.net.Uri r1, r3, $r6;
        android.database.Cursor r2;
        int i0, i1;
        java.lang.String r4, r5;
        boolean $z0, $z1, $z2;
        long $l2;

        r0 := @this: android.media.RingtoneManager;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        return -1;

     label1:
        r2 = virtualinvoke r0.<android.media.RingtoneManager: android.database.Cursor getCursor()>();

        i0 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label2;

        return -1;

     label2:
        r3 = null;

        r4 = null;

        i1 = 0;

     label3:
        if i1 >= i0 goto label7;

        r5 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(2);

        if r3 == null goto label4;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label5;

     label4:
        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r5);

     label5:
        $l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r3, $l2);

        $z1 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label6;

        return i1;

     label6:
        interfaceinvoke r2.<android.database.Cursor: boolean move(int)>(1);

        r4 = r5;

        i1 = i1 + 1;

        goto label3;

     label7:
        return -1;
    }

    public static android.net.Uri getValidRingtoneUri(android.content.Context)
    {
        android.content.Context r0;
        android.media.RingtoneManager r1, $r3;
        android.net.Uri r2;
        android.database.Cursor $r4, $r5;

        r0 := @parameter0: android.content.Context;

        $r3 = new android.media.RingtoneManager;

        specialinvoke $r3.<android.media.RingtoneManager: void <init>(android.content.Context)>(r0);

        r1 = $r3;

        $r4 = specialinvoke r1.<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()>();

        r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>(r0, $r4);

        if r2 != null goto label1;

        $r5 = specialinvoke r1.<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()>();

        r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)>(r0, $r5);

     label1:
        return r2;
    }

    private static android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context, android.database.Cursor)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        android.net.Uri r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.Cursor;

        if r1 == null goto label2;

        r2 = null;

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)>(r1);

     label1:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r2;

     label2:
        return null;
    }

    private android.database.Cursor getInternalRingtones()
    {
        android.media.RingtoneManager r0;
        java.util.List $r1;
        android.net.Uri $r2;
        java.lang.String[] $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;

        r0 := @this: android.media.RingtoneManager;

        $r2 = <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        $r3 = <android.media.RingtoneManager: java.lang.String[] INTERNAL_COLUMNS>;

        $r1 = r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        $r4 = staticinvoke <android.media.RingtoneManager: java.lang.String constructBooleanTrueWhereClause(java.util.List)>($r1);

        $r5 = specialinvoke r0.<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, $r3, $r4, null, "title_key");

        return $r5;
    }

    private android.database.Cursor getMediaRingtones()
    {
        android.media.RingtoneManager r0;
        java.lang.String r1, $r5;
        boolean $z0, $z1;
        java.util.List $r2;
        android.net.Uri $r3;
        java.lang.String[] $r4;
        android.database.Cursor $r6;

        r0 := @this: android.media.RingtoneManager;

        r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted_ro");

        if $z1 == 0 goto label2;

     label1:
        $r3 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r4 = <android.media.RingtoneManager: java.lang.String[] MEDIA_COLUMNS>;

        $r2 = r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        $r5 = staticinvoke <android.media.RingtoneManager: java.lang.String constructBooleanTrueWhereClause(java.util.List)>($r2);

        $r6 = specialinvoke r0.<android.media.RingtoneManager: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r3, $r4, $r5, null, "title_key");

        goto label3;

     label2:
        $r6 = null;

     label3:
        return $r6;
    }

    private void setFilterColumnsList(int)
    {
        android.media.RingtoneManager r0;
        int i0, $i1, $i2, $i3;
        java.util.List r1;

        r0 := @this: android.media.RingtoneManager;

        i0 := @parameter0: int;

        r1 = r0.<android.media.RingtoneManager: java.util.List mFilterColumns>;

        interfaceinvoke r1.<java.util.List: void clear()>();

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("is_ringtone");

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("is_notification");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("is_alarm");

     label3:
        return;
    }

    private static java.lang.String constructBooleanTrueWhereClause(java.util.List)
    {
        java.util.List r0;
        java.lang.StringBuilder r1, $r2, $r8;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r7;
        java.lang.Object $r6;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label3;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1 or ");

        i0 = i0 + -1;

        goto label2;

     label3:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i2 <= 0 goto label4;

        $i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i4 = $i3 - 4;

        virtualinvoke r1.<java.lang.StringBuilder: void setLength(int)>($i4);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        android.media.RingtoneManager r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.app.Activity $r6, $r10;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        android.database.Cursor $r9, $r11;

        r0 := @this: android.media.RingtoneManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<android.media.RingtoneManager: android.app.Activity mActivity>;

        if $r6 == null goto label1;

        $r10 = r0.<android.media.RingtoneManager: android.app.Activity mActivity>;

        $r11 = virtualinvoke $r10.<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

        return $r11;

     label1:
        $r7 = r0.<android.media.RingtoneManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, r5);

        return $r9;
    }

    public static android.media.Ringtone getRingtone(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        android.media.Ringtone $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)>(r0, r1, -1);

        return $r2;
    }

    private static android.media.Ringtone getRingtone(android.content.Context, android.net.Uri, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        int i0;
        android.media.Ringtone r2, $r3;
        java.lang.Exception $r4, r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

     label1:
        $r3 = new android.media.Ringtone;

        specialinvoke $r3.<android.media.Ringtone: void <init>(android.content.Context,boolean)>(r0, 1);

        r2 = $r3;

        if i0 < 0 goto label2;

        virtualinvoke r2.<android.media.Ringtone: void setStreamType(int)>(i0);

     label2:
        virtualinvoke r2.<android.media.Ringtone: void setUri(android.net.Uri)>(r1);

     label3:
        return r2;

     label4:
        $r4 := @caughtexception;

        r11 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open ringtone ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RingtoneManager", $r10);

        return null;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public static android.net.Uri getActualDefaultRingtoneUri(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.lang.String r1, r2;
        android.content.ContentResolver $r3;
        android.net.Uri $r4;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.media.RingtoneManager: java.lang.String getSettingForType(int)>(i0);

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, r1);

        if r2 == null goto label2;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    public static void setActualDefaultRingtoneUri(android.content.Context, int, android.net.Uri)
    {
        android.content.Context r0;
        int i0;
        android.net.Uri r1;
        java.lang.String r2, $r4;
        android.content.ContentResolver $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.Uri;

        r2 = staticinvoke <android.media.RingtoneManager: java.lang.String getSettingForType(int)>(i0);

        if r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if r1 == null goto label2;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r3, r2, $r4);

        return;
    }

    private static java.lang.String getSettingForType(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        return "ringtone";

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        return "notification_sound";

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        return "alarm_alert";

     label3:
        return null;
    }

    public static boolean isDefault(android.net.Uri)
    {
        android.net.Uri r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $i0 = staticinvoke <android.media.RingtoneManager: int getDefaultType(android.net.Uri)>(r0);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int getDefaultType(android.net.Uri)
    {
        android.net.Uri r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.net.Uri;

        if r0 != null goto label1;

        return -1;

     label1:
        $r1 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

        $z0 = virtualinvoke r0.<android.net.Uri: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        $z1 = virtualinvoke r0.<android.net.Uri: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        return 2;

     label3:
        $r3 = <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI>;

        $z2 = virtualinvoke r0.<android.net.Uri: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label4;

        return 4;

     label4:
        return -1;
    }

    public static android.net.Uri getDefaultUri(int)
    {
        int i0, $i1, $i2, $i3;
        android.net.Uri $r0, $r1, $r2;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

        return $r2;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        $r1 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        return $r1;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r0 = <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI>;

        return $r0;

     label3:
        return null;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r7;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12;
        android.net.Uri $r3, $r10;
        java.lang.String $r6, $r13;

        <android.media.RingtoneManager: int URI_COLUMN_INDEX> = 2;

        <android.media.RingtoneManager: int TITLE_COLUMN_INDEX> = 1;

        <android.media.RingtoneManager: int ID_COLUMN_INDEX> = 0;

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_PICKED_URI> = "android.intent.extra.ringtone.PICKED_URI";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_TITLE> = "android.intent.extra.ringtone.TITLE";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_TYPE> = "android.intent.extra.ringtone.TYPE";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_DEFAULT_URI> = "android.intent.extra.ringtone.DEFAULT_URI";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_EXISTING_URI> = "android.intent.extra.ringtone.EXISTING_URI";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_INCLUDE_DRM> = "android.intent.extra.ringtone.INCLUDE_DRM";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_SHOW_SILENT> = "android.intent.extra.ringtone.SHOW_SILENT";

        <android.media.RingtoneManager: java.lang.String EXTRA_RINGTONE_SHOW_DEFAULT> = "android.intent.extra.ringtone.SHOW_DEFAULT";

        <android.media.RingtoneManager: java.lang.String ACTION_RINGTONE_PICKER> = "android.intent.action.RINGTONE_PICKER";

        <android.media.RingtoneManager: int TYPE_ALL> = 7;

        <android.media.RingtoneManager: int TYPE_ALARM> = 4;

        <android.media.RingtoneManager: int TYPE_NOTIFICATION> = 2;

        <android.media.RingtoneManager: int TYPE_RINGTONE> = 1;

        <android.media.RingtoneManager: java.lang.String TAG> = "RingtoneManager";

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r3 = <android.provider.MediaStore$Audio$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[2] = $r6;

        $r0[3] = "title_key";

        <android.media.RingtoneManager: java.lang.String[] INTERNAL_COLUMNS> = $r0;

        $r7 = newarray (java.lang.String)[4];

        $r7[0] = "_id";

        $r7[1] = "title";

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r10 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7[2] = $r13;

        $r7[3] = "title_key";

        <android.media.RingtoneManager: java.lang.String[] MEDIA_COLUMNS> = $r7;

        return;
    }
}
