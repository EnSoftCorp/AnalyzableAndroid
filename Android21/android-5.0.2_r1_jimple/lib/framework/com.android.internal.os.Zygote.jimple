public final class com.android.internal.os.Zygote extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int DEBUG_ENABLE_DEBUGGER;
    public static final int DEBUG_ENABLE_CHECKJNI;
    public static final int DEBUG_ENABLE_ASSERT;
    public static final int DEBUG_ENABLE_SAFEMODE;
    public static final int DEBUG_ENABLE_JNI_LOGGING;
    public static final int MOUNT_EXTERNAL_NONE;
    public static final int MOUNT_EXTERNAL_SINGLEUSER;
    public static final int MOUNT_EXTERNAL_MULTIUSER;
    public static final int MOUNT_EXTERNAL_MULTIUSER_ALL;
    private static final dalvik.system.ZygoteHooks VM_HOOKS;

    private void <init>()
    {
        com.android.internal.os.Zygote r0;

        r0 := @this: com.android.internal.os.Zygote;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int forkAndSpecialize(int, int, int[], int, int[][], int, java.lang.String, java.lang.String, int[], java.lang.String, java.lang.String)
    {
        int i0, i1, i2, i3, i5;
        int[] r0, r4;
        int[][] r1;
        java.lang.String r2, r3, r5, r6;
        long l4;
        dalvik.system.ZygoteHooks $r7, $r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: int[];

        i2 := @parameter3: int;

        r1 := @parameter4: int[][];

        i3 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: int[];

        r5 := @parameter9: java.lang.String;

        r6 := @parameter10: java.lang.String;

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r7 = <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS>;

        virtualinvoke $r7.<dalvik.system.ZygoteHooks: void preFork()>();

        staticinvoke <com.android.internal.os.Zygote: void checkTime(long,java.lang.String)>(l4, "Zygote.preFork");

        i5 = staticinvoke <com.android.internal.os.Zygote: int nativeForkAndSpecialize(int,int,int[],int,int[][],int,java.lang.String,java.lang.String,int[],java.lang.String,java.lang.String)>(i0, i1, r0, i2, r1, i3, r2, r3, r4, r5, r6);

        staticinvoke <com.android.internal.os.Zygote: void checkTime(long,java.lang.String)>(l4, "Zygote.nativeForkAndSpecialize");

        $r8 = <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS>;

        virtualinvoke $r8.<dalvik.system.ZygoteHooks: void postForkCommon()>();

        staticinvoke <com.android.internal.os.Zygote: void checkTime(long,java.lang.String)>(l4, "Zygote.postForkCommon");

        return i5;
    }

    private static native int nativeForkAndSpecialize(int, int, int[], int, int[][], int, java.lang.String, java.lang.String, int[], java.lang.String, java.lang.String);

    private static void checkTime(long, java.lang.String)
    {
        long l0, l2, $l3, $l5;
        java.lang.String r0, $r6;
        byte $b4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = l2 - l0;

        $b4 = $l3 cmp 1000L;

        if $b4 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Slow operation: ");

        $l5 = l2 - l0;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms so far, now at ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("Zygote", $r6);

     label1:
        return;
    }

    public static int forkSystemServer(int, int, int[], int, int[][], long, long)
    {
        int i0, i1, i2, i5;
        int[] r0;
        int[][] r1;
        long l3, l4;
        dalvik.system.ZygoteHooks $r2, $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: int[];

        i2 := @parameter3: int;

        r1 := @parameter4: int[][];

        l3 := @parameter5: long;

        l4 := @parameter6: long;

        $r2 = <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS>;

        virtualinvoke $r2.<dalvik.system.ZygoteHooks: void preFork()>();

        i5 = staticinvoke <com.android.internal.os.Zygote: int nativeForkSystemServer(int,int,int[],int,int[][],long,long)>(i0, i1, r0, i2, r1, l3, l4);

        $r3 = <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS>;

        virtualinvoke $r3.<dalvik.system.ZygoteHooks: void postForkCommon()>();

        return i5;
    }

    private static native int nativeForkSystemServer(int, int, int[], int, int[][], long, long);

    private static void callPostForkChildHooks(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        long l1;
        dalvik.system.ZygoteHooks $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS>;

        virtualinvoke $r1.<dalvik.system.ZygoteHooks: void postForkChild(int,java.lang.String)>(i0, r0);

        staticinvoke <com.android.internal.os.Zygote: void checkTime(long,java.lang.String)>(l1, "Zygote.callPostForkChildHooks");

        return;
    }

    public static void execShell(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.String[] r1, $r3;
        android.system.ErrnoException r2, $r5;
        java.lang.RuntimeException $r6;

        r0 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "/system/bin/sh";

        $r3[1] = "-c";

        $r3[2] = r0;

        r1 = $r3;

     label1:
        $r4 = r1[0];

        staticinvoke <android.system.Os: void execv(java.lang.String,java.lang.String[])>($r4, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static void appendQuotedShellArgs(java.lang.StringBuilder, java.lang.String[])
    {
        java.lang.StringBuilder r0, $r4, $r6;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, $r5;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r4 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\'\\\'\'");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        dalvik.system.ZygoteHooks $r0;

        <com.android.internal.os.Zygote: int MOUNT_EXTERNAL_MULTIUSER_ALL> = 3;

        <com.android.internal.os.Zygote: int MOUNT_EXTERNAL_MULTIUSER> = 2;

        <com.android.internal.os.Zygote: int MOUNT_EXTERNAL_SINGLEUSER> = 1;

        <com.android.internal.os.Zygote: int MOUNT_EXTERNAL_NONE> = 0;

        <com.android.internal.os.Zygote: int DEBUG_ENABLE_JNI_LOGGING> = 16;

        <com.android.internal.os.Zygote: int DEBUG_ENABLE_SAFEMODE> = 8;

        <com.android.internal.os.Zygote: int DEBUG_ENABLE_ASSERT> = 4;

        <com.android.internal.os.Zygote: int DEBUG_ENABLE_CHECKJNI> = 2;

        <com.android.internal.os.Zygote: int DEBUG_ENABLE_DEBUGGER> = 1;

        <com.android.internal.os.Zygote: java.lang.String TAG> = "Zygote";

        $r0 = new dalvik.system.ZygoteHooks;

        specialinvoke $r0.<dalvik.system.ZygoteHooks: void <init>()>();

        <com.android.internal.os.Zygote: dalvik.system.ZygoteHooks VM_HOOKS> = $r0;

        return;
    }
}
