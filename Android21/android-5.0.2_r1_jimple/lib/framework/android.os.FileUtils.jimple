public class android.os.FileUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int S_IRWXU;
    public static final int S_IRUSR;
    public static final int S_IWUSR;
    public static final int S_IXUSR;
    public static final int S_IRWXG;
    public static final int S_IRGRP;
    public static final int S_IWGRP;
    public static final int S_IXGRP;
    public static final int S_IRWXO;
    public static final int S_IROTH;
    public static final int S_IWOTH;
    public static final int S_IXOTH;
    private static final java.util.regex.Pattern SAFE_FILENAME_PATTERN;

    public void <init>()
    {
        android.os.FileUtils r0;

        r0 := @this: android.os.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int setPermissions(java.io.File, int, int, int)
    {
        java.io.File r0;
        int i0, i1, i2, $i3;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i3 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r1, i0, i1, i2);

        return $i3;
    }

    public static int setPermissions(java.lang.String, int, int, int)
    {
        java.lang.String r0, $r8, $r15;
        int i0, i1, i2, $i4, $i6;
        android.system.ErrnoException r1, $r2, $r9, r16;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        staticinvoke <android.system.Os: void chmod(java.lang.String,int)>(r0, i0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chmod(");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r15);

        $i6 = r1.<android.system.ErrnoException: int errno>;

        return $i6;

     label4:
        if i1 >= 0 goto label5;

        if i2 < 0 goto label8;

     label5:
        staticinvoke <android.system.Os: void chown(java.lang.String,int,int)>(r0, i1, i2);

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        r16 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chown(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r8);

        $i4 = r16.<android.system.ErrnoException: int errno>;

        return $i4;

     label8:
        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
        catch android.system.ErrnoException from label5 to label6 with label7;
    }

    public static int setPermissions(java.io.FileDescriptor, int, int, int)
    {
        java.io.FileDescriptor r0;
        int i0, i1, i2, $i4, $i6;
        android.system.ErrnoException r1, $r2, $r7, r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        staticinvoke <android.system.Os: void fchmod(java.io.FileDescriptor,int)>(r0, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchmod(): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r6);

        $i4 = r1.<android.system.ErrnoException: int errno>;

        return $i4;

     label4:
        if i1 >= 0 goto label5;

        if i2 < 0 goto label8;

     label5:
        staticinvoke <android.system.Os: void fchown(java.io.FileDescriptor,int,int)>(r0, i1, i2);

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        r12 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchown(): ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r11);

        $i6 = r12.<android.system.ErrnoException: int errno>;

        return $i6;

     label8:
        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
        catch android.system.ErrnoException from label5 to label6 with label7;
    }

    public static int getUid(java.lang.String)
    {
        java.lang.String r0;
        android.system.StructStat $r2;
        int $i0;
        android.system.ErrnoException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.system.Os: android.system.StructStat stat(java.lang.String)>(r0);

        $i0 = $r2.<android.system.StructStat: int st_uid>;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public static boolean sync(java.io.FileOutputStream)
    {
        java.io.FileOutputStream r0;
        java.io.FileDescriptor $r2;
        java.io.IOException $r3;

        r0 := @parameter0: java.io.FileOutputStream;

     label1:
        if r0 == null goto label2;

        $r2 = virtualinvoke r0.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r2.<java.io.FileDescriptor: void sync()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static boolean copyFile(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.io.FileInputStream r2, $r4;
        java.lang.Throwable r3, $r5;
        java.io.IOException $r6;
        boolean z1;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

     label1:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r4;

     label2:
        z1 = staticinvoke <android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>(r2, r1);

     label3:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        throw r3;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        z1 = 0;

     label8:
        return z1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    public static boolean copyToFile(java.io.InputStream, java.io.File)
    {
        java.io.InputStream r0;
        java.io.File r1;
        java.io.FileOutputStream r2, $r6;
        byte[] r3;
        int i0, $i1;
        java.lang.Throwable r4, $r10;
        boolean $z0;
        java.io.FileDescriptor $r7, $r11;
        java.io.IOException $r8, $r9, $r12;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.File;

     label01:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label02:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r6;

     label03:
        r3 = newarray (byte)[4096];

     label04:
        $i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r3);

        i0 = $i1;

        if $i1 < 0 goto label05;

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label04;

     label05:
        virtualinvoke r2.<java.io.FileOutputStream: void flush()>();

     label06:
        $r7 = virtualinvoke r2.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r7.<java.io.FileDescriptor: void sync()>();

     label07:
        goto label09;

     label08:
        $r8 := @caughtexception;

     label09:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        goto label16;

     label10:
        $r10 := @caughtexception;

        r4 = $r10;

     label11:
        virtualinvoke r2.<java.io.FileOutputStream: void flush()>();

     label12:
        $r11 = virtualinvoke r2.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r11.<java.io.FileDescriptor: void sync()>();

     label13:
        goto label15;

     label14:
        $r9 := @caughtexception;

     label15:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        throw r4;

     label16:
        return 1;

     label17:
        $r12 := @caughtexception;

        return 0;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.io.IOException from label01 to label16 with label17;
    }

    public static boolean isFilenameSafe(java.io.File)
    {
        java.io.File r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = <android.os.FileUtils: java.util.regex.Pattern SAFE_FILENAME_PATTERN>;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static java.lang.String readTextFile(java.io.File, int, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        int i0, i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        java.lang.String r1, r5, $r13, $r15, $r16, $r18, $r19, $r24, r25, r26, r27, r29, r30, r31, r32, r35;
        java.io.FileInputStream r2, $r9;
        java.io.BufferedInputStream r3, $r10;
        long l1, $l6;
        byte[] r4, r6, r7, r28, r34;
        java.lang.Throwable r8, $r23;
        byte $b4, $b5, $b7;
        java.lang.StringBuilder $r11, $r12, $r14, $r20, $r21, $r22;
        java.io.ByteArrayOutputStream $r17, r33;
        boolean z0;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r9;

        $r10 = new java.io.BufferedInputStream;

        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        r3 = $r10;

     label01:
        l1 = virtualinvoke r0.<java.io.File: long length()>();

        if i0 > 0 goto label02;

        $b7 = l1 cmp 0L;

        if $b7 <= 0 goto label12;

        if i0 != 0 goto label12;

     label02:
        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label04;

        if i0 == 0 goto label03;

        $l6 = (long) i0;

        $b5 = l1 cmp $l6;

        if $b5 >= 0 goto label04;

     label03:
        i0 = (int) l1;

     label04:
        $i3 = i0 + 1;

        r4 = newarray (byte)[$i3];

        i2 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r4);

        if i2 > 0 goto label06;

        r5 = "";

     label05:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r5;

     label06:
        if i2 > i0 goto label08;

        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(byte[],int,int)>(r4, 0, i2);

        r25 = $r15;

     label07:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r25;

     label08:
        if r1 != null goto label10;

        $r16 = new java.lang.String;

        specialinvoke $r16.<java.lang.String: void <init>(byte[],int,int)>(r4, 0, i0);

        r26 = $r16;

     label09:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r26;

     label10:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[],int,int)>(r4, 0, i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r27 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r27;

     label12:
        if i0 >= 0 goto label25;

        z0 = 0;

        r28 = null;

        r6 = null;

     label13:
        if r28 == null goto label14;

        z0 = 1;

     label14:
        r7 = r28;

        r28 = r6;

        r6 = r7;

        if r6 != null goto label15;

        $i13 = neg i0;

        r6 = newarray (byte)[$i13];

     label15:
        i15 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r6);

        $i9 = lengthof r6;

        if i15 == $i9 goto label13;

        if r28 != null goto label17;

        if i15 > 0 goto label17;

        r29 = "";

     label16:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r29;

     label17:
        if r28 != null goto label19;

        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[],int,int)>(r6, 0, i15);

        r30 = $r24;

     label18:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r30;

     label19:
        if i15 <= 0 goto label20;

        z0 = 1;

        $i12 = lengthof r28;

        $i10 = $i12 - i15;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r28, i15, r28, 0, $i10);

        $i11 = lengthof r28;

        $i14 = $i11 - i15;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r6, 0, r28, $i14, i15);

     label20:
        if r1 == null goto label21;

        if z0 != 0 goto label23;

     label21:
        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[])>(r28);

        r31 = $r18;

     label22:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r31;

     label23:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = new java.lang.String;

        specialinvoke $r19.<java.lang.String: void <init>(byte[])>(r28);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r32 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r32;

     label25:
        $r17 = new java.io.ByteArrayOutputStream;

        specialinvoke $r17.<java.io.ByteArrayOutputStream: void <init>()>();

        r33 = $r17;

        r34 = newarray (byte)[1024];

     label26:
        i16 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r34);

        if i16 <= 0 goto label27;

        virtualinvoke r33.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r34, 0, i16);

     label27:
        $i8 = lengthof r34;

        if i16 == $i8 goto label26;

        r35 = virtualinvoke r33.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label28:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r35;

     label29:
        $r23 := @caughtexception;

        r8 = $r23;

     label30:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        throw r8;

        catch java.lang.Throwable from label01 to label05 with label29;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.lang.Throwable from label12 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label19 to label22 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label25 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    public static void stringToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        java.io.FileWriter r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.io.FileWriter;

        specialinvoke $r4.<java.io.FileWriter: void <init>(java.lang.String)>(r0);

        r2 = $r4;

     label1:
        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>(r1);

     label2:
        virtualinvoke r2.<java.io.FileWriter: void close()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<java.io.FileWriter: void close()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long checksumCrc32(java.io.File) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.io.File r0;
        java.util.zip.CRC32 r1, $r7;
        java.util.zip.CheckedInputStream r2, $r8;
        byte[] r3;
        long l0;
        java.lang.Throwable r5, $r12;
        java.io.FileInputStream $r9;
        int $i1;
        java.io.IOException $r10, $r11;

        r0 := @parameter0: java.io.File;

        $r7 = new java.util.zip.CRC32;

        specialinvoke $r7.<java.util.zip.CRC32: void <init>()>();

        r1 = $r7;

        r2 = null;

     label01:
        $r8 = new java.util.zip.CheckedInputStream;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        specialinvoke $r8.<java.util.zip.CheckedInputStream: void <init>(java.io.InputStream,java.util.zip.Checksum)>($r9, r1);

        r2 = $r8;

        r3 = newarray (byte)[128];

     label02:
        $i1 = virtualinvoke r2.<java.util.zip.CheckedInputStream: int read(byte[])>(r3);

        if $i1 < 0 goto label03;

        goto label02;

     label03:
        l0 = virtualinvoke r1.<java.util.zip.CRC32: long getValue()>();

     label04:
        if r2 == null goto label08;

     label05:
        virtualinvoke r2.<java.util.zip.CheckedInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r10 := @caughtexception;

     label08:
        return l0;

     label09:
        $r12 := @caughtexception;

        r5 = $r12;

     label10:
        if r2 == null goto label14;

     label11:
        virtualinvoke r2.<java.util.zip.CheckedInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r11 := @caughtexception;

     label14:
        throw r5;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean deleteOlderFiles(java.io.File, int, long)
    {
        java.io.File r0, r2;
        int i0, i2, $i5;
        long l1, l3, $l6, $l8;
        java.io.File[] r1;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r3;
        byte $b4, $b7;
        android.os.FileUtils$1 $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        if i0 < 0 goto label1;

        $b4 = l1 cmp 0L;

        if $b4 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Constraints must be positive or 0");

        throw $r3;

     label2:
        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label3;

        return 0;

     label3:
        $r4 = new android.os.FileUtils$1;

        specialinvoke $r4.<android.os.FileUtils$1: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, $r4);

        z0 = 0;

        i2 = i0;

     label4:
        $i5 = lengthof r1;

        if i2 >= $i5 goto label6;

        r2 = r1[i2];

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l8 = virtualinvoke r2.<java.io.File: long lastModified()>();

        l3 = $l6 - $l8;

        $b7 = l3 cmp l1;

        if $b7 <= 0 goto label5;

        $z1 = virtualinvoke r2.<java.io.File: boolean delete()>();

        if $z1 == 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old file ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FileUtils", $r7);

        z0 = 1;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        return z0;
    }

    public static boolean contains(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String r2, r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        r3 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        return $z2;
    }

    public static boolean deleteContents(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        boolean z0, $z1, $z2, $z3;
        int i0, i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        z0 = 1;

        if r1 == null goto label4;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z1 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        $z3 = staticinvoke <android.os.FileUtils: boolean deleteContents(java.io.File)>(r3);

        z0 = z0 & $z3;

     label2:
        $z2 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FileUtils", $r7);

        z0 = 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return z0;
    }

    public static boolean isValidExtFilename(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int i0, $i2;
        char c1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $r1 = ".";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label1;

        $r2 = "..";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = 0;

     label3:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label6;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if c1 == 0 goto label4;

        if c1 != 47 goto label5;

     label4:
        return 0;

     label5:
        i0 = i0 + 1;

        goto label3;

     label6:
        return 1;
    }

    public static java.lang.String rewriteAfterRename(java.io.File, java.io.File, java.lang.String)
    {
        java.io.File r0, r1, r3, $r4;
        java.lang.String r2, $r5;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String;

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r2);

        r3 = staticinvoke <android.os.FileUtils: java.io.File rewriteAfterRename(java.io.File,java.io.File,java.io.File)>(r0, r1, $r4);

        if r3 == null goto label2;

        $r5 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;
    }

    public static java.lang.String[] rewriteAfterRename(java.io.File, java.io.File, java.lang.String[])
    {
        java.io.File r0, r1;
        java.lang.String[] r2, r3;
        int i0, $i1, $i2;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String[];

        if r2 != null goto label1;

        return null;

     label1:
        $i1 = lengthof r2;

        r3 = newarray (java.lang.String)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r4 = r2[i0];

        $r5 = staticinvoke <android.os.FileUtils: java.lang.String rewriteAfterRename(java.io.File,java.io.File,java.lang.String)>(r0, r1, $r4);

        r3[i0] = $r5;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r3;
    }

    public static java.io.File rewriteAfterRename(java.io.File, java.io.File, java.io.File)
    {
        java.io.File r0, r1, r2, $r6;
        java.lang.String r3, $r4, $r5;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <android.os.FileUtils: boolean contains(java.io.File,java.io.File)>(r0, r2);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        r3 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r3);

        return $r6;

     label2:
        return null;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <android.os.FileUtils: int S_IXOTH> = 1;

        <android.os.FileUtils: int S_IWOTH> = 2;

        <android.os.FileUtils: int S_IROTH> = 4;

        <android.os.FileUtils: int S_IRWXO> = 7;

        <android.os.FileUtils: int S_IXGRP> = 8;

        <android.os.FileUtils: int S_IWGRP> = 16;

        <android.os.FileUtils: int S_IRGRP> = 32;

        <android.os.FileUtils: int S_IRWXG> = 56;

        <android.os.FileUtils: int S_IXUSR> = 64;

        <android.os.FileUtils: int S_IWUSR> = 128;

        <android.os.FileUtils: int S_IRUSR> = 256;

        <android.os.FileUtils: int S_IRWXU> = 448;

        <android.os.FileUtils: java.lang.String TAG> = "FileUtils";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\w%+,./=_-]+");

        <android.os.FileUtils: java.util.regex.Pattern SAFE_FILENAME_PATTERN> = $r0;

        return;
    }
}
