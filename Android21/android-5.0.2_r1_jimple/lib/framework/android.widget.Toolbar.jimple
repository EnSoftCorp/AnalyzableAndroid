public class android.widget.Toolbar extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private android.widget.ActionMenuView mMenuView;
    private android.widget.TextView mTitleTextView;
    private android.widget.TextView mSubtitleTextView;
    private android.widget.ImageButton mNavButtonView;
    private android.widget.ImageView mLogoView;
    private android.graphics.drawable.Drawable mCollapseIcon;
    private android.widget.ImageButton mCollapseButtonView;
    android.view.View mExpandedActionView;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private int mTitleTextAppearance;
    private int mSubtitleTextAppearance;
    private int mNavButtonStyle;
    private int mButtonGravity;
    private int mMaxButtonHeight;
    private int mTitleMarginStart;
    private int mTitleMarginEnd;
    private int mTitleMarginTop;
    private int mTitleMarginBottom;
    private final android.widget.RtlSpacingHelper mContentInsets;
    private int mGravity;
    private java.lang.CharSequence mTitleText;
    private java.lang.CharSequence mSubtitleText;
    private int mTitleTextColor;
    private int mSubtitleTextColor;
    private boolean mEatingTouch;
    private final java.util.ArrayList mTempViews;
    private final int[] mTempMargins;
    private android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener;
    private final android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener;
    private com.android.internal.widget.ToolbarWidgetWrapper mWrapper;
    private android.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    private android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter;
    private com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    private com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private boolean mCollapsible;
    private final java.lang.Runnable mShowOverflowMenuRunnable;

    public void <init>(android.content.Context)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843946);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Toolbar r0;
        android.content.Context r1, $r17;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.content.res.TypedArray r3;
        java.lang.CharSequence r4, r5, r6;
        android.graphics.drawable.Drawable r7, $r15;
        java.util.ArrayList $r8;
        android.widget.RtlSpacingHelper $r9, $r14, $r16;
        android.widget.Toolbar$1 $r10;
        int[] $r11, $r12;
        android.widget.Toolbar$2 $r13;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r9 = new android.widget.RtlSpacingHelper;

        specialinvoke $r9.<android.widget.RtlSpacingHelper: void <init>()>();

        r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets> = $r9;

        r0.<android.widget.Toolbar: int mGravity> = 8388627;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.Toolbar: java.util.ArrayList mTempViews> = $r8;

        $r11 = newarray (int)[2];

        r0.<android.widget.Toolbar: int[] mTempMargins> = $r11;

        $r10 = new android.widget.Toolbar$1;

        specialinvoke $r10.<android.widget.Toolbar$1: void <init>(android.widget.Toolbar)>(r0);

        r0.<android.widget.Toolbar: android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener> = $r10;

        $r13 = new android.widget.Toolbar$2;

        specialinvoke $r13.<android.widget.Toolbar$2: void <init>(android.widget.Toolbar)>(r0);

        r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable> = $r13;

        $r12 = <com.android.internal.R$styleable: int[] Toolbar>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r12, i0, i1);

        $i10 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        r0.<android.widget.Toolbar: int mTitleTextAppearance> = $i10;

        $i12 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        r0.<android.widget.Toolbar: int mSubtitleTextAppearance> = $i12;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(18, 0);

        r0.<android.widget.Toolbar: int mNavButtonStyle> = $i11;

        $i14 = r0.<android.widget.Toolbar: int mGravity>;

        $i13 = virtualinvoke r3.<android.content.res.TypedArray: int getInteger(int,int)>(0, $i14);

        r0.<android.widget.Toolbar: int mGravity> = $i13;

        $i16 = virtualinvoke r3.<android.content.res.TypedArray: int getInteger(int,int)>(19, 48);

        r0.<android.widget.Toolbar: int mButtonGravity> = $i16;

        $i15 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(12, 0);

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = $i15;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = $i15;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = $i15;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = $i15;

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(13, -1);

        if i2 < 0 goto label01;

        r0.<android.widget.Toolbar: int mTitleMarginStart> = i2;

     label01:
        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(14, -1);

        if i3 < 0 goto label02;

        r0.<android.widget.Toolbar: int mTitleMarginEnd> = i3;

     label02:
        i4 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(15, -1);

        if i4 < 0 goto label03;

        r0.<android.widget.Toolbar: int mTitleMarginTop> = i4;

     label03:
        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(16, -1);

        if i5 < 0 goto label04;

        r0.<android.widget.Toolbar: int mTitleMarginBottom> = i5;

     label04:
        $i17 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(17, -1);

        r0.<android.widget.Toolbar: int mMaxButtonHeight> = $i17;

        i6 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(5, -2147483648);

        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(6, -2147483648);

        i8 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, 0);

        i9 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, 0);

        $r16 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r16.<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>(i8, i9);

        if i6 != -2147483648 goto label05;

        if i7 == -2147483648 goto label06;

     label05:
        $r14 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r14.<android.widget.RtlSpacingHelper: void setRelative(int,int)>(i6, i7);

     label06:
        $r15 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(20);

        r0.<android.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon> = $r15;

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label07;

        virtualinvoke r0.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>(r4);

     label07:
        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 != 0 goto label08;

        virtualinvoke r0.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>(r5);

     label08:
        $r17 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r17;

        $i18 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(9, 0);

        virtualinvoke r0.<android.widget.Toolbar: void setPopupTheme(int)>($i18);

        r7 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(10);

        if r7 == null goto label09;

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>(r7);

     label09:
        r6 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(11);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 != 0 goto label10;

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>(r6);

     label10:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setPopupTheme(int)
    {
        android.widget.Toolbar r0;
        int i0, $i1;
        android.view.ContextThemeWrapper $r1;
        android.content.Context $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.Toolbar: int mPopupTheme>;

        if $i1 == i0 goto label2;

        r0.<android.widget.Toolbar: int mPopupTheme> = i0;

        if i0 != 0 goto label1;

        $r3 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r3;

        goto label2;

     label1:
        $r1 = new android.view.ContextThemeWrapper;

        $r2 = r0.<android.widget.Toolbar: android.content.Context mContext>;

        specialinvoke $r1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r2, i0);

        r0.<android.widget.Toolbar: android.content.Context mPopupContext> = $r1;

     label2:
        return;
    }

    public int getPopupTheme()
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        return $i0;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.RtlSpacingHelper $r1;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>(i0);

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        if i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke $r1.<android.widget.RtlSpacingHelper: void setDirection(boolean)>($z0);

        return;
    }

    public void setLogo(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public boolean canShowOverflowMenu()
    {
        android.widget.Toolbar r0;
        int $i0;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $i0 = virtualinvoke r0.<android.widget.Toolbar: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isOverflowMenuShowing()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isOverflowMenuShowPending()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuView: boolean isOverflowMenuShowPending()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean showOverflowMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuView: boolean showOverflowMenu()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean hideOverflowMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z0 = virtualinvoke $r2.<android.widget.ActionMenuView: boolean hideOverflowMenu()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setMenu(com.android.internal.view.menu.MenuBuilder, android.widget.ActionMenuPresenter)
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuBuilder r1, r3;
        android.widget.ActionMenuPresenter r2, $r17;
        android.widget.ActionMenuView $r4, $r10, $r11, $r18;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r5, $r8, $r9, $r14, $r15, $r16;
        android.content.Context $r6, $r7, $r12, $r13;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        r2 := @parameter1: android.widget.ActionMenuPresenter;

        if r1 != null goto label1;

        $r18 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r18 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.Toolbar: void ensureMenuView()>();

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        r3 = virtualinvoke $r4.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        if r3 != r1 goto label2;

        return;

     label2:
        if r3 == null goto label3;

        $r17 = r0.<android.widget.Toolbar: android.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        virtualinvoke r3.<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>($r17);

        $r16 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke r3.<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>($r16);

     label3:
        $r5 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r5 != null goto label4;

        $r14 = new android.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r14.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(android.widget.Toolbar,android.widget.Toolbar$1)>(r0, null);

        r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r14;

     label4:
        virtualinvoke r2.<android.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>(1);

        if r1 == null goto label5;

        $r12 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>(r2, $r12);

        $r15 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r13 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r15, $r13);

        goto label6;

     label5:
        $r6 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r2.<android.widget.ActionMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>($r6, null);

        $r8 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r7 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r8.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>($r7, null);

        virtualinvoke r2.<android.widget.ActionMenuPresenter: void updateMenuView(boolean)>(1);

        $r9 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $r9.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>(1);

     label6:
        $r10 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r10.<android.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r11 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r11.<android.widget.ActionMenuView: void setPresenter(android.widget.ActionMenuPresenter)>(r2);

        r0.<android.widget.Toolbar: android.widget.ActionMenuPresenter mOuterActionMenuPresenter> = r2;

        return;
    }

    public void dismissPopupMenus()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r2.<android.widget.ActionMenuView: void dismissPopupMenus()>();

     label1:
        return;
    }

    public boolean isTitleTruncated()
    {
        android.widget.Toolbar r0;
        android.text.Layout r1;
        int i0, i1, $i2;
        android.widget.TextView $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        r1 = virtualinvoke $r3.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label2;

        return 0;

     label2:
        i0 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $i2 = virtualinvoke r1.<android.text.Layout: int getEllipsisCount(int)>(i1);

        if $i2 <= 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable r1;
        android.widget.ImageView $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        android.view.ViewParent $r6, $r9;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureLogoView()>();

        $r8 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $r9 = virtualinvoke $r8.<android.widget.ImageView: android.view.ViewParent getParent()>();

        if $r9 != null goto label2;

        $r10 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View)>($r10);

        $r11 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke r0.<android.widget.Toolbar: void updateChildVisibilityForExpandedActionView(android.view.View)>($r11);

        goto label2;

     label1:
        $r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $r6 = virtualinvoke $r5.<android.widget.ImageView: android.view.ViewParent getParent()>();

        if $r6 == null goto label2;

        $r7 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r7);

     label2:
        $r3 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r4.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setLogoDescription(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        boolean $z0;
        android.widget.ImageView $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureLogoView()>();

     label1:
        $r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r3.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private void ensureLogoView()
    {
        android.widget.Toolbar r0;
        android.widget.ImageView $r1, $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r1 != null goto label1;

        $r2 = new android.widget.ImageView;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.ImageView: void <init>(android.content.Context)>($r3);

        r0.<android.widget.Toolbar: android.widget.ImageView mLogoView> = $r2;

     label1:
        return;
    }

    public boolean hasExpandedActionView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r1, $r2;
        com.android.internal.view.menu.MenuItemImpl $r3;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r3 = $r2.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void collapseActionView()
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuItemImpl r1, $r4;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r3 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r4 = $r3.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

     label2:
        r1 = $r4;

        if r1 == null goto label3;

        virtualinvoke r1.<com.android.internal.view.menu.MenuItemImpl: boolean collapseActionView()>();

     label3:
        return;
    }

    public java.lang.CharSequence getTitle()
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.CharSequence mTitleText>;

        return $r1;
    }

    public void setTitle(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        android.content.Context r2;
        boolean $z0;
        android.widget.TextView $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19;
        android.view.ViewParent $r7, $r11;
        android.text.TextUtils$TruncateAt $r17;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r9 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r9 != null goto label2;

        r2 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r15 = new android.widget.TextView;

        specialinvoke $r15.<android.widget.TextView: void <init>(android.content.Context)>(r2);

        r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView> = $r15;

        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r14.<android.widget.TextView: void setSingleLine()>();

        $r16 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r17 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r16.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r17);

        $i1 = r0.<android.widget.Toolbar: int mTitleTextAppearance>;

        if $i1 == 0 goto label1;

        $r19 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i3 = r0.<android.widget.Toolbar: int mTitleTextAppearance>;

        virtualinvoke $r19.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, $i3);

     label1:
        $i0 = r0.<android.widget.Toolbar: int mTitleTextColor>;

        if $i0 == 0 goto label2;

        $r18 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i2 = r0.<android.widget.Toolbar: int mTitleTextColor>;

        virtualinvoke $r18.<android.widget.TextView: void setTextColor(int)>($i2);

     label2:
        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: android.view.ViewParent getParent()>();

        if $r11 != null goto label4;

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View)>($r12);

        $r13 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void updateChildVisibilityForExpandedActionView(android.view.View)>($r13);

        goto label4;

     label3:
        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r3 == null goto label4;

        $r6 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewParent getParent()>();

        if $r7 == null goto label4;

        $r8 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r8);

     label4:
        $r4 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r4 == null goto label5;

        $r5 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label5:
        r0.<android.widget.Toolbar: java.lang.CharSequence mTitleText> = r1;

        return;
    }

    public java.lang.CharSequence getSubtitle()
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.CharSequence mSubtitleText>;

        return $r1;
    }

    public void setSubtitle(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        android.content.Context r2;
        boolean $z0;
        android.widget.TextView $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19;
        android.view.ViewParent $r7, $r11;
        android.text.TextUtils$TruncateAt $r17;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r9 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r9 != null goto label2;

        r2 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r15 = new android.widget.TextView;

        specialinvoke $r15.<android.widget.TextView: void <init>(android.content.Context)>(r2);

        r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView> = $r15;

        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r14.<android.widget.TextView: void setSingleLine()>();

        $r16 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r17 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r16.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r17);

        $i1 = r0.<android.widget.Toolbar: int mSubtitleTextAppearance>;

        if $i1 == 0 goto label1;

        $r19 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i3 = r0.<android.widget.Toolbar: int mSubtitleTextAppearance>;

        virtualinvoke $r19.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r2, $i3);

     label1:
        $i0 = r0.<android.widget.Toolbar: int mSubtitleTextColor>;

        if $i0 == 0 goto label2;

        $r18 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i2 = r0.<android.widget.Toolbar: int mSubtitleTextColor>;

        virtualinvoke $r18.<android.widget.TextView: void setTextColor(int)>($i2);

     label2:
        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r11 = virtualinvoke $r10.<android.widget.TextView: android.view.ViewParent getParent()>();

        if $r11 != null goto label4;

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View)>($r12);

        $r13 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke r0.<android.widget.Toolbar: void updateChildVisibilityForExpandedActionView(android.view.View)>($r13);

        goto label4;

     label3:
        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r3 == null goto label4;

        $r6 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewParent getParent()>();

        if $r7 == null goto label4;

        $r8 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r8);

     label4:
        $r4 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r4 == null goto label5;

        $r5 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label5:
        r0.<android.widget.Toolbar: java.lang.CharSequence mSubtitleText> = r1;

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        int i0;
        android.widget.TextView $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0.<android.widget.Toolbar: int mTitleTextAppearance> = i0;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r1, i0);

     label1:
        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        android.widget.Toolbar r0;
        android.content.Context r1;
        int i0;
        android.widget.TextView $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r0.<android.widget.Toolbar: int mSubtitleTextAppearance> = i0;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>(r1, i0);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.TextView $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mTitleTextColor> = i0;

        $r1 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>(i0);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.widget.TextView $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        r0.<android.widget.Toolbar: int mSubtitleTextColor> = i0;

        $r1 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>(i0);

     label1:
        return;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setNavigationContentDescription(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>(i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        android.widget.Toolbar r0;
        java.lang.CharSequence r1;
        boolean $z0;
        android.widget.ImageButton $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

     label1:
        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r3.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>(r1);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        android.widget.Toolbar r0;
        android.graphics.drawable.Drawable r1;
        android.widget.ImageButton $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        android.view.ViewParent $r6, $r9;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

        $r8 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $r9 = virtualinvoke $r8.<android.widget.ImageButton: android.view.ViewParent getParent()>();

        if $r9 != null goto label2;

        $r10 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View)>($r10);

        $r11 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke r0.<android.widget.Toolbar: void updateChildVisibilityForExpandedActionView(android.view.View)>($r11);

        goto label2;

     label1:
        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $r6 = virtualinvoke $r5.<android.widget.ImageButton: android.view.ViewParent getParent()>();

        if $r6 == null goto label2;

        $r7 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke r0.<android.widget.Toolbar: void removeView(android.view.View)>($r7);

     label2:
        $r3 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r4.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $r3 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        android.widget.Toolbar r0;
        android.view.View$OnClickListener r1;
        android.widget.ImageButton $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View$OnClickListener;

        specialinvoke r0.<android.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r1);

        return;
    }

    public android.view.Menu getMenu()
    {
        android.widget.Toolbar r0;
        android.widget.ActionMenuView $r1;
        android.view.Menu $r2;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenu()>();

        $r1 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r2 = virtualinvoke $r1.<android.widget.ActionMenuView: android.view.Menu getMenu()>();

        return $r2;
    }

    private void ensureMenu()
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuBuilder r1, $r3;
        android.widget.ActionMenuView $r2, $r4, $r7;
        android.view.Menu $r5;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r6, $r9, $r10;
        android.content.Context $r8;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureMenuView()>();

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r3 = virtualinvoke $r2.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        if $r3 != null goto label2;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r5 = virtualinvoke $r4.<android.widget.ActionMenuView: android.view.Menu getMenu()>();

        r1 = (com.android.internal.view.menu.MenuBuilder) $r5;

        $r6 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r6 != null goto label1;

        $r10 = new android.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r10.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(android.widget.Toolbar,android.widget.Toolbar$1)>(r0, null);

        r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r10;

     label1:
        $r7 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r7.<android.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>(1);

        $r9 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r8 = r0.<android.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>($r9, $r8);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams r1;
        android.widget.ActionMenuView $r2, $r3, $r5, $r7, $r10, $r11, $r12;
        android.content.Context $r4;
        int $i0, $i1, $i2, $i3;
        android.widget.ActionMenuView$OnMenuItemClickListener $r6;
        com.android.internal.view.menu.MenuBuilder$Callback $r8;
        com.android.internal.view.menu.MenuPresenter$Callback $r9;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r2 != null goto label1;

        $r3 = new android.widget.ActionMenuView;

        $r4 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r3.<android.widget.ActionMenuView: void <init>(android.content.Context)>($r4);

        r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView> = $r3;

        $r5 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i0 = r0.<android.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r5.<android.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r7 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r6 = r0.<android.widget.Toolbar: android.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener>;

        virtualinvoke $r7.<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView$OnMenuItemClickListener)>($r6);

        $r10 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r9 = r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback>;

        $r8 = r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback>;

        virtualinvoke $r10.<android.widget.ActionMenuView: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback,com.android.internal.view.menu.MenuBuilder$Callback)>($r9, $r8);

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388613 | $i2;

        r1.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        $r12 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        virtualinvoke $r12.<android.widget.ActionMenuView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        $r11 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        specialinvoke r0.<android.widget.Toolbar: void addSystemView(android.view.View)>($r11);

     label1:
        return;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        android.widget.Toolbar r0;
        android.view.MenuInflater $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = new android.view.MenuInflater;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r1.<android.view.MenuInflater: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    public void inflateMenu(int)
    {
        android.widget.Toolbar r0;
        int i0;
        android.view.MenuInflater $r1;
        android.view.Menu $r2;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.widget.Toolbar: android.view.MenuInflater getMenuInflater()>();

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.view.Menu getMenu()>();

        virtualinvoke $r1.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(i0, $r2);

        return;
    }

    public void setOnMenuItemClickListener(android.widget.Toolbar$OnMenuItemClickListener)
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$OnMenuItemClickListener r1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.widget.Toolbar$OnMenuItemClickListener;

        r0.<android.widget.Toolbar: android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener> = r1;

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1;
        android.widget.RtlSpacingHelper $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<android.widget.RtlSpacingHelper: void setRelative(int,int)>(i0, i1);

        return;
    }

    public int getContentInsetStart()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper $r1;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        $i0 = virtualinvoke $r1.<android.widget.RtlSpacingHelper: int getStart()>();

        return $i0;
    }

    public int getContentInsetEnd()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper $r1;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        $i0 = virtualinvoke $r1.<android.widget.RtlSpacingHelper: int getEnd()>();

        return $i0;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1;
        android.widget.RtlSpacingHelper $r1;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>(i0, i1);

        return;
    }

    public int getContentInsetLeft()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper $r1;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        $i0 = virtualinvoke $r1.<android.widget.RtlSpacingHelper: int getLeft()>();

        return $i0;
    }

    public int getContentInsetRight()
    {
        android.widget.Toolbar r0;
        android.widget.RtlSpacingHelper $r1;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.RtlSpacingHelper mContentInsets>;

        $i0 = virtualinvoke $r1.<android.widget.RtlSpacingHelper: int getRight()>();

        return $i0;
    }

    private void ensureNavButtonView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams r1;
        android.widget.ImageButton $r2, $r3, $r5;
        android.content.Context $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 != null goto label1;

        $r3 = new android.widget.ImageButton;

        $r4 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $i0 = r0.<android.widget.Toolbar: int mNavButtonStyle>;

        specialinvoke $r3.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r4, null, 0, $i0);

        r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView> = $r3;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388611 | $i2;

        r1.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        $r5 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r5.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

     label1:
        return;
    }

    private void ensureCollapseButtonView()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams r1;
        android.widget.ImageButton $r2, $r3, $r6, $r7, $r9;
        android.content.Context $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r5;
        android.widget.Toolbar$3 $r8;

        r0 := @this: android.widget.Toolbar;

        $r2 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r2 != null goto label1;

        $r3 = new android.widget.ImageButton;

        $r4 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        $i0 = r0.<android.widget.Toolbar: int mNavButtonStyle>;

        specialinvoke $r3.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r4, null, 0, $i0);

        r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView> = $r3;

        $r6 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r5 = r0.<android.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $r6.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i1 = r0.<android.widget.Toolbar: int mButtonGravity>;

        $i2 = $i1 & 112;

        $i3 = 8388611 | $i2;

        r1.<android.widget.Toolbar$LayoutParams: int gravity> = $i3;

        r1.<android.widget.Toolbar$LayoutParams: int mViewType> = 2;

        $r7 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r7.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        $r9 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r8 = new android.widget.Toolbar$3;

        specialinvoke $r8.<android.widget.Toolbar$3: void <init>(android.widget.Toolbar)>(r0);

        virtualinvoke $r9.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r8);

     label1:
        return;
    }

    private void addSystemView(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.widget.Toolbar$LayoutParams r3;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 != null goto label1;

        r3 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label2;

        r3 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        goto label3;

     label2:
        r3 = (android.widget.Toolbar$LayoutParams) r2;

     label3:
        r3.<android.widget.Toolbar$LayoutParams: int mViewType> = 1;

        virtualinvoke r0.<android.widget.Toolbar: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r3);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$SavedState r1, $r2;
        android.os.Parcelable $r3;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r4, $r5, $r7;
        boolean $z0;
        com.android.internal.view.menu.MenuItemImpl $r6, $r8;
        int $i0;

        r0 := @this: android.widget.Toolbar;

        $r2 = new android.widget.Toolbar$SavedState;

        $r3 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r2.<android.widget.Toolbar$SavedState: void <init>(android.os.Parcelable)>($r3);

        r1 = $r2;

        $r4 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r4 == null goto label1;

        $r5 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r6 = $r5.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r6 == null goto label1;

        $r7 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r8 = $r7.<android.widget.Toolbar$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuItemImpl mCurrentExpandedItem>;

        $i0 = virtualinvoke $r8.<com.android.internal.view.menu.MenuItemImpl: int getItemId()>();

        r1.<android.widget.Toolbar$SavedState: int expandedMenuItemId> = $i0;

     label1:
        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isOverflowMenuShowing()>();

        r1.<android.widget.Toolbar$SavedState: boolean isOverflowOpen> = $z0;

        return r1;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.Toolbar r0;
        android.os.Parcelable r1, $r5;
        android.widget.Toolbar$SavedState r2;
        com.android.internal.view.menu.MenuBuilder r3, $r9;
        android.view.MenuItem r4;
        android.widget.ActionMenuView $r6, $r8;
        int $i0, $i1;
        boolean $z0;
        android.widget.Toolbar$ExpandedActionViewMenuPresenter $r7;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.Toolbar$SavedState) r1;

        $r5 = virtualinvoke r2.<android.widget.Toolbar$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r5);

        $r6 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if $r6 == null goto label1;

        $r8 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $r9 = virtualinvoke $r8.<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        r3 = $r9;

        $i0 = r2.<android.widget.Toolbar$SavedState: int expandedMenuItemId>;

        if $i0 == 0 goto label3;

        $r7 = r0.<android.widget.Toolbar: android.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r7 == null goto label3;

        if r3 == null goto label3;

        $i1 = r2.<android.widget.Toolbar$SavedState: int expandedMenuItemId>;

        r4 = interfaceinvoke r3.<android.view.Menu: android.view.MenuItem findItem(int)>($i1);

        if r4 == null goto label3;

        interfaceinvoke r4.<android.view.MenuItem: boolean expandActionView()>();

     label3:
        $z0 = r2.<android.widget.Toolbar$SavedState: boolean isOverflowOpen>;

        if $z0 == 0 goto label4;

        specialinvoke r0.<android.widget.Toolbar: void postShowOverflowMenu()>();

     label4:
        return;
    }

    private void postShowOverflowMenu()
    {
        android.widget.Toolbar r0;
        java.lang.Runnable $r1, $r2;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this: android.widget.Toolbar;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = r0.<android.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke r0.<android.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Toolbar r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label1;

        r0.<android.widget.Toolbar: boolean mEatingTouch> = 0;

     label1:
        $z1 = r0.<android.widget.Toolbar: boolean mEatingTouch>;

        if $z1 != 0 goto label2;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.<android.widget.Toolbar: boolean mEatingTouch> = 1;

     label2:
        if i0 == 1 goto label3;

        if i0 != 3 goto label4;

     label3:
        r0.<android.widget.Toolbar: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    protected void onSetLayoutParams(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0;
        android.widget.Toolbar$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

     label1:
        return;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i10 = r0.<android.widget.Toolbar: int mPaddingLeft>;

        $i9 = r0.<android.widget.Toolbar: int mPaddingRight>;

        $i13 = $i10 + $i9;

        $i11 = r2.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i15 = $i13 + $i11;

        $i12 = r2.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i14 = $i15 + $i12;

        $i16 = $i14 + i1;

        $i17 = r2.<android.view.ViewGroup$MarginLayoutParams: int width>;

        i5 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i0, $i16, $i17);

        $i20 = r0.<android.widget.Toolbar: int mPaddingTop>;

        $i18 = r0.<android.widget.Toolbar: int mPaddingBottom>;

        $i22 = $i20 + $i18;

        $i19 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i24 = $i22 + $i19;

        $i21 = r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i23 = $i24 + $i21;

        $i25 = $i23 + i3;

        $i26 = r2.<android.view.ViewGroup$MarginLayoutParams: int height>;

        i6 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i2, $i25, $i26);

        i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i6);

        if i7 == 1073741824 goto label3;

        if i4 < 0 goto label3;

        if i7 == 0 goto label1;

        $i27 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i6);

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i27, i4);

        goto label2;

     label1:
        $i28 = i4;

     label2:
        i8 = $i28;

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i8, 1073741824);

     label3:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i5, i6);

        return;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        int[] r2;
        android.view.ViewGroup$MarginLayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: int[];

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r4;

        $i11 = r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i12 = r2[0];

        i4 = $i11 - $i12;

        $i13 = r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i14 = r2[1];

        i5 = $i13 - $i14;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, i4);

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, i5);

        i8 = i6 + i7;

        $i15 = neg i4;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        r2[0] = $i17;

        $i16 = neg i5;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        r2[1] = $i18;

        $i19 = r0.<android.widget.Toolbar: int mPaddingLeft>;

        $i20 = r0.<android.widget.Toolbar: int mPaddingRight>;

        $i22 = $i19 + $i20;

        $i21 = $i22 + i8;

        $i25 = $i21 + i1;

        $i24 = r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        i9 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i0, $i25, $i24);

        $i28 = r0.<android.widget.Toolbar: int mPaddingTop>;

        $i23 = r0.<android.widget.Toolbar: int mPaddingBottom>;

        $i26 = $i28 + $i23;

        $i29 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i32 = $i26 + $i29;

        $i27 = r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i33 = $i32 + $i27;

        $i31 = $i33 + i3;

        $i30 = r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        i10 = staticinvoke <android.widget.Toolbar: int getChildMeasureSpec(int,int,int)>(i2, $i31, $i30);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i9, i10);

        $i35 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i34 = $i35 + i8;

        return $i34;
    }

    private boolean shouldCollapse()
    {
        android.widget.Toolbar r0;
        int i0, i1, $i2, $i3;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.widget.Toolbar;

        $z0 = r0.<android.widget.Toolbar: boolean mCollapsible>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i1);

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r1);

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        if $i2 <= 0 goto label3;

        $i3 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if $i3 <= 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    protected void onMeasure(int, int)
    {
        android.widget.Toolbar r0;
        int i0, i1, i3, i4, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, i90, i91, i92, i93, i95, i96, i97, i98;
        byte b2, b5, b6;
        int[] r1;
        android.view.View r2, $r7, $r26, $r27, $r28, $r31;
        android.widget.Toolbar$LayoutParams r3;
        android.widget.ImageButton $r4, $r5, $r33, $r34, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.widget.ActionMenuView $r6, $r29, $r30, $r32, $r35, $r36, $r37;
        android.widget.ImageView $r8, $r22, $r23, $r24, $r25;
        android.widget.TextView $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21;
        android.view.ViewGroup$LayoutParams $r20;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        b2 = 0;

        i3 = 0;

        i4 = 0;

        r1 = r0.<android.widget.Toolbar: int[] mTempMargins>;

        $z0 = virtualinvoke r0.<android.widget.Toolbar: boolean isLayoutRtl()>();

        if $z0 == 0 goto label01;

        b5 = 1;

        b6 = 0;

        goto label02;

     label01:
        b5 = 0;

        b6 = 1;

     label02:
        i7 = 0;

        $r4 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z1 == 0 goto label03;

        $r39 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i78 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r39, i0, b2, i1, 0, $i78);

        $r40 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i79 = virtualinvoke $r40.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r41 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i86 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r41);

        i7 = $i79 + $i86;

        $r46 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i85 = virtualinvoke $r46.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r45 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i88 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r45);

        $i87 = $i85 + $i88;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i87);

        $r47 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i84 = virtualinvoke $r47.<android.widget.ImageButton: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i84);

     label03:
        $r5 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z2 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z2 == 0 goto label04;

        $r33 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i70 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r33, i0, b2, i1, 0, $i70);

        $r34 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i71 = virtualinvoke $r34.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r42 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i80 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r42);

        i7 = $i71 + $i80;

        $r43 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i81 = virtualinvoke $r43.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r44 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i82 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r44);

        $i83 = $i81 + $i82;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i83);

        $r38 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i77 = virtualinvoke $r38.<android.widget.ImageButton: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i77);

     label04:
        i8 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetStart()>();

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(i8, i7);

        i89 = b2 + $i17;

        $i16 = i8 - i7;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        r1[b5] = $i18;

        i9 = 0;

        $r6 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z3 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        if $z3 == 0 goto label05;

        $r30 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i66 = r0.<android.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke r0.<android.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r30, i0, i89, i1, 0, $i66);

        $r29 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i72 = virtualinvoke $r29.<android.widget.ActionMenuView: int getMeasuredWidth()>();

        $r35 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i73 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r35);

        i9 = $i72 + $i73;

        $r36 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i74 = virtualinvoke $r36.<android.widget.ActionMenuView: int getMeasuredHeight()>();

        $r37 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i76 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r37);

        $i75 = $i74 + $i76;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i75);

        $r32 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $i69 = virtualinvoke $r32.<android.widget.ActionMenuView: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i69);

     label05:
        i10 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetEnd()>();

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>(i10, i9);

        i90 = i89 + $i20;

        $i21 = i10 - i9;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i21);

        r1[b6] = $i19;

        $r7 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $z5 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r7);

        if $z5 == 0 goto label06;

        $r28 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i64 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r28, i0, i90, i1, 0, r1);

        i90 = i90 + $i64;

        $r27 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i63 = virtualinvoke $r27.<android.view.View: int getMeasuredHeight()>();

        $r26 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i62 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r26);

        $i68 = $i63 + $i62;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i68);

        $r31 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $i67 = virtualinvoke $r31.<android.view.View: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i67);

     label06:
        $r8 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z4 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z4 == 0 goto label07;

        $r22 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i61 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r22, i0, i90, i1, 0, r1);

        i90 = i90 + $i61;

        $r25 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i60 = virtualinvoke $r25.<android.widget.ImageView: int getMeasuredHeight()>();

        $r24 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i58 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r24);

        $i59 = $i60 + $i58;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i59);

        $r23 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i65 = virtualinvoke $r23.<android.widget.ImageView: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i65);

     label07:
        i11 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i12 = 0;

     label08:
        if i12 >= i11 goto label11;

        r2 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i12);

        $r20 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r20;

        $i50 = r3.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i50 != 0 goto label10;

        $z9 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r2);

        if $z9 != 0 goto label09;

        goto label10;

     label09:
        $i56 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>(r2, i0, i90, i1, 0, r1);

        i90 = i90 + $i56;

        $i57 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i54 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>(r2);

        $i55 = $i57 + $i54;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i55);

        $i53 = virtualinvoke r2.<android.view.View: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i53);

     label10:
        i12 = i12 + 1;

        goto label08;

     label11:
        i91 = 0;

        i92 = 0;

        $i25 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        $i24 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        i93 = $i25 + $i24;

        $i23 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        $i22 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i13 = $i23 + $i22;

        $r10 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z7 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r10);

        if $z7 == 0 goto label12;

        $r13 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i44 = i90 + i13;

        specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r13, i0, $i44, i1, i93, r1);

        $r18 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i49 = virtualinvoke $r18.<android.widget.TextView: int getMeasuredWidth()>();

        $r19 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i47 = specialinvoke r0.<android.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r19);

        i91 = $i49 + $i47;

        $r16 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i48 = virtualinvoke $r16.<android.widget.TextView: int getMeasuredHeight()>();

        $r17 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i51 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r17);

        i92 = $i48 + $i51;

        $r21 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i52 = virtualinvoke $r21.<android.widget.TextView: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i52);

     label12:
        $r9 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z6 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r9);

        if $z6 == 0 goto label13;

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i42 = i90 + i13;

        $i41 = i92 + i93;

        $i38 = specialinvoke r0.<android.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r12, i0, $i42, i1, $i41, r1);

        i91 = staticinvoke <java.lang.Math: int max(int,int)>(i91, $i38);

        $r11 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i39 = virtualinvoke $r11.<android.widget.TextView: int getMeasuredHeight()>();

        $r14 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i45 = specialinvoke r0.<android.widget.Toolbar: int getVerticalMargins(android.view.View)>($r14);

        $i46 = $i39 + $i45;

        i92 = i92 + $i46;

        $r15 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i43 = virtualinvoke $r15.<android.widget.TextView: int getMeasuredState()>();

        i4 = staticinvoke <android.widget.Toolbar: int combineMeasuredStates(int,int)>(i4, $i43);

     label13:
        i95 = i90 + i91;

        i96 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i92);

        $i28 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingLeft()>();

        $i27 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingRight()>();

        $i26 = $i28 + $i27;

        i97 = i95 + $i26;

        $i32 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        $i31 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        $i30 = $i32 + $i31;

        i98 = i96 + $i30;

        $i29 = virtualinvoke r0.<android.widget.Toolbar: int getSuggestedMinimumWidth()>();

        $i35 = staticinvoke <java.lang.Math: int max(int,int)>(i97, $i29);

        $i34 = i4 & -16777216;

        i15 = staticinvoke <android.widget.Toolbar: int resolveSizeAndState(int,int,int)>($i35, i0, $i34);

        $i33 = virtualinvoke r0.<android.widget.Toolbar: int getSuggestedMinimumHeight()>();

        $i37 = staticinvoke <java.lang.Math: int max(int,int)>(i98, $i33);

        $i36 = i4 << 16;

        i14 = staticinvoke <android.widget.Toolbar: int resolveSizeAndState(int,int,int)>($i37, i1, $i36);

        $z8 = specialinvoke r0.<android.widget.Toolbar: boolean shouldCollapse()>();

        if $z8 == 0 goto label14;

        $i40 = 0;

        goto label15;

     label14:
        $i40 = i14;

     label15:
        virtualinvoke r0.<android.widget.Toolbar: void setMeasuredDimension(int,int)>(i15, $i40);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.Toolbar r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, i105, i106, i107, i108, i109, i110, i111, i112, i113, i115, i116, i117, i118, i119, i120, i121, i122, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134;
        int[] r1;
        android.widget.TextView r2, r5, $r11, $r12, $r33, $r35, $r37, $r39, $r40, $r41, $r42, $r44, $r45, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r60, $r62, $r63;
        android.widget.Toolbar$LayoutParams r3, r4, r6, r7, r74, r75, r76, r77;
        android.widget.ImageButton $r8, $r9, $r65, $r66, $r68, $r73;
        android.widget.ActionMenuView $r10, $r67, $r70;
        android.view.View $r13, $r24, $r30, $r36, $r69, $r72;
        android.widget.ImageView $r14, $r59, $r71;
        android.view.ViewGroup$LayoutParams $r15, $r16, $r34, $r38, $r43, $r46, $r61, $r64;
        java.util.ArrayList $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r31;
        java.lang.Object $r23, $r29, $r32;

        r0 := @this: android.widget.Toolbar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i19 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        if $i19 != 1 goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        z1 = $z11;

        i4 = virtualinvoke r0.<android.widget.Toolbar: int getWidth()>();

        i5 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        i6 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingLeft()>();

        i7 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingRight()>();

        i8 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        i9 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        i10 = i6;

        i11 = i4 - i7;

        r1 = r0.<android.widget.Toolbar: int[] mTempMargins>;

        r1[1] = 0;

        r1[0] = 0;

        i12 = virtualinvoke r0.<android.widget.Toolbar: int getMinimumHeight()>();

        $r9 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z6 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r9);

        if $z6 == 0 goto label04;

        if z1 == 0 goto label03;

        $r73 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        i11 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r73, i11, r1, i12);

        goto label04;

     label03:
        $r66 = r0.<android.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        i10 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r66, i10, r1, i12);

     label04:
        $r8 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z5 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z5 == 0 goto label06;

        if z1 == 0 goto label05;

        $r65 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        i11 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r65, i11, r1, i12);

        goto label06;

     label05:
        $r68 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        i10 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r68, i10, r1, i12);

     label06:
        $r10 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        $z7 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r10);

        if $z7 == 0 goto label08;

        if z1 == 0 goto label07;

        $r67 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i10 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r67, i10, r1, i12);

        goto label08;

     label07:
        $r70 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        i11 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r70, i11, r1, i12);

     label08:
        $i22 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetLeft()>();

        $i21 = $i22 - i10;

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i21);

        r1[0] = $i20;

        $i25 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetRight()>();

        $i24 = i4 - i7;

        $i23 = $i24 - i11;

        $i28 = $i25 - $i23;

        $i27 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i28);

        r1[1] = $i27;

        $i26 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetLeft()>();

        i105 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i26);

        $i31 = i4 - i7;

        $i30 = virtualinvoke r0.<android.widget.Toolbar: int getContentInsetRight()>();

        $i29 = $i31 - $i30;

        i106 = staticinvoke <java.lang.Math: int min(int,int)>(i11, $i29);

        $r13 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        $z8 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r13);

        if $z8 == 0 goto label10;

        if z1 == 0 goto label09;

        $r69 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        i106 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r69, i106, r1, i12);

        goto label10;

     label09:
        $r72 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        i105 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r72, i105, r1, i12);

     label10:
        $r14 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z9 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r14);

        if $z9 == 0 goto label12;

        if z1 == 0 goto label11;

        $r71 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        i106 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r71, i106, r1, i12);

        goto label12;

     label11:
        $r59 = r0.<android.widget.Toolbar: android.widget.ImageView mLogoView>;

        i105 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r59, i105, r1, i12);

     label12:
        $r11 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        z2 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r11);

        $r12 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        z3 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>($r12);

        i13 = 0;

        if z2 == 0 goto label13;

        $r62 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r61 = virtualinvoke $r62.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r61;

        $i99 = r3.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $r60 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i98 = virtualinvoke $r60.<android.widget.TextView: int getMeasuredHeight()>();

        $i95 = $i99 + $i98;

        $i96 = r3.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i97 = $i95 + $i96;

        i13 = i13 + $i97;

     label13:
        if z3 == 0 goto label14;

        $r57 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r64 = virtualinvoke $r57.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r74 = (android.widget.Toolbar$LayoutParams) $r64;

        $i104 = r74.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $r63 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i103 = virtualinvoke $r63.<android.widget.TextView: int getMeasuredHeight()>();

        $i100 = $i104 + $i103;

        $i101 = r74.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i102 = $i100 + $i101;

        i13 = i13 + $i102;

     label14:
        if z2 != 0 goto label15;

        if z3 == 0 goto label40;

     label15:
        if z2 == 0 goto label16;

        $r56 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        goto label17;

     label16:
        $r56 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

     label17:
        r2 = $r56;

        if z3 == 0 goto label18;

        $r58 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        goto label19;

     label18:
        $r58 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

     label19:
        r5 = $r58;

        $r15 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.Toolbar$LayoutParams) $r15;

        $r16 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.widget.Toolbar$LayoutParams) $r16;

        if z2 == 0 goto label20;

        $r54 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i87 = virtualinvoke $r54.<android.widget.TextView: int getMeasuredWidth()>();

        if $i87 > 0 goto label21;

     label20:
        if z3 == 0 goto label22;

        $r55 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i86 = virtualinvoke $r55.<android.widget.TextView: int getMeasuredWidth()>();

        if $i86 <= 0 goto label22;

     label21:
        $z10 = 1;

        goto label23;

     label22:
        $z10 = 0;

     label23:
        z4 = $z10;

        $i36 = r0.<android.widget.Toolbar: int mGravity>;

        $i37 = $i36 & 112;

        lookupswitch($i37)
        {
            case 16: goto label25;
            case 48: goto label24;
            case 80: goto label28;
            default: goto label25;
        };

     label24:
        $i80 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        $i79 = r4.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i85 = $i80 + $i79;

        $i78 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        i107 = $i85 + $i78;

        goto label29;

     label25:
        $i84 = i5 - i8;

        i15 = $i84 - i9;

        $i83 = i15 - i13;

        i14 = $i83 / 2;

        $i73 = r4.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i82 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        $i72 = $i73 + $i82;

        if i14 >= $i72 goto label26;

        $i93 = r4.<android.widget.Toolbar$LayoutParams: int topMargin>;

        $i92 = r0.<android.widget.Toolbar: int mTitleMarginTop>;

        i14 = $i93 + $i92;

        goto label27;

     label26:
        $i71 = i5 - i9;

        $i70 = $i71 - i13;

        $i77 = $i70 - i14;

        i16 = $i77 - i8;

        $i75 = r4.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i76 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i74 = $i75 + $i76;

        if i16 >= $i74 goto label27;

        $i91 = r6.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i90 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i88 = $i91 + $i90;

        $i89 = $i88 - i16;

        $i94 = i14 - $i89;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i94);

     label27:
        i107 = i8 + i14;

        goto label29;

     label28:
        $i33 = i5 - i9;

        $i32 = r6.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i35 = $i33 - $i32;

        $i34 = r0.<android.widget.Toolbar: int mTitleMarginBottom>;

        $i40 = $i35 - $i34;

        i107 = $i40 - i13;

     label29:
        if z1 == 0 goto label35;

        if z4 == 0 goto label30;

        $i81 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        goto label31;

     label30:
        $i81 = 0;

     label31:
        $i60 = r1[1];

        i108 = $i81 - $i60;

        $i53 = staticinvoke <java.lang.Math: int max(int,int)>(0, i108);

        i106 = i106 - $i53;

        $i52 = neg i108;

        $i54 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i52);

        r1[1] = $i54;

        i109 = i106;

        i110 = i106;

        if z2 == 0 goto label32;

        $r53 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r46 = virtualinvoke $r53.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.Toolbar$LayoutParams) $r46;

        $r47 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i62 = virtualinvoke $r47.<android.widget.TextView: int getMeasuredWidth()>();

        i18 = i109 - $i62;

        $r48 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i63 = virtualinvoke $r48.<android.widget.TextView: int getMeasuredHeight()>();

        i17 = i107 + $i63;

        $r49 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r49.<android.widget.TextView: void layout(int,int,int,int)>(i18, i107, i109, i17);

        $i64 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i109 = i18 - $i64;

        $i65 = r7.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        i107 = i17 + $i65;

     label32:
        if z3 == 0 goto label33;

        $r42 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r43 = virtualinvoke $r42.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r75 = (android.widget.Toolbar$LayoutParams) $r43;

        $i55 = r75.<android.widget.Toolbar$LayoutParams: int topMargin>;

        i111 = i107 + $i55;

        $r50 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i66 = virtualinvoke $r50.<android.widget.TextView: int getMeasuredWidth()>();

        i112 = i110 - $i66;

        $r51 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i67 = virtualinvoke $r51.<android.widget.TextView: int getMeasuredHeight()>();

        i113 = i111 + $i67;

        $r52 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r52.<android.widget.TextView: void layout(int,int,int,int)>(i112, i111, i110, i113);

        $i68 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i110 = i110 - $i68;

        $i69 = r75.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

     label33:
        if z4 == 0 goto label34;

        i106 = staticinvoke <java.lang.Math: int min(int,int)>(i109, i110);

     label34:
        goto label40;

     label35:
        if z4 == 0 goto label36;

        $i61 = r0.<android.widget.Toolbar: int mTitleMarginStart>;

        goto label37;

     label36:
        $i61 = 0;

     label37:
        $i39 = r1[0];

        i115 = $i61 - $i39;

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>(0, i115);

        i105 = i105 + $i42;

        $i41 = neg i115;

        $i38 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i41);

        r1[0] = $i38;

        i116 = i105;

        i117 = i105;

        if z2 == 0 goto label38;

        $r39 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r38 = virtualinvoke $r39.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r76 = (android.widget.Toolbar$LayoutParams) $r38;

        $r37 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i56 = virtualinvoke $r37.<android.widget.TextView: int getMeasuredWidth()>();

        i118 = i116 + $i56;

        $r44 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i57 = virtualinvoke $r44.<android.widget.TextView: int getMeasuredHeight()>();

        i119 = i107 + $i57;

        $r45 = r0.<android.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r45.<android.widget.TextView: void layout(int,int,int,int)>(i116, i107, i118, i119);

        $i59 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i116 = i118 + $i59;

        $i58 = r76.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        i107 = i119 + $i58;

     label38:
        if z3 == 0 goto label39;

        $r35 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r34 = virtualinvoke $r35.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r77 = (android.widget.Toolbar$LayoutParams) $r34;

        $i48 = r77.<android.widget.Toolbar$LayoutParams: int topMargin>;

        i120 = i107 + $i48;

        $r33 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i47 = virtualinvoke $r33.<android.widget.TextView: int getMeasuredWidth()>();

        i121 = i117 + $i47;

        $r41 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i51 = virtualinvoke $r41.<android.widget.TextView: int getMeasuredHeight()>();

        i122 = i120 + $i51;

        $r40 = r0.<android.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r40.<android.widget.TextView: void layout(int,int,int,int)>(i117, i120, i121, i122);

        $i50 = r0.<android.widget.Toolbar: int mTitleMarginEnd>;

        i117 = i121 + $i50;

        $i49 = r77.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

     label39:
        if z4 == 0 goto label40;

        i105 = staticinvoke <java.lang.Math: int max(int,int)>(i116, i117);

     label40:
        $r18 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r18, 3);

        $r17 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i124 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i125 = 0;

     label41:
        if i125 >= i124 goto label42;

        $r28 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r29 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i125);

        $r36 = (android.view.View) $r29;

        i105 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r36, i105, r1, i12);

        i125 = i125 + 1;

        goto label41;

     label42:
        $r21 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r21, 5);

        $r22 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i126 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        i127 = 0;

     label43:
        if i127 >= i126 goto label44;

        $r31 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r32 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(i127);

        $r30 = (android.view.View) $r32;

        i106 = specialinvoke r0.<android.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r30, i106, r1, i12);

        i127 = i127 + 1;

        goto label43;

     label44:
        $r20 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke r0.<android.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r20, 1);

        $r19 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i128 = specialinvoke r0.<android.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])>($r19, r1);

        $i43 = i4 - i6;

        $i44 = $i43 - i7;

        $i45 = $i44 / 2;

        i129 = i6 + $i45;

        i130 = i128 / 2;

        i131 = i129 - i130;

        i132 = i131 + i128;

        if i131 >= i105 goto label45;

        i131 = i105;

        goto label46;

     label45:
        if i132 <= i106 goto label46;

        $i46 = i132 - i106;

        i131 = i131 - $i46;

     label46:
        $r27 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        i133 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        i134 = 0;

     label47:
        if i134 >= i133 goto label48;

        $r26 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r23 = virtualinvoke $r26.<java.util.ArrayList: java.lang.Object get(int)>(i134);

        $r24 = (android.view.View) $r23;

        i131 = specialinvoke r0.<android.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r24, i131, r1, i12);

        i134 = i134 + 1;

        goto label47;

     label48:
        $r25 = r0.<android.widget.Toolbar: java.util.ArrayList mTempViews>;

        virtualinvoke $r25.<java.util.ArrayList: void clear()>();

        return;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        android.widget.Toolbar r0;
        java.util.List r1;
        int[] r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.view.View r3;
        android.widget.Toolbar$LayoutParams r4;
        java.lang.Object $r5;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: int[];

        i0 = r2[0];

        i1 = r2[1];

        i2 = 0;

        i3 = interfaceinvoke r1.<java.util.List: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        r3 = (android.view.View) $r5;

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.Toolbar$LayoutParams) $r6;

        $i9 = r4.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        i5 = $i9 - i0;

        $i10 = r4.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        i6 = $i10 - i1;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, i5);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, i6);

        $i11 = neg i5;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $i12 = neg i6;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $i13 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        $i15 = i7 + $i13;

        $i14 = $i15 + i8;

        i2 = i2 + $i14;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i2;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        int[] r2;
        android.widget.Toolbar$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r4;

        $i6 = r3.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        $i5 = r2[0];

        i2 = $i6 - $i5;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, i2);

        i15 = i0 + $i7;

        $i8 = neg i2;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        r2[0] = $i9;

        i3 = specialinvoke r0.<android.widget.Toolbar: int getChildTop(android.view.View,int)>(r1, i1);

        i4 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i11 = i15 + i4;

        $i10 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = i3 + $i10;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i15, i3, $i11, $i13);

        $i12 = r3.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        $i14 = i4 + $i12;

        i16 = i15 + $i14;

        return i16;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        int[] r2;
        android.widget.Toolbar$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i1 := @parameter3: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r4;

        $i6 = r3.<android.widget.Toolbar$LayoutParams: int rightMargin>;

        $i5 = r2[1];

        i2 = $i6 - $i5;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, i2);

        i15 = i0 - $i7;

        $i8 = neg i2;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        r2[1] = $i9;

        i3 = specialinvoke r0.<android.widget.Toolbar: int getChildTop(android.view.View,int)>(r1, i1);

        i4 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i11 = i15 - i4;

        $i10 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i13 = i3 + $i10;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, i3, i15, $i13);

        $i12 = r3.<android.widget.Toolbar$LayoutParams: int leftMargin>;

        $i14 = i4 + $i12;

        i16 = i15 - $i14;

        return i16;
    }

    private int getChildTop(android.view.View, int)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        android.widget.Toolbar$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.Toolbar$LayoutParams) $r3;

        i1 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i0 <= 0 goto label1;

        $i31 = i1 - i0;

        $i32 = $i31 / 2;

        goto label2;

     label1:
        $i32 = 0;

     label2:
        i2 = $i32;

        $i9 = r2.<android.widget.Toolbar$LayoutParams: int gravity>;

        $i10 = specialinvoke r0.<android.widget.Toolbar: int getChildVerticalGravity(int)>($i9);

        lookupswitch($i10)
        {
            case 16: goto label5;
            case 48: goto label3;
            case 80: goto label4;
            default: goto label5;
        };

     label3:
        $i17 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        $i19 = $i17 - i2;

        return $i19;

     label4:
        $i12 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        $i11 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        $i14 = $i12 - $i11;

        $i16 = $i14 - i1;

        $i13 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i15 = $i16 - $i13;

        $i18 = $i15 - i2;

        return $i18;

     label5:
        i3 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingTop()>();

        i4 = virtualinvoke r0.<android.widget.Toolbar: int getPaddingBottom()>();

        i5 = virtualinvoke r0.<android.widget.Toolbar: int getHeight()>();

        $i21 = i5 - i3;

        i6 = $i21 - i4;

        $i20 = i6 - i1;

        i7 = $i20 / 2;

        $i23 = r2.<android.widget.Toolbar$LayoutParams: int topMargin>;

        if i7 >= $i23 goto label6;

        i7 = r2.<android.widget.Toolbar$LayoutParams: int topMargin>;

        goto label7;

     label6:
        $i22 = i5 - i4;

        $i26 = $i22 - i1;

        $i27 = $i26 - i7;

        i8 = $i27 - i3;

        $i24 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        if i8 >= $i24 goto label7;

        $i29 = r2.<android.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i30 = $i29 - i8;

        $i28 = i7 - $i30;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i28);

     label7:
        $i25 = i3 + i7;

        return $i25;
    }

    private int getChildVerticalGravity(int)
    {
        android.widget.Toolbar r0;
        int i0, i1, $i2, $i3;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 = i0 & 112;

        lookupswitch(i1)
        {
            case 16: goto label1;
            case 48: goto label1;
            case 80: goto label1;
            default: goto label2;
        };

     label1:
        return i1;

     label2:
        $i2 = r0.<android.widget.Toolbar: int mGravity>;

        $i3 = $i2 & 112;

        return $i3;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        android.widget.Toolbar r0;
        java.util.List r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        boolean z0, $z1, $z3, $z4;
        android.view.View r2, r6;
        android.widget.Toolbar$LayoutParams r3, r7;
        android.view.ViewGroup$LayoutParams $r4, $r5;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $i4 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        if $i4 != 1 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        i1 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        $i5 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        i2 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i0, $i5);

        interfaceinvoke r1.<java.util.List: void clear()>();

        if z0 == 0 goto label6;

        i3 = i1 - 1;

     label3:
        if i3 < 0 goto label5;

        r2 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i3);

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.Toolbar$LayoutParams) $r5;

        $i9 = r3.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i9 != 0 goto label4;

        $z3 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r2);

        if $z3 == 0 goto label4;

        $i11 = r3.<android.widget.Toolbar$LayoutParams: int gravity>;

        $i10 = specialinvoke r0.<android.widget.Toolbar: int getChildHorizontalGravity(int)>($i11);

        if $i10 != i2 goto label4;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i3 = i3 + -1;

        goto label3;

     label5:
        goto label9;

     label6:
        i12 = 0;

     label7:
        if i12 >= i1 goto label9;

        r6 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i12);

        $r4 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.widget.Toolbar$LayoutParams) $r4;

        $i6 = r7.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i6 != 0 goto label8;

        $z1 = specialinvoke r0.<android.widget.Toolbar: boolean shouldLayout(android.view.View)>(r6);

        if $z1 == 0 goto label8;

        $i7 = r7.<android.widget.Toolbar$LayoutParams: int gravity>;

        $i8 = specialinvoke r0.<android.widget.Toolbar: int getChildHorizontalGravity(int)>($i7);

        if $i8 != i2 goto label8;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r6);

     label8:
        i12 = i12 + 1;

        goto label7;

     label9:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        android.widget.Toolbar r0;
        int i0, i1, i2, i3;
        byte $b4;

        r0 := @this: android.widget.Toolbar;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.Toolbar: int getLayoutDirection()>();

        i2 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i0, i1);

        i3 = i2 & 7;

        tableswitch(i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        return i3;

     label2:
        if i1 != 1 goto label3;

        $b4 = 5;

        goto label4;

     label3:
        $b4 = 3;

     label4:
        return $b4;
    }

    private boolean shouldLayout(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewParent $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 != r0 goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int getHorizontalMargins(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i0 = virtualinvoke r2.<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>();

        $i1 = virtualinvoke r2.<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    private int getVerticalMargins(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i1 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public android.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.util.AttributeSet r1;
        android.widget.Toolbar$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.Toolbar$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.Toolbar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;
        android.widget.Toolbar$LayoutParams $r2, $r3, $r5, $r7, $r8;
        android.view.ViewGroup$MarginLayoutParams $r4;
        android.app.ActionBar$LayoutParams $r6;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        $r7 = new android.widget.Toolbar$LayoutParams;

        $r8 = (android.widget.Toolbar$LayoutParams) r1;

        specialinvoke $r7.<android.widget.Toolbar$LayoutParams: void <init>(android.widget.Toolbar$LayoutParams)>($r8);

        return $r7;

     label1:
        $z1 = r1 instanceof android.app.ActionBar$LayoutParams;

        if $z1 == 0 goto label2;

        $r5 = new android.widget.Toolbar$LayoutParams;

        $r6 = (android.app.ActionBar$LayoutParams) r1;

        specialinvoke $r5.<android.widget.Toolbar$LayoutParams: void <init>(android.app.ActionBar$LayoutParams)>($r6);

        return $r5;

     label2:
        $z2 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label3;

        $r3 = new android.widget.Toolbar$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label3:
        $r2 = new android.widget.Toolbar$LayoutParams;

        specialinvoke $r2.<android.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    protected android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = new android.widget.Toolbar$LayoutParams;

        specialinvoke $r1.<android.widget.Toolbar$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z0 == 0 goto label1;

        $z1 = r1 instanceof android.widget.Toolbar$LayoutParams;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static boolean isCustomView(android.view.View)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.Toolbar$LayoutParams $r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (android.widget.Toolbar$LayoutParams) $r1;

        $i0 = $r2.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.android.internal.widget.DecorToolbar getWrapper()
    {
        android.widget.Toolbar r0;
        com.android.internal.widget.ToolbarWidgetWrapper $r1, $r2, $r3;

        r0 := @this: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper>;

        if $r1 != null goto label1;

        $r3 = new com.android.internal.widget.ToolbarWidgetWrapper;

        specialinvoke $r3.<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean)>(r0, 1);

        r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper> = $r3;

     label1:
        $r2 = r0.<android.widget.Toolbar: com.android.internal.widget.ToolbarWidgetWrapper mWrapper>;

        return $r2;
    }

    private void setChildVisibilityForExpandedActionView(boolean)
    {
        android.widget.Toolbar r0;
        boolean z0;
        int i0, i1, $i2;
        android.view.View r1;
        android.widget.Toolbar$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.widget.ActionMenuView $r4;
        byte $b3;

        r0 := @this: android.widget.Toolbar;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<android.widget.Toolbar: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = virtualinvoke r0.<android.widget.Toolbar: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.Toolbar$LayoutParams) $r3;

        $i2 = r2.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i2 == 2 goto label4;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == $r4 goto label4;

        if z0 == 0 goto label2;

        $b3 = 8;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>($b3);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private void updateChildVisibilityForExpandedActionView(android.view.View)
    {
        android.widget.Toolbar r0;
        android.view.View r1, $r5;
        android.widget.Toolbar$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0;
        android.widget.ActionMenuView $r4;
        byte $b1;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.Toolbar$LayoutParams) $r3;

        $i0 = r2.<android.widget.Toolbar$LayoutParams: int mViewType>;

        if $i0 == 2 goto label3;

        $r4 = r0.<android.widget.Toolbar: android.widget.ActionMenuView mMenuView>;

        if r1 == $r4 goto label3;

        $r5 = r0.<android.widget.Toolbar: android.view.View mExpandedActionView>;

        if $r5 == null goto label1;

        $b1 = 8;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>($b1);

     label3:
        return;
    }

    public void setCollapsible(boolean)
    {
        android.widget.Toolbar r0;
        boolean z0;

        r0 := @this: android.widget.Toolbar;

        z0 := @parameter0: boolean;

        r0.<android.widget.Toolbar: boolean mCollapsible> = z0;

        virtualinvoke r0.<android.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter$Callback, com.android.internal.view.menu.MenuBuilder$Callback)
    {
        android.widget.Toolbar r0;
        com.android.internal.view.menu.MenuPresenter$Callback r1;
        com.android.internal.view.menu.MenuBuilder$Callback r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: com.android.internal.view.menu.MenuPresenter$Callback;

        r2 := @parameter1: com.android.internal.view.menu.MenuBuilder$Callback;

        r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback> = r1;

        r0.<android.widget.Toolbar: com.android.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback> = r2;

        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$LayoutParams $r1;

        r0 := @this: android.widget.Toolbar;

        $r1 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.Toolbar$LayoutParams $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.Toolbar r0;
        android.util.AttributeSet r1;
        android.widget.Toolbar$LayoutParams $r2;

        r0 := @this: android.widget.Toolbar;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.Toolbar: android.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    static android.widget.Toolbar$OnMenuItemClickListener access$000(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        android.widget.Toolbar$OnMenuItemClickListener $r1;

        r0 := @parameter0: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener>;

        return $r1;
    }

    static void access$200(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;

        r0 := @parameter0: android.widget.Toolbar;

        specialinvoke r0.<android.widget.Toolbar: void ensureCollapseButtonView()>();

        return;
    }

    static android.widget.ImageButton access$300(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        android.widget.ImageButton $r1;

        r0 := @parameter0: android.widget.Toolbar;

        $r1 = r0.<android.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        return $r1;
    }

    static int access$400(android.widget.Toolbar)
    {
        android.widget.Toolbar r0;
        int $i0;

        r0 := @parameter0: android.widget.Toolbar;

        $i0 = r0.<android.widget.Toolbar: int mButtonGravity>;

        return $i0;
    }

    static void access$500(android.widget.Toolbar, boolean)
    {
        android.widget.Toolbar r0;
        boolean z0;

        r0 := @parameter0: android.widget.Toolbar;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.Toolbar: void setChildVisibilityForExpandedActionView(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Toolbar: java.lang.String TAG> = "Toolbar";

        return;
    }
}
