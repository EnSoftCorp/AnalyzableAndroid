public class android.widget.Switch extends android.widget.CompoundButton
{
    private static final int THUMB_ANIMATION_DURATION;
    private static final int TOUCH_MODE_IDLE;
    private static final int TOUCH_MODE_DOWN;
    private static final int TOUCH_MODE_DRAGGING;
    private static final int SANS;
    private static final int SERIF;
    private static final int MONOSPACE;
    private android.graphics.drawable.Drawable mThumbDrawable;
    private android.graphics.drawable.Drawable mTrackDrawable;
    private int mThumbTextPadding;
    private int mSwitchMinWidth;
    private int mSwitchPadding;
    private boolean mSplitTrack;
    private java.lang.CharSequence mTextOn;
    private java.lang.CharSequence mTextOff;
    private boolean mShowText;
    private int mTouchMode;
    private int mTouchSlop;
    private float mTouchX;
    private float mTouchY;
    private android.view.VelocityTracker mVelocityTracker;
    private int mMinFlingVelocity;
    private float mThumbPosition;
    private int mSwitchWidth;
    private int mSwitchHeight;
    private int mThumbWidth;
    private int mSwitchLeft;
    private int mSwitchTop;
    private int mSwitchRight;
    private int mSwitchBottom;
    private android.text.TextPaint mTextPaint;
    private android.content.res.ColorStateList mTextColors;
    private android.text.Layout mOnLayout;
    private android.text.Layout mOffLayout;
    private android.text.method.TransformationMethod2 mSwitchTransformationMethod;
    private android.animation.ObjectAnimator mPositionAnimator;
    private final android.graphics.Rect mTempRect;
    private static final int[] CHECKED_STATE_SET;
    private static final android.util.FloatProperty THUMB_POS;

    public void <init>(android.content.Context)
    {
        android.widget.Switch r0;
        android.content.Context r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843839);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.content.res.Resources r3;
        android.content.res.TypedArray r4;
        android.view.ViewConfiguration r5;
        android.view.VelocityTracker $r6;
        android.graphics.Rect $r7;
        android.text.TextPaint $r8, $r9, $r12;
        android.util.DisplayMetrics $r10;
        float $f0, $f1;
        android.content.res.CompatibilityInfo $r11;
        int[] $r13;
        android.graphics.drawable.Drawable $r14, $r15, $r16, $r18, $r20, $r21;
        java.lang.CharSequence $r17, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r6 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.Switch: android.graphics.Rect mTempRect> = $r7;

        $r8 = new android.text.TextPaint;

        specialinvoke $r8.<android.text.TextPaint: void <init>(int)>(1);

        r0.<android.widget.Switch: android.text.TextPaint mTextPaint> = $r8;

        r3 = virtualinvoke r0.<android.widget.Switch: android.content.res.Resources getResources()>();

        $r9 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r10 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r10.<android.util.DisplayMetrics: float density>;

        $r9.<android.text.TextPaint: float density> = $f0;

        $r12 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r11 = virtualinvoke r3.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $f1 = $r11.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r12.<android.text.TextPaint: void setCompatibilityScaling(float)>($f1);

        $r13 = <com.android.internal.R$styleable: int[] Switch>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r13, i0, i1);

        $r14 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable> = $r14;

        $r16 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r16 == null goto label1;

        $r20 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label1:
        $r15 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable> = $r15;

        $r18 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r18 == null goto label2;

        $r21 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r21.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        $r17 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        r0.<android.widget.Switch: java.lang.CharSequence mTextOn> = $r17;

        $r19 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(1);

        r0.<android.widget.Switch: java.lang.CharSequence mTextOff> = $r19;

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 1);

        r0.<android.widget.Switch: boolean mShowText> = $z0;

        $i4 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, 0);

        r0.<android.widget.Switch: int mThumbTextPadding> = $i4;

        $i3 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(5, 0);

        r0.<android.widget.Switch: int mSwitchMinWidth> = $i3;

        $i5 = virtualinvoke r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, 0);

        r0.<android.widget.Switch: int mSwitchPadding> = $i5;

        $z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        r0.<android.widget.Switch: boolean mSplitTrack> = $z1;

        i2 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        if i2 == 0 goto label3;

        virtualinvoke r0.<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>(r1, i2);

     label3:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        r5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i6 = virtualinvoke r5.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.Switch: int mTouchSlop> = $i6;

        $i7 = virtualinvoke r5.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.Switch: int mMinFlingVelocity> = $i7;

        virtualinvoke r0.<android.widget.Switch: void refreshDrawableState()>();

        $z2 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>($z2);

        return;
    }

    public void setSwitchTextAppearance(android.content.Context, int)
    {
        android.widget.Switch r0;
        android.content.Context r1, $r8;
        int i0, i1, i2, i3;
        android.content.res.TypedArray r2;
        android.content.res.ColorStateList r3, $r5;
        boolean z0;
        int[] $r4;
        android.text.method.AllCapsTransformationMethod $r6;
        android.text.method.TransformationMethod2 $r7;
        float $f0, $f1, $f2;
        android.text.TextPaint $r9, $r10;
        byte $b4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r4 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r4);

        r3 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if r3 == null goto label1;

        r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors> = r3;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<android.widget.Switch: android.content.res.ColorStateList getTextColors()>();

        r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors> = $r5;

     label2:
        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        if i1 == 0 goto label3;

        $f0 = (float) i1;

        $r9 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r9.<android.text.TextPaint: float getTextSize()>();

        $b4 = $f0 cmpl $f1;

        if $b4 == 0 goto label3;

        $r10 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $f2 = (float) i1;

        virtualinvoke $r10.<android.text.TextPaint: void setTextSize(float)>($f2);

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

     label3:
        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        i3 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        specialinvoke r0.<android.widget.Switch: void setSwitchTypefaceByIndex(int,int)>(i2, i3);

        z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if z0 == 0 goto label4;

        $r6 = new android.text.method.AllCapsTransformationMethod;

        $r8 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        specialinvoke $r6.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r8);

        r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod> = $r6;

        $r7 = r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod>;

        interfaceinvoke $r7.<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>(1);

        goto label5;

     label4:
        r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod> = null;

     label5:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void setSwitchTypefaceByIndex(int, int)
    {
        android.widget.Switch r0;
        int i0, i1;
        android.graphics.Typeface r1;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = null;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        r1 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        goto label4;

     label2:
        r1 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label4;

     label3:
        r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

     label4:
        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>(r1, i1);

        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface, int)
    {
        android.widget.Switch r0;
        android.graphics.Typeface r1, r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.TextPaint $r2, $r3, $r4, $r5;
        float $f0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        if i0 <= 0 goto label09;

        if r1 != null goto label01;

        r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i0);

        goto label02;

     label01:
        r6 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r1, i0);

     label02:
        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>(r6);

        if r6 == null goto label03;

        $i6 = virtualinvoke r6.<android.graphics.Typeface: int getStyle()>();

        goto label04;

     label03:
        $i6 = 0;

     label04:
        i1 = $i6;

        $i3 = i1 ^ -1;

        i2 = i0 & $i3;

        $r4 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $i4 = i2 & 1;

        if $i4 == 0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        virtualinvoke $r4.<android.text.TextPaint: void setFakeBoldText(boolean)>($z0);

        $r5 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $i5 = i2 & 2;

        if $i5 == 0 goto label07;

        $f0 = -0.25F;

        goto label08;

     label07:
        $f0 = 0.0F;

     label08:
        virtualinvoke $r5.<android.text.TextPaint: void setTextSkewX(float)>($f0);

        goto label10;

     label09:
        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r3 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r3.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>(r1);

     label10:
        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface)
    {
        android.widget.Switch r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == r1 goto label1;

        $r4 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

     label1:
        return;
    }

    public void setSwitchPadding(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mSwitchPadding> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public int getSwitchPadding()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mSwitchPadding>;

        return $i0;
    }

    public void setSwitchMinWidth(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mSwitchMinWidth> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public int getSwitchMinWidth()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mSwitchMinWidth>;

        return $i0;
    }

    public void setThumbTextPadding(int)
    {
        android.widget.Switch r0;
        int i0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        r0.<android.widget.Switch: int mThumbTextPadding> = i0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public int getThumbTextPadding()
    {
        android.widget.Switch r0;
        int $i0;

        r0 := @this: android.widget.Switch;

        $i0 = r0.<android.widget.Switch: int mThumbTextPadding>;

        return $i0;
    }

    public void setTrackDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setTrackResource(int)
    {
        android.widget.Switch r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public android.graphics.drawable.Drawable getTrackDrawable()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        return $r1;
    }

    public void setThumbDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable> = r1;

        if r1 == null goto label2;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label2:
        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setThumbResource(int)
    {
        android.widget.Switch r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.Switch: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public android.graphics.drawable.Drawable getThumbDrawable()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        return $r1;
    }

    public void setSplitTrack(boolean)
    {
        android.widget.Switch r0;
        boolean z0;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        r0.<android.widget.Switch: boolean mSplitTrack> = z0;

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

        return;
    }

    public boolean getSplitTrack()
    {
        android.widget.Switch r0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        $z0 = r0.<android.widget.Switch: boolean mSplitTrack>;

        return $z0;
    }

    public java.lang.CharSequence getTextOn()
    {
        android.widget.Switch r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        return $r1;
    }

    public void setTextOn(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.Switch: java.lang.CharSequence mTextOn> = r1;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public java.lang.CharSequence getTextOff()
    {
        android.widget.Switch r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

        return $r1;
    }

    public void setTextOff(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        java.lang.CharSequence r1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<android.widget.Switch: java.lang.CharSequence mTextOff> = r1;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

        return;
    }

    public void setShowText(boolean)
    {
        android.widget.Switch r0;
        boolean z0, $z1;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.Switch: boolean mShowText>;

        if $z1 == z0 goto label1;

        r0.<android.widget.Switch: boolean mShowText> = z0;

        virtualinvoke r0.<android.widget.Switch: void requestLayout()>();

     label1:
        return;
    }

    public boolean getShowText()
    {
        android.widget.Switch r0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        $z0 = r0.<android.widget.Switch: boolean mShowText>;

        return $z0;
    }

    public void onMeasure(int, int)
    {
        android.widget.Switch r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28;
        android.graphics.Rect r1;
        android.graphics.Insets r2;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r15;
        android.text.Layout $r8, $r10, $r13, $r14, $r16, $r18;
        java.lang.CharSequence $r17, $r19;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.widget.Switch: boolean mShowText>;

        if $z0 == 0 goto label02;

        $r14 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        if $r14 != null goto label01;

        $r17 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        $r16 = specialinvoke r0.<android.widget.Switch: android.text.Layout makeLayout(java.lang.CharSequence)>($r17);

        r0.<android.widget.Switch: android.text.Layout mOnLayout> = $r16;

     label01:
        $r13 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

        if $r13 != null goto label02;

        $r19 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

        $r18 = specialinvoke r0.<android.widget.Switch: android.text.Layout makeLayout(java.lang.CharSequence)>($r19);

        r0.<android.widget.Switch: android.text.Layout mOffLayout> = $r18;

     label02:
        r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r3 == null goto label03;

        $r12 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        $r11 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $i27 = virtualinvoke $r11.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i26 = r1.<android.graphics.Rect: int left>;

        $i24 = $i27 - $i26;

        $i25 = r1.<android.graphics.Rect: int right>;

        i2 = $i24 - $i25;

        $r15 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        i3 = virtualinvoke $r15.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label04;

     label03:
        i2 = 0;

        i3 = 0;

     label04:
        $z1 = r0.<android.widget.Switch: boolean mShowText>;

        if $z1 == 0 goto label05;

        $r8 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        $i19 = virtualinvoke $r8.<android.text.Layout: int getWidth()>();

        $r10 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

        $i22 = virtualinvoke $r10.<android.text.Layout: int getWidth()>();

        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i19, $i22);

        $i21 = r0.<android.widget.Switch: int mThumbTextPadding>;

        $i23 = $i21 * 2;

        i4 = $i20 + $i23;

        goto label06;

     label05:
        i4 = 0;

     label06:
        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i2);

        r0.<android.widget.Switch: int mThumbWidth> = $i10;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r4 == null goto label07;

        $r7 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        $r9 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        i5 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        goto label08;

     label07:
        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

        i5 = 0;

     label08:
        i6 = r1.<android.graphics.Rect: int left>;

        i7 = r1.<android.graphics.Rect: int right>;

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r5 == null goto label09;

        $r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r2 = virtualinvoke $r6.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        $i17 = r2.<android.graphics.Insets: int left>;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i17);

        $i18 = r2.<android.graphics.Insets: int right>;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i7, $i18);

     label09:
        $i14 = r0.<android.widget.Switch: int mSwitchMinWidth>;

        $i11 = r0.<android.widget.Switch: int mThumbWidth>;

        $i13 = 2 * $i11;

        $i12 = $i13 + i6;

        $i15 = $i12 + i7;

        i28 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i15);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i5, i3);

        r0.<android.widget.Switch: int mSwitchWidth> = i28;

        r0.<android.widget.Switch: int mSwitchHeight> = i8;

        specialinvoke r0.<android.widget.CompoundButton: void onMeasure(int,int)>(i0, i1);

        i9 = virtualinvoke r0.<android.widget.Switch: int getMeasuredHeight()>();

        if i9 >= i8 goto label10;

        $i16 = virtualinvoke r0.<android.widget.Switch: int getMeasuredWidthAndState()>();

        virtualinvoke r0.<android.widget.Switch: void setMeasuredDimension(int,int)>($i16, i8);

     label10:
        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.Switch r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2, $r4;
        boolean $z0;
        java.util.List $r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        $r4 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

     label2:
        r2 = $r4;

        if r2 == null goto label3;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label3:
        return;
    }

    private android.text.Layout makeLayout(java.lang.CharSequence)
    {
        android.widget.Switch r0;
        java.lang.CharSequence r1, r2, $r9;
        android.text.method.TransformationMethod2 $r3, $r8;
        android.text.StaticLayout $r4;
        android.text.TextPaint $r5, $r6;
        float $f0;
        double $d0, $d1;
        android.text.Layout$Alignment $r7;
        int $i0;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod>;

        if $r3 == null goto label1;

        $r8 = r0.<android.widget.Switch: android.text.method.TransformationMethod2 mSwitchTransformationMethod>;

        $r9 = interfaceinvoke $r8.<android.text.method.TransformationMethod2: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r1, r0);

        goto label2;

     label1:
        $r9 = r1;

     label2:
        r2 = $r9;

        $r4 = new android.text.StaticLayout;

        $r6 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r5 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>(r2, $r5);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        specialinvoke $r4.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r2, $r6, $i0, $r7, 1.0F, 0.0F, 1);

        return $r4;
    }

    private boolean hitThumb(float, float)
    {
        android.widget.Switch r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Rect $r1, $r3, $r4;
        android.graphics.drawable.Drawable $r2;
        byte $b19, $b20, $b21, $b22;
        boolean $z1;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = specialinvoke r0.<android.widget.Switch: int getThumbOffset()>();

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        $i6 = r0.<android.widget.Switch: int mSwitchTop>;

        $i5 = r0.<android.widget.Switch: int mTouchSlop>;

        i1 = $i6 - $i5;

        $i7 = r0.<android.widget.Switch: int mSwitchLeft>;

        $i10 = $i7 + i0;

        $i8 = r0.<android.widget.Switch: int mTouchSlop>;

        i2 = $i10 - $i8;

        $i9 = r0.<android.widget.Switch: int mThumbWidth>;

        $i12 = i2 + $i9;

        $r3 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        $i11 = $r3.<android.graphics.Rect: int left>;

        $i13 = $i12 + $i11;

        $r4 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        $i14 = $r4.<android.graphics.Rect: int right>;

        $i15 = $i13 + $i14;

        $i16 = r0.<android.widget.Switch: int mTouchSlop>;

        i3 = $i15 + $i16;

        $i17 = r0.<android.widget.Switch: int mSwitchBottom>;

        $i18 = r0.<android.widget.Switch: int mTouchSlop>;

        i4 = $i17 + $i18;

        $f2 = (float) i2;

        $b19 = f0 cmpl $f2;

        if $b19 <= 0 goto label1;

        $f3 = (float) i3;

        $b20 = f0 cmpg $f3;

        if $b20 >= 0 goto label1;

        $f5 = (float) i1;

        $b22 = f1 cmpl $f5;

        if $b22 <= 0 goto label1;

        $f4 = (float) i4;

        $b21 = f1 cmpg $f4;

        if $b21 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i5, $i7, $i8, i9;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, f21;
        android.view.VelocityTracker $r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        byte $b2, $b3, $b4, $b6;
        android.view.ViewParent $r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label14;
            case 2: goto label02;
            case 3: goto label14;
            default: goto label16;
        };

     label01:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isEnabled()>();

        if $z0 == 0 goto label16;

        $z2 = specialinvoke r0.<android.widget.Switch: boolean hitThumb(float,float)>(f0, f1);

        if $z2 == 0 goto label16;

        r0.<android.widget.Switch: int mTouchMode> = 1;

        r0.<android.widget.Switch: float mTouchX> = f0;

        r0.<android.widget.Switch: float mTouchY> = f1;

        goto label16;

     label02:
        $i1 = r0.<android.widget.Switch: int mTouchMode>;

        tableswitch($i1)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            default: goto label13;
        };

     label03:
        goto label13;

     label04:
        f19 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f20 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f12 = r0.<android.widget.Switch: float mTouchX>;

        $f11 = f19 - $f12;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>($f11);

        $i5 = r0.<android.widget.Switch: int mTouchSlop>;

        $f13 = (float) $i5;

        $b4 = $f14 cmpl $f13;

        if $b4 > 0 goto label05;

        $f17 = r0.<android.widget.Switch: float mTouchY>;

        $f15 = f20 - $f17;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        $i8 = r0.<android.widget.Switch: int mTouchSlop>;

        $f18 = (float) $i8;

        $b6 = $f16 cmpl $f18;

        if $b6 <= 0 goto label13;

     label05:
        r0.<android.widget.Switch: int mTouchMode> = 2;

        $r3 = virtualinvoke r0.<android.widget.Switch: android.view.ViewParent getParent()>();

        interfaceinvoke $r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        r0.<android.widget.Switch: float mTouchX> = f19;

        r0.<android.widget.Switch: float mTouchY> = f20;

        return 1;

     label06:
        f21 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i9 = specialinvoke r0.<android.widget.Switch: int getThumbScrollRange()>();

        $f5 = r0.<android.widget.Switch: float mTouchX>;

        f2 = f21 - $f5;

        if i9 == 0 goto label07;

        $f9 = (float) i9;

        f3 = f2 / $f9;

        goto label10;

     label07:
        $b2 = f2 cmpl 0.0F;

        if $b2 <= 0 goto label08;

        $f10 = 1.0F;

        goto label09;

     label08:
        $f10 = -1.0F;

     label09:
        f3 = $f10;

     label10:
        $z3 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z3 == 0 goto label11;

        f3 = neg f3;

     label11:
        $f6 = r0.<android.widget.Switch: float mThumbPosition>;

        $f7 = $f6 + f3;

        f4 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>($f7, 0.0F, 1.0F);

        $f8 = r0.<android.widget.Switch: float mThumbPosition>;

        $b3 = f4 cmpl $f8;

        if $b3 == 0 goto label12;

        r0.<android.widget.Switch: float mTouchX> = f21;

        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>(f4);

     label12:
        return 1;

     label13:
        goto label16;

     label14:
        $i7 = r0.<android.widget.Switch: int mTouchMode>;

        if $i7 != 2 goto label15;

        specialinvoke r0.<android.widget.Switch: void stopDrag(android.view.MotionEvent)>(r1);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return 1;

     label15:
        r0.<android.widget.Switch: int mTouchMode> = 0;

        $r4 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void clear()>();

     label16:
        $z1 = specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    private void cancelSuperTouch(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1, r2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        virtualinvoke r2.<android.view.MotionEvent: void setAction(int)>(3);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    private void stopDrag(android.view.MotionEvent)
    {
        android.widget.Switch r0;
        android.view.MotionEvent r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        float f0, $f1, $f2;
        int $i0, $i1;
        android.view.VelocityTracker $r2, $r3;
        byte $b2, $b3, $b4;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<android.widget.Switch: int mTouchMode> = 0;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 1 goto label01;

        $z4 = virtualinvoke r0.<android.widget.Switch: boolean isEnabled()>();

        if $z4 == 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        if z0 == 0 goto label09;

        $r2 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r3 = r0.<android.widget.Switch: android.view.VelocityTracker mVelocityTracker>;

        f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getXVelocity()>();

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i1 = r0.<android.widget.Switch: int mMinFlingVelocity>;

        $f2 = (float) $i1;

        $b2 = $f1 cmpl $f2;

        if $b2 <= 0 goto label07;

        $z2 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z2 == 0 goto label04;

        $b4 = f0 cmpg 0.0F;

        if $b4 >= 0 goto label03;

        $z3 = 1;

        goto label06;

     label03:
        $z3 = 0;

        goto label06;

     label04:
        $b3 = f0 cmpl 0.0F;

        if $b3 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z1 = $z3;

        goto label08;

     label07:
        z1 = specialinvoke r0.<android.widget.Switch: boolean getTargetCheckedState()>();

     label08:
        goto label10;

     label09:
        z1 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

     label10:
        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>(z1);

        specialinvoke r0.<android.widget.Switch: void cancelSuperTouch(android.view.MotionEvent)>(r1);

        return;
    }

    private void animateThumbToCheckedState(boolean)
    {
        android.widget.Switch r0;
        boolean z0;
        float f0, $f1;
        float[] $r1;
        android.util.FloatProperty $r2;
        android.animation.ObjectAnimator $r3, $r4, $r6, $r7;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $f1 = 1.0F;

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        f0 = $f1;

        $r2 = <android.widget.Switch: android.util.FloatProperty THUMB_POS>;

        $r1 = newarray (float)[1];

        $r1[0] = f0;

        $r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r2, $r1);

        r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator> = $r3;

        $r4 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r4.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(250L);

        $r6 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r6.<android.animation.ObjectAnimator: void setAutoCancel(boolean)>(1);

        $r7 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r7.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    private void cancelPositionAnimator()
    {
        android.widget.Switch r0;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: android.widget.Switch;

        $r1 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r2.<android.animation.ObjectAnimator: void cancel()>();

     label1:
        return;
    }

    private boolean getTargetCheckedState()
    {
        android.widget.Switch r0;
        float $f0;
        byte $b0;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        $f0 = r0.<android.widget.Switch: float mThumbPosition>;

        $b0 = $f0 cmpl 0.5F;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setThumbPosition(float)
    {
        android.widget.Switch r0;
        float f0;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        r0.<android.widget.Switch: float mThumbPosition> = f0;

        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

        return;
    }

    public void toggle()
    {
        android.widget.Switch r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<android.widget.Switch: void setChecked(boolean)>($z1);

        return;
    }

    public void setChecked(boolean)
    {
        android.widget.Switch r0;
        boolean z0, $z1, $z2, z3;
        float $f0;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>(z0);

        z3 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        $z1 = virtualinvoke r0.<android.widget.Switch: boolean isAttachedToWindow()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.Switch: boolean isLaidOut()>();

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.widget.Switch: void animateThumbToCheckedState(boolean)>(z3);

        goto label4;

     label1:
        specialinvoke r0.<android.widget.Switch: void cancelPositionAnimator()>();

        if z3 == 0 goto label2;

        $f0 = 1.0F;

        goto label3;

     label2:
        $f0 = 0.0F;

     label3:
        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>($f0);

     label4:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.Switch r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40;
        android.graphics.Rect r1;
        android.graphics.Insets r2;
        android.graphics.drawable.Drawable $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.Switch;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.CompoundButton: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        i4 = 0;

        i5 = 0;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r3 == null goto label3;

        r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r4 == null goto label1;

        $r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        goto label2;

     label1:
        virtualinvoke r1.<android.graphics.Rect: void setEmpty()>();

     label2:
        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r2 = virtualinvoke $r5.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        $i35 = r2.<android.graphics.Insets: int left>;

        $i33 = r1.<android.graphics.Rect: int left>;

        $i36 = $i35 - $i33;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i36);

        $i38 = r2.<android.graphics.Insets: int right>;

        $i34 = r1.<android.graphics.Rect: int right>;

        $i37 = $i38 - $i34;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i37);

     label3:
        $z1 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z1 == 0 goto label4;

        $i31 = virtualinvoke r0.<android.widget.Switch: int getPaddingLeft()>();

        i39 = $i31 + i4;

        $i32 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i29 = i39 + $i32;

        $i30 = $i29 - i4;

        i40 = $i30 - i5;

        goto label5;

     label4:
        $i8 = virtualinvoke r0.<android.widget.Switch: int getWidth()>();

        $i9 = virtualinvoke r0.<android.widget.Switch: int getPaddingRight()>();

        $i11 = $i8 - $i9;

        i40 = $i11 - i5;

        $i10 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i13 = i40 - $i10;

        $i12 = $i13 + i4;

        i39 = $i12 + i5;

     label5:
        $i15 = virtualinvoke r0.<android.widget.Switch: int getGravity()>();

        $i14 = $i15 & 112;

        lookupswitch($i14)
        {
            case 16: goto label7;
            case 48: goto label6;
            case 80: goto label8;
            default: goto label6;
        };

     label6:
        i6 = virtualinvoke r0.<android.widget.Switch: int getPaddingTop()>();

        $i26 = r0.<android.widget.Switch: int mSwitchHeight>;

        i7 = i6 + $i26;

        goto label9;

     label7:
        $i18 = virtualinvoke r0.<android.widget.Switch: int getPaddingTop()>();

        $i21 = virtualinvoke r0.<android.widget.Switch: int getHeight()>();

        $i20 = $i18 + $i21;

        $i23 = virtualinvoke r0.<android.widget.Switch: int getPaddingBottom()>();

        $i22 = $i20 - $i23;

        $i27 = $i22 / 2;

        $i25 = r0.<android.widget.Switch: int mSwitchHeight>;

        $i24 = $i25 / 2;

        i6 = $i27 - $i24;

        $i28 = r0.<android.widget.Switch: int mSwitchHeight>;

        i7 = i6 + $i28;

        goto label9;

     label8:
        $i17 = virtualinvoke r0.<android.widget.Switch: int getHeight()>();

        $i16 = virtualinvoke r0.<android.widget.Switch: int getPaddingBottom()>();

        i7 = $i17 - $i16;

        $i19 = r0.<android.widget.Switch: int mSwitchHeight>;

        i6 = i7 - $i19;

     label9:
        r0.<android.widget.Switch: int mSwitchLeft> = i39;

        r0.<android.widget.Switch: int mSwitchTop> = i6;

        r0.<android.widget.Switch: int mSwitchBottom> = i7;

        r0.<android.widget.Switch: int mSwitchRight> = i40;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.Switch r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36;
        android.graphics.Insets r3, $r11;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, r13;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        i0 = r0.<android.widget.Switch: int mSwitchLeft>;

        i1 = r0.<android.widget.Switch: int mSwitchTop>;

        i2 = r0.<android.widget.Switch: int mSwitchRight>;

        i3 = r0.<android.widget.Switch: int mSwitchBottom>;

        $i9 = specialinvoke r0.<android.widget.Switch: int getThumbOffset()>();

        i4 = i0 + $i9;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r4 == null goto label1;

        $r12 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r3 = virtualinvoke $r12.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        r3 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r5 == null goto label7;

        $r9 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i14 = r2.<android.graphics.Rect: int left>;

        i4 = i4 + $i14;

        i5 = i0;

        i6 = i1;

        i7 = i2;

        i8 = i3;

        $r11 = <android.graphics.Insets: android.graphics.Insets NONE>;

        if r3 == $r11 goto label6;

        $i15 = r3.<android.graphics.Insets: int left>;

        $i16 = r2.<android.graphics.Rect: int left>;

        if $i15 <= $i16 goto label3;

        $i34 = r3.<android.graphics.Insets: int left>;

        $i30 = r2.<android.graphics.Rect: int left>;

        $i33 = $i34 - $i30;

        i5 = i5 + $i33;

     label3:
        $i20 = r3.<android.graphics.Insets: int top>;

        $i19 = r2.<android.graphics.Rect: int top>;

        if $i20 <= $i19 goto label4;

        $i32 = r3.<android.graphics.Insets: int top>;

        $i31 = r2.<android.graphics.Rect: int top>;

        $i29 = $i32 - $i31;

        i6 = i6 + $i29;

     label4:
        $i18 = r3.<android.graphics.Insets: int right>;

        $i17 = r2.<android.graphics.Rect: int right>;

        if $i18 <= $i17 goto label5;

        $i25 = r3.<android.graphics.Insets: int right>;

        $i28 = r2.<android.graphics.Rect: int right>;

        $i26 = $i25 - $i28;

        i7 = i7 - $i26;

     label5:
        $i24 = r3.<android.graphics.Insets: int bottom>;

        $i23 = r2.<android.graphics.Rect: int bottom>;

        if $i24 <= $i23 goto label6;

        $i22 = r3.<android.graphics.Insets: int bottom>;

        $i21 = r2.<android.graphics.Rect: int bottom>;

        $i27 = $i22 - $i21;

        i8 = i8 - $i27;

     label6:
        $r10 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i5, i6, i7, i8);

     label7:
        $r7 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r7 == null goto label8;

        $r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i10 = r2.<android.graphics.Rect: int left>;

        i35 = i4 - $i10;

        $i12 = r0.<android.widget.Switch: int mThumbWidth>;

        $i13 = i4 + $i12;

        $i11 = r2.<android.graphics.Rect: int right>;

        i36 = $i13 + $i11;

        $r8 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i35, i1, i36, i3);

        r13 = virtualinvoke r0.<android.widget.Switch: android.graphics.drawable.Drawable getBackground()>();

        if r13 == null goto label8;

        virtualinvoke r13.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i35, i1, i36, i3);

     label8:
        specialinvoke r0.<android.widget.CompoundButton: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.Switch r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2, r7;
        android.graphics.drawable.Drawable r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        android.graphics.Insets r5;
        int[] r6;
        boolean $z0, $z1;
        android.text.TextPaint $r8, $r12;
        android.content.res.ColorStateList $r9, $r10;
        float $f0, $f1;
        android.text.Layout $r11, r14;
        android.graphics.Region$Op $r13;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>(r1);

        r2 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r3 == null goto label01;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        goto label02;

     label01:
        virtualinvoke r2.<android.graphics.Rect: void setEmpty()>();

     label02:
        i0 = r0.<android.widget.Switch: int mSwitchTop>;

        i1 = r0.<android.widget.Switch: int mSwitchBottom>;

        $i7 = r2.<android.graphics.Rect: int top>;

        i2 = i0 + $i7;

        $i8 = r2.<android.graphics.Rect: int bottom>;

        i3 = i1 - $i8;

        r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r3 == null goto label04;

        $z1 = r0.<android.widget.Switch: boolean mSplitTrack>;

        if $z1 == 0 goto label03;

        if r4 == null goto label03;

        r5 = virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r2);

        $i19 = r2.<android.graphics.Rect: int left>;

        $i21 = r5.<android.graphics.Insets: int left>;

        $i20 = $i19 + $i21;

        r2.<android.graphics.Rect: int left> = $i20;

        $i24 = r2.<android.graphics.Rect: int right>;

        $i23 = r5.<android.graphics.Insets: int right>;

        $i22 = $i24 - $i23;

        r2.<android.graphics.Rect: int right> = $i22;

        i4 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r13 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>(r2, $r13);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i4);

        goto label04;

     label03:
        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label04:
        i25 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if r4 == null goto label05;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label05:
        $z0 = specialinvoke r0.<android.widget.Switch: boolean getTargetCheckedState()>();

        if $z0 == 0 goto label06;

        $r11 = r0.<android.widget.Switch: android.text.Layout mOnLayout>;

        goto label07;

     label06:
        $r11 = r0.<android.widget.Switch: android.text.Layout mOffLayout>;

     label07:
        r14 = $r11;

        if r14 == null goto label11;

        r6 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        $r9 = r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors>;

        if $r9 == null goto label08;

        $r12 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r10 = r0.<android.widget.Switch: android.content.res.ColorStateList mTextColors>;

        $i18 = virtualinvoke $r10.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r6, 0);

        virtualinvoke $r12.<android.text.TextPaint: void setColor(int)>($i18);

     label08:
        $r8 = r0.<android.widget.Switch: android.text.TextPaint mTextPaint>;

        $r8.<android.text.TextPaint: int[] drawableState> = r6;

        if r4 == null goto label09;

        r7 = virtualinvoke r4.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i16 = r7.<android.graphics.Rect: int left>;

        $i17 = r7.<android.graphics.Rect: int right>;

        i5 = $i16 + $i17;

        goto label10;

     label09:
        i5 = virtualinvoke r0.<android.widget.Switch: int getWidth()>();

     label10:
        $i9 = i5 / 2;

        $i11 = virtualinvoke r14.<android.text.Layout: int getWidth()>();

        $i10 = $i11 / 2;

        i26 = $i9 - $i10;

        $i13 = i2 + i3;

        $i12 = $i13 / 2;

        $i15 = virtualinvoke r14.<android.text.Layout: int getHeight()>();

        $i14 = $i15 / 2;

        i6 = $i12 - $i14;

        $f0 = (float) i26;

        $f1 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        virtualinvoke r14.<android.text.Layout: void draw(android.graphics.Canvas)>(r1);

     label11:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i25);

        return;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.Switch r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 != 0 goto label1;

        $i4 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        return $i4;

     label1:
        $i1 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

        $i2 = r0.<android.widget.Switch: int mSwitchWidth>;

        i0 = $i1 + $i2;

        $r1 = virtualinvoke r0.<android.widget.Switch: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label2;

        $i3 = r0.<android.widget.Switch: int mSwitchPadding>;

        i0 = i0 + $i3;

     label2:
        return i0;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.Switch r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        $i4 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        return $i4;

     label1:
        $i1 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        $i2 = r0.<android.widget.Switch: int mSwitchWidth>;

        i0 = $i1 + $i2;

        $r1 = virtualinvoke r0.<android.widget.Switch: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label2;

        $i3 = r0.<android.widget.Switch: int mSwitchPadding>;

        i0 = i0 + $i3;

     label2:
        return i0;
    }

    private int getThumbOffset()
    {
        android.widget.Switch r0;
        float f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.Switch;

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        $f4 = r0.<android.widget.Switch: float mThumbPosition>;

        f0 = 1.0F - $f4;

        goto label2;

     label1:
        f0 = r0.<android.widget.Switch: float mThumbPosition>;

     label2:
        $i0 = specialinvoke r0.<android.widget.Switch: int getThumbScrollRange()>();

        $f1 = (float) $i0;

        $f2 = f0 * $f1;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        return $i1;
    }

    private int getThumbScrollRange()
    {
        android.widget.Switch r0;
        android.graphics.Rect r1;
        android.graphics.Insets r2;
        android.graphics.drawable.Drawable $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.widget.Switch;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r3 == null goto label3;

        r1 = r0.<android.widget.Switch: android.graphics.Rect mTempRect>;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r5 == null goto label1;

        $r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        r2 = virtualinvoke $r6.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        goto label2;

     label1:
        r2 = <android.graphics.Insets: android.graphics.Insets NONE>;

     label2:
        $i1 = r0.<android.widget.Switch: int mSwitchWidth>;

        $i0 = r0.<android.widget.Switch: int mThumbWidth>;

        $i3 = $i1 - $i0;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i5 = $i3 - $i2;

        $i4 = r1.<android.graphics.Rect: int right>;

        $i7 = $i5 - $i4;

        $i6 = r2.<android.graphics.Insets: int left>;

        $i10 = $i7 - $i6;

        $i8 = r2.<android.graphics.Insets: int right>;

        $i9 = $i10 - $i8;

        return $i9;

     label3:
        return 0;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.Switch r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.CompoundButton: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.Switch: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.Switch: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void drawableStateChanged()
    {
        android.widget.Switch r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void drawableStateChanged()>();

        r1 = virtualinvoke r0.<android.widget.Switch: int[] getDrawableState()>();

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

     label1:
        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

     label2:
        virtualinvoke r0.<android.widget.Switch: void invalidate()>();

        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.Switch r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.Switch;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>(f0, f1);

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label2:
        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r1 == $r2 goto label1;

        $r3 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r1 != $r3 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.Switch r0;
        android.graphics.drawable.Drawable $r1, $r2, $r6, $r7;
        android.animation.ObjectAnimator $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.widget.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r1 == null goto label1;

        $r7 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        $r2 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r2 == null goto label2;

        $r6 = r0.<android.widget.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        $r3 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        $z0 = virtualinvoke $r4.<android.animation.ObjectAnimator: boolean isRunning()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator>;

        virtualinvoke $r5.<android.animation.ObjectAnimator: void end()>();

        r0.<android.widget.Switch: android.animation.ObjectAnimator mPositionAnimator> = null;

     label3:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.Switch r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/Switch";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.Switch r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.CharSequence r2, r3, $r11;
        java.lang.StringBuilder r4, $r7, $r8, $r9;
        java.lang.Class $r5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = class "android/widget/Switch";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r6);

        $z0 = virtualinvoke r0.<android.widget.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<android.widget.Switch: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        $r11 = r0.<android.widget.Switch: java.lang.CharSequence mTextOff>;

     label2:
        r2 = $r11;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label4;

        r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>(r2);

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r4 = $r7;

        $r8 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>(r4);

     label4:
        return;
    }

    static float access$000(android.widget.Switch)
    {
        android.widget.Switch r0;
        float $f0;

        r0 := @parameter0: android.widget.Switch;

        $f0 = r0.<android.widget.Switch: float mThumbPosition>;

        return $f0;
    }

    static void access$100(android.widget.Switch, float)
    {
        android.widget.Switch r0;
        float f0;

        r0 := @parameter0: android.widget.Switch;

        f0 := @parameter1: float;

        specialinvoke r0.<android.widget.Switch: void setThumbPosition(float)>(f0);

        return;
    }

    static void <clinit>()
    {
        int[] $r0;
        android.widget.Switch$1 $r1;

        <android.widget.Switch: int MONOSPACE> = 3;

        <android.widget.Switch: int SERIF> = 2;

        <android.widget.Switch: int SANS> = 1;

        <android.widget.Switch: int TOUCH_MODE_DRAGGING> = 2;

        <android.widget.Switch: int TOUCH_MODE_DOWN> = 1;

        <android.widget.Switch: int TOUCH_MODE_IDLE> = 0;

        <android.widget.Switch: int THUMB_ANIMATION_DURATION> = 250;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.widget.Switch: int[] CHECKED_STATE_SET> = $r0;

        $r1 = new android.widget.Switch$1;

        specialinvoke $r1.<android.widget.Switch$1: void <init>(java.lang.String)>("thumbPos");

        <android.widget.Switch: android.util.FloatProperty THUMB_POS> = $r1;

        return;
    }
}
