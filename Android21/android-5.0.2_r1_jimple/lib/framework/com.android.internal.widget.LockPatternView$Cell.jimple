public class com.android.internal.widget.LockPatternView$Cell extends java.lang.Object
{
    int row;
    int column;
    static com.android.internal.widget.LockPatternView$Cell[][] sCells;

    private void <init>(int, int)
    {
        com.android.internal.widget.LockPatternView$Cell r0;
        int i0, i1;

        r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.widget.LockPatternView$Cell: void checkRange(int,int)>(i0, i1);

        r0.<com.android.internal.widget.LockPatternView$Cell: int row> = i0;

        r0.<com.android.internal.widget.LockPatternView$Cell: int column> = i1;

        return;
    }

    public int getRow()
    {
        com.android.internal.widget.LockPatternView$Cell r0;
        int $i0;

        r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        $i0 = r0.<com.android.internal.widget.LockPatternView$Cell: int row>;

        return $i0;
    }

    public int getColumn()
    {
        com.android.internal.widget.LockPatternView$Cell r0;
        int $i0;

        r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        $i0 = r0.<com.android.internal.widget.LockPatternView$Cell: int column>;

        return $i0;
    }

    public static synchronized com.android.internal.widget.LockPatternView$Cell of(int, int)
    {
        int i0, i1;
        com.android.internal.widget.LockPatternView$Cell[][] $r0;
        com.android.internal.widget.LockPatternView$Cell[] $r1;
        com.android.internal.widget.LockPatternView$Cell $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <com.android.internal.widget.LockPatternView$Cell: void checkRange(int,int)>(i0, i1);

        $r0 = <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells>;

        $r1 = $r0[i0];

        $r2 = $r1[i1];

        return $r2;
    }

    private static void checkRange(int, int)
    {
        int i0, i1;
        java.lang.IllegalArgumentException $r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("row must be in range 0-2");

        throw $r0;

     label2:
        if i1 < 0 goto label3;

        if i1 <= 2 goto label4;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("column must be in range 0-2");

        throw $r1;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.widget.LockPatternView$Cell r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: com.android.internal.widget.LockPatternView$Cell;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(row=");

        $i0 = r0.<com.android.internal.widget.LockPatternView$Cell: int row>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",clmn=");

        $i1 = r0.<com.android.internal.widget.LockPatternView$Cell: int column>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        int i0, i1;
        com.android.internal.widget.LockPatternView$Cell[][] $r0, $r1;
        com.android.internal.widget.LockPatternView$Cell $r2;
        com.android.internal.widget.LockPatternView$Cell[] $r3;

        $r0 = newmultiarray (com.android.internal.widget.LockPatternView$Cell)[3][3];

        <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells> = $r0;

        i0 = 0;

     label1:
        if i0 >= 3 goto label4;

        i1 = 0;

     label2:
        if i1 >= 3 goto label3;

        $r1 = <com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell[][] sCells>;

        $r3 = $r1[i0];

        $r2 = new com.android.internal.widget.LockPatternView$Cell;

        specialinvoke $r2.<com.android.internal.widget.LockPatternView$Cell: void <init>(int,int)>(i0, i1);

        $r3[i1] = $r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }
}
