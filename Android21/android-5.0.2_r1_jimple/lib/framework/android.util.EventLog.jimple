public class android.util.EventLog extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String TAGS_FILE;
    private static final java.lang.String COMMENT_PATTERN;
    private static final java.lang.String TAG_PATTERN;
    private static java.util.HashMap sTagCodes;
    private static java.util.HashMap sTagNames;

    public void <init>()
    {
        android.util.EventLog r0;

        r0 := @this: android.util.EventLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native int writeEvent(int, int);

    public static native int writeEvent(int, long);

    public static native int writeEvent(int, java.lang.String);

    public static native transient int writeEvent(int, java.lang.Object[]);

    public static native void readEvents(int[], java.util.Collection) throws java.io.IOException;

    public static java.lang.String getTagName(int)
    {
        int i0;
        java.util.HashMap $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        staticinvoke <android.util.EventLog: void readTagsFile()>();

        $r0 = <android.util.EventLog: java.util.HashMap sTagNames>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static int getTagCode(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.EventLog: void readTagsFile()>();

        $r2 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Integer) $r3;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    private static synchronized void readTagsFile()
    {
        java.util.regex.Pattern r0, r1;
        java.io.BufferedReader r2, $r11;
        java.lang.String r3, r5, $r14, $r15, $r23, $r35;
        java.util.regex.Matcher r4, $r13;
        int i0;
        java.lang.Throwable r6, $r36;
        java.util.HashMap $r8, $r9, $r10, $r17, $r18, $r28;
        java.io.FileReader $r12;
        boolean $z0, $z1;
        java.lang.Integer $r16, $r21;
        java.lang.StringBuilder $r22, $r24, $r25, $r30, $r31, $r32;
        java.io.IOException $r26, $r29, $r33, $r34, r39;
        java.lang.NumberFormatException $r27, r37;

        $r8 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        if $r8 == null goto label01;

        $r28 = <android.util.EventLog: java.util.HashMap sTagNames>;

        if $r28 == null goto label01;

        return;

     label01:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        <android.util.EventLog: java.util.HashMap sTagCodes> = $r9;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        <android.util.EventLog: java.util.HashMap sTagNames> = $r10;

        r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*(#.*)?$");

        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*(\\d+)\\s+(\\w+)\\s*(\\(.*\\))?\\s*$");

        r2 = null;

     label02:
        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.FileReader;

        specialinvoke $r12.<java.io.FileReader: void <init>(java.lang.String)>("/system/etc/event-log-tags");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r12, 256);

        r2 = $r11;

     label03:
        $r14 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        r3 = $r14;

        if $r14 == null goto label09;

        $r13 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z0 = virtualinvoke $r13.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label04;

        goto label03;

     label04:
        r4 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label05;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad entry in /system/etc/event-log-tags: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EventLog", $r23);

        goto label03;

     label05:
        $r15 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        r5 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r17 = <android.util.EventLog: java.util.HashMap sTagCodes>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r16);

        $r18 = <android.util.EventLog: java.util.HashMap sTagNames>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r5);

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        r37 = $r27;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in /system/etc/event-log-tags: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", $r35, r37);

     label08:
        goto label03;

     label09:
        if r2 == null goto label10;

        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label10:
        goto label21;

     label11:
        $r29 := @caughtexception;

        goto label21;

     label12:
        $r34 := @caughtexception;

        r39 = $r34;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("EventLog", "Error reading /system/etc/event-log-tags", r39);

     label13:
        if r2 == null goto label14;

        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label14:
        goto label21;

     label15:
        $r33 := @caughtexception;

        goto label21;

     label16:
        $r36 := @caughtexception;

        r6 = $r36;

     label17:
        if r2 == null goto label18;

        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label18:
        goto label20;

     label19:
        $r26 := @caughtexception;

     label20:
        throw r6;

     label21:
        return;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label02 to label09 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label02 to label09 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    static void <clinit>()
    {
        <android.util.EventLog: java.lang.String TAG_PATTERN> = "^\\s*(\\d+)\\s+(\\w+)\\s*(\\(.*\\))?\\s*$";

        <android.util.EventLog: java.lang.String COMMENT_PATTERN> = "^\\s*(#.*)?$";

        <android.util.EventLog: java.lang.String TAGS_FILE> = "/system/etc/event-log-tags";

        <android.util.EventLog: java.lang.String TAG> = "EventLog";

        <android.util.EventLog: java.util.HashMap sTagCodes> = null;

        <android.util.EventLog: java.util.HashMap sTagNames> = null;

        return;
    }
}
