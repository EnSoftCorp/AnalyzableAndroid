public class android.app.ResourcesManager extends java.lang.Object
{
    static final java.lang.String TAG;
    static final boolean DEBUG_CACHE;
    static final boolean DEBUG_STATS;
    private static android.app.ResourcesManager sResourcesManager;
    final android.util.ArrayMap mActiveResources;
    final android.util.ArrayMap mDefaultDisplayMetrics;
    android.content.res.CompatibilityInfo mResCompatibilityInfo;
    android.content.res.Configuration mResConfiguration;
    final android.content.res.Configuration mTmpConfig;

    public void <init>()
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap $r1, $r2;
        android.content.res.Configuration $r3;

        r0 := @this: android.app.ResourcesManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.ResourcesManager: android.util.ArrayMap mDefaultDisplayMetrics> = $r2;

        $r3 = new android.content.res.Configuration;

        specialinvoke $r3.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ResourcesManager: android.content.res.Configuration mTmpConfig> = $r3;

        return;
    }

    public static android.app.ResourcesManager getInstance()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r5;
        android.app.ResourcesManager $r2, $r3, $r4;

        r0 = class "android/app/ResourcesManager";

        entermonitor class "android/app/ResourcesManager";

     label1:
        $r2 = <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager>;

        if $r2 != null goto label2;

        $r4 = new android.app.ResourcesManager;

        specialinvoke $r4.<android.app.ResourcesManager: void <init>()>();

        <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager> = $r4;

     label2:
        $r3 = <android.app.ResourcesManager: android.app.ResourcesManager sResourcesManager>;

        exitmonitor r0;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.res.Configuration getConfiguration()
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration $r1;

        r0 := @this: android.app.ResourcesManager;

        $r1 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        return $r1;
    }

    public void flushDisplayMetricsLocked()
    {
        android.app.ResourcesManager r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.app.ResourcesManager;

        $r1 = r0.<android.app.ResourcesManager: android.util.ArrayMap mDefaultDisplayMetrics>;

        virtualinvoke $r1.<android.util.ArrayMap: void clear()>();

        return;
    }

    public android.util.DisplayMetrics getDisplayMetricsLocked(int)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.view.DisplayAdjustments $r1;
        android.util.DisplayMetrics $r2;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        $r1 = <android.view.DisplayAdjustments: android.view.DisplayAdjustments DEFAULT_DISPLAY_ADJUSTMENTS>;

        $r2 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.view.DisplayAdjustments)>(i0, $r1);

        return $r2;
    }

    public android.util.DisplayMetrics getDisplayMetricsLocked(int, android.view.DisplayAdjustments)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.view.DisplayAdjustments r1;
        boolean z0, $z1;
        android.util.DisplayMetrics r2, $r5, $r10, r11;
        android.hardware.display.DisplayManagerGlobal r3;
        android.view.Display r4;
        android.util.ArrayMap $r6, $r8;
        java.lang.Object $r9;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.DisplayAdjustments;

        if i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r8 = r0.<android.app.ResourcesManager: android.util.ArrayMap mDefaultDisplayMetrics>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (android.util.DisplayMetrics) $r9;

        goto label4;

     label3:
        $r10 = null;

     label4:
        r2 = $r10;

        if r2 == null goto label5;

        return r2;

     label5:
        $r5 = new android.util.DisplayMetrics;

        specialinvoke $r5.<android.util.DisplayMetrics: void <init>()>();

        r11 = $r5;

        r3 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        if r3 != null goto label6;

        virtualinvoke r11.<android.util.DisplayMetrics: void setToDefaults()>();

        return r11;

     label6:
        if z0 == 0 goto label7;

        $r6 = r0.<android.app.ResourcesManager: android.util.ArrayMap mDefaultDisplayMetrics>;

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

     label7:
        r4 = virtualinvoke r3.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)>(i0, r1);

        if r4 == null goto label8;

        virtualinvoke r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r11);

        goto label9;

     label8:
        virtualinvoke r11.<android.util.DisplayMetrics: void setToDefaults()>();

     label9:
        return r11;
    }

    final void applyNonDefaultDisplayMetricsToConfigurationLocked(android.util.DisplayMetrics, android.content.res.Configuration)
    {
        android.app.ResourcesManager r0;
        android.util.DisplayMetrics r1;
        android.content.res.Configuration r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.Configuration;

        r2.<android.content.res.Configuration: int touchscreen> = 1;

        $i1 = r1.<android.util.DisplayMetrics: int densityDpi>;

        r2.<android.content.res.Configuration: int densityDpi> = $i1;

        $i2 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i2;

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        $f2 = $f1 / $f0;

        $i3 = (int) $f2;

        r2.<android.content.res.Configuration: int screenWidthDp> = $i3;

        $i4 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f4 = (float) $i4;

        $f3 = r1.<android.util.DisplayMetrics: float density>;

        $f5 = $f4 / $f3;

        $i5 = (int) $f5;

        r2.<android.content.res.Configuration: int screenHeightDp> = $i5;

        $i6 = r2.<android.content.res.Configuration: int screenLayout>;

        i0 = staticinvoke <android.content.res.Configuration: int resetScreenLayout(int)>($i6);

        $i9 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i7 = r1.<android.util.DisplayMetrics: int heightPixels>;

        if $i9 <= $i7 goto label1;

        r2.<android.content.res.Configuration: int orientation> = 2;

        $i16 = r2.<android.content.res.Configuration: int screenWidthDp>;

        $i17 = r2.<android.content.res.Configuration: int screenHeightDp>;

        $i18 = staticinvoke <android.content.res.Configuration: int reduceScreenLayout(int,int,int)>(i0, $i16, $i17);

        r2.<android.content.res.Configuration: int screenLayout> = $i18;

        goto label2;

     label1:
        r2.<android.content.res.Configuration: int orientation> = 1;

        $i11 = r2.<android.content.res.Configuration: int screenHeightDp>;

        $i8 = r2.<android.content.res.Configuration: int screenWidthDp>;

        $i10 = staticinvoke <android.content.res.Configuration: int reduceScreenLayout(int,int,int)>(i0, $i11, $i8);

        r2.<android.content.res.Configuration: int screenLayout> = $i10;

     label2:
        $i13 = r2.<android.content.res.Configuration: int screenWidthDp>;

        r2.<android.content.res.Configuration: int smallestScreenWidthDp> = $i13;

        $i12 = r2.<android.content.res.Configuration: int screenWidthDp>;

        r2.<android.content.res.Configuration: int compatScreenWidthDp> = $i12;

        $i15 = r2.<android.content.res.Configuration: int screenHeightDp>;

        r2.<android.content.res.Configuration: int compatScreenHeightDp> = $i15;

        $i14 = r2.<android.content.res.Configuration: int smallestScreenWidthDp>;

        r2.<android.content.res.Configuration: int compatSmallestScreenWidthDp> = $i14;

        return;
    }

    public boolean applyCompatConfiguration(int, android.content.res.Configuration)
    {
        android.app.ResourcesManager r0;
        int i0;
        android.content.res.Configuration r1;
        android.content.res.CompatibilityInfo $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.app.ResourcesManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.res.Configuration;

        $r2 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        $z0 = virtualinvoke $r3.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        virtualinvoke $r4.<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>(i0, r1);

        return 1;

     label1:
        return 0;
    }

    public android.content.res.Resources getTopLevelResources(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], int, android.content.res.Configuration, android.content.res.CompatibilityInfo, android.os.IBinder)
    {
        android.app.ResourcesManager r0, r10, r13;
        java.lang.String r1, r14, $r38, r50, r52;
        java.lang.String[] r2, r3, r4, r48, r49, r51;
        int i0, i1, $i3, $i4, $i5, i8, i9, i10, i11, i12;
        android.content.res.Configuration r5, $r23, $r25, $r36, r54;
        android.content.res.CompatibilityInfo r6;
        android.os.IBinder r7;
        float f0;
        android.content.res.ResourcesKey r8, $r17;
        android.content.res.Resources r9, r15, $r24, $r35, $r44, r55;
        java.lang.ref.WeakReference r11, r16, $r27;
        java.lang.Throwable r12, r18, $r45, $r46;
        android.util.ArrayMap $r19, $r29, $r31;
        java.lang.Object $r21, $r26, $r33, $r42;
        android.content.res.AssetManager $r22, $r30, $r34, $r43, r47;
        boolean $z0, $z1, $z2, z3, z4;
        java.lang.StringBuilder $r37, $r39, $r40, $r41;
        android.util.DisplayMetrics r53;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        r5 := @parameter5: android.content.res.Configuration;

        r6 := @parameter6: android.content.res.CompatibilityInfo;

        r7 := @parameter7: android.os.IBinder;

        f0 = r6.<android.content.res.CompatibilityInfo: float applicationScale>;

        $r17 = new android.content.res.ResourcesKey;

        specialinvoke $r17.<android.content.res.ResourcesKey: void <init>(java.lang.String,int,android.content.res.Configuration,float,android.os.IBinder)>(r1, i0, r5, f0, r7);

        r8 = $r17;

        r10 = r0;

        entermonitor r0;

     label01:
        $r19 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $r21 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r11 = (java.lang.ref.WeakReference) $r21;

        if r11 == null goto label02;

        $r42 = virtualinvoke r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r44 = (android.content.res.Resources) $r42;

        goto label03;

     label02:
        $r44 = null;

     label03:
        r9 = $r44;

        if r9 == null goto label05;

        $r43 = virtualinvoke r9.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $z2 = virtualinvoke $r43.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z2 == 0 goto label05;

        exitmonitor r10;

     label04:
        return r9;

     label05:
        exitmonitor r10;

     label06:
        goto label09;

     label07:
        $r46 := @caughtexception;

        r12 = $r46;

        exitmonitor r10;

     label08:
        throw r12;

     label09:
        $r22 = new android.content.res.AssetManager;

        specialinvoke $r22.<android.content.res.AssetManager: void <init>()>();

        r47 = $r22;

        if r1 == null goto label10;

        $i4 = virtualinvoke r47.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>(r1);

        if $i4 != 0 goto label10;

        return null;

     label10:
        if r2 == null goto label13;

        r48 = r2;

        i8 = lengthof r48;

        i1 = 0;

     label11:
        if i1 >= i8 goto label13;

        r14 = r48[i1];

        $i5 = virtualinvoke r47.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>(r14);

        if $i5 != 0 goto label12;

        return null;

     label12:
        i1 = i1 + 1;

        goto label11;

     label13:
        if r3 == null goto label15;

        r49 = r3;

        i9 = lengthof r49;

        i10 = 0;

     label14:
        if i10 >= i9 goto label15;

        r50 = r49[i10];

        virtualinvoke r47.<android.content.res.AssetManager: int addOverlayPath(java.lang.String)>(r50);

        i10 = i10 + 1;

        goto label14;

     label15:
        if r4 == null goto label18;

        r51 = r4;

        i11 = lengthof r51;

        i12 = 0;

     label16:
        if i12 >= i11 goto label18;

        r52 = r51[i12];

        $i3 = virtualinvoke r47.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>(r52);

        if $i3 != 0 goto label17;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asset path \'");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not exist or contains no resources.");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ResourcesManager", $r38);

     label17:
        i12 = i12 + 1;

        goto label16;

     label18:
        r53 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int)>(i0);

        if i0 != 0 goto label19;

        $z1 = 1;

        goto label20;

     label19:
        $z1 = 0;

     label20:
        z3 = $z1;

        z4 = virtualinvoke r8.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if z3 == 0 goto label21;

        if z4 == 0 goto label23;

     label21:
        $r23 = new android.content.res.Configuration;

        $r25 = virtualinvoke r0.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r23.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r25);

        r54 = $r23;

        if z3 != 0 goto label22;

        virtualinvoke r0.<android.app.ResourcesManager: void applyNonDefaultDisplayMetricsToConfigurationLocked(android.util.DisplayMetrics,android.content.res.Configuration)>(r53, r54);

     label22:
        if z4 == 0 goto label24;

        $r36 = r8.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke r54.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r36);

        goto label24;

     label23:
        r54 = virtualinvoke r0.<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>();

     label24:
        $r24 = new android.content.res.Resources;

        specialinvoke $r24.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>(r47, r53, r54, r6, r7);

        r55 = $r24;

        r13 = r0;

        entermonitor r0;

     label25:
        $r29 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $r26 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r16 = (java.lang.ref.WeakReference) $r26;

        if r16 == null goto label26;

        $r33 = virtualinvoke r16.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r35 = (android.content.res.Resources) $r33;

        goto label27;

     label26:
        $r35 = null;

     label27:
        r15 = $r35;

        if r15 == null goto label29;

        $r30 = virtualinvoke r15.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $z0 = virtualinvoke $r30.<android.content.res.AssetManager: boolean isUpToDate()>();

        if $z0 == 0 goto label29;

        $r34 = virtualinvoke r55.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        virtualinvoke $r34.<android.content.res.AssetManager: void close()>();

        exitmonitor r13;

     label28:
        return r15;

     label29:
        $r31 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $r27 = new java.lang.ref.WeakReference;

        specialinvoke $r27.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r55);

        virtualinvoke $r31.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r27);

        exitmonitor r13;

     label30:
        return r55;

     label31:
        $r45 := @caughtexception;

        r18 = $r45;

        exitmonitor r13;

     label32:
        throw r18;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label25 to label28 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

    public final boolean applyConfigurationToResourcesLocked(android.content.res.Configuration, android.content.res.CompatibilityInfo)
    {
        android.app.ResourcesManager r0;
        android.content.res.Configuration r1, r4, $r8, $r9, $r10, $r21, $r22, $r26;
        android.content.res.CompatibilityInfo r2, $r23, $r24;
        int i0, i1, i2, $i3;
        android.util.DisplayMetrics r3, r7;
        android.content.res.ResourcesKey r5;
        android.content.res.Resources r6;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.Locale $r11, $r25;
        android.util.ArrayMap $r12, $r13, $r14, $r18;
        java.lang.Object $r15, $r17, $r19;
        java.lang.ref.WeakReference $r16;

        r0 := @this: android.app.ResourcesManager;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r8 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        if $r8 != null goto label01;

        $r26 = new android.content.res.Configuration;

        specialinvoke $r26.<android.content.res.Configuration: void <init>()>();

        r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration> = $r26;

     label01:
        $r9 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        $z2 = virtualinvoke $r9.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r1);

        if $z2 != 0 goto label02;

        if r2 != null goto label02;

        return 0;

     label02:
        $r10 = r0.<android.app.ResourcesManager: android.content.res.Configuration mResConfiguration>;

        i0 = virtualinvoke $r10.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r1);

        virtualinvoke r0.<android.app.ResourcesManager: void flushDisplayMetricsLocked()>();

        r3 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int)>(0);

        if r2 == null goto label04;

        $r23 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        if $r23 == null goto label03;

        $r24 = r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo>;

        $z5 = virtualinvoke $r24.<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label04;

     label03:
        r0.<android.app.ResourcesManager: android.content.res.CompatibilityInfo mResCompatibilityInfo> = r2;

        i0 = i0 | 3328;

     label04:
        $r11 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        if $r11 == null goto label05;

        $r25 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r25);

     label05:
        staticinvoke <android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r1, r3, r2);

        staticinvoke <android.app.ApplicationPackageManager: void configurationChanged()>();

        r4 = null;

        $r12 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $i3 = virtualinvoke $r12.<android.util.ArrayMap: int size()>();

        i1 = $i3 - 1;

     label06:
        if i1 < 0 goto label17;

        $r13 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $r15 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r5 = (android.content.res.ResourcesKey) $r15;

        $r14 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        $r17 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r16 = (java.lang.ref.WeakReference) $r17;

        $r19 = virtualinvoke $r16.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.content.res.Resources) $r19;

        if r6 == null goto label15;

        i2 = r5.<android.content.res.ResourcesKey: int mDisplayId>;

        if i2 != 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z0 = $z4;

        r7 = r3;

        z1 = virtualinvoke r5.<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>();

        if z0 == 0 goto label09;

        if z1 == 0 goto label13;

     label09:
        if r4 != null goto label10;

        $r21 = new android.content.res.Configuration;

        specialinvoke $r21.<android.content.res.Configuration: void <init>()>();

        r4 = $r21;

     label10:
        virtualinvoke r4.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        if z0 != 0 goto label11;

        r7 = virtualinvoke r0.<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int)>(i2);

        virtualinvoke r0.<android.app.ResourcesManager: void applyNonDefaultDisplayMetricsToConfigurationLocked(android.util.DisplayMetrics,android.content.res.Configuration)>(r7, r4);

     label11:
        if z1 == 0 goto label12;

        $r22 = r5.<android.content.res.ResourcesKey: android.content.res.Configuration mOverrideConfiguration>;

        virtualinvoke r4.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r22);

     label12:
        virtualinvoke r6.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r4, r7, r2);

        goto label14;

     label13:
        virtualinvoke r6.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>(r1, r7, r2);

     label14:
        goto label16;

     label15:
        $r18 = r0.<android.app.ResourcesManager: android.util.ArrayMap mActiveResources>;

        virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label16:
        i1 = i1 + -1;

        goto label06;

     label17:
        if i0 == 0 goto label18;

        $z3 = 1;

        goto label19;

     label18:
        $z3 = 0;

     label19:
        return $z3;
    }

    public static void <clinit>()
    {
        <android.app.ResourcesManager: boolean DEBUG_STATS> = 1;

        <android.app.ResourcesManager: boolean DEBUG_CACHE> = 0;

        <android.app.ResourcesManager: java.lang.String TAG> = "ResourcesManager";

        return;
    }
}
