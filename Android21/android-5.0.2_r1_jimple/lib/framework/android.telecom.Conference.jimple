public abstract class android.telecom.Conference extends java.lang.Object
{
    private final java.util.Set mListeners;
    private final java.util.List mChildConnections;
    private final java.util.List mUnmodifiableChildConnections;
    private final java.util.List mConferenceableConnections;
    private final java.util.List mUnmodifiableConferenceableConnections;
    private android.telecom.PhoneAccountHandle mPhoneAccount;
    private android.telecom.AudioState mAudioState;
    private int mState;
    private android.telecom.DisconnectCause mDisconnectCause;
    private int mCapabilities;
    private java.lang.String mDisconnectMessage;
    private final android.telecom.Connection$Listener mConnectionDeathListener;

    public void <init>(android.telecom.PhoneAccountHandle)
    {
        android.telecom.Conference r0;
        android.telecom.PhoneAccountHandle r1;
        java.util.concurrent.CopyOnWriteArraySet $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        java.util.ArrayList $r6;
        android.telecom.Conference$1 $r9;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<android.telecom.Conference: java.util.Set mListeners> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Conference: java.util.List mChildConnections> = $r3;

        $r4 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<android.telecom.Conference: java.util.List mUnmodifiableChildConnections> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.telecom.Conference: java.util.List mConferenceableConnections> = $r6;

        $r7 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<android.telecom.Conference: java.util.List mUnmodifiableConferenceableConnections> = $r8;

        r0.<android.telecom.Conference: int mState> = 1;

        $r9 = new android.telecom.Conference$1;

        specialinvoke $r9.<android.telecom.Conference$1: void <init>(android.telecom.Conference)>(r0);

        r0.<android.telecom.Conference: android.telecom.Connection$Listener mConnectionDeathListener> = $r9;

        r0.<android.telecom.Conference: android.telecom.PhoneAccountHandle mPhoneAccount> = r1;

        return;
    }

    public final android.telecom.PhoneAccountHandle getPhoneAccountHandle()
    {
        android.telecom.Conference r0;
        android.telecom.PhoneAccountHandle $r1;

        r0 := @this: android.telecom.Conference;

        $r1 = r0.<android.telecom.Conference: android.telecom.PhoneAccountHandle mPhoneAccount>;

        return $r1;
    }

    public final java.util.List getConnections()
    {
        android.telecom.Conference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Conference;

        $r1 = r0.<android.telecom.Conference: java.util.List mUnmodifiableChildConnections>;

        return $r1;
    }

    public final int getState()
    {
        android.telecom.Conference r0;
        int $i0;

        r0 := @this: android.telecom.Conference;

        $i0 = r0.<android.telecom.Conference: int mState>;

        return $i0;
    }

    public final int getCapabilities()
    {
        android.telecom.Conference r0;
        int $i0;

        r0 := @this: android.telecom.Conference;

        $i0 = r0.<android.telecom.Conference: int mCapabilities>;

        return $i0;
    }

    public final android.telecom.AudioState getAudioState()
    {
        android.telecom.Conference r0;
        android.telecom.AudioState $r1;

        r0 := @this: android.telecom.Conference;

        $r1 = r0.<android.telecom.Conference: android.telecom.AudioState mAudioState>;

        return $r1;
    }

    public void onDisconnect()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onSeparate(android.telecom.Connection)
    {
        android.telecom.Conference r0;
        android.telecom.Connection r1;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Connection;

        return;
    }

    public void onMerge(android.telecom.Connection)
    {
        android.telecom.Conference r0;
        android.telecom.Connection r1;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Connection;

        return;
    }

    public void onHold()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onUnhold()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onMerge()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onSwap()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onPlayDtmfTone(char)
    {
        android.telecom.Conference r0;
        char c0;

        r0 := @this: android.telecom.Conference;

        c0 := @parameter0: char;

        return;
    }

    public void onStopDtmfTone()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        return;
    }

    public void onAudioStateChanged(android.telecom.AudioState)
    {
        android.telecom.Conference r0;
        android.telecom.AudioState r1;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.AudioState;

        return;
    }

    public final void setOnHold()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        specialinvoke r0.<android.telecom.Conference: void setState(int)>(5);

        return;
    }

    public final void setActive()
    {
        android.telecom.Conference r0;

        r0 := @this: android.telecom.Conference;

        specialinvoke r0.<android.telecom.Conference: void setState(int)>(4);

        return;
    }

    public final void setDisconnected(android.telecom.DisconnectCause)
    {
        android.telecom.Conference r0;
        android.telecom.DisconnectCause r1, $r6;
        java.util.Iterator r2;
        android.telecom.Conference$Listener r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.DisconnectCause;

        r0.<android.telecom.Conference: android.telecom.DisconnectCause mDisconnectCause> = r1;

        specialinvoke r0.<android.telecom.Conference: void setState(int)>(6);

        $r4 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Conference$Listener) $r5;

        $r6 = r0.<android.telecom.Conference: android.telecom.DisconnectCause mDisconnectCause>;

        virtualinvoke r3.<android.telecom.Conference$Listener: void onDisconnected(android.telecom.Conference,android.telecom.DisconnectCause)>(r0, $r6);

        goto label1;

     label2:
        return;
    }

    public final void setCapabilities(int)
    {
        android.telecom.Conference r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.telecom.Conference$Listener r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.telecom.Conference;

        i0 := @parameter0: int;

        $i1 = r0.<android.telecom.Conference: int mCapabilities>;

        if i0 == $i1 goto label2;

        r0.<android.telecom.Conference: int mCapabilities> = i0;

        $r3 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Conference$Listener) $r4;

        $i2 = r0.<android.telecom.Conference: int mCapabilities>;

        virtualinvoke r2.<android.telecom.Conference$Listener: void onCapabilitiesChanged(android.telecom.Conference,int)>(r0, $i2);

        goto label1;

     label2:
        return;
    }

    public final boolean addConnection(android.telecom.Connection)
    {
        android.telecom.Conference r0;
        android.telecom.Connection r1;
        java.util.Iterator r2;
        android.telecom.Conference$Listener r3;
        java.util.List $r4, $r5;
        boolean $z0, $z1, $z3;
        java.util.Set $r6;
        java.lang.Object $r7;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Connection;

        if r1 == null goto label3;

        $r4 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r1.<android.telecom.Connection: boolean setConference(android.telecom.Conference)>(r0);

        if $z1 == 0 goto label3;

        $r5 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Conference$Listener) $r7;

        virtualinvoke r3.<android.telecom.Conference$Listener: void onConnectionAdded(android.telecom.Conference,android.telecom.Connection)>(r0, r1);

        goto label1;

     label2:
        return 1;

     label3:
        return 0;
    }

    public final void removeConnection(android.telecom.Connection)
    {
        android.telecom.Conference r0;
        android.telecom.Connection r1;
        java.util.Iterator r2;
        android.telecom.Conference$Listener r3;
        java.lang.Object[] $r4;
        java.util.List $r5, $r6;
        boolean $z0, $z1;
        java.util.Set $r7;
        java.lang.Object $r8;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Connection;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r1;

        $r5 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        $r4[1] = $r5;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "removing %s from %s", $r4);

        if r1 == null goto label2;

        $r6 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.telecom.Connection: void resetConference()>();

        $r7 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Conference$Listener) $r8;

        virtualinvoke r3.<android.telecom.Conference$Listener: void onConnectionRemoved(android.telecom.Conference,android.telecom.Connection)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public final void setConferenceableConnections(java.util.List)
    {
        android.telecom.Conference r0;
        java.util.List r1, $r5, $r8;
        java.util.Iterator r2;
        android.telecom.Connection r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<android.telecom.Conference: void clearConferenceableList()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Connection) $r4;

        $r5 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z1 != 0 goto label2;

        $r6 = r0.<android.telecom.Conference: android.telecom.Connection$Listener mConnectionDeathListener>;

        virtualinvoke r3.<android.telecom.Connection: android.telecom.Connection addConnectionListener(android.telecom.Connection$Listener)>($r6);

        $r8 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        specialinvoke r0.<android.telecom.Conference: void fireOnConferenceableConnectionsChanged()>();

        return;
    }

    private final void fireOnConferenceableConnectionsChanged()
    {
        android.telecom.Conference r0;
        java.util.Iterator r1;
        android.telecom.Conference$Listener r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.List $r5;

        r0 := @this: android.telecom.Conference;

        $r3 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Conference$Listener) $r4;

        $r5 = virtualinvoke r0.<android.telecom.Conference: java.util.List getConferenceableConnections()>();

        virtualinvoke r2.<android.telecom.Conference$Listener: void onConferenceableConnectionsChanged(android.telecom.Conference,java.util.List)>(r0, $r5);

        goto label1;

     label2:
        return;
    }

    public final java.util.List getConferenceableConnections()
    {
        android.telecom.Conference r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Conference;

        $r1 = r0.<android.telecom.Conference: java.util.List mUnmodifiableConferenceableConnections>;

        return $r1;
    }

    public final void destroy()
    {
        android.telecom.Conference r0;
        java.util.Iterator r1, r11;
        android.telecom.Connection r2;
        java.lang.Object[] $r3, $r7, $r10;
        java.util.List $r4;
        boolean $z0, $z1;
        int $i0;
        java.util.Set $r5;
        java.lang.Object $r6, $r9;
        android.telecom.DisconnectCause $r8;
        android.telecom.Conference$Listener r12;

        r0 := @this: android.telecom.Conference;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "destroying conference : %s", $r3);

        $r4 = r0.<android.telecom.Conference: java.util.List mChildConnections>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Connection) $r9;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r2;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "removing connection %s", $r10);

        virtualinvoke r0.<android.telecom.Conference: void removeConnection(android.telecom.Connection)>(r2);

        goto label1;

     label2:
        $i0 = r0.<android.telecom.Conference: int mState>;

        if $i0 == 6 goto label3;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setting to disconnected", $r7);

        $r8 = new android.telecom.DisconnectCause;

        specialinvoke $r8.<android.telecom.DisconnectCause: void <init>(int)>(2);

        virtualinvoke r0.<android.telecom.Conference: void setDisconnected(android.telecom.DisconnectCause)>($r8);

     label3:
        $r5 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r11 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.telecom.Conference$Listener) $r6;

        virtualinvoke r12.<android.telecom.Conference$Listener: void onDestroyed(android.telecom.Conference)>(r0);

        goto label4;

     label5:
        return;
    }

    public final android.telecom.Conference addListener(android.telecom.Conference$Listener)
    {
        android.telecom.Conference r0;
        android.telecom.Conference$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Conference$Listener;

        $r2 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public final android.telecom.Conference removeListener(android.telecom.Conference$Listener)
    {
        android.telecom.Conference r0;
        android.telecom.Conference$Listener r1;
        java.util.Set $r2;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.Conference$Listener;

        $r2 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return r0;
    }

    final void setAudioState(android.telecom.AudioState)
    {
        android.telecom.Conference r0;
        android.telecom.AudioState r1;
        java.lang.Object[] $r2;

        r0 := @this: android.telecom.Conference;

        r1 := @parameter0: android.telecom.AudioState;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "setAudioState %s", $r2);

        r0.<android.telecom.Conference: android.telecom.AudioState mAudioState> = r1;

        virtualinvoke r0.<android.telecom.Conference: void onAudioStateChanged(android.telecom.AudioState)>(r1);

        return;
    }

    private void setState(int)
    {
        android.telecom.Conference r0;
        int i0, i1, $i2;
        java.util.Iterator r1;
        android.telecom.Conference$Listener r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        r0 := @this: android.telecom.Conference;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 5 goto label1;

        if i0 == 6 goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <android.telecom.Connection: java.lang.String stateToString(int)>(i0);

        $r5[0] = $r6;

        staticinvoke <android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "Unsupported state transition for Conference call.", $r5);

        return;

     label1:
        $i2 = r0.<android.telecom.Conference: int mState>;

        if $i2 == i0 goto label3;

        i1 = r0.<android.telecom.Conference: int mState>;

        r0.<android.telecom.Conference: int mState> = i0;

        $r3 = r0.<android.telecom.Conference: java.util.Set mListeners>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Conference$Listener) $r4;

        virtualinvoke r2.<android.telecom.Conference$Listener: void onStateChanged(android.telecom.Conference,int,int)>(r0, i1, i0);

        goto label2;

     label3:
        return;
    }

    private final void clearConferenceableList()
    {
        android.telecom.Conference r0;
        java.util.Iterator r1;
        android.telecom.Connection r2;
        java.util.List $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.telecom.Connection$Listener $r6;

        r0 := @this: android.telecom.Conference;

        $r3 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Connection) $r5;

        $r6 = r0.<android.telecom.Conference: android.telecom.Connection$Listener mConnectionDeathListener>;

        virtualinvoke r2.<android.telecom.Connection: android.telecom.Connection removeConnectionListener(android.telecom.Connection$Listener)>($r6);

        goto label1;

     label2:
        $r4 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        return;
    }

    static java.util.List access$000(android.telecom.Conference)
    {
        android.telecom.Conference r0;
        java.util.List $r1;

        r0 := @parameter0: android.telecom.Conference;

        $r1 = r0.<android.telecom.Conference: java.util.List mConferenceableConnections>;

        return $r1;
    }

    static void access$100(android.telecom.Conference)
    {
        android.telecom.Conference r0;

        r0 := @parameter0: android.telecom.Conference;

        specialinvoke r0.<android.telecom.Conference: void fireOnConferenceableConnectionsChanged()>();

        return;
    }
}
