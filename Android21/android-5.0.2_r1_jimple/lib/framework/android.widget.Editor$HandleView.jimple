abstract class android.widget.Editor$HandleView extends android.view.View implements android.widget.Editor$TextViewPositionListener
{
    protected android.graphics.drawable.Drawable mDrawable;
    protected android.graphics.drawable.Drawable mDrawableLtr;
    protected android.graphics.drawable.Drawable mDrawableRtl;
    private final android.widget.PopupWindow mContainer;
    private int mPositionX;
    private int mPositionY;
    private boolean mIsDragging;
    private float mTouchToWindowOffsetX;
    private float mTouchToWindowOffsetY;
    protected int mHotspotX;
    protected int mHorizontalGravity;
    private float mTouchOffsetY;
    private float mIdealVerticalOffset;
    private int mLastParentX;
    private int mLastParentY;
    protected android.widget.Editor$ActionPopupWindow mActionPopupWindow;
    private int mPreviousOffset;
    private boolean mPositionHasChanged;
    private java.lang.Runnable mActionPopupShower;
    private int mMinSize;
    private static final int HISTORY_SIZE;
    private static final int TOUCH_UP_FILTER_DELAY_AFTER;
    private static final int TOUCH_UP_FILTER_DELAY_BEFORE;
    private final long[] mPreviousOffsetsTimes;
    private final int[] mPreviousOffsets;
    private int mPreviousOffsetIndex;
    private int mNumberPreviousOffsets;
    final android.widget.Editor this$0;

    public void <init>(android.widget.Editor, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.Editor$HandleView r0;
        android.widget.Editor r1;
        android.graphics.drawable.Drawable r2, r3;
        int i0, $i1;
        android.widget.TextView $r4, $r9, $r16;
        android.content.Context $r5, $r10, $r15;
        long[] $r6;
        int[] $r7;
        android.widget.PopupWindow $r8, $r11, $r12, $r13, $r14;
        android.content.res.Resources $r17;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.Editor$HandleView;

        r1 := @parameter0: android.widget.Editor;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r0.<android.widget.Editor$HandleView: android.widget.Editor this$0> = r1;

        $r4 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>(r1);

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r5);

        r0.<android.widget.Editor$HandleView: int mPreviousOffset> = -1;

        r0.<android.widget.Editor$HandleView: boolean mPositionHasChanged> = 1;

        $r6 = newarray (long)[5];

        r0.<android.widget.Editor$HandleView: long[] mPreviousOffsetsTimes> = $r6;

        $r7 = newarray (int)[5];

        r0.<android.widget.Editor$HandleView: int[] mPreviousOffsets> = $r7;

        r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex> = 0;

        r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets> = 0;

        $r8 = new android.widget.PopupWindow;

        $r9 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>(r1);

        $r10 = virtualinvoke $r9.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r8.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>($r10, null, 16843464);

        r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer> = $r8;

        $r11 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r11.<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>(1);

        $r12 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r12.<android.widget.PopupWindow: void setClippingEnabled(boolean)>(0);

        $r13 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r13.<android.widget.PopupWindow: void setWindowLayoutType(int)>(1002);

        $r14 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r14.<android.widget.PopupWindow: void setContentView(android.view.View)>(r0);

        r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawableLtr> = r2;

        r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawableRtl> = r3;

        $r16 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>(r1);

        $r15 = virtualinvoke $r16.<android.widget.TextView: android.content.Context getContext()>();

        $r17 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r17.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105052);

        r0.<android.widget.Editor$HandleView: int mMinSize> = $i1;

        virtualinvoke r0.<android.widget.Editor$HandleView: void updateDrawable()>();

        i0 = specialinvoke r0.<android.widget.Editor$HandleView: int getPreferredHeight()>();

        $f0 = (float) i0;

        $f2 = -0.3F * $f0;

        r0.<android.widget.Editor$HandleView: float mTouchOffsetY> = $f2;

        $f1 = (float) i0;

        $f3 = 0.7F * $f1;

        r0.<android.widget.Editor$HandleView: float mIdealVerticalOffset> = $f3;

        return;
    }

    protected void updateDrawable()
    {
        android.widget.Editor$HandleView r0;
        int i0, $i1, $i2;
        boolean z0;
        android.widget.Editor $r1;
        android.widget.TextView $r2;
        android.text.Layout $r3;
        android.graphics.drawable.Drawable $r4, $r5;

        r0 := @this: android.widget.Editor$HandleView;

        i0 = virtualinvoke r0.<android.widget.Editor$HandleView: int getCurrentCursorOffset()>();

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: android.text.Layout getLayout()>();

        z0 = virtualinvoke $r3.<android.text.Layout: boolean isRtlCharAt(int)>(i0);

        if z0 == 0 goto label1;

        $r4 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawableRtl>;

        goto label2;

     label1:
        $r4 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawableLtr>;

     label2:
        r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable> = $r4;

        $r5 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        $i1 = virtualinvoke r0.<android.widget.Editor$HandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>($r5, z0);

        r0.<android.widget.Editor$HandleView: int mHotspotX> = $i1;

        $i2 = virtualinvoke r0.<android.widget.Editor$HandleView: int getHorizontalGravity(boolean)>(z0);

        r0.<android.widget.Editor$HandleView: int mHorizontalGravity> = $i2;

        return;
    }

    protected abstract int getHotspotX(android.graphics.drawable.Drawable, boolean);

    protected abstract int getHorizontalGravity(boolean);

    private void startTouchUpFilter(int)
    {
        android.widget.Editor$HandleView r0;
        int i0;

        r0 := @this: android.widget.Editor$HandleView;

        i0 := @parameter0: int;

        r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets> = 0;

        specialinvoke r0.<android.widget.Editor$HandleView: void addPositionToTouchUpFilter(int)>(i0);

        return;
    }

    private void addPositionToTouchUpFilter(int)
    {
        android.widget.Editor$HandleView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;
        int[] $r1;
        long[] $r2;
        long $l6;

        r0 := @this: android.widget.Editor$HandleView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex>;

        $i2 = $i1 + 1;

        $i3 = $i2 % 5;

        r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex> = $i3;

        $r1 = r0.<android.widget.Editor$HandleView: int[] mPreviousOffsets>;

        $i4 = r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex>;

        $r1[$i4] = i0;

        $r2 = r0.<android.widget.Editor$HandleView: long[] mPreviousOffsetsTimes>;

        $i5 = r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex>;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2[$i5] = $l6;

        $i7 = r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets>;

        $i8 = $i7 + 1;

        r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets> = $i8;

        return;
    }

    private void filterOnTouchUp()
    {
        android.widget.Editor$HandleView r0;
        long l0, $l5, $l6, $l9, $l10;
        int i1, i2, i3, $i4, $i8, $i11, $i13, $i14;
        long[] $r1, $r3;
        byte $b7, $b12;
        int[] $r2;

        r0 := @this: android.widget.Editor$HandleView;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i1 = 0;

        i2 = r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex>;

        $i4 = r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets>;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i4, 5);

     label1:
        if i1 >= i3 goto label2;

        $r3 = r0.<android.widget.Editor$HandleView: long[] mPreviousOffsetsTimes>;

        $l10 = $r3[i2];

        $l9 = l0 - $l10;

        $b12 = $l9 cmp 150L;

        if $b12 >= 0 goto label2;

        i1 = i1 + 1;

        $i11 = r0.<android.widget.Editor$HandleView: int mPreviousOffsetIndex>;

        $i14 = $i11 - i1;

        $i13 = $i14 + 5;

        i2 = $i13 % 5;

        goto label1;

     label2:
        if i1 <= 0 goto label3;

        if i1 >= i3 goto label3;

        $r1 = r0.<android.widget.Editor$HandleView: long[] mPreviousOffsetsTimes>;

        $l5 = $r1[i2];

        $l6 = l0 - $l5;

        $b7 = $l6 cmp 350L;

        if $b7 <= 0 goto label3;

        $r2 = r0.<android.widget.Editor$HandleView: int[] mPreviousOffsets>;

        $i8 = $r2[i2];

        virtualinvoke r0.<android.widget.Editor$HandleView: void positionAtCursorOffset(int,boolean)>($i8, 0);

     label3:
        return;
    }

    public boolean offsetHasBeenChanged()
    {
        android.widget.Editor$HandleView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.Editor$HandleView;

        $i0 = r0.<android.widget.Editor$HandleView: int mNumberPreviousOffsets>;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void onMeasure(int, int)
    {
        int $i0, i1, i2, $i3;
        android.widget.Editor$HandleView r0;

        r0 := @this: android.widget.Editor$HandleView;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i3 = specialinvoke r0.<android.widget.Editor$HandleView: int getPreferredWidth()>();

        $i0 = specialinvoke r0.<android.widget.Editor$HandleView: int getPreferredHeight()>();

        virtualinvoke r0.<android.widget.Editor$HandleView: void setMeasuredDimension(int,int)>($i3, $i0);

        return;
    }

    private int getPreferredWidth()
    {
        android.widget.Editor$HandleView r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.Editor$HandleView;

        $r1 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = r0.<android.widget.Editor$HandleView: int mMinSize>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    private int getPreferredHeight()
    {
        android.widget.Editor$HandleView r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.Editor$HandleView;

        $r1 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i1 = r0.<android.widget.Editor$HandleView: int mMinSize>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public void show()
    {
        android.widget.Editor$HandleView r0;
        boolean $z0;
        android.widget.Editor $r1;
        android.widget.Editor$PositionListener $r2;
        int $i0;

        r0 := @this: android.widget.Editor$HandleView;

        $z0 = virtualinvoke r0.<android.widget.Editor$HandleView: boolean isShowing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.Editor$PositionListener access$1400(android.widget.Editor)>($r1);

        virtualinvoke $r2.<android.widget.Editor$PositionListener: void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean)>(r0, 1);

        r0.<android.widget.Editor$HandleView: int mPreviousOffset> = -1;

        $i0 = virtualinvoke r0.<android.widget.Editor$HandleView: int getCurrentCursorOffset()>();

        virtualinvoke r0.<android.widget.Editor$HandleView: void positionAtCursorOffset(int,boolean)>($i0, 0);

        virtualinvoke r0.<android.widget.Editor$HandleView: void hideActionPopupWindow()>();

        return;
    }

    protected void dismiss()
    {
        android.widget.Editor$HandleView r0;
        android.widget.PopupWindow $r1;

        r0 := @this: android.widget.Editor$HandleView;

        r0.<android.widget.Editor$HandleView: boolean mIsDragging> = 0;

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r1.<android.widget.PopupWindow: void dismiss()>();

        virtualinvoke r0.<android.widget.Editor$HandleView: void onDetached()>();

        return;
    }

    public void hide()
    {
        android.widget.Editor$HandleView r0;
        android.widget.Editor $r1;
        android.widget.Editor$PositionListener $r2;

        r0 := @this: android.widget.Editor$HandleView;

        virtualinvoke r0.<android.widget.Editor$HandleView: void dismiss()>();

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.Editor$PositionListener access$1400(android.widget.Editor)>($r1);

        virtualinvoke $r2.<android.widget.Editor$PositionListener: void removeSubscriber(android.widget.Editor$TextViewPositionListener)>(r0);

        return;
    }

    void showActionPopupWindow(int)
    {
        android.widget.Editor$HandleView r0;
        int i0;
        android.widget.Editor$ActionPopupWindow $r1, $r10;
        java.lang.Runnable $r2, $r5, $r8;
        android.widget.Editor $r3, $r6, $r11;
        android.widget.TextView $r4, $r7;
        long $l1;
        android.widget.Editor$HandleView$1 $r9;

        r0 := @this: android.widget.Editor$HandleView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor$ActionPopupWindow mActionPopupWindow>;

        if $r1 != null goto label1;

        $r10 = new android.widget.Editor$ActionPopupWindow;

        $r11 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        specialinvoke $r10.<android.widget.Editor$ActionPopupWindow: void <init>(android.widget.Editor,android.widget.Editor$1)>($r11, null);

        r0.<android.widget.Editor$HandleView: android.widget.Editor$ActionPopupWindow mActionPopupWindow> = $r10;

     label1:
        $r2 = r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower>;

        if $r2 != null goto label2;

        $r9 = new android.widget.Editor$HandleView$1;

        specialinvoke $r9.<android.widget.Editor$HandleView$1: void <init>(android.widget.Editor$HandleView)>(r0);

        r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower> = $r9;

        goto label3;

     label2:
        $r3 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r4 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r3);

        $r5 = r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower>;

        virtualinvoke $r4.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r5);

     label3:
        $r6 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r7 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r6);

        $r8 = r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower>;

        $l1 = (long) i0;

        virtualinvoke $r7.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r8, $l1);

        return;
    }

    protected void hideActionPopupWindow()
    {
        android.widget.Editor$HandleView r0;
        java.lang.Runnable $r1, $r6;
        android.widget.Editor$ActionPopupWindow $r2, $r3;
        android.widget.Editor $r4;
        android.widget.TextView $r5;

        r0 := @this: android.widget.Editor$HandleView;

        $r1 = r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r5 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r4);

        $r6 = r0.<android.widget.Editor$HandleView: java.lang.Runnable mActionPopupShower>;

        virtualinvoke $r5.<android.widget.TextView: boolean removeCallbacks(java.lang.Runnable)>($r6);

     label1:
        $r2 = r0.<android.widget.Editor$HandleView: android.widget.Editor$ActionPopupWindow mActionPopupWindow>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.Editor$HandleView: android.widget.Editor$ActionPopupWindow mActionPopupWindow>;

        virtualinvoke $r3.<android.widget.Editor$ActionPopupWindow: void hide()>();

     label2:
        return;
    }

    public boolean isShowing()
    {
        android.widget.Editor$HandleView r0;
        android.widget.PopupWindow $r1;
        boolean $z0;

        r0 := @this: android.widget.Editor$HandleView;

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        $z0 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        return $z0;
    }

    private boolean isVisible()
    {
        android.widget.Editor$HandleView r0;
        boolean $z0, $z1, $z2;
        android.widget.Editor $r1, $r3;
        android.widget.TextView $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: android.widget.Editor$HandleView;

        $z0 = r0.<android.widget.Editor$HandleView: boolean mIsDragging>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r2 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r1);

        $z1 = virtualinvoke $r2.<android.widget.TextView: boolean isInBatchEditMode()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $i1 = r0.<android.widget.Editor$HandleView: int mPositionX>;

        $i0 = r0.<android.widget.Editor$HandleView: int mHotspotX>;

        $i2 = $i1 + $i0;

        $f1 = (float) $i2;

        $i3 = r0.<android.widget.Editor$HandleView: int mPositionY>;

        $f0 = (float) $i3;

        $z2 = staticinvoke <android.widget.Editor: boolean access$2600(android.widget.Editor,float,float)>($r3, $f1, $f0);

        return $z2;
    }

    public abstract int getCurrentCursorOffset();

    protected abstract void updateSelection(int);

    public abstract void updatePosition(float, float);

    protected void positionAtCursorOffset(int, boolean)
    {
        android.widget.Editor$HandleView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, z1, $z2;
        android.text.Layout r1;
        android.widget.Editor $r2, $r4, $r6, $r8;
        android.widget.TextView $r3, $r5, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.widget.Editor$HandleView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r3 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r2);

        r1 = virtualinvoke $r3.<android.widget.TextView: android.text.Layout getLayout()>();

        if r1 != null goto label1;

        $r8 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        virtualinvoke $r8.<android.widget.Editor: void prepareCursorControllers()>();

        return;

     label1:
        $i2 = r0.<android.widget.Editor$HandleView: int mPreviousOffset>;

        if i0 == $i2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z1 = $z2;

        if z1 != 0 goto label4;

        if z0 == 0 goto label6;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<android.widget.Editor$HandleView: void updateSelection(int)>(i0);

        specialinvoke r0.<android.widget.Editor$HandleView: void addPositionToTouchUpFilter(int)>(i0);

     label5:
        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $f2 = $f0 - 0.5F;

        $i3 = r0.<android.widget.Editor$HandleView: int mHotspotX>;

        $f1 = (float) $i3;

        $f3 = $f2 - $f1;

        $i4 = specialinvoke r0.<android.widget.Editor$HandleView: int getHorizontalOffset()>();

        $f4 = (float) $i4;

        $f5 = $f3 - $f4;

        $i5 = virtualinvoke r0.<android.widget.Editor$HandleView: int getCursorOffset()>();

        $f7 = (float) $i5;

        $f6 = $f5 + $f7;

        $i7 = (int) $f6;

        r0.<android.widget.Editor$HandleView: int mPositionX> = $i7;

        $i6 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i1);

        r0.<android.widget.Editor$HandleView: int mPositionY> = $i6;

        $i8 = r0.<android.widget.Editor$HandleView: int mPositionX>;

        $r4 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r5 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r4);

        $i9 = virtualinvoke $r5.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i10 = $i8 + $i9;

        r0.<android.widget.Editor$HandleView: int mPositionX> = $i10;

        $i11 = r0.<android.widget.Editor$HandleView: int mPositionY>;

        $r6 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r7 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r6);

        $i12 = virtualinvoke $r7.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i13 = $i11 + $i12;

        r0.<android.widget.Editor$HandleView: int mPositionY> = $i13;

        r0.<android.widget.Editor$HandleView: int mPreviousOffset> = i0;

        r0.<android.widget.Editor$HandleView: boolean mPositionHasChanged> = 1;

     label6:
        return;
    }

    public void updatePosition(int, int, boolean, boolean)
    {
        android.widget.Editor$HandleView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.widget.Editor $r1;
        android.widget.PopupWindow $r2, $r3;
        android.widget.TextView $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.widget.Editor$HandleView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i4 = virtualinvoke r0.<android.widget.Editor$HandleView: int getCurrentCursorOffset()>();

        virtualinvoke r0.<android.widget.Editor$HandleView: void positionAtCursorOffset(int,boolean)>($i4, z1);

        if z0 != 0 goto label1;

        $z6 = r0.<android.widget.Editor$HandleView: boolean mPositionHasChanged>;

        if $z6 == 0 goto label9;

     label1:
        $z2 = r0.<android.widget.Editor$HandleView: boolean mIsDragging>;

        if $z2 == 0 goto label4;

        $i8 = r0.<android.widget.Editor$HandleView: int mLastParentX>;

        if i0 != $i8 goto label2;

        $i12 = r0.<android.widget.Editor$HandleView: int mLastParentY>;

        if i1 == $i12 goto label3;

     label2:
        $f2 = r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetX>;

        $i7 = r0.<android.widget.Editor$HandleView: int mLastParentX>;

        $i9 = i0 - $i7;

        $f0 = (float) $i9;

        $f1 = $f2 + $f0;

        r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetX> = $f1;

        $f3 = r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY>;

        $i11 = r0.<android.widget.Editor$HandleView: int mLastParentY>;

        $i10 = i1 - $i11;

        $f4 = (float) $i10;

        $f5 = $f3 + $f4;

        r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY> = $f5;

        r0.<android.widget.Editor$HandleView: int mLastParentX> = i0;

        r0.<android.widget.Editor$HandleView: int mLastParentY> = i1;

     label3:
        virtualinvoke r0.<android.widget.Editor$HandleView: void onHandleMoved()>();

     label4:
        $z3 = specialinvoke r0.<android.widget.Editor$HandleView: boolean isVisible()>();

        if $z3 == 0 goto label7;

        $i5 = r0.<android.widget.Editor$HandleView: int mPositionX>;

        i2 = i0 + $i5;

        $i6 = r0.<android.widget.Editor$HandleView: int mPositionY>;

        i3 = i1 + $i6;

        $z5 = virtualinvoke r0.<android.widget.Editor$HandleView: boolean isShowing()>();

        if $z5 == 0 goto label5;

        $r3 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        virtualinvoke $r3.<android.widget.PopupWindow: void update(int,int,int,int)>(i2, i3, -1, -1);

        goto label6;

     label5:
        $r2 = r0.<android.widget.Editor$HandleView: android.widget.PopupWindow mContainer>;

        $r1 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        $r4 = staticinvoke <android.widget.Editor: android.widget.TextView access$700(android.widget.Editor)>($r1);

        virtualinvoke $r2.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>($r4, 0, i2, i3);

     label6:
        goto label8;

     label7:
        $z4 = virtualinvoke r0.<android.widget.Editor$HandleView: boolean isShowing()>();

        if $z4 == 0 goto label8;

        virtualinvoke r0.<android.widget.Editor$HandleView: void dismiss()>();

     label8:
        r0.<android.widget.Editor$HandleView: boolean mPositionHasChanged> = 0;

     label9:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.Editor$HandleView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.Editor$HandleView;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i1 = specialinvoke r0.<android.widget.Editor$HandleView: int getHorizontalOffset()>();

        $r4 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        $i2 = i1 + i0;

        $r3 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        $i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i1, 0, $i2, $i3);

        $r5 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    private int getHorizontalOffset()
    {
        android.widget.Editor$HandleView r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.Editor$HandleView;

        i0 = specialinvoke r0.<android.widget.Editor$HandleView: int getPreferredWidth()>();

        $r1 = r0.<android.widget.Editor$HandleView: android.graphics.drawable.Drawable mDrawable>;

        i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = r0.<android.widget.Editor$HandleView: int mHorizontalGravity>;

        lookupswitch($i3)
        {
            case 3: goto label1;
            case 5: goto label3;
            case 17: goto label2;
            default: goto label2;
        };

     label1:
        i2 = 0;

        goto label4;

     label2:
        $i4 = i0 - i1;

        i2 = $i4 / 2;

        goto label4;

     label3:
        i2 = i0 - i1;

     label4:
        return i2;
    }

    protected int getCursorOffset()
    {
        android.widget.Editor$HandleView r0;

        r0 := @this: android.widget.Editor$HandleView;

        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Editor$HandleView r0;
        android.view.MotionEvent r1;
        android.widget.Editor$PositionListener r2;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, f29, f30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11;
        android.widget.Editor $r3;
        byte $b9;

        r0 := @this: android.widget.Editor$HandleView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        $i1 = virtualinvoke r0.<android.widget.Editor$HandleView: int getCurrentCursorOffset()>();

        specialinvoke r0.<android.widget.Editor$HandleView: void startTouchUpFilter(int)>($i1);

        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $i2 = r0.<android.widget.Editor$HandleView: int mPositionX>;

        $f7 = (float) $i2;

        $f8 = $f6 - $f7;

        r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetX> = $f8;

        $f9 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $i3 = r0.<android.widget.Editor$HandleView: int mPositionY>;

        $f10 = (float) $i3;

        $f11 = $f9 - $f10;

        r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY> = $f11;

        $r3 = r0.<android.widget.Editor$HandleView: android.widget.Editor this$0>;

        r2 = staticinvoke <android.widget.Editor: android.widget.Editor$PositionListener access$1400(android.widget.Editor)>($r3);

        $i4 = virtualinvoke r2.<android.widget.Editor$PositionListener: int getPositionX()>();

        r0.<android.widget.Editor$HandleView: int mLastParentX> = $i4;

        $i5 = virtualinvoke r2.<android.widget.Editor$PositionListener: int getPositionY()>();

        r0.<android.widget.Editor$HandleView: int mLastParentY> = $i5;

        r0.<android.widget.Editor$HandleView: boolean mIsDragging> = 1;

        goto label7;

     label2:
        f28 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f12 = r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY>;

        $i6 = r0.<android.widget.Editor$HandleView: int mLastParentY>;

        $f13 = (float) $i6;

        f1 = $f12 - $f13;

        $i7 = r0.<android.widget.Editor$HandleView: int mPositionY>;

        $f14 = (float) $i7;

        $f17 = f0 - $f14;

        $i8 = r0.<android.widget.Editor$HandleView: int mLastParentY>;

        $f15 = (float) $i8;

        f2 = $f17 - $f15;

        $f18 = r0.<android.widget.Editor$HandleView: float mIdealVerticalOffset>;

        $b9 = f1 cmpg $f18;

        if $b9 >= 0 goto label3;

        $f27 = r0.<android.widget.Editor$HandleView: float mIdealVerticalOffset>;

        f3 = staticinvoke <java.lang.Math: float min(float,float)>(f2, $f27);

        f29 = staticinvoke <java.lang.Math: float max(float,float)>(f3, f1);

        goto label4;

     label3:
        $f16 = r0.<android.widget.Editor$HandleView: float mIdealVerticalOffset>;

        f30 = staticinvoke <java.lang.Math: float max(float,float)>(f2, $f16);

        f29 = staticinvoke <java.lang.Math: float min(float,float)>(f30, f1);

     label4:
        $i10 = r0.<android.widget.Editor$HandleView: int mLastParentY>;

        $f19 = (float) $i10;

        $f21 = f29 + $f19;

        r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY> = $f21;

        $f22 = r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetX>;

        $f25 = f28 - $f22;

        $i11 = r0.<android.widget.Editor$HandleView: int mHotspotX>;

        $f20 = (float) $i11;

        f4 = $f25 + $f20;

        $f26 = r0.<android.widget.Editor$HandleView: float mTouchToWindowOffsetY>;

        $f24 = f0 - $f26;

        $f23 = r0.<android.widget.Editor$HandleView: float mTouchOffsetY>;

        f5 = $f24 + $f23;

        virtualinvoke r0.<android.widget.Editor$HandleView: void updatePosition(float,float)>(f4, f5);

        goto label7;

     label5:
        specialinvoke r0.<android.widget.Editor$HandleView: void filterOnTouchUp()>();

        r0.<android.widget.Editor$HandleView: boolean mIsDragging> = 0;

        goto label7;

     label6:
        r0.<android.widget.Editor$HandleView: boolean mIsDragging> = 0;

     label7:
        return 1;
    }

    public boolean isDragging()
    {
        android.widget.Editor$HandleView r0;
        boolean $z0;

        r0 := @this: android.widget.Editor$HandleView;

        $z0 = r0.<android.widget.Editor$HandleView: boolean mIsDragging>;

        return $z0;
    }

    void onHandleMoved()
    {
        android.widget.Editor$HandleView r0;

        r0 := @this: android.widget.Editor$HandleView;

        virtualinvoke r0.<android.widget.Editor$HandleView: void hideActionPopupWindow()>();

        return;
    }

    public void onDetached()
    {
        android.widget.Editor$HandleView r0;

        r0 := @this: android.widget.Editor$HandleView;

        virtualinvoke r0.<android.widget.Editor$HandleView: void hideActionPopupWindow()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.Editor$HandleView: int TOUCH_UP_FILTER_DELAY_BEFORE> = 350;

        <android.widget.Editor$HandleView: int TOUCH_UP_FILTER_DELAY_AFTER> = 150;

        <android.widget.Editor$HandleView: int HISTORY_SIZE> = 5;

        return;
    }
}
