final class android.speech.tts.SynthesisPlaybackQueueItem extends android.speech.tts.PlaybackQueueItem
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final long MAX_UNCONSUMED_AUDIO_MS;
    private final java.util.concurrent.locks.Lock mListLock;
    private final java.util.concurrent.locks.Condition mReadReady;
    private final java.util.concurrent.locks.Condition mNotFull;
    private final java.util.LinkedList mDataBufferList;
    private int mUnconsumedBytes;
    private volatile boolean mStopped;
    private volatile boolean mDone;
    private volatile int mStatusCode;
    private final android.speech.tts.BlockingAudioTrack mAudioTrack;
    private final android.speech.tts.AbstractEventLogger mLogger;

    void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams, int, int, int, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.AbstractEventLogger)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$AudioOutputParams r1;
        int i0, i1, i2;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r2;
        java.lang.Object r3;
        android.speech.tts.AbstractEventLogger r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.concurrent.locks.Lock $r6, $r8;
        java.util.concurrent.locks.Condition $r7, $r9;
        java.util.LinkedList $r10;
        android.speech.tts.BlockingAudioTrack $r11;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$AudioOutputParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r3 := @parameter5: java.lang.Object;

        r4 := @parameter6: android.speech.tts.AbstractEventLogger;

        specialinvoke r0.<android.speech.tts.PlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object)>(r2, r3);

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock> = $r5;

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady> = $r7;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull> = $r9;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList> = $r10;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode> = 0;

        $r11 = new android.speech.tts.BlockingAudioTrack;

        specialinvoke $r11.<android.speech.tts.BlockingAudioTrack: void <init>(android.speech.tts.TextToSpeechService$AudioOutputParams,int,int,int)>(r1, i0, i1, i2);

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack> = $r11;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger> = r4;

        return;
    }

    public void run()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r1;
        android.speech.tts.BlockingAudioTrack $r2, $r4, $r6;
        boolean $z0;
        byte[] $r3, r9;
        int $i0, $i1, $i2, $i3;
        android.speech.tts.AbstractEventLogger $r5, $r7;
        java.lang.InterruptedException $r8;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 = virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStart()>();

        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $z0 = virtualinvoke $r2.<android.speech.tts.BlockingAudioTrack: boolean init()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>(-5);

        return;

     label1:
        $r3 = specialinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: byte[] take()>();

        r9 = $r3;

        if $r3 == null goto label2;

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r6.<android.speech.tts.BlockingAudioTrack: int write(byte[])>(r9);

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger>;

        virtualinvoke $r7.<android.speech.tts.AbstractEventLogger: void onAudioDataWritten()>();

        goto label1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: void waitAndRelease()>();

        $i0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        if $i0 != 0 goto label5;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnSuccess()>();

        goto label7;

     label5:
        $i1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        if $i1 != -2 goto label6;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStop()>();

        goto label7;

     label6:
        $i2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError(int)>($i2);

     label7:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.AbstractEventLogger mLogger>;

        $i3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode>;

        virtualinvoke $r5.<android.speech.tts.AbstractEventLogger: void onCompleted(int)>($i3);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    void stop(int)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        int i0;
        java.lang.Throwable r1, $r7;
        java.util.concurrent.locks.Lock $r2, $r5, $r8;
        java.util.concurrent.locks.Condition $r3, $r4;
        android.speech.tts.BlockingAudioTrack $r6;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mStatusCode> = i0;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

     label4:
        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

     label5:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r6.<android.speech.tts.BlockingAudioTrack: void stop()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void done()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.lang.Throwable r1, $r6;
        java.util.concurrent.locks.Lock $r2, $r5, $r7;
        java.util.concurrent.locks.Condition $r3, $r4;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 1;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

     label4:
        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void put(byte[]) throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        byte[] r1;
        java.lang.Throwable r2, $r12;
        java.util.concurrent.locks.Lock $r3, $r8, $r9, $r11;
        int $i1, $i4, $i5, $i6;
        android.speech.tts.BlockingAudioTrack $r4;
        long $l2;
        byte $b3;
        boolean $z0, $z2;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry $r5;
        java.util.LinkedList $r6;
        java.util.concurrent.locks.Condition $r7, $r10;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 := @parameter0: byte[];

     label1:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $i1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $l2 = virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)>($i1);

        $b3 = $l2 cmp 500L;

        if $b3 <= 0 goto label3;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z2 != 0 goto label3;

        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Condition: void await()>();

        goto label2;

     label3:
        $z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z0 == 0 goto label5;

     label4:
        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $r5 = new android.speech.tts.SynthesisPlaybackQueueItem$ListEntry;

        specialinvoke $r5.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: void <init>(byte[])>(r1);

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);

        $i5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $i4 = lengthof r1;

        $i6 = $i5 + $i4;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i6;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

     label6:
        $r9 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label9;

     label7:
        $r12 := @caughtexception;

        r2 = $r12;

     label8:
        $r11 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private byte[] take() throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.lang.Throwable r1, $r11;
        java.util.concurrent.locks.Lock $r2, $r8, $r9, $r10, $r13;
        java.util.LinkedList $r3, $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        byte[] $r6, r15;
        java.util.concurrent.locks.Condition $r7, $r12;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry r14;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label01:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i0 != 0 goto label03;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z2 != 0 goto label03;

        $z1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone>;

        if $z1 != 0 goto label03;

        $r12 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Condition: void await()>();

        goto label02;

     label03:
        $z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z0 == 0 goto label05;

     label04:
        $r9 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label05:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object poll()>();

        r14 = (android.speech.tts.SynthesisPlaybackQueueItem$ListEntry) $r5;

        if r14 != null goto label07;

     label06:
        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label07:
        $i2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $r6 = r14.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

        $i1 = lengthof $r6;

        $i3 = $i2 - $i1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i3;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

        r15 = r14.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

     label08:
        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return r15;

     label09:
        $r11 := @caughtexception;

        r1 = $r11;

     label10:
        $r13 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void <clinit>()
    {
        <android.speech.tts.SynthesisPlaybackQueueItem: long MAX_UNCONSUMED_AUDIO_MS> = 500L;

        <android.speech.tts.SynthesisPlaybackQueueItem: boolean DBG> = 0;

        <android.speech.tts.SynthesisPlaybackQueueItem: java.lang.String TAG> = "TTS.SynthQueueItem";

        return;
    }
}
