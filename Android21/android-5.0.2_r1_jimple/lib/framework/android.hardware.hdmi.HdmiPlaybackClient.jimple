public final class android.hardware.hdmi.HdmiPlaybackClient extends android.hardware.hdmi.HdmiClient
{
    private static final java.lang.String TAG;

    void <init>(android.hardware.hdmi.IHdmiControlService)
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;
        android.hardware.hdmi.IHdmiControlService r1;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        r1 := @parameter0: android.hardware.hdmi.IHdmiControlService;

        specialinvoke r0.<android.hardware.hdmi.HdmiClient: void <init>(android.hardware.hdmi.IHdmiControlService)>(r1);

        return;
    }

    public void oneTouchPlay(android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback)
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;
        android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback r1;
        android.os.RemoteException r2, $r5;
        android.hardware.hdmi.IHdmiControlService $r3;
        android.hardware.hdmi.IHdmiControlCallback $r4;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        r1 := @parameter0: android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback;

     label1:
        $r3 = r0.<android.hardware.hdmi.HdmiPlaybackClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r4 = specialinvoke r0.<android.hardware.hdmi.HdmiPlaybackClient: android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback)>(r1);

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlService: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiPlaybackClient", "oneTouchPlay threw exception ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getDeviceType()
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        return 4;
    }

    public void queryDisplayStatus(android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback)
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;
        android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback r1;
        android.os.RemoteException r2, $r5;
        android.hardware.hdmi.IHdmiControlService $r3;
        android.hardware.hdmi.IHdmiControlCallback $r4;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        r1 := @parameter0: android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback;

     label1:
        $r3 = r0.<android.hardware.hdmi.HdmiPlaybackClient: android.hardware.hdmi.IHdmiControlService mService>;

        $r4 = specialinvoke r0.<android.hardware.hdmi.HdmiPlaybackClient: android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback)>(r1);

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlService: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("HdmiPlaybackClient", "queryDisplayStatus threw exception ", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback)
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;
        android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback r1;
        android.hardware.hdmi.HdmiPlaybackClient$1 $r2;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        r1 := @parameter0: android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback;

        $r2 = new android.hardware.hdmi.HdmiPlaybackClient$1;

        specialinvoke $r2.<android.hardware.hdmi.HdmiPlaybackClient$1: void <init>(android.hardware.hdmi.HdmiPlaybackClient,android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback)>(r0, r1);

        return $r2;
    }

    private android.hardware.hdmi.IHdmiControlCallback getCallbackWrapper(android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback)
    {
        android.hardware.hdmi.HdmiPlaybackClient r0;
        android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback r1;
        android.hardware.hdmi.HdmiPlaybackClient$2 $r2;

        r0 := @this: android.hardware.hdmi.HdmiPlaybackClient;

        r1 := @parameter0: android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback;

        $r2 = new android.hardware.hdmi.HdmiPlaybackClient$2;

        specialinvoke $r2.<android.hardware.hdmi.HdmiPlaybackClient$2: void <init>(android.hardware.hdmi.HdmiPlaybackClient,android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback)>(r0, r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <android.hardware.hdmi.HdmiPlaybackClient: java.lang.String TAG> = "HdmiPlaybackClient";

        return;
    }
}
