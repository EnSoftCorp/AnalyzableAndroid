public final class android.content.res.Resources$Theme extends java.lang.Object
{
    private final android.content.res.AssetManager mAssets;
    private final long mTheme;
    private int mThemeResId;
    private java.lang.String mKey;
    final android.content.res.Resources this$0;

    public void applyStyle(int, boolean)
    {
        android.content.res.Resources$Theme r0;
        int i0;
        boolean z0;
        long $l1;
        java.lang.StringBuilder $r1, $r3, $r5, $r6;
        java.lang.String $r2, $r4, $r7, $r8;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        staticinvoke <android.content.res.AssetManager: void applyThemeStyle(long,int,boolean)>($l1, i0, z0);

        r0.<android.content.res.Resources$Theme: int mThemeResId> = i0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.content.res.Resources$Theme: java.lang.String mKey>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        if z0 == 0 goto label1;

        $r8 = "! ";

        goto label2;

     label1:
        $r8 = " ";

     label2:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.content.res.Resources$Theme: java.lang.String mKey> = $r7;

        return;
    }

    public void setTo(android.content.res.Resources$Theme)
    {
        android.content.res.Resources$Theme r0, r1;
        long $l0, $l1;
        int $i2;
        java.lang.String $r2;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        $l0 = r1.<android.content.res.Resources$Theme: long mTheme>;

        staticinvoke <android.content.res.AssetManager: void copyTheme(long,long)>($l1, $l0);

        $i2 = r1.<android.content.res.Resources$Theme: int mThemeResId>;

        r0.<android.content.res.Resources$Theme: int mThemeResId> = $i2;

        $r2 = r1.<android.content.res.Resources$Theme: java.lang.String mKey>;

        r0.<android.content.res.Resources$Theme: java.lang.String mKey> = $r2;

        return;
    }

    public android.content.res.TypedArray obtainStyledAttributes(int[])
    {
        android.content.res.Resources$Theme r0;
        int[] r1, $r4, $r5;
        int i0;
        android.content.res.TypedArray r2;
        android.content.res.Resources $r3;
        long $l1;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: int[];

        i0 = lengthof r1;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r2 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r3, i0);

        r2.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r0;

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        $r5 = r2.<android.content.res.TypedArray: int[] mData>;

        $r4 = r2.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(long,int,int,long,int[],int[],int[])>($l1, 0, 0, 0L, r1, $r5, $r4);

        return r2;
    }

    public android.content.res.TypedArray obtainStyledAttributes(int, int[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources$Theme r0;
        int i0, i1;
        int[] r1, $r4, $r5;
        android.content.res.TypedArray r2;
        android.content.res.Resources $r3;
        long $l2;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 = lengthof r1;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r2 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r3, i1);

        r2.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r0;

        $l2 = r0.<android.content.res.Resources$Theme: long mTheme>;

        $r5 = r2.<android.content.res.TypedArray: int[] mData>;

        $r4 = r2.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(long,int,int,long,int[],int[],int[])>($l2, 0, i0, 0L, r1, $r5, $r4);

        return r2;
    }

    public android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[], int, int)
    {
        android.content.res.Resources$Theme r0;
        android.util.AttributeSet r1;
        int[] r2, $r6, $r7;
        int i0, i1, i2;
        android.content.res.TypedArray r3;
        android.content.res.XmlBlock$Parser r4;
        android.content.res.Resources $r5;
        long $l3, $l4;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = lengthof r2;

        $r5 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r3 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r5, i2);

        r4 = (android.content.res.XmlBlock$Parser) r1;

        $l3 = r0.<android.content.res.Resources$Theme: long mTheme>;

        if r4 == null goto label1;

        $l4 = r4.<android.content.res.XmlBlock$Parser: long mParseState>;

        goto label2;

     label1:
        $l4 = 0L;

     label2:
        $r7 = r3.<android.content.res.TypedArray: int[] mData>;

        $r6 = r3.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(long,int,int,long,int[],int[],int[])>($l3, i0, i1, $l4, r2, $r7, $r6);

        r3.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r0;

        r3.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = r4;

        return r3;
    }

    public android.content.res.TypedArray resolveAttributes(int[], int[])
    {
        android.content.res.Resources$Theme r0;
        int[] r1, r2, $r5, $r6;
        int i0, $i2;
        android.content.res.TypedArray r3;
        android.content.res.Resources $r4;
        long $l1;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 = lengthof r2;

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if i0 == $i2 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base attribute values must be null or the same length as attrs");

        throw $r7;

     label1:
        $r4 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r3 = staticinvoke <android.content.res.TypedArray: android.content.res.TypedArray obtain(android.content.res.Resources,int)>($r4, i0);

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        $r6 = r3.<android.content.res.TypedArray: int[] mData>;

        $r5 = r3.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean resolveAttrs(long,int,int,int[],int[],int[],int[])>($l1, 0, 0, r1, r2, $r6, $r5);

        r3.<android.content.res.TypedArray: android.content.res.Resources$Theme mTheme> = r0;

        r3.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = null;

        return r3;
    }

    public boolean resolveAttribute(int, android.util.TypedValue, boolean)
    {
        android.content.res.Resources$Theme r0;
        int i0;
        android.util.TypedValue r1;
        boolean z0, z1;
        long $l1;
        android.content.res.AssetManager $r2;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        z1 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getThemeValue(long,int,android.util.TypedValue,boolean)>($l1, i0, r1, z0);

        return z1;
    }

    public int[] getAllAttributes()
    {
        android.content.res.Resources$Theme r0;
        android.content.res.AssetManager $r1;
        int $i0;
        int[] $r2;

        r0 := @this: android.content.res.Resources$Theme;

        $r1 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $i0 = virtualinvoke r0.<android.content.res.Resources$Theme: int getAppliedStyleResId()>();

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: int[] getStyleAttributes(int)>($i0);

        return $r2;
    }

    public android.content.res.Resources getResources()
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources $r1;

        r0 := @this: android.content.res.Resources$Theme;

        $r1 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        return $r1;
    }

    public android.graphics.drawable.Drawable getDrawable(int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources$Theme r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i0, r0);

        return $r2;
    }

    public void dump(int, java.lang.String, java.lang.String)
    {
        android.content.res.Resources$Theme r0;
        int i0;
        java.lang.String r1, r2;
        long $l1;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $l1 = r0.<android.content.res.Resources$Theme: long mTheme>;

        staticinvoke <android.content.res.AssetManager: void dumpTheme(long,int,java.lang.String,java.lang.String)>($l1, i0, r1, r2);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.Resources$Theme r0;
        long $l0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.res.Resources$Theme;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $l0 = r0.<android.content.res.Resources$Theme: long mTheme>;

        virtualinvoke $r1.<android.content.res.AssetManager: void releaseTheme(long)>($l0);

        return;
    }

    void <init>(android.content.res.Resources)
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        android.content.res.AssetManager $r2, $r3;
        long $l0;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.content.res.Resources;

        r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.Resources$Theme: int mThemeResId> = 0;

        r0.<android.content.res.Resources$Theme: java.lang.String mKey> = "";

        $r2 = r1.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets> = $r2;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $l0 = virtualinvoke $r3.<android.content.res.AssetManager: long createTheme()>();

        r0.<android.content.res.Resources$Theme: long mTheme> = $l0;

        return;
    }

    long getNativeTheme()
    {
        android.content.res.Resources$Theme r0;
        long $l0;

        r0 := @this: android.content.res.Resources$Theme;

        $l0 = r0.<android.content.res.Resources$Theme: long mTheme>;

        return $l0;
    }

    int getAppliedStyleResId()
    {
        android.content.res.Resources$Theme r0;
        int $i0;

        r0 := @this: android.content.res.Resources$Theme;

        $i0 = r0.<android.content.res.Resources$Theme: int mThemeResId>;

        return $i0;
    }

    java.lang.String getKey()
    {
        android.content.res.Resources$Theme r0;
        java.lang.String $r1;

        r0 := @this: android.content.res.Resources$Theme;

        $r1 = r0.<android.content.res.Resources$Theme: java.lang.String mKey>;

        return $r1;
    }

    private java.lang.String getResourceNameFromHexString(java.lang.String)
    {
        android.content.res.Resources$Theme r0;
        java.lang.String r1, $r3;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r1, 16);

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

        return $r3;
    }

    public java.lang.String[] getTheme()
    {
        android.content.res.Resources$Theme r0;
        java.lang.String[] r1, r2;
        java.lang.String r3, $r4, $r5, $r6, $r7;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.content.res.Resources$Theme;

        $r4 = r0.<android.content.res.Resources$Theme: java.lang.String mKey>;

        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i2 = lengthof r1;

        $i3 = $i2 * 2;

        r2 = newarray (java.lang.String)[$i3];

        i0 = 0;

        $i4 = lengthof r1;

        i1 = $i4 - 1;

     label1:
        $i5 = lengthof r2;

        if i0 >= $i5 goto label6;

        r3 = r1[i1];

        z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("!");

        if z0 == 0 goto label2;

        $i8 = virtualinvoke r3.<java.lang.String: int length()>();

        $i7 = $i8 - 1;

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        $r5 = specialinvoke r0.<android.content.res.Resources$Theme: java.lang.String getResourceNameFromHexString(java.lang.String)>($r7);

        goto label3;

     label2:
        $r5 = specialinvoke r0.<android.content.res.Resources$Theme: java.lang.String getResourceNameFromHexString(java.lang.String)>(r3);

     label3:
        r2[i0] = $r5;

        $i6 = i0 + 1;

        if z0 == 0 goto label4;

        $r6 = "forced";

        goto label5;

     label4:
        $r6 = "not forced";

     label5:
        r2[$i6] = $r6;

        i0 = i0 + 2;

        i1 = i1 + -1;

        goto label1;

     label6:
        return r2;
    }

    static java.lang.String access$000(android.content.res.Resources$Theme)
    {
        android.content.res.Resources$Theme r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.res.Resources$Theme;

        $r1 = r0.<android.content.res.Resources$Theme: java.lang.String mKey>;

        return $r1;
    }
}
