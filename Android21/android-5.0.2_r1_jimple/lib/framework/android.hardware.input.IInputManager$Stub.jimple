public abstract class android.hardware.input.IInputManager$Stub extends android.os.Binder implements android.hardware.input.IInputManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getInputDevice;
    static final int TRANSACTION_getInputDeviceIds;
    static final int TRANSACTION_hasKeys;
    static final int TRANSACTION_tryPointerSpeed;
    static final int TRANSACTION_injectInputEvent;
    static final int TRANSACTION_getTouchCalibrationForInputDevice;
    static final int TRANSACTION_setTouchCalibrationForInputDevice;
    static final int TRANSACTION_getKeyboardLayouts;
    static final int TRANSACTION_getKeyboardLayout;
    static final int TRANSACTION_getCurrentKeyboardLayoutForInputDevice;
    static final int TRANSACTION_setCurrentKeyboardLayoutForInputDevice;
    static final int TRANSACTION_getKeyboardLayoutsForInputDevice;
    static final int TRANSACTION_addKeyboardLayoutForInputDevice;
    static final int TRANSACTION_removeKeyboardLayoutForInputDevice;
    static final int TRANSACTION_registerInputDevicesChangedListener;
    static final int TRANSACTION_vibrate;
    static final int TRANSACTION_cancelVibrate;

    public void <init>()
    {
        android.hardware.input.IInputManager$Stub r0;

        r0 := @this: android.hardware.input.IInputManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.input.IInputManager");

        return;
    }

    public static android.hardware.input.IInputManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.input.IInputManager$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.input.IInputManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.input.IInputManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.input.IInputManager;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.input.IInputManager) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.input.IInputManager$Stub$Proxy;

        specialinvoke $r2.<android.hardware.input.IInputManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.input.IInputManager$Stub r0;

        r0 := @this: android.hardware.input.IInputManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        android.os.Parcel r1, r2;
        android.view.InputDevice r3;
        int[] r4, r21;
        boolean[] r5;
        boolean z0, $z1, z2;
        android.os.IBinder $r6, r42, r43;
        java.lang.Object $r7, $r10, $r12, $r13, $r16, $r18, $r19;
        android.os.Parcelable$Creator $r8, $r9, $r11, $r14, $r15, $r17, $r20;
        byte $b11, $b12;
        android.view.InputEvent r22;
        java.lang.String r23, r25, r28, r31, r33, r37, r39;
        android.hardware.input.TouchCalibration r24, r26;
        android.hardware.input.KeyboardLayout[] r27;
        android.hardware.input.KeyboardLayout r29;
        android.hardware.input.InputDeviceIdentifier r30, r32, r34, r36, r38;
        java.lang.String[] r35;
        android.hardware.input.IInputDevicesChangedListener r40;
        long[] r41;

        r0 := @this: android.hardware.input.IInputManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label17;
            case 7: goto label20;
            case 8: goto label23;
            case 9: goto label24;
            case 10: goto label27;
            case 11: goto label30;
            case 12: goto label33;
            case 13: goto label36;
            case 14: goto label39;
            case 15: goto label42;
            case 16: goto label43;
            case 17: goto label44;
            case 1598968902: goto label01;
            default: goto label45;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.input.IInputManager");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: android.view.InputDevice getInputDevice(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r3 == null goto label03;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label04;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label04:
        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        r21 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: int[] getInputDeviceIds()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r21);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r4 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i3 >= 0 goto label07;

        r5 = null;

        goto label08;

     label07:
        r5 = newarray (boolean)[i3];

     label08:
        z0 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: boolean hasKeys(int,int,int[],boolean[])>(i13, i14, r4, r5);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z0 == 0 goto label09;

        $b12 = 1;

        goto label10;

     label09:
        $b12 = 0;

     label10:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b12);

        virtualinvoke r2.<android.os.Parcel: void writeBooleanArray(boolean[])>(r5);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void tryPointerSpeed(int)>(i15);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label13;

        $r20 = <android.view.InputEvent: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r20.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r22 = (android.view.InputEvent) $r19;

        goto label14;

     label13:
        r22 = null;

     label14:
        i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z2 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: boolean injectInputEvent(android.view.InputEvent,int)>(r22, i16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z2 == 0 goto label15;

        $b11 = 1;

        goto label16;

     label15:
        $b11 = 0;

     label16:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b11);

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        r23 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r24 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>(r23, i17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r24 == null goto label18;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r24.<android.hardware.input.TouchCalibration: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label19;

     label18:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label19:
        return 1;

     label20:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        r25 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label21;

        $r17 = <android.hardware.input.TouchCalibration: android.os.Parcelable$Creator CREATOR>;

        $r18 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r26 = (android.hardware.input.TouchCalibration) $r18;

        goto label22;

     label21:
        r26 = null;

     label22:
        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>(r25, i18, r26);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label23:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        r27 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r27, 1);

        return 1;

     label24:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        r28 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r29 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>(r28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r29 == null goto label25;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r29.<android.hardware.input.KeyboardLayout: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label26;

     label25:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label26:
        return 1;

     label27:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label28;

        $r15 = <android.hardware.input.InputDeviceIdentifier: android.os.Parcelable$Creator CREATOR>;

        $r16 = interfaceinvoke $r15.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r30 = (android.hardware.input.InputDeviceIdentifier) $r16;

        goto label29;

     label28:
        r30 = null;

     label29:
        r31 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>(r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r31);

        return 1;

     label30:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label31;

        $r14 = <android.hardware.input.InputDeviceIdentifier: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r32 = (android.hardware.input.InputDeviceIdentifier) $r13;

        goto label32;

     label31:
        r32 = null;

     label32:
        r33 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r32, r33);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label33:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label34;

        $r11 = <android.hardware.input.InputDeviceIdentifier: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r34 = (android.hardware.input.InputDeviceIdentifier) $r12;

        goto label35;

     label34:
        r34 = null;

     label35:
        r35 = virtualinvoke r0.<android.hardware.input.IInputManager$Stub: java.lang.String[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>(r34);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r35);

        return 1;

     label36:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label37;

        $r9 = <android.hardware.input.InputDeviceIdentifier: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r36 = (android.hardware.input.InputDeviceIdentifier) $r10;

        goto label38;

     label37:
        r36 = null;

     label38:
        r37 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r36, r37);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label39:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label40;

        $r8 = <android.hardware.input.InputDeviceIdentifier: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r38 = (android.hardware.input.InputDeviceIdentifier) $r7;

        goto label41;

     label40:
        r38 = null;

     label41:
        r39 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>(r38, r39);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r40 = staticinvoke <android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>(r40);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label43:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r41 = virtualinvoke r1.<android.os.Parcel: long[] createLongArray()>();

        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r42 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void vibrate(int,long[],int,android.os.IBinder)>(i19, r41, i20, r42);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label44:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.input.IInputManager");

        i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r43 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.hardware.input.IInputManager$Stub: void cancelVibrate(int,android.os.IBinder)>(i21, r43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label45:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z1;
    }

    public static void <clinit>()
    {
        <android.hardware.input.IInputManager$Stub: int TRANSACTION_cancelVibrate> = 17;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_vibrate> = 16;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_registerInputDevicesChangedListener> = 15;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_removeKeyboardLayoutForInputDevice> = 14;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_addKeyboardLayoutForInputDevice> = 13;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getKeyboardLayoutsForInputDevice> = 12;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_setCurrentKeyboardLayoutForInputDevice> = 11;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getCurrentKeyboardLayoutForInputDevice> = 10;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getKeyboardLayout> = 9;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getKeyboardLayouts> = 8;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_setTouchCalibrationForInputDevice> = 7;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getTouchCalibrationForInputDevice> = 6;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_injectInputEvent> = 5;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_tryPointerSpeed> = 4;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_hasKeys> = 3;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getInputDeviceIds> = 2;

        <android.hardware.input.IInputManager$Stub: int TRANSACTION_getInputDevice> = 1;

        <android.hardware.input.IInputManager$Stub: java.lang.String DESCRIPTOR> = "android.hardware.input.IInputManager";

        return;
    }
}
