final class android.app.ContextImpl$45 extends android.app.ContextImpl$ServiceFetcher
{
    android.view.Display mDefaultDisplay;

    void <init>()
    {
        android.app.ContextImpl$45 r0;

        r0 := @this: android.app.ContextImpl$45;

        specialinvoke r0.<android.app.ContextImpl$ServiceFetcher: void <init>()>();

        return;
    }

    public java.lang.Object getService(android.app.ContextImpl)
    {
        android.app.ContextImpl$45 r0;
        android.app.ContextImpl r1;
        android.view.Display r2, $r5, $r8;
        android.hardware.display.DisplayManager r3;
        android.view.WindowManagerImpl $r4;
        android.content.Context $r6;
        java.lang.Object $r7;

        r0 := @this: android.app.ContextImpl$45;

        r1 := @parameter0: android.app.ContextImpl;

        r2 = staticinvoke <android.app.ContextImpl: android.view.Display access$100(android.app.ContextImpl)>(r1);

        if r2 != null goto label2;

        $r5 = r0.<android.app.ContextImpl$45: android.view.Display mDefaultDisplay>;

        if $r5 != null goto label1;

        $r6 = virtualinvoke r1.<android.app.ContextImpl: android.content.Context getOuterContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        r3 = (android.hardware.display.DisplayManager) $r7;

        $r8 = virtualinvoke r3.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        r0.<android.app.ContextImpl$45: android.view.Display mDefaultDisplay> = $r8;

     label1:
        r2 = r0.<android.app.ContextImpl$45: android.view.Display mDefaultDisplay>;

     label2:
        $r4 = new android.view.WindowManagerImpl;

        specialinvoke $r4.<android.view.WindowManagerImpl: void <init>(android.view.Display)>(r2);

        return $r4;
    }
}
