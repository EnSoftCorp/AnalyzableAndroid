public final class android.hardware.display.DisplayManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private final android.content.Context mContext;
    private final android.hardware.display.DisplayManagerGlobal mGlobal;
    private final java.lang.Object mLock;
    private final android.util.SparseArray mDisplays;
    private final java.util.ArrayList mTempDisplays;
    public static final java.lang.String ACTION_WIFI_DISPLAY_STATUS_CHANGED;
    public static final java.lang.String EXTRA_WIFI_DISPLAY_STATUS;
    public static final java.lang.String DISPLAY_CATEGORY_PRESENTATION;
    public static final int VIRTUAL_DISPLAY_FLAG_PUBLIC;
    public static final int VIRTUAL_DISPLAY_FLAG_PRESENTATION;
    public static final int VIRTUAL_DISPLAY_FLAG_SECURE;
    public static final int VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY;
    public static final int VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR;

    public void <init>(android.content.Context)
    {
        android.hardware.display.DisplayManager r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;
        android.hardware.display.DisplayManagerGlobal $r5;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.DisplayManager: java.lang.Object mLock> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays> = $r4;

        r0.<android.hardware.display.DisplayManager: android.content.Context mContext> = r1;

        $r5 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal> = $r5;

        return;
    }

    public android.view.Display getDisplay(int)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.view.Display $r4;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        $r3 = r0.<android.hardware.display.DisplayManager: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>(i0, 0);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.Display[] getDisplays()
    {
        android.hardware.display.DisplayManager r0;
        android.view.Display[] $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>(null);

        return $r1;
    }

    public android.view.Display[] getDisplays(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        int[] r2;
        java.lang.Object r3, $r8;
        android.view.Display[] r4, $r11;
        java.lang.Throwable r5, r6, $r18, $r20;
        android.hardware.display.DisplayManagerGlobal $r7;
        boolean $z0;
        java.util.ArrayList $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r19, $r21;
        int $i0;
        java.lang.Object[] $r12;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r7 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        r2 = virtualinvoke $r7.<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>();

        $r8 = r0.<android.hardware.display.DisplayManager: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label1:
        if r1 != null goto label2;

        $r19 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addAllDisplaysLocked(java.util.ArrayList,int[])>($r19, r2);

        goto label3;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("android.hardware.display.category.PRESENTATION");

        if $z0 == 0 goto label3;

        $r15 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r15, r2, 3);

        $r14 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r14, r2, 2);

        $r17 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r17, r2, 4);

        $r16 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        specialinvoke r0.<android.hardware.display.DisplayManager: void addPresentationDisplaysLocked(java.util.ArrayList,int[],int)>($r16, r2, 5);

     label3:
        $r10 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        $r9 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $r11 = newarray (android.view.Display)[$i0];

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        r4 = (android.view.Display[]) $r12;

     label4:
        $r13 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        virtualinvoke $r13.<java.util.ArrayList: void clear()>();

        exitmonitor r3;

     label5:
        return r4;

     label6:
        $r20 := @caughtexception;

        r5 = $r20;

     label7:
        $r21 = r0.<android.hardware.display.DisplayManager: java.util.ArrayList mTempDisplays>;

        virtualinvoke $r21.<java.util.ArrayList: void clear()>();

        throw r5;

     label8:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r3;

     label9:
        throw r6;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label1 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    private void addAllDisplaysLocked(java.util.ArrayList, int[])
    {
        android.hardware.display.DisplayManager r0;
        java.util.ArrayList r1;
        int[] r2;
        int i0, $i1, $i2;
        android.view.Display r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: int[];

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label3;

        $i2 = r2[i0];

        r3 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>($i2, 1);

        if r3 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void addPresentationDisplaysLocked(java.util.ArrayList, int[], int)
    {
        android.hardware.display.DisplayManager r0;
        java.util.ArrayList r1;
        int[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.view.Display r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label3;

        $i3 = r2[i1];

        r3 = specialinvoke r0.<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)>($i3, 1);

        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.view.Display: int getFlags()>();

        $i5 = $i4 & 8;

        if $i5 == 0 goto label2;

        $i6 = virtualinvoke r3.<android.view.Display: int getType()>();

        if $i6 != i0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private android.view.Display getOrCreateDisplayLocked(int, boolean)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        boolean z0, $z1;
        android.view.Display r1;
        android.util.SparseArray $r2, $r7;
        java.lang.Object $r3;
        android.content.Context $r4;
        android.hardware.display.DisplayManagerGlobal $r5;
        android.view.DisplayAdjustments $r6;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.view.Display) $r3;

        if r1 != null goto label1;

        $r5 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r4 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: android.view.DisplayAdjustments getDisplayAdjustments(int)>(i0);

        r1 = virtualinvoke $r5.<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)>(i0, $r6);

        if r1 == null goto label2;

        $r7 = r0.<android.hardware.display.DisplayManager: android.util.SparseArray mDisplays>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        goto label2;

     label1:
        if z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<android.view.Display: boolean isValid()>();

        if $z1 != 0 goto label2;

        r1 = null;

     label2:
        return r1;
    }

    public void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        android.os.Handler r2;
        android.hardware.display.DisplayManagerGlobal $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        r2 := @parameter1: android.os.Handler;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>(r1, r2);

        return;
    }

    public void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>(r1);

        return;
    }

    public void startWifiDisplayScan()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void startWifiDisplayScan()>();

        return;
    }

    public void stopWifiDisplayScan()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void stopWifiDisplayScan()>();

        return;
    }

    public void connectWifiDisplay(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void connectWifiDisplay(java.lang.String)>(r1);

        return;
    }

    public void pauseWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void pauseWifiDisplay()>();

        return;
    }

    public void resumeWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void resumeWifiDisplay()>();

        return;
    }

    public void disconnectWifiDisplay()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: void disconnectWifiDisplay()>();

        return;
    }

    public void renameWifiDisplay(java.lang.String, java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1, r2;
        android.hardware.display.DisplayManagerGlobal $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.hardware.display.DisplayManagerGlobal: void renameWifiDisplay(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void forgetWifiDisplay(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        android.hardware.display.DisplayManagerGlobal $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.hardware.display.DisplayManagerGlobal: void forgetWifiDisplay(java.lang.String)>(r1);

        return;
    }

    public android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManagerGlobal $r1;
        android.hardware.display.WifiDisplayStatus $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r2 = virtualinvoke $r1.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>();

        return $r2;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String, int, int, int, android.view.Surface, int)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        int i0, i1, i2, i3;
        android.view.Surface r2;
        android.hardware.display.VirtualDisplay $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.Surface;

        i3 := @parameter5: int;

        $r3 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>(r1, i0, i1, i2, r2, i3, null, null);

        return $r3;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String, int, int, int, android.view.Surface, int, android.hardware.display.VirtualDisplay$Callback, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        int i0, i1, i2, i3;
        android.view.Surface r2;
        android.hardware.display.VirtualDisplay$Callback r3;
        android.os.Handler r4;
        android.hardware.display.VirtualDisplay $r5;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.Surface;

        i3 := @parameter5: int;

        r3 := @parameter6: android.hardware.display.VirtualDisplay$Callback;

        r4 := @parameter7: android.os.Handler;

        $r5 = virtualinvoke r0.<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>(null, r1, i0, i1, i2, r2, i3, r3, r4);

        return $r5;
    }

    public android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection, java.lang.String, int, int, int, android.view.Surface, int, android.hardware.display.VirtualDisplay$Callback, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        android.media.projection.MediaProjection r1;
        java.lang.String r2;
        int i0, i1, i2, i3;
        android.view.Surface r3;
        android.hardware.display.VirtualDisplay$Callback r4;
        android.os.Handler r5;
        android.content.Context $r6;
        android.hardware.display.DisplayManagerGlobal $r7;
        android.hardware.display.VirtualDisplay $r8;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.media.projection.MediaProjection;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.view.Surface;

        i3 := @parameter6: int;

        r4 := @parameter7: android.hardware.display.VirtualDisplay$Callback;

        r5 := @parameter8: android.os.Handler;

        $r7 = r0.<android.hardware.display.DisplayManager: android.hardware.display.DisplayManagerGlobal mGlobal>;

        $r6 = r0.<android.hardware.display.DisplayManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.hardware.display.DisplayManagerGlobal: android.hardware.display.VirtualDisplay createVirtualDisplay(android.content.Context,android.media.projection.MediaProjection,java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay$Callback,android.os.Handler)>($r6, r1, r2, i0, i1, i2, r3, i3, r4, r5);

        return $r8;
    }

    public static void <clinit>()
    {
        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR> = 16;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY> = 8;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_SECURE> = 4;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_PRESENTATION> = 2;

        <android.hardware.display.DisplayManager: int VIRTUAL_DISPLAY_FLAG_PUBLIC> = 1;

        <android.hardware.display.DisplayManager: java.lang.String DISPLAY_CATEGORY_PRESENTATION> = "android.hardware.display.category.PRESENTATION";

        <android.hardware.display.DisplayManager: java.lang.String EXTRA_WIFI_DISPLAY_STATUS> = "android.hardware.display.extra.WIFI_DISPLAY_STATUS";

        <android.hardware.display.DisplayManager: java.lang.String ACTION_WIFI_DISPLAY_STATUS_CHANGED> = "android.hardware.display.action.WIFI_DISPLAY_STATUS_CHANGED";

        <android.hardware.display.DisplayManager: boolean DEBUG> = 0;

        <android.hardware.display.DisplayManager: java.lang.String TAG> = "DisplayManager";

        return;
    }
}
