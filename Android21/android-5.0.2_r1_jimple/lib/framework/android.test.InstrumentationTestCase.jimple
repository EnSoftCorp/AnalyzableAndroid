public class android.test.InstrumentationTestCase extends junit.framework.TestCase
{
    private android.app.Instrumentation mInstrumentation;

    public void <init>()
    {
        android.test.InstrumentationTestCase r0;

        r0 := @this: android.test.InstrumentationTestCase;

        specialinvoke r0.<junit.framework.TestCase: void <init>()>();

        return;
    }

    public void injectInstrumentation(android.app.Instrumentation)
    {
        android.test.InstrumentationTestCase r0;
        android.app.Instrumentation r1;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: android.app.Instrumentation;

        r0.<android.test.InstrumentationTestCase: android.app.Instrumentation mInstrumentation> = r1;

        return;
    }

    public void injectInsrumentation(android.app.Instrumentation)
    {
        android.test.InstrumentationTestCase r0;
        android.app.Instrumentation r1;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: android.app.Instrumentation;

        virtualinvoke r0.<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>(r1);

        return;
    }

    public android.app.Instrumentation getInstrumentation()
    {
        android.test.InstrumentationTestCase r0;
        android.app.Instrumentation $r1;

        r0 := @this: android.test.InstrumentationTestCase;

        $r1 = r0.<android.test.InstrumentationTestCase: android.app.Instrumentation mInstrumentation>;

        return $r1;
    }

    public final android.app.Activity launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)
    {
        android.test.InstrumentationTestCase r0;
        java.lang.String r1;
        java.lang.Class r2;
        android.os.Bundle r3;
        android.content.Intent r4, $r5;
        android.app.Activity $r6;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: android.os.Bundle;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r4 = $r5;

        if r3 == null goto label1;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r3);

     label1:
        $r6 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>(r1, r2, r4);

        return $r6;
    }

    public final android.app.Activity launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)
    {
        android.test.InstrumentationTestCase r0;
        java.lang.String r1, $r5;
        java.lang.Class r2;
        android.content.Intent r3;
        android.app.Activity r4;
        android.app.Instrumentation $r8, $r9;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: android.content.Intent;

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>(r1, $r5);

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r8 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        r4 = virtualinvoke $r8.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>(r3);

        $r9 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r9.<android.app.Instrumentation: void waitForIdleSync()>();

        return r4;
    }

    public void runTestOnUiThread(java.lang.Runnable) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase r0;
        java.lang.Runnable r1;
        java.lang.Throwable[] r2;
        android.app.Instrumentation $r3;
        android.test.InstrumentationTestCase$1 $r4;
        java.lang.Throwable $r5, $r6;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.Runnable;

        r2 = newarray (java.lang.Throwable)[1];

        $r3 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r4 = new android.test.InstrumentationTestCase$1;

        specialinvoke $r4.<android.test.InstrumentationTestCase$1: void <init>(android.test.InstrumentationTestCase,java.lang.Runnable,java.lang.Throwable[])>(r0, r1, r2);

        virtualinvoke $r3.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r4);

        $r5 = r2[0];

        if $r5 == null goto label1;

        $r6 = r2[0];

        throw $r6;

     label1:
        return;
    }

    protected void runTest() throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase r0;
        java.lang.String r1, $r22, $r24;
        java.lang.reflect.Method r2, r4;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i1, i2;
        java.lang.Throwable[] r5;
        java.lang.Class $r6;
        java.lang.Class[] $r7;
        android.test.InstrumentationTestCase$2 $r8;
        android.app.Instrumentation $r9;
        java.lang.Throwable $r10, $r11;
        android.test.RepetitiveTest $r12;
        java.lang.annotation.Annotation $r13, $r14;
        android.test.FlakyTest $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r25, $r26;
        java.lang.NoSuchMethodException $r23;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 = virtualinvoke r0.<android.test.InstrumentationTestCase: java.lang.String getName()>();

        staticinvoke <android.test.InstrumentationTestCase: void assertNotNull(java.lang.Object)>(r1);

        r2 = null;

     label01:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = (java.lang.Class[]) null;

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, $r7);

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method \"");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found");

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.test.InstrumentationTestCase: void fail(java.lang.String)>($r24);

     label04:
        $i1 = virtualinvoke r2.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z2 != 0 goto label05;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method \"");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" should be public");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.test.InstrumentationTestCase: void fail(java.lang.String)>($r22);

     label05:
        i2 = 1;

        z0 = 0;

        $z3 = virtualinvoke r2.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "android/test/FlakyTest");

        if $z3 == 0 goto label06;

        $r14 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "android/test/FlakyTest");

        $r15 = (android.test.FlakyTest) $r14;

        i2 = interfaceinvoke $r15.<android.test.FlakyTest: int tolerance()>();

        goto label07;

     label06:
        $z5 = virtualinvoke r2.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "android/test/RepetitiveTest");

        if $z5 == 0 goto label07;

        $r13 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "android/test/RepetitiveTest");

        $r12 = (android.test.RepetitiveTest) $r13;

        i2 = interfaceinvoke $r12.<android.test.RepetitiveTest: int numIterations()>();

        z0 = 1;

     label07:
        $z4 = virtualinvoke r2.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "android/test/UiThreadTest");

        if $z4 == 0 goto label09;

        i0 = i2;

        z1 = z0;

        r4 = r2;

        r5 = newarray (java.lang.Throwable)[1];

        $r9 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        $r8 = new android.test.InstrumentationTestCase$2;

        specialinvoke $r8.<android.test.InstrumentationTestCase$2: void <init>(android.test.InstrumentationTestCase,java.lang.reflect.Method,int,boolean,java.lang.Throwable[])>(r0, r4, i0, z1, r5);

        virtualinvoke $r9.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r8);

        $r11 = r5[0];

        if $r11 == null goto label08;

        $r10 = r5[0];

        throw $r10;

     label08:
        goto label10;

     label09:
        specialinvoke r0.<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)>(r2, i2, z0);

     label10:
        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label03;
    }

    private void runMethod(java.lang.reflect.Method, int) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase r0;
        java.lang.reflect.Method r1;
        int i0;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        specialinvoke r0.<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)>(r1, i0, 0);

        return;
    }

    private void runMethod(java.lang.reflect.Method, int, boolean) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase r0;
        java.lang.reflect.Method r1;
        int i0, i1, i2;
        boolean z0;
        android.os.Bundle r2, r4, $r6, $r9, $r13, $r15, r19, r21;
        java.lang.Throwable r3, $r10, r17;
        java.lang.Object[] $r5;
        android.app.Instrumentation $r7, $r11, $r12, $r16;
        java.lang.IllegalAccessException $r8, r20;
        java.lang.reflect.InvocationTargetException $r14, r18;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 = 0;

     label01:
        $r5 = (java.lang.Object[]) null;

        virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

        r17 = null;

     label02:
        i1 = i1 + 1;

        if z0 == 0 goto label10;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>("currentiterations", i1);

        $r7 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r7.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(2, r2);

        goto label10;

     label03:
        $r14 := @caughtexception;

        r18 = $r14;

        virtualinvoke r18.<java.lang.reflect.InvocationTargetException: java.lang.Throwable fillInStackTrace()>();

        r17 = virtualinvoke r18.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

     label04:
        i1 = i1 + 1;

        if z0 == 0 goto label10;

        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>()>();

        r19 = $r15;

        virtualinvoke r19.<android.os.Bundle: void putInt(java.lang.String,int)>("currentiterations", i1);

        $r16 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r16.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(2, r19);

        goto label10;

     label05:
        $r8 := @caughtexception;

        r20 = $r8;

        virtualinvoke r20.<java.lang.IllegalAccessException: java.lang.Throwable fillInStackTrace()>();

        r17 = r20;

     label06:
        i1 = i1 + 1;

        if z0 == 0 goto label10;

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r21 = $r9;

        virtualinvoke r21.<android.os.Bundle: void putInt(java.lang.String,int)>("currentiterations", i1);

        $r11 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r11.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(2, r21);

        goto label10;

     label07:
        $r10 := @caughtexception;

        r3 = $r10;

     label08:
        i2 = i1 + 1;

        if z0 == 0 goto label09;

        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r4 = $r13;

        virtualinvoke r4.<android.os.Bundle: void putInt(java.lang.String,int)>("currentiterations", i2);

        $r12 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r12.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(2, r4);

     label09:
        throw r3;

     label10:
        if i1 >= i0 goto label11;

        if z0 != 0 goto label01;

        if r17 != null goto label01;

     label11:
        if r17 == null goto label12;

        throw r17;

     label12:
        return;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void sendKeys(java.lang.String)
    {
        android.test.InstrumentationTestCase r0;
        java.lang.String r1, r4, $r8, $r13, $r20, $r26, $r28;
        java.lang.String[] r2;
        int i0, i1, i2, i3, i4, $i5, $i6, i10;
        android.app.Instrumentation r3;
        java.lang.reflect.Field r6;
        java.lang.Class $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r21, $r22, $r23, $r25, $r27, $r29;
        java.lang.NumberFormatException $r14;
        java.lang.SecurityException $r18;
        java.lang.IllegalAccessException $r19;
        java.lang.NoSuchFieldException $r24;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i0 = lengthof r2;

        r3 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label19;

        r4 = r2[i1];

        i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(42);

     label02:
        if i2 != -1 goto label03;

        $i5 = 1;

        goto label04;

     label03:
        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label04:
        i3 = $i5;

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid repeat count: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r20);

        goto label18;

     label07:
        if i2 == -1 goto label08;

        $i6 = i2 + 1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i6);

     label08:
        i10 = 0;

     label09:
        if i10 >= i3 goto label18;

     label10:
        $r9 = class "android/view/KeyEvent";

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KEYCODE_");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r13);

        i4 = virtualinvoke r6.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

     label11:
        virtualinvoke r3.<android.app.Instrumentation: void sendKeyDownUpSync(int)>(i4);

     label12:
        goto label14;

     label13:
        $r18 := @caughtexception;

     label14:
        goto label17;

     label15:
        $r24 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown keycode: KEYCODE_");

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r28);

        goto label18;

     label16:
        $r19 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown keycode: KEYCODE_");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityTestCase", $r26);

        goto label18;

     label17:
        i10 = i10 + 1;

        goto label09;

     label18:
        i1 = i1 + 1;

        goto label01;

     label19:
        virtualinvoke r3.<android.app.Instrumentation: void waitForIdleSync()>();

        return;

        catch java.lang.NumberFormatException from label02 to label05 with label06;
        catch java.lang.SecurityException from label11 to label12 with label13;
        catch java.lang.NoSuchFieldException from label10 to label14 with label15;
        catch java.lang.IllegalAccessException from label10 to label14 with label16;
    }

    public transient void sendKeys(int[])
    {
        android.test.InstrumentationTestCase r0;
        int[] r1;
        int i0, i1, $i2;
        android.app.Instrumentation r2;
        java.lang.SecurityException $r4;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: int[];

        i0 = lengthof r1;

        r2 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

     label2:
        $i2 = r1[i1];

        virtualinvoke r2.<android.app.Instrumentation: void sendKeyDownUpSync(int)>($i2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        virtualinvoke r2.<android.app.Instrumentation: void waitForIdleSync()>();

        return;

        catch java.lang.SecurityException from label2 to label3 with label4;
    }

    public transient void sendRepeatedKeys(int[])
    {
        android.test.InstrumentationTestCase r0;
        int[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.app.Instrumentation r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.SecurityException $r5;

        r0 := @this: android.test.InstrumentationTestCase;

        r1 := @parameter0: int[];

        i0 = lengthof r1;

        $i5 = i0 & 1;

        if $i5 != 1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The size of the keys array must be a multiple of 2");

        throw $r4;

     label1:
        r2 = virtualinvoke r0.<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label9;

        i2 = r1[i1];

        $i6 = i1 + 1;

        i3 = r1[$i6];

        i4 = 0;

     label3:
        if i4 >= i2 goto label8;

     label4:
        virtualinvoke r2.<android.app.Instrumentation: void sendKeyDownUpSync(int)>(i3);

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

     label7:
        i4 = i4 + 1;

        goto label3;

     label8:
        i1 = i1 + 2;

        goto label2;

     label9:
        virtualinvoke r2.<android.app.Instrumentation: void waitForIdleSync()>();

        return;

        catch java.lang.SecurityException from label4 to label5 with label6;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.InstrumentationTestCase r0;
        java.lang.Runtime $r1, $r2, $r3;

        r0 := @this: android.test.InstrumentationTestCase;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void runFinalization()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        specialinvoke r0.<junit.framework.TestCase: void tearDown()>();

        return;
    }

    static void access$000(android.test.InstrumentationTestCase, java.lang.reflect.Method, int, boolean) throws java.lang.Throwable
    {
        android.test.InstrumentationTestCase r0;
        java.lang.reflect.Method r1;
        int i0;
        boolean z0;

        r0 := @parameter0: android.test.InstrumentationTestCase;

        r1 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)>(r1, i0, z0);

        return;
    }
}
