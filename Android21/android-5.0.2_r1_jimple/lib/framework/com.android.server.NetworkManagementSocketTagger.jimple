public final class com.android.server.NetworkManagementSocketTagger extends dalvik.system.SocketTagger
{
    private static final java.lang.String TAG;
    private static final boolean LOGD;
    public static final java.lang.String PROP_QTAGUID_ENABLED;
    private static java.lang.ThreadLocal threadSocketTags;

    public void <init>()
    {
        com.android.server.NetworkManagementSocketTagger r0;

        r0 := @this: com.android.server.NetworkManagementSocketTagger;

        specialinvoke r0.<dalvik.system.SocketTagger: void <init>()>();

        return;
    }

    public static void install()
    {
        com.android.server.NetworkManagementSocketTagger $r0;

        $r0 = new com.android.server.NetworkManagementSocketTagger;

        specialinvoke $r0.<com.android.server.NetworkManagementSocketTagger: void <init>()>();

        staticinvoke <dalvik.system.SocketTagger: void set(dalvik.system.SocketTagger)>($r0);

        return;
    }

    public static void setThreadSocketStatsTag(int)
    {
        int i0;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        com.android.server.NetworkManagementSocketTagger$SocketTags $r2;

        i0 := @parameter0: int;

        $r0 = <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (com.android.server.NetworkManagementSocketTagger$SocketTags) $r1;

        $r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsTag> = i0;

        return;
    }

    public static int getThreadSocketStatsTag()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        com.android.server.NetworkManagementSocketTagger$SocketTags $r2;
        int $i0;

        $r0 = <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (com.android.server.NetworkManagementSocketTagger$SocketTags) $r1;

        $i0 = $r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsTag>;

        return $i0;
    }

    public static void setThreadSocketStatsUid(int)
    {
        int i0;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        com.android.server.NetworkManagementSocketTagger$SocketTags $r2;

        i0 := @parameter0: int;

        $r0 = <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (com.android.server.NetworkManagementSocketTagger$SocketTags) $r1;

        $r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsUid> = i0;

        return;
    }

    public void tag(java.io.FileDescriptor) throws java.net.SocketException
    {
        com.android.server.NetworkManagementSocketTagger r0;
        java.io.FileDescriptor r1;
        com.android.server.NetworkManagementSocketTagger$SocketTags r2;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.NetworkManagementSocketTagger;

        r1 := @parameter0: java.io.FileDescriptor;

        $r3 = <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.NetworkManagementSocketTagger$SocketTags) $r4;

        $i1 = r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsTag>;

        $i0 = r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsUid>;

        specialinvoke r0.<com.android.server.NetworkManagementSocketTagger: void tagSocketFd(java.io.FileDescriptor,int,int)>(r1, $i1, $i0);

        return;
    }

    private void tagSocketFd(java.io.FileDescriptor, int, int)
    {
        com.android.server.NetworkManagementSocketTagger r0;
        java.io.FileDescriptor r1;
        int i0, i1, i2, $i3;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.NetworkManagementSocketTagger;

        r1 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != -1 goto label1;

        if i1 != -1 goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 == 0 goto label2;

        i2 = staticinvoke <com.android.server.NetworkManagementSocketTagger: int native_tagSocketFd(java.io.FileDescriptor,int,int)>(r1, i0, i1);

        if i2 >= 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tagSocketFd(");

        $i3 = virtualinvoke r1.<java.io.FileDescriptor: int getInt$()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed with errno");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("NetworkManagementSocketTagger", $r11);

     label2:
        return;
    }

    public void untag(java.io.FileDescriptor) throws java.net.SocketException
    {
        com.android.server.NetworkManagementSocketTagger r0;
        java.io.FileDescriptor r1;

        r0 := @this: com.android.server.NetworkManagementSocketTagger;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<com.android.server.NetworkManagementSocketTagger: void unTagSocketFd(java.io.FileDescriptor)>(r1);

        return;
    }

    private void unTagSocketFd(java.io.FileDescriptor)
    {
        com.android.server.NetworkManagementSocketTagger r0;
        java.io.FileDescriptor r1;
        com.android.server.NetworkManagementSocketTagger$SocketTags r2;
        int i0, $i1, $i2, $i4;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.NetworkManagementSocketTagger;

        r1 := @parameter0: java.io.FileDescriptor;

        $r3 = <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.NetworkManagementSocketTagger$SocketTags) $r4;

        $i1 = r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsTag>;

        if $i1 != -1 goto label1;

        $i4 = r2.<com.android.server.NetworkManagementSocketTagger$SocketTags: int statsUid>;

        if $i4 != -1 goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 == 0 goto label2;

        i0 = staticinvoke <com.android.server.NetworkManagementSocketTagger: int native_untagSocketFd(java.io.FileDescriptor)>(r1);

        if i0 >= 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("untagSocket(");

        $i2 = virtualinvoke r1.<java.io.FileDescriptor: int getInt$()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed with errno ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NetworkManagementSocketTagger", $r10);

     label2:
        return;
    }

    public static void setKernelCounterSet(int, int)
    {
        int i0, i1, i2;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 == 0 goto label1;

        i2 = staticinvoke <com.android.server.NetworkManagementSocketTagger: int native_setCounterSet(int,int)>(i1, i0);

        if i2 >= 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setKernelCountSet(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed with errno ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NetworkManagementSocketTagger", $r7);

     label1:
        return;
    }

    public static void resetKernelUidStats(int)
    {
        int i0, i1;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("net.qtaguid_enabled", 0);

        if $z0 == 0 goto label1;

        i1 = staticinvoke <com.android.server.NetworkManagementSocketTagger: int native_deleteTagData(int,int)>(0, i0);

        if i1 >= 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem clearing counters for uid ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : errno ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NetworkManagementSocketTagger", $r5);

     label1:
        return;
    }

    public static int kernelToTag(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1, $i2;
        java.lang.Long $r2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 10 goto label1;

        $i1 = i0 - 8;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>($r1);

        $i2 = virtualinvoke $r2.<java.lang.Long: int intValue()>();

        return $i2;

     label1:
        return 0;
    }

    private static native int native_tagSocketFd(java.io.FileDescriptor, int, int);

    private static native int native_untagSocketFd(java.io.FileDescriptor);

    private static native int native_setCounterSet(int, int);

    private static native int native_deleteTagData(int, int);

    static void <clinit>()
    {
        com.android.server.NetworkManagementSocketTagger$1 $r0;

        <com.android.server.NetworkManagementSocketTagger: java.lang.String PROP_QTAGUID_ENABLED> = "net.qtaguid_enabled";

        <com.android.server.NetworkManagementSocketTagger: boolean LOGD> = 0;

        <com.android.server.NetworkManagementSocketTagger: java.lang.String TAG> = "NetworkManagementSocketTagger";

        $r0 = new com.android.server.NetworkManagementSocketTagger$1;

        specialinvoke $r0.<com.android.server.NetworkManagementSocketTagger$1: void <init>()>();

        <com.android.server.NetworkManagementSocketTagger: java.lang.ThreadLocal threadSocketTags> = $r0;

        return;
    }
}
