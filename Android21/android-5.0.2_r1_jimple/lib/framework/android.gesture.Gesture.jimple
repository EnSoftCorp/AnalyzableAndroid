public class android.gesture.Gesture extends java.lang.Object implements android.os.Parcelable
{
    private static final long GESTURE_ID_BASE;
    private static final int BITMAP_RENDERING_WIDTH;
    private static final boolean BITMAP_RENDERING_ANTIALIAS;
    private static final boolean BITMAP_RENDERING_DITHER;
    private static final java.util.concurrent.atomic.AtomicInteger sGestureCount;
    private final android.graphics.RectF mBoundingBox;
    private long mGestureID;
    private final java.util.ArrayList mStrokes;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.gesture.Gesture r0;
        android.graphics.RectF $r1;
        java.util.ArrayList $r2;
        java.util.concurrent.atomic.AtomicInteger $r3;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: android.gesture.Gesture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.gesture.Gesture: java.util.ArrayList mStrokes> = $r2;

        $l0 = <android.gesture.Gesture: long GESTURE_ID_BASE>;

        $r3 = <android.gesture.Gesture: java.util.concurrent.atomic.AtomicInteger sGestureCount>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        r0.<android.gesture.Gesture: long mGestureID> = $l3;

        return;
    }

    public java.lang.Object clone()
    {
        android.gesture.Gesture r0, r1, $r3;
        int i0, i1;
        android.gesture.GestureStroke r2, $r13;
        android.graphics.RectF $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3;
        java.util.ArrayList $r9, $r10, $r11;
        java.lang.Object $r12, $r14;

        r0 := @this: android.gesture.Gesture;

        $r3 = new android.gesture.Gesture;

        specialinvoke $r3.<android.gesture.Gesture: void <init>()>();

        r1 = $r3;

        $r8 = r1.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $r4 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $f3 = $r4.<android.graphics.RectF: float left>;

        $r5 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $f2 = $r5.<android.graphics.RectF: float top>;

        $r6 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $f1 = $r6.<android.graphics.RectF: float right>;

        $r7 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $f0 = $r7.<android.graphics.RectF: float bottom>;

        virtualinvoke $r8.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f2, $f1, $f0);

        $r9 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.gesture.GestureStroke) $r12;

        $r11 = r1.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        $r14 = virtualinvoke r2.<android.gesture.GestureStroke: java.lang.Object clone()>();

        $r13 = (android.gesture.GestureStroke) $r14;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.util.ArrayList getStrokes()
    {
        android.gesture.Gesture r0;
        java.util.ArrayList $r1;

        r0 := @this: android.gesture.Gesture;

        $r1 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        return $r1;
    }

    public int getStrokesCount()
    {
        android.gesture.Gesture r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: android.gesture.Gesture;

        $r1 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public void addStroke(android.gesture.GestureStroke)
    {
        android.gesture.Gesture r0;
        android.gesture.GestureStroke r1;
        java.util.ArrayList $r2;
        android.graphics.RectF $r3, $r4;

        r0 := @this: android.gesture.Gesture;

        r1 := @parameter0: android.gesture.GestureStroke;

        $r2 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        $r3 = r1.<android.gesture.GestureStroke: android.graphics.RectF boundingBox>;

        virtualinvoke $r4.<android.graphics.RectF: void union(android.graphics.RectF)>($r3);

        return;
    }

    public float getLength()
    {
        android.gesture.Gesture r0;
        int i0, i1, i2;
        java.util.ArrayList r1;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r2;
        android.gesture.GestureStroke $r3;

        r0 := @this: android.gesture.Gesture;

        i0 = 0;

        r1 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $f1 = (float) i0;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r3 = (android.gesture.GestureStroke) $r2;

        $f2 = $r3.<android.gesture.GestureStroke: float length>;

        $f3 = $f1 + $f2;

        i0 = (int) $f3;

        i2 = i2 + 1;

        goto label1;

     label2:
        $f0 = (float) i0;

        return $f0;
    }

    public android.graphics.RectF getBoundingBox()
    {
        android.gesture.Gesture r0;
        android.graphics.RectF $r1;

        r0 := @this: android.gesture.Gesture;

        $r1 = r0.<android.gesture.Gesture: android.graphics.RectF mBoundingBox>;

        return $r1;
    }

    public android.graphics.Path toPath()
    {
        android.gesture.Gesture r0;
        android.graphics.Path $r1;

        r0 := @this: android.gesture.Gesture;

        $r1 = virtualinvoke r0.<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>(null);

        return $r1;
    }

    public android.graphics.Path toPath(android.graphics.Path)
    {
        android.gesture.Gesture r0;
        android.graphics.Path r1, $r5, $r6;
        java.util.ArrayList r2;
        int i0, i1;
        java.lang.Object $r3;
        android.gesture.GestureStroke $r4;

        r0 := @this: android.gesture.Gesture;

        r1 := @parameter0: android.graphics.Path;

        if r1 != null goto label1;

        $r6 = new android.graphics.Path;

        specialinvoke $r6.<android.graphics.Path: void <init>()>();

        r1 = $r6;

     label1:
        r2 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.gesture.GestureStroke) $r3;

        $r5 = virtualinvoke $r4.<android.gesture.GestureStroke: android.graphics.Path getPath()>();

        virtualinvoke r1.<android.graphics.Path: void addPath(android.graphics.Path)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    public android.graphics.Path toPath(int, int, int, int)
    {
        android.gesture.Gesture r0;
        int i0, i1, i2, i3;
        android.graphics.Path $r1;

        r0 := @this: android.gesture.Gesture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>(null, i0, i1, i2, i3);

        return $r1;
    }

    public android.graphics.Path toPath(android.graphics.Path, int, int, int, int)
    {
        android.gesture.Gesture r0;
        android.graphics.Path r1, $r5, $r6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList r2;
        java.lang.Object $r3;
        float $f0, $f1;
        android.gesture.GestureStroke $r4;

        r0 := @this: android.gesture.Gesture;

        r1 := @parameter0: android.graphics.Path;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        if r1 != null goto label1;

        $r5 = new android.graphics.Path;

        specialinvoke $r5.<android.graphics.Path: void <init>()>();

        r1 = $r5;

     label1:
        r2 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i5 = 0;

     label2:
        if i5 >= i4 goto label3;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r4 = (android.gesture.GestureStroke) $r3;

        $i6 = 2 * i2;

        $i7 = i0 - $i6;

        $f1 = (float) $i7;

        $i8 = 2 * i2;

        $i9 = i1 - $i8;

        $f0 = (float) $i9;

        $r6 = virtualinvoke $r4.<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>($f1, $f0, i3);

        virtualinvoke r1.<android.graphics.Path: void addPath(android.graphics.Path)>($r6);

        i5 = i5 + 1;

        goto label2;

     label3:
        return r1;
    }

    void setID(long)
    {
        android.gesture.Gesture r0;
        long l0;

        r0 := @this: android.gesture.Gesture;

        l0 := @parameter0: long;

        r0.<android.gesture.Gesture: long mGestureID> = l0;

        return;
    }

    public long getID()
    {
        android.gesture.Gesture r0;
        long $l0;

        r0 := @this: android.gesture.Gesture;

        $l0 = r0.<android.gesture.Gesture: long mGestureID>;

        return $l0;
    }

    public android.graphics.Bitmap toBitmap(int, int, int, int, int)
    {
        android.gesture.Gesture r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2, $r7;
        android.graphics.Paint r3, $r9;
        java.util.ArrayList r4;
        android.graphics.Path r5;
        android.graphics.Bitmap$Config $r6;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint$Style $r8;
        android.graphics.Paint$Cap $r10;
        android.graphics.Paint$Join $r11;
        java.lang.Object $r12;
        android.gesture.GestureStroke $r13;

        r0 := @this: android.gesture.Gesture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r7;

        $f0 = (float) i2;

        $f1 = (float) i2;

        virtualinvoke r2.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>()>();

        r3 = $r9;

        virtualinvoke r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r3.<android.graphics.Paint: void setDither(boolean)>(1);

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>(i4);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r11 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r11);

        $r10 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r10);

        virtualinvoke r3.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        r4 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i6 = 0;

     label1:
        if i6 >= i5 goto label2;

        $r12 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r13 = (android.gesture.GestureStroke) $r12;

        $i8 = 2 * i2;

        $i7 = i0 - $i8;

        $f2 = (float) $i7;

        $i10 = 2 * i2;

        $i9 = i1 - $i10;

        $f3 = (float) $i9;

        r5 = virtualinvoke $r13.<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>($f2, $f3, i3);

        virtualinvoke r2.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r5, r3);

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;
    }

    public android.graphics.Bitmap toBitmap(int, int, int, int)
    {
        android.gesture.Gesture r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2, $r7;
        android.graphics.Paint r3, $r9;
        android.graphics.Path r4;
        android.graphics.RectF r5, $r12;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Paint$Style $r8;
        android.graphics.Paint$Cap $r10;
        android.graphics.Paint$Join $r11;
        byte $b8;

        r0 := @this: android.gesture.Gesture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r7;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>()>();

        r3 = $r9;

        virtualinvoke r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r3.<android.graphics.Paint: void setDither(boolean)>(1);

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>(i3);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r11 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r11);

        $r10 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r10);

        virtualinvoke r3.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        r4 = virtualinvoke r0.<android.gesture.Gesture: android.graphics.Path toPath()>();

        $r12 = new android.graphics.RectF;

        specialinvoke $r12.<android.graphics.RectF: void <init>()>();

        r5 = $r12;

        virtualinvoke r4.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>(r5, 1);

        $i5 = 2 * i2;

        $i4 = i0 - $i5;

        $f4 = (float) $i4;

        $f3 = virtualinvoke r5.<android.graphics.RectF: float width()>();

        f0 = $f4 / $f3;

        $i7 = 2 * i2;

        $i6 = i1 - $i7;

        $f6 = (float) $i6;

        $f5 = virtualinvoke r5.<android.graphics.RectF: float height()>();

        f1 = $f6 / $f5;

        $b8 = f0 cmpl f1;

        if $b8 <= 0 goto label1;

        $f24 = f1;

        goto label2;

     label1:
        $f24 = f0;

     label2:
        f2 = $f24;

        $f7 = 2.0F / f2;

        virtualinvoke r3.<android.graphics.Paint: void setStrokeWidth(float)>($f7);

        $f10 = r5.<android.graphics.RectF: float left>;

        $f11 = neg $f10;

        $f8 = (float) i0;

        $f9 = virtualinvoke r5.<android.graphics.RectF: float width()>();

        $f14 = $f9 * f2;

        $f15 = $f8 - $f14;

        $f12 = $f15 / 2.0F;

        $f18 = $f11 + $f12;

        $f13 = r5.<android.graphics.RectF: float top>;

        $f19 = neg $f13;

        $f16 = (float) i1;

        $f17 = virtualinvoke r5.<android.graphics.RectF: float height()>();

        $f22 = $f17 * f2;

        $f23 = $f16 - $f22;

        $f20 = $f23 / 2.0F;

        $f21 = $f19 + $f20;

        virtualinvoke r4.<android.graphics.Path: void offset(float,float)>($f18, $f21);

        $f25 = (float) i2;

        $f26 = (float) i2;

        virtualinvoke r2.<android.graphics.Canvas: void translate(float,float)>($f25, $f26);

        virtualinvoke r2.<android.graphics.Canvas: void scale(float,float)>(f2, f2);

        virtualinvoke r2.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r4, r3);

        return r1;
    }

    void serialize(java.io.DataOutputStream) throws java.io.IOException
    {
        android.gesture.Gesture r0;
        java.io.DataOutputStream r1;
        java.util.ArrayList r2;
        int i0, i1;
        long $l2;
        java.lang.Object $r3;
        android.gesture.GestureStroke $r4;

        r0 := @this: android.gesture.Gesture;

        r1 := @parameter0: java.io.DataOutputStream;

        r2 = r0.<android.gesture.Gesture: java.util.ArrayList mStrokes>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $l2 = r0.<android.gesture.Gesture: long mGestureID>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeLong(long)>($l2);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.gesture.GestureStroke) $r3;

        virtualinvoke $r4.<android.gesture.GestureStroke: void serialize(java.io.DataOutputStream)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static android.gesture.Gesture deserialize(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        android.gesture.Gesture r1, $r2;
        int i0, i1;
        long $l2;
        android.gesture.GestureStroke $r3;

        r0 := @parameter0: java.io.DataInputStream;

        $r2 = new android.gesture.Gesture;

        specialinvoke $r2.<android.gesture.Gesture: void <init>()>();

        r1 = $r2;

        $l2 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();

        r1.<android.gesture.Gesture: long mGestureID> = $l2;

        i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = staticinvoke <android.gesture.GestureStroke: android.gesture.GestureStroke deserialize(java.io.DataInputStream)>(r0);

        virtualinvoke r1.<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.gesture.Gesture r0;
        android.os.Parcel r1;
        int i0;
        boolean z0;
        java.io.ByteArrayOutputStream r2, $r6;
        java.io.DataOutputStream r3, $r7;
        java.io.IOException r4, $r10;
        java.lang.Throwable r5, $r9;
        long $l1;
        byte[] $r8;

        r0 := @this: android.gesture.Gesture;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<android.gesture.Gesture: long mGestureID>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        z0 = 0;

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>(32768);

        r2 = $r6;

        $r7 = new java.io.DataOutputStream;

        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r2);

        r3 = $r7;

     label1:
        virtualinvoke r0.<android.gesture.Gesture: void serialize(java.io.DataOutputStream)>(r3);

        z0 = 1;

     label2:
        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r3);

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

        goto label7;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", "Error writing Gesture to parcel:", r4);

     label4:
        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r3);

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

        goto label7;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

     label6:
        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r3);

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

        throw r5;

     label7:
        if z0 == 0 goto label8;

        $r8 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r8);

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int describeContents()
    {
        android.gesture.Gesture r0;

        r0 := @this: android.gesture.Gesture;

        return 0;
    }

    static long access$002(android.gesture.Gesture, long)
    {
        android.gesture.Gesture r0;
        long l0;

        r0 := @parameter0: android.gesture.Gesture;

        l0 := @parameter1: long;

        r0.<android.gesture.Gesture: long mGestureID> = l0;

        return l0;
    }

    static void <clinit>()
    {
        long $l0;
        java.util.concurrent.atomic.AtomicInteger $r0;
        android.gesture.Gesture$1 $r1;

        <android.gesture.Gesture: boolean BITMAP_RENDERING_DITHER> = 1;

        <android.gesture.Gesture: boolean BITMAP_RENDERING_ANTIALIAS> = 1;

        <android.gesture.Gesture: int BITMAP_RENDERING_WIDTH> = 2;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <android.gesture.Gesture: long GESTURE_ID_BASE> = $l0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <android.gesture.Gesture: java.util.concurrent.atomic.AtomicInteger sGestureCount> = $r0;

        $r1 = new android.gesture.Gesture$1;

        specialinvoke $r1.<android.gesture.Gesture$1: void <init>()>();

        <android.gesture.Gesture: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }
}
