public class android.text.DynamicLayout extends android.text.Layout
{
    private static final int PRIORITY;
    private static final int BLOCK_MINIMUM_CHARACTER_LENGTH;
    private java.lang.CharSequence mBase;
    private java.lang.CharSequence mDisplay;
    private android.text.DynamicLayout$ChangeWatcher mWatcher;
    private boolean mIncludePad;
    private boolean mEllipsize;
    private int mEllipsizedWidth;
    private android.text.TextUtils$TruncateAt mEllipsizeAt;
    private android.text.PackedIntVector mInts;
    private android.text.PackedObjectVector mObjects;
    public static final int INVALID_BLOCK_INDEX;
    private int[] mBlockEndLines;
    private int[] mBlockIndices;
    private int mNumberOfBlocks;
    private int mIndexFirstChangedBlock;
    private int mTopPadding;
    private int mBottomPadding;
    private static android.text.StaticLayout sStaticLayout;
    private static final java.lang.Object[] sLock;
    private static final int START;
    private static final int DIR;
    private static final int TAB;
    private static final int TOP;
    private static final int DESCENT;
    private static final int COLUMNS_NORMAL;
    private static final int ELLIPSIS_START;
    private static final int ELLIPSIS_COUNT;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int START_MASK;
    private static final int DIR_SHIFT;
    private static final int TAB_MASK;
    private static final int ELLIPSIS_UNDEFINED;

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, r1, r2, i0, r3, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0, i1;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r5;
        android.text.TextDirectionHeuristic $r6;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r5 := @parameter8: android.text.TextUtils$TruncateAt;

        i1 := @parameter9: int;

        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, $r6, f0, f1, z0, r5, i1);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2, $r12, $r26;
        android.text.TextPaint r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.text.Layout$Alignment r4;
        android.text.TextDirectionHeuristic r5;
        float f0, f1;
        boolean z0, $z1, $z2;
        android.text.TextUtils$TruncateAt r6;
        android.text.Layout$Ellipsizer r7, r29;
        android.text.Layout$Directions[] r8, $r16;
        android.graphics.Paint$FontMetricsInt r9;
        android.text.Spannable r10;
        android.text.DynamicLayout$ChangeWatcher[] r11;
        android.text.Layout$Directions $r15;
        android.text.PackedIntVector $r17, $r18, r30, r31;
        android.text.PackedObjectVector $r19, r32;
        android.text.DynamicLayout$ChangeWatcher $r20, $r22, $r23, r33;
        java.lang.Object[] $r21;
        int[] r27;
        android.text.Layout$SpannedEllipsizer r28;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        r5 := @parameter5: android.text.TextDirectionHeuristic;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        r6 := @parameter9: android.text.TextUtils$TruncateAt;

        i1 := @parameter10: int;

        if r6 != null goto label01;

        $r12 = r2;

        goto label03;

     label01:
        $z1 = r2 instanceof android.text.Spanned;

        if $z1 == 0 goto label02;

        r28 = new android.text.Layout$SpannedEllipsizer;

        $r12 = r28;

        specialinvoke r28.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r2);

        goto label03;

     label02:
        r29 = new android.text.Layout$Ellipsizer;

        $r12 = r29;

        specialinvoke r29.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r2);

     label03:
        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>($r12, r3, i0, r4, r5, f0, f1);

        r0.<android.text.DynamicLayout: java.lang.CharSequence mBase> = r1;

        r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay> = r2;

        if r6 == null goto label04;

        r30 = new android.text.PackedIntVector;

        specialinvoke r30.<android.text.PackedIntVector: void <init>(int)>(5);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = r30;

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = i1;

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = r6;

        goto label05;

     label04:
        r31 = new android.text.PackedIntVector;

        specialinvoke r31.<android.text.PackedIntVector: void <init>(int)>(3);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = r31;

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = i0;

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = null;

     label05:
        r32 = new android.text.PackedObjectVector;

        specialinvoke r32.<android.text.PackedObjectVector: void <init>(int)>(1);

        r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects> = r32;

        r0.<android.text.DynamicLayout: boolean mIncludePad> = z0;

        if r6 == null goto label06;

        $r26 = virtualinvoke r0.<android.text.DynamicLayout: java.lang.CharSequence getText()>();

        r7 = (android.text.Layout$Ellipsizer) $r26;

        r7.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        r7.<android.text.Layout$Ellipsizer: int mWidth> = i1;

        r7.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = r6;

        r0.<android.text.DynamicLayout: boolean mEllipsize> = 1;

     label06:
        if r6 == null goto label07;

        r27 = newarray (int)[5];

        r27[3] = -2147483648;

        goto label08;

     label07:
        r27 = newarray (int)[3];

     label08:
        $r16 = newarray (android.text.Layout$Directions)[1];

        $r15 = <android.text.DynamicLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        $r16[0] = $r15;

        r8 = $r16;

        r9 = virtualinvoke r3.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        i2 = r9.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i3 = r9.<android.graphics.Paint$FontMetricsInt: int descent>;

        r27[0] = 1073741824;

        r27[1] = 0;

        r27[2] = i3;

        $r17 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r17.<android.text.PackedIntVector: void insertAt(int,int[])>(0, r27);

        $i5 = i3 - i2;

        r27[1] = $i5;

        $r18 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r18.<android.text.PackedIntVector: void insertAt(int,int[])>(1, r27);

        $r19 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        virtualinvoke $r19.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>(0, r8);

        $i6 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>(r1, 0, 0, $i6);

        $z2 = r1 instanceof android.text.Spannable;

        if $z2 == 0 goto label12;

        $r20 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        if $r20 != null goto label09;

        r33 = new android.text.DynamicLayout$ChangeWatcher;

        specialinvoke r33.<android.text.DynamicLayout$ChangeWatcher: void <init>(android.text.DynamicLayout)>(r0);

        r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher> = r33;

     label09:
        r10 = (android.text.Spannable) r1;

        $i8 = interfaceinvoke r10.<android.text.Spannable: int length()>();

        $r21 = interfaceinvoke r10.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i8, class "android/text/DynamicLayout$ChangeWatcher");

        r11 = (android.text.DynamicLayout$ChangeWatcher[]) $r21;

        i4 = 0;

     label10:
        $i7 = lengthof r11;

        if i4 >= $i7 goto label11;

        $r22 = r11[i4];

        interfaceinvoke r10.<android.text.Spannable: void removeSpan(java.lang.Object)>($r22);

        i4 = i4 + 1;

        goto label10;

     label11:
        $r23 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        $i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        interfaceinvoke r10.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r23, 0, $i9, 8388626);

     label12:
        return;
    }

    private void reflow(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2, $r9;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66;
        android.text.Spanned r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        java.lang.Object[] r4, $r10, $r17, r27, r29;
        java.lang.Throwable r5, r8, $r24, $r25;
        android.text.Layout$Directions[] r6;
        int[] r7;
        android.text.TextDirectionHeuristic $r11;
        float $f0, $f1, $f2;
        android.text.TextPaint $r12;
        android.text.TextUtils$TruncateAt $r13;
        android.text.PackedIntVector $r14, $r16, $r18, $r19;
        android.text.PackedObjectVector $r15, $r20;
        android.text.Layout$Directions $r21;
        java.lang.Object $r22, $r26;
        android.text.StaticLayout $r23, r28;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r9 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        if r1 == $r9 goto label01;

        return;

     label01:
        r2 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

        i3 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $i16 = i0 - 1;

        i4 = staticinvoke <android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>(r2, 10, $i16);

        if i4 >= 0 goto label02;

        i52 = 0;

        goto label03;

     label02:
        i52 = i4 + 1;

     label03:
        i5 = i0 - i52;

        i53 = i1 + i5;

        i54 = i2 + i5;

        i55 = i0 - i5;

        $i17 = i55 + i54;

        i56 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r2, 10, $i17);

        if i56 >= 0 goto label04;

        i57 = i3;

        goto label05;

     label04:
        i57 = i56 + 1;

     label05:
        $i18 = i55 + i54;

        i6 = i57 - $i18;

        i58 = i53 + i6;

        i59 = i54 + i6;

        $z1 = r2 instanceof android.text.Spanned;

        if $z1 == 0 goto label11;

        r3 = (android.text.Spanned) r2;

     label06:
        z0 = 0;

        $i48 = i55 + i59;

        r4 = interfaceinvoke r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i55, $i48, class "android/text/style/WrapTogetherSpan");

        i7 = 0;

     label07:
        $i47 = lengthof r4;

        if i7 >= $i47 goto label10;

        $r22 = r4[i7];

        i8 = interfaceinvoke r3.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r22);

        $r26 = r4[i7];

        i9 = interfaceinvoke r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r26);

        if i8 >= i55 goto label08;

        z0 = 1;

        i10 = i55 - i8;

        i58 = i58 + i10;

        i59 = i59 + i10;

        i55 = i55 - i10;

     label08:
        $i51 = i55 + i59;

        if i9 <= $i51 goto label09;

        z0 = 1;

        $i50 = i55 + i59;

        i60 = i9 - $i50;

        i58 = i58 + i60;

        i59 = i59 + i60;

     label09:
        i7 = i7 + 1;

        goto label07;

     label10:
        if z0 != 0 goto label06;

     label11:
        i61 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i55);

        i62 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i61);

        $i20 = i55 + i58;

        i63 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>($i20);

        $i19 = i55 + i59;

        if $i19 != i3 goto label12;

        i63 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

     label12:
        i64 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i63);

        $i22 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

        if i63 != $i22 goto label13;

        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        z8 = $z7;

        $r10 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        r27 = $r10;

        entermonitor $r10;

     label15:
        r28 = <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout>;

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = null;

        exitmonitor r27;

     label16:
        goto label19;

     label17:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r27;

     label18:
        throw r5;

     label19:
        if r28 != null goto label20;

        $r23 = new android.text.StaticLayout;

        specialinvoke $r23.<android.text.StaticLayout: void <init>(java.lang.CharSequence)>(null);

        r28 = $r23;

        goto label21;

     label20:
        virtualinvoke r28.<android.text.StaticLayout: void prepare()>();

     label21:
        $i21 = i55 + i59;

        $r12 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextPaint getPaint()>();

        $i23 = virtualinvoke r0.<android.text.DynamicLayout: int getWidth()>();

        $r11 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        $f0 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingMultiplier()>();

        $f2 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingAdd()>();

        $i24 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        $f1 = (float) $i24;

        $r13 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        virtualinvoke r28.<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt)>(r2, i55, $i21, $r12, $i23, $r11, $f0, $f2, 0, 1, $f1, $r13);

        i65 = virtualinvoke r28.<android.text.StaticLayout: int getLineCount()>();

        $i26 = i55 + i59;

        if $i26 == i3 goto label22;

        $i43 = i65 - 1;

        $i42 = virtualinvoke r28.<android.text.StaticLayout: int getLineStart(int)>($i43);

        $i49 = i55 + i59;

        if $i42 != $i49 goto label22;

        i65 = i65 + -1;

     label22:
        $r14 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i25 = i63 - i61;

        virtualinvoke $r14.<android.text.PackedIntVector: void deleteAt(int,int)>(i61, $i25);

        $r15 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i27 = i63 - i61;

        virtualinvoke $r15.<android.text.PackedObjectVector: void deleteAt(int,int)>(i61, $i27);

        i66 = virtualinvoke r28.<android.text.StaticLayout: int getLineTop(int)>(i65);

        i12 = 0;

        i11 = 0;

        $z2 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z2 == 0 goto label23;

        if i61 != 0 goto label23;

        i12 = virtualinvoke r28.<android.text.StaticLayout: int getTopPadding()>();

        r0.<android.text.DynamicLayout: int mTopPadding> = i12;

        i66 = i66 - i12;

     label23:
        $z3 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        if $z3 == 0 goto label24;

        if z8 == 0 goto label24;

        i11 = virtualinvoke r28.<android.text.StaticLayout: int getBottomPadding()>();

        r0.<android.text.DynamicLayout: int mBottomPadding> = i11;

        i66 = i66 + i11;

     label24:
        $r16 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i29 = i59 - i58;

        virtualinvoke $r16.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i61, 0, $i29);

        $r18 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i28 = i62 - i64;

        $i32 = $i28 + i66;

        virtualinvoke $r18.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i61, 1, $i32);

        $z4 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z4 == 0 goto label25;

        r7 = newarray (int)[5];

        r7[3] = -2147483648;

        goto label26;

     label25:
        r7 = newarray (int)[3];

     label26:
        r6 = newarray (android.text.Layout$Directions)[1];

        i14 = 0;

     label27:
        if i14 >= i65 goto label33;

        $i31 = virtualinvoke r28.<android.text.StaticLayout: int getLineStart(int)>(i14);

        $i37 = virtualinvoke r28.<android.text.StaticLayout: int getParagraphDirection(int)>(i14);

        $i38 = $i37 << 30;

        $i39 = $i31 | $i38;

        $z5 = virtualinvoke r28.<android.text.StaticLayout: boolean getLineContainsTab(int)>(i14);

        if $z5 == 0 goto label28;

        $i45 = 536870912;

        goto label29;

     label28:
        $i45 = 0;

     label29:
        $i34 = $i39 | $i45;

        r7[0] = $i34;

        $i35 = virtualinvoke r28.<android.text.StaticLayout: int getLineTop(int)>(i14);

        i13 = $i35 + i62;

        if i14 <= 0 goto label30;

        i13 = i13 - i12;

     label30:
        r7[1] = i13;

        i15 = virtualinvoke r28.<android.text.StaticLayout: int getLineDescent(int)>(i14);

        $i36 = i65 - 1;

        if i14 != $i36 goto label31;

        i15 = i15 + i11;

     label31:
        r7[2] = i15;

        $r21 = virtualinvoke r28.<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>(i14);

        r6[0] = $r21;

        $z6 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z6 == 0 goto label32;

        $i44 = virtualinvoke r28.<android.text.StaticLayout: int getEllipsisStart(int)>(i14);

        r7[3] = $i44;

        $i46 = virtualinvoke r28.<android.text.StaticLayout: int getEllipsisCount(int)>(i14);

        r7[4] = $i46;

     label32:
        $r19 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i41 = i61 + i14;

        virtualinvoke $r19.<android.text.PackedIntVector: void insertAt(int,int[])>($i41, r7);

        $r20 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i40 = i61 + i14;

        virtualinvoke $r20.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>($i40, r6);

        i14 = i14 + 1;

        goto label27;

     label33:
        $i33 = i63 - 1;

        virtualinvoke r0.<android.text.DynamicLayout: void updateBlocks(int,int,int)>(i61, $i33, i65);

        $r17 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        r29 = $r17;

        entermonitor $r17;

     label34:
        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = r28;

        virtualinvoke r28.<android.text.StaticLayout: void finish()>();

        exitmonitor r29;

     label35:
        goto label38;

     label36:
        $r24 := @caughtexception;

        r8 = $r24;

        exitmonitor r29;

     label37:
        throw r8;

     label38:
        return;

        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    private void createBlocks()
    {
        android.text.DynamicLayout r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.CharSequence r1;
        int[] $r2, $r3, $r4, $r5;

        r0 := @this: android.text.DynamicLayout;

        i0 = 400;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 0;

        r1 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

     label1:
        i5 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r1, 10, i0);

        if i5 >= 0 goto label2;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>($i2);

        goto label3;

     label2:
        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>(i5);

        i0 = i5 + 400;

        goto label1;

     label3:
        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i3 = lengthof $r2;

        $r3 = newarray (int)[$i3];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r3;

        i1 = 0;

     label4:
        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i4 = lengthof $r4;

        if i1 >= $i4 goto label5;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r5[i1] = -1;

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }

    private void addBlockAtOffset(int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i0);

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>(1);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r5;

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i8 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $r6[$i8] = i1;

        $i9 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i10 = $i9 + 1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i10;

        return;

     label1:
        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i3 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i4 = $i3 - 1;

        i2 = $r2[$i4];

        if i1 <= i2 goto label2;

        $r3 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i5 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $r4 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>($r3, $i5, i1);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r4;

        $i6 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i7 = $i6 + 1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i7;

     label2:
        return;
    }

    void updateBlocks(int, int, int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, i57, i58, i59, i60, i61;
        boolean z0, z1, z2, $z3, $z4, $z5;
        int[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if $r3 != null goto label01;

        specialinvoke r0.<android.text.DynamicLayout: void createBlocks()>();

        return;

     label01:
        i3 = -1;

        i4 = -1;

        i5 = 0;

     label02:
        $i10 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i5 >= $i10 goto label04;

        $r27 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i56 = $r27[i5];

        if $i56 < i0 goto label03;

        i3 = i5;

        goto label04;

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        i57 = i3;

     label05:
        $i11 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i57 >= $i11 goto label07;

        $r26 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i55 = $r26[i57];

        if $i55 < i1 goto label06;

        i4 = i57;

        goto label07;

     label06:
        i57 = i57 + 1;

        goto label05;

     label07:
        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        i58 = $r4[i4];

        if i3 != 0 goto label08;

        $i13 = 0;

        goto label09;

     label08:
        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i12 = i3 - 1;

        $i14 = $r5[$i12];

        $i13 = $i14 + 1;

     label09:
        if i0 <= $i13 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        z0 = $z4;

        if i2 <= 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z1 = $z5;

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i15 = $r6[i4];

        if i1 >= $i15 goto label14;

        $z3 = 1;

        goto label15;

     label14:
        $z3 = 0;

     label15:
        z2 = $z3;

        i6 = 0;

        if z0 == 0 goto label16;

        i6 = i6 + 1;

     label16:
        if z1 == 0 goto label17;

        i6 = i6 + 1;

     label17:
        if z2 == 0 goto label18;

        i6 = i6 + 1;

     label18:
        $i17 = i4 - i3;

        i7 = $i17 + 1;

        $i16 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i18 = $i16 + i6;

        i8 = $i18 - i7;

        if i8 != 0 goto label19;

        $r24 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $r24[0] = 0;

        $r23 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r23[0] = -1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 1;

        return;

     label19:
        $r7 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i20 = lengthof $r7;

        if i8 <= $i20 goto label20;

        $r18 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i43 = lengthof $r18;

        $i44 = $i43 * 2;

        $i45 = staticinvoke <java.lang.Math: int max(int,int)>($i44, i8);

        r1 = staticinvoke <com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>($i45);

        $i41 = lengthof r1;

        r2 = newarray (int)[$i41];

        $r20 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r20, 0, r1, 0, i3);

        $r21 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r21, 0, r2, 0, i3);

        $r22 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i52 = i4 + 1;

        $i51 = i3 + i6;

        $i42 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i49 = $i42 - i4;

        $i50 = $i49 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r22, $i52, r1, $i51, $i50);

        $r25 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i53 = i4 + 1;

        $i54 = i3 + i6;

        $i46 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i47 = $i46 - i4;

        $i48 = $i47 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r25, $i53, r2, $i54, $i48);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r1;

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = r2;

        goto label21;

     label20:
        $r9 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i26 = i4 + 1;

        $r8 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i21 = i3 + i6;

        $i19 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i22 = $i19 - i4;

        $i23 = $i22 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r9, $i26, $r8, $i21, $i23);

        $r11 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i27 = i4 + 1;

        $r10 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i29 = i3 + i6;

        $i24 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i25 = $i24 - i4;

        $i28 = $i25 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r11, $i27, $r10, $i29, $i28);

     label21:
        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i8;

        $i32 = i1 - i0;

        $i30 = $i32 + 1;

        i59 = i2 - $i30;

        if i59 == 0 goto label24;

        i60 = i3 + i6;

        i9 = i60;

     label22:
        $i37 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i9 >= $i37 goto label23;

        $r19 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i40 = $r19[i9];

        $i39 = $i40 + i59;

        $r19[i9] = $i39;

        i9 = i9 + 1;

        goto label22;

     label23:
        goto label25;

     label24:
        i60 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

     label25:
        $i31 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        $i34 = staticinvoke <java.lang.Math: int min(int,int)>($i31, i60);

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = $i34;

        i61 = i3;

        if z0 == 0 goto label26;

        $r17 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i38 = i0 - 1;

        $r17[i61] = $i38;

        $r16 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r16[i61] = -1;

        i61 = i61 + 1;

     label26:
        if z1 == 0 goto label27;

        $r15 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i36 = i0 + i2;

        $i35 = $i36 - 1;

        $r15[i61] = $i35;

        $r14 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r14[i61] = -1;

        i61 = i61 + 1;

     label27:
        if z2 == 0 goto label28;

        $r13 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i33 = i58 + i59;

        $r13[i61] = $i33;

        $r12 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r12[i61] = -1;

     label28:
        return;
    }

    void setBlocksDataForTest(int[], int[], int)
    {
        android.text.DynamicLayout r0;
        int[] r1, r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $i1 = lengthof r1;

        $r3 = newarray (int)[$i1];

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r3;

        $i2 = lengthof r2;

        $r4 = newarray (int)[$i2];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r4;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, 0, $r5, 0, $i3);

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r2, 0, $r6, 0, $i4);

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i0;

        return;
    }

    public int[] getBlockEndLines()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        return $r1;
    }

    public int[] getBlockIndices()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        return $r1;
    }

    public int getNumberOfBlocks()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        return $i0;
    }

    public int getIndexFirstChangedBlock()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        return $i0;
    }

    public void setIndexFirstChangedBlock(int)
    {
        android.text.DynamicLayout r0;
        int i0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = i0;

        return;
    }

    public int getLineCount()
    {
        android.text.DynamicLayout r0;
        android.text.PackedIntVector $r1;
        int $i0, $i1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public int getLineTop(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 1);

        return $i1;
    }

    public int getLineDescent(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 2);

        return $i1;
    }

    public int getLineStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 & 536870911;

        return $i2;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;
        boolean $z0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 & 536870912;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getParagraphDirection(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 >> 30;

        return $i2;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.DynamicLayout r0;
        int i0;
        android.text.PackedObjectVector $r1;
        java.lang.Object $r2;
        android.text.Layout$Directions $r3;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $r2 = virtualinvoke $r1.<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>(i0, 0);

        $r3 = (android.text.Layout$Directions) $r2;

        return $r3;
    }

    public int getTopPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mTopPadding>;

        return $i0;
    }

    public int getBottomPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsizedWidth()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        return $i0;
    }

    public int getEllipsisStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 3);

        return $i1;
    }

    public int getEllipsisCount(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 4);

        return $i1;
    }

    static void access$000(android.text.DynamicLayout, java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @parameter0: android.text.DynamicLayout;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static void <clinit>()
    {
        android.text.StaticLayout $r0;
        java.lang.Object[] $r1;

        <android.text.DynamicLayout: int ELLIPSIS_UNDEFINED> = -2147483648;

        <android.text.DynamicLayout: int TAB_MASK> = 536870912;

        <android.text.DynamicLayout: int DIR_SHIFT> = 30;

        <android.text.DynamicLayout: int START_MASK> = 536870911;

        <android.text.DynamicLayout: int COLUMNS_ELLIPSIZE> = 5;

        <android.text.DynamicLayout: int ELLIPSIS_COUNT> = 4;

        <android.text.DynamicLayout: int ELLIPSIS_START> = 3;

        <android.text.DynamicLayout: int COLUMNS_NORMAL> = 3;

        <android.text.DynamicLayout: int DESCENT> = 2;

        <android.text.DynamicLayout: int TOP> = 1;

        <android.text.DynamicLayout: int TAB> = 0;

        <android.text.DynamicLayout: int DIR> = 0;

        <android.text.DynamicLayout: int START> = 0;

        <android.text.DynamicLayout: int INVALID_BLOCK_INDEX> = -1;

        <android.text.DynamicLayout: int BLOCK_MINIMUM_CHARACTER_LENGTH> = 400;

        <android.text.DynamicLayout: int PRIORITY> = 128;

        $r0 = new android.text.StaticLayout;

        specialinvoke $r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence)>(null);

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <android.text.DynamicLayout: java.lang.Object[] sLock> = $r1;

        return;
    }
}
