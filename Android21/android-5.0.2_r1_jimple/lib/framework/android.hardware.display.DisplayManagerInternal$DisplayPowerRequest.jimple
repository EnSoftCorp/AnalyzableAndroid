public final class android.hardware.display.DisplayManagerInternal$DisplayPowerRequest extends java.lang.Object
{
    public static final int POLICY_OFF;
    public static final int POLICY_DOZE;
    public static final int POLICY_DIM;
    public static final int POLICY_BRIGHT;
    public int policy;
    public boolean useProximitySensor;
    public int screenBrightness;
    public float screenAutoBrightnessAdjustment;
    public boolean useAutoBrightness;
    public boolean lowPowerMode;
    public boolean blockScreenOn;
    public int dozeScreenBrightness;
    public int dozeScreenState;

    public void <init>()
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy> = 3;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor> = 0;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness> = 255;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment> = 0.0F;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness> = 0;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn> = 0;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness> = -1;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState> = 0;

        return;
    }

    public void <init>(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0, r1;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        r1 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: void copyFrom(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)>(r1);

        return;
    }

    public boolean isBrightOrDim()
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        $i0 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        if $i0 == 3 goto label1;

        $i1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        if $i1 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void copyFrom(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3;
        float $f0;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        r1 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        $i0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy> = $i0;

        $z0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor> = $z0;

        $i1 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness> = $i1;

        $f0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment> = $f0;

        $z1 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness> = $z1;

        $z2 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn> = $z2;

        $z3 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean lowPowerMode>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean lowPowerMode> = $z3;

        $i2 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness> = $i2;

        $i3 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState>;

        r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState> = $i3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        if $z0 == 0 goto label1;

        $r2 = (android.hardware.display.DisplayManagerInternal$DisplayPowerRequest) r1;

        $z1 = virtualinvoke r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean equals(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0, r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        float $f0, $f1;
        byte $b4;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        r1 := @parameter0: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        if r1 == null goto label1;

        $i1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        $i0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        if $i1 != $i0 goto label1;

        $z1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor>;

        $z0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor>;

        if $z1 != $z0 goto label1;

        $i3 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness>;

        $i2 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness>;

        if $i3 != $i2 goto label1;

        $f1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment>;

        $f0 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment>;

        $b4 = $f1 cmpl $f0;

        if $b4 != 0 goto label1;

        $z3 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness>;

        $z2 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness>;

        if $z3 != $z2 goto label1;

        $z5 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn>;

        $z4 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn>;

        if $z5 != $z4 goto label1;

        $z7 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean lowPowerMode>;

        $z6 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean lowPowerMode>;

        if $z7 != $z6 goto label1;

        $i7 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness>;

        $i5 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness>;

        if $i7 != $i5 goto label1;

        $i8 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState>;

        $i6 = r1.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState>;

        if $i8 != $i6 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        return $z8;
    }

    public int hashCode()
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        return 0;
    }

    public java.lang.String toString()
    {
        android.hardware.display.DisplayManagerInternal$DisplayPowerRequest r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        float $f0;

        r0 := @this: android.hardware.display.DisplayManagerInternal$DisplayPowerRequest;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("policy=");

        $i0 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int policy>;

        $r3 = staticinvoke <android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: java.lang.String policyToString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useProximitySensor=");

        $z0 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useProximitySensor>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", screenBrightness=");

        $i1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int screenBrightness>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", screenAutoBrightnessAdjustment=");

        $f0 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: float screenAutoBrightnessAdjustment>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useAutoBrightness=");

        $z1 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean useAutoBrightness>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blockScreenOn=");

        $z2 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean blockScreenOn>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lowPowerMode=");

        $z3 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: boolean lowPowerMode>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dozeScreenBrightness=");

        $i2 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenBrightness>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dozeScreenState=");

        $i3 = r0.<android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int dozeScreenState>;

        $r20 = staticinvoke <android.view.Display: java.lang.String stateToString(int)>($i3);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public static java.lang.String policyToString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return "OFF";

     label2:
        return "DOZE";

     label3:
        return "DIM";

     label4:
        return "BRIGHT";

     label5:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static void <clinit>()
    {
        <android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int POLICY_BRIGHT> = 3;

        <android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int POLICY_DIM> = 2;

        <android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int POLICY_DOZE> = 1;

        <android.hardware.display.DisplayManagerInternal$DisplayPowerRequest: int POLICY_OFF> = 0;

        return;
    }
}
