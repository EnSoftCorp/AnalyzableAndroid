class android.net.http.CertificateChainValidator$NoPreloadHolder extends java.lang.Object
{
    private static final android.net.http.CertificateChainValidator sInstance;
    private static final javax.net.ssl.HostnameVerifier sVerifier;

    private void <init>()
    {
        android.net.http.CertificateChainValidator$NoPreloadHolder r0;

        r0 := @this: android.net.http.CertificateChainValidator$NoPreloadHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.net.http.CertificateChainValidator access$100()
    {
        android.net.http.CertificateChainValidator $r0;

        $r0 = <android.net.http.CertificateChainValidator$NoPreloadHolder: android.net.http.CertificateChainValidator sInstance>;

        return $r0;
    }

    static javax.net.ssl.HostnameVerifier access$200()
    {
        javax.net.ssl.HostnameVerifier $r0;

        $r0 = <android.net.http.CertificateChainValidator$NoPreloadHolder: javax.net.ssl.HostnameVerifier sVerifier>;

        return $r0;
    }

    static void <clinit>()
    {
        android.net.http.CertificateChainValidator $r0;
        javax.net.ssl.HostnameVerifier $r1;

        $r0 = new android.net.http.CertificateChainValidator;

        specialinvoke $r0.<android.net.http.CertificateChainValidator: void <init>(android.net.http.CertificateChainValidator$1)>(null);

        <android.net.http.CertificateChainValidator$NoPreloadHolder: android.net.http.CertificateChainValidator sInstance> = $r0;

        $r1 = staticinvoke <javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>();

        <android.net.http.CertificateChainValidator$NoPreloadHolder: javax.net.ssl.HostnameVerifier sVerifier> = $r1;

        return;
    }
}
