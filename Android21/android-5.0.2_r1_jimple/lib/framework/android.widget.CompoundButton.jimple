public abstract class android.widget.CompoundButton extends android.widget.Button implements android.widget.Checkable
{
    private boolean mChecked;
    private int mButtonResource;
    private boolean mBroadcasting;
    private android.graphics.drawable.Drawable mButtonDrawable;
    private android.content.res.ColorStateList mButtonTintList;
    private android.graphics.PorterDuff$Mode mButtonTintMode;
    private boolean mHasButtonTint;
    private boolean mHasButtonTintMode;
    private android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener;
    private android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener;
    private static final int[] CHECKED_STATE_SET;

    public void <init>(android.content.Context)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.CompoundButton r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        boolean z0, $z1, $z2;
        int[] $r5;
        android.content.res.ColorStateList $r6;
        android.graphics.PorterDuff$Mode $r7, $r8;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = null;

        r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode> = null;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 0;

        r0.<android.widget.CompoundButton: boolean mHasButtonTintMode> = 0;

        $r5 = <com.android.internal.R$styleable: int[] CompoundButton>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i0, i1);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if r4 == null goto label1;

        virtualinvoke r0.<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>(r4);

     label1:
        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(3);

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, -1);

        $r8 = r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode>;

        $r7 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i2, $r8);

        r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode> = $r7;

        r0.<android.widget.CompoundButton: boolean mHasButtonTintMode> = 1;

     label2:
        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(2);

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(2);

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = $r6;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 1;

     label3:
        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>(z0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    public void toggle()
    {
        android.widget.CompoundButton r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z1);

        return;
    }

    public boolean performClick()
    {
        android.widget.CompoundButton r0;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        virtualinvoke r0.<android.widget.CompoundButton: void toggle()>();

        $z0 = specialinvoke r0.<android.widget.Button: boolean performClick()>();

        return $z0;
    }

    public boolean isChecked()
    {
        android.widget.CompoundButton r0;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        return $z0;
    }

    public void setChecked(boolean)
    {
        android.widget.CompoundButton r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.widget.CompoundButton$OnCheckedChangeListener $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.CompoundButton;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.CompoundButton: boolean mChecked>;

        if $z1 == z0 goto label4;

        r0.<android.widget.CompoundButton: boolean mChecked> = z0;

        virtualinvoke r0.<android.widget.CompoundButton: void refreshDrawableState()>();

        virtualinvoke r0.<android.widget.CompoundButton: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        $z2 = r0.<android.widget.CompoundButton: boolean mBroadcasting>;

        if $z2 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.CompoundButton: boolean mBroadcasting> = 1;

        $r1 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener>;

        if $r1 == null goto label2;

        $r4 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener>;

        $z4 = r0.<android.widget.CompoundButton: boolean mChecked>;

        interfaceinvoke $r4.<android.widget.CompoundButton$OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>(r0, $z4);

     label2:
        $r2 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener>;

        $z3 = r0.<android.widget.CompoundButton: boolean mChecked>;

        interfaceinvoke $r3.<android.widget.CompoundButton$OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>(r0, $z3);

     label3:
        r0.<android.widget.CompoundButton: boolean mBroadcasting> = 0;

     label4:
        return;
    }

    public void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
    {
        android.widget.CompoundButton r0;
        android.widget.CompoundButton$OnCheckedChangeListener r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.widget.CompoundButton$OnCheckedChangeListener;

        r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeListener> = r1;

        return;
    }

    void setOnCheckedChangeWidgetListener(android.widget.CompoundButton$OnCheckedChangeListener)
    {
        android.widget.CompoundButton r0;
        android.widget.CompoundButton$OnCheckedChangeListener r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.widget.CompoundButton$OnCheckedChangeListener;

        r0.<android.widget.CompoundButton: android.widget.CompoundButton$OnCheckedChangeListener mOnCheckedChangeWidgetListener> = r1;

        return;
    }

    public void setButtonDrawable(int)
    {
        android.widget.CompoundButton r0;
        int i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable r1;
        android.content.Context $r2;

        r0 := @this: android.widget.CompoundButton;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i3 = r0.<android.widget.CompoundButton: int mButtonResource>;

        if i0 != $i3 goto label1;

        return;

     label1:
        r0.<android.widget.CompoundButton: int mButtonResource> = i0;

        r1 = null;

        $i1 = r0.<android.widget.CompoundButton: int mButtonResource>;

        if $i1 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.CompoundButton: android.content.Context getContext()>();

        $i2 = r0.<android.widget.CompoundButton: int mButtonResource>;

        r1 = virtualinvoke $r2.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>($i2);

     label2:
        virtualinvoke r0.<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setButtonDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r5, $r6;
        int $i0, $i1, $i2;
        boolean $z0, $z2;
        int[] $r4;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r2 == r1 goto label5;

        $r3 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r6 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke r0.<android.widget.CompoundButton: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r6);

     label1:
        r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable> = r1;

        if r1 == null goto label5;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r0.<android.widget.CompoundButton: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>($i0);

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label2:
        $i1 = virtualinvoke r0.<android.widget.CompoundButton: int getVisibility()>();

        if $i1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z2, 0);

        $i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r0.<android.widget.CompoundButton: void setMinHeight(int)>($i2);

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

     label5:
        return;
    }

    public void setButtonTintList(android.content.res.ColorStateList)
    {
        android.widget.CompoundButton r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList> = r1;

        r0.<android.widget.CompoundButton: boolean mHasButtonTint> = 1;

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    public android.content.res.ColorStateList getButtonTintList()
    {
        android.widget.CompoundButton r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList>;

        return $r1;
    }

    public void setButtonTintMode(android.graphics.PorterDuff$Mode)
    {
        android.widget.CompoundButton r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode> = r1;

        r0.<android.widget.CompoundButton: boolean mHasButtonTintMode> = 1;

        specialinvoke r0.<android.widget.CompoundButton: void applyButtonTint()>();

        return;
    }

    public android.graphics.PorterDuff$Mode getButtonTintMode()
    {
        android.widget.CompoundButton r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode>;

        return $r1;
    }

    private void applyButtonTint()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r5, $r7;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.PorterDuff$Mode $r4;
        android.content.res.ColorStateList $r6;

        r0 := @this: android.widget.CompoundButton;

        $r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r1 == null goto label3;

        $z0 = r0.<android.widget.CompoundButton: boolean mHasButtonTint>;

        if $z0 != 0 goto label1;

        $z3 = r0.<android.widget.CompoundButton: boolean mHasButtonTintMode>;

        if $z3 == 0 goto label3;

     label1:
        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable> = $r3;

        $z1 = r0.<android.widget.CompoundButton: boolean mHasButtonTint>;

        if $z1 == 0 goto label2;

        $r7 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $r6 = r0.<android.widget.CompoundButton: android.content.res.ColorStateList mButtonTintList>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>($r6);

     label2:
        $z2 = r0.<android.widget.CompoundButton: boolean mHasButtonTintMode>;

        if $z2 == 0 goto label3;

        $r5 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        $r4 = r0.<android.widget.CompoundButton: android.graphics.PorterDuff$Mode mButtonTintMode>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff$Mode)>($r4);

     label3:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.CompoundButton r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/CompoundButton";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.CompoundButton r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/CompoundButton";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>(1);

        $z0 = r0.<android.widget.CompoundButton: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        return;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.CompoundButton r0;
        int i0, $i1;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 = specialinvoke r0.<android.widget.Button: int getCompoundPaddingLeft()>();

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 != 0 goto label1;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i0 = i0 + $i1;

     label1:
        return i0;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.CompoundButton r0;
        int i0, $i1;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 = specialinvoke r0.<android.widget.Button: int getCompoundPaddingRight()>();

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 == 0 goto label1;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i0 = i0 + $i1;

     label1:
        return i0;
    }

    public int getHorizontalOffsetForDrawables()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1;
        int $i0;

        r0 := @this: android.widget.CompoundButton;

        r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.CompoundButton r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r2 == null goto label09;

        $i9 = virtualinvoke r0.<android.widget.CompoundButton: int getGravity()>();

        i0 = $i9 & 112;

        i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        lookupswitch(i0)
        {
            case 16: goto label02;
            case 80: goto label01;
            default: goto label03;
        };

     label01:
        $i10 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        i3 = $i10 - i1;

        goto label04;

     label02:
        $i13 = virtualinvoke r0.<android.widget.CompoundButton: int getHeight()>();

        $i15 = $i13 - i1;

        i3 = $i15 / 2;

        goto label04;

     label03:
        i3 = 0;

     label04:
        i4 = i3 + i1;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z0 == 0 goto label05;

        $i11 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

        $i14 = $i11 - i2;

        goto label06;

     label05:
        $i14 = 0;

     label06:
        i5 = $i14;

        $z1 = virtualinvoke r0.<android.widget.CompoundButton: boolean isLayoutRtl()>();

        if $z1 == 0 goto label07;

        $i12 = virtualinvoke r0.<android.widget.CompoundButton: int getWidth()>();

        goto label08;

     label07:
        $i12 = i2;

     label08:
        i6 = $i12;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i5, i3, i6, i4);

        r3 = virtualinvoke r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable getBackground()>();

        if r3 == null goto label09;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>(i5, i3, i6, i4);

     label09:
        specialinvoke r0.<android.widget.Button: void onDraw(android.graphics.Canvas)>(r1);

        if r2 == null goto label11;

        i16 = r0.<android.widget.CompoundButton: int mScrollX>;

        i17 = r0.<android.widget.CompoundButton: int mScrollY>;

        if i16 != 0 goto label10;

        if i17 != 0 goto label10;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label11;

     label10:
        $f1 = (float) i16;

        $f0 = (float) i17;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $i7 = neg i16;

        $f3 = (float) $i7;

        $i8 = neg i17;

        $f2 = (float) $i8;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f3, $f2);

     label11:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.CompoundButton r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.Button: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.CompoundButton: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.CompoundButton: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void drawableStateChanged()
    {
        android.widget.CompoundButton r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.CompoundButton;

        specialinvoke r0.<android.widget.Button: void drawableStateChanged()>();

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r2 == null goto label1;

        r1 = virtualinvoke r0.<android.widget.CompoundButton: int[] getDrawableState()>();

        $r3 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        virtualinvoke r0.<android.widget.CompoundButton: void invalidate()>();

     label1:
        return;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.widget.CompoundButton r0;
        float f0, f1;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.CompoundButton;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<android.widget.Button: void drawableHotspotChanged(float,float)>(f0, f1);

        $r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.Button: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if r1 != $r2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.CompoundButton r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.CompoundButton;

        specialinvoke r0.<android.widget.Button: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.CompoundButton: android.graphics.drawable.Drawable mButtonDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.CompoundButton r0;
        android.os.Parcelable r1;
        android.widget.CompoundButton$SavedState r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 = specialinvoke r0.<android.widget.Button: android.os.Parcelable onSaveInstanceState()>();

        $r3 = new android.widget.CompoundButton$SavedState;

        specialinvoke $r3.<android.widget.CompoundButton$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r3;

        $z0 = virtualinvoke r0.<android.widget.CompoundButton: boolean isChecked()>();

        r2.<android.widget.CompoundButton$SavedState: boolean checked> = $z0;

        return r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.CompoundButton r0;
        android.os.Parcelable r1, $r3;
        android.widget.CompoundButton$SavedState r2;
        boolean $z0;

        r0 := @this: android.widget.CompoundButton;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.CompoundButton$SavedState) r1;

        $r3 = virtualinvoke r2.<android.widget.CompoundButton$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.Button: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $z0 = r2.<android.widget.CompoundButton$SavedState: boolean checked>;

        virtualinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>($z0);

        virtualinvoke r0.<android.widget.CompoundButton: void requestLayout()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.widget.CompoundButton: int[] CHECKED_STATE_SET> = $r0;

        return;
    }
}
