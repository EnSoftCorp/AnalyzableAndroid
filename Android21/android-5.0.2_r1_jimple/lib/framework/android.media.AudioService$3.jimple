class android.media.AudioService$3 extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    final android.media.IVolumeController val$controller;
    final android.media.AudioService this$0;

    void <init>(android.media.AudioService, android.media.IVolumeController)
    {
        android.media.AudioService$3 r0;
        android.media.AudioService r1;
        android.media.IVolumeController r2;

        r0 := @this: android.media.AudioService$3;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: android.media.IVolumeController;

        r0.<android.media.AudioService$3: android.media.AudioService this$0> = r1;

        r0.<android.media.AudioService$3: android.media.IVolumeController val$controller> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void binderDied()
    {
        android.media.AudioService$3 r0;
        android.media.AudioService $r1, $r4;
        android.media.AudioService$VolumeController $r2;
        android.media.IVolumeController $r3;
        boolean $z0;

        r0 := @this: android.media.AudioService$3;

        $r1 = r0.<android.media.AudioService$3: android.media.AudioService this$0>;

        $r2 = staticinvoke <android.media.AudioService: android.media.AudioService$VolumeController access$9500(android.media.AudioService)>($r1);

        $r3 = r0.<android.media.AudioService$3: android.media.IVolumeController val$controller>;

        $z0 = virtualinvoke $r2.<android.media.AudioService$VolumeController: boolean isSameBinder(android.media.IVolumeController)>($r3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService", "Current remote volume controller died, unregistering");

        $r4 = r0.<android.media.AudioService$3: android.media.AudioService this$0>;

        virtualinvoke $r4.<android.media.AudioService: void setVolumeController(android.media.IVolumeController)>(null);

     label1:
        return;
    }
}
