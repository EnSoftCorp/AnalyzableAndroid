public class android.app.Notification$Builder extends java.lang.Object
{
    private static final int MAX_ACTION_BUTTONS;
    private static final float LARGE_TEXT_SCALE;
    public static final java.lang.String EXTRA_NEEDS_REBUILD;
    public static final java.lang.String EXTRA_REBUILD_LARGE_ICON;
    public static final java.lang.String EXTRA_REBUILD_CONTENT_VIEW;
    public static final java.lang.String EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT;
    public static final java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW;
    public static final java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT;
    public static final java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW;
    public static final java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT;
    private static final java.lang.String EXTRA_REBUILD_CONTEXT_APPLICATION_INFO;
    private static final boolean STRIP_AND_REBUILD;
    private android.content.Context mContext;
    private long mWhen;
    private int mSmallIcon;
    private int mSmallIconLevel;
    private int mNumber;
    private java.lang.CharSequence mContentTitle;
    private java.lang.CharSequence mContentText;
    private java.lang.CharSequence mContentInfo;
    private java.lang.CharSequence mSubText;
    private android.app.PendingIntent mContentIntent;
    private android.widget.RemoteViews mContentView;
    private android.app.PendingIntent mDeleteIntent;
    private android.app.PendingIntent mFullScreenIntent;
    private java.lang.CharSequence mTickerText;
    private android.widget.RemoteViews mTickerView;
    private android.graphics.Bitmap mLargeIcon;
    private android.net.Uri mSound;
    private int mAudioStreamType;
    private android.media.AudioAttributes mAudioAttributes;
    private long[] mVibrate;
    private int mLedArgb;
    private int mLedOnMs;
    private int mLedOffMs;
    private int mDefaults;
    private int mFlags;
    private int mProgressMax;
    private int mProgress;
    private boolean mProgressIndeterminate;
    private java.lang.String mCategory;
    private java.lang.String mGroupKey;
    private java.lang.String mSortKey;
    private android.os.Bundle mExtras;
    private int mPriority;
    private java.util.ArrayList mActions;
    private boolean mUseChronometer;
    private android.app.Notification$Style mStyle;
    private boolean mShowWhen;
    private int mVisibility;
    private android.app.Notification mPublicVersion;
    private final com.android.internal.util.NotificationColorUtil mColorUtil;
    private java.util.ArrayList mPeople;
    private int mColor;
    private int mOriginatingUserId;
    private android.os.Bundle mRebuildBundle;
    private android.app.Notification mRebuildNotification;
    private boolean mHasThreeLines;

    public void <init>(android.content.Context)
    {
        android.app.Notification$Builder r0;
        android.content.Context r1, $r7;
        java.util.ArrayList $r2, $r5;
        android.os.Bundle $r3;
        long $l0;
        android.media.AudioAttributes $r4;
        android.content.pm.ApplicationInfo $r6;
        int $i1;
        com.android.internal.util.NotificationColorUtil $r8;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(3);

        r0.<android.app.Notification$Builder: java.util.ArrayList mActions> = $r2;

        r0.<android.app.Notification$Builder: boolean mShowWhen> = 1;

        r0.<android.app.Notification$Builder: int mVisibility> = 0;

        r0.<android.app.Notification$Builder: android.app.Notification mPublicVersion> = null;

        r0.<android.app.Notification$Builder: int mColor> = 0;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle> = $r3;

        r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification> = null;

        r0.<android.app.Notification$Builder: android.content.Context mContext> = r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.app.Notification$Builder: long mWhen> = $l0;

        r0.<android.app.Notification$Builder: int mAudioStreamType> = -1;

        $r4 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        r0.<android.app.Notification$Builder: android.media.AudioAttributes mAudioAttributes> = $r4;

        r0.<android.app.Notification$Builder: int mPriority> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Notification$Builder: java.util.ArrayList mPeople> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 >= 21 goto label1;

        $r7 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r8 = staticinvoke <com.android.internal.util.NotificationColorUtil: com.android.internal.util.NotificationColorUtil getInstance(android.content.Context)>($r7);

        goto label2;

     label1:
        $r8 = null;

     label2:
        r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil> = $r8;

        return;
    }

    private void <init>(android.content.Context, android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.content.Context r1;
        android.app.Notification r2;
        android.app.Notification$Style r3;
        android.os.Bundle r4;
        java.lang.String r5, $r15;
        java.lang.Class r6;
        java.lang.reflect.Constructor r7;
        boolean $z0;
        java.lang.Class[] $r9;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.Throwable $r16, r17;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.Notification;

        specialinvoke r0.<android.app.Notification$Builder: void <init>(android.content.Context)>(r1);

        r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification> = r2;

        specialinvoke r0.<android.app.Notification$Builder: void restoreFromNotification(android.app.Notification)>(r2);

        r3 = null;

        r4 = r2.<android.app.Notification: android.os.Bundle extras>;

        r5 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.template");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 != 0 goto label4;

        r6 = staticinvoke <android.app.Notification$Builder: java.lang.Class getNotificationStyleClass(java.lang.String)>(r5);

        if r6 != null goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown style class: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Notification", $r15);

        return;

     label1:
        $r9 = newarray (java.lang.Class)[0];

        r7 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

        $r10 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        r3 = (android.app.Notification$Style) $r11;

        virtualinvoke r3.<android.app.Notification$Style: void restoreFromExtras(android.os.Bundle)>(r4);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r17 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Notification", "Could not create Style", r17);

        return;

     label4:
        if r3 == null goto label5;

        virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>(r3);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.app.Notification$Builder setWhen(long)
    {
        android.app.Notification$Builder r0;
        long l0;

        r0 := @this: android.app.Notification$Builder;

        l0 := @parameter0: long;

        r0.<android.app.Notification$Builder: long mWhen> = l0;

        return r0;
    }

    public android.app.Notification$Builder setShowWhen(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        r0.<android.app.Notification$Builder: boolean mShowWhen> = z0;

        return r0;
    }

    public android.app.Notification$Builder setUsesChronometer(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        r0.<android.app.Notification$Builder: boolean mUseChronometer> = z0;

        return r0;
    }

    public android.app.Notification$Builder setSmallIcon(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mSmallIcon> = i0;

        return r0;
    }

    public android.app.Notification$Builder setSmallIcon(int, int)
    {
        android.app.Notification$Builder r0;
        int i0, i1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.app.Notification$Builder: int mSmallIcon> = i0;

        r0.<android.app.Notification$Builder: int mSmallIconLevel> = i1;

        return r0;
    }

    public android.app.Notification$Builder setContentTitle(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setContentText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setSubText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setNumber(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mNumber> = i0;

        return r0;
    }

    public android.app.Notification$Builder setContentInfo(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setProgress(int, int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<android.app.Notification$Builder: int mProgressMax> = i0;

        r0.<android.app.Notification$Builder: int mProgress> = i1;

        r0.<android.app.Notification$Builder: boolean mProgressIndeterminate> = z0;

        return r0;
    }

    public android.app.Notification$Builder setContent(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        r0.<android.app.Notification$Builder: android.widget.RemoteViews mContentView> = r1;

        return r0;
    }

    public android.app.Notification$Builder setContentIntent(android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<android.app.Notification$Builder: android.app.PendingIntent mContentIntent> = r1;

        return r0;
    }

    public android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        r0.<android.app.Notification$Builder: android.app.PendingIntent mDeleteIntent> = r1;

        return r0;
    }

    public android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent, boolean)
    {
        android.app.Notification$Builder r0;
        android.app.PendingIntent r1;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        z0 := @parameter1: boolean;

        r0.<android.app.Notification$Builder: android.app.PendingIntent mFullScreenIntent> = r1;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(128, z0);

        return r0;
    }

    public android.app.Notification$Builder setTicker(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mTickerText> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setTicker(java.lang.CharSequence, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r3;
        android.widget.RemoteViews r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.RemoteViews;

        $r3 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        r0.<android.app.Notification$Builder: java.lang.CharSequence mTickerText> = $r3;

        r0.<android.app.Notification$Builder: android.widget.RemoteViews mTickerView> = r2;

        return r0;
    }

    public android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)
    {
        android.app.Notification$Builder r0;
        android.graphics.Bitmap r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.Bitmap;

        r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon> = r1;

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        android.media.AudioAttributes $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        r0.<android.app.Notification$Builder: android.net.Uri mSound> = r1;

        $r2 = <android.app.Notification: android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT>;

        r0.<android.app.Notification$Builder: android.media.AudioAttributes mAudioAttributes> = $r2;

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri, int)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        r0.<android.app.Notification$Builder: android.net.Uri mSound> = r1;

        r0.<android.app.Notification$Builder: int mAudioStreamType> = i0;

        return r0;
    }

    public android.app.Notification$Builder setSound(android.net.Uri, android.media.AudioAttributes)
    {
        android.app.Notification$Builder r0;
        android.net.Uri r1;
        android.media.AudioAttributes r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.media.AudioAttributes;

        r0.<android.app.Notification$Builder: android.net.Uri mSound> = r1;

        r0.<android.app.Notification$Builder: android.media.AudioAttributes mAudioAttributes> = r2;

        return r0;
    }

    public android.app.Notification$Builder setVibrate(long[])
    {
        android.app.Notification$Builder r0;
        long[] r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: long[];

        r0.<android.app.Notification$Builder: long[] mVibrate> = r1;

        return r0;
    }

    public android.app.Notification$Builder setLights(int, int, int)
    {
        android.app.Notification$Builder r0;
        int i0, i1, i2;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.app.Notification$Builder: int mLedArgb> = i0;

        r0.<android.app.Notification$Builder: int mLedOnMs> = i1;

        r0.<android.app.Notification$Builder: int mLedOffMs> = i2;

        return r0;
    }

    public android.app.Notification$Builder setOngoing(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(2, z0);

        return r0;
    }

    public android.app.Notification$Builder setOnlyAlertOnce(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(8, z0);

        return r0;
    }

    public android.app.Notification$Builder setAutoCancel(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(16, z0);

        return r0;
    }

    public android.app.Notification$Builder setLocalOnly(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(256, z0);

        return r0;
    }

    public android.app.Notification$Builder setDefaults(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mDefaults> = i0;

        return r0;
    }

    public android.app.Notification$Builder setPriority(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mPriority> = i0;

        return r0;
    }

    public android.app.Notification$Builder setCategory(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.Notification$Builder: java.lang.String mCategory> = r1;

        return r0;
    }

    public android.app.Notification$Builder addPerson(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;
        java.util.ArrayList $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.app.Notification$Builder setGroup(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.Notification$Builder: java.lang.String mGroupKey> = r1;

        return r0;
    }

    public android.app.Notification$Builder setGroupSummary(boolean)
    {
        android.app.Notification$Builder r0;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Notification$Builder: void setFlag(int,boolean)>(512, z0);

        return r0;
    }

    public android.app.Notification$Builder setSortKey(java.lang.String)
    {
        android.app.Notification$Builder r0;
        java.lang.String r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.app.Notification$Builder: java.lang.String mSortKey> = r1;

        return r0;
    }

    public android.app.Notification$Builder addExtras(android.os.Bundle)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1, $r2, $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label2;

        $r2 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        if $r2 != null goto label1;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r0.<android.app.Notification$Builder: android.os.Bundle mExtras> = $r4;

        goto label2;

     label1:
        $r3 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label2:
        return r0;
    }

    public android.app.Notification$Builder setExtras(android.os.Bundle)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.app.Notification$Builder: android.os.Bundle mExtras> = r1;

        return r0;
    }

    public android.os.Bundle getExtras()
    {
        android.app.Notification$Builder r0;
        android.os.Bundle $r1, $r2, $r3;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.app.Notification$Builder: android.os.Bundle mExtras> = $r3;

     label1:
        $r2 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        return $r2;
    }

    public android.app.Notification$Builder addAction(int, java.lang.CharSequence, android.app.PendingIntent)
    {
        android.app.Notification$Builder r0;
        int i0;
        java.lang.CharSequence r1, $r5;
        android.app.PendingIntent r2;
        android.app.Notification$Action $r3;
        java.util.ArrayList $r4;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.app.PendingIntent;

        $r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r3 = new android.app.Notification$Action;

        $r5 = staticinvoke <android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>(r1);

        specialinvoke $r3.<android.app.Notification$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>(i0, $r5, r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public android.app.Notification$Builder addAction(android.app.Notification$Action)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action r1;
        java.util.ArrayList $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action;

        $r2 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public android.app.Notification$Builder setStyle(android.app.Notification$Style)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Style r1, $r2, $r3, $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Style;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r2 == r1 goto label1;

        r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle> = r1;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r3 == null goto label1;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        virtualinvoke $r4.<android.app.Notification$Style: void setBuilder(android.app.Notification$Builder)>(r0);

     label1:
        return r0;
    }

    public android.app.Notification$Builder setVisibility(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mVisibility> = i0;

        return r0;
    }

    public android.app.Notification$Builder setPublicVersion(android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        r0.<android.app.Notification$Builder: android.app.Notification mPublicVersion> = r1;

        return r0;
    }

    public android.app.Notification$Builder extend(android.app.Notification$Extender)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Extender r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Extender;

        interfaceinvoke r1.<android.app.Notification$Extender: android.app.Notification$Builder extend(android.app.Notification$Builder)>(r0);

        return r0;
    }

    private void setFlag(int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i4 = r0.<android.app.Notification$Builder: int mFlags>;

        $i5 = $i4 | i0;

        r0.<android.app.Notification$Builder: int mFlags> = $i5;

        goto label2;

     label1:
        $i2 = r0.<android.app.Notification$Builder: int mFlags>;

        $i1 = i0 ^ -1;

        $i3 = $i2 & $i1;

        r0.<android.app.Notification$Builder: int mFlags> = $i3;

     label2:
        return;
    }

    public android.app.Notification$Builder setColor(int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r0.<android.app.Notification$Builder: int mColor> = i0;

        return r0;
    }

    private android.graphics.drawable.Drawable getProfileBadgeDrawable()
    {
        android.app.Notification$Builder r0;
        android.content.Context $r1;
        android.content.pm.PackageManager $r2;
        android.os.UserHandle $r3;
        int $i0;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = new android.os.UserHandle;

        $i0 = r0.<android.app.Notification$Builder: int mOriginatingUserId>;

        specialinvoke $r3.<android.os.UserHandle: void <init>(int)>($i0);

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>($r3, 0);

        return $r4;
    }

    private android.graphics.Bitmap getProfileBadge()
    {
        android.app.Notification$Builder r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        android.graphics.Bitmap r2;
        android.graphics.Canvas r3, $r7;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        android.graphics.Bitmap$Config $r6;

        r0 := @this: android.app.Notification$Builder;

        r1 = specialinvoke r0.<android.app.Notification$Builder: android.graphics.drawable.Drawable getProfileBadgeDrawable()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104986);

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r6);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r3 = $r7;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i0);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r3);

        return r2;
    }

    private boolean addProfileBadge(android.widget.RemoteViews, int)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0;
        android.graphics.Bitmap r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<android.app.Notification$Builder: android.graphics.Bitmap getProfileBadge()>();

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909107, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909123, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909126, 8);

        if r2 == null goto label2;

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>(i0, r2);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(i0, 0);

        if i0 != 16909126 goto label1;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909124, 0);

     label1:
        return 1;

     label2:
        return 0;
    }

    private void shrinkLine3Text(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        float f0;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104980);

        f0 = (float) $i0;

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>(16908392, 0, f0);

        return;
    }

    private void unshrinkLine3Text(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        float f0;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104978);

        f0 = (float) $i0;

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>(16908392, 0, f0);

        return;
    }

    private void resetStandardTemplate(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        specialinvoke r0.<android.app.Notification$Builder: void removeLargeIconBackground(android.widget.RemoteViews)>(r1);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>(16908294, 0, 0, 0, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewResource(int,int)>(16908294, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908294, "setBackgroundResource", 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908340, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908340, "setBackgroundResource", 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewResource(int,int)>(16908340, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewResource(int,int)>(16908294, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908310, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908392, null);

        specialinvoke r0.<android.app.Notification$Builder: void unshrinkLine3Text(android.widget.RemoteViews)>(r1);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908309, null);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908309, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909125, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908415, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909124, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909111, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908301, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909121, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908415, 8);

        return;
    }

    private android.widget.RemoteViews applyStandardTemplate(int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.widget.RemoteViews $r1;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,boolean)>(i0, 1);

        return $r1;
    }

    private android.widget.RemoteViews applyStandardTemplate(int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i9, $i13, $i16, $i17, $i18, $i20, $i21, $i22;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, z9;
        android.app.Notification$BuilderRemoteViews r1, $r3;
        java.text.NumberFormat r2;
        android.content.Context $r4, $r11, $r12, $r18, $r27;
        android.content.pm.ApplicationInfo $r5;
        android.graphics.Bitmap $r6, $r31, $r35;
        java.lang.CharSequence $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r19, $r20, $r24, $r25, $r26, $r29, $r30, $r32, $r33, $r34;
        android.content.res.Configuration $r13;
        android.content.res.Resources $r14, $r21, $r28;
        float $f0;
        byte $b6, $b8;
        long $l7, $l10, $l11, $l12, $l14, $l15, $l19;
        java.lang.String $r22, $r23;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r3 = new android.app.Notification$BuilderRemoteViews;

        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        specialinvoke $r3.<android.app.Notification$BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>($r5, i0);

        r1 = $r3;

        specialinvoke r0.<android.app.Notification$Builder: void resetStandardTemplate(android.widget.RemoteViews)>(r1);

        z1 = 0;

        z2 = 0;

        z3 = 0;

        $r6 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        if $r6 == null goto label01;

        $r31 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>(16908294, $r31);

        $r35 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        specialinvoke r0.<android.app.Notification$Builder: void processLargeLegacyIcon(android.graphics.Bitmap,android.widget.RemoteViews)>($r35, r1);

        $i21 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewResource(int,int)>(16908340, $i21);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908340, 0);

        $i22 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        specialinvoke r0.<android.app.Notification$Builder: void processSmallRightIcon(int,android.widget.RemoteViews)>($i22, r1);

        goto label02;

     label01:
        $i2 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        virtualinvoke r1.<android.widget.RemoteViews: void setImageViewResource(int,int)>(16908294, $i2);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908294, 0);

        $i3 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        specialinvoke r0.<android.app.Notification$Builder: void processSmallIconAsLarge(int,android.widget.RemoteViews)>($i3, r1);

     label02:
        $r7 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle>;

        if $r7 == null goto label03;

        $r29 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle>;

        $r30 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r29);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908310, $r30);

     label03:
        $r9 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        if $r9 == null goto label04;

        $r33 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        $r34 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r33);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908392, $r34);

        z1 = 1;

     label04:
        $r8 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo>;

        if $r8 == null goto label05;

        $r25 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo>;

        $r32 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r25);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909125, $r32);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909125, 0);

        z1 = 1;

        goto label09;

     label05:
        $i4 = r0.<android.app.Notification$Builder: int mNumber>;

        if $i4 <= 0 goto label08;

        $r18 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r21 = virtualinvoke $r18.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r21.<android.content.res.Resources: int getInteger(int)>(17694723);

        $i18 = r0.<android.app.Notification$Builder: int mNumber>;

        if $i18 <= i1 goto label06;

        $r27 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r28 = virtualinvoke $r27.<android.content.Context: android.content.res.Resources getResources()>();

        $r23 = virtualinvoke $r28.<android.content.res.Resources: java.lang.String getString(int)>(17039383);

        $r24 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r23);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909125, $r24);

        goto label07;

     label06:
        r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>();

        $i20 = r0.<android.app.Notification$Builder: int mNumber>;

        $l19 = (long) $i20;

        $r22 = virtualinvoke r2.<java.text.NumberFormat: java.lang.String format(long)>($l19);

        $r26 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r22);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909125, $r26);

     label07:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909125, 0);

        z1 = 1;

        goto label09;

     label08:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909125, 8);

     label09:
        $r10 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        if $r10 == null goto label11;

        $r17 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        $r16 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r17);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908392, $r16);

        $r15 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        if $r15 == null goto label10;

        $r20 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        $r19 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r20);

        virtualinvoke r1.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16908309, $r19);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908309, 0);

        z2 = 1;

        z3 = 1;

        goto label14;

     label10:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908309, 8);

        goto label14;

     label11:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908309, 8);

        if z0 == 0 goto label13;

        $i13 = r0.<android.app.Notification$Builder: int mProgressMax>;

        if $i13 != 0 goto label12;

        $z7 = r0.<android.app.Notification$Builder: boolean mProgressIndeterminate>;

        if $z7 == 0 goto label13;

     label12:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908301, 0);

        $i16 = r0.<android.app.Notification$Builder: int mProgressMax>;

        $i17 = r0.<android.app.Notification$Builder: int mProgress>;

        $z8 = r0.<android.app.Notification$Builder: boolean mProgressIndeterminate>;

        virtualinvoke r1.<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>(16908301, $i16, $i17, $z8);

        z2 = 1;

        goto label14;

     label13:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908301, 8);

     label14:
        if z2 == 0 goto label15;

        specialinvoke r0.<android.app.Notification$Builder: void shrinkLine3Text(android.widget.RemoteViews)>(r1);

     label15:
        $z4 = specialinvoke r0.<android.app.Notification$Builder: boolean showsTimeOrChronometer()>();

        if $z4 == 0 goto label17;

        $z6 = r0.<android.app.Notification$Builder: boolean mUseChronometer>;

        if $z6 == 0 goto label16;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909121, 0);

        $l10 = r0.<android.app.Notification$Builder: long mWhen>;

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l15 = $l11 - $l14;

        $l12 = $l10 + $l15;

        virtualinvoke r1.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(16909121, "setBase", $l12);

        virtualinvoke r1.<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>(16909121, "setStarted", 1);

        goto label17;

     label16:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16908415, 0);

        $l7 = r0.<android.app.Notification$Builder: long mWhen>;

        virtualinvoke r1.<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>(16908415, "setTime", $l7);

     label17:
        $r12 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z5 = r0.<android.app.Notification$Builder: boolean mHasThreeLines>;

        $r11 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r14 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r14.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $f0 = $r13.<android.content.res.Configuration: float fontScale>;

        $i5 = staticinvoke <android.app.Notification$Builder: int calculateTopPadding(android.content.Context,boolean,float)>($r12, $z5, $f0);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>(16909122, 0, $i5, 0, 0);

        if z3 == 0 goto label18;

        $i9 = 16909123;

        goto label19;

     label18:
        $i9 = 16909126;

     label19:
        z9 = specialinvoke r0.<android.app.Notification$Builder: boolean addProfileBadge(android.widget.RemoteViews,int)>(r1, $i9);

        if z9 == 0 goto label20;

        if z3 != 0 goto label20;

        z1 = 1;

     label20:
        if z1 == 0 goto label21;

        $b8 = 0;

        goto label22;

     label21:
        $b8 = 8;

     label22:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909124, $b8);

        if z1 == 0 goto label23;

        $b6 = 0;

        goto label24;

     label23:
        $b6 = 8;

     label24:
        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909111, $b6);

        return r1;
    }

    private boolean showsTimeOrChronometer()
    {
        android.app.Notification$Builder r0;
        long $l0;
        byte $b1;
        boolean $z0, $z1;

        r0 := @this: android.app.Notification$Builder;

        $l0 = r0.<android.app.Notification$Builder: long mWhen>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = r0.<android.app.Notification$Builder: boolean mShowWhen>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean hasThreeLines()
    {
        android.app.Notification$Builder r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.CharSequence $r1, $r4, $r5, $r6, $r7, $r8, $r10;
        android.app.Notification$Style $r2, $r9;
        android.graphics.drawable.Drawable $r3;
        int $i0, $i1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        if $r1 == null goto label01;

        $r10 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        if $r10 == null goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        z0 = $z12;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r2 == null goto label03;

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $z11 = virtualinvoke $r9.<android.app.Notification$Style: boolean hasProgress()>();

        if $z11 == 0 goto label04;

     label03:
        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z1 = $z10;

        $r3 = specialinvoke r0.<android.app.Notification$Builder: android.graphics.drawable.Drawable getProfileBadgeDrawable()>();

        if $r3 == null goto label06;

        if z0 != 0 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z2 = $z9;

        $r4 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        if $r4 != null goto label08;

        $r7 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo>;

        if $r7 != null goto label08;

        $i1 = r0.<android.app.Notification$Builder: int mNumber>;

        if $i1 > 0 goto label08;

        if z2 == 0 goto label09;

     label08:
        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        z3 = $z8;

        $r5 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        if $r5 == null goto label11;

        $r8 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        if $r8 != null goto label12;

     label11:
        if z1 == 0 goto label13;

        $r6 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        if $r6 != null goto label13;

        $i0 = r0.<android.app.Notification$Builder: int mProgressMax>;

        if $i0 != 0 goto label12;

        $z7 = r0.<android.app.Notification$Builder: boolean mProgressIndeterminate>;

        if $z7 == 0 goto label13;

     label12:
        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        z4 = $z6;

        if z4 == 0 goto label15;

        if z3 == 0 goto label15;

        $z5 = 1;

        goto label16;

     label15:
        $z5 = 0;

     label16:
        return $z5;
    }

    public static int calculateTopPadding(android.content.Context, boolean, float)
    {
        android.content.Context r0;
        boolean z0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, $i2, $i3, $i4;
        android.content.res.Resources $r1, $r2;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label1;

        $i4 = 17104982;

        goto label2;

     label1:
        $i4 = 17104981;

     label2:
        i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i4);

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label3;

        $i2 = 17104984;

        goto label4;

     label3:
        $i2 = 17104983;

     label4:
        i1 = virtualinvoke $r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        $f2 = staticinvoke <android.util.MathUtils: float constrain(float,float,float)>(f0, 1.0F, 1.3F);

        $f3 = $f2 - 1.0F;

        f1 = $f3 / 0.29999995F;

        $f5 = 1.0F - f1;

        $f4 = (float) i0;

        $f9 = $f5 * $f4;

        $f6 = (float) i1;

        $f7 = f1 * $f6;

        $f8 = $f9 + $f7;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f8);

        return $i3;
    }

    private void resetStandardTemplateWithActions(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909100, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909108, 8);

        virtualinvoke r1.<android.widget.RemoteViews: void removeAllViews(int)>(16909100);

        return;
    }

    private android.widget.RemoteViews applyStandardTemplateWithActions(int)
    {
        android.app.Notification$Builder r0;
        int i0, i1, i2;
        android.widget.RemoteViews r1, r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.app.Notification$Action $r6;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int)>(i0);

        specialinvoke r0.<android.app.Notification$Builder: void resetStandardTemplateWithActions(android.widget.RemoteViews)>(r1);

        $r3 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 <= 0 goto label3;

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909100, 0);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewVisibility(int,int)>(16909108, 0);

        if i1 <= 3 goto label1;

        i1 = 3;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r4 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (android.app.Notification$Action) $r5;

        r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews generateActionButton(android.app.Notification$Action)>($r6);

        virtualinvoke r1.<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>(16909100, r2);

        i2 = i2 + 1;

        goto label2;

     label3:
        return r1;
    }

    private android.widget.RemoteViews makeContentView()
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews $r1, $r2, $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.widget.RemoteViews mContentView>;

        if $r1 == null goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.widget.RemoteViews mContentView>;

        return $r3;

     label1:
        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBaseLayoutResource()>();

        $r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int)>($i0);

        return $r2;
    }

    private android.widget.RemoteViews makeTickerView()
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews $r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.widget.RemoteViews mTickerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.app.Notification$Builder: android.widget.RemoteViews mTickerView>;

        return $r2;

     label1:
        return null;
    }

    private android.widget.RemoteViews makeBigContentView()
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        android.widget.RemoteViews $r2;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = specialinvoke r0.<android.app.Notification$Builder: int getBigBaseLayoutResource()>();

        $r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int)>($i1);

        return $r2;
    }

    private android.widget.RemoteViews makeHeadsUpContentView()
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        android.widget.RemoteViews $r2;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = specialinvoke r0.<android.app.Notification$Builder: int getBigBaseLayoutResource()>();

        $r2 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int)>($i1);

        return $r2;
    }

    private android.widget.RemoteViews generateActionButton(android.app.Notification$Action)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action r1;
        boolean z0, $z1;
        android.widget.RemoteViews r2, $r4;
        android.app.PendingIntent $r3, $r10;
        android.content.Context $r5;
        java.lang.String $r6;
        int $i0, $i1;
        java.lang.CharSequence $r7, $r8, $r9;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action;

        $r3 = r1.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        if $r3 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r4 = new android.widget.RemoteViews;

        $r5 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        if z0 == 0 goto label3;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getActionTombstoneLayoutResource()>();

        goto label4;

     label3:
        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getActionLayoutResource()>();

     label4:
        specialinvoke $r4.<android.widget.RemoteViews: void <init>(java.lang.String,int)>($r6, $i0);

        r2 = $r4;

        $i1 = r1.<android.app.Notification$Action: int icon>;

        virtualinvoke r2.<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>(16909101, $i1, 0, 0, 0);

        $r7 = r1.<android.app.Notification$Action: java.lang.CharSequence title>;

        $r8 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>($r7);

        virtualinvoke r2.<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>(16909101, $r8);

        if z0 != 0 goto label5;

        $r10 = r1.<android.app.Notification$Action: android.app.PendingIntent actionIntent>;

        virtualinvoke r2.<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>(16909101, $r10);

     label5:
        $r9 = r1.<android.app.Notification$Action: java.lang.CharSequence title>;

        virtualinvoke r2.<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>(16909101, $r9);

        specialinvoke r0.<android.app.Notification$Builder: void processLegacyAction(android.app.Notification$Action,android.widget.RemoteViews)>(r1, r2);

        return r2;
    }

    private boolean isLegacy()
    {
        android.app.Notification$Builder r0;
        com.android.internal.util.NotificationColorUtil $r1;
        boolean $z0;

        r0 := @this: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void processLegacyAction(android.app.Notification$Action, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification$Action r1;
        android.widget.RemoteViews r2;
        boolean $z0, $z1;
        android.content.Context $r3, $r6;
        android.content.res.Resources $r4;
        int $i0, $i1;
        android.graphics.PorterDuff$Mode $r5;
        com.android.internal.util.NotificationColorUtil $r7;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification$Action;

        r2 := @parameter1: android.widget.RemoteViews;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        $r6 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i1 = r1.<android.app.Notification$Action: int icon>;

        $z1 = virtualinvoke $r7.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.content.Context,int)>($r6, $i1);

        if $z1 == 0 goto label2;

     label1:
        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>(17170512);

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        virtualinvoke r2.<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelativeColorFilter(int,int,int,android.graphics.PorterDuff$Mode)>(16909101, 0, $i0, $r5);

     label2:
        return;
    }

    private java.lang.CharSequence processLegacyText(java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r3;
        boolean $z0;
        com.android.internal.util.NotificationColorUtil $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        $r3 = virtualinvoke $r2.<com.android.internal.util.NotificationColorUtil: java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence)>(r1);

        return $r3;

     label1:
        return r1;
    }

    private void processSmallIconAsLarge(int, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.widget.RemoteViews r1;
        boolean $z0, $z1;
        android.content.Context $r2;
        com.android.internal.util.NotificationColorUtil $r3;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = virtualinvoke $r3.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.content.Context,int)>($r2, i0);

        if $z1 == 0 goto label2;

     label1:
        specialinvoke r0.<android.app.Notification$Builder: void applyLargeIconBackground(android.widget.RemoteViews)>(r1);

     label2:
        return;
    }

    private void processLargeLegacyIcon(android.graphics.Bitmap, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.graphics.Bitmap r1;
        android.widget.RemoteViews r2;
        boolean $z0, $z1;
        com.android.internal.util.NotificationColorUtil $r3;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.widget.RemoteViews;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        $z1 = virtualinvoke $r3.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.Bitmap)>(r1);

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.app.Notification$Builder: void applyLargeIconBackground(android.widget.RemoteViews)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<android.app.Notification$Builder: void removeLargeIconBackground(android.widget.RemoteViews)>(r2);

     label2:
        return;
    }

    private void applyLargeIconBackground(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0, $i1;
        android.graphics.PorterDuff$Mode $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908294, "setBackgroundResource", 17302768);

        $i1 = specialinvoke r0.<android.app.Notification$Builder: int resolveColor()>();

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>(16908294, 1, -1, $i1, $r2, -1);

        $r3 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104985);

        virtualinvoke r1.<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>(16908294, i0, i0, i0, i0);

        return;
    }

    private void removeLargeIconBackground(android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.widget.RemoteViews;

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908294, "setBackgroundResource", 0);

        return;
    }

    private void processSmallRightIcon(int, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        int i0, $i1;
        android.widget.RemoteViews r1;
        boolean $z0, $z1;
        android.graphics.PorterDuff$Mode $r2, $r3;
        android.content.Context $r4;
        com.android.internal.util.NotificationColorUtil $r5;

        r0 := @this: android.app.Notification$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean isLegacy()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<android.app.Notification$Builder: com.android.internal.util.NotificationColorUtil mColorUtil>;

        $r4 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $z1 = virtualinvoke $r5.<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.content.Context,int)>($r4, i0);

        if $z1 == 0 goto label2;

     label1:
        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>(16908340, 0, -1, -1, $r2, -1);

        virtualinvoke r1.<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>(16908340, "setBackgroundResource", 17302768);

        $i1 = specialinvoke r0.<android.app.Notification$Builder: int resolveColor()>();

        $r3 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_ATOP>;

        virtualinvoke r1.<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>(16908340, 1, -1, $i1, $r3, -1);

     label2:
        return;
    }

    private int sanitizeColor()
    {
        android.app.Notification$Builder r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.Notification$Builder;

        $i0 = r0.<android.app.Notification$Builder: int mColor>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.app.Notification$Builder: int mColor>;

        $i3 = $i2 | -16777216;

        r0.<android.app.Notification$Builder: int mColor> = $i3;

     label1:
        $i1 = r0.<android.app.Notification$Builder: int mColor>;

        return $i1;
    }

    private int resolveColor()
    {
        android.app.Notification$Builder r0;
        int $i0, $i1, $i2;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        r0 := @this: android.app.Notification$Builder;

        $i0 = r0.<android.app.Notification$Builder: int mColor>;

        if $i0 != 0 goto label1;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r2.<android.content.res.Resources: int getColor(int)>(17170511);

        return $i2;

     label1:
        $i1 = r0.<android.app.Notification$Builder: int mColor>;

        return $i1;
    }

    public android.app.Notification buildUnstyled()
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r2, $r21, $r22, $r23, $r24;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.widget.RemoteViews $r3, $r8, $r13, $r14;
        android.app.PendingIntent $r4, $r5, $r6;
        java.lang.CharSequence $r7;
        android.graphics.Bitmap $r9;
        android.net.Uri $r10;
        android.media.AudioAttributes $r11;
        long[] $r12;
        java.lang.String $r15, $r16, $r18;
        java.util.ArrayList $r20, $r27, $r29;
        android.app.Notification$Action[] $r25, $r26;

        r0 := @this: android.app.Notification$Builder;

        $r2 = new android.app.Notification;

        specialinvoke $r2.<android.app.Notification: void <init>()>();

        r1 = $r2;

        $l0 = r0.<android.app.Notification$Builder: long mWhen>;

        r1.<android.app.Notification: long when> = $l0;

        $i1 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        r1.<android.app.Notification: int icon> = $i1;

        $i2 = r0.<android.app.Notification$Builder: int mSmallIconLevel>;

        r1.<android.app.Notification: int iconLevel> = $i2;

        $i3 = r0.<android.app.Notification$Builder: int mNumber>;

        r1.<android.app.Notification: int number> = $i3;

        $i4 = specialinvoke r0.<android.app.Notification$Builder: int sanitizeColor()>();

        r1.<android.app.Notification: int color> = $i4;

        $r3 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderContentView(android.app.Notification,android.widget.RemoteViews)>(r1, $r3);

        $r4 = r0.<android.app.Notification$Builder: android.app.PendingIntent mContentIntent>;

        r1.<android.app.Notification: android.app.PendingIntent contentIntent> = $r4;

        $r5 = r0.<android.app.Notification$Builder: android.app.PendingIntent mDeleteIntent>;

        r1.<android.app.Notification: android.app.PendingIntent deleteIntent> = $r5;

        $r6 = r0.<android.app.Notification$Builder: android.app.PendingIntent mFullScreenIntent>;

        r1.<android.app.Notification: android.app.PendingIntent fullScreenIntent> = $r6;

        $r7 = r0.<android.app.Notification$Builder: java.lang.CharSequence mTickerText>;

        r1.<android.app.Notification: java.lang.CharSequence tickerText> = $r7;

        $r8 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeTickerView()>();

        r1.<android.app.Notification: android.widget.RemoteViews tickerView> = $r8;

        $r9 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        r1.<android.app.Notification: android.graphics.Bitmap largeIcon> = $r9;

        $r10 = r0.<android.app.Notification$Builder: android.net.Uri mSound>;

        r1.<android.app.Notification: android.net.Uri sound> = $r10;

        $i5 = r0.<android.app.Notification$Builder: int mAudioStreamType>;

        r1.<android.app.Notification: int audioStreamType> = $i5;

        $r11 = r0.<android.app.Notification$Builder: android.media.AudioAttributes mAudioAttributes>;

        r1.<android.app.Notification: android.media.AudioAttributes audioAttributes> = $r11;

        $r12 = r0.<android.app.Notification$Builder: long[] mVibrate>;

        r1.<android.app.Notification: long[] vibrate> = $r12;

        $i6 = r0.<android.app.Notification$Builder: int mLedArgb>;

        r1.<android.app.Notification: int ledARGB> = $i6;

        $i8 = r0.<android.app.Notification$Builder: int mLedOnMs>;

        r1.<android.app.Notification: int ledOnMS> = $i8;

        $i7 = r0.<android.app.Notification$Builder: int mLedOffMs>;

        r1.<android.app.Notification: int ledOffMS> = $i7;

        $i10 = r0.<android.app.Notification$Builder: int mDefaults>;

        r1.<android.app.Notification: int defaults> = $i10;

        $i9 = r0.<android.app.Notification$Builder: int mFlags>;

        r1.<android.app.Notification: int flags> = $i9;

        $r14 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeBigContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews)>(r1, $r14);

        $r13 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeHeadsUpContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews)>(r1, $r13);

        $i12 = r0.<android.app.Notification$Builder: int mLedOnMs>;

        if $i12 != 0 goto label1;

        $i22 = r0.<android.app.Notification$Builder: int mLedOffMs>;

        if $i22 == 0 goto label2;

     label1:
        $i11 = r1.<android.app.Notification: int flags>;

        $i14 = $i11 | 1;

        r1.<android.app.Notification: int flags> = $i14;

     label2:
        $i13 = r0.<android.app.Notification$Builder: int mDefaults>;

        $i15 = $i13 & 4;

        if $i15 == 0 goto label3;

        $i21 = r1.<android.app.Notification: int flags>;

        $i20 = $i21 | 1;

        r1.<android.app.Notification: int flags> = $i20;

     label3:
        $r15 = r0.<android.app.Notification$Builder: java.lang.String mCategory>;

        r1.<android.app.Notification: java.lang.String category> = $r15;

        $r18 = r0.<android.app.Notification$Builder: java.lang.String mGroupKey>;

        staticinvoke <android.app.Notification: java.lang.String access$402(android.app.Notification,java.lang.String)>(r1, $r18);

        $r16 = r0.<android.app.Notification$Builder: java.lang.String mSortKey>;

        staticinvoke <android.app.Notification: java.lang.String access$502(android.app.Notification,java.lang.String)>(r1, $r16);

        $i18 = r0.<android.app.Notification$Builder: int mPriority>;

        r1.<android.app.Notification: int priority> = $i18;

        $r20 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i16 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label4;

        $r27 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $i19 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r25 = newarray (android.app.Notification$Action)[$i19];

        r1.<android.app.Notification: android.app.Notification$Action[] actions> = $r25;

        $r29 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r26 = r1.<android.app.Notification: android.app.Notification$Action[] actions>;

        virtualinvoke $r29.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r26);

     label4:
        $i17 = r0.<android.app.Notification$Builder: int mVisibility>;

        r1.<android.app.Notification: int visibility> = $i17;

        $r23 = r0.<android.app.Notification$Builder: android.app.Notification mPublicVersion>;

        if $r23 == null goto label5;

        $r24 = new android.app.Notification;

        specialinvoke $r24.<android.app.Notification: void <init>()>();

        r1.<android.app.Notification: android.app.Notification publicVersion> = $r24;

        $r22 = r0.<android.app.Notification$Builder: android.app.Notification mPublicVersion>;

        $r21 = r1.<android.app.Notification: android.app.Notification publicVersion>;

        virtualinvoke $r22.<android.app.Notification: void cloneInto(android.app.Notification,boolean)>($r21, 1);

     label5:
        return r1;
    }

    public void populateExtras(android.os.Bundle)
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        java.lang.CharSequence $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r8, $r10, $r11;
        android.graphics.Bitmap $r9, $r15;
        java.lang.String[] $r12, $r13;
        java.lang.Object[] $r14;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.os.Bundle;

        $i0 = r0.<android.app.Notification$Builder: int mOriginatingUserId>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.originatingUserId", $i0);

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.rebuild.applicationInfo", $r3);

        $r4 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.title", $r4);

        $r5 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.text", $r5);

        $r6 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.subText", $r6);

        $r7 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo>;

        virtualinvoke r1.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("android.infoText", $r7);

        $i1 = r0.<android.app.Notification$Builder: int mSmallIcon>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.icon", $i1);

        $i2 = r0.<android.app.Notification$Builder: int mProgress>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.progress", $i2);

        $i3 = r0.<android.app.Notification$Builder: int mProgressMax>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android.progressMax", $i3);

        $z0 = r0.<android.app.Notification$Builder: boolean mProgressIndeterminate>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.progressIndeterminate", $z0);

        $z1 = r0.<android.app.Notification$Builder: boolean mUseChronometer>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showChronometer", $z1);

        $z2 = r0.<android.app.Notification$Builder: boolean mShowWhen>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.showWhen", $z2);

        $r9 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        if $r9 == null goto label1;

        $r15 = r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.largeIcon", $r15);

     label1:
        $r8 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        $z3 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 != 0 goto label2;

        $r11 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        $r10 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        $i4 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        $r12 = newarray (java.lang.String)[$i4];

        $r14 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r13 = (java.lang.String[]) $r14;

        virtualinvoke r1.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>("android.people", $r13);

     label2:
        return;
    }

    public static void stripForDelivery(android.app.Notification)
    {
        android.app.Notification r0;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.os.Bundle $r2, $r4, $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r20, $r21;
        android.graphics.Bitmap $r3;
        android.widget.RemoteViews $r5, $r7, $r9, $r12, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class $r22;

        r0 := @parameter0: android.app.Notification;

        $r2 = r0.<android.app.Notification: android.os.Bundle extras>;

        r1 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.template");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label1;

        $r22 = staticinvoke <android.app.Notification$Builder: java.lang.Class getNotificationStyleClass(java.lang.String)>(r1);

        if $r22 == null goto label2;

     label1:
        $z7 = 1;

        goto label3;

     label2:
        $z7 = 0;

     label3:
        z0 = $z7;

        z1 = 0;

        $r3 = r0.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        if $r3 == null goto label4;

        $r21 = r0.<android.app.Notification: android.os.Bundle extras>;

        $z6 = virtualinvoke $r21.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.largeIcon");

        if $z6 == 0 goto label4;

        r0.<android.app.Notification: android.graphics.Bitmap largeIcon> = null;

        $r19 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r19.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.rebuild.largeIcon", 1);

        z1 = 1;

     label4:
        if z0 == 0 goto label5;

        $r14 = r0.<android.app.Notification: android.widget.RemoteViews contentView>;

        $z5 = $r14 instanceof android.app.Notification$BuilderRemoteViews;

        if $z5 == 0 goto label5;

        $r16 = r0.<android.app.Notification: android.os.Bundle extras>;

        $i4 = virtualinvoke $r16.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.contentViewActionCount", -1);

        $r17 = r0.<android.app.Notification: android.widget.RemoteViews contentView>;

        $i5 = virtualinvoke $r17.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i4 != $i5 goto label5;

        r0.<android.app.Notification: android.widget.RemoteViews contentView> = null;

        $r18 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r18.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.rebuild.contentView", 1);

        $r20 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r20.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.contentViewActionCount");

        z1 = 1;

     label5:
        if z0 == 0 goto label6;

        $r9 = r0.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $z4 = $r9 instanceof android.app.Notification$BuilderRemoteViews;

        if $z4 == 0 goto label6;

        $r11 = r0.<android.app.Notification: android.os.Bundle extras>;

        $i2 = virtualinvoke $r11.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.bigViewActionCount", -1);

        $r12 = r0.<android.app.Notification: android.widget.RemoteViews bigContentView>;

        $i3 = virtualinvoke $r12.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i2 != $i3 goto label6;

        r0.<android.app.Notification: android.widget.RemoteViews bigContentView> = null;

        $r13 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r13.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.rebuild.bigView", 1);

        $r15 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r15.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.bigViewActionCount");

        z1 = 1;

     label6:
        if z0 == 0 goto label7;

        $r5 = r0.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $z3 = $r5 instanceof android.app.Notification$BuilderRemoteViews;

        if $z3 == 0 goto label7;

        $r6 = r0.<android.app.Notification: android.os.Bundle extras>;

        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String,int)>("android.rebuild.hudViewActionCount", -1);

        $r7 = r0.<android.app.Notification: android.widget.RemoteViews headsUpContentView>;

        $i1 = virtualinvoke $r7.<android.widget.RemoteViews: int getSequenceNumber()>();

        if $i0 != $i1 goto label7;

        r0.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = null;

        $r8 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.rebuild.hudView", 1);

        $r10 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r10.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.hudViewActionCount");

        z1 = 1;

     label7:
        if z1 == 0 goto label8;

        $r4 = r0.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android.rebuild", 1);

     label8:
        return;
    }

    public static android.app.Notification rebuild(android.content.Context, android.app.Notification)
    {
        android.content.Context r0, r4;
        android.app.Notification r1, $r8;
        android.os.Bundle r2;
        android.content.pm.ApplicationInfo r3;
        boolean $z0;
        android.os.Parcelable $r6;
        android.app.Notification$Builder $r7, r15;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.String $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.Notification;

        r2 = r1.<android.app.Notification: android.os.Bundle extras>;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.rebuild");

        if $z0 != 0 goto label1;

        return r1;

     label1:
        virtualinvoke r2.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild");

        $r6 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.rebuild.applicationInfo");

        r3 = (android.content.pm.ApplicationInfo) $r6;

     label2:
        r4 = virtualinvoke r0.<android.content.Context: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>(r3, 4);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ApplicationInfo ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Notification", $r13);

        r4 = r0;

     label5:
        $r7 = new android.app.Notification$Builder;

        specialinvoke $r7.<android.app.Notification$Builder: void <init>(android.content.Context,android.app.Notification)>(r4, r1);

        r15 = $r7;

        $r8 = specialinvoke r15.<android.app.Notification$Builder: android.app.Notification rebuild()>();

        return $r8;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private android.app.Notification rebuild()
    {
        android.app.Notification$Builder r0;
        android.os.Bundle r1;
        android.app.Notification $r2, $r3, $r4, $r5, $r8, $r10, $r14, $r16, $r17, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.RemoteViews $r6, $r12, $r15;
        android.app.Notification$Style $r7, $r9, $r11, $r13, $r18, $r20;
        android.graphics.Bitmap $r21;
        android.os.Parcelable $r22;
        java.lang.IllegalStateException $r23;

        r0 := @this: android.app.Notification$Builder;

        $r2 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        if $r2 != null goto label1;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("rebuild() only valid when in \'rebuild\' mode.");

        throw $r23;

     label1:
        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean hasThreeLines()>();

        r0.<android.app.Notification$Builder: boolean mHasThreeLines> = $z0;

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        r1 = $r3.<android.app.Notification: android.os.Bundle extras>;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.rebuild.largeIcon");

        if $z1 == 0 goto label2;

        $r19 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        $r22 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.largeIcon");

        $r21 = (android.graphics.Bitmap) $r22;

        $r19.<android.app.Notification: android.graphics.Bitmap largeIcon> = $r21;

     label2:
        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.largeIcon");

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.rebuild.contentView");

        if $z2 == 0 goto label3;

        $r16 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        $r15 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderContentView(android.app.Notification,android.widget.RemoteViews)>($r16, $r15);

        $r18 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r18 == null goto label3;

        $r20 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r17 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        virtualinvoke $r20.<android.app.Notification$Style: void populateContentView(android.app.Notification)>($r17);

     label3:
        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.contentView");

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.rebuild.bigView");

        if $z3 == 0 goto label4;

        $r10 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        $r12 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeBigContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews)>($r10, $r12);

        $r11 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r11 == null goto label4;

        $r13 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        virtualinvoke $r13.<android.app.Notification$Style: void populateBigContentView(android.app.Notification)>($r14);

     label4:
        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.bigView");

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.rebuild.hudView");

        if $z4 == 0 goto label5;

        $r5 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        $r6 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews makeHeadsUpContentView()>();

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews)>($r5, $r6);

        $r7 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r7 == null goto label5;

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r8 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        virtualinvoke $r9.<android.app.Notification$Style: void populateHeadsUpContentView(android.app.Notification)>($r8);

     label5:
        virtualinvoke r1.<android.os.Bundle: void remove(java.lang.String)>("android.rebuild.hudView");

        r0.<android.app.Notification$Builder: boolean mHasThreeLines> = 0;

        $r4 = r0.<android.app.Notification$Builder: android.app.Notification mRebuildNotification>;

        return $r4;
    }

    private static java.lang.Class getNotificationStyleClass(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.Class[] r1, r2, $r4;
        int i0, i1;
        java.lang.Class r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r4 = newarray (java.lang.Class)[4];

        $r4[0] = class "android/app/Notification$BigTextStyle";

        $r4[1] = class "android/app/Notification$BigPictureStyle";

        $r4[2] = class "android/app/Notification$InboxStyle";

        $r4[3] = class "android/app/Notification$MediaStyle";

        r1 = $r4;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void setBuilderContentView(android.app.Notification, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.widget.RemoteViews r2;
        boolean $z0;
        android.os.Bundle $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: android.widget.RemoteViews;

        r1.<android.app.Notification: android.widget.RemoteViews contentView> = r2;

        $z0 = r2 instanceof android.app.Notification$BuilderRemoteViews;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        $i0 = virtualinvoke r2.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.contentViewActionCount", $i0);

     label1:
        return;
    }

    private void setBuilderBigContentView(android.app.Notification, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.widget.RemoteViews r2;
        boolean $z0;
        android.os.Bundle $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: android.widget.RemoteViews;

        r1.<android.app.Notification: android.widget.RemoteViews bigContentView> = r2;

        $z0 = r2 instanceof android.app.Notification$BuilderRemoteViews;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        $i0 = virtualinvoke r2.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.bigViewActionCount", $i0);

     label1:
        return;
    }

    private void setBuilderHeadsUpContentView(android.app.Notification, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.widget.RemoteViews r2;
        boolean $z0;
        android.os.Bundle $r3;
        int $i0;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: android.widget.RemoteViews;

        r1.<android.app.Notification: android.widget.RemoteViews headsUpContentView> = r2;

        $z0 = r2 instanceof android.app.Notification$BuilderRemoteViews;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        $i0 = virtualinvoke r2.<android.widget.RemoteViews: int getSequenceNumber()>();

        virtualinvoke $r3.<android.os.Bundle: void putInt(java.lang.String,int)>("android.rebuild.hudViewActionCount", $i0);

     label1:
        return;
    }

    private void restoreFromNotification(android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r17;
        android.os.Bundle r2;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.widget.RemoteViews $r3, $r7;
        android.app.PendingIntent $r4, $r5;
        java.lang.CharSequence $r6, $r18, $r19, $r20, $r21;
        android.graphics.Bitmap $r8, $r27;
        android.net.Uri $r9;
        long[] $r10;
        android.media.AudioAttributes $r11;
        java.lang.String $r12, $r13, $r14;
        java.util.ArrayList $r15, $r23, $r24, $r25;
        android.app.Notification$Action[] $r16, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r22;
        android.os.Parcelable $r28;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        $l0 = r1.<android.app.Notification: long when>;

        r0.<android.app.Notification$Builder: long mWhen> = $l0;

        $i1 = r1.<android.app.Notification: int icon>;

        r0.<android.app.Notification$Builder: int mSmallIcon> = $i1;

        $i2 = r1.<android.app.Notification: int iconLevel>;

        r0.<android.app.Notification$Builder: int mSmallIconLevel> = $i2;

        $i3 = r1.<android.app.Notification: int number>;

        r0.<android.app.Notification$Builder: int mNumber> = $i3;

        $i4 = r1.<android.app.Notification: int color>;

        r0.<android.app.Notification$Builder: int mColor> = $i4;

        $r3 = r1.<android.app.Notification: android.widget.RemoteViews contentView>;

        r0.<android.app.Notification$Builder: android.widget.RemoteViews mContentView> = $r3;

        $r4 = r1.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        r0.<android.app.Notification$Builder: android.app.PendingIntent mDeleteIntent> = $r4;

        $r5 = r1.<android.app.Notification: android.app.PendingIntent fullScreenIntent>;

        r0.<android.app.Notification$Builder: android.app.PendingIntent mFullScreenIntent> = $r5;

        $r6 = r1.<android.app.Notification: java.lang.CharSequence tickerText>;

        r0.<android.app.Notification$Builder: java.lang.CharSequence mTickerText> = $r6;

        $r7 = r1.<android.app.Notification: android.widget.RemoteViews tickerView>;

        r0.<android.app.Notification$Builder: android.widget.RemoteViews mTickerView> = $r7;

        $r8 = r1.<android.app.Notification: android.graphics.Bitmap largeIcon>;

        r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon> = $r8;

        $r9 = r1.<android.app.Notification: android.net.Uri sound>;

        r0.<android.app.Notification$Builder: android.net.Uri mSound> = $r9;

        $i5 = r1.<android.app.Notification: int audioStreamType>;

        r0.<android.app.Notification$Builder: int mAudioStreamType> = $i5;

        $r11 = r1.<android.app.Notification: android.media.AudioAttributes audioAttributes>;

        r0.<android.app.Notification$Builder: android.media.AudioAttributes mAudioAttributes> = $r11;

        $r10 = r1.<android.app.Notification: long[] vibrate>;

        r0.<android.app.Notification$Builder: long[] mVibrate> = $r10;

        $i7 = r1.<android.app.Notification: int ledARGB>;

        r0.<android.app.Notification$Builder: int mLedArgb> = $i7;

        $i6 = r1.<android.app.Notification: int ledOnMS>;

        r0.<android.app.Notification$Builder: int mLedOnMs> = $i6;

        $i9 = r1.<android.app.Notification: int ledOffMS>;

        r0.<android.app.Notification$Builder: int mLedOffMs> = $i9;

        $i8 = r1.<android.app.Notification: int defaults>;

        r0.<android.app.Notification$Builder: int mDefaults> = $i8;

        $i10 = r1.<android.app.Notification: int flags>;

        r0.<android.app.Notification$Builder: int mFlags> = $i10;

        $r12 = r1.<android.app.Notification: java.lang.String category>;

        r0.<android.app.Notification$Builder: java.lang.String mCategory> = $r12;

        $r14 = staticinvoke <android.app.Notification: java.lang.String access$400(android.app.Notification)>(r1);

        r0.<android.app.Notification$Builder: java.lang.String mGroupKey> = $r14;

        $r13 = staticinvoke <android.app.Notification: java.lang.String access$500(android.app.Notification)>(r1);

        r0.<android.app.Notification$Builder: java.lang.String mSortKey> = $r13;

        $i11 = r1.<android.app.Notification: int priority>;

        r0.<android.app.Notification$Builder: int mPriority> = $i11;

        $r15 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

        $r16 = r1.<android.app.Notification: android.app.Notification$Action[] actions>;

        if $r16 == null goto label1;

        $r25 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        $r26 = r1.<android.app.Notification: android.app.Notification$Action[] actions>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r25, $r26);

     label1:
        $i12 = r1.<android.app.Notification: int visibility>;

        r0.<android.app.Notification$Builder: int mVisibility> = $i12;

        $r17 = r1.<android.app.Notification: android.app.Notification publicVersion>;

        r0.<android.app.Notification$Builder: android.app.Notification mPublicVersion> = $r17;

        r2 = r1.<android.app.Notification: android.os.Bundle extras>;

        $i13 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("android.originatingUserId");

        r0.<android.app.Notification$Builder: int mOriginatingUserId> = $i13;

        $r20 = virtualinvoke r2.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.title");

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle> = $r20;

        $r21 = virtualinvoke r2.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.text");

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText> = $r21;

        $r18 = virtualinvoke r2.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.subText");

        r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText> = $r18;

        $r19 = virtualinvoke r2.<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>("android.infoText");

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentInfo> = $r19;

        $i15 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("android.icon");

        r0.<android.app.Notification$Builder: int mSmallIcon> = $i15;

        $i16 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("android.progress");

        r0.<android.app.Notification$Builder: int mProgress> = $i16;

        $i14 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>("android.progressMax");

        r0.<android.app.Notification$Builder: int mProgressMax> = $i14;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.progressIndeterminate");

        r0.<android.app.Notification$Builder: boolean mProgressIndeterminate> = $z0;

        $z3 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.showChronometer");

        r0.<android.app.Notification$Builder: boolean mUseChronometer> = $z3;

        $z4 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("android.showWhen");

        r0.<android.app.Notification$Builder: boolean mShowWhen> = $z4;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.largeIcon");

        if $z1 == 0 goto label2;

        $r28 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("android.largeIcon");

        $r27 = (android.graphics.Bitmap) $r28;

        r0.<android.app.Notification$Builder: android.graphics.Bitmap mLargeIcon> = $r27;

     label2:
        $z2 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>("android.people");

        if $z2 == 0 goto label3;

        $r23 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        virtualinvoke $r23.<java.util.ArrayList: void clear()>();

        $r24 = r0.<android.app.Notification$Builder: java.util.ArrayList mPeople>;

        $r22 = virtualinvoke r2.<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>("android.people");

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r24, $r22);

     label3:
        return;
    }

    public android.app.Notification getNotification()
    {
        android.app.Notification$Builder r0;
        android.app.Notification $r1;

        r0 := @this: android.app.Notification$Builder;

        $r1 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification build()>();

        return $r1;
    }

    public android.app.Notification build()
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.content.Context $r2;
        int $i0, $i1;
        boolean $z0;
        android.app.Notification$Style $r3, $r7, $r9, $r14;
        android.os.Bundle $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r15;

        r0 := @this: android.app.Notification$Builder;

        $r2 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        r0.<android.app.Notification$Builder: int mOriginatingUserId> = $i0;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean hasThreeLines()>();

        r0.<android.app.Notification$Builder: boolean mHasThreeLines> = $z0;

        r1 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification buildUnstyled()>();

        $r3 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r3 == null goto label1;

        $r14 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        r1 = virtualinvoke $r14.<android.app.Notification$Style: android.app.Notification buildStyled(android.app.Notification)>(r1);

     label1:
        $r4 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        if $r4 == null goto label2;

        $r15 = r1.<android.app.Notification: android.os.Bundle extras>;

        $r12 = r0.<android.app.Notification$Builder: android.os.Bundle mExtras>;

        virtualinvoke $r15.<android.os.Bundle: void putAll(android.os.Bundle)>($r12);

     label2:
        $r5 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        $i1 = virtualinvoke $r5.<android.os.Bundle: int size()>();

        if $i1 <= 0 goto label3;

        $r11 = r1.<android.app.Notification: android.os.Bundle extras>;

        $r10 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        virtualinvoke $r11.<android.os.Bundle: void putAll(android.os.Bundle)>($r10);

        $r13 = r0.<android.app.Notification$Builder: android.os.Bundle mRebuildBundle>;

        virtualinvoke $r13.<android.os.Bundle: void clear()>();

     label3:
        $r6 = r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke r0.<android.app.Notification$Builder: void populateExtras(android.os.Bundle)>($r6);

        $r7 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        if $r7 == null goto label4;

        $r9 = r0.<android.app.Notification$Builder: android.app.Notification$Style mStyle>;

        $r8 = r1.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r9.<android.app.Notification$Style: void addExtras(android.os.Bundle)>($r8);

     label4:
        r0.<android.app.Notification$Builder: boolean mHasThreeLines> = 0;

        return r1;
    }

    public android.app.Notification buildInto(android.app.Notification)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1, $r2;

        r0 := @this: android.app.Notification$Builder;

        r1 := @parameter0: android.app.Notification;

        $r2 = virtualinvoke r0.<android.app.Notification$Builder: android.app.Notification build()>();

        virtualinvoke $r2.<android.app.Notification: void cloneInto(android.app.Notification,boolean)>(r1, 1);

        return r1;
    }

    private int getBaseLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367160;
    }

    private int getBigBaseLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367161;
    }

    private int getBigPictureLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367164;
    }

    private int getBigTextLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367165;
    }

    private int getInboxLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367166;
    }

    private int getActionLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367155;
    }

    private int getActionTombstoneLayoutResource()
    {
        android.app.Notification$Builder r0;

        r0 := @this: android.app.Notification$Builder;

        return 17367157;
    }

    static int access$302(android.app.Notification$Builder, int)
    {
        android.app.Notification$Builder r0;
        int i0;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        r0.<android.app.Notification$Builder: int mFlags> = i0;

        return i0;
    }

    static java.lang.CharSequence access$600(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle>;

        return $r1;
    }

    static android.widget.RemoteViews access$700(android.app.Notification$Builder, int)
    {
        android.app.Notification$Builder r0;
        int i0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplateWithActions(int)>(i0);

        return $r1;
    }

    static java.lang.CharSequence access$602(android.app.Notification$Builder, java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentTitle> = r1;

        return r1;
    }

    static java.lang.CharSequence access$800(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.lang.CharSequence mSubText>;

        return $r1;
    }

    static java.lang.CharSequence access$900(android.app.Notification$Builder, java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1, $r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = specialinvoke r0.<android.app.Notification$Builder: java.lang.CharSequence processLegacyText(java.lang.CharSequence)>(r1);

        return $r2;
    }

    static android.content.Context access$1000(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        android.content.Context $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$1100(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        $z0 = r0.<android.app.Notification$Builder: boolean mHasThreeLines>;

        return $z0;
    }

    static int access$1200(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBigPictureLayoutResource()>();

        return $i0;
    }

    static java.lang.CharSequence access$1300(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText>;

        return $r1;
    }

    static boolean access$1400(android.app.Notification$Builder, android.widget.RemoteViews, int)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.widget.RemoteViews;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean addProfileBadge(android.widget.RemoteViews,int)>(r1, i0);

        return $z0;
    }

    static void access$1500(android.app.Notification$Builder, android.app.Notification, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.widget.RemoteViews r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.app.Notification;

        r2 := @parameter2: android.widget.RemoteViews;

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews)>(r1, r2);

        return;
    }

    static java.lang.CharSequence access$1302(android.app.Notification$Builder, java.lang.CharSequence)
    {
        android.app.Notification$Builder r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: java.lang.CharSequence;

        r0.<android.app.Notification$Builder: java.lang.CharSequence mContentText> = r1;

        return r1;
    }

    static int access$1600(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getBigTextLayoutResource()>();

        return $i0;
    }

    static void access$1700(android.app.Notification$Builder, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.widget.RemoteViews r1;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.widget.RemoteViews;

        specialinvoke r0.<android.app.Notification$Builder: void shrinkLine3Text(android.widget.RemoteViews)>(r1);

        return;
    }

    static java.util.ArrayList access$1800(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        $r1 = r0.<android.app.Notification$Builder: java.util.ArrayList mActions>;

        return $r1;
    }

    static int access$1900(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        int $i0;

        r0 := @parameter0: android.app.Notification$Builder;

        $i0 = specialinvoke r0.<android.app.Notification$Builder: int getInboxLayoutResource()>();

        return $i0;
    }

    static void access$2000(android.app.Notification$Builder, android.app.Notification, android.widget.RemoteViews)
    {
        android.app.Notification$Builder r0;
        android.app.Notification r1;
        android.widget.RemoteViews r2;

        r0 := @parameter0: android.app.Notification$Builder;

        r1 := @parameter1: android.app.Notification;

        r2 := @parameter2: android.widget.RemoteViews;

        specialinvoke r0.<android.app.Notification$Builder: void setBuilderContentView(android.app.Notification,android.widget.RemoteViews)>(r1, r2);

        return;
    }

    static android.widget.RemoteViews access$2100(android.app.Notification$Builder, int, boolean)
    {
        android.app.Notification$Builder r0;
        int i0;
        boolean z0;
        android.widget.RemoteViews $r1;

        r0 := @parameter0: android.app.Notification$Builder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = specialinvoke r0.<android.app.Notification$Builder: android.widget.RemoteViews applyStandardTemplate(int,boolean)>(i0, z0);

        return $r1;
    }

    static boolean access$2200(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        $z0 = specialinvoke r0.<android.app.Notification$Builder: boolean showsTimeOrChronometer()>();

        return $z0;
    }

    static boolean access$2300(android.app.Notification$Builder)
    {
        android.app.Notification$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.app.Notification$Builder;

        $z0 = r0.<android.app.Notification$Builder: boolean mUseChronometer>;

        return $z0;
    }

    public static void <clinit>()
    {
        <android.app.Notification$Builder: boolean STRIP_AND_REBUILD> = 1;

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_CONTEXT_APPLICATION_INFO> = "android.rebuild.applicationInfo";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.hudViewActionCount";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW> = "android.rebuild.hudView";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.bigViewActionCount";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_BIG_CONTENT_VIEW> = "android.rebuild.bigView";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT> = "android.rebuild.contentViewActionCount";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_CONTENT_VIEW> = "android.rebuild.contentView";

        <android.app.Notification$Builder: java.lang.String EXTRA_REBUILD_LARGE_ICON> = "android.rebuild.largeIcon";

        <android.app.Notification$Builder: java.lang.String EXTRA_NEEDS_REBUILD> = "android.rebuild";

        <android.app.Notification$Builder: float LARGE_TEXT_SCALE> = 1.3F;

        <android.app.Notification$Builder: int MAX_ACTION_BUTTONS> = 3;

        return;
    }
}
