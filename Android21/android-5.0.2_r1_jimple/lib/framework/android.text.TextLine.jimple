class android.text.TextLine extends java.lang.Object
{
    private static final boolean DEBUG;
    private android.text.TextPaint mPaint;
    private java.lang.CharSequence mText;
    private int mStart;
    private int mLen;
    private int mDir;
    private android.text.Layout$Directions mDirections;
    private boolean mHasTabs;
    private android.text.Layout$TabStops mTabs;
    private char[] mChars;
    private boolean mCharsValid;
    private android.text.Spanned mSpanned;
    private final android.text.TextPaint mWorkPaint;
    private final android.text.SpanSet mMetricAffectingSpanSpanSet;
    private final android.text.SpanSet mCharacterStyleSpanSet;
    private final android.text.SpanSet mReplacementSpanSpanSet;
    private static final android.text.TextLine[] sCached;
    private static final int TAB_INCREMENT;

    void <init>()
    {
        android.text.TextLine r0;
        android.text.TextPaint $r1;
        android.text.SpanSet $r2, $r3, $r4;

        r0 := @this: android.text.TextLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<android.text.TextLine: android.text.TextPaint mWorkPaint> = $r1;

        $r2 = new android.text.SpanSet;

        specialinvoke $r2.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/MetricAffectingSpan");

        r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet> = $r2;

        $r3 = new android.text.SpanSet;

        specialinvoke $r3.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/CharacterStyle");

        r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet> = $r3;

        $r4 = new android.text.SpanSet;

        specialinvoke $r4.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/ReplacementSpan");

        r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet> = $r4;

        return;
    }

    static android.text.TextLine obtain()
    {
        android.text.TextLine r0, $r5, $r7, r11;
        android.text.TextLine[] r1, $r3, $r4, $r6, $r8, $r9;
        int i0;
        java.lang.Throwable r2, $r10;

        $r3 = <android.text.TextLine: android.text.TextLine[] sCached>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.text.TextLine: android.text.TextLine[] sCached>;

        i0 = lengthof $r4;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label4;

        $r6 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r7 = $r6[i0];

        if $r7 == null goto label2;

        $r8 = <android.text.TextLine: android.text.TextLine[] sCached>;

        r0 = $r8[i0];

        $r9 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r9[i0] = null;

        exitmonitor r1;

     label3:
        return r0;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r5 = new android.text.TextLine;

        specialinvoke $r5.<android.text.TextLine: void <init>()>();

        r11 = $r5;

        return r11;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static android.text.TextLine recycle(android.text.TextLine)
    {
        android.text.TextLine r0, $r9;
        android.text.TextLine[] r1, $r6, $r7, $r8, $r10;
        int i0, $i1;
        java.lang.Throwable r2, $r11;
        android.text.SpanSet $r3, $r4, $r5;

        r0 := @parameter0: android.text.TextLine;

        r0.<android.text.TextLine: java.lang.CharSequence mText> = null;

        r0.<android.text.TextLine: android.text.TextPaint mPaint> = null;

        r0.<android.text.TextLine: android.text.Layout$Directions mDirections> = null;

        $r3 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        virtualinvoke $r3.<android.text.SpanSet: void recycle()>();

        $r4 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        virtualinvoke $r4.<android.text.SpanSet: void recycle()>();

        $r5 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        virtualinvoke $r5.<android.text.SpanSet: void recycle()>();

        $r6 = <android.text.TextLine: android.text.TextLine[] sCached>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        i0 = 0;

     label2:
        $r7 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $i1 = lengthof $r7;

        if i0 >= $i1 goto label4;

        $r8 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r9 = $r8[i0];

        if $r9 != null goto label3;

        $r10 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r10[i0] = r0;

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void set(android.text.TextPaint, java.lang.CharSequence, int, int, int, android.text.Layout$Directions, boolean, android.text.Layout$TabStops)
    {
        android.text.TextLine r0;
        android.text.TextPaint r1;
        java.lang.CharSequence r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.text.Layout$Directions r3, $r6, $r15;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.text.Layout$TabStops r4;
        char[] r5, $r7, $r8, $r10, $r12;
        android.text.SpanSet $r9, $r11, $r16, $r17;
        android.text.Spanned $r13, $r14;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.TextPaint;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Directions;

        z0 := @parameter6: boolean;

        r4 := @parameter7: android.text.Layout$TabStops;

        r0.<android.text.TextLine: android.text.TextPaint mPaint> = r1;

        r0.<android.text.TextLine: java.lang.CharSequence mText> = r2;

        r0.<android.text.TextLine: int mStart> = i0;

        $i7 = i1 - i0;

        r0.<android.text.TextLine: int mLen> = $i7;

        r0.<android.text.TextLine: int mDir> = i2;

        r0.<android.text.TextLine: android.text.Layout$Directions mDirections> = r3;

        $r6 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        if $r6 != null goto label01;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Directions cannot be null");

        throw $r18;

     label01:
        r0.<android.text.TextLine: boolean mHasTabs> = z0;

        r0.<android.text.TextLine: android.text.Spanned mSpanned> = null;

        z1 = 0;

        $z2 = r2 instanceof android.text.Spanned;

        if $z2 == 0 goto label04;

        $r13 = (android.text.Spanned) r2;

        r0.<android.text.TextLine: android.text.Spanned mSpanned> = $r13;

        $r16 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $r14 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        virtualinvoke $r16.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r14, i0, i1);

        $r17 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $i13 = $r17.<android.text.SpanSet: int numberOfSpans>;

        if $i13 <= 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z1 = $z6;

     label04:
        if z1 != 0 goto label05;

        if z0 != 0 goto label05;

        $r15 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if r3 == $r15 goto label06;

     label05:
        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        r0.<android.text.TextLine: boolean mCharsValid> = $z5;

        $z3 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z3 == 0 goto label13;

        $r7 = r0.<android.text.TextLine: char[] mChars>;

        if $r7 == null goto label08;

        $r12 = r0.<android.text.TextLine: char[] mChars>;

        $i11 = lengthof $r12;

        $i12 = r0.<android.text.TextLine: int mLen>;

        if $i11 >= $i12 goto label09;

     label08:
        $i8 = r0.<android.text.TextLine: int mLen>;

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: char[] newUnpaddedCharArray(int)>($i8);

        r0.<android.text.TextLine: char[] mChars> = $r8;

     label09:
        $r10 = r0.<android.text.TextLine: char[] mChars>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r2, i0, i1, $r10, 0);

        if z1 == 0 goto label13;

        r5 = r0.<android.text.TextLine: char[] mChars>;

        i3 = i0;

     label10:
        if i3 >= i1 goto label13;

        $r9 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        i4 = virtualinvoke $r9.<android.text.SpanSet: int getNextTransition(int,int)>(i3, i1);

        $r11 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $z4 = virtualinvoke $r11.<android.text.SpanSet: boolean hasSpansIntersecting(int,int)>(i3, i4);

        if $z4 == 0 goto label12;

        $i9 = i3 - i0;

        r5[$i9] = 65532;

        $i10 = i3 - i0;

        i5 = $i10 + 1;

        i6 = i4 - i0;

     label11:
        if i5 >= i6 goto label12;

        r5[i5] = 65279;

        i5 = i5 + 1;

        goto label11;

     label12:
        i3 = i4;

        goto label10;

     label13:
        r0.<android.text.TextLine: android.text.Layout$TabStops mTabs> = r4;

        return;
    }

    void draw(android.graphics.Canvas, float, int, int, int)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        int[] r2;
        android.graphics.RectF r3, $r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Bitmap r4;
        android.text.Layout$Directions $r5, $r10, $r11, $r12, $r13;
        android.text.TextPaint $r7;
        char[] $r8, $r9;
        android.emoji.EmojiFactory $r14;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z1 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z1 != 0 goto label02;

        $r11 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r10 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r11 != $r10 goto label01;

        $i29 = r0.<android.text.TextLine: int mLen>;

        specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, 0, $i29, 0, f0, i0, i1, i2, 0);

        return;

     label01:
        $r13 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r12 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT>;

        if $r13 != $r12 goto label02;

        $i28 = r0.<android.text.TextLine: int mLen>;

        specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, 0, $i28, 1, f0, i0, i1, i2, 0);

        return;

     label02:
        f1 = 0.0F;

        $r5 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r2 = $r5.<android.text.Layout$Directions: int[] mDirections>;

        r3 = null;

        $i11 = lengthof r2;

        i3 = $i11 - 2;

        i4 = 0;

     label03:
        $i10 = lengthof r2;

        if i4 >= $i10 goto label21;

        i5 = r2[i4];

        $i13 = i4 + 1;

        $i12 = r2[$i13];

        $i15 = $i12 & 67108863;

        i6 = i5 + $i15;

        $i14 = r0.<android.text.TextLine: int mLen>;

        if i6 <= $i14 goto label04;

        i6 = r0.<android.text.TextLine: int mLen>;

     label04:
        $i17 = i4 + 1;

        $i16 = r2[$i17];

        $i18 = $i16 & 67108864;

        if $i18 == 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z0 = $z5;

        i7 = i5;

        $z3 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z3 == 0 goto label07;

        $i27 = i5;

        goto label08;

     label07:
        $i27 = i6;

     label08:
        i8 = $i27;

     label09:
        if i8 > i6 goto label20;

        i9 = 0;

        r4 = null;

        $z2 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z2 == 0 goto label11;

        if i8 >= i6 goto label11;

        $r8 = r0.<android.text.TextLine: char[] mChars>;

        i9 = $r8[i8];

        if i9 < 55296 goto label11;

        if i9 >= 56320 goto label11;

        $i23 = i8 + 1;

        if $i23 >= i6 goto label11;

        $r9 = r0.<android.text.TextLine: char[] mChars>;

        i9 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r9, i8);

        $i26 = <android.text.Layout: int MIN_EMOJI>;

        if i9 < $i26 goto label10;

        $i25 = <android.text.Layout: int MAX_EMOJI>;

        if i9 > $i25 goto label10;

        $r14 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r4 = virtualinvoke $r14.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i9);

        goto label11;

     label10:
        if i9 <= 65535 goto label11;

        i8 = i8 + 1;

        goto label19;

     label11:
        if i8 == i6 goto label12;

        if i9 == 9 goto label12;

        if r4 == null goto label19;

     label12:
        $f6 = f0 + f1;

        if i4 != i3 goto label13;

        $i24 = r0.<android.text.TextLine: int mLen>;

        if i8 == $i24 goto label14;

     label13:
        $z4 = 1;

        goto label15;

     label14:
        $z4 = 0;

     label15:
        $f8 = specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, i7, i8, z0, $f6, i0, i1, i2, $z4);

        f1 = f1 + $f8;

        if i9 != 9 goto label16;

        $i22 = r0.<android.text.TextLine: int mDir>;

        $f17 = (float) $i22;

        $i21 = r0.<android.text.TextLine: int mDir>;

        $f19 = (float) $i21;

        $f18 = f1 * $f19;

        $f16 = virtualinvoke r0.<android.text.TextLine: float nextTab(float)>($f18);

        f1 = $f17 * $f16;

        goto label18;

     label16:
        if r4 == null goto label18;

        f3 = virtualinvoke r0.<android.text.TextLine: float ascent(int)>(i8);

        $i19 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        f2 = (float) $i19;

        $f7 = neg f3;

        f5 = $f7 / f2;

        $i20 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $f11 = (float) $i20;

        f4 = $f11 * f5;

        if r3 != null goto label17;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r3 = $r6;

     label17:
        $f13 = f0 + f1;

        $f9 = (float) i1;

        $f12 = $f9 + f3;

        $f10 = f0 + f1;

        $f15 = $f10 + f4;

        $f14 = (float) i1;

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>($f13, $f12, $f15, $f14);

        $r7 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r4, null, r3, $r7);

        f1 = f1 + f4;

        i8 = i8 + 1;

     label18:
        i7 = i8 + 1;

     label19:
        i8 = i8 + 1;

        goto label09;

     label20:
        i4 = i4 + 2;

        goto label03;

     label21:
        return;
    }

    float metrics(android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        android.graphics.Paint$FontMetricsInt r1;
        int $i0;
        float $f0;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Paint$FontMetricsInt;

        $i0 = r0.<android.text.TextLine: int mLen>;

        $f0 = virtualinvoke r0.<android.text.TextLine: float measure(int,boolean,android.graphics.Paint$FontMetricsInt)>($i0, 0, r1);

        return $f0;
    }

    float measure(int, boolean, android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.graphics.Paint$FontMetricsInt r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        char[] r2;
        int[] r3;
        android.graphics.Bitmap r4;
        android.text.Layout$Directions $r5, $r7, $r8, $r9, $r10;
        android.emoji.EmojiFactory $r6;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.graphics.Paint$FontMetricsInt;

        if z0 == 0 goto label01;

        $i28 = i0 - 1;

        goto label02;

     label01:
        $i28 = i0;

     label02:
        i1 = $i28;

        if i1 >= 0 goto label03;

        return 0.0F;

     label03:
        f0 = 0.0F;

        $z4 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z4 != 0 goto label05;

        $r7 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r10 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r7 != $r10 goto label04;

        $i27 = r0.<android.text.TextLine: int mLen>;

        $f20 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(0, i0, $i27, 0, r1);

        return $f20;

     label04:
        $r9 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r8 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT>;

        if $r9 != $r8 goto label05;

        $i25 = r0.<android.text.TextLine: int mLen>;

        $f19 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(0, i0, $i25, 1, r1);

        return $f19;

     label05:
        r2 = r0.<android.text.TextLine: char[] mChars>;

        $r5 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r3 = $r5.<android.text.Layout$Directions: int[] mDirections>;

        i2 = 0;

     label06:
        $i8 = lengthof r3;

        if i2 >= $i8 goto label31;

        i3 = r3[i2];

        $i10 = i2 + 1;

        $i9 = r3[$i10];

        $i12 = $i9 & 67108863;

        i4 = i3 + $i12;

        $i11 = r0.<android.text.TextLine: int mLen>;

        if i4 <= $i11 goto label07;

        i4 = r0.<android.text.TextLine: int mLen>;

     label07:
        $i14 = i2 + 1;

        $i13 = r3[$i14];

        $i15 = $i13 & 67108864;

        if $i15 == 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        z1 = $z10;

        i5 = i3;

        $z5 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z5 == 0 goto label10;

        $i26 = i3;

        goto label11;

     label10:
        $i26 = i4;

     label11:
        i6 = $i26;

     label12:
        if i6 > i4 goto label30;

        i7 = 0;

        r4 = null;

        $z6 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z6 == 0 goto label14;

        if i6 >= i4 goto label14;

        i7 = r2[i6];

        if i7 < 55296 goto label14;

        if i7 >= 56320 goto label14;

        $i22 = i6 + 1;

        if $i22 >= i4 goto label14;

        i7 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>(r2, i6);

        $i24 = <android.text.Layout: int MIN_EMOJI>;

        if i7 < $i24 goto label13;

        $i23 = <android.text.Layout: int MAX_EMOJI>;

        if i7 > $i23 goto label13;

        $r6 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r4 = virtualinvoke $r6.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i7);

        goto label14;

     label13:
        if i7 <= 65535 goto label14;

        i6 = i6 + 1;

        goto label29;

     label14:
        if i6 == i4 goto label15;

        if i7 == 9 goto label15;

        if r4 == null goto label29;

     label15:
        if i1 < i5 goto label16;

        if i1 >= i6 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        z3 = $z7;

        $i16 = r0.<android.text.TextLine: int mDir>;

        if $i16 != -1 goto label18;

        $z8 = 1;

        goto label19;

     label18:
        $z8 = 0;

     label19:
        if $z8 != z1 goto label20;

        $z9 = 1;

        goto label21;

     label20:
        $z9 = 0;

     label21:
        z2 = $z9;

        if z3 == 0 goto label22;

        if z2 == 0 goto label22;

        $f16 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i0, i6, z1, r1);

        $f15 = f0 + $f16;

        return $f15;

     label22:
        f2 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i6, i6, z1, r1);

        if z2 == 0 goto label23;

        $f4 = f2;

        goto label24;

     label23:
        $f4 = neg f2;

     label24:
        f0 = f0 + $f4;

        if z3 == 0 goto label25;

        $f18 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i0, i6, z1, null);

        $f17 = f0 + $f18;

        return $f17;

     label25:
        if i7 != 9 goto label27;

        if i0 != i6 goto label26;

        return f0;

     label26:
        $i20 = r0.<android.text.TextLine: int mDir>;

        $f12 = (float) $i20;

        $i21 = r0.<android.text.TextLine: int mDir>;

        $f14 = (float) $i21;

        $f13 = f0 * $f14;

        $f11 = virtualinvoke r0.<android.text.TextLine: float nextTab(float)>($f13);

        f0 = $f12 * $f11;

        if i1 != i6 goto label27;

        return f0;

     label27:
        if r4 == null goto label28;

        f1 = virtualinvoke r0.<android.text.TextLine: float ascent(int)>(i6);

        $i17 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $f6 = (float) $i17;

        $f5 = neg f1;

        $f8 = $f6 * $f5;

        $i19 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        $f7 = (float) $i19;

        f3 = $f8 / $f7;

        $i18 = r0.<android.text.TextLine: int mDir>;

        $f9 = (float) $i18;

        $f10 = $f9 * f3;

        f0 = f0 + $f10;

        i6 = i6 + 1;

     label28:
        i5 = i6 + 1;

     label29:
        i6 = i6 + 1;

        goto label12;

     label30:
        i2 = i2 + 2;

        goto label06;

     label31:
        return f0;
    }

    private float drawRun(android.graphics.Canvas, int, int, boolean, float, int, int, int, boolean)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, $i5;
        boolean z0, z1, $z2;
        float f0, f1, $f2, $f3, $f4;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        f0 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        z1 := @parameter8: boolean;

        $i5 = r0.<android.text.TextLine: int mDir>;

        if $i5 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != z0 goto label3;

        $f3 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i0, i1, i1, z0, null);

        f1 = neg $f3;

        $f4 = f0 + f1;

        specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i1, z0, r1, $f4, i2, i3, i4, null, 0);

        return f1;

     label3:
        $f2 = specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i1, z0, r1, f0, i2, i3, i4, null, z1);

        return $f2;
    }

    private float measureRun(int, int, int, boolean, android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Paint$FontMetricsInt r1;
        float $f0;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.graphics.Paint$FontMetricsInt;

        $f0 = specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i2, z0, null, 0.0F, 0, 0, 0, r1, 1);

        return $f0;
    }

    int getOffsetToLeftRightOf(int, boolean)
    {
        android.text.TextLine r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i50, i51, i52, i53;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12, z13;
        byte b1, $b32;
        int[] r1;
        android.text.Layout$Directions $r2;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        b1 = 0;

        i2 = r0.<android.text.TextLine: int mLen>;

        $i13 = r0.<android.text.TextLine: int mDir>;

        if $i13 != -1 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z1 = $z9;

        $r2 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r1 = $r2.<android.text.Layout$Directions: int[] mDirections>;

        i4 = 0;

        i5 = b1;

        i6 = i2;

        i7 = -1;

        z2 = 0;

        if i0 != b1 goto label03;

        i3 = -2;

        goto label22;

     label03:
        if i0 != i2 goto label04;

        i3 = lengthof r1;

        goto label22;

     label04:
        i3 = 0;

     label05:
        $i14 = lengthof r1;

        if i3 >= $i14 goto label12;

        $i37 = r1[i3];

        i5 = b1 + $i37;

        if i0 < i5 goto label11;

        $i36 = i3 + 1;

        $i35 = r1[$i36];

        $i41 = $i35 & 67108863;

        i6 = i5 + $i41;

        if i6 <= i2 goto label06;

        i6 = i2;

     label06:
        if i0 >= i6 goto label11;

        $i40 = i3 + 1;

        $i39 = r1[$i40];

        $i38 = $i39 >>> 26;

        i4 = $i38 & 63;

        if i0 != i5 goto label12;

        i11 = i0 - 1;

        i8 = 0;

     label07:
        $i45 = lengthof r1;

        if i8 >= $i45 goto label10;

        $i44 = r1[i8];

        i10 = b1 + $i44;

        if i11 < i10 goto label09;

        $i43 = i8 + 1;

        $i42 = r1[$i43];

        $i49 = $i42 & 67108863;

        i12 = i10 + $i49;

        if i12 <= i2 goto label08;

        i12 = i2;

     label08:
        if i11 >= i12 goto label09;

        $i48 = i8 + 1;

        $i47 = r1[$i48];

        $i46 = $i47 >>> 26;

        i9 = $i46 & 63;

        if i9 >= i4 goto label09;

        i3 = i8;

        i4 = i9;

        i5 = i10;

        i6 = i12;

        z2 = 1;

        goto label10;

     label09:
        i8 = i8 + 2;

        goto label07;

     label10:
        goto label12;

     label11:
        i3 = i3 + 2;

        goto label05;

     label12:
        $i16 = lengthof r1;

        if i3 == $i16 goto label22;

        $i31 = i4 & 1;

        if $i31 == 0 goto label13;

        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        z10 = $z8;

        if z0 != z10 goto label15;

        $z7 = 1;

        goto label16;

     label15:
        $z7 = 0;

     label16:
        z11 = $z7;

        if z11 == 0 goto label17;

        $i33 = i6;

        goto label18;

     label17:
        $i33 = i5;

     label18:
        if i0 != $i33 goto label19;

        if z11 == z2 goto label22;

     label19:
        i7 = specialinvoke r0.<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)>(i3, i5, i6, z10, i0, z11);

        if z11 == 0 goto label20;

        $i34 = i6;

        goto label21;

     label20:
        $i34 = i5;

     label21:
        if i7 == $i34 goto label22;

        return i7;

     label22:
        if z0 != z1 goto label23;

        $z5 = 1;

        goto label24;

     label23:
        $z5 = 0;

     label24:
        z12 = $z5;

        if z12 == 0 goto label25;

        $b32 = 2;

        goto label26;

     label25:
        $b32 = -2;

     label26:
        i50 = i3 + $b32;

        if i50 < 0 goto label39;

        $i20 = lengthof r1;

        if i50 >= $i20 goto label39;

        $i19 = r1[i50];

        i51 = b1 + $i19;

        $i22 = i50 + 1;

        $i21 = r1[$i22];

        $i24 = $i21 & 67108863;

        i52 = i51 + $i24;

        if i52 <= i2 goto label27;

        i52 = i2;

     label27:
        $i23 = i50 + 1;

        $i27 = r1[$i23];

        $i28 = $i27 >>> 26;

        i53 = $i28 & 63;

        $i25 = i53 & 1;

        if $i25 == 0 goto label28;

        $z6 = 1;

        goto label29;

     label28:
        $z6 = 0;

     label29:
        z3 = $z6;

        if z0 != z3 goto label30;

        $z4 = 1;

        goto label31;

     label30:
        $z4 = 0;

     label31:
        z13 = $z4;

        if i7 != -1 goto label36;

        if z13 == 0 goto label32;

        $i29 = i51;

        goto label33;

     label32:
        $i29 = i52;

     label33:
        i7 = specialinvoke r0.<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)>(i50, i51, i52, z3, $i29, z13);

        if z13 == 0 goto label34;

        $i30 = i52;

        goto label35;

     label34:
        $i30 = i51;

     label35:
        if i7 != $i30 goto label45;

        i3 = i50;

        i4 = i53;

        goto label22;

     label36:
        if i53 >= i4 goto label45;

        if z13 == 0 goto label37;

        $i26 = i51;

        goto label38;

     label37:
        $i26 = i52;

     label38:
        i7 = $i26;

        goto label45;

     label39:
        if i7 != -1 goto label42;

        if z12 == 0 goto label40;

        $i18 = r0.<android.text.TextLine: int mLen>;

        $i17 = $i18 + 1;

        goto label41;

     label40:
        $i17 = -1;

     label41:
        i7 = $i17;

        goto label45;

     label42:
        if i7 > i2 goto label45;

        if z12 == 0 goto label43;

        $i15 = i2;

        goto label44;

     label43:
        $i15 = b1;

     label44:
        i7 = $i15;

        goto label45;

     label45:
        return i7;
    }

    private int getOffsetBeforeAfter(int, int, int, boolean, int, boolean)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39, $i40, $i41, $i42, $i44, $i45;
        boolean z0, z1, $z2, $z3;
        android.text.TextPaint r1, $r8;
        android.text.style.MetricAffectingSpan[] r2, r16;
        android.text.style.ReplacementSpan r3;
        android.text.style.MetricAffectingSpan r4;
        java.lang.CharSequence $r5, $r6, $r14;
        android.text.Spanned $r7, $r9, $r10, $r12;
        java.lang.Object[] $r11, $r13;
        byte $b38, $b43, b46, b47;
        char[] $r15;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        z1 := @parameter5: boolean;

        if i0 < 0 goto label03;

        if z1 == 0 goto label01;

        $i45 = r0.<android.text.TextLine: int mLen>;

        goto label02;

     label01:
        $i45 = 0;

     label02:
        if i3 != $i45 goto label05;

     label03:
        if z1 == 0 goto label04;

        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i15 = r0.<android.text.TextLine: int mStart>;

        $i14 = i3 + $i15;

        $i16 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r6, $i14);

        $i18 = r0.<android.text.TextLine: int mStart>;

        $i17 = $i16 - $i18;

        return $i17;

     label04:
        $r5 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i10 = r0.<android.text.TextLine: int mStart>;

        $i9 = i3 + $i10;

        $i11 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r5, $i9);

        $i13 = r0.<android.text.TextLine: int mStart>;

        $i12 = $i11 - $i13;

        return $i12;

     label05:
        r1 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r8 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r1.<android.text.TextPaint: void set(android.text.TextPaint)>($r8);

        i4 = i1;

        $r7 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r7 != null goto label06;

        i5 = i2;

        goto label18;

     label06:
        if z1 == 0 goto label07;

        $i44 = i3 + 1;

        goto label08;

     label07:
        $i44 = i3;

     label08:
        i6 = $i44;

        $i20 = r0.<android.text.TextLine: int mStart>;

        i7 = $i20 + i2;

     label09:
        $r9 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i19 = r0.<android.text.TextLine: int mStart>;

        $i23 = $i19 + i4;

        $i21 = interfaceinvoke $r9.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i23, i7, class "android/text/style/MetricAffectingSpan");

        $i22 = r0.<android.text.TextLine: int mStart>;

        i5 = $i21 - $i22;

        if i5 < i6 goto label10;

        goto label11;

     label10:
        i4 = i5;

        goto label09;

     label11:
        $r12 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i26 = r0.<android.text.TextLine: int mStart>;

        $i25 = $i26 + i4;

        $i27 = r0.<android.text.TextLine: int mStart>;

        $i24 = $i27 + i5;

        $r13 = interfaceinvoke $r12.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i25, $i24, class "android/text/style/MetricAffectingSpan");

        r2 = (android.text.style.MetricAffectingSpan[]) $r13;

        $r10 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $r11 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>(r2, $r10, class "android/text/style/MetricAffectingSpan");

        r16 = (android.text.style.MetricAffectingSpan[]) $r11;

        $i30 = lengthof r16;

        if $i30 <= 0 goto label18;

        r3 = null;

        i8 = 0;

     label12:
        $i42 = lengthof r16;

        if i8 >= $i42 goto label15;

        r4 = r16[i8];

        $z3 = r4 instanceof android.text.style.ReplacementSpan;

        if $z3 == 0 goto label13;

        r3 = (android.text.style.ReplacementSpan) r4;

        goto label14;

     label13:
        virtualinvoke r4.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>(r1);

     label14:
        i8 = i8 + 1;

        goto label12;

     label15:
        if r3 == null goto label18;

        if z1 == 0 goto label16;

        $i41 = i5;

        goto label17;

     label16:
        $i41 = i4;

     label17:
        return $i41;

     label18:
        if z0 == 0 goto label19;

        $b43 = 1;

        goto label20;

     label19:
        $b43 = 0;

     label20:
        b46 = $b43;

        if z1 == 0 goto label21;

        $b38 = 0;

        goto label22;

     label21:
        $b38 = 2;

     label22:
        b47 = $b38;

        $z2 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z2 == 0 goto label23;

        $r15 = r0.<android.text.TextLine: char[] mChars>;

        $i40 = i5 - i4;

        $i39 = virtualinvoke r1.<android.text.TextPaint: int getTextRunCursor(char[],int,int,int,int,int)>($r15, i4, $i40, b46, i3, b47);

        return $i39;

     label23:
        $r14 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i28 = r0.<android.text.TextLine: int mStart>;

        $i31 = $i28 + i4;

        $i29 = r0.<android.text.TextLine: int mStart>;

        $i32 = $i29 + i5;

        $i34 = r0.<android.text.TextLine: int mStart>;

        $i33 = $i34 + i3;

        $i37 = virtualinvoke r1.<android.text.TextPaint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>($r14, $i31, $i32, b46, $i33, b47);

        $i36 = r0.<android.text.TextLine: int mStart>;

        $i35 = $i37 - $i36;

        return $i35;
    }

    private static void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt, android.text.TextPaint)
    {
        android.graphics.Paint$FontMetricsInt r0;
        android.text.TextPaint r1;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: android.graphics.Paint$FontMetricsInt;

        r1 := @parameter1: android.text.TextPaint;

        i0 = r0.<android.graphics.Paint$FontMetricsInt: int top>;

        i1 = r0.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i2 = r0.<android.graphics.Paint$FontMetricsInt: int descent>;

        i3 = r0.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i4 = r0.<android.graphics.Paint$FontMetricsInt: int leading>;

        virtualinvoke r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r0);

        staticinvoke <android.text.TextLine: void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        return;
    }

    static void updateMetrics(android.graphics.Paint$FontMetricsInt, int, int, int, int, int)
    {
        android.graphics.Paint$FontMetricsInt r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @parameter0: android.graphics.Paint$FontMetricsInt;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $i5 = r0.<android.graphics.Paint$FontMetricsInt: int top>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, i0);

        r0.<android.graphics.Paint$FontMetricsInt: int top> = $i6;

        $i7 = r0.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i1);

        r0.<android.graphics.Paint$FontMetricsInt: int ascent> = $i8;

        $i9 = r0.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, i2);

        r0.<android.graphics.Paint$FontMetricsInt: int descent> = $i10;

        $i11 = r0.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, i3);

        r0.<android.graphics.Paint$FontMetricsInt: int bottom> = $i12;

        $i13 = r0.<android.graphics.Paint$FontMetricsInt: int leading>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i13, i4);

        r0.<android.graphics.Paint$FontMetricsInt: int leading> = $i14;

        return;
    }

    private float handleText(android.text.TextPaint, int, int, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        android.text.TextPaint r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        boolean z0, z1, $z2, z3;
        android.graphics.Canvas r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        android.graphics.Paint$FontMetricsInt r3;
        android.graphics.Paint$Style r4, r5, $r7, $r8;
        java.lang.CharSequence $r6;
        char[] $r9;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.TextPaint;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        r2 := @parameter6: android.graphics.Canvas;

        f0 := @parameter7: float;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        r3 := @parameter11: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter12: boolean;

        if r3 == null goto label01;

        staticinvoke <android.text.TextLine: void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r3, r1);

     label01:
        i7 = i1 - i0;

        if i7 != 0 goto label02;

        return 0.0F;

     label02:
        f1 = 0.0F;

        i9 = i3 - i2;

        if z1 != 0 goto label03;

        if r2 == null goto label05;

        $i23 = r1.<android.text.TextPaint: int bgColor>;

        if $i23 != 0 goto label03;

        $i22 = r1.<android.text.TextPaint: int underlineColor>;

        if $i22 != 0 goto label03;

        if z0 == 0 goto label05;

     label03:
        $z2 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z2 == 0 goto label04;

        $r9 = r0.<android.text.TextLine: char[] mChars>;

        f1 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>($r9, i0, i7, i2, i9, z0, null, 0);

        goto label05;

     label04:
        i8 = r0.<android.text.TextLine: int mStart>;

        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i12 = i8 + i0;

        $i13 = i8 + i1;

        $i10 = i8 + i2;

        $i11 = i8 + i3;

        f1 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int)>($r6, $i12, $i13, $i10, $i11, z0, null, 0);

     label05:
        if r2 == null goto label09;

        if z0 == 0 goto label06;

        f0 = f0 - f1;

     label06:
        $i14 = r1.<android.text.TextPaint: int bgColor>;

        if $i14 == 0 goto label07;

        i24 = virtualinvoke r1.<android.text.TextPaint: int getColor()>();

        r5 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        $i21 = r1.<android.text.TextPaint: int bgColor>;

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>($i21);

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r8);

        $f10 = (float) i4;

        $f11 = f0 + f1;

        $f9 = (float) i6;

        virtualinvoke r2.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, $f10, $f11, $f9, r1);

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r5);

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>(i24);

     label07:
        $i16 = r1.<android.text.TextPaint: int underlineColor>;

        if $i16 == 0 goto label08;

        $i19 = r1.<android.text.TextPaint: int baselineShift>;

        $i17 = i5 + $i19;

        $f3 = (float) $i17;

        $f5 = virtualinvoke r1.<android.text.TextPaint: float getTextSize()>();

        $f4 = 0.11111111F * $f5;

        f12 = $f3 + $f4;

        i25 = virtualinvoke r1.<android.text.TextPaint: int getColor()>();

        r4 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        z3 = virtualinvoke r1.<android.text.TextPaint: boolean isAntiAlias()>();

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r7);

        virtualinvoke r1.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $i20 = r1.<android.text.TextPaint: int underlineColor>;

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>($i20);

        $f6 = f0 + f1;

        $f7 = r1.<android.text.TextPaint: float underlineThickness>;

        $f8 = f12 + $f7;

        virtualinvoke r2.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f12, $f6, $f8, r1);

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r4);

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>(i25);

        virtualinvoke r1.<android.text.TextPaint: void setAntiAlias(boolean)>(z3);

     label08:
        $i15 = r1.<android.text.TextPaint: int baselineShift>;

        $i18 = i5 + $i15;

        specialinvoke r0.<android.text.TextLine: void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int)>(r2, r1, i0, i1, i2, i3, z0, f0, $i18);

     label09:
        if z0 == 0 goto label10;

        $f2 = neg f1;

        goto label11;

     label10:
        $f2 = f1;

     label11:
        return $f2;
    }

    private float handleReplacement(android.text.style.ReplacementSpan, android.text.TextPaint, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        android.text.style.ReplacementSpan r1;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14;
        boolean z0, z1, z2, $z3;
        android.graphics.Canvas r3;
        float f0, f1, $f2;
        android.graphics.Paint$FontMetricsInt r4;
        java.lang.CharSequence $r5, $r6;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.style.ReplacementSpan;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: android.graphics.Canvas;

        f0 := @parameter6: float;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        r4 := @parameter10: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter11: boolean;

        f1 = 0.0F;

        $i13 = r0.<android.text.TextLine: int mStart>;

        i5 = $i13 + i0;

        $i12 = r0.<android.text.TextLine: int mStart>;

        i6 = $i12 + i1;

        if z1 != 0 goto label1;

        if r3 == null goto label5;

        if z0 == 0 goto label5;

     label1:
        i8 = 0;

        i7 = 0;

        i10 = 0;

        i9 = 0;

        i11 = 0;

        if r4 == null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z2 = $z3;

        if z2 == 0 goto label4;

        i8 = r4.<android.graphics.Paint$FontMetricsInt: int top>;

        i7 = r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i10 = r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        i9 = r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i11 = r4.<android.graphics.Paint$FontMetricsInt: int leading>;

     label4:
        $r5 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i14 = virtualinvoke r1.<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>(r2, $r5, i5, i6, r4);

        f1 = (float) $i14;

        if z2 == 0 goto label5;

        staticinvoke <android.text.TextLine: void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int)>(r4, i8, i7, i10, i9, i11);

     label5:
        if r3 == null goto label7;

        if z0 == 0 goto label6;

        f0 = f0 - f1;

     label6:
        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>(r3, $r6, i5, i6, f0, i2, i3, i4, r2);

     label7:
        if z0 == 0 goto label8;

        $f2 = neg f1;

        goto label9;

     label8:
        $f2 = f1;

     label9:
        return $f2;
    }

    private float handleRun(int, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.graphics.Canvas r1;
        float f0, $f1, $f2, $f3, $f4, f5;
        android.graphics.Paint$FontMetricsInt r2;
        android.text.TextPaint r3, r4, $r13, $r18, $r33, $r34, r35;
        android.text.style.ReplacementSpan r5;
        android.text.style.MetricAffectingSpan r6;
        android.text.style.CharacterStyle r7;
        android.text.Spanned $r8, $r9, $r12;
        android.text.SpanSet $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r21, $r24, $r26, $r27, $r30;
        int[] $r20, $r25, $r28, $r32;
        java.lang.Object[] $r22, $r29;
        android.text.style.CharacterStyle[] $r23;
        android.text.style.MetricAffectingSpan[] $r31;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.graphics.Canvas;

        f0 := @parameter5: float;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        r2 := @parameter9: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter10: boolean;

        if i0 != i1 goto label02;

        r3 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r34 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r3.<android.text.TextPaint: void set(android.text.TextPaint)>($r34);

        if r2 == null goto label01;

        staticinvoke <android.text.TextLine: void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r2, r3);

     label01:
        return 0.0F;

     label02:
        $r8 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r8 != null goto label06;

        r35 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r33 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r35.<android.text.TextPaint: void set(android.text.TextPaint)>($r33);

        i6 = i1;

        if z1 != 0 goto label03;

        if i6 >= i1 goto label04;

     label03:
        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        $f4 = specialinvoke r0.<android.text.TextLine: float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r35, i0, i6, i0, i2, z0, r1, f0, i3, i4, i5, r2, $z5);

        return $f4;

     label06:
        $r10 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r9 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i11 = r0.<android.text.TextLine: int mStart>;

        $i14 = $i11 + i0;

        $i13 = r0.<android.text.TextLine: int mStart>;

        $i12 = $i13 + i2;

        virtualinvoke $r10.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r9, $i14, $i12);

        $r11 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r12 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i15 = r0.<android.text.TextLine: int mStart>;

        $i18 = $i15 + i0;

        $i17 = r0.<android.text.TextLine: int mStart>;

        $i16 = $i17 + i2;

        virtualinvoke $r11.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r12, $i18, $i16);

        f5 = f0;

        i45 = i0;

     label07:
        if i45 >= i1 goto label26;

        r4 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r13 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r4.<android.text.TextPaint: void set(android.text.TextPaint)>($r13);

        $r14 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $i21 = r0.<android.text.TextLine: int mStart>;

        $i24 = $i21 + i45;

        $i19 = r0.<android.text.TextLine: int mStart>;

        $i20 = $i19 + i2;

        $i22 = virtualinvoke $r14.<android.text.SpanSet: int getNextTransition(int,int)>($i24, $i20);

        $i23 = r0.<android.text.TextLine: int mStart>;

        i7 = $i22 - $i23;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i1);

        r5 = null;

        i9 = 0;

     label08:
        $r15 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $i25 = $r15.<android.text.SpanSet: int numberOfSpans>;

        if i9 >= $i25 goto label12;

        $r27 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r28 = $r27.<android.text.SpanSet: int[] spanStarts>;

        $i41 = $r28[i9];

        $i39 = r0.<android.text.TextLine: int mStart>;

        $i40 = $i39 + i8;

        if $i41 >= $i40 goto label11;

        $r26 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r32 = $r26.<android.text.SpanSet: int[] spanEnds>;

        $i43 = $r32[i9];

        $i42 = r0.<android.text.TextLine: int mStart>;

        $i44 = $i42 + i45;

        if $i43 > $i44 goto label09;

        goto label11;

     label09:
        $r30 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r29 = $r30.<android.text.SpanSet: java.lang.Object[] spans>;

        $r31 = (android.text.style.MetricAffectingSpan[]) $r29;

        r6 = $r31[i9];

        $z4 = r6 instanceof android.text.style.ReplacementSpan;

        if $z4 == 0 goto label10;

        r5 = (android.text.style.ReplacementSpan) r6;

        goto label11;

     label10:
        virtualinvoke r6.<android.text.style.MetricAffectingSpan: void updateDrawState(android.text.TextPaint)>(r4);

     label11:
        i9 = i9 + 1;

        goto label08;

     label12:
        if r5 == null goto label16;

        if z1 != 0 goto label13;

        if i8 >= i1 goto label14;

     label13:
        $z3 = 1;

        goto label15;

     label14:
        $z3 = 0;

     label15:
        $f3 = specialinvoke r0.<android.text.TextLine: float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r5, r4, i45, i8, z0, r1, f0, i3, i4, i5, r2, $z3);

        f0 = f0 + $f3;

        goto label25;

     label16:
        i46 = i45;

     label17:
        if i46 >= i8 goto label25;

        $r16 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $i26 = r0.<android.text.TextLine: int mStart>;

        $i27 = $i26 + i46;

        $i29 = r0.<android.text.TextLine: int mStart>;

        $i28 = $i29 + i8;

        $i31 = virtualinvoke $r16.<android.text.SpanSet: int getNextTransition(int,int)>($i27, $i28);

        $i30 = r0.<android.text.TextLine: int mStart>;

        i47 = $i31 - $i30;

        $r18 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r4.<android.text.TextPaint: void set(android.text.TextPaint)>($r18);

        i10 = 0;

     label18:
        $r17 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $i32 = $r17.<android.text.SpanSet: int numberOfSpans>;

        if i10 >= $i32 goto label21;

        $r19 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r20 = $r19.<android.text.SpanSet: int[] spanStarts>;

        $i33 = $r20[i10];

        $i35 = r0.<android.text.TextLine: int mStart>;

        $i34 = $i35 + i47;

        if $i33 >= $i34 goto label20;

        $r24 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r25 = $r24.<android.text.SpanSet: int[] spanEnds>;

        $i36 = $r25[i10];

        $i37 = r0.<android.text.TextLine: int mStart>;

        $i38 = $i37 + i46;

        if $i36 > $i38 goto label19;

        goto label20;

     label19:
        $r21 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r22 = $r21.<android.text.SpanSet: java.lang.Object[] spans>;

        $r23 = (android.text.style.CharacterStyle[]) $r22;

        r7 = $r23[i10];

        virtualinvoke r7.<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>(r4);

     label20:
        i10 = i10 + 1;

        goto label18;

     label21:
        if z1 != 0 goto label22;

        if i47 >= i1 goto label23;

     label22:
        $z2 = 1;

        goto label24;

     label23:
        $z2 = 0;

     label24:
        $f2 = specialinvoke r0.<android.text.TextLine: float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r4, i46, i47, i45, i7, z0, r1, f0, i3, i4, i5, r2, $z2);

        f0 = f0 + $f2;

        i46 = i47;

        goto label17;

     label25:
        i45 = i7;

        goto label07;

     label26:
        $f1 = f0 - f5;

        return $f1;
    }

    private void drawTextRun(android.graphics.Canvas, android.text.TextPaint, int, int, int, int, boolean, float, int)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, i11;
        boolean z0, $z1;
        float f0, $f1, $f2;
        java.lang.CharSequence $r3;
        char[] $r4;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        f0 := @parameter7: float;

        i4 := @parameter8: int;

        $z1 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z1 == 0 goto label1;

        i5 = i1 - i0;

        i6 = i3 - i2;

        $r4 = r0.<android.text.TextLine: char[] mChars>;

        $f2 = (float) i4;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>($r4, i0, i5, i2, i6, f0, $f2, z0, r2);

        goto label2;

     label1:
        i11 = r0.<android.text.TextLine: int mStart>;

        $r3 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i9 = i11 + i0;

        $i10 = i11 + i1;

        $i8 = i11 + i2;

        $i7 = i11 + i3;

        $f1 = (float) i4;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>($r3, $i9, $i10, $i8, $i7, f0, $f1, z0, r2);

     label2:
        return;
    }

    float ascent(int)
    {
        android.text.TextLine r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        android.text.style.MetricAffectingSpan[] r1, r3;
        android.text.TextPaint r2, $r8, $r9, $r10;
        android.text.style.MetricAffectingSpan r4;
        android.text.Spanned $r5, $r6;
        java.lang.Object[] $r7;
        float $f0, $f1, $f2;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        $r5 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r5 != null goto label1;

        $r10 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        $f2 = virtualinvoke $r10.<android.text.TextPaint: float ascent()>();

        return $f2;

     label1:
        $i3 = r0.<android.text.TextLine: int mStart>;

        i6 = i0 + $i3;

        $r6 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i4 = i6 + 1;

        $r7 = interfaceinvoke $r6.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i6, $i4, class "android/text/style/MetricAffectingSpan");

        r1 = (android.text.style.MetricAffectingSpan[]) $r7;

        $i5 = lengthof r1;

        if $i5 != 0 goto label2;

        $r9 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        $f1 = virtualinvoke $r9.<android.text.TextPaint: float ascent()>();

        return $f1;

     label2:
        r2 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r8 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r2.<android.text.TextPaint: void set(android.text.TextPaint)>($r8);

        r3 = r1;

        i1 = lengthof r3;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r4 = r3[i2];

        virtualinvoke r4.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>(r2);

        i2 = i2 + 1;

        goto label3;

     label4:
        $f0 = virtualinvoke r2.<android.text.TextPaint: float ascent()>();

        return $f0;
    }

    float nextTab(float)
    {
        android.text.TextLine r0;
        float f0, $f1, $f2;
        android.text.Layout$TabStops $r1, $r2;

        r0 := @this: android.text.TextLine;

        f0 := @parameter0: float;

        $r1 = r0.<android.text.TextLine: android.text.Layout$TabStops mTabs>;

        if $r1 == null goto label1;

        $r2 = r0.<android.text.TextLine: android.text.Layout$TabStops mTabs>;

        $f2 = virtualinvoke $r2.<android.text.Layout$TabStops: float nextTab(float)>(f0);

        return $f2;

     label1:
        $f1 = staticinvoke <android.text.Layout$TabStops: float nextDefaultStop(float,int)>(f0, 20);

        return $f1;
    }

    static void <clinit>()
    {
        android.text.TextLine[] $r0;

        <android.text.TextLine: int TAB_INCREMENT> = 20;

        <android.text.TextLine: boolean DEBUG> = 0;

        $r0 = newarray (android.text.TextLine)[3];

        <android.text.TextLine: android.text.TextLine[] sCached> = $r0;

        return;
    }
}
