public class android.view.animation.AnticipateOvershootInterpolator extends java.lang.Object implements android.view.animation.Interpolator, com.android.internal.view.animation.NativeInterpolatorFactory
{
    private final float mTension;

    public void <init>()
    {
        android.view.animation.AnticipateOvershootInterpolator r0;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension> = 3.0F;

        return;
    }

    public void <init>(float)
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        float f0, $f1;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        f0 := @parameter0: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f1 = f0 * 1.5F;

        r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension> = $f1;

        return;
    }

    public void <init>(float, float)
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        float f0, f1, $f2;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f2 = f0 * f1;

        r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension> = $f2;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Resources $r3;
        android.content.res.Resources$Theme $r4;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke r0.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>($r3, $r4, r2);

        return;
    }

    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet)
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        int[] $r5, $r6;
        float $f0, $f1, $f2;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.res.Resources$Theme;

        r3 := @parameter2: android.util.AttributeSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 == null goto label1;

        $r6 = <com.android.internal.R$styleable: int[] AnticipateOvershootInterpolator>;

        r4 = virtualinvoke r2.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r6, 0, 0);

        goto label2;

     label1:
        $r5 = <com.android.internal.R$styleable: int[] AnticipateOvershootInterpolator>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r5);

     label2:
        $f0 = virtualinvoke r4.<android.content.res.TypedArray: float getFloat(int,float)>(0, 2.0F);

        $f1 = virtualinvoke r4.<android.content.res.TypedArray: float getFloat(int,float)>(1, 1.5F);

        $f2 = $f0 * $f1;

        r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension> = $f2;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private static float a(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5, $f6;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f5 = f0 * f0;

        $f2 = f1 + 1.0F;

        $f3 = $f2 * f0;

        $f4 = $f3 - f1;

        $f6 = $f5 * $f4;

        return $f6;
    }

    private static float o(float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5, $f6;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f5 = f0 * f0;

        $f2 = f1 + 1.0F;

        $f3 = $f2 * f0;

        $f4 = $f3 + f1;

        $f6 = $f5 * $f4;

        return $f6;
    }

    public float getInterpolation(float)
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        byte $b0;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.5F;

        if $b0 >= 0 goto label1;

        $f8 = f0 * 2.0F;

        $f7 = r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension>;

        $f9 = staticinvoke <android.view.animation.AnticipateOvershootInterpolator: float a(float,float)>($f8, $f7);

        $f10 = 0.5F * $f9;

        return $f10;

     label1:
        $f1 = f0 * 2.0F;

        $f3 = $f1 - 2.0F;

        $f2 = r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension>;

        $f4 = staticinvoke <android.view.animation.AnticipateOvershootInterpolator: float o(float,float)>($f3, $f2);

        $f5 = $f4 + 2.0F;

        $f6 = 0.5F * $f5;

        return $f6;
    }

    public long createNativeInterpolator()
    {
        android.view.animation.AnticipateOvershootInterpolator r0;
        float $f0;
        long $l0;

        r0 := @this: android.view.animation.AnticipateOvershootInterpolator;

        $f0 = r0.<android.view.animation.AnticipateOvershootInterpolator: float mTension>;

        $l0 = staticinvoke <com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createAnticipateOvershootInterpolator(float)>($f0);

        return $l0;
    }
}
