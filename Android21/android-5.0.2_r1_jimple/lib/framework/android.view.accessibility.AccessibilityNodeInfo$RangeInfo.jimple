public final class android.view.accessibility.AccessibilityNodeInfo$RangeInfo extends java.lang.Object
{
    private static final int MAX_POOL_SIZE;
    public static final int RANGE_TYPE_INT;
    public static final int RANGE_TYPE_FLOAT;
    public static final int RANGE_TYPE_PERCENT;
    private static final android.util.Pools$SynchronizedPool sPool;
    private int mType;
    private float mMin;
    private float mMax;
    private float mCurrent;

    public static android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0, $r1;
        float $f0, $f1, $f2;
        int $i0;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int mType>;

        $f2 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMin>;

        $f1 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMax>;

        $f0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mCurrent>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float)>($i0, $f2, $f1, $f0);

        return $r1;
    }

    public static android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int, float, float, float)
    {
        int i0;
        float f0, f1, f2;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0, $r3;
        android.util.Pools$SynchronizedPool $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.util.Pools$SynchronizedPool sPool>;

        $r2 = virtualinvoke $r1.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r0 = (android.view.accessibility.AccessibilityNodeInfo$RangeInfo) $r2;

        if r0 == null goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = new android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void <init>(int,float,float,float)>(i0, f0, f1, f2);

     label2:
        return $r3;
    }

    private void <init>(int, float, float, float)
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        int i0;
        float f0, f1, f2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int mType> = i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMin> = f0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMax> = f1;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mCurrent> = f2;

        return;
    }

    public int getType()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int mType>;

        return $i0;
    }

    public float getMin()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        float $f0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $f0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMin>;

        return $f0;
    }

    public float getMax()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        float $f0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $f0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMax>;

        return $f0;
    }

    public float getCurrent()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        float $f0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        $f0 = r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mCurrent>;

        return $f0;
    }

    void recycle()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void clear()>();

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    private void clear()
    {
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int mType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMin> = 0.0F;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mMax> = 0.0F;

        r0.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float mCurrent> = 0.0F;

        return;
    }

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int RANGE_TYPE_PERCENT> = 2;

        <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int RANGE_TYPE_FLOAT> = 1;

        <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int RANGE_TYPE_INT> = 0;

        <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int MAX_POOL_SIZE> = 10;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(10);

        <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }
}
