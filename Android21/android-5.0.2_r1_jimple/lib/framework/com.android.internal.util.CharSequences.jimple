public class com.android.internal.util.CharSequences extends java.lang.Object
{

    public void <init>()
    {
        com.android.internal.util.CharSequences r0;

        r0 := @this: com.android.internal.util.CharSequences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.CharSequence forAsciiBytes(byte[])
    {
        byte[] r0;
        com.android.internal.util.CharSequences$1 $r1;

        r0 := @parameter0: byte[];

        $r1 = new com.android.internal.util.CharSequences$1;

        specialinvoke $r1.<com.android.internal.util.CharSequences$1: void <init>(byte[])>(r0);

        return $r1;
    }

    public static java.lang.CharSequence forAsciiBytes(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2;
        com.android.internal.util.CharSequences$2 $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = lengthof r0;

        staticinvoke <com.android.internal.util.CharSequences: void validate(int,int,int)>(i0, i1, $i2);

        $r1 = new com.android.internal.util.CharSequences$2;

        specialinvoke $r1.<com.android.internal.util.CharSequences$2: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    static void validate(int, int, int)
    {
        int i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r0, $r1, $r2, $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        if i1 >= 0 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        if i1 <= i2 goto label3;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label3:
        if i0 <= i1 goto label4;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label4:
        return;
    }

    public static boolean equals(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        int i0, i1, $i2, $i3;
        char $c4, $c5;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i2 == $i3 goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1);

        $c5 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i1);

        if $c4 == $c5 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static int compareToIgnoreCase(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.CharSequence r0, r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i10, $i12, $i14;
        char $c8, $c9, $c11, $c13;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i2 = 0;

        i3 = 0;

        if i0 >= i1 goto label1;

        $i14 = i0;

        goto label2;

     label1:
        $i14 = i1;

     label2:
        i5 = $i14;

     label3:
        if i2 >= i5 goto label4;

        $i7 = i2;

        i2 = i2 + 1;

        $c8 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i7);

        $c9 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c8);

        $i10 = i3;

        i3 = i3 + 1;

        $c11 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i10);

        $c13 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c11);

        $i12 = $c9 - $c13;

        i4 = $i12;

        if $i12 == 0 goto label3;

        return i4;

     label4:
        $i6 = i0 - i1;

        return $i6;
    }
}
