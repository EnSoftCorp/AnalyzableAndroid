public class android.telecom.TelecomManager extends java.lang.Object
{
    public static final java.lang.String ACTION_INCOMING_CALL;
    public static final java.lang.String ACTION_NEW_UNKNOWN_CALL;
    public static final java.lang.String ACTION_CONNECTION_SERVICE_CONFIGURE;
    public static final java.lang.String ACTION_SHOW_CALL_SETTINGS;
    public static final java.lang.String ACTION_CHANGE_PHONE_ACCOUNTS;
    public static final java.lang.String EXTRA_START_CALL_WITH_SPEAKERPHONE;
    public static final java.lang.String EXTRA_START_CALL_WITH_VIDEO_STATE;
    public static final java.lang.String EXTRA_PHONE_ACCOUNT_HANDLE;
    public static final java.lang.String EXTRA_INCOMING_CALL_EXTRAS;
    public static final java.lang.String EXTRA_OUTGOING_CALL_EXTRAS;
    public static final java.lang.String EXTRA_UNKNOWN_CALL_HANDLE;
    public static final java.lang.String EXTRA_CALL_DISCONNECT_CAUSE;
    public static final java.lang.String EXTRA_CALL_DISCONNECT_MESSAGE;
    public static final java.lang.String EXTRA_CONNECTION_SERVICE;
    public static final java.lang.String GATEWAY_PROVIDER_PACKAGE;
    public static final java.lang.String GATEWAY_ORIGINAL_ADDRESS;
    public static final java.lang.String EXTRA_CALL_BACK_NUMBER;
    public static final char DTMF_CHARACTER_PAUSE;
    public static final char DTMF_CHARACTER_WAIT;
    public static final int TTY_MODE_OFF;
    public static final int TTY_MODE_FULL;
    public static final int TTY_MODE_HCO;
    public static final int TTY_MODE_VCO;
    public static final java.lang.String ACTION_CURRENT_TTY_MODE_CHANGED;
    public static final java.lang.String EXTRA_CURRENT_TTY_MODE;
    public static final java.lang.String ACTION_TTY_PREFERRED_MODE_CHANGED;
    public static final java.lang.String EXTRA_TTY_PREFERRED_MODE;
    public static final int PRESENTATION_ALLOWED;
    public static final int PRESENTATION_RESTRICTED;
    public static final int PRESENTATION_UNKNOWN;
    public static final int PRESENTATION_PAYPHONE;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;

    public static android.telecom.TelecomManager 'from'(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object $r1;
        android.telecom.TelecomManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("telecom");

        $r2 = (android.telecom.TelecomManager) $r1;

        return $r2;
    }

    public void <init>(android.content.Context)
    {
        android.telecom.TelecomManager r0;
        android.content.Context r1, r2;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        if r2 == null goto label1;

        r0.<android.telecom.TelecomManager: android.content.Context mContext> = r2;

        goto label2;

     label1:
        r0.<android.telecom.TelecomManager: android.content.Context mContext> = r1;

     label2:
        return;
    }

    public android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;
        android.telecom.PhoneAccountHandle $r4;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getDefaultOutgoingPhoneAccount", r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.telecom.PhoneAccountHandle $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>();

     label2:
        return $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getUserSelectedOutgoingPhoneAccount", r1);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#setUserSelectedOutgoingPhoneAccount");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.telecom.PhoneAccountHandle getSimCallManager()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.telecom.PhoneAccountHandle $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getSimCallManager()>();

     label2:
        return $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#getSimCallManager");

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void setSimCallManager(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: void setSimCallManager(android.telecom.PhoneAccountHandle)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#setSimCallManager");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getSimCallManagers()
    {
        android.telecom.TelecomManager r0;
        boolean $z0;
        java.util.ArrayList $r2;
        com.android.internal.telecom.ITelecomService $r3;
        java.util.List $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: java.util.List getSimCallManagers()>();

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TelecomManager", "Error calling ITelecomService#getSimCallManagers");

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccountHandle getConnectionManager()
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle $r1;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = virtualinvoke r0.<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>();

        return $r1;
    }

    public java.util.List getPhoneAccountsSupportingScheme(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r6;
        boolean $z0;
        java.util.ArrayList $r3;
        com.android.internal.telecom.ITelecomService $r4;
        java.util.List $r5;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r4 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r5 = interfaceinvoke $r4.<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)>(r1);

     label2:
        return $r5;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccountsSupportingScheme", r2);

     label5:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getCallCapablePhoneAccounts()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        java.util.ArrayList $r2;
        com.android.internal.telecom.ITelecomService $r3;
        java.util.List $r4;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: java.util.List getCallCapablePhoneAccounts()>();

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getCallCapablePhoneAccounts", r1);

     label5:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean hasMultipleCallCapableAccounts()
    {
        android.telecom.TelecomManager r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = virtualinvoke r0.<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.List getPhoneAccountsForPackage()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r6;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        java.util.List $r5;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsForPackage(java.lang.String)>($r4);

     label2:
        return $r5;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccountsForPackage", r1);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        android.os.RemoteException r2, $r5;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;
        android.telecom.PhoneAccount $r4;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>(r1);

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getPhoneAccount", r2);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getAllPhoneAccountsCount()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        int $i0;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getAllPhoneAccountsCount()>();

     label2:
        return $i0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccountsCount", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getAllPhoneAccounts()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        java.util.List $r2, $r4;
        com.android.internal.telecom.ITelecomService $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccounts()>();

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccounts", r1);

     label5:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public java.util.List getAllPhoneAccountHandles()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        java.util.List $r2, $r4;
        com.android.internal.telecom.ITelecomService $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r4 = interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccountHandles()>();

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#getAllPhoneAccountHandles", r1);

     label5:
        $r2 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void registerPhoneAccount(android.telecom.PhoneAccount)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccount r1;
        android.os.RemoteException r2, $r4;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccount;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: void registerPhoneAccount(android.telecom.PhoneAccount)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#registerPhoneAccount", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        android.os.RemoteException r2, $r4;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r3;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r3.<com.android.internal.telecom.ITelecomService: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#unregisterPhoneAccount", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearAccounts()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.Context $r3;
        java.lang.String $r4;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = r0.<android.telecom.TelecomManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void clearAccounts(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#clearAccounts", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.ComponentName getDefaultPhoneApp()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r4;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        android.content.ComponentName $r3;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $r3 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: android.content.ComponentName getDefaultPhoneApp()>();

     label2:
        return $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the default phone app.", r1);

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isInCall()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isInCall()>();

     label2:
        return $z1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling isInCall().", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getCallState()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        int $i0;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getCallState()>();

     label2:
        return $i0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException calling getCallState().", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isRinging()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isRinging()>();

     label2:
        return $z1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get ringing state of phone app.", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean endCall()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean endCall()>();

     label2:
        return $z1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#endCall", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void acceptRingingCall()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void acceptRingingCall()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#acceptRingingCall", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void silenceRinger()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: void silenceRinger()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#silenceRinger", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isTtySupported()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0, $z1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $z1 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: boolean isTtySupported()>();

     label2:
        return $z1;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get TTY supported state.", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public int getCurrentTtyMode()
    {
        android.telecom.TelecomManager r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r2;
        int $i0;

        r0 := @this: android.telecom.TelecomManager;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label3;

        $r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        $i0 = interfaceinvoke $r2.<com.android.internal.telecom.ITelecomService: int getCurrentTtyMode()>();

     label2:
        return $i0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "RemoteException attempting to get the current TTY mode.", r1);

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void addNewIncomingCall(android.telecom.PhoneAccountHandle, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        android.os.Bundle r2, $r5;
        android.os.RemoteException r3, $r6;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.os.Bundle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label4;

        $r4 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r2 != null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        goto label3;

     label2:
        $r5 = r2;

     label3:
        interfaceinvoke $r4.<com.android.internal.telecom.ITelecomService: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>(r1, $r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException adding a new incoming call: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r10, r3);

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public void addNewUnknownCall(android.telecom.PhoneAccountHandle, android.os.Bundle)
    {
        android.telecom.TelecomManager r0;
        android.telecom.PhoneAccountHandle r1;
        android.os.Bundle r2, $r5;
        android.os.RemoteException r3, $r6;
        boolean $z0;
        com.android.internal.telecom.ITelecomService $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: android.telecom.PhoneAccountHandle;

        r2 := @parameter1: android.os.Bundle;

     label1:
        $z0 = specialinvoke r0.<android.telecom.TelecomManager: boolean isServiceConnected()>();

        if $z0 == 0 goto label4;

        $r4 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r2 != null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        goto label3;

     label2:
        $r5 = r2;

     label3:
        interfaceinvoke $r4.<com.android.internal.telecom.ITelecomService: void addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>(r1, $r5);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException adding a new unknown call: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", $r10, r3);

     label6:
        return;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public boolean handleMmi(java.lang.String)
    {
        android.telecom.TelecomManager r0;
        java.lang.String r1;
        com.android.internal.telecom.ITelecomService r2;
        android.os.RemoteException r3, $r4;
        boolean $z0;

        r0 := @this: android.telecom.TelecomManager;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r2 == null goto label4;

     label1:
        $z0 = interfaceinvoke r2.<com.android.internal.telecom.ITelecomService: boolean handlePinMmi(java.lang.String)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#handlePinMmi", r3);

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void cancelMissedCallsNotification()
    {
        android.telecom.TelecomManager r0;
        com.android.internal.telecom.ITelecomService r1;
        android.os.RemoteException r2, $r3;

        r0 := @this: android.telecom.TelecomManager;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

     label1:
        interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: void cancelMissedCallsNotification()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#cancelMissedCallsNotification", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showInCallScreen(boolean)
    {
        android.telecom.TelecomManager r0;
        boolean z0;
        com.android.internal.telecom.ITelecomService r1;
        android.os.RemoteException r2, $r3;

        r0 := @this: android.telecom.TelecomManager;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if r1 == null goto label4;

     label1:
        interfaceinvoke r1.<com.android.internal.telecom.ITelecomService: void showInCallScreen(boolean)>(z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TelecomManager", "Error calling ITelecomService#showCallScreen", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.internal.telecom.ITelecomService getTelecomService()
    {
        android.telecom.TelecomManager r0;
        android.os.IBinder $r1;
        com.android.internal.telecom.ITelecomService $r2;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("telecom");

        $r2 = staticinvoke <com.android.internal.telecom.ITelecomService$Stub: com.android.internal.telecom.ITelecomService asInterface(android.os.IBinder)>($r1);

        return $r2;
    }

    private boolean isServiceConnected()
    {
        android.telecom.TelecomManager r0;
        boolean z0, $z1;
        com.android.internal.telecom.ITelecomService $r1;

        r0 := @this: android.telecom.TelecomManager;

        $r1 = specialinvoke r0.<android.telecom.TelecomManager: com.android.internal.telecom.ITelecomService getTelecomService()>();

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 != 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TelecomManager", "Telecom Service not found.");

     label3:
        return z0;
    }

    public static void <clinit>()
    {
        <android.telecom.TelecomManager: java.lang.String TAG> = "TelecomManager";

        <android.telecom.TelecomManager: int PRESENTATION_PAYPHONE> = 4;

        <android.telecom.TelecomManager: int PRESENTATION_UNKNOWN> = 3;

        <android.telecom.TelecomManager: int PRESENTATION_RESTRICTED> = 2;

        <android.telecom.TelecomManager: int PRESENTATION_ALLOWED> = 1;

        <android.telecom.TelecomManager: java.lang.String EXTRA_TTY_PREFERRED_MODE> = "android.telecom.intent.extra.TTY_PREFERRED";

        <android.telecom.TelecomManager: java.lang.String ACTION_TTY_PREFERRED_MODE_CHANGED> = "android.telecom.action.TTY_PREFERRED_MODE_CHANGED";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CURRENT_TTY_MODE> = "android.telecom.intent.extra.CURRENT_TTY_MODE";

        <android.telecom.TelecomManager: java.lang.String ACTION_CURRENT_TTY_MODE_CHANGED> = "android.telecom.action.CURRENT_TTY_MODE_CHANGED";

        <android.telecom.TelecomManager: int TTY_MODE_VCO> = 3;

        <android.telecom.TelecomManager: int TTY_MODE_HCO> = 2;

        <android.telecom.TelecomManager: int TTY_MODE_FULL> = 1;

        <android.telecom.TelecomManager: int TTY_MODE_OFF> = 0;

        <android.telecom.TelecomManager: char DTMF_CHARACTER_WAIT> = 59;

        <android.telecom.TelecomManager: char DTMF_CHARACTER_PAUSE> = 44;

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_BACK_NUMBER> = "android.telecom.extra.CALL_BACK_NUMBER";

        <android.telecom.TelecomManager: java.lang.String GATEWAY_ORIGINAL_ADDRESS> = "android.telecom.extra.GATEWAY_ORIGINAL_ADDRESS";

        <android.telecom.TelecomManager: java.lang.String GATEWAY_PROVIDER_PACKAGE> = "android.telecom.extra.GATEWAY_PROVIDER_PACKAGE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CONNECTION_SERVICE> = "android.telecom.extra.CONNECTION_SERVICE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_DISCONNECT_MESSAGE> = "android.telecom.extra.CALL_DISCONNECT_MESSAGE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_CALL_DISCONNECT_CAUSE> = "android.telecom.extra.CALL_DISCONNECT_CAUSE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_UNKNOWN_CALL_HANDLE> = "android.telecom.extra.UNKNOWN_CALL_HANDLE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_OUTGOING_CALL_EXTRAS> = "android.telecom.extra.OUTGOING_CALL_EXTRAS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_INCOMING_CALL_EXTRAS> = "android.telecom.extra.INCOMING_CALL_EXTRAS";

        <android.telecom.TelecomManager: java.lang.String EXTRA_PHONE_ACCOUNT_HANDLE> = "android.telecom.extra.PHONE_ACCOUNT_HANDLE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_START_CALL_WITH_VIDEO_STATE> = "android.telecom.extra.START_CALL_WITH_VIDEO_STATE";

        <android.telecom.TelecomManager: java.lang.String EXTRA_START_CALL_WITH_SPEAKERPHONE> = "android.telecom.extra.START_CALL_WITH_SPEAKERPHONE";

        <android.telecom.TelecomManager: java.lang.String ACTION_CHANGE_PHONE_ACCOUNTS> = "android.telecom.action.CHANGE_PHONE_ACCOUNTS";

        <android.telecom.TelecomManager: java.lang.String ACTION_SHOW_CALL_SETTINGS> = "android.telecom.action.SHOW_CALL_SETTINGS";

        <android.telecom.TelecomManager: java.lang.String ACTION_CONNECTION_SERVICE_CONFIGURE> = "android.telecom.action.CONNECTION_SERVICE_CONFIGURE";

        <android.telecom.TelecomManager: java.lang.String ACTION_NEW_UNKNOWN_CALL> = "android.telecom.action.NEW_UNKNOWN_CALL";

        <android.telecom.TelecomManager: java.lang.String ACTION_INCOMING_CALL> = "android.telecom.action.INCOMING_CALL";

        return;
    }
}
