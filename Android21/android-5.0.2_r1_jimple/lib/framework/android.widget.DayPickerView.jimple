class android.widget.DayPickerView extends android.widget.ListView implements android.widget.AbsListView$OnScrollListener, android.widget.OnDateChangedListener
{
    private static final java.lang.String TAG;
    private static final int GOTO_SCROLL_DURATION;
    private static final int SCROLL_CHANGE_DELAY;
    private static int LIST_TOP_OFFSET;
    private java.text.SimpleDateFormat mYearFormat;
    private float mFriction;
    private java.util.Calendar mSelectedDay;
    private android.widget.SimpleMonthAdapter mAdapter;
    private java.util.Calendar mTempDay;
    private int mCurrentMonthDisplayed;
    private int mPreviousScrollState;
    private int mCurrentScrollState;
    private android.widget.DatePickerController mController;
    private boolean mPerformingScroll;
    private android.widget.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable;

    public void <init>(android.content.Context, android.widget.DatePickerController)
    {
        android.widget.DayPickerView r0;
        android.content.Context r1;
        android.widget.DatePickerController r2;
        java.text.SimpleDateFormat $r3;
        java.util.Locale $r4;
        java.util.Calendar $r5, $r6;
        android.widget.DayPickerView$ScrollStateRunnable $r7;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.widget.DatePickerController;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context)>(r1);

        $r3 = new java.text.SimpleDateFormat;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", $r4);

        r0.<android.widget.DayPickerView: java.text.SimpleDateFormat mYearFormat> = $r3;

        r0.<android.widget.DayPickerView: float mFriction> = 1.0F;

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: java.util.Calendar mSelectedDay> = $r5;

        $r6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<android.widget.DayPickerView: java.util.Calendar mTempDay> = $r6;

        r0.<android.widget.DayPickerView: int mPreviousScrollState> = 0;

        r0.<android.widget.DayPickerView: int mCurrentScrollState> = 0;

        $r7 = new android.widget.DayPickerView$ScrollStateRunnable;

        specialinvoke $r7.<android.widget.DayPickerView$ScrollStateRunnable: void <init>(android.widget.DayPickerView,android.view.View)>(r0, r0);

        r0.<android.widget.DayPickerView: android.widget.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable> = $r7;

        virtualinvoke r0.<android.widget.DayPickerView: void init()>();

        virtualinvoke r0.<android.widget.DayPickerView: void setController(android.widget.DatePickerController)>(r2);

        return;
    }

    public void setController(android.widget.DatePickerController)
    {
        android.widget.DayPickerView r0;
        android.widget.DatePickerController r1, $r2, $r3, $r5;
        android.widget.SimpleMonthAdapter $r4;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.widget.DatePickerController;

        $r2 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        if $r2 == null goto label1;

        $r5 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        interfaceinvoke $r5.<android.widget.DatePickerController: void unregisterOnDateChangedListener(android.widget.OnDateChangedListener)>(r0);

     label1:
        r0.<android.widget.DayPickerView: android.widget.DatePickerController mController> = r1;

        $r3 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        interfaceinvoke $r3.<android.widget.DatePickerController: void registerOnDateChangedListener(android.widget.OnDateChangedListener)>(r0);

        virtualinvoke r0.<android.widget.DayPickerView: void setUpAdapter()>();

        $r4 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        virtualinvoke r0.<android.widget.DayPickerView: void setAdapter(android.widget.ListAdapter)>($r4);

        virtualinvoke r0.<android.widget.DayPickerView: void onDateChanged()>();

        return;
    }

    public void init()
    {
        android.widget.DayPickerView r0;
        android.widget.AbsListView$LayoutParams $r1;

        r0 := @this: android.widget.DayPickerView;

        $r1 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r1.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r0.<android.widget.DayPickerView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        virtualinvoke r0.<android.widget.DayPickerView: void setDrawSelectorOnTop(boolean)>(0);

        virtualinvoke r0.<android.widget.DayPickerView: void setUpListView()>();

        return;
    }

    public void onChange()
    {
        android.widget.DayPickerView r0;
        android.widget.SimpleMonthAdapter $r1;

        r0 := @this: android.widget.DayPickerView;

        virtualinvoke r0.<android.widget.DayPickerView: void setUpAdapter()>();

        $r1 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        virtualinvoke r0.<android.widget.DayPickerView: void setAdapter(android.widget.ListAdapter)>($r1);

        return;
    }

    protected void setUpAdapter()
    {
        android.widget.DayPickerView r0;
        android.widget.SimpleMonthAdapter $r1, $r3, $r4, $r5, $r6;
        java.util.Calendar $r2;
        android.content.Context $r7;
        android.widget.DatePickerController $r8;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        if $r1 != null goto label1;

        $r6 = new android.widget.SimpleMonthAdapter;

        $r7 = virtualinvoke r0.<android.widget.DayPickerView: android.content.Context getContext()>();

        $r8 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        specialinvoke $r6.<android.widget.SimpleMonthAdapter: void <init>(android.content.Context,android.widget.DatePickerController)>($r7, $r8);

        r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter> = $r6;

        goto label2;

     label1:
        $r3 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        $r2 = r0.<android.widget.DayPickerView: java.util.Calendar mSelectedDay>;

        virtualinvoke $r3.<android.widget.SimpleMonthAdapter: void setSelectedDay(java.util.Calendar)>($r2);

        $r4 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        virtualinvoke $r4.<android.widget.SimpleMonthAdapter: void notifyDataSetChanged()>();

     label2:
        $r5 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        virtualinvoke $r5.<android.widget.SimpleMonthAdapter: void notifyDataSetChanged()>();

        return;
    }

    protected void setUpListView()
    {
        android.widget.DayPickerView r0;
        float $f0, $f1, $f2;

        r0 := @this: android.widget.DayPickerView;

        virtualinvoke r0.<android.widget.DayPickerView: void setCacheColorHint(int)>(0);

        virtualinvoke r0.<android.widget.DayPickerView: void setDivider(android.graphics.drawable.Drawable)>(null);

        virtualinvoke r0.<android.widget.DayPickerView: void setItemsCanFocus(boolean)>(1);

        virtualinvoke r0.<android.widget.DayPickerView: void setFastScrollEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.DayPickerView: void setVerticalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.DayPickerView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>(r0);

        virtualinvoke r0.<android.widget.DayPickerView: void setFadingEdgeLength(int)>(0);

        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

        $f1 = r0.<android.widget.DayPickerView: float mFriction>;

        $f2 = $f0 * $f1;

        virtualinvoke r0.<android.widget.DayPickerView: void setFriction(float)>($f2);

        return;
    }

    private int getDiffMonths(java.util.Calendar, java.util.Calendar)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        r2 := @parameter1: java.util.Calendar;

        $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);

        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        i0 = $i2 - $i3;

        $i4 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        $i7 = $i4 - $i5;

        $i6 = 12 * i0;

        i1 = $i7 + $i6;

        return i1;
    }

    private int getPositionFromDay(java.util.Calendar)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1, $r3, $r5, $r7;
        int i0, i1;
        android.widget.DatePickerController $r2, $r4, $r6;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        $r2 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        $r3 = interfaceinvoke $r2.<android.widget.DatePickerController: java.util.Calendar getMinDate()>();

        $r4 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        $r5 = interfaceinvoke $r4.<android.widget.DatePickerController: java.util.Calendar getMaxDate()>();

        i0 = specialinvoke r0.<android.widget.DayPickerView: int getDiffMonths(java.util.Calendar,java.util.Calendar)>($r3, $r5);

        $r6 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        $r7 = interfaceinvoke $r6.<android.widget.DatePickerController: java.util.Calendar getMinDate()>();

        i1 = specialinvoke r0.<android.widget.DayPickerView: int getDiffMonths(java.util.Calendar,java.util.Calendar)>($r7, r1);

        if i1 >= 0 goto label1;

        i1 = 0;

        goto label2;

     label1:
        if i1 <= i0 goto label2;

        i1 = i0;

     label2:
        return i1;
    }

    public boolean goTo(java.util.Calendar, boolean, boolean, boolean)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1, $r3, $r4, $r5, $r6, $r8;
        boolean z0, z1, z2;
        int i0, i1, i2, $i4, $i5, i7;
        android.view.View r2;
        long $l3, $l6;
        android.widget.SimpleMonthAdapter $r7;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        if z1 == 0 goto label01;

        $r8 = r0.<android.widget.DayPickerView: java.util.Calendar mSelectedDay>;

        $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r8.<java.util.Calendar: void setTimeInMillis(long)>($l6);

     label01:
        $r3 = r0.<android.widget.DayPickerView: java.util.Calendar mTempDay>;

        $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r3.<java.util.Calendar: void setTimeInMillis(long)>($l3);

        i0 = specialinvoke r0.<android.widget.DayPickerView: int getPositionFromDay(java.util.Calendar)>(r1);

        i1 = 0;

     label02:
        $i4 = i1;

        i1 = i1 + 1;

        r2 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View getChildAt(int)>($i4);

        if r2 != null goto label03;

        goto label04;

     label03:
        i7 = virtualinvoke r2.<android.view.View: int getTop()>();

        if i7 < 0 goto label02;

     label04:
        if r2 == null goto label05;

        i2 = virtualinvoke r0.<android.widget.DayPickerView: int getPositionForView(android.view.View)>(r2);

        goto label06;

     label05:
        i2 = 0;

     label06:
        if z1 == 0 goto label07;

        $r7 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        $r5 = r0.<android.widget.DayPickerView: java.util.Calendar mSelectedDay>;

        virtualinvoke $r7.<android.widget.SimpleMonthAdapter: void setSelectedDay(java.util.Calendar)>($r5);

     label07:
        if i0 != i2 goto label08;

        if z2 == 0 goto label10;

     label08:
        $r4 = r0.<android.widget.DayPickerView: java.util.Calendar mTempDay>;

        virtualinvoke r0.<android.widget.DayPickerView: void setMonthDisplayed(java.util.Calendar)>($r4);

        r0.<android.widget.DayPickerView: int mPreviousScrollState> = 2;

        if z0 == 0 goto label09;

        $i5 = <android.widget.DayPickerView: int LIST_TOP_OFFSET>;

        virtualinvoke r0.<android.widget.DayPickerView: void smoothScrollToPositionFromTop(int,int,int)>(i0, $i5, 250);

        return 1;

     label09:
        virtualinvoke r0.<android.widget.DayPickerView: void postSetSelection(int)>(i0);

        goto label11;

     label10:
        if z1 == 0 goto label11;

        $r6 = r0.<android.widget.DayPickerView: java.util.Calendar mSelectedDay>;

        virtualinvoke r0.<android.widget.DayPickerView: void setMonthDisplayed(java.util.Calendar)>($r6);

     label11:
        return 0;
    }

    public void postSetSelection(int)
    {
        android.widget.DayPickerView r0;
        int i0;
        android.widget.DayPickerView$1 $r1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.DayPickerView: void clearFocus()>();

        $r1 = new android.widget.DayPickerView$1;

        specialinvoke $r1.<android.widget.DayPickerView$1: void <init>(android.widget.DayPickerView,int)>(r0, i0);

        virtualinvoke r0.<android.widget.DayPickerView: boolean post(java.lang.Runnable)>($r1);

        virtualinvoke r0.<android.widget.DayPickerView: void onScrollStateChanged(android.widget.AbsListView,int)>(r0, 0);

        return;
    }

    public void onScroll(android.widget.AbsListView, int, int, int)
    {
        android.widget.DayPickerView r0;
        android.widget.AbsListView r1;
        int i0, i1, i2, $i3;
        android.widget.SimpleMonthView r2;
        android.view.View $r3;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = virtualinvoke r1.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        r2 = (android.widget.SimpleMonthView) $r3;

        if r2 != null goto label1;

        return;

     label1:
        $i3 = r0.<android.widget.DayPickerView: int mCurrentScrollState>;

        r0.<android.widget.DayPickerView: int mPreviousScrollState> = $i3;

        return;
    }

    protected void setMonthDisplayed(java.util.Calendar)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        $i0 = r0.<android.widget.DayPickerView: int mCurrentMonthDisplayed>;

        $i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        if $i0 == $i1 goto label1;

        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        r0.<android.widget.DayPickerView: int mCurrentMonthDisplayed> = $i2;

        virtualinvoke r0.<android.widget.DayPickerView: void invalidateViews()>();

     label1:
        return;
    }

    public void onScrollStateChanged(android.widget.AbsListView, int)
    {
        android.widget.DayPickerView r0;
        android.widget.AbsListView r1;
        int i0;
        android.widget.DayPickerView$ScrollStateRunnable $r2;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        $r2 = r0.<android.widget.DayPickerView: android.widget.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable>;

        virtualinvoke $r2.<android.widget.DayPickerView$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>(r1, i0);

        return;
    }

    void setCalendarTextColor(android.content.res.ColorStateList)
    {
        android.widget.DayPickerView r0;
        android.content.res.ColorStateList r1;
        android.widget.SimpleMonthAdapter $r2;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = r0.<android.widget.DayPickerView: android.widget.SimpleMonthAdapter mAdapter>;

        virtualinvoke $r2.<android.widget.SimpleMonthAdapter: void setCalendarTextColor(android.content.res.ColorStateList)>(r1);

        return;
    }

    public int getMostVisiblePosition()
    {
        android.widget.DayPickerView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        android.view.View r1;

        r0 := @this: android.widget.DayPickerView;

        i0 = virtualinvoke r0.<android.widget.DayPickerView: int getFirstVisiblePosition()>();

        i1 = virtualinvoke r0.<android.widget.DayPickerView: int getHeight()>();

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

     label1:
        if i5 >= i1 goto label4;

        r1 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View getChildAt(int)>(i4);

        if r1 != null goto label2;

        goto label4;

     label2:
        i5 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i1);

        $i10 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        i6 = $i8 - $i9;

        if i6 <= i2 goto label3;

        i3 = i4;

        i2 = i6;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $i7 = i0 + i3;

        return $i7;
    }

    public void onDateChanged()
    {
        android.widget.DayPickerView r0;
        android.widget.DatePickerController $r1;
        java.util.Calendar $r2;

        r0 := @this: android.widget.DayPickerView;

        $r1 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        $r2 = interfaceinvoke $r1.<android.widget.DatePickerController: java.util.Calendar getSelectedDay()>();

        virtualinvoke r0.<android.widget.DayPickerView: boolean goTo(java.util.Calendar,boolean,boolean,boolean)>($r2, 0, 1, 1);

        return;
    }

    private java.util.Calendar findAccessibilityFocus()
    {
        android.widget.DayPickerView r0;
        int i0, i1;
        android.view.View r1;
        java.util.Calendar r2;
        boolean $z0;
        android.widget.SimpleMonthView $r3;

        r0 := @this: android.widget.DayPickerView;

        i0 = virtualinvoke r0.<android.widget.DayPickerView: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View getChildAt(int)>(i1);

        $z0 = r1 instanceof android.widget.SimpleMonthView;

        if $z0 == 0 goto label2;

        $r3 = (android.widget.SimpleMonthView) r1;

        r2 = virtualinvoke $r3.<android.widget.SimpleMonthView: java.util.Calendar getAccessibilityFocus()>();

        if r2 == null goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private boolean restoreAccessibilityFocus(java.util.Calendar)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1;
        int i0, i1;
        android.view.View r2;
        boolean $z0, $z1;
        android.widget.SimpleMonthView $r3;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r0.<android.widget.DayPickerView: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View getChildAt(int)>(i1);

        $z0 = r2 instanceof android.widget.SimpleMonthView;

        if $z0 == 0 goto label3;

        $r3 = (android.widget.SimpleMonthView) r2;

        $z1 = virtualinvoke $r3.<android.widget.SimpleMonthView: boolean restoreAccessibilityFocus(java.util.Calendar)>(r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    protected void layoutChildren()
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1;
        boolean $z0;

        r0 := @this: android.widget.DayPickerView;

        r1 = specialinvoke r0.<android.widget.DayPickerView: java.util.Calendar findAccessibilityFocus()>();

        specialinvoke r0.<android.widget.ListView: void layoutChildren()>();

        $z0 = r0.<android.widget.DayPickerView: boolean mPerformingScroll>;

        if $z0 == 0 goto label1;

        r0.<android.widget.DayPickerView: boolean mPerformingScroll> = 0;

        goto label2;

     label1:
        specialinvoke r0.<android.widget.DayPickerView: boolean restoreAccessibilityFocus(java.util.Calendar)>(r1);

     label2:
        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.DayPickerView r0;
        android.content.res.Configuration r1;
        java.text.SimpleDateFormat $r2;
        java.util.Locale $r3;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", $r3);

        r0.<android.widget.DayPickerView: java.text.SimpleDateFormat mYearFormat> = $r2;

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DayPickerView r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>(-1);

        return;
    }

    private java.lang.String getMonthAndYearString(java.util.Calendar)
    {
        android.widget.DayPickerView r0;
        java.util.Calendar r1;
        java.lang.StringBuffer r2, $r3;
        java.util.Locale $r4;
        java.lang.String $r5, $r10, $r12;
        java.text.SimpleDateFormat $r8;
        java.util.Date $r9;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: java.util.Calendar;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = virtualinvoke r1.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(2, 2, $r4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = r0.<android.widget.DayPickerView: java.text.SimpleDateFormat mYearFormat>;

        $r9 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $r10 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.DayPickerView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @this: android.widget.DayPickerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.DayPickerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        android.os.Bundle r1;
        java.util.Calendar r2;
        android.view.View r3;
        android.widget.DatePickerController $r4;
        java.lang.String $r5;
        boolean $z1;

        r0 := @this: android.widget.DayPickerView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        if i0 == 4096 goto label1;

        if i0 == 8192 goto label1;

        $z1 = specialinvoke r0.<android.widget.ListView: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        return $z1;

     label1:
        i1 = virtualinvoke r0.<android.widget.DayPickerView: int getFirstVisiblePosition()>();

        i2 = i1 % 12;

        $i4 = i1 / 12;

        $r4 = r0.<android.widget.DayPickerView: android.widget.DatePickerController mController>;

        $i5 = interfaceinvoke $r4.<android.widget.DatePickerController: int getMinYear()>();

        i3 = $i4 + $i5;

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r2.<java.util.Calendar: void set(int,int,int)>(i3, i2, 1);

        if i0 != 4096 goto label2;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(2, 1);

        $i8 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        if $i8 != 12 goto label3;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 0);

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(1, 1);

        goto label3;

     label2:
        if i0 != 8192 goto label3;

        r3 = virtualinvoke r0.<android.widget.DayPickerView: android.view.View getChildAt(int)>(0);

        if r3 == null goto label3;

        $i7 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i7 < -1 goto label3;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(2, -1);

        $i6 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        if $i6 != -1 goto label3;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, 11);

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(1, -1);

     label3:
        $r5 = specialinvoke r0.<android.widget.DayPickerView: java.lang.String getMonthAndYearString(java.util.Calendar)>(r2);

        virtualinvoke r0.<android.widget.DayPickerView: void announceForAccessibility(java.lang.CharSequence)>($r5);

        virtualinvoke r0.<android.widget.DayPickerView: boolean goTo(java.util.Calendar,boolean,boolean,boolean)>(r2, 1, 0, 1);

        r0.<android.widget.DayPickerView: boolean mPerformingScroll> = 1;

        return 1;
    }

    static int access$002(android.widget.DayPickerView, int)
    {
        android.widget.DayPickerView r0;
        int i0;

        r0 := @parameter0: android.widget.DayPickerView;

        i0 := @parameter1: int;

        r0.<android.widget.DayPickerView: int mCurrentScrollState> = i0;

        return i0;
    }

    static int access$100(android.widget.DayPickerView)
    {
        android.widget.DayPickerView r0;
        int $i0;

        r0 := @parameter0: android.widget.DayPickerView;

        $i0 = r0.<android.widget.DayPickerView: int mPreviousScrollState>;

        return $i0;
    }

    static int access$102(android.widget.DayPickerView, int)
    {
        android.widget.DayPickerView r0;
        int i0;

        r0 := @parameter0: android.widget.DayPickerView;

        i0 := @parameter1: int;

        r0.<android.widget.DayPickerView: int mPreviousScrollState> = i0;

        return i0;
    }

    static int access$200()
    {
        int $i0;

        $i0 = <android.widget.DayPickerView: int LIST_TOP_OFFSET>;

        return $i0;
    }

    static void <clinit>()
    {
        <android.widget.DayPickerView: int SCROLL_CHANGE_DELAY> = 40;

        <android.widget.DayPickerView: int GOTO_SCROLL_DURATION> = 250;

        <android.widget.DayPickerView: java.lang.String TAG> = "DayPickerView";

        <android.widget.DayPickerView: int LIST_TOP_OFFSET> = -1;

        return;
    }
}
