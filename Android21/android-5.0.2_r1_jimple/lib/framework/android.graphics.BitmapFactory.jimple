public class android.graphics.BitmapFactory extends java.lang.Object
{
    private static final int DECODE_BUFFER_SIZE;

    public void <init>()
    {
        android.graphics.BitmapFactory r0;

        r0 := @this: android.graphics.BitmapFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap decodeFile(java.lang.String, android.graphics.BitmapFactory$Options)
    {
        java.lang.String r0, $r14;
        android.graphics.BitmapFactory$Options r1;
        android.graphics.Bitmap r2;
        java.io.FileInputStream r3, $r7;
        java.lang.Throwable r5, $r9;
        java.io.IOException $r8, $r10, $r16;
        java.lang.Exception $r11, r17;
        java.lang.StringBuilder $r12, $r13, $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.graphics.BitmapFactory$Options;

        r2 = null;

        r3 = null;

     label01:
        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r3 = $r7;

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r3, null, r1);

     label02:
        if r3 == null goto label17;

     label03:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label04:
        goto label17;

     label05:
        $r8 := @caughtexception;

        goto label17;

     label06:
        $r11 := @caughtexception;

        r17 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to decode stream: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BitmapFactory", $r14);

     label07:
        if r3 == null goto label17;

     label08:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label09:
        goto label17;

     label10:
        $r10 := @caughtexception;

        goto label17;

     label11:
        $r9 := @caughtexception;

        r5 = $r9;

     label12:
        if r3 == null goto label16;

     label13:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r16 := @caughtexception;

     label16:
        throw r5;

     label17:
        return r2;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static android.graphics.Bitmap decodeFile(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r0, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeResourceStream(android.content.res.Resources, android.util.TypedValue, java.io.InputStream, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        android.content.res.Resources r0;
        android.util.TypedValue r1;
        java.io.InputStream r2;
        android.graphics.Rect r3;
        android.graphics.BitmapFactory$Options r4, $r7;
        int i0, $i1, $i2, $i3;
        android.graphics.Bitmap $r5;
        android.util.DisplayMetrics $r6;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.util.TypedValue;

        r2 := @parameter2: java.io.InputStream;

        r3 := @parameter3: android.graphics.Rect;

        r4 := @parameter4: android.graphics.BitmapFactory$Options;

        if r4 != null goto label1;

        $r7 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

        r4 = $r7;

     label1:
        $i1 = r4.<android.graphics.BitmapFactory$Options: int inDensity>;

        if $i1 != 0 goto label3;

        if r1 == null goto label3;

        i0 = r1.<android.util.TypedValue: int density>;

        if i0 != 0 goto label2;

        r4.<android.graphics.BitmapFactory$Options: int inDensity> = 160;

        goto label3;

     label2:
        if i0 == 65535 goto label3;

        r4.<android.graphics.BitmapFactory$Options: int inDensity> = i0;

     label3:
        $i2 = r4.<android.graphics.BitmapFactory$Options: int inTargetDensity>;

        if $i2 != 0 goto label4;

        if r0 == null goto label4;

        $r6 = virtualinvoke r0.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i3 = $r6.<android.util.DisplayMetrics: int densityDpi>;

        r4.<android.graphics.BitmapFactory$Options: int inTargetDensity> = $i3;

     label4:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r2, r3, r4);

        return $r5;
    }

    public static android.graphics.Bitmap decodeResource(android.content.res.Resources, int, android.graphics.BitmapFactory$Options)
    {
        android.content.res.Resources r0;
        int i0;
        android.graphics.BitmapFactory$Options r1;
        android.graphics.Bitmap r2, $r8;
        java.io.InputStream r3;
        android.util.TypedValue r4, $r7;
        java.lang.Throwable r5, $r10;
        java.lang.IllegalArgumentException $r9;
        java.io.IOException $r11, $r12, $r14;
        java.lang.Exception $r13;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.BitmapFactory$Options;

        r2 = null;

        r3 = null;

     label01:
        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        r4 = $r7;

        r3 = virtualinvoke r0.<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>(i0, r4);

        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, r4, r3, null, r1);

     label02:
        if r3 == null goto label03;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label03:
        goto label14;

     label04:
        $r11 := @caughtexception;

        goto label14;

     label05:
        $r13 := @caughtexception;

     label06:
        if r3 == null goto label07;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label07:
        goto label14;

     label08:
        $r12 := @caughtexception;

        goto label14;

     label09:
        $r10 := @caughtexception;

        r5 = $r10;

     label10:
        if r3 == null goto label11;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

     label13:
        throw r5;

     label14:
        if r2 != null goto label15;

        if r1 == null goto label15;

        $r8 = r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r8 == null goto label15;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Problem decoding into existing bitmap");

        throw $r9;

     label15:
        return r2;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label01 to label02 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static android.graphics.Bitmap decodeResource(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r0, i0, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i4;
        android.graphics.BitmapFactory$Options r1;
        android.graphics.Bitmap r2, $r5;
        java.lang.Throwable r3, $r7;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.graphics.BitmapFactory$Options;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i4 = lengthof r0;

        $i3 = i0 + i1;

        if $i4 >= $i3 goto label2;

     label1:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(2L, "decodeBitmap");

     label3:
        r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, i0, i1, r1);

        if r2 != null goto label4;

        if r1 == null goto label4;

        $r5 = r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r5 == null goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Problem decoding into existing bitmap");

        throw $r6;

     label4:
        staticinvoke <android.graphics.BitmapFactory: void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options)>(r2, r1);

     label5:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        throw r3;

     label8:
        return r2;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static android.graphics.Bitmap decodeByteArray(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, i0, i1, null);

        return $r1;
    }

    private static void setDensityFromOptions(android.graphics.Bitmap, android.graphics.BitmapFactory$Options)
    {
        android.graphics.Bitmap r0, $r3;
        android.graphics.BitmapFactory$Options r1;
        int i0, i1, $i2, $i3;
        byte[] r2;
        boolean z0, $z1, $z2, $z3;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: android.graphics.BitmapFactory$Options;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return;

     label02:
        i0 = r1.<android.graphics.BitmapFactory$Options: int inDensity>;

        if i0 == 0 goto label09;

        virtualinvoke r0.<android.graphics.Bitmap: void setDensity(int)>(i0);

        i1 = r1.<android.graphics.BitmapFactory$Options: int inTargetDensity>;

        if i1 == 0 goto label03;

        if i0 == i1 goto label03;

        $i3 = r1.<android.graphics.BitmapFactory$Options: int inScreenDensity>;

        if i0 != $i3 goto label04;

     label03:
        return;

     label04:
        r2 = virtualinvoke r0.<android.graphics.Bitmap: byte[] getNinePatchChunk()>();

        if r2 == null goto label05;

        $z2 = staticinvoke <android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>(r2);

        if $z2 == 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z0 = $z3;

        $z1 = r1.<android.graphics.BitmapFactory$Options: boolean inScaled>;

        if $z1 != 0 goto label07;

        if z0 == 0 goto label08;

     label07:
        virtualinvoke r0.<android.graphics.Bitmap: void setDensity(int)>(i1);

     label08:
        goto label10;

     label09:
        $r3 = r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r3 == null goto label10;

        $i2 = staticinvoke <android.graphics.Bitmap: int getDefaultDensity()>();

        virtualinvoke r0.<android.graphics.Bitmap: void setDensity(int)>($i2);

     label10:
        return;
    }

    public static android.graphics.Bitmap decodeStream(java.io.InputStream, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        java.io.InputStream r0;
        android.graphics.Rect r1;
        android.graphics.BitmapFactory$Options r2;
        long l0;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        android.graphics.Bitmap $r4, r8;
        java.lang.IllegalArgumentException $r5;
        android.content.res.AssetManager$AssetInputStream $r6;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        if r0 != null goto label1;

        return null;

     label1:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(2L, "decodeBitmap");

     label2:
        $z0 = r0 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z0 == 0 goto label3;

        $r6 = (android.content.res.AssetManager$AssetInputStream) r0;

        l0 = virtualinvoke $r6.<android.content.res.AssetManager$AssetInputStream: long getNativeAsset()>();

        r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(l0, r1, r2);

        goto label4;

     label3:
        r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

     label4:
        if r8 != null goto label5;

        if r2 == null goto label5;

        $r4 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r4 == null goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Problem decoding into existing bitmap");

        throw $r5;

     label5:
        staticinvoke <android.graphics.BitmapFactory: void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options)>(r8, r2);

     label6:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        goto label9;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

     label8:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        throw r3;

     label9:
        return r8;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static android.graphics.Bitmap decodeStreamInternal(java.io.InputStream, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        java.io.InputStream r0;
        android.graphics.Rect r1;
        android.graphics.BitmapFactory$Options r2;
        byte[] r3;
        android.graphics.Bitmap $r4;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        r3 = null;

        if r2 == null goto label1;

        r3 = r2.<android.graphics.BitmapFactory$Options: byte[] inTempStorage>;

     label1:
        if r3 != null goto label2;

        r3 = newarray (byte)[16384];

     label2:
        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, r3, r1, r2);

        return $r4;
    }

    public static android.graphics.Bitmap decodeStream(java.io.InputStream)
    {
        java.io.InputStream r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, null, null);

        return $r1;
    }

    public static android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor, android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        java.io.FileDescriptor r0;
        android.graphics.Rect r1;
        android.graphics.BitmapFactory$Options r2;
        android.graphics.Bitmap r3, $r10;
        java.io.FileInputStream r4, $r9;
        java.lang.Throwable r6, r8, $r12, $r13, $r14, $r15;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.BitmapFactory$Options;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(2L, "decodeFileDescriptor");

     label01:
        $z0 = staticinvoke <android.graphics.BitmapFactory: boolean nativeIsSeekable(java.io.FileDescriptor)>(r0);

        if $z0 == 0 goto label02;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, r1, r2);

        goto label12;

     label02:
        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r0);

        r4 = $r9;

     label03:
        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r4, r1, r2);

     label04:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label05:
        goto label12;

     label06:
        $r13 := @caughtexception;

        goto label12;

     label07:
        $r14 := @caughtexception;

        r6 = $r14;

     label08:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

     label11:
        throw r6;

     label12:
        if r3 != null goto label13;

        if r2 == null goto label13;

        $r10 = r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        if $r10 == null goto label13;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Problem decoding into existing bitmap");

        throw $r11;

     label13:
        staticinvoke <android.graphics.BitmapFactory: void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options)>(r3, r2);

     label14:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        goto label17;

     label15:
        $r15 := @caughtexception;

        r8 = $r15;

     label16:
        staticinvoke <android.os.Trace: void traceEnd(long)>(2L);

        throw r8;

     label17:
        return r3;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)
    {
        java.io.FileDescriptor r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: java.io.FileDescriptor;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, null, null);

        return $r1;
    }

    private static native android.graphics.Bitmap nativeDecodeStream(java.io.InputStream, byte[], android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeFileDescriptor(java.io.FileDescriptor, android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeAsset(long, android.graphics.Rect, android.graphics.BitmapFactory$Options);

    private static native android.graphics.Bitmap nativeDecodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options);

    private static native boolean nativeIsSeekable(java.io.FileDescriptor);

    public static void <clinit>()
    {
        <android.graphics.BitmapFactory: int DECODE_BUFFER_SIZE> = 16384;

        return;
    }
}
