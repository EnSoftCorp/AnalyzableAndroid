public class android.content.res.ColorStateList extends java.lang.Object implements android.os.Parcelable
{
    private int[][] mStateSpecs;
    private int[] mColors;
    private int mDefaultColor;
    private static final int[][] EMPTY;
    private static final android.util.SparseArray sCache;
    public static final android.os.Parcelable$Creator CREATOR;

    private void <init>()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        return;
    }

    public void <init>(int[][], int[])
    {
        android.content.res.ColorStateList r0;
        int[][] r1;
        int[] r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[][];

        r2 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.ColorStateList: int mDefaultColor> = -65536;

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = r1;

        r0.<android.content.res.ColorStateList: int[] mColors> = r2;

        $i1 = lengthof r1;

        if $i1 <= 0 goto label3;

        $i2 = r2[0];

        r0.<android.content.res.ColorStateList: int mDefaultColor> = $i2;

        i0 = 0;

     label1:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label3;

        $r3 = r1[i0];

        $i4 = lengthof $r3;

        if $i4 != 0 goto label2;

        $i5 = r2[i0];

        r0.<android.content.res.ColorStateList: int mDefaultColor> = $i5;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public static android.content.res.ColorStateList valueOf(int)
    {
        int i0;
        android.util.SparseArray r0, $r4, $r5, $r11;
        java.lang.ref.WeakReference r1, $r10;
        android.content.res.ColorStateList r2, $r7, $r14, r15;
        java.lang.Throwable r3, $r13;
        java.lang.Object $r6, $r12;
        int[] $r8;
        int[][] $r9;

        i0 := @parameter0: int;

        $r4 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        r0 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.lang.ref.WeakReference) $r6;

        if r1 == null goto label2;

        $r12 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r14 = (android.content.res.ColorStateList) $r12;

        goto label3;

     label2:
        $r14 = null;

     label3:
        r2 = $r14;

        if r2 == null goto label5;

        exitmonitor r0;

     label4:
        return r2;

     label5:
        $r7 = new android.content.res.ColorStateList;

        $r9 = <android.content.res.ColorStateList: int[][] EMPTY>;

        $r8 = newarray (int)[1];

        $r8[0] = i0;

        specialinvoke $r7.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r9, $r8);

        r15 = $r7;

        $r11 = <android.content.res.ColorStateList: android.util.SparseArray sCache>;

        $r10 = new java.lang.ref.WeakReference;

        specialinvoke $r10.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r15);

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r10);

        exitmonitor r0;

     label6:
        return r15;

     label7:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r0;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        android.content.res.ColorStateList $r3;
        org.xmlpull.v1.XmlPullParserException $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r4 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r4;

     label3:
        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, r2);

        return $r3;
    }

    private static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.ColorStateList r3, $r12;
        java.lang.String r4, $r7, $r11;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r10;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 == 0 goto label1;

        $r12 = new android.content.res.ColorStateList;

        specialinvoke $r12.<android.content.res.ColorStateList: void <init>()>();

        r3 = $r12;

        goto label2;

     label1:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid drawable tag ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label2:
        specialinvoke r3.<android.content.res.ColorStateList: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, r2);

        return r3;
    }

    public android.content.res.ColorStateList withAlpha(int)
    {
        android.content.res.ColorStateList r0, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[] r1, $r2, $r5;
        int[][] $r4;

        r0 := @this: android.content.res.ColorStateList;

        i0 := @parameter0: int;

        $r2 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = lengthof $r2;

        r1 = newarray (int)[$i3];

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i4 = $r5[i2];

        $i6 = $i4 & 16777215;

        $i5 = i0 << 24;

        $i7 = $i6 | $i5;

        r1[i2] = $i7;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new android.content.res.ColorStateList;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        specialinvoke $r3.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r4, r1);

        return $r3;
    }

    private void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.ColorStateList r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23;
        int[][] r4, $r8, $r10;
        int[] r5, r6, $r9, $r11, r20;
        float f0, $f1, $f2;
        boolean z0, $z1, $z2;
        java.lang.Object[] $r7, $r13;
        java.lang.String $r12, $r14, $r18;
        java.lang.StringBuilder $r15, $r17, $r19;
        org.xmlpull.v1.XmlPullParserException $r16;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        $i11 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = $i11 + 1;

        $r7 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>(class "[I", 20);

        r4 = (int[][]) $r7;

        $i13 = lengthof r4;

        r5 = newarray (int)[$i13];

        i3 = 0;

     label01:
        $i12 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i12;

        if $i12 == 1 goto label18;

        $i14 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i14;

        if $i14 >= i1 goto label02;

        if i0 == 3 goto label18;

     label02:
        if i0 == 2 goto label03;

        goto label01;

     label03:
        if i2 > i1 goto label01;

        $r12 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z1 != 0 goto label04;

        goto label01;

     label04:
        i4 = 0;

        f0 = 1.0F;

        i5 = 0;

        i6 = -65536;

        z0 = 0;

        i9 = 0;

        i8 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeCount()>();

        r6 = newarray (int)[i8];

        i7 = 0;

     label05:
        if i7 >= i8 goto label12;

        i10 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeNameResource(int)>(i7);

        if i10 != 0 goto label06;

        goto label12;

     label06:
        if i10 != 16843551 goto label07;

        i4 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>(i7, 0);

        if i4 != 0 goto label11;

        f0 = interfaceinvoke r3.<android.util.AttributeSet: float getAttributeFloatValue(int,float)>(i7, 1.0F);

        goto label11;

     label07:
        if i10 != 16843173 goto label08;

        i5 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeResourceValue(int,int)>(i7, 0);

        if i5 != 0 goto label11;

        i6 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeIntValue(int,int)>(i7, i6);

        z0 = 1;

        goto label11;

     label08:
        $i21 = i9;

        i9 = i9 + 1;

        $z2 = interfaceinvoke r3.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i7, 0);

        if $z2 == 0 goto label09;

        $i20 = i10;

        goto label10;

     label09:
        $i20 = neg i10;

     label10:
        r6[$i21] = $i20;

     label11:
        i7 = i7 + 1;

        goto label05;

     label12:
        r20 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r6, i9);

        if i5 == 0 goto label13;

        i6 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>(i5);

        goto label14;

     label13:
        if z0 != 0 goto label14;

        $r16 = new org.xmlpull.v1.XmlPullParserException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r14 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'android:color\' attribute.");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label14:
        if i4 == 0 goto label15;

        f0 = virtualinvoke r1.<android.content.res.Resources: float getFloat(int)>(i4);

     label15:
        $i15 = staticinvoke <android.graphics.Color: int alpha(int)>(i6);

        $f1 = (float) $i15;

        $f2 = $f1 * f0;

        $i18 = (int) $f2;

        i22 = staticinvoke <android.util.MathUtils: int constrain(int,int,int)>($i18, 0, 255);

        $i17 = i6 & 16777215;

        $i16 = i22 << 24;

        i23 = $i17 | $i16;

        if i3 == 0 goto label16;

        $i19 = lengthof r20;

        if $i19 != 0 goto label17;

     label16:
        r0.<android.content.res.ColorStateList: int mDefaultColor> = i23;

     label17:
        r5 = staticinvoke <com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>(r5, i3, i23);

        $r13 = staticinvoke <com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r4, i3, r20);

        r4 = (int[][]) $r13;

        i3 = i3 + 1;

        goto label01;

     label18:
        $r9 = newarray (int)[i3];

        r0.<android.content.res.ColorStateList: int[] mColors> = $r9;

        $r8 = newarray (int[])[i3];

        r0.<android.content.res.ColorStateList: int[][] mStateSpecs> = $r8;

        $r11 = r0.<android.content.res.ColorStateList: int[] mColors>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r5, 0, $r11, 0, i3);

        $r10 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r10, 0, i3);

        return;
    }

    public boolean isStateful()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isOpaque()
    {
        android.content.res.ColorStateList r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[] mColors>;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i2 = $r2[i1];

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i2);

        if $i3 == 255 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public int getColorForState(int[], int)
    {
        android.content.res.ColorStateList r0;
        int[] r1, r2, $r5;
        int i0, i1, i2, $i3;
        int[][] $r3, $r4;
        boolean $z0;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $r3 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof $r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        r2 = $r4[i2];

        $z0 = staticinvoke <android.util.StateSet: boolean stateSetMatches(int[],int[])>(r2, r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $i3 = $r5[i2];

        return $i3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return i0;
    }

    public int getDefaultColor()
    {
        android.content.res.ColorStateList r0;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $i0 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        return $i0;
    }

    public int[][] getStates()
    {
        android.content.res.ColorStateList r0;
        int[][] $r1;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        return $r1;
    }

    public int[] getColors()
    {
        android.content.res.ColorStateList r0;
        int[] $r1;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = r0.<android.content.res.ColorStateList: int[] mColors>;

        return $r1;
    }

    public static android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList, int, int)
    {
        android.content.res.ColorStateList r0, $r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[][] r1, r5;
        int[] r2, $r3, r6, r7;

        r0 := @parameter0: android.content.res.ColorStateList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.ColorStateList: int[][] getStates()>();

        i2 = 0;

     label1:
        $i4 = lengthof r1;

        if i2 >= $i4 goto label5;

        r2 = r1[i2];

        i3 = 0;

     label2:
        $i12 = lengthof r2;

        if i3 >= $i12 goto label4;

        $i11 = r2[i2];

        if $i11 != i0 goto label3;

        return r0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $i5 = lengthof r1;

        $i6 = $i5 + 1;

        r5 = newarray (int[])[$i6];

        $i7 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, 1, $i7);

        $r3 = newarray (int)[1];

        $r3[0] = i0;

        r5[0] = $r3;

        r6 = virtualinvoke r0.<android.content.res.ColorStateList: int[] getColors()>();

        $i8 = lengthof r6;

        $i9 = $i8 + 1;

        r7 = newarray (int)[$i9];

        $i10 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r6, 0, r7, 1, $i10);

        r7[0] = i1;

        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r5, r7);

        return $r4;
    }

    public java.lang.String toString()
    {
        android.content.res.ColorStateList r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10, $r11, $r12;
        int[][] $r3;
        java.lang.String $r4, $r8, $r13;
        int[] $r7;
        int $i0;

        r0 := @this: android.content.res.ColorStateList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorStateList{mStateSpecs=");

        $r3 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mColors=");

        $r7 = r0.<android.content.res.ColorStateList: int[] mColors>;

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDefaultColor=");

        $i0 = r0.<android.content.res.ColorStateList: int mDefaultColor>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public int describeContents()
    {
        android.content.res.ColorStateList r0;

        r0 := @this: android.content.res.ColorStateList;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.ColorStateList r0;
        android.os.Parcel r1;
        int i0, i1, i2;
        int[][] $r2, $r4;
        int[] $r3, $r5;

        r0 := @this: android.content.res.ColorStateList;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        i1 = lengthof $r2;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r0.<android.content.res.ColorStateList: int[][] mStateSpecs>;

        $r5 = $r4[i2];

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.content.res.ColorStateList: int[] mColors>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r3);

        return;
    }

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1;
        android.util.SparseArray $r2;
        android.content.res.ColorStateList$1 $r3;

        $r0 = newarray (int[])[1];

        $r1 = newarray (int)[0];

        $r0[0] = $r1;

        <android.content.res.ColorStateList: int[][] EMPTY> = $r0;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.content.res.ColorStateList: android.util.SparseArray sCache> = $r2;

        $r3 = new android.content.res.ColorStateList$1;

        specialinvoke $r3.<android.content.res.ColorStateList$1: void <init>()>();

        <android.content.res.ColorStateList: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }
}
