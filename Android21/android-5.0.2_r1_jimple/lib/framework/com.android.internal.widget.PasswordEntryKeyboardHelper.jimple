public class com.android.internal.widget.PasswordEntryKeyboardHelper extends java.lang.Object implements android.inputmethodservice.KeyboardView$OnKeyboardActionListener
{
    public static final int KEYBOARD_MODE_ALPHA;
    public static final int KEYBOARD_MODE_NUMERIC;
    private static final int KEYBOARD_STATE_NORMAL;
    private static final int KEYBOARD_STATE_SHIFTED;
    private static final int KEYBOARD_STATE_CAPSLOCK;
    private static final java.lang.String TAG;
    private int mKeyboardMode;
    private int mKeyboardState;
    private com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard;
    private com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted;
    private com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard;
    private com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted;
    private com.android.internal.widget.PasswordEntryKeyboard mNumericKeyboard;
    private final android.content.Context mContext;
    private final android.view.View mTargetView;
    private final android.inputmethodservice.KeyboardView mKeyboardView;
    private long[] mVibratePattern;
    private boolean mEnableHaptics;
    private static final int NUMERIC;
    private static final int QWERTY;
    private static final int QWERTY_SHIFTED;
    private static final int SYMBOLS;
    private static final int SYMBOLS_SHIFTED;
    int[] mLayouts;
    private boolean mUsingScreenWidth;

    public void <init>(android.content.Context, android.inputmethodservice.KeyboardView, android.view.View)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.content.Context r1;
        android.inputmethodservice.KeyboardView r2;
        android.view.View r3;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.inputmethodservice.KeyboardView;

        r3 := @parameter2: android.view.View;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View,boolean,int[])>(r1, r2, r3, 1, null);

        return;
    }

    public void <init>(android.content.Context, android.inputmethodservice.KeyboardView, android.view.View, boolean)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.content.Context r1;
        android.inputmethodservice.KeyboardView r2;
        android.view.View r3;
        boolean z0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.inputmethodservice.KeyboardView;

        r3 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View,boolean,int[])>(r1, r2, r3, z0, null);

        return;
    }

    public void <init>(android.content.Context, android.inputmethodservice.KeyboardView, android.view.View, boolean, int[])
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.content.Context r1;
        android.inputmethodservice.KeyboardView r2, $r6;
        android.view.View r3;
        boolean z0;
        int[] r4, $r5, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.RuntimeException $r10;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.inputmethodservice.KeyboardView;

        r3 := @parameter2: android.view.View;

        z0 := @parameter3: boolean;

        r4 := @parameter4: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardMode> = 0;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 0;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean mEnableHaptics> = 0;

        $r5 = newarray (int)[5];

        $r5[0] = 17891336;

        $r5[1] = 17891338;

        $r5[2] = 17891339;

        $r5[3] = 17891340;

        $r5[4] = 17891341;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts> = $r5;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext> = r1;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.view.View mTargetView> = r3;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView> = r2;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r6.<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)>(r0);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean mUsingScreenWidth> = z0;

        if r4 == null goto label3;

        $i2 = lengthof r4;

        $r7 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i1 = lengthof $r7;

        if $i2 == $i1 goto label1;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Wrong number of layouts");

        throw $r10;

     label1:
        i0 = 0;

     label2:
        $r8 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i3 = lengthof $r8;

        if i0 >= $i3 goto label3;

        $r9 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i4 = r4[i0];

        $r9[i0] = $i4;

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void createKeyboards()>();

        return;
    }

    public void createKeyboards()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.view.ViewGroup$LayoutParams r1;
        android.inputmethodservice.KeyboardView $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        r1 = virtualinvoke $r2.<android.inputmethodservice.KeyboardView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean mUsingScreenWidth>;

        if $z0 != 0 goto label1;

        $i0 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 != -1 goto label2;

     label1:
        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void createKeyboardsWithDefaultWidth()>();

        goto label3;

     label2:
        $i2 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void createKeyboardsWithSpecificSize(int,int)>($i2, $i1);

     label3:
        return;
    }

    public void setEnableHaptics(boolean)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        boolean z0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean mEnableHaptics> = z0;

        return;
    }

    public boolean isAlpha()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $i0 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardMode>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void createKeyboardsWithSpecificSize(int, int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.internal.widget.PasswordEntryKeyboard $r1, $r4, $r7, $r8, $r11, $r12, $r13, $r15, $r18, $r20, $r21;
        int[] $r2, $r5, $r9, $r14, $r17;
        android.content.Context $r3, $r6, $r10, $r16, $r19;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i2 = $r2[0];

        specialinvoke $r1.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int)>($r3, $i2, i0, i1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mNumericKeyboard> = $r1;

        $r4 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r5 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i3 = $r5[1];

        specialinvoke $r4.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int,int)>($r6, $i3, 16909268, i0, i1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard> = $r4;

        $r7 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        virtualinvoke $r7.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r8 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r10 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r9 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i4 = $r9[2];

        specialinvoke $r8.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int,int)>($r10, $i4, 16909268, i0, i1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted> = $r8;

        $r12 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        virtualinvoke $r12.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r11 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        virtualinvoke $r11.<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>(1);

        $r13 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r16 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r14 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i5 = $r14[3];

        specialinvoke $r13.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int)>($r16, $i5, i0, i1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard> = $r13;

        $r15 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard>;

        virtualinvoke $r15.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r18 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r19 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r17 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i6 = $r17[4];

        specialinvoke $r18.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int)>($r19, $i6, i0, i1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted> = $r18;

        $r21 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

        virtualinvoke $r21.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r20 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

        virtualinvoke $r20.<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>(1);

        return;
    }

    private void createKeyboardsWithDefaultWidth()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        com.android.internal.widget.PasswordEntryKeyboard $r1, $r4, $r7, $r8, $r11, $r12, $r13, $r15, $r18, $r20, $r21;
        int[] $r2, $r5, $r9, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Context $r3, $r6, $r10, $r16, $r19;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $r1 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i0 = $r2[0];

        specialinvoke $r1.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>($r3, $i0);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mNumericKeyboard> = $r1;

        $r4 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r5 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i1 = $r5[1];

        specialinvoke $r4.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int)>($r6, $i1, 16909268);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard> = $r4;

        $r7 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        virtualinvoke $r7.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r8 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r10 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r9 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i2 = $r9[2];

        specialinvoke $r8.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int)>($r10, $i2, 16909268);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted> = $r8;

        $r11 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        virtualinvoke $r11.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r12 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        virtualinvoke $r12.<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>(1);

        $r13 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r16 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r14 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i3 = $r14[3];

        specialinvoke $r13.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>($r16, $i3);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard> = $r13;

        $r15 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard>;

        virtualinvoke $r15.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r18 = new com.android.internal.widget.PasswordEntryKeyboard;

        $r19 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r17 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int[] mLayouts>;

        $i4 = $r17[4];

        specialinvoke $r18.<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>($r19, $i4);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted> = $r18;

        $r21 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

        virtualinvoke $r21.<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>();

        $r20 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

        virtualinvoke $r20.<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>(1);

        return;
    }

    public void setKeyboardMode(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0, $i1;
        boolean z0, $z2;
        com.android.internal.widget.PasswordEntryKeyboard $r1, $r4;
        android.inputmethodservice.KeyboardView $r2, $r3, $r5, $r8;
        android.content.Context $r6;
        android.content.ContentResolver $r7;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label5;
            default: goto label6;
        };

     label1:
        $r5 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        $r4 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        virtualinvoke $r5.<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>($r4);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 0;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r7, "show_password", 1);

        if $i1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $r8 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        if z0 == 0 goto label4;

     label4:
        virtualinvoke $r8.<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>(0);

        goto label6;

     label5:
        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        $r1 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mNumericKeyboard>;

        virtualinvoke $r2.<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>($r1);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 0;

        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r3.<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>(0);

     label6:
        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardMode> = i0;

        return;
    }

    private void sendKeyEventsToTarget(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0, i1, i2, $i4, $i5, $i6;
        android.view.ViewRootImpl r1;
        android.view.KeyEvent[] r2;
        android.view.KeyEvent r3, r7;
        android.view.View $r4;
        android.view.KeyCharacterMap $r5;
        char[] $r6;
        char $c3;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.view.View mTargetView>;

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        $r5 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        $r6 = newarray (char)[1];

        $c3 = (char) i0;

        $r6[0] = $c3;

        r2 = virtualinvoke $r5.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r6);

        if r2 == null goto label2;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r3 = r2[i2];

        $i4 = virtualinvoke r3.<android.view.KeyEvent: int getFlags()>();

        $i5 = $i4 | 2;

        $i6 = $i5 | 4;

        r7 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>(r3, $i6);

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent)>(r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void sendDownUpKeyEvents(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0;
        long l1;
        android.view.ViewRootImpl r1;
        android.view.View $r2;
        android.view.KeyEvent $r3, $r4;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.view.View mTargetView>;

        r1 = virtualinvoke $r2.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, i0, 0, 0, -1, 0, 6);

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r3);

        $r4 = new android.view.KeyEvent;

        specialinvoke $r4.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 1, i0, 0, 0, -1, 0, 6);

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r4);

        return;
    }

    public void onKey(int, int[])
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0, $i1;
        int[] r1;
        android.inputmethodservice.KeyboardView $r2;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        if i0 != -5 goto label1;

        virtualinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleBackspace()>();

        goto label5;

     label1:
        if i0 != -1 goto label2;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleShift()>();

        goto label5;

     label2:
        if i0 != -3 goto label3;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleClose()>();

        return;

     label3:
        if i0 != -2 goto label4;

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        if $r2 == null goto label4;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleModeChange()>();

        goto label5;

     label4:
        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleCharacter(int,int[])>(i0, r1);

        $i1 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i1 != 1 goto label5;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 2;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleShift()>();

     label5:
        return;
    }

    public void setVibratePattern(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0, $i1, $i2, $i3, i6;
        int[] r1;
        android.content.res.Resources$NotFoundException r2, $r7;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        long[] $r5, $r6;
        long $l4;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        r1 = null;

     label1:
        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: int[] getIntArray(int)>(i0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        if i0 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PasswordEntryKeyboardHelper", "Vibrate pattern missing", r2);

     label4:
        if r1 != null goto label5;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: long[] mVibratePattern> = null;

        return;

     label5:
        $i1 = lengthof r1;

        $r5 = newarray (long)[$i1];

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: long[] mVibratePattern> = $r5;

        i6 = 0;

     label6:
        $i2 = lengthof r1;

        if i6 >= $i2 goto label7;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: long[] mVibratePattern>;

        $i3 = r1[i6];

        $l4 = (long) $i3;

        $r6[i6] = $l4;

        i6 = i6 + 1;

        goto label6;

     label7:
        return;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private void handleModeChange()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.inputmethodservice.Keyboard r1;
        com.android.internal.widget.PasswordEntryKeyboard r2, $r4, $r6, $r7, $r8;
        android.inputmethodservice.KeyboardView $r3, $r5;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        r1 = virtualinvoke $r3.<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>();

        r2 = null;

        $r4 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        if r1 == $r4 goto label1;

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        if r1 != $r6 goto label2;

     label1:
        r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard>;

        goto label4;

     label2:
        $r7 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard>;

        if r1 == $r7 goto label3;

        $r8 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

        if r1 != $r8 goto label4;

     label3:
        r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

     label4:
        if r2 == null goto label5;

        $r5 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r5.<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>(r2);

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 0;

     label5:
        return;
    }

    public void handleBackspace()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        virtualinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void sendDownUpKeyEvents(int)>(67);

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void performHapticFeedback()>();

        return;
    }

    private void handleShift()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        android.inputmethodservice.Keyboard r1;
        com.android.internal.widget.PasswordEntryKeyboard r2, $r5, $r8, $r9, $r10, $r11;
        boolean z0, $z2, $z3, $z4;
        android.inputmethodservice.KeyboardView $r3, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        byte $b5;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $r3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        if $r3 != null goto label01;

        return;

     label01:
        $r4 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        r1 = virtualinvoke $r4.<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>();

        r2 = null;

        $r5 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        if r1 == $r5 goto label02;

        $r11 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        if r1 != $r11 goto label03;

     label02:
        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z0 = $z4;

        $i0 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i0 != 0 goto label09;

        if z0 == 0 goto label05;

        $b5 = 1;

        goto label06;

     label05:
        $b5 = 2;

     label06:
        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = $b5;

        if z0 == 0 goto label07;

        $r10 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        goto label08;

     label07:
        $r10 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

     label08:
        r2 = $r10;

        goto label15;

     label09:
        $i1 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i1 != 1 goto label12;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 2;

        if z0 == 0 goto label10;

        $r8 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboardShifted>;

        goto label11;

     label10:
        $r8 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboardShifted>;

     label11:
        r2 = $r8;

        goto label15;

     label12:
        $i2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i2 != 2 goto label15;

        r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState> = 0;

        if z0 == 0 goto label13;

        $r9 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mQwertyKeyboard>;

        goto label14;

     label13:
        $r9 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: com.android.internal.widget.PasswordEntryKeyboard mSymbolsKeyboard>;

     label14:
        r2 = $r9;

     label15:
        if r2 == null goto label21;

        if r2 == r1 goto label16;

        $r7 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r7.<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>(r2);

     label16:
        $i3 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i3 != 2 goto label17;

        $z3 = 1;

        goto label18;

     label17:
        $z3 = 0;

     label18:
        virtualinvoke r2.<com.android.internal.widget.PasswordEntryKeyboard: void setShiftLocked(boolean)>($z3);

        $r6 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        $i4 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: int mKeyboardState>;

        if $i4 == 0 goto label19;

        $z2 = 1;

        goto label20;

     label19:
        $z2 = 0;

     label20:
        virtualinvoke $r6.<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>($z2);

     label21:
        return;
    }

    private void handleCharacter(int, int[])
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0;
        int[] r1;
        android.inputmethodservice.KeyboardView $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        $r2 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        $z0 = virtualinvoke $r2.<android.inputmethodservice.KeyboardView: boolean isShifted()>();

        if $z0 == 0 goto label1;

        if i0 == 32 goto label1;

        if i0 == 10 goto label1;

        i0 = staticinvoke <java.lang.Character: int toUpperCase(int)>(i0);

     label1:
        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void sendKeyEventsToTarget(int)>(i0);

        return;
    }

    private void handleClose()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        return;
    }

    public void onPress(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: void performHapticFeedback()>();

        return;
    }

    private void performHapticFeedback()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        boolean $z0;
        android.inputmethodservice.KeyboardView $r1;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        $z0 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean mEnableHaptics>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.PasswordEntryKeyboardHelper: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r1.<android.inputmethodservice.KeyboardView: boolean performHapticFeedback(int,int)>(1, 3);

     label1:
        return;
    }

    public void onRelease(int)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        int i0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        i0 := @parameter0: int;

        return;
    }

    public void onText(java.lang.CharSequence)
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    public void swipeDown()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        return;
    }

    public void swipeLeft()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        return;
    }

    public void swipeRight()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        return;
    }

    public void swipeUp()
    {
        com.android.internal.widget.PasswordEntryKeyboardHelper r0;

        r0 := @this: com.android.internal.widget.PasswordEntryKeyboardHelper;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.PasswordEntryKeyboardHelper: int SYMBOLS_SHIFTED> = 4;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int SYMBOLS> = 3;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int QWERTY_SHIFTED> = 2;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int QWERTY> = 1;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int NUMERIC> = 0;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: java.lang.String TAG> = "PasswordEntryKeyboardHelper";

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int KEYBOARD_STATE_CAPSLOCK> = 2;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int KEYBOARD_STATE_SHIFTED> = 1;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int KEYBOARD_STATE_NORMAL> = 0;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int KEYBOARD_MODE_NUMERIC> = 1;

        <com.android.internal.widget.PasswordEntryKeyboardHelper: int KEYBOARD_MODE_ALPHA> = 0;

        return;
    }
}
