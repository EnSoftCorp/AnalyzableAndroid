public final class android.bluetooth.le.ScanFilter$Builder extends java.lang.Object
{
    private java.lang.String mDeviceName;
    private java.lang.String mDeviceAddress;
    private android.os.ParcelUuid mServiceUuid;
    private android.os.ParcelUuid mUuidMask;
    private android.os.ParcelUuid mServiceDataUuid;
    private byte[] mServiceData;
    private byte[] mServiceDataMask;
    private int mManufacturerId;
    private byte[] mManufacturerData;
    private byte[] mManufacturerDataMask;

    public void <init>()
    {
        android.bluetooth.le.ScanFilter$Builder r0;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.bluetooth.le.ScanFilter$Builder: int mManufacturerId> = -1;

        return;
    }

    public android.bluetooth.le.ScanFilter$Builder setDeviceName(java.lang.String)
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        java.lang.String r1;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<android.bluetooth.le.ScanFilter$Builder: java.lang.String mDeviceName> = r1;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setDeviceAddress(java.lang.String)
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        java.lang.String r1, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = staticinvoke <android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid device address ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<android.bluetooth.le.ScanFilter$Builder: java.lang.String mDeviceAddress> = r1;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setServiceUuid(android.os.ParcelUuid)
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        android.os.ParcelUuid r1;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: android.os.ParcelUuid;

        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceUuid> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mUuidMask> = null;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setServiceUuid(android.os.ParcelUuid, android.os.ParcelUuid)
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        android.os.ParcelUuid r1, r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: android.os.ParcelUuid;

        r2 := @parameter1: android.os.ParcelUuid;

        $r3 = r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mUuidMask>;

        if $r3 == null goto label1;

        $r4 = r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceUuid>;

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uuid is null while uuidMask is not null!");

        throw $r5;

     label1:
        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceUuid> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mUuidMask> = r2;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setServiceData(android.os.ParcelUuid, byte[])
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        android.os.ParcelUuid r1;
        byte[] r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: android.os.ParcelUuid;

        r2 := @parameter1: byte[];

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serviceDataUuid is null");

        throw $r3;

     label1:
        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceDataUuid> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceData> = r2;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceDataMask> = null;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setServiceData(android.os.ParcelUuid, byte[], byte[])
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        android.os.ParcelUuid r1;
        byte[] r2, r3, $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r8, $r9, $r10;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        r1 := @parameter0: android.os.ParcelUuid;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serviceDataUuid is null");

        throw $r10;

     label1:
        $r4 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceDataMask>;

        if $r4 == null goto label3;

        $r5 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceData>;

        if $r5 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("serviceData is null while serviceDataMask is not null");

        throw $r9;

     label2:
        $r6 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceData>;

        $i1 = lengthof $r6;

        $r7 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceDataMask>;

        $i0 = lengthof $r7;

        if $i1 == $i0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size mismatch for service data and service data mask");

        throw $r8;

     label3:
        r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceDataUuid> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceData> = r2;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceDataMask> = r3;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setManufacturerData(int, byte[])
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        int i0;
        byte[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        if r1 == null goto label1;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid manufacture id");

        throw $r2;

     label1:
        r0.<android.bluetooth.le.ScanFilter$Builder: int mManufacturerId> = i0;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerData> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerDataMask> = null;

        return r0;
    }

    public android.bluetooth.le.ScanFilter$Builder setManufacturerData(int, byte[], byte[])
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        int i0, $i1, $i2;
        byte[] r1, r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        if r1 == null goto label1;

        if i0 >= 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid manufacture id");

        throw $r9;

     label1:
        $r3 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerDataMask>;

        if $r3 == null goto label3;

        $r4 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerData>;

        if $r4 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("manufacturerData is null while manufacturerDataMask is not null");

        throw $r8;

     label2:
        $r5 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerData>;

        $i2 = lengthof $r5;

        $r6 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerDataMask>;

        $i1 = lengthof $r6;

        if $i2 == $i1 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size mismatch for manufacturerData and manufacturerDataMask");

        throw $r7;

     label3:
        r0.<android.bluetooth.le.ScanFilter$Builder: int mManufacturerId> = i0;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerData> = r1;

        r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerDataMask> = r2;

        return r0;
    }

    public android.bluetooth.le.ScanFilter build()
    {
        android.bluetooth.le.ScanFilter$Builder r0;
        android.bluetooth.le.ScanFilter $r1;
        byte[] $r2, $r3, $r4, $r5;
        int $i0;
        android.os.ParcelUuid $r6, $r7, $r8;
        java.lang.String $r9, $r10;

        r0 := @this: android.bluetooth.le.ScanFilter$Builder;

        $r1 = new android.bluetooth.le.ScanFilter;

        $r10 = r0.<android.bluetooth.le.ScanFilter$Builder: java.lang.String mDeviceName>;

        $r9 = r0.<android.bluetooth.le.ScanFilter$Builder: java.lang.String mDeviceAddress>;

        $r8 = r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceUuid>;

        $r7 = r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mUuidMask>;

        $r6 = r0.<android.bluetooth.le.ScanFilter$Builder: android.os.ParcelUuid mServiceDataUuid>;

        $r5 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceData>;

        $r4 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mServiceDataMask>;

        $i0 = r0.<android.bluetooth.le.ScanFilter$Builder: int mManufacturerId>;

        $r3 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerData>;

        $r2 = r0.<android.bluetooth.le.ScanFilter$Builder: byte[] mManufacturerDataMask>;

        specialinvoke $r1.<android.bluetooth.le.ScanFilter: void <init>(java.lang.String,java.lang.String,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,byte[],byte[],int,byte[],byte[],android.bluetooth.le.ScanFilter$1)>($r10, $r9, $r8, $r7, $r6, $r5, $r4, $i0, $r3, $r2, null);

        return $r1;
    }
}
