public final class android.renderscript.ScriptIntrinsicConvolve5x5 extends android.renderscript.ScriptIntrinsic
{
    private final float[] mValues;
    private android.renderscript.Allocation mInput;

    private void <init>(long, android.renderscript.RenderScript)
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        long l0;
        android.renderscript.RenderScript r1;
        float[] $r2;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        l0 := @parameter0: long;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.ScriptIntrinsic: void <init>(long,android.renderscript.RenderScript)>(l0, r1);

        $r2 = newarray (float)[25];

        r0.<android.renderscript.ScriptIntrinsicConvolve5x5: float[] mValues> = $r2;

        return;
    }

    public static android.renderscript.ScriptIntrinsicConvolve5x5 create(android.renderscript.RenderScript, android.renderscript.Element)
    {
        android.renderscript.RenderScript r0;
        android.renderscript.Element r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        long l0, $l1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.renderscript.ScriptIntrinsicConvolve5x5 $r3;
        android.renderscript.RSIllegalArgumentException $r11;

        r0 := @parameter0: android.renderscript.RenderScript;

        r1 := @parameter1: android.renderscript.Element;

        $r2 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>(r0);

        $z0 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r2);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>(r0);

        $z1 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r4);

        if $z1 != 0 goto label1;

        $r5 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>(r0);

        $z2 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r5);

        if $z2 != 0 goto label1;

        $r6 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>(r0);

        $z3 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r6);

        if $z3 != 0 goto label1;

        $r7 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>(r0);

        $z4 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r7);

        if $z4 != 0 goto label1;

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>(r0);

        $z5 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r8);

        if $z5 != 0 goto label1;

        $r9 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>(r0);

        $z6 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r9);

        if $z6 != 0 goto label1;

        $r10 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>(r0);

        $z7 = virtualinvoke r1.<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>($r10);

        if $z7 != 0 goto label1;

        $r11 = new android.renderscript.RSIllegalArgumentException;

        specialinvoke $r11.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>("Unsuported element type.");

        throw $r11;

     label1:
        $l1 = virtualinvoke r1.<android.renderscript.Element: long getID(android.renderscript.RenderScript)>(r0);

        l0 = virtualinvoke r0.<android.renderscript.RenderScript: long nScriptIntrinsicCreate(int,long)>(4, $l1);

        $r3 = new android.renderscript.ScriptIntrinsicConvolve5x5;

        specialinvoke $r3.<android.renderscript.ScriptIntrinsicConvolve5x5: void <init>(long,android.renderscript.RenderScript)>(l0, r0);

        return $r3;
    }

    public void setInput(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        android.renderscript.Allocation r1;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        r1 := @parameter0: android.renderscript.Allocation;

        r0.<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Allocation mInput> = r1;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: void setVar(int,android.renderscript.BaseObj)>(1, r1);

        return;
    }

    public void setCoefficients(float[])
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        float[] r1, $r4, $r5, $r6;
        android.renderscript.FieldPacker r2, $r3;
        int i0, $i1;
        float $f0, $f1;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        r1 := @parameter0: float[];

        $r3 = new android.renderscript.FieldPacker;

        specialinvoke $r3.<android.renderscript.FieldPacker: void <init>(int)>(100);

        r2 = $r3;

        i0 = 0;

     label1:
        $r4 = r0.<android.renderscript.ScriptIntrinsicConvolve5x5: float[] mValues>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r5 = r0.<android.renderscript.ScriptIntrinsicConvolve5x5: float[] mValues>;

        $f0 = r1[i0];

        $r5[i0] = $f0;

        $r6 = r0.<android.renderscript.ScriptIntrinsicConvolve5x5: float[] mValues>;

        $f1 = $r6[i0];

        virtualinvoke r2.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: void setVar(int,android.renderscript.FieldPacker)>(0, r2);

        return;
    }

    public void forEach(android.renderscript.Allocation)
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        android.renderscript.Allocation r1, $r2;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        r1 := @parameter0: android.renderscript.Allocation;

        $r2 = (android.renderscript.Allocation) null;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>(0, $r2, r1, null);

        return;
    }

    public void forEach(android.renderscript.Allocation, android.renderscript.Script$LaunchOptions)
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        android.renderscript.Allocation r1, $r3;
        android.renderscript.Script$LaunchOptions r2;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        r1 := @parameter0: android.renderscript.Allocation;

        r2 := @parameter1: android.renderscript.Script$LaunchOptions;

        $r3 = (android.renderscript.Allocation) null;

        virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script$LaunchOptions)>(0, $r3, r1, null, r2);

        return;
    }

    public android.renderscript.Script$KernelID getKernelID()
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        android.renderscript.Script$KernelID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>(0, 2, null, null);

        return $r1;
    }

    public android.renderscript.Script$FieldID getFieldID_Input()
    {
        android.renderscript.ScriptIntrinsicConvolve5x5 r0;
        android.renderscript.Script$FieldID $r1;

        r0 := @this: android.renderscript.ScriptIntrinsicConvolve5x5;

        $r1 = virtualinvoke r0.<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$FieldID createFieldID(int,android.renderscript.Element)>(1, null);

        return $r1;
    }
}
