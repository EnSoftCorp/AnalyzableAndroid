class android.widget.GridLayout$Bounds extends java.lang.Object
{
    public int before;
    public int after;
    public int flexibility;

    private void <init>()
    {
        android.widget.GridLayout$Bounds r0;

        r0 := @this: android.widget.GridLayout$Bounds;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.widget.GridLayout$Bounds: void reset()>();

        return;
    }

    protected void reset()
    {
        android.widget.GridLayout$Bounds r0;

        r0 := @this: android.widget.GridLayout$Bounds;

        r0.<android.widget.GridLayout$Bounds: int before> = -2147483648;

        r0.<android.widget.GridLayout$Bounds: int after> = -2147483648;

        r0.<android.widget.GridLayout$Bounds: int flexibility> = 2;

        return;
    }

    protected void include(int, int)
    {
        android.widget.GridLayout$Bounds r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.GridLayout$Bounds;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.widget.GridLayout$Bounds: int before>;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, i0);

        r0.<android.widget.GridLayout$Bounds: int before> = $i3;

        $i4 = r0.<android.widget.GridLayout$Bounds: int after>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, i1);

        r0.<android.widget.GridLayout$Bounds: int after> = $i5;

        return;
    }

    protected int size(boolean)
    {
        android.widget.GridLayout$Bounds r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.GridLayout$Bounds;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $i3 = r0.<android.widget.GridLayout$Bounds: int flexibility>;

        $z1 = staticinvoke <android.widget.GridLayout: boolean canStretch(int)>($i3);

        if $z1 == 0 goto label1;

        return 100000;

     label1:
        $i1 = r0.<android.widget.GridLayout$Bounds: int before>;

        $i0 = r0.<android.widget.GridLayout$Bounds: int after>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    protected int getOffset(android.widget.GridLayout, android.view.View, android.widget.GridLayout$Alignment, int, boolean)
    {
        android.widget.GridLayout$Bounds r0;
        android.widget.GridLayout r1;
        android.view.View r2;
        android.widget.GridLayout$Alignment r3;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: android.widget.GridLayout$Bounds;

        r1 := @parameter0: android.widget.GridLayout;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.widget.GridLayout$Alignment;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i1 = r0.<android.widget.GridLayout$Bounds: int before>;

        $i2 = virtualinvoke r1.<android.widget.GridLayout: int getLayoutMode()>();

        $i3 = virtualinvoke r3.<android.widget.GridLayout$Alignment: int getAlignmentValue(android.view.View,int,int)>(r2, i0, $i2);

        $i4 = $i1 - $i3;

        return $i4;
    }

    protected final void include(android.widget.GridLayout, android.view.View, android.widget.GridLayout$Spec, android.widget.GridLayout$Axis, int)
    {
        android.widget.GridLayout$Bounds r0;
        android.widget.GridLayout r1;
        android.view.View r2;
        android.widget.GridLayout$Spec r3;
        android.widget.GridLayout$Axis r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0;
        android.widget.GridLayout$Alignment r5, $r6;

        r0 := @this: android.widget.GridLayout$Bounds;

        r1 := @parameter0: android.widget.GridLayout;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.widget.GridLayout$Spec;

        r4 := @parameter3: android.widget.GridLayout$Axis;

        i0 := @parameter4: int;

        $i2 = r0.<android.widget.GridLayout$Bounds: int flexibility>;

        $i3 = virtualinvoke r3.<android.widget.GridLayout$Spec: int getFlexibility()>();

        $i4 = $i2 & $i3;

        r0.<android.widget.GridLayout$Bounds: int flexibility> = $i4;

        z0 = r4.<android.widget.GridLayout$Axis: boolean horizontal>;

        $r6 = r3.<android.widget.GridLayout$Spec: android.widget.GridLayout$Alignment alignment>;

        r5 = virtualinvoke r1.<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(android.widget.GridLayout$Alignment,boolean)>($r6, z0);

        $i5 = virtualinvoke r1.<android.widget.GridLayout: int getLayoutMode()>();

        i1 = virtualinvoke r5.<android.widget.GridLayout$Alignment: int getAlignmentValue(android.view.View,int,int)>(r2, i0, $i5);

        $i6 = i0 - i1;

        virtualinvoke r0.<android.widget.GridLayout$Bounds: void include(int,int)>(i1, $i6);

        return;
    }

    public java.lang.String toString()
    {
        android.widget.GridLayout$Bounds r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: android.widget.GridLayout$Bounds;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bounds{before=");

        $i0 = r0.<android.widget.GridLayout$Bounds: int before>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", after=");

        $i1 = r0.<android.widget.GridLayout$Bounds: int after>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    void <init>(android.widget.GridLayout$1)
    {
        android.widget.GridLayout$Bounds r0;
        android.widget.GridLayout$1 r1;

        r0 := @this: android.widget.GridLayout$Bounds;

        r1 := @parameter0: android.widget.GridLayout$1;

        specialinvoke r0.<android.widget.GridLayout$Bounds: void <init>()>();

        return;
    }
}
