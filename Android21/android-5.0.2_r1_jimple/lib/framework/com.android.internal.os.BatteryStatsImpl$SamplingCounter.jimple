public class com.android.internal.os.BatteryStatsImpl$SamplingCounter extends com.android.internal.os.BatteryStatsImpl$Counter
{

    void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        android.os.Parcel r2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(r1, r2);

        return;
    }

    void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase)>(r1);

        return;
    }

    public void addCountAtomic(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingCounter r0;
        long l0;
        int $i1;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingCounter;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingCounter: java.util.concurrent.atomic.AtomicInteger mCount>;

        $i1 = (int) l0;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i1);

        return;
    }
}
