class android.hardware.location.GeofenceHardwareService$1 extends android.hardware.location.IGeofenceHardware$Stub
{
    final android.hardware.location.GeofenceHardwareService this$0;

    void <init>(android.hardware.location.GeofenceHardwareService)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        android.hardware.location.GeofenceHardwareService r1;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        r1 := @parameter0: android.hardware.location.GeofenceHardwareService;

        r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0> = r1;

        specialinvoke r0.<android.hardware.location.IGeofenceHardware$Stub: void <init>()>();

        return;
    }

    public void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        android.location.IGpsGeofenceHardware r1;
        android.hardware.location.GeofenceHardwareService $r2;
        android.hardware.location.GeofenceHardwareImpl $r3;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        r1 := @parameter0: android.location.IGpsGeofenceHardware;

        $r2 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r3 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r2);

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void setGpsHardwareGeofence(android.location.IGpsGeofenceHardware)>(r1);

        return;
    }

    public void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        android.location.IFusedGeofenceHardware r1;
        android.hardware.location.GeofenceHardwareService $r2;
        android.hardware.location.GeofenceHardwareImpl $r3;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        r1 := @parameter0: android.location.IFusedGeofenceHardware;

        $r2 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r3 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r2);

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)>(r1);

        return;
    }

    public int[] getMonitoringTypes()
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        android.hardware.location.GeofenceHardwareService $r1, $r3;
        android.content.Context $r2;
        android.hardware.location.GeofenceHardwareImpl $r4;
        int[] $r5;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        $r1 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r2 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r3);

        $r5 = virtualinvoke $r4.<android.hardware.location.GeofenceHardwareImpl: int[] getMonitoringTypes()>();

        return $r5;
    }

    public int getStatusOfMonitoringType(int)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, $i1;
        android.hardware.location.GeofenceHardwareService $r1, $r3;
        android.content.Context $r2;
        android.hardware.location.GeofenceHardwareImpl $r4;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        $r1 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r2 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r3);

        $i1 = virtualinvoke $r4.<android.hardware.location.GeofenceHardwareImpl: int getStatusOfMonitoringType(int)>(i0);

        return $i1;
    }

    public boolean addCircularFence(int, android.hardware.location.GeofenceHardwareRequestParcelable, android.hardware.location.IGeofenceHardwareCallback)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, $i1, $i2;
        android.hardware.location.GeofenceHardwareRequestParcelable r1;
        android.hardware.location.IGeofenceHardwareCallback r2;
        android.hardware.location.GeofenceHardwareService $r3, $r5, $r6;
        android.content.Context $r4;
        android.hardware.location.GeofenceHardwareImpl $r7;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.GeofenceHardwareRequestParcelable;

        r2 := @parameter2: android.hardware.location.IGeofenceHardwareCallback;

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r5 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r5, $i1, $i2, i0);

        $r6 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r7 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r6);

        $z0 = virtualinvoke $r7.<android.hardware.location.GeofenceHardwareImpl: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>(i0, r1, r2);

        return $z0;
    }

    public boolean removeGeofence(int, int)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, i1, $i2, $i3;
        android.hardware.location.GeofenceHardwareService $r1, $r3, $r4;
        android.content.Context $r2;
        android.hardware.location.GeofenceHardwareImpl $r5;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r2 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r3, $i2, $i3, i1);

        $r4 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r5 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r4);

        $z0 = virtualinvoke $r5.<android.hardware.location.GeofenceHardwareImpl: boolean removeGeofence(int,int)>(i0, i1);

        return $z0;
    }

    public boolean pauseGeofence(int, int)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, i1, $i2, $i3;
        android.hardware.location.GeofenceHardwareService $r1, $r3, $r4;
        android.content.Context $r2;
        android.hardware.location.GeofenceHardwareImpl $r5;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r2 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r3, $i2, $i3, i1);

        $r4 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r5 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r4);

        $z0 = virtualinvoke $r5.<android.hardware.location.GeofenceHardwareImpl: boolean pauseGeofence(int,int)>(i0, i1);

        return $z0;
    }

    public boolean resumeGeofence(int, int, int)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, i1, i2, $i3, $i4;
        android.hardware.location.GeofenceHardwareService $r1, $r3, $r4;
        android.content.Context $r2;
        android.hardware.location.GeofenceHardwareImpl $r5;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r2 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r1);

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r3 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r3, $i3, $i4, i1);

        $r4 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r5 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r4);

        $z0 = virtualinvoke $r5.<android.hardware.location.GeofenceHardwareImpl: boolean resumeGeofence(int,int,int)>(i0, i1, i2);

        return $z0;
    }

    public boolean registerForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, $i1, $i2;
        android.hardware.location.IGeofenceHardwareMonitorCallback r1;
        android.hardware.location.GeofenceHardwareService $r2, $r4, $r5;
        android.content.Context $r3;
        android.hardware.location.GeofenceHardwareImpl $r6;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        $r2 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r3 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r4 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r4, $i1, $i2, i0);

        $r5 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r6 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r5);

        $z0 = virtualinvoke $r6.<android.hardware.location.GeofenceHardwareImpl: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>(i0, r1);

        return $z0;
    }

    public boolean unregisterForMonitorStateChangeCallback(int, android.hardware.location.IGeofenceHardwareMonitorCallback)
    {
        android.hardware.location.GeofenceHardwareService$1 r0;
        int i0, $i1, $i2;
        android.hardware.location.IGeofenceHardwareMonitorCallback r1;
        android.hardware.location.GeofenceHardwareService $r2, $r4, $r5;
        android.content.Context $r3;
        android.hardware.location.GeofenceHardwareImpl $r6;
        boolean $z0;

        r0 := @this: android.hardware.location.GeofenceHardwareService$1;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.location.IGeofenceHardwareMonitorCallback;

        $r2 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r3 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.content.Context access$100(android.hardware.location.GeofenceHardwareService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.LOCATION_HARDWARE", "Location Hardware permission not granted to access hardware geofence");

        $r4 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        staticinvoke <android.hardware.location.GeofenceHardwareService: void access$200(android.hardware.location.GeofenceHardwareService,int,int,int)>($r4, $i1, $i2, i0);

        $r5 = r0.<android.hardware.location.GeofenceHardwareService$1: android.hardware.location.GeofenceHardwareService this$0>;

        $r6 = staticinvoke <android.hardware.location.GeofenceHardwareService: android.hardware.location.GeofenceHardwareImpl access$000(android.hardware.location.GeofenceHardwareService)>($r5);

        $z0 = virtualinvoke $r6.<android.hardware.location.GeofenceHardwareImpl: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>(i0, r1);

        return $z0;
    }
}
