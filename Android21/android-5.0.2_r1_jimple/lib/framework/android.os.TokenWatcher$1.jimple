class android.os.TokenWatcher$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.os.TokenWatcher this$0;

    void <init>(android.os.TokenWatcher)
    {
        android.os.TokenWatcher$1 r0;
        android.os.TokenWatcher r1;

        r0 := @this: android.os.TokenWatcher$1;

        r1 := @parameter0: android.os.TokenWatcher;

        r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        android.os.TokenWatcher$1 r0;
        int i0;
        java.util.WeakHashMap r1, $r4;
        java.lang.Throwable r2, $r9;
        android.os.TokenWatcher $r3, $r5, $r6, $r7, $r8;

        r0 := @this: android.os.TokenWatcher$1;

        $r3 = r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0>;

        $r4 = staticinvoke <android.os.TokenWatcher: java.util.WeakHashMap access$000(android.os.TokenWatcher)>($r3);

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0>;

        i0 = staticinvoke <android.os.TokenWatcher: int access$100(android.os.TokenWatcher)>($r5);

        $r6 = r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0>;

        staticinvoke <android.os.TokenWatcher: int access$102(android.os.TokenWatcher,int)>($r6, -1);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        if i0 != 1 goto label6;

        $r8 = r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0>;

        virtualinvoke $r8.<android.os.TokenWatcher: void acquired()>();

        goto label7;

     label6:
        if i0 != 0 goto label7;

        $r7 = r0.<android.os.TokenWatcher$1: android.os.TokenWatcher this$0>;

        virtualinvoke $r7.<android.os.TokenWatcher: void released()>();

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
