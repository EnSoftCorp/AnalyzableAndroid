public class android.security.Credentials extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    public static final java.lang.String INSTALL_ACTION;
    public static final java.lang.String INSTALL_AS_USER_ACTION;
    public static final java.lang.String UNLOCK_ACTION;
    public static final java.lang.String CA_CERTIFICATE;
    public static final java.lang.String USER_CERTIFICATE;
    public static final java.lang.String USER_PRIVATE_KEY;
    public static final java.lang.String VPN;
    public static final java.lang.String WIFI;
    public static final java.lang.String LOCKDOWN_VPN;
    public static final java.lang.String EXTRA_PUBLIC_KEY;
    public static final java.lang.String EXTRA_PRIVATE_KEY;
    public static final java.lang.String EXTENSION_CRT;
    public static final java.lang.String EXTENSION_P12;
    public static final java.lang.String EXTENSION_CER;
    public static final java.lang.String EXTENSION_PFX;
    public static final java.lang.String EXTRA_INSTALL_AS_UID;
    public static final java.lang.String EXTRA_USER_PRIVATE_KEY_NAME;
    public static final java.lang.String EXTRA_USER_PRIVATE_KEY_DATA;
    public static final java.lang.String EXTRA_USER_CERTIFICATE_NAME;
    public static final java.lang.String EXTRA_USER_CERTIFICATE_DATA;
    public static final java.lang.String EXTRA_CA_CERTIFICATES_NAME;
    public static final java.lang.String EXTRA_CA_CERTIFICATES_DATA;
    private static android.security.Credentials singleton;

    public void <init>()
    {
        android.security.Credentials r0;

        r0 := @this: android.security.Credentials;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient byte[] convertToPem(java.security.cert.Certificate[]) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        java.security.cert.Certificate[] r0, r4;
        java.io.ByteArrayOutputStream r1, $r6;
        java.io.OutputStreamWriter r2, $r7;
        com.android.org.bouncycastle.util.io.pem.PemWriter r3, $r9;
        int i0, i1;
        java.security.cert.Certificate r5;
        java.nio.charset.Charset $r8;
        byte[] $r10, $r12;
        com.android.org.bouncycastle.util.io.pem.PemObject $r11;

        r0 := @parameter0: java.security.cert.Certificate[];

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r6;

        $r7 = new java.io.OutputStreamWriter;

        $r8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r1, $r8);

        r2 = $r7;

        $r9 = new com.android.org.bouncycastle.util.io.pem.PemWriter;

        specialinvoke $r9.<com.android.org.bouncycastle.util.io.pem.PemWriter: void <init>(java.io.Writer)>(r2);

        r3 = $r9;

        r4 = r0;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r4[i1];

        $r11 = new com.android.org.bouncycastle.util.io.pem.PemObject;

        $r12 = virtualinvoke r5.<java.security.cert.Certificate: byte[] getEncoded()>();

        specialinvoke $r11.<com.android.org.bouncycastle.util.io.pem.PemObject: void <init>(java.lang.String,byte[])>("CERTIFICATE", $r12);

        virtualinvoke r3.<com.android.org.bouncycastle.util.io.pem.PemWriter: void writeObject(com.android.org.bouncycastle.util.io.pem.PemObjectGenerator)>($r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<com.android.org.bouncycastle.util.io.pem.PemWriter: void close()>();

        $r10 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r10;
    }

    public static java.util.List convertFromPem(byte[]) throws java.io.IOException, java.security.cert.CertificateException
    {
        byte[] r0, $r22;
        java.io.ByteArrayInputStream r1, $r8, $r20;
        java.io.InputStreamReader r2, $r9;
        com.android.org.bouncycastle.util.io.pem.PemReader r3, $r11;
        java.security.cert.CertificateFactory r4;
        java.util.ArrayList r5, $r12;
        com.android.org.bouncycastle.util.io.pem.PemObject r6, $r13;
        java.security.cert.Certificate r7;
        java.nio.charset.Charset $r10;
        java.lang.String $r14, $r19, $r21;
        java.lang.IllegalArgumentException $r15;
        boolean $z0;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.security.cert.X509Certificate $r23;

        r0 := @parameter0: byte[];

        $r8 = new java.io.ByteArrayInputStream;

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r1 = $r8;

        $r9 = new java.io.InputStreamReader;

        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r10);

        r2 = $r9;

        $r11 = new com.android.org.bouncycastle.util.io.pem.PemReader;

        specialinvoke $r11.<com.android.org.bouncycastle.util.io.pem.PemReader: void <init>(java.io.Reader)>(r2);

        r3 = $r11;

        r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r5 = $r12;

     label1:
        $r13 = virtualinvoke r3.<com.android.org.bouncycastle.util.io.pem.PemReader: com.android.org.bouncycastle.util.io.pem.PemObject readPemObject()>();

        r6 = $r13;

        if $r13 == null goto label3;

        $r14 = virtualinvoke r6.<com.android.org.bouncycastle.util.io.pem.PemObject: java.lang.String getType()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("CERTIFICATE");

        if $z0 == 0 goto label2;

        $r20 = new java.io.ByteArrayInputStream;

        $r22 = virtualinvoke r6.<com.android.org.bouncycastle.util.io.pem.PemObject: byte[] getContent()>();

        specialinvoke $r20.<java.io.ByteArrayInputStream: void <init>(byte[])>($r22);

        r7 = virtualinvoke r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r20);

        $r23 = (java.security.cert.X509Certificate) r7;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label1;

     label2:
        $r15 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        $r19 = virtualinvoke r6.<com.android.org.bouncycastle.util.io.pem.PemObject: java.lang.String getType()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label3:
        virtualinvoke r3.<com.android.org.bouncycastle.util.io.pem.PemReader: void close()>();

        return r5;
    }

    public static android.security.Credentials getInstance()
    {
        android.security.Credentials $r0, $r1, $r2;

        $r0 = <android.security.Credentials: android.security.Credentials singleton>;

        if $r0 != null goto label1;

        $r2 = new android.security.Credentials;

        specialinvoke $r2.<android.security.Credentials: void <init>()>();

        <android.security.Credentials: android.security.Credentials singleton> = $r2;

     label1:
        $r1 = <android.security.Credentials: android.security.Credentials singleton>;

        return $r1;
    }

    public void unlock(android.content.Context)
    {
        android.security.Credentials r0;
        android.content.Context r1;
        android.content.Intent r2, $r3;
        android.content.ActivityNotFoundException $r4, r6;
        java.lang.String $r5;

        r0 := @this: android.security.Credentials;

        r1 := @parameter0: android.content.Context;

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.credentials.UNLOCK");

        r2 = $r3;

        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = virtualinvoke r6.<android.content.ActivityNotFoundException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Credentials", $r5);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public void install(android.content.Context)
    {
        android.security.Credentials r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.content.ActivityNotFoundException $r3, r5;
        java.lang.String $r4;

        r0 := @this: android.security.Credentials;

        r1 := @parameter0: android.content.Context;

     label1:
        r2 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

        $r4 = virtualinvoke r5.<android.content.ActivityNotFoundException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Credentials", $r4);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public void install(android.content.Context, java.security.KeyPair)
    {
        android.security.Credentials r0;
        android.content.Context r1;
        java.security.KeyPair r2;
        android.content.Intent r3;
        java.security.PrivateKey $r4;
        byte[] $r5, $r8;
        java.security.PublicKey $r7;
        android.content.ActivityNotFoundException $r10, r12;
        java.lang.String $r11;

        r0 := @this: android.security.Credentials;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.security.KeyPair;

     label1:
        r3 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        $r4 = virtualinvoke r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r5 = interfaceinvoke $r4.<java.security.PrivateKey: byte[] getEncoded()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("PKEY", $r5);

        $r7 = virtualinvoke r2.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r8 = interfaceinvoke $r7.<java.security.PublicKey: byte[] getEncoded()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("KEY", $r8);

        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r3);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r12 = $r10;

        $r11 = virtualinvoke r12.<android.content.ActivityNotFoundException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Credentials", $r11);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public void install(android.content.Context, java.lang.String, byte[])
    {
        android.security.Credentials r0;
        android.content.Context r1;
        java.lang.String r2, $r7;
        byte[] r3;
        android.content.Intent r4;
        android.content.ActivityNotFoundException $r6, r8;

        r0 := @this: android.security.Credentials;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

     label1:
        r4 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>(r2, r3);

        virtualinvoke r1.<android.content.Context: void startActivity(android.content.Intent)>(r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = virtualinvoke r8.<android.content.ActivityNotFoundException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Credentials", $r7);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    static boolean deleteAllTypesForAlias(android.security.KeyStore, java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean delKey(java.lang.String)>($r5);

        $z1 = staticinvoke <android.security.Credentials: boolean deleteCertificateTypesForAlias(android.security.KeyStore,java.lang.String)>(r0, r1);

        $z2 = $z0 | $z1;

        return $z2;
    }

    static boolean deleteCertificateTypesForAlias(android.security.KeyStore, java.lang.String)
    {
        android.security.KeyStore r0;
        java.lang.String r1, $r5, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.security.KeyStore;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<android.security.KeyStore: boolean delete(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r0.<android.security.KeyStore: boolean delete(java.lang.String)>($r9);

        $z2 = $z0 | $z1;

        return $z2;
    }

    public static void <clinit>()
    {
        <android.security.Credentials: java.lang.String EXTRA_CA_CERTIFICATES_DATA> = "ca_certificates_data";

        <android.security.Credentials: java.lang.String EXTRA_CA_CERTIFICATES_NAME> = "ca_certificates_name";

        <android.security.Credentials: java.lang.String EXTRA_USER_CERTIFICATE_DATA> = "user_certificate_data";

        <android.security.Credentials: java.lang.String EXTRA_USER_CERTIFICATE_NAME> = "user_certificate_name";

        <android.security.Credentials: java.lang.String EXTRA_USER_PRIVATE_KEY_DATA> = "user_private_key_data";

        <android.security.Credentials: java.lang.String EXTRA_USER_PRIVATE_KEY_NAME> = "user_private_key_name";

        <android.security.Credentials: java.lang.String EXTRA_INSTALL_AS_UID> = "install_as_uid";

        <android.security.Credentials: java.lang.String EXTENSION_PFX> = ".pfx";

        <android.security.Credentials: java.lang.String EXTENSION_CER> = ".cer";

        <android.security.Credentials: java.lang.String EXTENSION_P12> = ".p12";

        <android.security.Credentials: java.lang.String EXTENSION_CRT> = ".crt";

        <android.security.Credentials: java.lang.String EXTRA_PRIVATE_KEY> = "PKEY";

        <android.security.Credentials: java.lang.String EXTRA_PUBLIC_KEY> = "KEY";

        <android.security.Credentials: java.lang.String LOCKDOWN_VPN> = "LOCKDOWN_VPN";

        <android.security.Credentials: java.lang.String WIFI> = "WIFI_";

        <android.security.Credentials: java.lang.String VPN> = "VPN_";

        <android.security.Credentials: java.lang.String USER_PRIVATE_KEY> = "USRPKEY_";

        <android.security.Credentials: java.lang.String USER_CERTIFICATE> = "USRCERT_";

        <android.security.Credentials: java.lang.String CA_CERTIFICATE> = "CACERT_";

        <android.security.Credentials: java.lang.String UNLOCK_ACTION> = "com.android.credentials.UNLOCK";

        <android.security.Credentials: java.lang.String INSTALL_AS_USER_ACTION> = "android.credentials.INSTALL_AS_USER";

        <android.security.Credentials: java.lang.String INSTALL_ACTION> = "android.credentials.INSTALL";

        <android.security.Credentials: java.lang.String LOGTAG> = "Credentials";

        return;
    }
}
