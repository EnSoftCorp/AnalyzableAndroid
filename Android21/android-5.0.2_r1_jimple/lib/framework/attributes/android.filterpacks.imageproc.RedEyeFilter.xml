<?xml version="1.0" encoding="ISO-8859-1"?>
<attributes>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="0" eline="0" spos="0" epos="0"/>
<text info="[inner=android/graphics/Bitmap$Config, outer=android/graphics/Bitmap, name=Config,flags=16409]" aType="InnerClassTag"/>
<text info="soot.tagkit.InnerClassAttribute@68b00d94" aType="InnerClassAttribute"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="3" eline="3" spos="0" epos="0"/>
<text info="ConstantValue: 0.06" aType="FloatConstantValueTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="4" eline="4" spos="0" epos="0"/>
<text info="ConstantValue: 10.0" aType="FloatConstantValueTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="5" eline="5" spos="0" epos="0"/>
<text info="ConstantValue: 1.3" aType="FloatConstantValueTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="6" eline="6" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 1 elems: 
Annotation Element: kind: s name: name value: centers

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="7" eline="7" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 2 elems: 
Annotation Element: kind: s name: name value: tile_size
Annotation Element: kind: Z name: hasDefault value: 1

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="17" eline="17" spos="0" epos="0"/>
<text info="ConstantValue: precision mediump float;
uniform sampler2D tex_sampler_0;
uniform sampler2D tex_sampler_1;
uniform float intensity;
varying vec2 v_texcoord;
void main() {
  vec4 color = texture2D(tex_sampler_0, v_texcoord);
  vec4 mask = texture2D(tex_sampler_1, v_texcoord);
  if (mask.a &gt; 0.0) {
    float green_blue = color.g + color.b;
    float red_intensity = color.r / green_blue;
    if (red_intensity &gt; intensity) {
      color.r = 0.5 * green_blue;
    }
  }
  gl_FragColor = color;
}
" aType="StringConstantValueTag"/>
</attribute>
</attributes>
