<?xml version="1.0" encoding="ISO-8859-1"?>
<attributes>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="3" eline="3" spos="0" epos="0"/>
<text info="ConstantValue: 128" aType="IntegerConstantValueTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="4" eline="4" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 2 elems: 
Annotation Element: kind: s name: name value: strength
Annotation Element: kind: Z name: hasDefault value: 1

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="5" eline="5" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 2 elems: 
Annotation Element: kind: s name: name value: tile_size
Annotation Element: kind: Z name: hasDefault value: 1

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="12" eline="12" spos="0" epos="0"/>
<text info="ConstantValue: precision mediump float;
uniform vec2 seed;
varying vec2 v_texcoord;
float rand(vec2 loc) {
  float theta1 = dot(loc, vec2(0.9898, 0.233));
  float theta2 = dot(loc, vec2(12.0, 78.0));
  float value = cos(theta1) * sin(theta2) + sin(theta1) * cos(theta2);
  float temp = mod(197.0 * value, 1.0) + value;
  float part1 = mod(220.0 * temp, 1.0) + temp;
  float part2 = value * 0.5453;
  float part3 = cos(theta1 + theta2) * 0.43758;
  return fract(part1 + part2 + part3);
}
void main() {
  gl_FragColor = vec4(rand(v_texcoord + seed), 0.0, 0.0, 1.0);
}
" aType="StringConstantValueTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="13" eline="13" spos="0" epos="0"/>
<text info="ConstantValue: precision mediump float;
uniform sampler2D tex_sampler_0;
uniform sampler2D tex_sampler_1;
uniform float scale;
uniform float stepX;
uniform float stepY;
varying vec2 v_texcoord;
void main() {
  float noise = texture2D(tex_sampler_1, v_texcoord + vec2(-stepX, -stepY)).r * 0.224;
  noise += texture2D(tex_sampler_1, v_texcoord + vec2(-stepX, stepY)).r * 0.224;
  noise += texture2D(tex_sampler_1, v_texcoord + vec2(stepX, -stepY)).r * 0.224;
  noise += texture2D(tex_sampler_1, v_texcoord + vec2(stepX, stepY)).r * 0.224;
  noise += 0.4448;
  noise *= scale;
  vec4 color = texture2D(tex_sampler_0, v_texcoord);
  float energy = 0.33333 * color.r + 0.33333 * color.g + 0.33333 * color.b;
  float mask = (1.0 - sqrt(energy));
  float weight = 1.0 - 1.333 * mask * noise;
  gl_FragColor = vec4(color.rgb * weight, color.a);
}
" aType="StringConstantValueTag"/>
</attribute>
</attributes>
