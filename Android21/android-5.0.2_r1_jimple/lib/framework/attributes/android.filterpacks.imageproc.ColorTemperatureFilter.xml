<?xml version="1.0" encoding="ISO-8859-1"?>
<attributes>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="3" eline="3" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 2 elems: 
Annotation Element: kind: s name: name value: scale
Annotation Element: kind: Z name: hasDefault value: 1

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="4" eline="4" spos="0" epos="0"/>
<text info="Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Landroid/filterfw/core/GenerateFieldPort; num elems: 2 elems: 
Annotation Element: kind: s name: name value: tile_size
Annotation Element: kind: Z name: hasDefault value: 1

" aType="VisibilityAnnotationTag"/>
</attribute>
<attribute>
<srcPos sline="0" eline="0" spos="0" epos="0"/>
<jmpPos sline="7" eline="7" spos="0" epos="0"/>
<text info="ConstantValue: precision mediump float;
uniform sampler2D tex_sampler_0;
uniform float scale;
varying vec2 v_texcoord;
void main() {
  vec4 color = texture2D(tex_sampler_0, v_texcoord);
  vec3 new_color = color.rgb;
  new_color.r = color.r + color.r * ( 1.0 - color.r) * scale;
  new_color.b = color.b - color.b * ( 1.0 - color.b) * scale;
  if (scale &gt; 0.0) { 
    new_color.g = color.g + color.g * ( 1.0 - color.g) * scale * 0.25;
  }
  float max_value = max(new_color.r, max(new_color.g, new_color.b));
  if (max_value &gt; 1.0) { 
     new_color /= max_value;
  } 
  gl_FragColor = vec4(new_color, color.a);
}
" aType="StringConstantValueTag"/>
</attribute>
</attributes>
