public class android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo extends android.net.wifi.p2p.nsd.WifiP2pServiceInfo
{
    public static final int VERSION_1;
    public static final int DNS_TYPE_PTR;
    public static final int DNS_TYPE_TXT;
    private static final java.util.Map sVmPacket;

    private void <init>(java.util.List)
    {
        android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo r0;
        java.util.List r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <init>(java.util.List)>(r1);

        return;
    }

    public static android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo newInstance(java.lang.String, java.lang.String, java.util.Map)
    {
        java.lang.String r0, r1, r5, $r9, $r10, $r14;
        java.util.Map r2;
        android.net.nsd.DnsSdTxtRecord r3, $r7;
        java.util.Iterator r4;
        boolean $z0, $z1, $z4;
        java.lang.IllegalArgumentException $r6;
        java.util.ArrayList $r8, r16;
        android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo $r11;
        java.util.Set $r12;
        java.lang.Object $r13, $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("instance name or service type cannot be empty");

        throw $r6;

     label2:
        $r7 = new android.net.nsd.DnsSdTxtRecord;

        specialinvoke $r7.<android.net.nsd.DnsSdTxtRecord: void <init>()>();

        r3 = $r7;

        if r2 == null goto label4;

        $r12 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r13;

        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (java.lang.String) $r15;

        virtualinvoke r3.<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)>(r5, $r14);

        goto label3;

     label4:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r16 = $r8;

        $r9 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createPtrServiceQuery(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createTxtServiceQuery(java.lang.String,java.lang.String,android.net.nsd.DnsSdTxtRecord)>(r0, r1, r3);

        virtualinvoke r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = new android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo;

        specialinvoke $r11.<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: void <init>(java.util.List)>(r16);

        return $r11;
    }

    private static java.lang.String createPtrServiceQuery(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r9, $r10, $r17, $r19, $r20;
        java.lang.StringBuffer r2, $r4;
        byte[] r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.Object[] $r13;
        int $i0;
        java.util.Locale $r14;
        java.lang.Integer $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bonjour ");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createRequest(java.lang.String,int,int)>($r9, 12, 1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $r14 = <java.util.Locale: java.util.Locale US>;

        $r13 = newarray (java.lang.Object)[1];

        $i0 = lengthof r3;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[0] = $r15;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r14, "%02x", $r13);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.lang.String bin2HexStr(byte[])>(r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("c027");

        $r20 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;
    }

    private static java.lang.String createTxtServiceQuery(java.lang.String, java.lang.String, android.net.nsd.DnsSdTxtRecord)
    {
        java.lang.String r0, r1, $r12, $r13, $r17, $r19;
        android.net.nsd.DnsSdTxtRecord r2;
        java.lang.StringBuffer r3, $r5;
        byte[] r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.nsd.DnsSdTxtRecord;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bonjour ");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String createRequest(java.lang.String,int,int)>($r12, 16, 1);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r4 = virtualinvoke r2.<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>();

        $i0 = lengthof r4;

        if $i0 != 0 goto label1;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00");

        goto label2;

     label1:
        $r17 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String bin2HexStr(byte[])>(r4);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label2:
        $r19 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r19;
    }

    static java.lang.String createRequest(java.lang.String, int, int)
    {
        java.lang.String r0, $r3, $r8, $r12, $r14;
        int i0, i1;
        java.lang.StringBuffer r1, $r2;
        java.lang.Object[] $r5, $r10;
        java.util.Locale $r6, $r11, $r16;
        java.lang.Integer $r7, $r13;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        if i0 != 16 goto label1;

        $r16 = <java.util.Locale: java.util.Locale ROOT>;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

     label1:
        $r3 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.lang.String compressDnsName(java.lang.String)>(r0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "%04x", $r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = <java.util.Locale: java.util.Locale US>;

        $r10 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[0] = $r13;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r11, "%02x", $r10);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    private static java.lang.String compressDnsName(java.lang.String)
    {
        java.lang.String r0, r2, r3, $r11, $r12, $r15, $r21, $r22;
        java.lang.StringBuffer r1, $r4;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r7, $r18;
        java.util.Locale $r8, $r17;
        java.lang.Integer $r9, $r19;
        byte[] $r13, $r20;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

     label1:
        $r5 = <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.util.Map sVmPacket>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (java.lang.String) $r6;

        if r2 == null goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        goto label5;

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if i0 != -1 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 <= 0 goto label3;

        $r17 = <java.util.Locale: java.util.Locale US>;

        $r18 = newarray (java.lang.Object)[1];

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r18[0] = $r19;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r17, "%02x", $r18);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r20 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $r21 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.lang.String bin2HexStr(byte[])>($r20);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("00");

        goto label5;

     label4:
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[1];

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[0] = $r9;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "%02x", $r7);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>();

        $r12 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.lang.String bin2HexStr(byte[])>($r13);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label1;

     label5:
        $r15 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r3, $r5;

        <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: int DNS_TYPE_TXT> = 16;

        <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: int DNS_TYPE_PTR> = 12;

        <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: int VERSION_1> = 1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.util.Map sVmPacket> = $r0;

        $r1 = <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.util.Map sVmPacket>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_tcp.local.", "c00c");

        $r3 = <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.util.Map sVmPacket>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("local.", "c011");

        $r5 = <android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: java.util.Map sVmPacket>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_udp.local.", "c01c");

        return;
    }
}
