public abstract class android.media.projection.IMediaProjectionManager$Stub extends android.os.Binder implements android.media.projection.IMediaProjectionManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_hasProjectionPermission;
    static final int TRANSACTION_createProjection;
    static final int TRANSACTION_isValidMediaProjection;
    static final int TRANSACTION_getActiveProjectionInfo;
    static final int TRANSACTION_stopActiveProjection;
    static final int TRANSACTION_addCallback;
    static final int TRANSACTION_removeCallback;

    public void <init>()
    {
        android.media.projection.IMediaProjectionManager$Stub r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.media.projection.IMediaProjectionManager");

        return;
    }

    public static android.media.projection.IMediaProjectionManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.media.projection.IMediaProjectionManager$Stub$Proxy $r2;
        boolean $z0;
        android.media.projection.IMediaProjectionManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.media.projection.IMediaProjectionManager;

        if $z0 == 0 goto label2;

        $r3 = (android.media.projection.IMediaProjectionManager) r1;

        return $r3;

     label2:
        $r2 = new android.media.projection.IMediaProjectionManager$Stub$Proxy;

        specialinvoke $r2.<android.media.projection.IMediaProjectionManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.media.projection.IMediaProjectionManager$Stub r0;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.media.projection.IMediaProjectionManager$Stub r0;
        int i0, i1, i2, $i4, i6, i7;
        android.os.Parcel r1, r2;
        java.lang.String r3, r9;
        boolean z0, z1, $z2, $z3, z4;
        android.media.projection.IMediaProjection r4, r10;
        android.os.IBinder $r5, $r6, $r7, $r8;
        byte $b3, $b5;
        android.media.projection.MediaProjectionInfo r11;
        android.media.projection.IMediaProjectionWatcherCallback r12, r13;

        r0 := @this: android.media.projection.IMediaProjectionManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label10;
            case 4: goto label13;
            case 5: goto label16;
            case 6: goto label17;
            case 7: goto label18;
            case 1598968902: goto label01;
            default: goto label19;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        z0 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: boolean hasProjectionPermission(int,java.lang.String)>(i2, r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z0 == 0 goto label03;

        $b5 = 1;

        goto label04;

     label03:
        $b5 = 0;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b5);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z1 = $z2;

        r4 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>(i6, r9, i7, z1);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r4 == null goto label08;

        $r8 = interfaceinvoke r4.<android.media.projection.IMediaProjection: android.os.IBinder asBinder()>();

        goto label09;

     label08:
        $r8 = null;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r10 = staticinvoke <android.media.projection.IMediaProjection$Stub: android.media.projection.IMediaProjection asInterface(android.os.IBinder)>($r7);

        z4 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>(r10);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z4 == 0 goto label11;

        $b3 = 1;

        goto label12;

     label11:
        $b3 = 0;

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b3);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        r11 = virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r11 == null goto label14;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r11.<android.media.projection.MediaProjectionInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label15;

     label14:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label15:
        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void stopActiveProjection()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r12 = staticinvoke <android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>(r12);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.media.projection.IMediaProjectionManager");

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r13 = staticinvoke <android.media.projection.IMediaProjectionWatcherCallback$Stub: android.media.projection.IMediaProjectionWatcherCallback asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<android.media.projection.IMediaProjectionManager$Stub: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>(r13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label19:
        $z3 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z3;
    }

    public static void <clinit>()
    {
        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_removeCallback> = 7;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_addCallback> = 6;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_stopActiveProjection> = 5;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_getActiveProjectionInfo> = 4;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_isValidMediaProjection> = 3;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_createProjection> = 2;

        <android.media.projection.IMediaProjectionManager$Stub: int TRANSACTION_hasProjectionPermission> = 1;

        <android.media.projection.IMediaProjectionManager$Stub: java.lang.String DESCRIPTOR> = "android.media.projection.IMediaProjectionManager";

        return;
    }
}
