public final class android.media.tv.TvInputManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final int VIDEO_UNAVAILABLE_REASON_START;
    static final int VIDEO_UNAVAILABLE_REASON_END;
    public static final int VIDEO_UNAVAILABLE_REASON_UNKNOWN;
    public static final int VIDEO_UNAVAILABLE_REASON_TUNING;
    public static final int VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL;
    public static final int VIDEO_UNAVAILABLE_REASON_BUFFERING;
    public static final int INPUT_STATE_CONNECTED;
    public static final int INPUT_STATE_CONNECTED_STANDBY;
    public static final int INPUT_STATE_DISCONNECTED;
    public static final java.lang.String ACTION_BLOCKED_RATINGS_CHANGED;
    public static final java.lang.String ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED;
    public static final java.lang.String ACTION_QUERY_CONTENT_RATING_SYSTEMS;
    public static final java.lang.String META_DATA_CONTENT_RATING_SYSTEMS;
    private final android.media.tv.ITvInputManager mService;
    private final java.lang.Object mLock;
    private final java.util.List mCallbackRecords;
    private final java.util.Map mStateMap;
    private final android.util.SparseArray mSessionCallbackRecordMap;
    private int mNextSeq;
    private final android.media.tv.ITvInputClient mClient;
    private final android.media.tv.ITvInputManagerCallback mManagerCallback;
    private final int mUserId;

    public void <init>(android.media.tv.ITvInputManager, int)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager r1, $r9, $r11;
        int i0, $i1;
        android.os.RemoteException r2, $r12;
        java.lang.Object $r3;
        java.util.LinkedList $r4;
        android.util.ArrayMap $r5;
        android.util.SparseArray $r6;
        android.media.tv.TvInputManager$1 $r7;
        android.media.tv.TvInputManager$2 $r8;
        android.media.tv.ITvInputManagerCallback $r10;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r15;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.ITvInputManager;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.lang.Object mLock> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<android.media.tv.TvInputManager: java.util.Map mStateMap> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap> = $r6;

        r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService> = r1;

        r0.<android.media.tv.TvInputManager: int mUserId> = i0;

        $r7 = new android.media.tv.TvInputManager$1;

        specialinvoke $r7.<android.media.tv.TvInputManager$1: void <init>(android.media.tv.TvInputManager)>(r0);

        r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputClient mClient> = $r7;

        $r8 = new android.media.tv.TvInputManager$2;

        specialinvoke $r8.<android.media.tv.TvInputManager$2: void <init>(android.media.tv.TvInputManager)>(r0);

        r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManagerCallback mManagerCallback> = $r8;

     label1:
        $r9 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        if $r9 == null goto label2;

        $r11 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r10 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManagerCallback mManagerCallback>;

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r11.<android.media.tv.ITvInputManager: void registerCallback(android.media.tv.ITvInputManagerCallback,int)>($r10, $i1);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mService.registerCallback failed: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TvInputManager", $r15);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getTvInputList()
    {
        android.media.tv.TvInputManager r0;
        android.os.RemoteException r1, $r4;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r3 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: java.util.List getTvInputList(int)>($i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r6;
        int $i0;
        android.media.tv.ITvInputManager $r3;
        android.media.tv.TvInputInfo $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("inputId cannot be null");

        throw $r5;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r4 = interfaceinvoke $r3.<android.media.tv.ITvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>(r1, $i0);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getInputState(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, $r5, $r7;
        java.lang.Integer r3;
        java.lang.Throwable r4, $r14;
        java.util.Map $r6;
        int $i0;
        java.lang.IllegalArgumentException $r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("inputId cannot be null");

        throw $r13;

     label1:
        $r5 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<android.media.tv.TvInputManager: java.util.Map mStateMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r7;

        if r3 != null goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized input ID: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label3:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        exitmonitor r2;

     label4:
        return $i0;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void registerCallback(android.media.tv.TvInputManager$TvInputCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.TvInputManager$TvInputCallback r1;
        android.os.Handler r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r10;
        android.media.tv.TvInputManager$TvInputCallbackRecord $r6;
        java.util.List $r7;
        java.lang.IllegalArgumentException $r8, $r9;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.TvInputManager$TvInputCallback;

        r2 := @parameter1: android.os.Handler;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null");

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("handler cannot be null");

        throw $r8;

     label2:
        $r5 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label3:
        $r7 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        $r6 = new android.media.tv.TvInputManager$TvInputCallbackRecord;

        specialinvoke $r6.<android.media.tv.TvInputManager$TvInputCallbackRecord: void <init>(android.media.tv.TvInputManager$TvInputCallback,android.os.Handler)>(r1, r2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unregisterCallback(android.media.tv.TvInputManager$TvInputCallback)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.TvInputManager$TvInputCallback r1, $r9;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        android.media.tv.TvInputManager$TvInputCallbackRecord r4;
        java.lang.Throwable r5, $r11;
        java.util.List $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.TvInputManager$TvInputCallback;

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null");

        throw $r10;

     label1:
        $r6 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.media.tv.TvInputManager$TvInputCallbackRecord) $r8;

        $r9 = virtualinvoke r4.<android.media.tv.TvInputManager$TvInputCallbackRecord: android.media.tv.TvInputManager$TvInputCallback getCallback()>();

        if $r9 != r1 goto label4;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label5;

     label4:
        goto label3;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean isParentalControlsEnabled()
    {
        android.media.tv.TvInputManager r0;
        android.os.RemoteException r1, $r3;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        boolean $z0;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $z0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: boolean isParentalControlsEnabled(int)>($i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setParentalControlsEnabled(boolean)
    {
        android.media.tv.TvInputManager r0;
        boolean z0;
        android.os.RemoteException r1, $r3;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r2.<android.media.tv.ITvInputManager: void setParentalControlsEnabled(boolean,int)>(z0, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isRatingBlocked(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.TvContentRating r1;
        android.os.RemoteException r2, $r6;
        android.media.tv.ITvInputManager $r3;
        java.lang.String $r4;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.TvContentRating;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rating cannot be null");

        throw $r5;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r4 = virtualinvoke r1.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $z0 = interfaceinvoke $r3.<android.media.tv.ITvInputManager: boolean isRatingBlocked(java.lang.String,int)>($r4, $i0);

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getBlockedRatings()
    {
        android.media.tv.TvInputManager r0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        java.lang.String r3;
        int $i0;
        android.media.tv.ITvInputManager $r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.media.tv.TvContentRating $r8;
        android.os.RemoteException $r9, r11;
        java.lang.RuntimeException $r10;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r6 = interfaceinvoke $r5.<android.media.tv.ITvInputManager: java.util.List getBlockedRatings(int)>($i0);

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        $r8 = staticinvoke <android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return r1;

     label4:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw $r10;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public void addBlockedRating(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.TvContentRating r1;
        android.os.RemoteException r2, $r6;
        android.media.tv.ITvInputManager $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.TvContentRating;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rating cannot be null");

        throw $r5;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r4 = virtualinvoke r1.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r3.<android.media.tv.ITvInputManager: void addBlockedRating(java.lang.String,int)>($r4, $i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removeBlockedRating(android.media.tv.TvContentRating)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.TvContentRating r1;
        android.os.RemoteException r2, $r6;
        android.media.tv.ITvInputManager $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: android.media.tv.TvContentRating;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rating cannot be null");

        throw $r5;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r4 = virtualinvoke r1.<android.media.tv.TvContentRating: java.lang.String flattenToString()>();

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r3.<android.media.tv.ITvInputManager: void removeBlockedRating(java.lang.String,int)>($r4, $i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getTvContentRatingSystemList()
    {
        android.media.tv.TvInputManager r0;
        android.os.RemoteException r1, $r4;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r3 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: java.util.List getTvContentRatingSystemList(int)>($i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void createSession(java.lang.String, android.media.tv.TvInputManager$SessionCallback, android.os.Handler)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.media.tv.TvInputManager$SessionCallback r2;
        android.os.Handler r3;
        android.media.tv.TvInputManager$SessionCallbackRecord r4, $r8;
        android.util.SparseArray r5, $r9, $r10;
        int i0, $i1, $i2, $i3;
        android.os.RemoteException r6, $r15;
        java.lang.Throwable r7, $r17;
        android.media.tv.ITvInputClient $r11;
        android.media.tv.ITvInputManager $r12;
        java.lang.IllegalArgumentException $r13, $r14, $r16;
        java.lang.RuntimeException $r18;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.tv.TvInputManager$SessionCallback;

        r3 := @parameter2: android.os.Handler;

        if r1 != null goto label01;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("id cannot be null");

        throw $r16;

     label01:
        if r2 != null goto label02;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback cannot be null");

        throw $r13;

     label02:
        if r3 != null goto label03;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("handler cannot be null");

        throw $r14;

     label03:
        $r8 = new android.media.tv.TvInputManager$SessionCallbackRecord;

        specialinvoke $r8.<android.media.tv.TvInputManager$SessionCallbackRecord: void <init>(android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r2, r3);

        r4 = $r8;

        $r9 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        r5 = $r9;

        entermonitor $r9;

     label04:
        $i1 = r0.<android.media.tv.TvInputManager: int mNextSeq>;

        $i2 = $i1 + 1;

        r0.<android.media.tv.TvInputManager: int mNextSeq> = $i2;

        i0 = $i1;

        $r10 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

     label05:
        $r12 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r11 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputClient mClient>;

        $i3 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r12.<android.media.tv.ITvInputManager: void createSession(android.media.tv.ITvInputClient,java.lang.String,int,int)>($r11, r1, i0, $i3);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

        r6 = $r15;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r6);

        throw $r18;

     label08:
        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r5;

     label11:
        throw r7;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.util.List getAvailableTvStreamConfigList(java.lang.String)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        int $i0;
        android.media.tv.ITvInputManager $r3;
        java.util.List $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r4 = interfaceinvoke $r3.<android.media.tv.ITvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>(r1, $i0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean captureFrame(java.lang.String, android.view.Surface, android.media.tv.TvStreamConfig)
    {
        android.media.tv.TvInputManager r0;
        java.lang.String r1;
        android.view.Surface r2;
        android.media.tv.TvStreamConfig r3;
        android.os.RemoteException r4, $r6;
        int $i0;
        android.media.tv.ITvInputManager $r5;
        boolean $z0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.media.tv.TvInputManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.Surface;

        r3 := @parameter2: android.media.tv.TvStreamConfig;

     label1:
        $r5 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $z0 = interfaceinvoke $r5.<android.media.tv.ITvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>(r1, r2, r3, $i0);

     label2:
        return $z0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSingleSessionActive()
    {
        android.media.tv.TvInputManager r0;
        android.os.RemoteException r1, $r3;
        int $i0;
        android.media.tv.ITvInputManager $r2;
        boolean $z0;
        java.lang.RuntimeException $r4;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $z0 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: boolean isSingleSessionActive(int)>($i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getHardwareList()
    {
        android.media.tv.TvInputManager r0;
        android.os.RemoteException r1, $r4;
        android.media.tv.ITvInputManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.media.tv.TvInputManager;

     label1:
        $r2 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r3 = interfaceinvoke $r2.<android.media.tv.ITvInputManager: java.util.List getHardwareList()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.media.tv.TvInputManager$Hardware acquireTvInputHardware(int, android.media.tv.TvInputManager$HardwareCallback, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputManager r0;
        int i0, $i1;
        android.media.tv.TvInputManager$HardwareCallback r1;
        android.media.tv.TvInputInfo r2;
        android.os.RemoteException r3, $r8;
        android.media.tv.TvInputManager$Hardware $r4;
        android.media.tv.TvInputManager$3 $r5;
        android.media.tv.ITvInputManager $r6;
        android.media.tv.ITvInputHardware $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputManager$HardwareCallback;

        r2 := @parameter2: android.media.tv.TvInputInfo;

     label1:
        $r4 = new android.media.tv.TvInputManager$Hardware;

        $r6 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r5 = new android.media.tv.TvInputManager$3;

        specialinvoke $r5.<android.media.tv.TvInputManager$3: void <init>(android.media.tv.TvInputManager,android.media.tv.TvInputManager$HardwareCallback)>(r0, r1);

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        $r7 = interfaceinvoke $r6.<android.media.tv.ITvInputManager: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int)>(i0, $r5, r2, $i1);

        specialinvoke $r4.<android.media.tv.TvInputManager$Hardware: void <init>(android.media.tv.ITvInputHardware,android.media.tv.TvInputManager$1)>($r7, null);

     label2:
        return $r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void releaseTvInputHardware(int, android.media.tv.TvInputManager$Hardware)
    {
        android.media.tv.TvInputManager r0;
        int i0, $i1;
        android.media.tv.TvInputManager$Hardware r1;
        android.os.RemoteException r2, $r5;
        android.media.tv.ITvInputManager $r3;
        android.media.tv.ITvInputHardware $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.media.tv.TvInputManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputManager$Hardware;

     label1:
        $r3 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        $r4 = staticinvoke <android.media.tv.TvInputManager$Hardware: android.media.tv.ITvInputHardware access$1800(android.media.tv.TvInputManager$Hardware)>(r1);

        $i1 = r0.<android.media.tv.TvInputManager: int mUserId>;

        interfaceinvoke $r3.<android.media.tv.ITvInputManager: void releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>(i0, $r4, $i1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static android.util.SparseArray access$900(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: android.util.SparseArray mSessionCallbackRecordMap>;

        return $r1;
    }

    static android.media.tv.ITvInputManager access$1000(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        android.media.tv.ITvInputManager $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: android.media.tv.ITvInputManager mService>;

        return $r1;
    }

    static int access$1100(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        int $i0;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $i0 = r0.<android.media.tv.TvInputManager: int mUserId>;

        return $i0;
    }

    static java.lang.Object access$1400(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.Map access$1500(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.util.Map $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.util.Map mStateMap>;

        return $r1;
    }

    static java.util.List access$1600(android.media.tv.TvInputManager)
    {
        android.media.tv.TvInputManager r0;
        java.util.List $r1;

        r0 := @parameter0: android.media.tv.TvInputManager;

        $r1 = r0.<android.media.tv.TvInputManager: java.util.List mCallbackRecords>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputManager: java.lang.String META_DATA_CONTENT_RATING_SYSTEMS> = "android.media.tv.metadata.CONTENT_RATING_SYSTEMS";

        <android.media.tv.TvInputManager: java.lang.String ACTION_QUERY_CONTENT_RATING_SYSTEMS> = "android.media.tv.action.QUERY_CONTENT_RATING_SYSTEMS";

        <android.media.tv.TvInputManager: java.lang.String ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED> = "android.media.tv.action.PARENTAL_CONTROLS_ENABLED_CHANGED";

        <android.media.tv.TvInputManager: java.lang.String ACTION_BLOCKED_RATINGS_CHANGED> = "android.media.tv.action.BLOCKED_RATINGS_CHANGED";

        <android.media.tv.TvInputManager: int INPUT_STATE_DISCONNECTED> = 2;

        <android.media.tv.TvInputManager: int INPUT_STATE_CONNECTED_STANDBY> = 1;

        <android.media.tv.TvInputManager: int INPUT_STATE_CONNECTED> = 0;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_BUFFERING> = 3;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL> = 2;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_TUNING> = 1;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_UNKNOWN> = 0;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_END> = 3;

        <android.media.tv.TvInputManager: int VIDEO_UNAVAILABLE_REASON_START> = 0;

        <android.media.tv.TvInputManager: java.lang.String TAG> = "TvInputManager";

        return;
    }
}
