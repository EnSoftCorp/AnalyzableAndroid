abstract class android.speech.tts.TextToSpeechService$UtteranceSpeechItem extends android.speech.tts.TextToSpeechService$SpeechItem implements android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher
{
    final android.speech.tts.TextToSpeechService this$0;

    public void <init>(android.speech.tts.TextToSpeechService, java.lang.Object, int, int)
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        android.speech.tts.TextToSpeechService r1;
        java.lang.Object r2;
        int i0, i1;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: android.speech.tts.TextToSpeechService this$0> = r1;

        specialinvoke r0.<android.speech.tts.TextToSpeechService$SpeechItem: void <init>(android.speech.tts.TextToSpeechService,java.lang.Object,int,int)>(r1, r2, i0, i1);

        return;
    }

    public void dispatchOnSuccess()
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeechService $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.String getUtteranceId()>();

        if r1 == null goto label1;

        $r2 = r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: android.speech.tts.TextToSpeechService this$0>;

        $r3 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap access$300(android.speech.tts.TextToSpeechService)>($r2);

        $r4 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.Object getCallerIdentity()>();

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnSuccess(java.lang.Object,java.lang.String)>($r4, r1);

     label1:
        return;
    }

    public void dispatchOnStop()
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeechService $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.String getUtteranceId()>();

        if r1 == null goto label1;

        $r2 = r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: android.speech.tts.TextToSpeechService this$0>;

        $r3 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap access$300(android.speech.tts.TextToSpeechService)>($r2);

        $r4 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.Object getCallerIdentity()>();

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnStop(java.lang.Object,java.lang.String)>($r4, r1);

     label1:
        return;
    }

    public void dispatchOnStart()
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        java.lang.String r1;
        android.speech.tts.TextToSpeechService $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.String getUtteranceId()>();

        if r1 == null goto label1;

        $r2 = r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: android.speech.tts.TextToSpeechService this$0>;

        $r3 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap access$300(android.speech.tts.TextToSpeechService)>($r2);

        $r4 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.Object getCallerIdentity()>();

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnStart(java.lang.Object,java.lang.String)>($r4, r1);

     label1:
        return;
    }

    public void dispatchOnError(int)
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        int i0;
        java.lang.String r1;
        android.speech.tts.TextToSpeechService $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.String getUtteranceId()>();

        if r1 == null goto label1;

        $r2 = r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: android.speech.tts.TextToSpeechService this$0>;

        $r3 = staticinvoke <android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap access$300(android.speech.tts.TextToSpeechService)>($r2);

        $r4 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$UtteranceSpeechItem: java.lang.Object getCallerIdentity()>();

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void dispatchOnError(java.lang.Object,java.lang.String,int)>($r4, r1, i0);

     label1:
        return;
    }

    public abstract java.lang.String getUtteranceId();

    java.lang.String getStringParam(android.os.Bundle, java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        android.os.Bundle r1;
        java.lang.String r2, r3, $r4;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        $r4 = r3;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>(r2, r3);

     label2:
        return $r4;
    }

    int getIntParam(android.os.Bundle, java.lang.String, int)
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        android.os.Bundle r1;
        java.lang.String r2;
        int i0, $i1;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>(r2, i0);

     label2:
        return $i1;
    }

    float getFloatParam(android.os.Bundle, java.lang.String, float)
    {
        android.speech.tts.TextToSpeechService$UtteranceSpeechItem r0;
        android.os.Bundle r1;
        java.lang.String r2;
        float f0, $f1;

        r0 := @this: android.speech.tts.TextToSpeechService$UtteranceSpeechItem;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        if r1 != null goto label1;

        $f1 = f0;

        goto label2;

     label1:
        $f1 = virtualinvoke r1.<android.os.Bundle: float getFloat(java.lang.String,float)>(r2, f0);

     label2:
        return $f1;
    }
}
