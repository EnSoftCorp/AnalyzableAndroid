public class android.media.AudioPort extends java.lang.Object
{
    public static final int ROLE_NONE;
    public static final int ROLE_SOURCE;
    public static final int ROLE_SINK;
    public static final int TYPE_NONE;
    public static final int TYPE_DEVICE;
    public static final int TYPE_SUBMIX;
    public static final int TYPE_SESSION;
    android.media.AudioHandle mHandle;
    private final int mRole;
    private final int[] mSamplingRates;
    private final int[] mChannelMasks;
    private final int[] mFormats;
    private final android.media.AudioGain[] mGains;
    private android.media.AudioPortConfig mActiveConfig;

    void <init>(android.media.AudioHandle, int, int[], int[], int[], android.media.AudioGain[])
    {
        android.media.AudioPort r0;
        android.media.AudioHandle r1;
        int i0;
        int[] r2, r3, r4;
        android.media.AudioGain[] r5;

        r0 := @this: android.media.AudioPort;

        r1 := @parameter0: android.media.AudioHandle;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        r4 := @parameter4: int[];

        r5 := @parameter5: android.media.AudioGain[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.AudioPort: android.media.AudioHandle mHandle> = r1;

        r0.<android.media.AudioPort: int mRole> = i0;

        r0.<android.media.AudioPort: int[] mSamplingRates> = r2;

        r0.<android.media.AudioPort: int[] mChannelMasks> = r3;

        r0.<android.media.AudioPort: int[] mFormats> = r4;

        r0.<android.media.AudioPort: android.media.AudioGain[] mGains> = r5;

        return;
    }

    android.media.AudioHandle handle()
    {
        android.media.AudioPort r0;
        android.media.AudioHandle $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: android.media.AudioHandle mHandle>;

        return $r1;
    }

    public int role()
    {
        android.media.AudioPort r0;
        int $i0;

        r0 := @this: android.media.AudioPort;

        $i0 = r0.<android.media.AudioPort: int mRole>;

        return $i0;
    }

    public int[] samplingRates()
    {
        android.media.AudioPort r0;
        int[] $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: int[] mSamplingRates>;

        return $r1;
    }

    public int[] channelMasks()
    {
        android.media.AudioPort r0;
        int[] $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: int[] mChannelMasks>;

        return $r1;
    }

    public int[] formats()
    {
        android.media.AudioPort r0;
        int[] $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: int[] mFormats>;

        return $r1;
    }

    public android.media.AudioGain[] gains()
    {
        android.media.AudioPort r0;
        android.media.AudioGain[] $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: android.media.AudioGain[] mGains>;

        return $r1;
    }

    android.media.AudioGain gain(int)
    {
        android.media.AudioPort r0;
        int i0, $i1;
        android.media.AudioGain[] $r1, $r2;
        android.media.AudioGain $r3;

        r0 := @this: android.media.AudioPort;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<android.media.AudioPort: android.media.AudioGain[] mGains>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<android.media.AudioPort: android.media.AudioGain[] mGains>;

        $r3 = $r2[i0];

        return $r3;
    }

    public android.media.AudioPortConfig buildConfig(int, int, int, android.media.AudioGainConfig)
    {
        android.media.AudioPort r0;
        int i0, i1, i2;
        android.media.AudioGainConfig r1;
        android.media.AudioPortConfig $r2;

        r0 := @this: android.media.AudioPort;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.media.AudioGainConfig;

        $r2 = new android.media.AudioPortConfig;

        specialinvoke $r2.<android.media.AudioPortConfig: void <init>(android.media.AudioPort,int,int,int,android.media.AudioGainConfig)>(r0, i0, i1, i2, r1);

        return $r2;
    }

    public android.media.AudioPortConfig activeConfig()
    {
        android.media.AudioPort r0;
        android.media.AudioPortConfig $r1;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: android.media.AudioPortConfig mActiveConfig>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.media.AudioPort r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        android.media.AudioHandle $r3, $r4;

        r0 := @this: android.media.AudioPort;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof android.media.AudioPort;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (android.media.AudioPort) r1;

        $r3 = r0.<android.media.AudioPort: android.media.AudioHandle mHandle>;

        $r4 = virtualinvoke r2.<android.media.AudioPort: android.media.AudioHandle handle()>();

        $z1 = virtualinvoke $r3.<android.media.AudioHandle: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        android.media.AudioPort r0;
        android.media.AudioHandle $r1;
        int $i0;

        r0 := @this: android.media.AudioPort;

        $r1 = r0.<android.media.AudioPort: android.media.AudioHandle mHandle>;

        $i0 = virtualinvoke $r1.<android.media.AudioHandle: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        android.media.AudioPort r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        android.media.AudioHandle $r3;
        int $i0;
        java.lang.String $r8;

        r0 := @this: android.media.AudioPort;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{mHandle:");

        $r3 = r0.<android.media.AudioPort: android.media.AudioHandle mHandle>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRole:");

        $i0 = r0.<android.media.AudioPort: int mRole>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <android.media.AudioPort: int TYPE_SESSION> = 3;

        <android.media.AudioPort: int TYPE_SUBMIX> = 2;

        <android.media.AudioPort: int TYPE_DEVICE> = 1;

        <android.media.AudioPort: int TYPE_NONE> = 0;

        <android.media.AudioPort: int ROLE_SINK> = 2;

        <android.media.AudioPort: int ROLE_SOURCE> = 1;

        <android.media.AudioPort: int ROLE_NONE> = 0;

        return;
    }
}
