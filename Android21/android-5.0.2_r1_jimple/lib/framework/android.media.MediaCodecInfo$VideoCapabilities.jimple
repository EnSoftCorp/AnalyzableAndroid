public final class android.media.MediaCodecInfo$VideoCapabilities extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.media.MediaCodecInfo$CodecCapabilities mParent;
    private android.util.Range mBitrateRange;
    private android.util.Range mHeightRange;
    private android.util.Range mWidthRange;
    private android.util.Range mBlockCountRange;
    private android.util.Range mHorizontalBlockRange;
    private android.util.Range mVerticalBlockRange;
    private android.util.Range mAspectRatioRange;
    private android.util.Range mBlockAspectRatioRange;
    private android.util.Range mBlocksPerSecondRange;
    private android.util.Range mFrameRateRange;
    private int mBlockWidth;
    private int mBlockHeight;
    private int mWidthAlignment;
    private int mHeightAlignment;
    private int mSmallerDimensionUpperLimit;

    public android.util.Range getBitrateRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange>;

        return $r1;
    }

    public android.util.Range getSupportedWidths()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        return $r1;
    }

    public android.util.Range getSupportedHeights()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        return $r1;
    }

    public int getWidthAlignment()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        return $i0;
    }

    public int getHeightAlignment()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        return $i0;
    }

    public int getSmallerDimensionUpperLimit()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        return $i0;
    }

    public android.util.Range getSupportedFrameRates()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        return $r1;
    }

    public android.util.Range getSupportedWidthsFor(int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.util.Range r1, $r2, $r5, $r8, $r12, $r16, $r21, $r24, r35, r36;
        java.lang.Integer $r3, $r7, $r13, $r17, $r18, $r25, $r26, $r27, $r31;
        boolean $z0;
        java.lang.IllegalArgumentException $r4, $r32, $r34, r37;
        java.lang.Comparable $r6, $r10, $r11, $r14, $r20, $r23;
        android.util.Rational $r9, $r15, $r19, $r22;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.lang.StringBuilder $r28, $r29, $r33;
        java.lang.String $r30;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

     label1:
        r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r2.<android.util.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label2;

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i5 = i0 % $i4;

        if $i5 == 0 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported height");

        throw $r4;

     label3:
        $i6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i1 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i6);

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r6 = virtualinvoke $r5.<android.util.Range: java.lang.Comparable getLower()>();

        $r7 = (java.lang.Integer) $r6;

        $i7 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i8 = staticinvoke <android.media.Utils: int divUp(int,int)>($i7, i1);

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r10 = virtualinvoke $r8.<android.util.Range: java.lang.Comparable getLower()>();

        $r9 = (android.util.Rational) $r10;

        $d1 = virtualinvoke $r9.<android.util.Rational: double doubleValue()>();

        $d0 = (double) i1;

        $d3 = $d1 * $d0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $i9 = (int) $d2;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r11 = virtualinvoke $r12.<android.util.Range: java.lang.Comparable getUpper()>();

        $r13 = (java.lang.Integer) $r11;

        $i10 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i11 = $i10 / i1;

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r14 = virtualinvoke $r16.<android.util.Range: java.lang.Comparable getUpper()>();

        $r15 = (android.util.Rational) $r14;

        $d5 = virtualinvoke $r15.<android.util.Rational: double doubleValue()>();

        $d6 = (double) i1;

        $d4 = $d5 * $d6;

        $i12 = (int) $d4;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i12);

        $i13 = i2 - 1;

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i17 = $i13 * $i15;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i18 = $i17 + $i14;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i20 = i3 * $i16;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        r35 = virtualinvoke r1.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r17, $r18);

        $i19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if i0 <= $i19 goto label4;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        r35 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r27, $r31);

     label4:
        $r21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r20 = virtualinvoke $r21.<android.util.Range: java.lang.Comparable getLower()>();

        $r19 = (android.util.Rational) $r20;

        $d7 = virtualinvoke $r19.<android.util.Rational: double doubleValue()>();

        $d10 = (double) i0;

        $d9 = $d7 * $d10;

        $d8 = staticinvoke <java.lang.Math: double ceil(double)>($d9);

        $i21 = (int) $d8;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r23 = virtualinvoke $r24.<android.util.Range: java.lang.Comparable getUpper()>();

        $r22 = (android.util.Rational) $r23;

        $d11 = virtualinvoke $r22.<android.util.Rational: double doubleValue()>();

        $d12 = (double) i0;

        $d13 = $d11 * $d12;

        $i23 = (int) $d13;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        r36 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r25, $r26);

     label5:
        return r36;

     label6:
        $r32 := @caughtexception;

        r37 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get supported widths for ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoCapabilities", $r30, r37);

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported height");

        throw $r34;

        catch java.lang.IllegalArgumentException from label1 to label5 with label6;
    }

    public android.util.Range getSupportedHeightsFor(int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.util.Range r1, $r2, $r5, $r8, $r12, $r15, $r21, $r23, r35, r36;
        java.lang.Integer $r3, $r7, $r13, $r17, $r18, $r24, $r25, $r26, $r31;
        boolean $z0;
        java.lang.IllegalArgumentException $r4, $r32, $r34, r37;
        java.lang.Comparable $r6, $r9, $r11, $r14, $r20, $r22;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        android.util.Rational $r10, $r16, $r19, $r27;
        java.lang.StringBuilder $r28, $r29, $r33;
        java.lang.String $r30;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

     label1:
        r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r2.<android.util.Range: boolean contains(java.lang.Comparable)>($r3);

        if $z0 == 0 goto label2;

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i5 = i0 % $i4;

        if $i5 == 0 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported width");

        throw $r4;

     label3:
        $i6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i1 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i6);

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r6 = virtualinvoke $r5.<android.util.Range: java.lang.Comparable getLower()>();

        $r7 = (java.lang.Integer) $r6;

        $i7 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i8 = staticinvoke <android.media.Utils: int divUp(int,int)>($i7, i1);

        $d0 = (double) i1;

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r9 = virtualinvoke $r8.<android.util.Range: java.lang.Comparable getUpper()>();

        $r10 = (android.util.Rational) $r9;

        $d1 = virtualinvoke $r10.<android.util.Rational: double doubleValue()>();

        $d3 = $d0 / $d1;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $i9 = (int) $d2;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r11 = virtualinvoke $r12.<android.util.Range: java.lang.Comparable getUpper()>();

        $r13 = (java.lang.Integer) $r11;

        $i10 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i11 = $i10 / i1;

        $d4 = (double) i1;

        $r15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r14 = virtualinvoke $r15.<android.util.Range: java.lang.Comparable getLower()>();

        $r16 = (android.util.Rational) $r14;

        $d6 = virtualinvoke $r16.<android.util.Rational: double doubleValue()>();

        $d5 = $d4 / $d6;

        $i12 = (int) $d5;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i12);

        $i13 = i2 - 1;

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i17 = $i13 * $i15;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i18 = $i17 + $i14;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i20 = i3 * $i16;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        r35 = virtualinvoke r1.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r17, $r18);

        $i19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if i0 <= $i19 goto label4;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        r35 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r26, $r31);

     label4:
        $d7 = (double) i0;

        $r21 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r20 = virtualinvoke $r21.<android.util.Range: java.lang.Comparable getUpper()>();

        $r19 = (android.util.Rational) $r20;

        $d10 = virtualinvoke $r19.<android.util.Rational: double doubleValue()>();

        $d9 = $d7 / $d10;

        $d8 = staticinvoke <java.lang.Math: double ceil(double)>($d9);

        $i21 = (int) $d8;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $d11 = (double) i0;

        $r23 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r22 = virtualinvoke $r23.<android.util.Range: java.lang.Comparable getLower()>();

        $r27 = (android.util.Rational) $r22;

        $d12 = virtualinvoke $r27.<android.util.Rational: double doubleValue()>();

        $d13 = $d11 / $d12;

        $i23 = (int) $d13;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        r36 = virtualinvoke r35.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r24, $r25);

     label5:
        return r36;

     label6:
        $r32 := @caughtexception;

        r37 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get supported heights for ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoCapabilities", $r30, r37);

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported width");

        throw $r34;

        catch java.lang.IllegalArgumentException from label1 to label5 with label6;
    }

    public android.util.Range getSupportedFrameRatesFor(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.lang.Integer $r2, $r3, $r8, $r15;
        boolean $z0;
        android.util.Range $r4, $r7, $r12, $r16, $r18;
        java.lang.Comparable $r5, $r9, $r11, $r14;
        java.lang.Long $r6, $r13;
        long $l7, $l9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.lang.Double $r10, $r17;
        java.lang.IllegalArgumentException $r19;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Double)>($r2, $r3, null);

        if $z0 != 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unsupported size");

        throw $r19;

     label1:
        $i3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i4 = staticinvoke <android.media.Utils: int divUp(int,int)>(i0, $i3);

        $i5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i6 = staticinvoke <android.media.Utils: int divUp(int,int)>(i1, $i5);

        i2 = $i4 * $i6;

        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r5 = virtualinvoke $r4.<android.util.Range: java.lang.Comparable getLower()>();

        $r6 = (java.lang.Long) $r5;

        $l7 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $d0 = (double) $l7;

        $d1 = (double) i2;

        $d2 = $d0 / $d1;

        $r7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r9 = virtualinvoke $r7.<android.util.Range: java.lang.Comparable getLower()>();

        $r8 = (java.lang.Integer) $r9;

        $i8 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $d3 = (double) $i8;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d2, $d3);

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r11 = virtualinvoke $r12.<android.util.Range: java.lang.Comparable getUpper()>();

        $r13 = (java.lang.Long) $r11;

        $l9 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $d5 = (double) $l9;

        $d6 = (double) i2;

        $d7 = $d5 / $d6;

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r14 = virtualinvoke $r16.<android.util.Range: java.lang.Comparable getUpper()>();

        $r15 = (java.lang.Integer) $r14;

        $i10 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $d9 = (double) $i10;

        $d8 = staticinvoke <java.lang.Math: double min(double,double)>($d7, $d9);

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        $r18 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r10, $r17);

        return $r18;
    }

    public boolean areSizeAndRateSupported(int, int, double)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1;
        double d0;
        java.lang.Integer $r1, $r2;
        java.lang.Double $r3;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Double)>($r1, $r2, $r3);

        return $z0;
    }

    public boolean isSizeSupported(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1;
        java.lang.Integer $r1, $r2;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Double)>($r1, $r2, null);

        return $z0;
    }

    private boolean supports(java.lang.Integer, java.lang.Integer, java.lang.Double)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.lang.Integer r1, r2, $r7;
        java.lang.Double r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        double d0, $d1, $d2, $d3;
        android.util.Range $r4, $r5, $r6, $r8, $r11, $r12, $r13, $r14, $r15;
        android.util.Rational $r9, $r10;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: java.lang.Integer;

        r2 := @parameter1: java.lang.Integer;

        r3 := @parameter2: java.lang.Double;

        z0 = 1;

        if z0 == 0 goto label03;

        if r1 == null goto label03;

        $r15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $z8 = virtualinvoke $r15.<android.util.Range: boolean contains(java.lang.Comparable)>(r1);

        if $z8 == 0 goto label01;

        $i17 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i18 = $i17 % $i16;

        if $i18 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z0 = $z9;

     label03:
        if z0 == 0 goto label06;

        if r2 == null goto label06;

        $r13 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $z6 = virtualinvoke $r13.<android.util.Range: boolean contains(java.lang.Comparable)>(r2);

        if $z6 == 0 goto label04;

        $i14 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i13 = $i14 % $i15;

        if $i13 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z0 = $z7;

     label06:
        if z0 == 0 goto label07;

        if r3 == null goto label07;

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $d3 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $r14 = staticinvoke <android.media.Utils: android.util.Range intRangeFor(double)>($d3);

        z0 = virtualinvoke $r12.<android.util.Range: boolean contains(android.util.Range)>($r14);

     label07:
        if z0 == 0 goto label12;

        if r2 == null goto label12;

        if r1 == null goto label12;

        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        if $i5 > $i6 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z10 = $z5;

        $i7 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i0 = staticinvoke <android.media.Utils: int divUp(int,int)>($i7, $i8);

        $i9 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i1 = staticinvoke <android.media.Utils: int divUp(int,int)>($i9, $i10);

        i2 = i0 * i1;

        if z10 == 0 goto label10;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $z1 = virtualinvoke $r6.<android.util.Range: boolean contains(java.lang.Comparable)>($r7);

        if $z1 == 0 goto label10;

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r9 = new android.util.Rational;

        specialinvoke $r9.<android.util.Rational: void <init>(int,int)>(i0, i1);

        $z2 = virtualinvoke $r8.<android.util.Range: boolean contains(java.lang.Comparable)>($r9);

        if $z2 == 0 goto label10;

        $r11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r10 = new android.util.Rational;

        $i12 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i11 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        specialinvoke $r10.<android.util.Rational: void <init>(int,int)>($i12, $i11);

        $z3 = virtualinvoke $r11.<android.util.Range: boolean contains(java.lang.Comparable)>($r10);

        if $z3 == 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        z0 = $z4;

        if z0 == 0 goto label12;

        if r3 == null goto label12;

        $d2 = (double) i2;

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        d0 = $d2 * $d1;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r4 = staticinvoke <android.media.Utils: android.util.Range longRangeFor(double)>(d0);

        z0 = virtualinvoke $r5.<android.util.Range: boolean contains(android.util.Range)>($r4);

     label12:
        return z0;
    }

    public boolean supportsFormat(android.media.MediaFormat)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.media.MediaFormat r1;
        java.util.Map r2;
        java.lang.Integer r3, r4;
        java.lang.Double r5;
        java.lang.Object $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: android.media.MediaFormat;

        r2 = virtualinvoke r1.<android.media.MediaFormat: java.util.Map getMap()>();

        $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("width");

        r3 = (java.lang.Integer) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("height");

        r4 = (java.lang.Integer) $r7;

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("frame-rate");

        r5 = (java.lang.Double) $r8;

        $z0 = specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: boolean supports(java.lang.Integer,java.lang.Integer,java.lang.Double)>(r3, r4, r5);

        return $z0;
    }

    private void <init>()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.media.MediaCodecInfo$VideoCapabilities create(android.media.MediaFormat, android.media.MediaCodecInfo$CodecCapabilities)
    {
        android.media.MediaFormat r0;
        android.media.MediaCodecInfo$CodecCapabilities r1;
        android.media.MediaCodecInfo$VideoCapabilities r2, $r3;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: android.media.MediaCodecInfo$CodecCapabilities;

        $r3 = new android.media.MediaCodecInfo$VideoCapabilities;

        specialinvoke $r3.<android.media.MediaCodecInfo$VideoCapabilities: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.media.MediaCodecInfo$VideoCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo$CodecCapabilities)>(r0, r1);

        return r2;
    }

    public void init(android.media.MediaFormat, android.media.MediaCodecInfo$CodecCapabilities)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.media.MediaFormat r1;
        android.media.MediaCodecInfo$CodecCapabilities r2;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: android.media.MediaFormat;

        r2 := @parameter1: android.media.MediaCodecInfo$CodecCapabilities;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent> = r2;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void initWithPlatformLimits()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyLevelLimits()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void parseFromInfo(android.media.MediaFormat)>(r1);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void updateLimits()>();

        return;
    }

    public android.util.Size getBlockSize()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Size $r1;
        int $i0, $i1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = new android.util.Size;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke $r1.<android.util.Size: void <init>(int,int)>($i1, $i0);

        return $r1;
    }

    public android.util.Range getBlockCountRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        return $r1;
    }

    public android.util.Range getBlocksPerSecondRange()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        return $r1;
    }

    public android.util.Range getAspectRatioRange(boolean)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        boolean z0;
        android.util.Range $r1;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        goto label2;

     label1:
        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

     label2:
        return $r1;
    }

    private void initWithPlatformLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        java.lang.Integer $r1, $r2, $r15;
        android.util.Range $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.Comparable $r14;
        int $i0;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r3 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r1, $r2);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r3;

        $r4 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r4;

        $r5 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r5;

        $r6 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$200()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r6;

        $r7 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r7;

        $r8 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r8;

        $r9 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r9;

        $r10 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r10;

        $r11 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r11;

        $r12 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r12;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth> = 2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight> = 2;

        $r13 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        $r14 = virtualinvoke $r13.<android.util.Range: java.lang.Comparable getUpper()>();

        $r15 = (java.lang.Integer) $r14;

        $i0 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i0;

        return;
    }

    private void parseFromInfo(android.media.MediaFormat)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        android.media.MediaFormat r1;
        java.util.Map r2;
        android.util.Size r3, r4, $r9, $r10, $r72, $r75, $r79, $r81, r96, r97;
        android.util.Range r5, r6, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r63, $r67, $r68, $r69, $r91, r98, r99, r100, r101, r102;
        java.lang.Object r7, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r64, $r73, $r76, $r77;
        android.util.Pair r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        boolean $z0;
        java.lang.Integer $r16, $r51, $r60, $r62, $r66, $r71, $r74, $r78, $r80;
        android.media.MediaCodecInfo$CodecCapabilities $r20;
        long $l29, $l41;
        java.lang.Comparable $r52, $r61, $r65, $r70;
        java.lang.IllegalArgumentException $r82, $r89;
        java.lang.StringBuilder $r83, $r85, $r86, $r87, $r88, $r90, $r92, $r93, $r95;
        java.lang.String $r84, $r94;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        r1 := @parameter0: android.media.MediaFormat;

        r2 = virtualinvoke r1.<android.media.MediaFormat: java.util.Map getMap()>();

        $r9 = new android.util.Size;

        $i1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        specialinvoke $r9.<android.util.Size: void <init>(int,int)>($i1, $i0);

        r3 = $r9;

        $r10 = new android.util.Size;

        $i2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i3 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        specialinvoke $r10.<android.util.Size: void <init>(int,int)>($i2, $i3);

        r4 = $r10;

        r5 = null;

        r6 = null;

        $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-size");

        r96 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r11, r3);

        $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("alignment");

        r97 = staticinvoke <android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>($r12, r4);

        $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-count-range");

        r98 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r13, null);

        $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("blocks-per-second-range");

        r99 = staticinvoke <android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>($r14, null);

        r7 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("size-range");

        r8 = staticinvoke <android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>(r7);

        if r8 == null goto label04;

     label01:
        $r64 = r8.<android.util.Pair: java.lang.Object first>;

        $r79 = (android.util.Size) $r64;

        $i64 = virtualinvoke $r79.<android.util.Size: int getWidth()>();

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i64);

        $r77 = r8.<android.util.Pair: java.lang.Object second>;

        $r81 = (android.util.Size) $r77;

        $i65 = virtualinvoke $r81.<android.util.Size: int getWidth()>();

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i65);

        r5 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r78, $r80);

        $r73 = r8.<android.util.Pair: java.lang.Object first>;

        $r72 = (android.util.Size) $r73;

        $i62 = virtualinvoke $r72.<android.util.Size: int getHeight()>();

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i62);

        $r76 = r8.<android.util.Pair: java.lang.Object second>;

        $r75 = (android.util.Size) $r76;

        $i63 = virtualinvoke $r75.<android.util.Size: int getHeight()>();

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i63);

        r6 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r71, $r74);

     label02:
        goto label04;

     label03:
        $r82 := @caughtexception;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse size range \'");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r95 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r94);

        r5 = null;

        r6 = null;

     label04:
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("feature-can-swap-width-height");

        $z0 = virtualinvoke $r16.<java.lang.Integer: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label06;

        if r5 == null goto label05;

        $r70 = virtualinvoke r5.<android.util.Range: java.lang.Comparable getUpper()>();

        $r60 = (java.lang.Integer) $r70;

        $i57 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

        $r61 = virtualinvoke r6.<android.util.Range: java.lang.Comparable getUpper()>();

        $r62 = (java.lang.Integer) $r61;

        $i58 = virtualinvoke $r62.<java.lang.Integer: int intValue()>();

        $i59 = staticinvoke <java.lang.Math: int min(int,int)>($i57, $i58);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i59;

        $r63 = virtualinvoke r5.<android.util.Range: android.util.Range extend(android.util.Range)>(r6);

        r6 = $r63;

        r5 = $r63;

        goto label06;

     label05:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", "feature can-swap-width-height is best used with size-range");

        $r50 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r52 = virtualinvoke $r50.<android.util.Range: java.lang.Comparable getUpper()>();

        $r51 = (java.lang.Integer) $r52;

        $i54 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        $r53 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r65 = virtualinvoke $r53.<android.util.Range: java.lang.Comparable getUpper()>();

        $r66 = (java.lang.Integer) $r65;

        $i60 = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        $i61 = staticinvoke <java.lang.Math: int min(int,int)>($i54, $i60);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i61;

        $r68 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r67 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r69 = virtualinvoke $r68.<android.util.Range: android.util.Range extend(android.util.Range)>($r67);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r69;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r69;

     label06:
        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("block-aspect-ratio-range");

        r100 = staticinvoke <android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>($r15, null);

        $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("pixel-aspect-ratio-range");

        r101 = staticinvoke <android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>($r19, null);

        $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("frame-rate-range");

        r102 = staticinvoke <android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>($r18, null);

        if r102 == null goto label10;

     label07:
        $r49 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$200()>();

        r102 = virtualinvoke r102.<android.util.Range: android.util.Range intersect(android.util.Range)>($r49);

     label08:
        goto label10;

     label09:
        $r89 := @caughtexception;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame rate range (");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r102);

        $r90 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of limits: ");

        $r91 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$200()>();

        $r83 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r91);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r84);

        r102 = null;

     label10:
        $i5 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>($i5, "block-size width must be power of two");

        $i4 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>($i4, "block-size height must be power of two");

        $i7 = virtualinvoke r97.<android.util.Size: int getWidth()>();

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>($i7, "alignment width must be power of two");

        $i6 = virtualinvoke r97.<android.util.Size: int getHeight()>();

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>($i6, "alignment height must be power of two");

        $i10 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i9 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i8 = virtualinvoke r97.<android.util.Size: int getWidth()>();

        $i13 = virtualinvoke r97.<android.util.Size: int getHeight()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(2147483647, 2147483647, 2147483647, 9223372036854775807L, $i10, $i9, $i8, $i13);

        $r20 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        $i12 = $r20.<android.media.MediaCodecInfo$CodecCapabilities: int mError>;

        $i11 = $i12 & 2;

        if $i11 == 0 goto label17;

        if r5 == null goto label11;

        $r59 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        $r58 = virtualinvoke $r59.<android.util.Range: android.util.Range intersect(android.util.Range)>(r5);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r58;

     label11:
        if r6 == null goto label12;

        $r57 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$100()>();

        $r56 = virtualinvoke $r57.<android.util.Range: android.util.Range intersect(android.util.Range)>(r6);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r56;

     label12:
        if r98 == null goto label13;

        $r46 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        $i52 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i53 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i51 = $i52 * $i53;

        $i50 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i49 = $i51 / $i50;

        $i56 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i55 = $i49 / $i56;

        $r55 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r98, $i55);

        $r54 = virtualinvoke $r46.<android.util.Range: android.util.Range intersect(android.util.Range)>($r55);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r54;

     label13:
        if r99 == null goto label14;

        $r44 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        $i47 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i48 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i46 = $i47 * $i48;

        $i45 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i44 = $i46 / $i45;

        $i43 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i42 = $i44 / $i43;

        $l41 = (long) $i42;

        $r48 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r99, $l41);

        $r47 = virtualinvoke $r44.<android.util.Range: android.util.Range intersect(android.util.Range)>($r48);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r47;

     label14:
        if r101 == null goto label15;

        $r36 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        $i35 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i39 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i40 = $i35 / $i39;

        $i37 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i38 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i36 = $i37 / $i38;

        $r45 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r101, $i40, $i36);

        $r43 = virtualinvoke $r36.<android.util.Range: android.util.Range intersect(android.util.Range)>($r45);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r43;

     label15:
        if r100 == null goto label16;

        $r37 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        $r38 = virtualinvoke $r37.<android.util.Range: android.util.Range intersect(android.util.Range)>(r100);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r38;

     label16:
        if r102 == null goto label24;

        $r39 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$200()>();

        $r40 = virtualinvoke $r39.<android.util.Range: android.util.Range intersect(android.util.Range)>(r102);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r40;

        goto label24;

     label17:
        if r5 == null goto label18;

        $r41 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r42 = virtualinvoke $r41.<android.util.Range: android.util.Range intersect(android.util.Range)>(r5);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r42;

     label18:
        if r6 == null goto label19;

        $r35 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r34 = virtualinvoke $r35.<android.util.Range: android.util.Range intersect(android.util.Range)>(r6);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r34;

     label19:
        if r98 == null goto label20;

        $r29 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $i26 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i27 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i28 = $i26 * $i27;

        $i32 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i31 = $i28 / $i32;

        $i34 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i33 = $i31 / $i34;

        $r33 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r98, $i33);

        $r32 = virtualinvoke $r29.<android.util.Range: android.util.Range intersect(android.util.Range)>($r33);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r32;

     label20:
        if r99 == null goto label21;

        $r28 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $i25 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i20 = $i25 * $i24;

        $i21 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i22 = $i20 / $i21;

        $i23 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i30 = $i22 / $i23;

        $l29 = (long) $i30;

        $r31 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r99, $l29);

        $r30 = virtualinvoke $r28.<android.util.Range: android.util.Range intersect(android.util.Range)>($r31);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r30;

     label21:
        if r101 == null goto label22;

        $r26 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $i17 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i18 = virtualinvoke r96.<android.util.Size: int getHeight()>();

        $i19 = $i17 / $i18;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i15 = virtualinvoke r96.<android.util.Size: int getWidth()>();

        $i16 = $i14 / $i15;

        $r25 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r101, $i19, $i16);

        $r27 = virtualinvoke $r26.<android.util.Range: android.util.Range intersect(android.util.Range)>($r25);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r27;

     label22:
        if r100 == null goto label23;

        $r22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r21 = virtualinvoke $r22.<android.util.Range: android.util.Range intersect(android.util.Range)>(r100);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r21;

     label23:
        if r102 == null goto label24;

        $r24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r23 = virtualinvoke $r24.<android.util.Range: android.util.Range intersect(android.util.Range)>(r102);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r23;

     label24:
        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void updateLimits()>();

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    private void applyBlockLimits(int, int, android.util.Range, android.util.Range, android.util.Range)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        android.util.Range r1, r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        long $l15, $l18;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.util.Range;

        r2 := @parameter3: android.util.Range;

        r3 := @parameter4: android.util.Range;

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>(i0, "blockWidth must be a power of two");

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>(i1, "blockHeight must be a power of two");

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i7);

        $i8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i8);

        $i11 = i2 * i3;

        $i9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i13 = $i11 / $i9;

        $i10 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        i4 = $i13 / $i10;

        if i4 == 1 goto label1;

        $r11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r10 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r11, i4);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r10;

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $l18 = (long) i4;

        $r13 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>($r12, $l18);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r13;

        $r14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $i19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i22 = i3 / $i19;

        $i20 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i21 = i2 / $i20;

        $r15 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>($r14, $i22, $i21);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r15;

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $i23 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i24 = i2 / $i23;

        $r17 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r16, $i24);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r17;

        $r19 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $i26 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i25 = i3 / $i26;

        $r18 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r19, $i25);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r18;

     label1:
        $i12 = i2 * i3;

        $i14 = $i12 / i0;

        i27 = $i14 / i1;

        if i27 == 1 goto label2;

        r1 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>(r1, i27);

        $l15 = (long) i27;

        r2 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,long)>(r2, $l15);

        $i16 = i3 / i1;

        $i17 = i2 / i0;

        r3 = staticinvoke <android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>(r3, $i16, $i17);

     label2:
        $r4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r6 = virtualinvoke $r4.<android.util.Range: android.util.Range intersect(android.util.Range)>(r1);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r6;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r8 = virtualinvoke $r5.<android.util.Range: android.util.Range intersect(android.util.Range)>(r2);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r8;

        $r7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r9 = virtualinvoke $r7.<android.util.Range: android.util.Range intersect(android.util.Range)>(r3);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r9;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth> = i2;

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight> = i3;

        return;
    }

    private void applyAlignment(int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.util.Range $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>(i0, "widthAlignment must be a power of two");

        staticinvoke <android.media.MediaCodecInfo: int access$500(int,java.lang.String)>(i1, "heightAlignment must be a power of two");

        $i4 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        if i0 > $i4 goto label1;

        $i15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        if i1 <= $i15 goto label2;

     label1:
        $i5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i5);

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i7);

        $r1 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$000()>();

        $r2 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$300()>();

        $r3 = staticinvoke <android.media.MediaCodecInfo: android.util.Range access$400()>();

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyBlockLimits(int,int,android.util.Range,android.util.Range,android.util.Range)>($i6, $i8, $r1, $r2, $r3);

     label2:
        $i9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i9);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment> = $i10;

        $i11 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i11);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment> = $i13;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $i12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $r4 = staticinvoke <android.media.Utils: android.util.Range alignRange(android.util.Range,int)>($r5, $i12);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r4;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $i14 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $r7 = staticinvoke <android.media.Utils: android.util.Range alignRange(android.util.Range,int)>($r6, $i14);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r7;

        return;
    }

    private void updateLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i54, $i55, $i57, $i62, $i63, $i66, $i67;
        android.util.Range $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r12, $r16, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r36, $r39, $r40, $r43, $r44, $r45, $r47, $r49, $r55, $r56, $r57, $r62, $r63, $r66, $r69, $r71, $r75, $r76, $r77, $r81, $r82, $r83, $r89, $r90, $r92, $r95, $r99, $r101, $r104, $r105, $r106, $r110, $r114, $r115, $r116, $r118, $r123, $r129, $r134, $r137, $r140, $r141, $r143, $r144, $r147;
        java.lang.Comparable $r7, $r10, $r15, $r18, $r29, $r31, $r33, $r38, $r42, $r46, $r50, $r58, $r61, $r65, $r68, $r73, $r78, $r86, $r88, $r94, $r98, $r102, $r107, $r111, $r113, $r120, $r122, $r125, $r127, $r130, $r133, $r136, $r145, $r148;
        java.lang.Integer $r8, $r11, $r13, $r14, $r17, $r20, $r30, $r32, $r34, $r35, $r37, $r41, $r48, $r51, $r52, $r53, $r54, $r59, $r60, $r67, $r70, $r74, $r79, $r80, $r84, $r85, $r87, $r91, $r96, $r97, $r100, $r103, $r108, $r112, $r117, $r119, $r121, $r124, $r126, $r128, $r132, $r135, $r142, $r146;
        android.util.Rational $r64, $r72, $r93, $r109;
        long $l48, $l53, $l56, $l58, $l59, $l60, $l61, $l64, $l65, $l68;
        java.lang.Long $r131, $r138, $r139, $r149;
        double $d0, $d1, $d2;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        $r2 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r1 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $i0 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $r3 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r1, $i0);

        $r4 = virtualinvoke $r2.<android.util.Range: android.util.Range intersect(android.util.Range)>($r3);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r4;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r7 = virtualinvoke $r5.<android.util.Range: java.lang.Comparable getLower()>();

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r10 = virtualinvoke $r9.<android.util.Range: java.lang.Comparable getUpper()>();

        $r11 = (java.lang.Integer) $r10;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i3 = $i1 / $i2;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r15 = virtualinvoke $r12.<android.util.Range: java.lang.Comparable getUpper()>();

        $r14 = (java.lang.Integer) $r15;

        $i4 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r16 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r18 = virtualinvoke $r16.<android.util.Range: java.lang.Comparable getLower()>();

        $r17 = (java.lang.Integer) $r18;

        $i6 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $i5 = $i4 / $i6;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r19 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r13, $r20);

        $r21 = virtualinvoke $r6.<android.util.Range: android.util.Range intersect(android.util.Range)>($r19);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r21;

        $r22 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r23 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $i7 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $r26 = staticinvoke <android.media.Utils: android.util.Range factorRange(android.util.Range,int)>($r23, $i7);

        $r27 = virtualinvoke $r22.<android.util.Range: android.util.Range intersect(android.util.Range)>($r26);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r27;

        $r25 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r24 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r29 = virtualinvoke $r24.<android.util.Range: java.lang.Comparable getLower()>();

        $r30 = (java.lang.Integer) $r29;

        $i8 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        $r28 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r31 = virtualinvoke $r28.<android.util.Range: java.lang.Comparable getUpper()>();

        $r32 = (java.lang.Integer) $r31;

        $i9 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

        $i10 = $i8 / $i9;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r36 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r33 = virtualinvoke $r36.<android.util.Range: java.lang.Comparable getUpper()>();

        $r34 = (java.lang.Integer) $r33;

        $i11 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        $r39 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r38 = virtualinvoke $r39.<android.util.Range: java.lang.Comparable getLower()>();

        $r37 = (java.lang.Integer) $r38;

        $i13 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        $i12 = $i11 / $i13;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r40 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r35, $r41);

        $r45 = virtualinvoke $r25.<android.util.Range: android.util.Range intersect(android.util.Range)>($r40);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r45;

        $r43 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r44 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r42 = virtualinvoke $r44.<android.util.Range: java.lang.Comparable getLower()>();

        $r48 = (java.lang.Integer) $r42;

        $i14 = virtualinvoke $r48.<java.lang.Integer: int intValue()>();

        $r47 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r46 = virtualinvoke $r47.<android.util.Range: java.lang.Comparable getLower()>();

        $r52 = (java.lang.Integer) $r46;

        $i16 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        $i17 = $i14 * $i16;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r49 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r50 = virtualinvoke $r49.<android.util.Range: java.lang.Comparable getUpper()>();

        $r51 = (java.lang.Integer) $r50;

        $i15 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        $r57 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r58 = virtualinvoke $r57.<android.util.Range: java.lang.Comparable getUpper()>();

        $r59 = (java.lang.Integer) $r58;

        $i19 = virtualinvoke $r59.<java.lang.Integer: int intValue()>();

        $i18 = $i15 * $i19;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r55 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r53, $r54);

        $r56 = virtualinvoke $r43.<android.util.Range: android.util.Range intersect(android.util.Range)>($r55);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange> = $r56;

        $r66 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange>;

        $r64 = new android.util.Rational;

        $r63 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r65 = virtualinvoke $r63.<android.util.Range: java.lang.Comparable getLower()>();

        $r60 = (java.lang.Integer) $r65;

        $i20 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

        $r62 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r61 = virtualinvoke $r62.<android.util.Range: java.lang.Comparable getUpper()>();

        $r70 = (java.lang.Integer) $r61;

        $i22 = virtualinvoke $r70.<java.lang.Integer: int intValue()>();

        specialinvoke $r64.<android.util.Rational: void <init>(int,int)>($i20, $i22);

        $r72 = new android.util.Rational;

        $r71 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r68 = virtualinvoke $r71.<android.util.Range: java.lang.Comparable getUpper()>();

        $r67 = (java.lang.Integer) $r68;

        $i21 = virtualinvoke $r67.<java.lang.Integer: int intValue()>();

        $r69 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r78 = virtualinvoke $r69.<android.util.Range: java.lang.Comparable getLower()>();

        $r79 = (java.lang.Integer) $r78;

        $i23 = virtualinvoke $r79.<java.lang.Integer: int intValue()>();

        specialinvoke $r72.<android.util.Rational: void <init>(int,int)>($i21, $i23);

        $r77 = virtualinvoke $r66.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r64, $r72);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockAspectRatioRange> = $r77;

        $r76 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r75 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r73 = virtualinvoke $r75.<android.util.Range: java.lang.Comparable getLower()>();

        $r74 = (java.lang.Integer) $r73;

        $i28 = virtualinvoke $r74.<java.lang.Integer: int intValue()>();

        $i26 = $i28 - 1;

        $i29 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i24 = $i26 * $i29;

        $i27 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mWidthAlignment>;

        $i25 = $i24 + $i27;

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r81 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r86 = virtualinvoke $r81.<android.util.Range: java.lang.Comparable getUpper()>();

        $r85 = (java.lang.Integer) $r86;

        $i32 = virtualinvoke $r85.<java.lang.Integer: int intValue()>();

        $i31 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i30 = $i32 * $i31;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i30);

        $r83 = virtualinvoke $r76.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r80, $r84);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange> = $r83;

        $r89 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r82 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r88 = virtualinvoke $r82.<android.util.Range: java.lang.Comparable getLower()>();

        $r87 = (java.lang.Integer) $r88;

        $i37 = virtualinvoke $r87.<java.lang.Integer: int intValue()>();

        $i35 = $i37 - 1;

        $i36 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i33 = $i35 * $i36;

        $i34 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mHeightAlignment>;

        $i39 = $i33 + $i34;

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i39);

        $r99 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r98 = virtualinvoke $r99.<android.util.Range: java.lang.Comparable getUpper()>();

        $r100 = (java.lang.Integer) $r98;

        $i40 = virtualinvoke $r100.<java.lang.Integer: int intValue()>();

        $i42 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i41 = $i40 * $i42;

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        $r90 = virtualinvoke $r89.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r97, $r91);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange> = $r90;

        $r95 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange>;

        $r93 = new android.util.Rational;

        $r92 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r94 = virtualinvoke $r92.<android.util.Range: java.lang.Comparable getLower()>();

        $r96 = (java.lang.Integer) $r94;

        $i38 = virtualinvoke $r96.<java.lang.Integer: int intValue()>();

        $r106 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r107 = virtualinvoke $r106.<android.util.Range: java.lang.Comparable getUpper()>();

        $r108 = (java.lang.Integer) $r107;

        $i46 = virtualinvoke $r108.<java.lang.Integer: int intValue()>();

        specialinvoke $r93.<android.util.Rational: void <init>(int,int)>($i38, $i46);

        $r109 = new android.util.Rational;

        $r110 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r111 = virtualinvoke $r110.<android.util.Range: java.lang.Comparable getUpper()>();

        $r112 = (java.lang.Integer) $r111;

        $i43 = virtualinvoke $r112.<java.lang.Integer: int intValue()>();

        $r101 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r102 = virtualinvoke $r101.<android.util.Range: java.lang.Comparable getLower()>();

        $r103 = (java.lang.Integer) $r102;

        $i44 = virtualinvoke $r103.<java.lang.Integer: int intValue()>();

        specialinvoke $r109.<android.util.Rational: void <init>(int,int)>($i43, $i44);

        $r104 = virtualinvoke $r95.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r93, $r109);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mAspectRatioRange> = $r104;

        $i45 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit>;

        $r105 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mWidthRange>;

        $r120 = virtualinvoke $r105.<android.util.Range: java.lang.Comparable getUpper()>();

        $r119 = (java.lang.Integer) $r120;

        $i50 = virtualinvoke $r119.<java.lang.Integer: int intValue()>();

        $r118 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHeightRange>;

        $r122 = virtualinvoke $r118.<android.util.Range: java.lang.Comparable getUpper()>();

        $r121 = (java.lang.Integer) $r122;

        $i52 = virtualinvoke $r121.<java.lang.Integer: int intValue()>();

        $i51 = staticinvoke <java.lang.Math: int min(int,int)>($i50, $i52);

        $i47 = staticinvoke <java.lang.Math: int min(int,int)>($i45, $i51);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: int mSmallerDimensionUpperLimit> = $i47;

        $r114 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r115 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r113 = virtualinvoke $r115.<android.util.Range: java.lang.Comparable getLower()>();

        $r117 = (java.lang.Integer) $r113;

        $i49 = virtualinvoke $r117.<java.lang.Integer: int intValue()>();

        $l48 = (long) $i49;

        $r116 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r127 = virtualinvoke $r116.<android.util.Range: java.lang.Comparable getLower()>();

        $r128 = (java.lang.Integer) $r127;

        $i57 = virtualinvoke $r128.<java.lang.Integer: int intValue()>();

        $l58 = (long) $i57;

        $l59 = $l48 * $l58;

        $r131 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l59);

        $r129 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r130 = virtualinvoke $r129.<android.util.Range: java.lang.Comparable getUpper()>();

        $r124 = (java.lang.Integer) $r130;

        $i54 = virtualinvoke $r124.<java.lang.Integer: int intValue()>();

        $l53 = (long) $i54;

        $r123 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r125 = virtualinvoke $r123.<android.util.Range: java.lang.Comparable getUpper()>();

        $r126 = (java.lang.Integer) $r125;

        $i55 = virtualinvoke $r126.<java.lang.Integer: int intValue()>();

        $l56 = (long) $i55;

        $l65 = $l53 * $l56;

        $r139 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l65);

        $r141 = virtualinvoke $r114.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r131, $r139);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange> = $r141;

        $r137 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r140 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r136 = virtualinvoke $r140.<android.util.Range: java.lang.Comparable getLower()>();

        $r138 = (java.lang.Long) $r136;

        $l64 = virtualinvoke $r138.<java.lang.Long: long longValue()>();

        $r134 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r133 = virtualinvoke $r134.<android.util.Range: java.lang.Comparable getUpper()>();

        $r135 = (java.lang.Integer) $r133;

        $i63 = virtualinvoke $r135.<java.lang.Integer: int intValue()>();

        $l61 = (long) $i63;

        $l60 = $l64 / $l61;

        $i62 = (int) $l60;

        $r132 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i62);

        $r147 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlocksPerSecondRange>;

        $r148 = virtualinvoke $r147.<android.util.Range: java.lang.Comparable getUpper()>();

        $r149 = (java.lang.Long) $r148;

        $l68 = virtualinvoke $r149.<java.lang.Long: long longValue()>();

        $d2 = (double) $l68;

        $r144 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBlockCountRange>;

        $r145 = virtualinvoke $r144.<android.util.Range: java.lang.Comparable getLower()>();

        $r146 = (java.lang.Integer) $r145;

        $i66 = virtualinvoke $r146.<java.lang.Integer: int intValue()>();

        $d0 = (double) $i66;

        $d1 = $d2 / $d0;

        $i67 = (int) $d1;

        $r142 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i67);

        $r143 = virtualinvoke $r137.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r132, $r142);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r143;

        return;
    }

    private void applyMacroBlockLimits(int, int, int, long, int, int, int, int)
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        long l3;
        java.lang.Integer $r1, $r2, $r11, $r13, $r14, $r16;
        android.util.Range $r3, $r6, $r9, $r10, $r12, $r15, $r17;
        java.lang.Long $r4, $r5;
        android.util.Rational $r7, $r8;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyAlignment(int,int)>(i6, i7);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r1, $r2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r6 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r4, $r5);

        $r8 = new android.util.Rational;

        specialinvoke $r8.<android.util.Rational: void <init>(int,int)>(1, i1);

        $r7 = new android.util.Rational;

        specialinvoke $r7.<android.util.Rational: void <init>(int,int)>(i0, 1);

        $r10 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r8, $r7);

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyBlockLimits(int,int,android.util.Range,android.util.Range,android.util.Range)>(i4, i5, $r3, $r6, $r10);

        $r9 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockWidth>;

        $i10 = $i8 / i4;

        $i9 = i0 / $i10;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = virtualinvoke $r9.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r11, $r13);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mHorizontalBlockRange> = $r12;

        $r15 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $i12 = r0.<android.media.MediaCodecInfo$VideoCapabilities: int mBlockHeight>;

        $i11 = $i12 / i5;

        $i13 = i1 / $i11;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r17 = virtualinvoke $r15.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r14, $r16);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mVerticalBlockRange> = $r17;

        return;
    }

    private void applyLevelLimits()
    {
        android.media.MediaCodecInfo$VideoCapabilities r0;
        byte b0, b8, b9, b10, $b16, b99, b100, b101, b106;
        android.media.MediaCodecInfo$CodecProfileLevel[] r1, r3, r106, r108, r110, r112;
        java.lang.String r2, $r14, $r22, $r26, $r33, $r39, $r45, $r51, $r69, $r78, $r80, $r85, $r91, $r97, $r103;
        int i1, i2, i3, i5, i6, $i12, $i13, $i14, $i15, $i17, $i19, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i55, $i56, $i57, $i58, $i60, $i62, $i63, $i64, $i65, $i68, $i69, $i71, $i73, i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87, i90, i91, i92, i93, i94, i95, i96, i97, i102, i103, i104, i105, i107, i108, i109, i110, i111, i112, i113, i114, i115, i116;
        android.media.MediaCodecInfo$CodecProfileLevel r4, r107, r109, r111, r113;
        char c4, c88;
        short s7, s89, s98;
        boolean z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.media.MediaCodecInfo$CodecCapabilities $r5, $r6, $r8;
        java.lang.Integer $r7, $r9, $r36, $r38, $r59, $r60;
        long $l11, $l24, $l31, $l45, $l66;
        android.util.Range $r10, $r37, $r58, $r61;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r40, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r79, $r81, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r96, $r98, $r99, $r100, $r101, $r102, $r104, $r105;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;

        r0 := @this: android.media.MediaCodecInfo$VideoCapabilities;

        b0 = 4;

        $r6 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        r1 = $r6.<android.media.MediaCodecInfo$CodecCapabilities: android.media.MediaCodecInfo$CodecProfileLevel[] profileLevels>;

        $r5 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        r2 = virtualinvoke $r5.<android.media.MediaCodecInfo$CodecCapabilities: java.lang.String getMimeType()>();

        $z6 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/avc");

        if $z6 == 0 goto label029;

        i75 = 99;

        i76 = 1485;

        i77 = 64000;

        i78 = 396;

        r3 = r1;

        i1 = lengthof r3;

        i2 = 0;

     label001:
        if i2 >= i1 goto label028;

        r4 = r3[i2];

        i3 = 0;

        c4 = 0;

        i5 = 0;

        i6 = 0;

        z4 = 1;

        $i64 = r4.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        lookupswitch($i64)
        {
            case 1: goto label002;
            case 2: goto label003;
            case 4: goto label004;
            case 8: goto label005;
            case 16: goto label006;
            case 32: goto label007;
            case 64: goto label008;
            case 128: goto label009;
            case 256: goto label010;
            case 512: goto label011;
            case 1024: goto label012;
            case 2048: goto label013;
            case 4096: goto label014;
            case 8192: goto label015;
            case 16384: goto label016;
            case 32768: goto label017;
            case 65536: goto label018;
            default: goto label019;
        };

     label002:
        i3 = 1485;

        c4 = 99;

        i5 = 64;

        i6 = 396;

        goto label020;

     label003:
        i3 = 1485;

        c4 = 99;

        i5 = 128;

        i6 = 396;

        goto label020;

     label004:
        i3 = 3000;

        c4 = 396;

        i5 = 192;

        i6 = 900;

        goto label020;

     label005:
        i3 = 6000;

        c4 = 396;

        i5 = 384;

        i6 = 2376;

        goto label020;

     label006:
        i3 = 11880;

        c4 = 396;

        i5 = 768;

        i6 = 2376;

        goto label020;

     label007:
        i3 = 11880;

        c4 = 396;

        i5 = 2000;

        i6 = 2376;

        goto label020;

     label008:
        i3 = 19800;

        c4 = 792;

        i5 = 4000;

        i6 = 4752;

        goto label020;

     label009:
        i3 = 20250;

        c4 = 1620;

        i5 = 4000;

        i6 = 8100;

        goto label020;

     label010:
        i3 = 40500;

        c4 = 1620;

        i5 = 10000;

        i6 = 8100;

        goto label020;

     label011:
        i3 = 108000;

        c4 = 3600;

        i5 = 14000;

        i6 = 18000;

        goto label020;

     label012:
        i3 = 216000;

        c4 = 5120;

        i5 = 20000;

        i6 = 20480;

        goto label020;

     label013:
        i3 = 245760;

        c4 = 8192;

        i5 = 20000;

        i6 = 32768;

        goto label020;

     label014:
        i3 = 245760;

        c4 = 8192;

        i5 = 50000;

        i6 = 32768;

        goto label020;

     label015:
        i3 = 522240;

        c4 = 8704;

        i5 = 50000;

        i6 = 34816;

        goto label020;

     label016:
        i3 = 589824;

        c4 = 22080;

        i5 = 135000;

        i6 = 110400;

        goto label020;

     label017:
        i3 = 983040;

        c4 = 36864;

        i5 = 240000;

        i6 = 184320;

        goto label020;

     label018:
        i3 = 2073600;

        c4 = 36864;

        i5 = 240000;

        i6 = 184320;

        goto label020;

     label019:
        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i73 = r4.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i73);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r97);

        b0 = b0 | 1;

     label020:
        $i63 = r4.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        lookupswitch($i63)
        {
            case 1: goto label024;
            case 2: goto label024;
            case 4: goto label023;
            case 8: goto label021;
            case 16: goto label022;
            case 32: goto label023;
            case 64: goto label023;
            default: goto label025;
        };

     label021:
        i79 = i5 * 1250;

        goto label026;

     label022:
        i79 = i5 * 3000;

        goto label026;

     label023:
        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported profile ");

        $i71 = r4.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i71);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r90 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r91);

        b0 = b0 | 2;

        z4 = 0;

     label024:
        i79 = i5 * 1000;

        goto label026;

     label025:
        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i69 = r4.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i69);

        $r105 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r103);

        b0 = b0 | 1;

        i79 = i5 * 1000;

     label026:
        if z4 == 0 goto label027;

        b0 = b0 & -5;

     label027:
        i76 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i76);

        i75 = staticinvoke <java.lang.Math: int max(int,int)>(c4, i75);

        i77 = staticinvoke <java.lang.Math: int max(int,int)>(i79, i77);

        i78 = staticinvoke <java.lang.Math: int max(int,int)>(i78, i6);

        i2 = i2 + 1;

        goto label001;

     label028:
        $i65 = i75 * 8;

        $d4 = (double) $i65;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        i80 = (int) $d5;

        $l66 = (long) i76;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i80, i80, i75, $l66, 16, 16, 1, 1);

        goto label109;

     label029:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/mp4v-es");

        if $z8 == 0 goto label051;

        i81 = 11;

        i82 = 9;

        i83 = 15;

        i84 = 99;

        i85 = 1485;

        i77 = 64000;

        r106 = r1;

        i86 = lengthof r106;

        i87 = 0;

     label030:
        if i87 >= i86 goto label050;

        r107 = r106[i87];

        c88 = 0;

        s89 = 0;

        s7 = 0;

        b9 = 0;

        b8 = 0;

        b10 = 0;

        z5 = 1;

        $i52 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        lookupswitch($i52)
        {
            case 1: goto label031;
            case 2: goto label046;
            case 4: goto label046;
            case 8: goto label046;
            case 16: goto label046;
            case 32: goto label046;
            case 64: goto label046;
            case 128: goto label046;
            case 256: goto label046;
            case 512: goto label046;
            case 1024: goto label046;
            case 2048: goto label046;
            case 4096: goto label046;
            case 8192: goto label046;
            case 16384: goto label046;
            case 32768: goto label039;
            default: goto label047;
        };

     label031:
        $i60 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        lookupswitch($i60)
        {
            case 1: goto label032;
            case 2: goto label034;
            case 4: goto label033;
            case 8: goto label035;
            case 16: goto label036;
            case 32: goto label037;
            case 64: goto label037;
            case 128: goto label037;
            default: goto label038;
        };

     label032:
        b9 = 15;

        b8 = 11;

        b10 = 9;

        c88 = 1485;

        s89 = 99;

        s7 = 64;

        goto label048;

     label033:
        b9 = 30;

        b8 = 11;

        b10 = 9;

        c88 = 1485;

        s89 = 99;

        s7 = 64;

        goto label048;

     label034:
        b9 = 30;

        b8 = 11;

        b10 = 9;

        c88 = 1485;

        s89 = 99;

        s7 = 128;

        goto label048;

     label035:
        b9 = 30;

        b8 = 22;

        b10 = 18;

        c88 = 5940;

        s89 = 396;

        s7 = 128;

        goto label048;

     label036:
        b9 = 30;

        b8 = 22;

        b10 = 18;

        c88 = 11880;

        s89 = 396;

        s7 = 384;

        goto label048;

     label037:
        b9 = 30;

        b8 = 22;

        b10 = 18;

        c88 = 11880;

        s89 = 396;

        s7 = 384;

        z5 = 0;

        goto label048;

     label038:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i62 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i62);

        $r75 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i58 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i58);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r78);

        b0 = b0 | 1;

        goto label048;

     label039:
        $i53 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        lookupswitch($i53)
        {
            case 1: goto label040;
            case 4: goto label040;
            case 8: goto label041;
            case 16: goto label042;
            case 32: goto label043;
            case 64: goto label043;
            case 128: goto label044;
            default: goto label045;
        };

     label040:
        b9 = 30;

        b8 = 11;

        b10 = 9;

        c88 = 2970;

        s89 = 99;

        s7 = 128;

        goto label048;

     label041:
        b9 = 30;

        b8 = 22;

        b10 = 18;

        c88 = 5940;

        s89 = 396;

        s7 = 384;

        goto label048;

     label042:
        b9 = 30;

        b8 = 22;

        b10 = 18;

        c88 = 11880;

        s89 = 396;

        s7 = 768;

        goto label048;

     label043:
        b9 = 30;

        b8 = 44;

        b10 = 36;

        c88 = 23760;

        s89 = 792;

        s7 = 3000;

        goto label048;

     label044:
        b9 = 30;

        b8 = 45;

        b10 = 36;

        c88 = 48600;

        s89 = 1620;

        s7 = 8000;

        goto label048;

     label045:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i57 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r68 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i57);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i56 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r72 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i56);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r69);

        b0 = b0 | 1;

        goto label048;

     label046:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported profile ");

        $i55 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r66 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i55);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r80 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoCapabilities", $r80);

        b0 = b0 | 2;

        z5 = 0;

        goto label048;

     label047:
        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i68 = r107.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i68);

        $r84 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r85);

        b0 = b0 | 1;

     label048:
        if z5 == 0 goto label049;

        b0 = b0 & -5;

     label049:
        i85 = staticinvoke <java.lang.Math: int max(int,int)>(c88, i85);

        i84 = staticinvoke <java.lang.Math: int max(int,int)>(s89, i84);

        $i51 = s7 * 1000;

        i77 = staticinvoke <java.lang.Math: int max(int,int)>($i51, i77);

        i81 = staticinvoke <java.lang.Math: int max(int,int)>(b8, i81);

        i82 = staticinvoke <java.lang.Math: int max(int,int)>(b10, i82);

        i83 = staticinvoke <java.lang.Math: int max(int,int)>(b9, i83);

        i87 = i87 + 1;

        goto label030;

     label050:
        $l45 = (long) i85;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i81, i82, i84, $l45, 16, 16, 1, 1);

        $r58 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i83);

        $r61 = virtualinvoke $r58.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r59, $r60);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r61;

        goto label109;

     label051:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/3gpp");

        if $z7 == 0 goto label067;

        i90 = 11;

        i91 = 9;

        i92 = 15;

        i93 = 99;

        i94 = 1485;

        i77 = 64000;

        r108 = r1;

        i95 = lengthof r108;

        i96 = 0;

     label052:
        if i96 >= i95 goto label066;

        r109 = r108[i96];

        i97 = 0;

        s98 = 0;

        b99 = 0;

        b100 = 0;

        b101 = 0;

        $i36 = r109.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        lookupswitch($i36)
        {
            case 1: goto label053;
            case 2: goto label054;
            case 4: goto label055;
            case 8: goto label056;
            case 16: goto label057;
            case 32: goto label058;
            case 64: goto label059;
            case 128: goto label060;
            default: goto label061;
        };

     label053:
        b99 = 15;

        b100 = 11;

        b101 = 9;

        s98 = 1;

        $i49 = b100 * b101;

        i97 = $i49 * b99;

        goto label062;

     label054:
        b99 = 30;

        b100 = 22;

        b101 = 18;

        s98 = 2;

        $i47 = b100 * b101;

        i97 = $i47 * b99;

        goto label062;

     label055:
        b99 = 30;

        b100 = 22;

        b101 = 18;

        s98 = 6;

        $i48 = b100 * b101;

        i97 = $i48 * b99;

        goto label062;

     label056:
        b99 = 30;

        b100 = 22;

        b101 = 18;

        s98 = 32;

        $i39 = b100 * b101;

        i97 = $i39 * b99;

        goto label062;

     label057:
        b99 = 30;

        b100 = 11;

        b101 = 9;

        s98 = 2;

        $i40 = b100 * b101;

        i97 = $i40 * b99;

        goto label062;

     label058:
        b99 = 60;

        b100 = 22;

        b101 = 18;

        s98 = 64;

        $i41 = b100 * b101;

        i97 = $i41 * 50;

        goto label062;

     label059:
        b99 = 60;

        b100 = 45;

        b101 = 18;

        s98 = 128;

        $i42 = b100 * b101;

        i97 = $i42 * 50;

        goto label062;

     label060:
        b99 = 60;

        b100 = 45;

        b101 = 36;

        s98 = 256;

        $i37 = b100 * b101;

        i97 = $i37 * 50;

        goto label062;

     label061:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile/level ");

        $i50 = r109.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r48 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i44 = r109.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r51);

        b0 = b0 | 1;

     label062:
        $i35 = r109.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        lookupswitch($i35)
        {
            case 1: goto label063;
            case 2: goto label063;
            case 4: goto label063;
            case 8: goto label063;
            case 16: goto label063;
            case 32: goto label063;
            case 64: goto label063;
            case 128: goto label063;
            case 256: goto label063;
            default: goto label064;
        };

     label063:
        goto label065;

     label064:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i38 = r109.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r45);

        b0 = b0 | 1;

     label065:
        b0 = b0 & -5;

        i94 = staticinvoke <java.lang.Math: int max(int,int)>(i97, i94);

        $i34 = b100 * b101;

        i93 = staticinvoke <java.lang.Math: int max(int,int)>($i34, i93);

        $i33 = s98 * 64000;

        i77 = staticinvoke <java.lang.Math: int max(int,int)>($i33, i77);

        i90 = staticinvoke <java.lang.Math: int max(int,int)>(b100, i90);

        i91 = staticinvoke <java.lang.Math: int max(int,int)>(b101, i91);

        i92 = staticinvoke <java.lang.Math: int max(int,int)>(b99, i92);

        i96 = i96 + 1;

        goto label052;

     label066:
        $l31 = (long) i94;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i90, i91, i93, $l31, 16, 16, 1, 1);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i92);

        $r37 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r38, $r36);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mFrameRateRange> = $r37;

        goto label109;

     label067:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/x-vnd.on2.vp8");

        if $z10 != 0 goto label068;

        $z12 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/x-vnd.on2.vp9");

        if $z12 == 0 goto label079;

     label068:
        i102 = 2147483647;

        i103 = 2147483647;

        i77 = 100000000;

        r110 = r1;

        i104 = lengthof r110;

        i105 = 0;

     label069:
        if i105 >= i104 goto label076;

        r111 = r110[i105];

        $i13 = r111.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        tableswitch($i13)
        {
            case 1: goto label070;
            case 2: goto label070;
            case 3: goto label071;
            case 4: goto label070;
            case 5: goto label071;
            case 6: goto label071;
            case 7: goto label071;
            case 8: goto label070;
            default: goto label071;
        };

     label070:
        goto label072;

     label071:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i19 = r111.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r22);

        b0 = b0 | 1;

     label072:
        $i14 = r111.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        lookupswitch($i14)
        {
            case 1: goto label073;
            default: goto label074;
        };

     label073:
        goto label075;

     label074:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i17 = r111.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r14);

        b0 = b0 | 1;

     label075:
        b0 = b0 & -5;

        i105 = i105 + 1;

        goto label069;

     label076:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/x-vnd.on2.vp8");

        if $z9 == 0 goto label077;

        $b16 = 16;

        goto label078;

     label077:
        $b16 = 8;

     label078:
        b106 = $b16;

        $l11 = (long) i102;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(32767, 32767, i103, $l11, b106, b106, 1, 1);

        goto label109;

     label079:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("video/hevc");

        if $z11 == 0 goto label108;

        i107 = 36864;

        i108 = i107 * 15;

        i77 = 128000;

        r112 = r1;

        i109 = lengthof r112;

        i110 = 0;

     label080:
        if i110 >= i109 goto label107;

        r113 = r112[i110];

        d6 = 0.0;

        i111 = 0;

        i112 = 0;

        $i25 = r113.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        lookupswitch($i25)
        {
            case 1: goto label081;
            case 2: goto label081;
            case 4: goto label082;
            case 8: goto label082;
            case 16: goto label083;
            case 32: goto label083;
            case 64: goto label084;
            case 128: goto label084;
            case 256: goto label085;
            case 512: goto label085;
            case 1024: goto label086;
            case 2048: goto label087;
            case 4096: goto label088;
            case 8192: goto label089;
            case 16384: goto label090;
            case 32768: goto label091;
            case 65536: goto label092;
            case 131072: goto label093;
            case 262144: goto label094;
            case 524288: goto label095;
            case 1048576: goto label096;
            case 2097152: goto label097;
            case 4194304: goto label098;
            case 8388608: goto label099;
            case 16777216: goto label100;
            case 33554432: goto label101;
            default: goto label102;
        };

     label081:
        d6 = 15.0;

        i111 = 36864;

        i112 = 128;

        goto label103;

     label082:
        d6 = 30.0;

        i111 = 122880;

        i112 = 1500;

        goto label103;

     label083:
        d6 = 30.0;

        i111 = 245760;

        i112 = 3000;

        goto label103;

     label084:
        d6 = 30.0;

        i111 = 552960;

        i112 = 6000;

        goto label103;

     label085:
        d6 = 33.75;

        i111 = 983040;

        i112 = 10000;

        goto label103;

     label086:
        d6 = 30.0;

        i111 = 2228224;

        i112 = 12000;

        goto label103;

     label087:
        d6 = 30.0;

        i111 = 2228224;

        i112 = 30000;

        goto label103;

     label088:
        d6 = 60.0;

        i111 = 2228224;

        i112 = 20000;

        goto label103;

     label089:
        d6 = 60.0;

        i111 = 2228224;

        i112 = 50000;

        goto label103;

     label090:
        d6 = 30.0;

        i111 = 8912896;

        i112 = 25000;

        goto label103;

     label091:
        d6 = 30.0;

        i111 = 8912896;

        i112 = 100000;

        goto label103;

     label092:
        d6 = 60.0;

        i111 = 8912896;

        i112 = 40000;

        goto label103;

     label093:
        d6 = 60.0;

        i111 = 8912896;

        i112 = 160000;

        goto label103;

     label094:
        d6 = 120.0;

        i111 = 8912896;

        i112 = 60000;

        goto label103;

     label095:
        d6 = 120.0;

        i111 = 8912896;

        i112 = 240000;

        goto label103;

     label096:
        d6 = 30.0;

        i111 = 35651584;

        i112 = 60000;

        goto label103;

     label097:
        d6 = 30.0;

        i111 = 35651584;

        i112 = 240000;

        goto label103;

     label098:
        d6 = 60.0;

        i111 = 35651584;

        i112 = 120000;

        goto label103;

     label099:
        d6 = 60.0;

        i111 = 35651584;

        i112 = 480000;

        goto label103;

     label100:
        d6 = 120.0;

        i111 = 35651584;

        i112 = 240000;

        goto label103;

     label101:
        d6 = 120.0;

        i111 = 35651584;

        i112 = 800000;

        goto label103;

     label102:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized level ");

        $i29 = r113.<android.media.MediaCodecInfo$CodecProfileLevel: int level>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r40 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r39);

        b0 = b0 | 1;

     label103:
        $i26 = r113.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        lookupswitch($i26)
        {
            case 1: goto label104;
            case 2: goto label104;
            default: goto label105;
        };

     label104:
        goto label106;

     label105:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized profile ");

        $i27 = r113.<android.media.MediaCodecInfo$CodecProfileLevel: int profile>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r33);

        b0 = b0 | 1;

     label106:
        b0 = b0 & -5;

        $d3 = (double) i111;

        $d2 = d6 * $d3;

        $i23 = (int) $d2;

        i108 = staticinvoke <java.lang.Math: int max(int,int)>($i23, i108);

        i107 = staticinvoke <java.lang.Math: int max(int,int)>(i111, i107);

        $i28 = i112 * 1000;

        i77 = staticinvoke <java.lang.Math: int max(int,int)>($i28, i77);

        i110 = i110 + 1;

        goto label080;

     label107:
        $i22 = i107 * 8;

        $d1 = (double) $i22;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        i113 = (int) $d0;

        i114 = staticinvoke <android.media.Utils: int divUp(int,int)>(i107, 64);

        i115 = staticinvoke <android.media.Utils: int divUp(int,int)>(i108, 64);

        i116 = staticinvoke <android.media.Utils: int divUp(int,int)>(i113, 8);

        $l24 = (long) i115;

        specialinvoke r0.<android.media.MediaCodecInfo$VideoCapabilities: void applyMacroBlockLimits(int,int,int,long,int,int,int,int)>(i116, i116, i114, $l24, 8, 8, 1, 1);

        goto label109;

     label108:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported mime ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("VideoCapabilities", $r26);

        i77 = 64000;

        b0 = b0 | 2;

     label109:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i77);

        $r10 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r7, $r9);

        r0.<android.media.MediaCodecInfo$VideoCapabilities: android.util.Range mBitrateRange> = $r10;

        $r8 = r0.<android.media.MediaCodecInfo$VideoCapabilities: android.media.MediaCodecInfo$CodecCapabilities mParent>;

        $i12 = $r8.<android.media.MediaCodecInfo$CodecCapabilities: int mError>;

        $i15 = $i12 | b0;

        $r8.<android.media.MediaCodecInfo$CodecCapabilities: int mError> = $i15;

        return;
    }

    public static void <clinit>()
    {
        <android.media.MediaCodecInfo$VideoCapabilities: java.lang.String TAG> = "VideoCapabilities";

        return;
    }
}
