class android.media.IRemoteControlClient$Stub$Proxy extends java.lang.Object implements android.media.IRemoteControlClient
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        $r1 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        return "android.media.IRemoteControlClient";
    }

    public void onInformationRequested(int, int) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void informationRequestForDisplay(android.media.IRemoteControlDisplay, int, int) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setCurrentClientGenerationId(int) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void plugRemoteControlDisplay(android.media.IRemoteControlDisplay, int, int) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setBitmapSizeForDisplay(android.media.IRemoteControlDisplay, int, int) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setWantsSyncForDisplay(android.media.IRemoteControlDisplay, boolean) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        boolean z0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;
        byte $b0;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        if z0 == 0 goto label4;

        $b0 = 1;

        goto label5;

     label4:
        $b0 = 0;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void enableRemoteControlDisplay(android.media.IRemoteControlDisplay, boolean) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        android.media.IRemoteControlDisplay r1;
        boolean z0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder $r4, $r5;
        byte $b0;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        if r1 == null goto label2;

        $r5 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r5 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);

        if z0 == 0 goto label4;

        $b0 = 1;

        goto label5;

     label4:
        $b0 = 0;

     label5:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r6 := @caughtexception;

        r3 = $r6;

     label8:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void seekTo(int, long) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        int i0;
        long l1;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l1);

        $r3 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateMetadata(int, int, android.media.Rating) throws android.os.RemoteException
    {
        android.media.IRemoteControlClient$Stub$Proxy r0;
        int i0, i1;
        android.media.Rating r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.media.IRemoteControlClient$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.Rating;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.media.IRemoteControlClient");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.media.Rating: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
