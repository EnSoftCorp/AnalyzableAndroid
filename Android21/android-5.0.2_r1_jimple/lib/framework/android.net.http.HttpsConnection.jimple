public class android.net.http.HttpsConnection extends android.net.http.Connection
{
    private static javax.net.ssl.SSLSocketFactory mSslSocketFactory;
    private java.lang.Object mSuspendLock;
    private boolean mSuspended;
    private boolean mAborted;
    private org.apache.http.HttpHost mProxyHost;

    public static void initializeEngine(java.io.File)
    {
        java.io.File r0;
        com.android.org.conscrypt.SSLClientSessionCache r1;
        com.android.org.conscrypt.OpenSSLContextImpl r2, $r6;
        javax.net.ssl.TrustManager[] r3, $r7;
        java.lang.Class r4;
        java.lang.Throwable r5, $r19;
        android.net.http.HttpsConnection$1 $r8;
        com.android.org.conscrypt.ClientSessionContext $r9;
        javax.net.ssl.SSLSocketFactory $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        java.io.IOException $r16, r22;
        java.security.KeyManagementException $r17, r21;
        java.lang.RuntimeException $r18, $r20;

        r0 := @parameter0: java.io.File;

     label01:
        r1 = null;

        if r0 == null goto label02;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching SSL sessions in ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HttpsConnection", $r15);

        r1 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache: com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)>(r0);

     label02:
        $r6 = new com.android.org.conscrypt.OpenSSLContextImpl;

        specialinvoke $r6.<com.android.org.conscrypt.OpenSSLContextImpl: void <init>()>();

        r2 = $r6;

        $r7 = newarray (javax.net.ssl.TrustManager)[1];

        $r8 = new android.net.http.HttpsConnection$1;

        specialinvoke $r8.<android.net.http.HttpsConnection$1: void <init>()>();

        $r7[0] = $r8;

        r3 = $r7;

        virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, r3, null);

        $r9 = virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.ClientSessionContext engineGetClientSessionContext()>();

        virtualinvoke $r9.<com.android.org.conscrypt.ClientSessionContext: void setPersistentCache(com.android.org.conscrypt.SSLClientSessionCache)>(r1);

        r4 = class "android/net/http/HttpsConnection";

        entermonitor class "android/net/http/HttpsConnection";

     label03:
        $r10 = virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()>();

        <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory> = $r10;

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        goto label10;

     label08:
        $r17 := @caughtexception;

        r21 = $r17;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r21);

        throw $r20;

     label09:
        $r16 := @caughtexception;

        r22 = $r16;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r22);

        throw $r18;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.security.KeyManagementException from label01 to label07 with label08;
        catch java.io.IOException from label01 to label07 with label09;
    }

    private static synchronized javax.net.ssl.SSLSocketFactory getSocketFactory()
    {
        javax.net.ssl.SSLSocketFactory $r0;

        $r0 = <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory>;

        return $r0;
    }

    void <init>(android.content.Context, org.apache.http.HttpHost, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.net.http.HttpsConnection r0;
        android.content.Context r1;
        org.apache.http.HttpHost r2, r3;
        android.net.http.RequestFeeder r4;
        java.lang.Object $r5;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.HttpHost;

        r4 := @parameter3: android.net.http.RequestFeeder;

        specialinvoke r0.<android.net.http.Connection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r1, r2, r4);

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock> = $r5;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

        r0.<android.net.http.HttpsConnection: boolean mAborted> = 0;

        r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost> = r3;

        return;
    }

    void setCertificate(android.net.http.SslCertificate)
    {
        android.net.http.HttpsConnection r0;
        android.net.http.SslCertificate r1;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.net.http.SslCertificate;

        r0.<android.net.http.HttpsConnection: android.net.http.SslCertificate mCertificate> = r1;

        return;
    }

    android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request) throws java.io.IOException
    {
        android.net.http.HttpsConnection r0;
        android.net.http.Request r1;
        javax.net.ssl.SSLSocket r2;
        android.net.http.AndroidHttpClientConnection r3, $r22, $r36, r88;
        org.apache.http.params.BasicHttpParams r4, $r23, $r42, r89;
        java.lang.String r5, r10, $r15, $r20, $r35, $r38, $r44, $r49, $r50, $r55, r75, r77, r79, r81, r84;
        android.net.http.Headers r6, $r41;
        org.apache.http.message.BasicHttpRequest r7, $r40, $r43;
        org.apache.http.Header[] r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.http.Header r9;
        java.lang.Throwable r11, r12, $r66, $r70;
        javax.net.ssl.SSLSocketFactory $r13, $r47;
        org.apache.http.HttpHost $r14, $r16, $r17, $r21, $r33, $r37, $r39, $r48, $r53;
        android.net.http.CertificateChainValidator $r18;
        java.net.Socket $r19, $r32, $r54, r71;
        java.lang.Object $r24, $r25, $r28, r86, r87;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.net.http.EventHandler $r26, $r45, $r46, $r51;
        android.net.http.SSLConnectionClosedByUserException $r27;
        java.lang.StringBuilder $r29, $r30, $r34;
        java.io.IOException $r31, $r57, $r58, $r59, $r60, $r62, $r64, $r65, $r67, $r68, $r69, r72, r78, r80, r83;
        java.util.Locale $r52;
        org.apache.http.ParseException $r56, r74;
        java.lang.InterruptedException $r61;
        org.apache.http.HttpException $r63, r76;
        org.apache.http.StatusLine r73;
        org.apache.http.ProtocolVersion r82;
        android.net.http.SslError r85;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.net.http.Request;

        r2 = null;

        $r14 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        if $r14 == null goto label28;

        r3 = null;

     label01:
        $r32 = new java.net.Socket;

        $r33 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        $r38 = virtualinvoke $r33.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r37 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        $i3 = virtualinvoke $r37.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke $r32.<java.net.Socket: void <init>(java.lang.String,int)>($r38, $i3);

        r71 = $r32;

        virtualinvoke r71.<java.net.Socket: void setSoTimeout(int)>(60000);

        $r36 = new android.net.http.AndroidHttpClientConnection;

        specialinvoke $r36.<android.net.http.AndroidHttpClientConnection: void <init>()>();

        r3 = $r36;

        $r42 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r42.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r4 = $r42;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>(r4, 8192);

        virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>(r71, r4);

     label02:
        goto label06;

     label03:
        $r65 := @caughtexception;

        r72 = $r65;

        if r3 == null goto label04;

        virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: void close()>();

     label04:
        r5 = virtualinvoke r72.<java.io.IOException: java.lang.String getMessage()>();

        if r5 != null goto label05;

        r5 = "failed to establish a connection to the proxy";

     label05:
        $r62 = new java.io.IOException;

        specialinvoke $r62.<java.io.IOException: void <init>(java.lang.String)>(r5);

        throw $r62;

     label06:
        $r41 = new android.net.http.Headers;

        specialinvoke $r41.<android.net.http.Headers: void <init>()>();

        r6 = $r41;

     label07:
        $r40 = new org.apache.http.message.BasicHttpRequest;

        $r39 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r44 = virtualinvoke $r39.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        specialinvoke $r40.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>("CONNECT", $r44);

        r7 = $r40;

        $r43 = r1.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        r8 = virtualinvoke $r43.<org.apache.http.message.BasicHttpRequest: org.apache.http.Header[] getAllHeaders()>();

        i0 = lengthof r8;

        i1 = 0;

     label08:
        if i1 >= i0 goto label11;

        r9 = r8[i1];

        $r55 = interfaceinvoke r9.<org.apache.http.Header: java.lang.String getName()>();

        $r52 = <java.util.Locale: java.util.Locale ROOT>;

        r10 = virtualinvoke $r55.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r52);

        $z3 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("proxy");

        if $z3 != 0 goto label09;

        $z4 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("keep-alive");

        if $z4 != 0 goto label09;

        $z5 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("host");

        if $z5 == 0 goto label10;

     label09:
        virtualinvoke r7.<org.apache.http.message.BasicHttpRequest: void addHeader(org.apache.http.Header)>(r9);

     label10:
        i1 = i1 + 1;

        goto label08;

     label11:
        virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>(r7);

        virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: void flush()>();

     label12:
        r73 = virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>(r6);

        i7 = interfaceinvoke r73.<org.apache.http.StatusLine: int getStatusCode()>();

        if i7 < 200 goto label12;

     label13:
        goto label20;

     label14:
        $r56 := @caughtexception;

        r74 = $r56;

        r75 = virtualinvoke r74.<org.apache.http.ParseException: java.lang.String getMessage()>();

        if r75 != null goto label15;

        r75 = "failed to send a CONNECT request";

     label15:
        $r58 = new java.io.IOException;

        specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>(r75);

        throw $r58;

     label16:
        $r63 := @caughtexception;

        r76 = $r63;

        r77 = virtualinvoke r76.<org.apache.http.HttpException: java.lang.String getMessage()>();

        if r77 != null goto label17;

        r77 = "failed to send a CONNECT request";

     label17:
        $r69 = new java.io.IOException;

        specialinvoke $r69.<java.io.IOException: void <init>(java.lang.String)>(r77);

        throw $r69;

     label18:
        $r59 := @caughtexception;

        r78 = $r59;

        r79 = virtualinvoke r78.<java.io.IOException: java.lang.String getMessage()>();

        if r79 != null goto label19;

        r79 = "failed to send a CONNECT request";

     label19:
        $r60 = new java.io.IOException;

        specialinvoke $r60.<java.io.IOException: void <init>(java.lang.String)>(r79);

        throw $r60;

     label20:
        if i7 != 200 goto label26;

     label21:
        $r47 = staticinvoke <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r48 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r49 = virtualinvoke $r48.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r53 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $i6 = virtualinvoke $r53.<org.apache.http.HttpHost: int getPort()>();

        $r54 = virtualinvoke $r47.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r71, $r49, $i6, 1);

        r2 = (javax.net.ssl.SSLSocket) $r54;

     label22:
        goto label27;

     label23:
        $r68 := @caughtexception;

        r80 = $r68;

        if r2 == null goto label24;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void close()>();

     label24:
        r81 = virtualinvoke r80.<java.io.IOException: java.lang.String getMessage()>();

        if r81 != null goto label25;

        r81 = "failed to create an SSL socket";

     label25:
        $r67 = new java.io.IOException;

        specialinvoke $r67.<java.io.IOException: void <init>(java.lang.String)>(r81);

        throw $r67;

     label26:
        r82 = interfaceinvoke r73.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r45 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $i4 = virtualinvoke r82.<org.apache.http.ProtocolVersion: int getMajor()>();

        $i5 = virtualinvoke r82.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r50 = interfaceinvoke r73.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        interfaceinvoke $r45.<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>($i4, $i5, i7, $r50);

        $r51 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r51.<android.net.http.EventHandler: void headers(android.net.http.Headers)>(r6);

        $r46 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r46.<android.net.http.EventHandler: void endData()>();

        virtualinvoke r3.<android.net.http.AndroidHttpClientConnection: void close()>();

        return null;

     label27:
        goto label33;

     label28:
        $r13 = staticinvoke <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r16 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r15 = virtualinvoke $r16.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r17 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $i2 = virtualinvoke $r17.<org.apache.http.HttpHost: int getPort()>();

        $r19 = virtualinvoke $r13.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r15, $i2);

        r2 = (javax.net.ssl.SSLSocket) $r19;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(60000);

     label29:
        goto label33;

     label30:
        $r57 := @caughtexception;

        r83 = $r57;

        if r2 == null goto label31;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void close()>();

     label31:
        r84 = virtualinvoke r83.<java.io.IOException: java.lang.String getMessage()>();

        if r84 != null goto label32;

        r84 = "failed to create an SSL socket";

     label32:
        $r64 = new java.io.IOException;

        specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(r84);

        throw $r64;

     label33:
        $r18 = staticinvoke <android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>();

        $r21 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r20 = virtualinvoke $r21.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        r85 = virtualinvoke $r18.<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>(r0, r2, $r20);

        if r85 == null goto label49;

        $r24 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        r86 = $r24;

        entermonitor $r24;

     label34:
        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 1;

        exitmonitor r86;

     label35:
        goto label38;

     label36:
        $r70 := @caughtexception;

        r11 = $r70;

        exitmonitor r86;

     label37:
        throw r11;

     label38:
        $r26 = virtualinvoke r1.<android.net.http.Request: android.net.http.EventHandler getEventHandler()>();

        z6 = interfaceinvoke $r26.<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>(r85);

        if z6 != 0 goto label39;

        $r31 = new java.io.IOException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to handle ");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r85);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label39:
        $r25 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        r87 = $r25;

        entermonitor $r25;

     label40:
        $z0 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z0 == 0 goto label44;

     label41:
        $r28 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        virtualinvoke $r28.<java.lang.Object: void wait(long)>(600000L);

        $z2 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z2 == 0 goto label42;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

        r0.<android.net.http.HttpsConnection: boolean mAborted> = 1;

     label42:
        goto label44;

     label43:
        $r61 := @caughtexception;

     label44:
        $z1 = r0.<android.net.http.HttpsConnection: boolean mAborted>;

        if $z1 == 0 goto label45;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void close()>();

        $r27 = new android.net.http.SSLConnectionClosedByUserException;

        specialinvoke $r27.<android.net.http.SSLConnectionClosedByUserException: void <init>(java.lang.String)>("connection closed by the user");

        throw $r27;

     label45:
        exitmonitor r87;

     label46:
        goto label49;

     label47:
        $r66 := @caughtexception;

        r12 = $r66;

        exitmonitor r87;

     label48:
        throw r12;

     label49:
        $r22 = new android.net.http.AndroidHttpClientConnection;

        specialinvoke $r22.<android.net.http.AndroidHttpClientConnection: void <init>()>();

        r88 = $r22;

        $r23 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r23.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r89 = $r23;

        virtualinvoke r89.<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.buffer-size", 8192);

        virtualinvoke r88.<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>(r2, r89);

        return r88;

        catch java.io.IOException from label01 to label02 with label03;
        catch org.apache.http.ParseException from label07 to label13 with label14;
        catch org.apache.http.HttpException from label07 to label13 with label16;
        catch java.io.IOException from label07 to label13 with label18;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.InterruptedException from label41 to label42 with label43;
        catch java.lang.Throwable from label40 to label46 with label47;
        catch java.lang.Throwable from label47 to label48 with label47;
    }

    void closeConnection()
    {
        android.net.http.HttpsConnection r0;
        java.io.IOException r1, $r5;
        boolean $z0, $z1;
        android.net.http.AndroidHttpClientConnection $r2, $r3, $r4;

        r0 := @this: android.net.http.HttpsConnection;

        $z0 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.net.http.HttpsConnection: void restartConnection(boolean)>(0);

     label1:
        $r2 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r2 == null goto label2;

        $r3 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        $z1 = virtualinvoke $r3.<android.net.http.AndroidHttpClientConnection: boolean isOpen()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke $r4.<android.net.http.AndroidHttpClientConnection: void close()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void restartConnection(boolean)
    {
        android.net.http.HttpsConnection r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: android.net.http.HttpsConnection;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z1 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z1 == 0 goto label4;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

        if z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        r0.<android.net.http.HttpsConnection: boolean mAborted> = $z2;

        $r4 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    java.lang.String getScheme()
    {
        android.net.http.HttpsConnection r0;

        r0 := @this: android.net.http.HttpsConnection;

        return "https";
    }

    public volatile java.lang.String toString()
    {
        android.net.http.HttpsConnection r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpsConnection;

        $r1 = specialinvoke r0.<android.net.http.Connection: java.lang.String toString()>();

        return $r1;
    }

    static void <clinit>()
    {
        <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory> = null;

        staticinvoke <android.net.http.HttpsConnection: void initializeEngine(java.io.File)>(null);

        return;
    }
}
