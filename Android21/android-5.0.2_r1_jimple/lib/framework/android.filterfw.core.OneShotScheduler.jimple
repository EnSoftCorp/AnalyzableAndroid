public class android.filterfw.core.OneShotScheduler extends android.filterfw.core.RoundRobinScheduler
{
    private java.util.HashMap scheduled;
    private final boolean mLogVerbose;
    private static final java.lang.String TAG;

    public void <init>(android.filterfw.core.FilterGraph)
    {
        android.filterfw.core.OneShotScheduler r0;
        android.filterfw.core.FilterGraph r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: android.filterfw.core.OneShotScheduler;

        r1 := @parameter0: android.filterfw.core.FilterGraph;

        specialinvoke r0.<android.filterfw.core.RoundRobinScheduler: void <init>(android.filterfw.core.FilterGraph)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.filterfw.core.OneShotScheduler: java.util.HashMap scheduled> = $r2;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("OneShotScheduler", 2);

        r0.<android.filterfw.core.OneShotScheduler: boolean mLogVerbose> = $z0;

        return;
    }

    public void reset()
    {
        android.filterfw.core.OneShotScheduler r0;
        java.util.HashMap $r1;

        r0 := @this: android.filterfw.core.OneShotScheduler;

        specialinvoke r0.<android.filterfw.core.RoundRobinScheduler: void reset()>();

        $r1 = r0.<android.filterfw.core.OneShotScheduler: java.util.HashMap scheduled>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public android.filterfw.core.Filter scheduleNextNode()
    {
        android.filterfw.core.OneShotScheduler r0;
        android.filterfw.core.Filter r1, r2;
        java.util.HashMap $r3, $r13;
        java.lang.String $r4, $r7, $r9, $r11, $r15;
        boolean $z0, $z1, $z2, $z3;
        int $i1;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r12;
        java.lang.Integer $r14;

        r0 := @this: android.filterfw.core.OneShotScheduler;

        r1 = null;

     label01:
        r2 = specialinvoke r0.<android.filterfw.core.RoundRobinScheduler: android.filterfw.core.Filter scheduleNextNode()>();

        if r2 != null goto label03;

        $z3 = r0.<android.filterfw.core.OneShotScheduler: boolean mLogVerbose>;

        if $z3 == 0 goto label02;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OneShotScheduler", "No filters available to run.");

     label02:
        return null;

     label03:
        $r3 = r0.<android.filterfw.core.OneShotScheduler: java.util.HashMap scheduled>;

        $r4 = virtualinvoke r2.<android.filterfw.core.Filter: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label06;

        $i1 = virtualinvoke r2.<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>();

        if $i1 != 0 goto label04;

        $r13 = r0.<android.filterfw.core.OneShotScheduler: java.util.HashMap scheduled>;

        $r15 = virtualinvoke r2.<android.filterfw.core.Filter: java.lang.String getName()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r14);

     label04:
        $z2 = r0.<android.filterfw.core.OneShotScheduler: boolean mLogVerbose>;

        if $z2 == 0 goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling filter \"");

        $r7 = virtualinvoke r2.<android.filterfw.core.Filter: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" of type ");

        $r9 = virtualinvoke r2.<android.filterfw.core.Filter: java.lang.String getFilterClassName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OneShotScheduler", $r11);

     label05:
        return r2;

     label06:
        if r1 != r2 goto label07;

        goto label09;

     label07:
        if r1 != null goto label08;

        r1 = r2;

     label08:
        goto label01;

     label09:
        $z1 = r0.<android.filterfw.core.OneShotScheduler: boolean mLogVerbose>;

        if $z1 == 0 goto label10;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("OneShotScheduler", "One pass through graph completed.");

     label10:
        return null;
    }

    public static void <clinit>()
    {
        <android.filterfw.core.OneShotScheduler: java.lang.String TAG> = "OneShotScheduler";

        return;
    }
}
