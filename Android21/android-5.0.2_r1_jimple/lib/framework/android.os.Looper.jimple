public final class android.os.Looper extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final java.lang.ThreadLocal sThreadLocal;
    private static android.os.Looper sMainLooper;
    final android.os.MessageQueue mQueue;
    final java.lang.Thread mThread;
    private android.util.Printer mLogging;

    public static void prepare()
    {
        staticinvoke <android.os.Looper: void prepare(boolean)>(1);

        return;
    }

    private static void prepare(boolean)
    {
        boolean z0;
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        android.os.Looper $r2;
        java.lang.RuntimeException $r4;

        z0 := @parameter0: boolean;

        $r0 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r1 == null goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Only one Looper may be created per thread");

        throw $r4;

     label1:
        $r3 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r2 = new android.os.Looper;

        specialinvoke $r2.<android.os.Looper: void <init>(boolean)>(z0);

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

        return;
    }

    public static void prepareMainLooper()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r5;
        android.os.Looper $r2, $r3;
        java.lang.IllegalStateException $r4;

        staticinvoke <android.os.Looper: void prepare(boolean)>(0);

        r0 = class "android/os/Looper";

        entermonitor class "android/os/Looper";

     label1:
        $r2 = <android.os.Looper: android.os.Looper sMainLooper>;

        if $r2 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The main Looper has already been prepared.");

        throw $r4;

     label2:
        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        <android.os.Looper: android.os.Looper sMainLooper> = $r3;

        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static android.os.Looper getMainLooper()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r3;
        android.os.Looper $r2;

        r0 = class "android/os/Looper";

        entermonitor class "android/os/Looper";

     label1:
        $r2 = <android.os.Looper: android.os.Looper sMainLooper>;

        exitmonitor r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void loop()
    {
        android.os.Looper r0;
        android.os.MessageQueue r1;
        long l0, l1;
        android.os.Message r2;
        android.util.Printer r3;
        android.os.Handler $r4, $r14, $r23, $r31;
        byte $b3;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r15, $r18, $r19, $r20, $r22, $r24, $r25, $r26, $r27, $r29, $r32, $r33, $r34, $r35, $r36, $r38, $r41;
        java.lang.String $r8, $r9, $r16, $r21, $r28, $r40;
        java.lang.Class $r13;
        java.lang.Runnable $r17, $r30, $r37;
        int $i5, $i6;
        java.lang.RuntimeException $r39;

        r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r0 != null goto label1;

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>("No Looper; Looper.prepare() wasn\'t called on this thread.");

        throw $r39;

     label1:
        r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        r2 = virtualinvoke r1.<android.os.MessageQueue: android.os.Message next()>();

        if r2 != null goto label3;

        return;

     label3:
        r3 = r0.<android.os.Looper: android.util.Printer mLogging>;

        if r3 == null goto label4;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>>> Dispatching to ");

        $r31 = r2.<android.os.Message: android.os.Handler target>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = r2.<android.os.Message: java.lang.Runnable callback>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i6 = r2.<android.os.Message: int what>;

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.util.Printer: void println(java.lang.String)>($r40);

     label4:
        $r4 = r2.<android.os.Message: android.os.Handler target>;

        virtualinvoke $r4.<android.os.Handler: void dispatchMessage(android.os.Message)>(r2);

        if r3 == null goto label5;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<<<< Finished to ");

        $r23 = r2.<android.os.Message: android.os.Handler target>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r30 = r2.<android.os.Message: java.lang.Runnable callback>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.util.Printer: void println(java.lang.String)>($r28);

     label5:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $b3 = l0 cmp l1;

        if $b3 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread identity changed from 0x");

        $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to 0x");

        $r9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while dispatching to ");

        $r14 = r2.<android.os.Message: android.os.Handler target>;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = r2.<android.os.Message: java.lang.Runnable callback>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" what=");

        $i5 = r2.<android.os.Message: int what>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("Looper", $r21);

     label6:
        virtualinvoke r2.<android.os.Message: void recycleUnchecked()>();

        goto label2;
    }

    public static android.os.Looper myLooper()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.os.Looper $r2;

        $r0 = <android.os.Looper: java.lang.ThreadLocal sThreadLocal>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.os.Looper) $r1;

        return $r2;
    }

    public void setMessageLogging(android.util.Printer)
    {
        android.os.Looper r0;
        android.util.Printer r1;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.Printer;

        r0.<android.os.Looper: android.util.Printer mLogging> = r1;

        return;
    }

    public static android.os.MessageQueue myQueue()
    {
        android.os.Looper $r0;
        android.os.MessageQueue $r1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = $r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        return $r1;
    }

    private void <init>(boolean)
    {
        android.os.Looper r0;
        boolean z0;
        android.os.MessageQueue $r1;
        java.lang.Thread $r2;

        r0 := @this: android.os.Looper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.MessageQueue;

        specialinvoke $r1.<android.os.MessageQueue: void <init>(boolean)>(z0);

        r0.<android.os.Looper: android.os.MessageQueue mQueue> = $r1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.os.Looper: java.lang.Thread mThread> = $r2;

        return;
    }

    public boolean isCurrentThread()
    {
        android.os.Looper r0;
        java.lang.Thread $r1, $r2;
        boolean $z0;

        r0 := @this: android.os.Looper;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<android.os.Looper: java.lang.Thread mThread>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void quit()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        virtualinvoke $r1.<android.os.MessageQueue: void quit(boolean)>(0);

        return;
    }

    public void quitSafely()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        virtualinvoke $r1.<android.os.MessageQueue: void quit(boolean)>(1);

        return;
    }

    public int postSyncBarrier()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;
        long $l0;
        int $i1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i1 = virtualinvoke $r1.<android.os.MessageQueue: int enqueueSyncBarrier(long)>($l0);

        return $i1;
    }

    public void removeSyncBarrier(int)
    {
        android.os.Looper r0;
        int i0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        virtualinvoke $r1.<android.os.MessageQueue: void removeSyncBarrier(int)>(i0);

        return;
    }

    public java.lang.Thread getThread()
    {
        android.os.Looper r0;
        java.lang.Thread $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: java.lang.Thread mThread>;

        return $r1;
    }

    public android.os.MessageQueue getQueue()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        return $r1;
    }

    public boolean isIdling()
    {
        android.os.Looper r0;
        android.os.MessageQueue $r1;
        boolean $z0;

        r0 := @this: android.os.Looper;

        $r1 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        $z0 = virtualinvoke $r1.<android.os.MessageQueue: boolean isIdling()>();

        return $z0;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.os.Looper r0;
        android.util.Printer r1;
        java.lang.String r2, $r5, $r7, $r12;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r10, $r11;
        android.os.MessageQueue $r9;

        r0 := @this: android.os.Looper;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<android.os.Looper: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        $r9 = r0.<android.os.Looper: android.os.MessageQueue mQueue>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<android.os.MessageQueue: void dump(android.util.Printer,java.lang.String)>(r1, $r12);

        return;
    }

    public java.lang.String toString()
    {
        android.os.Looper r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.Thread $r3, $r7;
        java.lang.String $r4, $r10, $r13;
        long $l0;
        int $i1;

        r0 := @this: android.os.Looper;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looper (");

        $r3 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tid ");

        $r7 = r0.<android.os.Looper: java.lang.Thread mThread>;

        $l0 = virtualinvoke $r7.<java.lang.Thread: long getId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") {");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        <android.os.Looper: java.lang.String TAG> = "Looper";

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.os.Looper: java.lang.ThreadLocal sThreadLocal> = $r0;

        return;
    }
}
