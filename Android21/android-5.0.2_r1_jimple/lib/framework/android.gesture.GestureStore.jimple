public class android.gesture.GestureStore extends java.lang.Object
{
    public static final int SEQUENCE_INVARIANT;
    public static final int SEQUENCE_SENSITIVE;
    public static final int ORIENTATION_INVARIANT;
    public static final int ORIENTATION_SENSITIVE;
    static final int ORIENTATION_SENSITIVE_4;
    static final int ORIENTATION_SENSITIVE_8;
    private static final short FILE_FORMAT_VERSION;
    private static final boolean PROFILE_LOADING_SAVING;
    private int mSequenceType;
    private int mOrientationStyle;
    private final java.util.HashMap mNamedGestures;
    private android.gesture.Learner mClassifier;
    private boolean mChanged;

    public void <init>()
    {
        android.gesture.GestureStore r0;
        java.util.HashMap $r1;
        android.gesture.InstanceLearner $r2;

        r0 := @this: android.gesture.GestureStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.gesture.GestureStore: int mSequenceType> = 2;

        r0.<android.gesture.GestureStore: int mOrientationStyle> = 2;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures> = $r1;

        r0.<android.gesture.GestureStore: boolean mChanged> = 0;

        $r2 = new android.gesture.InstanceLearner;

        specialinvoke $r2.<android.gesture.InstanceLearner: void <init>()>();

        r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier> = $r2;

        return;
    }

    public void setOrientationStyle(int)
    {
        android.gesture.GestureStore r0;
        int i0;

        r0 := @this: android.gesture.GestureStore;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureStore: int mOrientationStyle> = i0;

        return;
    }

    public int getOrientationStyle()
    {
        android.gesture.GestureStore r0;
        int $i0;

        r0 := @this: android.gesture.GestureStore;

        $i0 = r0.<android.gesture.GestureStore: int mOrientationStyle>;

        return $i0;
    }

    public void setSequenceType(int)
    {
        android.gesture.GestureStore r0;
        int i0;

        r0 := @this: android.gesture.GestureStore;

        i0 := @parameter0: int;

        r0.<android.gesture.GestureStore: int mSequenceType> = i0;

        return;
    }

    public int getSequenceType()
    {
        android.gesture.GestureStore r0;
        int $i0;

        r0 := @this: android.gesture.GestureStore;

        $i0 = r0.<android.gesture.GestureStore: int mSequenceType>;

        return $i0;
    }

    public java.util.Set getGestureEntries()
    {
        android.gesture.GestureStore r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: android.gesture.GestureStore;

        $r1 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.ArrayList recognize(android.gesture.Gesture)
    {
        android.gesture.GestureStore r0;
        android.gesture.Gesture r1;
        android.gesture.Instance r2;
        int $i0, $i1, $i2, $i3;
        float[] $r3;
        android.gesture.Learner $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: android.gesture.Gesture;

        $i1 = r0.<android.gesture.GestureStore: int mSequenceType>;

        $i0 = r0.<android.gesture.GestureStore: int mOrientationStyle>;

        r2 = staticinvoke <android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>($i1, $i0, r1, null);

        $r4 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        $i3 = r0.<android.gesture.GestureStore: int mSequenceType>;

        $i2 = r0.<android.gesture.GestureStore: int mOrientationStyle>;

        $r3 = r2.<android.gesture.Instance: float[] vector>;

        $r5 = virtualinvoke $r4.<android.gesture.Learner: java.util.ArrayList classify(int,int,float[])>($i3, $i2, $r3);

        return $r5;
    }

    public void addGesture(java.lang.String, android.gesture.Gesture)
    {
        android.gesture.GestureStore r0;
        java.lang.String r1;
        android.gesture.Gesture r2;
        java.util.ArrayList r3, $r8;
        int $i0, $i1, $i2;
        java.util.HashMap $r4, $r9;
        java.lang.Object $r5;
        android.gesture.Learner $r6;
        android.gesture.Instance $r7;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.gesture.Gesture;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.ArrayList) $r5;

        if r3 != null goto label3;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        $r9 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label3:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        $i2 = r0.<android.gesture.GestureStore: int mSequenceType>;

        $i1 = r0.<android.gesture.GestureStore: int mOrientationStyle>;

        $r7 = staticinvoke <android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>($i2, $i1, r2, r1);

        virtualinvoke $r6.<android.gesture.Learner: void addInstance(android.gesture.Instance)>($r7);

        r0.<android.gesture.GestureStore: boolean mChanged> = 1;

        return;
    }

    public void removeGesture(java.lang.String, android.gesture.Gesture)
    {
        android.gesture.GestureStore r0;
        java.lang.String r1;
        android.gesture.Gesture r2;
        java.util.ArrayList r3;
        java.util.HashMap $r4, $r7;
        java.lang.Object $r5;
        boolean $z1;
        android.gesture.Learner $r6;
        long $l0;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.gesture.Gesture;

        $r4 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.ArrayList) $r5;

        if r3 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $z1 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        $r6 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        $l0 = virtualinvoke r2.<android.gesture.Gesture: long getID()>();

        virtualinvoke $r6.<android.gesture.Learner: void removeInstance(long)>($l0);

        r0.<android.gesture.GestureStore: boolean mChanged> = 1;

        return;
    }

    public void removeEntry(java.lang.String)
    {
        android.gesture.GestureStore r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        android.gesture.Learner $r4;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        virtualinvoke $r4.<android.gesture.Learner: void removeInstances(java.lang.String)>(r1);

        r0.<android.gesture.GestureStore: boolean mChanged> = 1;

        return;
    }

    public java.util.ArrayList getGestures(java.lang.String)
    {
        android.gesture.GestureStore r0;
        java.lang.String r1;
        java.util.ArrayList r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.ArrayList) $r4;

        if r2 == null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        return $r5;

     label1:
        return null;
    }

    public boolean hasChanged()
    {
        android.gesture.GestureStore r0;
        boolean $z0;

        r0 := @this: android.gesture.GestureStore;

        $z0 = r0.<android.gesture.GestureStore: boolean mChanged>;

        return $z0;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        android.gesture.GestureStore r0;
        java.io.OutputStream r1;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.io.OutputStream;

        virtualinvoke r0.<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>(r1, 0);

        return;
    }

    public void save(java.io.OutputStream, boolean) throws java.io.IOException
    {
        android.gesture.GestureStore r0;
        java.io.OutputStream r1, $r10;
        boolean z0, $z1, $z2;
        java.io.DataOutputStream r2, r19;
        java.util.HashMap r3;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6;
        java.util.ArrayList r7;
        int i0, i1, $i2;
        java.lang.Throwable r8, $r16;
        java.util.Set $r11;
        java.lang.Object $r12, $r13, $r14, $r15;
        android.gesture.Gesture $r17;
        java.io.BufferedOutputStream r18;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        r2 = null;

     label01:
        r3 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        r19 = new java.io.DataOutputStream;

        $z1 = r1 instanceof java.io.BufferedOutputStream;

        if $z1 == 0 goto label02;

        $r10 = r1;

        goto label03;

     label02:
        r18 = new java.io.BufferedOutputStream;

        $r10 = r18;

        specialinvoke r18.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 32768);

     label03:
        specialinvoke r19.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r10);

        r2 = r19;

        virtualinvoke r2.<java.io.DataOutputStream: void writeShort(int)>(1);

        $i2 = virtualinvoke r3.<java.util.HashMap: int size()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r11 = virtualinvoke r3.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r14;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (java.util.ArrayList) $r13;

        i0 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r6);

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>(i0);

        i1 = 0;

     label05:
        if i1 >= i0 goto label06;

        $r15 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r17 = (android.gesture.Gesture) $r15;

        virtualinvoke $r17.<android.gesture.Gesture: void serialize(java.io.DataOutputStream)>(r2);

        i1 = i1 + 1;

        goto label05;

     label06:
        goto label04;

     label07:
        virtualinvoke r2.<java.io.DataOutputStream: void flush()>();

        r0.<android.gesture.GestureStore: boolean mChanged> = 0;

     label08:
        if z0 == 0 goto label12;

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

        goto label12;

     label09:
        $r16 := @caughtexception;

        r8 = $r16;

     label10:
        if z0 == 0 goto label11;

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

     label11:
        throw r8;

     label12:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void load(java.io.InputStream) throws java.io.IOException
    {
        android.gesture.GestureStore r0;
        java.io.InputStream r1;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>(r1, 0);

        return;
    }

    public void load(java.io.InputStream, boolean) throws java.io.IOException
    {
        android.gesture.GestureStore r0;
        java.io.InputStream r1, $r5;
        boolean z0, $z1;
        java.io.DataInputStream r2, r8;
        short s0;
        java.lang.Throwable r3, $r6;
        java.io.BufferedInputStream r7;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        r2 = null;

     label1:
        r8 = new java.io.DataInputStream;

        $z1 = r1 instanceof java.io.BufferedInputStream;

        if $z1 == 0 goto label2;

        $r5 = r1;

        goto label3;

     label2:
        r7 = new java.io.BufferedInputStream;

        $r5 = r7;

        specialinvoke r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r1, 32768);

     label3:
        specialinvoke r8.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r5);

        r2 = r8;

        s0 = virtualinvoke r2.<java.io.DataInputStream: short readShort()>();

        lookupswitch(s0)
        {
            case 1: goto label4;
            default: goto label5;
        };

     label4:
        specialinvoke r0.<android.gesture.GestureStore: void readFormatV1(java.io.DataInputStream)>(r2);

     label5:
        if z0 == 0 goto label9;

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

        goto label9;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

     label7:
        if z0 == 0 goto label8;

        staticinvoke <android.gesture.GestureUtils: void closeStream(java.io.Closeable)>(r2);

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void readFormatV1(java.io.DataInputStream) throws java.io.IOException
    {
        android.gesture.GestureStore r0;
        java.io.DataInputStream r1;
        android.gesture.Learner r2;
        java.util.HashMap r3;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String r4;
        java.util.ArrayList r5, $r7;
        android.gesture.Gesture r6;
        android.gesture.Instance $r9;

        r0 := @this: android.gesture.GestureStore;

        r1 := @parameter0: java.io.DataInputStream;

        r2 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        r3 = r0.<android.gesture.GestureStore: java.util.HashMap mNamedGestures>;

        virtualinvoke r3.<java.util.HashMap: void clear()>();

        i0 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        i2 = virtualinvoke r1.<java.io.DataInputStream: int readInt()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i2);

        r5 = $r7;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        r6 = staticinvoke <android.gesture.Gesture: android.gesture.Gesture deserialize(java.io.DataInputStream)>(r1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        $i4 = r0.<android.gesture.GestureStore: int mSequenceType>;

        $i5 = r0.<android.gesture.GestureStore: int mOrientationStyle>;

        $r9 = staticinvoke <android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>($i4, $i5, r6, r4);

        virtualinvoke r2.<android.gesture.Learner: void addInstance(android.gesture.Instance)>($r9);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    android.gesture.Learner getLearner()
    {
        android.gesture.GestureStore r0;
        android.gesture.Learner $r1;

        r0 := @this: android.gesture.GestureStore;

        $r1 = r0.<android.gesture.GestureStore: android.gesture.Learner mClassifier>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.gesture.GestureStore: boolean PROFILE_LOADING_SAVING> = 0;

        <android.gesture.GestureStore: short FILE_FORMAT_VERSION> = 1;

        <android.gesture.GestureStore: int ORIENTATION_SENSITIVE_8> = 8;

        <android.gesture.GestureStore: int ORIENTATION_SENSITIVE_4> = 4;

        <android.gesture.GestureStore: int ORIENTATION_SENSITIVE> = 2;

        <android.gesture.GestureStore: int ORIENTATION_INVARIANT> = 1;

        <android.gesture.GestureStore: int SEQUENCE_SENSITIVE> = 2;

        <android.gesture.GestureStore: int SEQUENCE_INVARIANT> = 1;

        return;
    }
}
