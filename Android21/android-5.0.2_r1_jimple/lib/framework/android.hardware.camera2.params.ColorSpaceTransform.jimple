public final class android.hardware.camera2.params.ColorSpaceTransform extends java.lang.Object
{
    private static final int ROWS;
    private static final int COLUMNS;
    private static final int COUNT;
    private static final int RATIONAL_SIZE;
    private static final int OFFSET_NUMERATOR;
    private static final int OFFSET_DENOMINATOR;
    private static final int COUNT_INT;
    private final int[] mElements;

    public void <init>(android.util.Rational[])
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        android.util.Rational[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r3, $r11, $r13;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.util.Rational $r10, $r12;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        r1 := @parameter0: android.util.Rational[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "elements must not be null");

        $i1 = lengthof r1;

        if $i1 == 9 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("elements must be 9 length");

        throw $r14;

     label1:
        $r3 = newarray (int)[18];

        r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements> = $r3;

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] must not be null");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, $r8);

        $r11 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i3 = i0 * 2;

        $i5 = $i3 + 0;

        $r10 = r1[i0];

        $i4 = virtualinvoke $r10.<android.util.Rational: int getNumerator()>();

        $r11[$i5] = $i4;

        $r13 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i6 = i0 * 2;

        $i7 = $i6 + 1;

        $r12 = r1[i0];

        $i8 = virtualinvoke $r12.<android.util.Rational: int getDenominator()>();

        $r13[$i7] = $i8;

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public void <init>(int[])
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        int[] r1, $r3;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "elements must not be null");

        $i1 = lengthof r1;

        if $i1 == 18 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("elements must be 18 length");

        throw $r10;

     label1:
        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not be null");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, $r8);

        i0 = i0 + 1;

        goto label2;

     label3:
        $i3 = lengthof r1;

        $r3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i3);

        r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements> = $r3;

        return;
    }

    public android.util.Rational getElement(int, int)
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.IllegalArgumentException $r1, $r2;
        int[] $r3, $r5;
        android.util.Rational $r4;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 < 3 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("column out of range");

        throw $r1;

     label2:
        if i1 < 0 goto label3;

        if i1 < 3 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("row out of range");

        throw $r2;

     label4:
        $r3 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i4 = i1 * 3;

        $i5 = $i4 + i0;

        $i6 = $i5 * 2;

        $i7 = $i6 + 0;

        i2 = $r3[$i7];

        $r5 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i8 = i1 * 3;

        $i9 = $i8 + i0;

        $i10 = $i9 * 2;

        $i11 = $i10 + 1;

        i3 = $r5[$i11];

        $r4 = new android.util.Rational;

        specialinvoke $r4.<android.util.Rational: void <init>(int,int)>(i2, i3);

        return $r4;
    }

    public void copyElements(android.util.Rational[], int)
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        android.util.Rational[] r1;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10;
        int[] $r3, $r4;
        android.util.Rational $r5;
        java.lang.ArrayIndexOutOfBoundsException $r6;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        r1 := @parameter0: android.util.Rational[];

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>(i0, "offset must not be negative");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "destination must not be null");

        $i6 = lengthof r1;

        $i7 = $i6 - i0;

        if $i7 >= 9 goto label1;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("destination too small to fit elements");

        throw $r6;

     label1:
        i1 = 0;

        i2 = 0;

     label2:
        if i1 >= 9 goto label3;

        $r3 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i8 = i2 + 0;

        i3 = $r3[$i8];

        $r4 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i9 = i2 + 1;

        i4 = $r4[$i9];

        $i10 = i1 + i0;

        $r5 = new android.util.Rational;

        specialinvoke $r5.<android.util.Rational: void <init>(int,int)>(i3, i4);

        r1[$i10] = $r5;

        i1 = i1 + 1;

        i2 = i2 + 2;

        goto label2;

     label3:
        return;
    }

    public void copyElements(int[], int)
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        int[] r1, $r3;
        int i0, i1, $i3, $i4, $i5, $i6;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>(i0, "offset must not be negative");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "destination must not be null");

        $i3 = lengthof r1;

        $i4 = $i3 - i0;

        if $i4 >= 18 goto label1;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("destination too small to fit elements");

        throw $r4;

     label1:
        i1 = 0;

     label2:
        if i1 >= 18 goto label3;

        $i6 = i1 + i0;

        $r3 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i5 = $r3[i1];

        r1[$i6] = $i5;

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.ColorSpaceTransform r0, r2;
        java.lang.Object r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.util.Rational r3, r4, $r9, $r10;
        boolean $z0, $z1;
        int[] $r5, $r6, $r7, $r8;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof android.hardware.camera2.params.ColorSpaceTransform;

        if $z0 == 0 goto label6;

        r2 = (android.hardware.camera2.params.ColorSpaceTransform) r1;

        i0 = 0;

        i1 = 0;

     label3:
        if i0 >= 9 goto label5;

        $r5 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i6 = i1 + 0;

        i2 = $r5[$i6];

        $r6 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i7 = i1 + 1;

        i3 = $r6[$i7];

        $r7 = r2.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i8 = i1 + 0;

        i4 = $r7[$i8];

        $r8 = r2.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i9 = i1 + 1;

        i5 = $r8[$i9];

        $r10 = new android.util.Rational;

        specialinvoke $r10.<android.util.Rational: void <init>(int,int)>(i2, i3);

        r3 = $r10;

        $r9 = new android.util.Rational;

        specialinvoke $r9.<android.util.Rational: void <init>(int,int)>(i4, i5);

        r4 = $r9;

        $z1 = virtualinvoke r3.<android.util.Rational: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i0 = i0 + 1;

        i1 = i1 + 2;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        $r1 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i0 = staticinvoke <android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = specialinvoke r0.<android.hardware.camera2.params.ColorSpaceTransform: java.lang.String toShortString()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ColorSpaceTransform%s", $r1);

        return $r3;
    }

    private java.lang.String toShortString()
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.lang.String $r4;
        int[] $r8, $r10;

        r0 := @this: android.hardware.camera2.params.ColorSpaceTransform;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        r1 = $r2;

        i0 = 0;

        i1 = 0;

     label1:
        if i0 >= 3 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i2 = 0;

     label2:
        if i2 >= 3 goto label4;

        $r8 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i5 = i1 + 0;

        i3 = $r8[$i5];

        $r10 = r0.<android.hardware.camera2.params.ColorSpaceTransform: int[] mElements>;

        $i6 = i1 + 1;

        i4 = $r10[$i6];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        if i2 >= 2 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i2 = i2 + 1;

        i1 = i1 + 2;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        if i0 >= 2 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.params.ColorSpaceTransform: int COUNT_INT> = 18;

        <android.hardware.camera2.params.ColorSpaceTransform: int OFFSET_DENOMINATOR> = 1;

        <android.hardware.camera2.params.ColorSpaceTransform: int OFFSET_NUMERATOR> = 0;

        <android.hardware.camera2.params.ColorSpaceTransform: int RATIONAL_SIZE> = 2;

        <android.hardware.camera2.params.ColorSpaceTransform: int COUNT> = 9;

        <android.hardware.camera2.params.ColorSpaceTransform: int COLUMNS> = 3;

        <android.hardware.camera2.params.ColorSpaceTransform: int ROWS> = 3;

        return;
    }
}
