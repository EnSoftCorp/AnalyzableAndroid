class android.telecom.RemoteConnectionService$1 extends java.lang.Object implements com.android.internal.telecom.IConnectionServiceAdapter
{
    final android.telecom.RemoteConnectionService this$0;

    void <init>(android.telecom.RemoteConnectionService)
    {
        android.telecom.RemoteConnectionService$1 r0;
        android.telecom.RemoteConnectionService r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: android.telecom.RemoteConnectionService;

        r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handleCreateConnectionComplete(java.lang.String, android.telecom.ConnectionRequest, android.telecom.ParcelableConnection)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r7, $r15;
        android.telecom.ConnectionRequest r2;
        android.telecom.ParcelableConnection r3;
        android.telecom.RemoteConnection r4, $r9;
        java.util.ArrayList r5, $r17;
        java.util.Iterator r6;
        android.telecom.RemoteConnectionService $r8, $r10, $r12, $r18, $r20;
        java.util.Set $r11, $r13;
        boolean $z0, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.net.Uri $r14;
        java.util.List $r16;
        java.lang.Object $r19, $r24;
        java.util.Map $r21, $r22;
        android.telecom.DisconnectCause $r23;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ConnectionRequest;

        r3 := @parameter2: android.telecom.ParcelableConnection;

        $r8 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r8, r1, "handleCreateConnectionSuccessful");

        $r9 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$100()>();

        if r4 == $r9 goto label6;

        $r10 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r11 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Set access$200(android.telecom.RemoteConnectionService)>($r10);

        $z0 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label6;

        $r12 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r13 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Set access$200(android.telecom.RemoteConnectionService)>($r12);

        interfaceinvoke $r13.<java.util.Set: boolean remove(java.lang.Object)>(r4);

        $i0 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getCapabilities()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setCallCapabilities(int)>($i0);

        $r14 = virtualinvoke r3.<android.telecom.ParcelableConnection: android.net.Uri getHandle()>();

        $i1 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getHandlePresentation()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setAddress(android.net.Uri,int)>($r14, $i1);

        $r15 = virtualinvoke r3.<android.telecom.ParcelableConnection: java.lang.String getCallerDisplayName()>();

        $i2 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getCallerDisplayNamePresentation()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setCallerDisplayName(java.lang.String,int)>($r15, $i2);

        $i4 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getState()>();

        if $i4 != 6 goto label1;

        $r23 = virtualinvoke r3.<android.telecom.ParcelableConnection: android.telecom.DisconnectCause getDisconnectCause()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setDisconnected(android.telecom.DisconnectCause)>($r23);

        goto label2;

     label1:
        $i3 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getState()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setState(int)>($i3);

     label2:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r5 = $r17;

        $r16 = virtualinvoke r3.<android.telecom.ParcelableConnection: java.util.List getConferenceableConnectionIds()>();

        r6 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r19;

        $r18 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r22 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r18);

        $z3 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r7);

        if $z3 == 0 goto label4;

        $r20 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r21 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r20);

        $r24 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24);

     label4:
        goto label3;

     label5:
        virtualinvoke r4.<android.telecom.RemoteConnection: void setConferenceableConnections(java.util.List)>(r5);

        $i6 = virtualinvoke r3.<android.telecom.ParcelableConnection: int getVideoState()>();

        virtualinvoke r4.<android.telecom.RemoteConnection: void setVideoState(int)>($i6);

        $i5 = virtualinvoke r4.<android.telecom.RemoteConnection: int getState()>();

        if $i5 != 6 goto label6;

        virtualinvoke r4.<android.telecom.RemoteConnection: void setDestroyed()>();

     label6:
        return;
    }

    public void setActive(java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.RemoteConnectionService $r2, $r4, $r6;
        java.util.Map $r3;
        boolean $z0;
        android.telecom.RemoteConference $r5;
        android.telecom.RemoteConnection $r7;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r7 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r6, r1, "setActive");

        virtualinvoke $r7.<android.telecom.RemoteConnection: void setState(int)>(4);

        goto label2;

     label1:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setActive");

        virtualinvoke $r5.<android.telecom.RemoteConference: void setState(int)>(4);

     label2:
        return;
    }

    public void setRinging(java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.RemoteConnectionService $r2;
        android.telecom.RemoteConnection $r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r1, "setRinging");

        virtualinvoke $r3.<android.telecom.RemoteConnection: void setState(int)>(2);

        return;
    }

    public void setDialing(java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.RemoteConnectionService $r2;
        android.telecom.RemoteConnection $r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r1, "setDialing");

        virtualinvoke $r3.<android.telecom.RemoteConnection: void setState(int)>(3);

        return;
    }

    public void setDisconnected(java.lang.String, android.telecom.DisconnectCause)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.DisconnectCause r2;
        android.telecom.RemoteConnectionService $r3, $r5, $r7;
        java.util.Map $r4;
        boolean $z0;
        android.telecom.RemoteConference $r6;
        android.telecom.RemoteConnection $r8;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.DisconnectCause;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r1, "setDisconnected");

        virtualinvoke $r8.<android.telecom.RemoteConnection: void setDisconnected(android.telecom.DisconnectCause)>(r2);

        goto label2;

     label1:
        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setDisconnected");

        virtualinvoke $r6.<android.telecom.RemoteConference: void setDisconnected(android.telecom.DisconnectCause)>(r2);

     label2:
        return;
    }

    public void setOnHold(java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.RemoteConnectionService $r2, $r4, $r6;
        java.util.Map $r3;
        boolean $z0;
        android.telecom.RemoteConference $r5;
        android.telecom.RemoteConnection $r7;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r7 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r6, r1, "setOnHold");

        virtualinvoke $r7.<android.telecom.RemoteConnection: void setState(int)>(5);

        goto label2;

     label1:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setOnHold");

        virtualinvoke $r5.<android.telecom.RemoteConference: void setState(int)>(5);

     label2:
        return;
    }

    public void setRingbackRequested(java.lang.String, boolean)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.RemoteConnectionService $r2;
        android.telecom.RemoteConnection $r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r1, "setRingbackRequested");

        virtualinvoke $r3.<android.telecom.RemoteConnection: void setRingbackRequested(boolean)>(z0);

        return;
    }

    public void setCallCapabilities(java.lang.String, int)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.RemoteConnectionService $r2, $r4, $r6;
        java.util.Map $r3;
        boolean $z0;
        android.telecom.RemoteConference $r5;
        android.telecom.RemoteConnection $r7;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r7 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r6, r1, "setCallCapabilities");

        virtualinvoke $r7.<android.telecom.RemoteConnection: void setCallCapabilities(int)>(i0);

        goto label2;

     label1:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "setCallCapabilities");

        virtualinvoke $r5.<android.telecom.RemoteConference: void setCallCapabilities(int)>(i0);

     label2:
        return;
    }

    public void setIsConferenced(java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        android.telecom.RemoteConnection r3, $r6;
        android.telecom.RemoteConference r4, $r8, $r9, $r10;
        android.telecom.RemoteConnectionService $r5, $r7;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r5, r1, "setIsConferenced");

        $r6 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$100()>();

        if r3 == $r6 goto label2;

        if r2 != null goto label1;

        $r9 = virtualinvoke r3.<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>();

        if $r9 == null goto label2;

        $r10 = virtualinvoke r3.<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>();

        virtualinvoke $r10.<android.telecom.RemoteConference: void removeConnection(android.telecom.RemoteConnection)>(r3);

        goto label2;

     label1:
        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r7, r2, "setIsConferenced");

        $r8 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$500()>();

        if r4 == $r8 goto label2;

        virtualinvoke r4.<android.telecom.RemoteConference: void addConnection(android.telecom.RemoteConnection)>(r3);

     label2:
        return;
    }

    public void addConferenceCall(java.lang.String, android.telecom.ParcelableConference)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r5;
        android.telecom.ParcelableConference r2;
        android.telecom.RemoteConference r3, $r7;
        java.util.Iterator r4;
        android.telecom.RemoteConnection r6;
        android.telecom.RemoteConnectionService $r8, $r12, $r15, $r20;
        com.android.internal.telecom.IConnectionService $r9;
        java.util.List $r10, $r11;
        boolean $z0;
        int $i0, $i1, $i2;
        java.util.Map $r14, $r19;
        android.telecom.RemoteConnectionService$1$1 $r16;
        java.lang.Object $r17, $r21;
        android.telecom.ConnectionService $r18;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.ParcelableConference;

        $r7 = new android.telecom.RemoteConference;

        $r8 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r9 = staticinvoke <android.telecom.RemoteConnectionService: com.android.internal.telecom.IConnectionService access$600(android.telecom.RemoteConnectionService)>($r8);

        specialinvoke $r7.<android.telecom.RemoteConference: void <init>(java.lang.String,com.android.internal.telecom.IConnectionService)>(r1, $r9);

        r3 = $r7;

        $r10 = virtualinvoke r2.<android.telecom.ParcelableConference: java.util.List getConnectionIds()>();

        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r17;

        $r20 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r19 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r20);

        $r21 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (android.telecom.RemoteConnection) $r21;

        if r6 == null goto label2;

        virtualinvoke r3.<android.telecom.RemoteConference: void addConnection(android.telecom.RemoteConnection)>(r6);

     label2:
        goto label1;

     label3:
        $r11 = virtualinvoke r3.<android.telecom.RemoteConference: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        return;

     label4:
        $i1 = virtualinvoke r2.<android.telecom.ParcelableConference: int getState()>();

        virtualinvoke r3.<android.telecom.RemoteConference: void setState(int)>($i1);

        $i2 = virtualinvoke r2.<android.telecom.ParcelableConference: int getCapabilities()>();

        virtualinvoke r3.<android.telecom.RemoteConference: void setCallCapabilities(int)>($i2);

        $r12 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r14 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$700(android.telecom.RemoteConnectionService)>($r12);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        $r16 = new android.telecom.RemoteConnectionService$1$1;

        specialinvoke $r16.<android.telecom.RemoteConnectionService$1$1: void <init>(android.telecom.RemoteConnectionService$1,java.lang.String)>(r0, r1);

        virtualinvoke r3.<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference$Callback)>($r16);

        $r15 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r18 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.ConnectionService access$900(android.telecom.RemoteConnectionService)>($r15);

        virtualinvoke $r18.<android.telecom.ConnectionService: void addRemoteConference(android.telecom.RemoteConference)>(r3);

        return;
    }

    public void removeCall(java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.RemoteConnectionService $r2, $r4, $r6;
        java.util.Map $r3;
        boolean $z0;
        android.telecom.RemoteConference $r5;
        android.telecom.RemoteConnection $r7;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r7 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r6, r1, "removeCall");

        virtualinvoke $r7.<android.telecom.RemoteConnection: void setDestroyed()>();

        goto label2;

     label1:
        $r4 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r5 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r4, r1, "removeCall");

        virtualinvoke $r5.<android.telecom.RemoteConference: void setDestroyed()>();

     label2:
        return;
    }

    public void onPostDialWait(java.lang.String, java.lang.String)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "onPostDialWait");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setPostDialWait(java.lang.String)>(r2);

        return;
    }

    public void queryRemoteConnectionServices(com.android.internal.telecom.RemoteServiceCallback)
    {
        android.telecom.RemoteConnectionService$1 r0;
        com.android.internal.telecom.RemoteServiceCallback r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: com.android.internal.telecom.RemoteServiceCallback;

        return;
    }

    public void setVideoProvider(java.lang.String, com.android.internal.telecom.IVideoProvider)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        com.android.internal.telecom.IVideoProvider r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;
        android.telecom.RemoteConnection$VideoProvider $r5;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telecom.IVideoProvider;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setVideoProvider");

        $r5 = new android.telecom.RemoteConnection$VideoProvider;

        specialinvoke $r5.<android.telecom.RemoteConnection$VideoProvider: void <init>(com.android.internal.telecom.IVideoProvider)>(r2);

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setVideoProvider(android.telecom.RemoteConnection$VideoProvider)>($r5);

        return;
    }

    public void setVideoState(java.lang.String, int)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        int i0;
        android.telecom.RemoteConnectionService $r2;
        android.telecom.RemoteConnection $r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r1, "setVideoState");

        virtualinvoke $r3.<android.telecom.RemoteConnection: void setVideoState(int)>(i0);

        return;
    }

    public void setIsVoipAudioMode(java.lang.String, boolean)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        boolean z0;
        android.telecom.RemoteConnectionService $r2;
        android.telecom.RemoteConnection $r3;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r3 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r2, r1, "setIsVoipAudioMode");

        virtualinvoke $r3.<android.telecom.RemoteConnection: void setIsVoipAudioMode(boolean)>(z0);

        return;
    }

    public void setStatusHints(java.lang.String, android.telecom.StatusHints)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.telecom.StatusHints r2;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.telecom.StatusHints;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setStatusHints");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setStatusHints(android.telecom.StatusHints)>(r2);

        return;
    }

    public void setAddress(java.lang.String, android.net.Uri, int)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1;
        android.net.Uri r2;
        int i0;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setAddress");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setAddress(android.net.Uri,int)>(r2, i0);

        return;
    }

    public void setCallerDisplayName(java.lang.String, java.lang.String, int)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r2;
        int i0;
        android.telecom.RemoteConnectionService $r3;
        android.telecom.RemoteConnection $r4;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r4 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r3, r1, "setCallerDisplayName");

        virtualinvoke $r4.<android.telecom.RemoteConnection: void setCallerDisplayName(java.lang.String,int)>(r2, i0);

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public final void setConferenceableConnections(java.lang.String, java.util.List)
    {
        android.telecom.RemoteConnectionService$1 r0;
        java.lang.String r1, r5;
        java.util.List r2;
        java.util.ArrayList r3, $r6;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        android.telecom.RemoteConnectionService $r7, $r8, $r10, $r14, $r15;
        android.telecom.RemoteConference $r9;
        android.telecom.RemoteConnection $r11;
        java.lang.Object $r12, $r16;
        java.util.Map $r13, $r17;

        r0 := @this: android.telecom.RemoteConnectionService$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $r14 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r13 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r14);

        $z2 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z2 == 0 goto label2;

        $r15 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r17 = staticinvoke <android.telecom.RemoteConnectionService: java.util.Map access$300(android.telecom.RemoteConnectionService)>($r15);

        $r16 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r16);

     label2:
        goto label1;

     label3:
        $r7 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $z1 = staticinvoke <android.telecom.RemoteConnectionService: boolean access$1000(android.telecom.RemoteConnectionService,java.lang.String)>($r7, r1);

        if $z1 == 0 goto label4;

        $r10 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r11 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConnection access$000(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r10, r1, "setConferenceableConnections");

        virtualinvoke $r11.<android.telecom.RemoteConnection: void setConferenceableConnections(java.util.List)>(r3);

        goto label5;

     label4:
        $r8 = r0.<android.telecom.RemoteConnectionService$1: android.telecom.RemoteConnectionService this$0>;

        $r9 = staticinvoke <android.telecom.RemoteConnectionService: android.telecom.RemoteConference access$400(android.telecom.RemoteConnectionService,java.lang.String,java.lang.String)>($r8, r1, "setConferenceableConnections");

        virtualinvoke $r9.<android.telecom.RemoteConference: void setConferenceableConnections(java.util.List)>(r3);

     label5:
        return;
    }
}
