public final class android.os.PersistableBundle extends android.os.BaseBundle implements java.lang.Cloneable, android.os.Parcelable, com.android.internal.util.XmlUtils$WriteMapCallback
{
    private static final java.lang.String TAG_PERSISTABLEMAP;
    public static final android.os.PersistableBundle EMPTY;
    static final android.os.Parcel EMPTY_PARCEL;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.os.PersistableBundle r0;

        r0 := @this: android.os.PersistableBundle;

        specialinvoke r0.<android.os.BaseBundle: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        android.os.PersistableBundle r0;
        int i0;

        r0 := @this: android.os.PersistableBundle;

        i0 := @parameter0: int;

        specialinvoke r0.<android.os.BaseBundle: void <init>(int)>(i0);

        return;
    }

    public void <init>(android.os.PersistableBundle)
    {
        android.os.PersistableBundle r0, r1;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.PersistableBundle;

        specialinvoke r0.<android.os.BaseBundle: void <init>(android.os.BaseBundle)>(r1);

        return;
    }

    private void <init>(java.util.Map)
    {
        android.os.PersistableBundle r0, $r15;
        java.util.Map r1, $r14;
        java.util.Set r2;
        java.util.Iterator r3;
        java.lang.String r4, $r12;
        java.lang.Object r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<android.os.BaseBundle: void <init>()>();

        virtualinvoke r0.<android.os.PersistableBundle: void putAll(java.util.Map)>(r1);

        r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $z1 = r5 instanceof java.util.Map;

        if $z1 == 0 goto label2;

        $r15 = new android.os.PersistableBundle;

        $r14 = (java.util.Map) r5;

        specialinvoke $r15.<android.os.PersistableBundle: void <init>(java.util.Map)>($r14);

        virtualinvoke r0.<android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>(r4, $r15);

        goto label3;

     label2:
        $z2 = r5 instanceof java.lang.Integer;

        if $z2 != 0 goto label3;

        $z3 = r5 instanceof java.lang.Long;

        if $z3 != 0 goto label3;

        $z4 = r5 instanceof java.lang.Double;

        if $z4 != 0 goto label3;

        $z5 = r5 instanceof java.lang.String;

        if $z5 != 0 goto label3;

        $z7 = r5 instanceof int[];

        if $z7 != 0 goto label3;

        $z6 = r5 instanceof long[];

        if $z6 != 0 goto label3;

        $z9 = r5 instanceof double[];

        if $z9 != 0 goto label3;

        $z8 = r5 instanceof java.lang.String[];

        if $z8 != 0 goto label3;

        $z10 = r5 instanceof android.os.PersistableBundle;

        if $z10 != 0 goto label3;

        if r5 == null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad value in PersistableBundle key=");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label3:
        goto label1;

     label4:
        return;
    }

    void <init>(android.os.Parcel, int)
    {
        android.os.PersistableBundle r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.os.BaseBundle: void <init>(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static android.os.PersistableBundle forPair(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.os.PersistableBundle r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new android.os.PersistableBundle;

        specialinvoke $r3.<android.os.PersistableBundle: void <init>(int)>(1);

        r2 = $r3;

        virtualinvoke r2.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>(r0, r1);

        return r2;
    }

    public java.lang.Object clone()
    {
        android.os.PersistableBundle r0, $r1;

        r0 := @this: android.os.PersistableBundle;

        $r1 = new android.os.PersistableBundle;

        specialinvoke $r1.<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>(r0);

        return $r1;
    }

    public void putPersistableBundle(java.lang.String, android.os.PersistableBundle)
    {
        android.os.PersistableBundle r0, r2;
        java.lang.String r1;
        android.util.ArrayMap $r3;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.PersistableBundle;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r3 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public android.os.PersistableBundle getPersistableBundle(java.lang.String)
    {
        android.os.PersistableBundle r0, $r5;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.ClassCastException r3, $r6;
        android.util.ArrayMap $r4;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r4 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        r2 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = (android.os.PersistableBundle) r2;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r0.<android.os.PersistableBundle: void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException)>(r1, r2, "Bundle", r3);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void writeUnknownObject(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.os.PersistableBundle r0, $r11;
        java.lang.Object r1;
        java.lang.String r2, $r8;
        org.xmlpull.v1.XmlSerializer r3;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.xmlpull.v1.XmlSerializer;

        $z0 = r1 instanceof android.os.PersistableBundle;

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", r2);

        $r11 = (android.os.PersistableBundle) r1;

        virtualinvoke $r11.<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>(r3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pbundle_as_map");

        goto label2;

     label1:
        $r4 = new org.xmlpull.v1.XmlPullParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Object o=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        return;
    }

    public void saveToXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.os.PersistableBundle r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        virtualinvoke r0.<android.os.PersistableBundle: void unparcel()>();

        $r2 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback)>($r2, r1, r0);

        return;
    }

    public int describeContents()
    {
        android.os.PersistableBundle r0;

        r0 := @this: android.os.PersistableBundle;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PersistableBundle r0;
        android.os.Parcel r1;
        int i0;
        boolean z0;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.os.PersistableBundle;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        z0 = virtualinvoke r1.<android.os.Parcel: boolean pushAllowFds(boolean)>(0);

     label1:
        virtualinvoke r0.<android.os.PersistableBundle: void writeToParcelInner(android.os.Parcel,int)>(r1, i0);

     label2:
        virtualinvoke r1.<android.os.Parcel: void restoreAllowFds(boolean)>(z0);

        goto label5;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r1.<android.os.Parcel: void restoreAllowFds(boolean)>(z0);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        java.lang.String[] r2;
        android.os.PersistableBundle $r3, $r4;
        android.os.PersistableBundle$MyReadMapCallback $r5;
        java.util.HashMap $r6;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r2 = newarray (java.lang.String)[1];

     label1:
        $i2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label3;

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 >= i0 goto label3;

     label2:
        if i1 != 2 goto label1;

        $r4 = new android.os.PersistableBundle;

        $r5 = new android.os.PersistableBundle$MyReadMapCallback;

        specialinvoke $r5.<android.os.PersistableBundle$MyReadMapCallback: void <init>()>();

        $r6 = staticinvoke <com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback)>(r0, r1, r2, $r5);

        specialinvoke $r4.<android.os.PersistableBundle: void <init>(java.util.Map)>($r6);

        return $r4;

     label3:
        $r3 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        return $r3;
    }

    public synchronized java.lang.String toString()
    {
        android.os.PersistableBundle r0;
        android.os.Parcel $r1, $r9, $r10, $r13;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r11, $r12, $r14, $r16;
        android.util.ArrayMap $r4;
        java.lang.String $r5, $r8, $r15;
        int $i0;

        r0 := @this: android.os.PersistableBundle;

        $r1 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        if $r1 == null goto label2;

        $r10 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $r9 = <android.os.PersistableBundle: android.os.Parcel EMPTY_PARCEL>;

        if $r10 != $r9 goto label1;

        return "PersistableBundle[EMPTY_PARCEL]";

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[mParcelledData.dataSize=");

        $r13 = r0.<android.os.PersistableBundle: android.os.Parcel mParcelledData>;

        $i0 = virtualinvoke $r13.<android.os.Parcel: int dataSize()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PersistableBundle[");

        $r4 = r0.<android.os.PersistableBundle: android.util.ArrayMap mMap>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        android.os.PersistableBundle $r0, $r2;
        android.util.ArrayMap $r1;
        android.os.Parcel $r3;
        android.os.PersistableBundle$1 $r4;

        <android.os.PersistableBundle: java.lang.String TAG_PERSISTABLEMAP> = "pbundle_as_map";

        $r0 = new android.os.PersistableBundle;

        specialinvoke $r0.<android.os.PersistableBundle: void <init>()>();

        <android.os.PersistableBundle: android.os.PersistableBundle EMPTY> = $r0;

        $r2 = <android.os.PersistableBundle: android.os.PersistableBundle EMPTY>;

        $r1 = <android.util.ArrayMap: android.util.ArrayMap EMPTY>;

        $r2.<android.os.PersistableBundle: android.util.ArrayMap mMap> = $r1;

        $r3 = <android.os.BaseBundle: android.os.Parcel EMPTY_PARCEL>;

        <android.os.PersistableBundle: android.os.Parcel EMPTY_PARCEL> = $r3;

        $r4 = new android.os.PersistableBundle$1;

        specialinvoke $r4.<android.os.PersistableBundle$1: void <init>()>();

        <android.os.PersistableBundle: android.os.Parcelable$Creator CREATOR> = $r4;

        return;
    }
}
