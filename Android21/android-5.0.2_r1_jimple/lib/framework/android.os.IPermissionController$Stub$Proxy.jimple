class android.os.IPermissionController$Stub$Proxy extends java.lang.Object implements android.os.IPermissionController
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.os.IPermissionController$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.os.IPermissionController$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.IPermissionController$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.os.IPermissionController$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.os.IPermissionController$Stub$Proxy;

        $r1 = r0.<android.os.IPermissionController$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.os.IPermissionController$Stub$Proxy r0;

        r0 := @this: android.os.IPermissionController$Stub$Proxy;

        return "android.os.IPermissionController";
    }

    public boolean checkPermission(java.lang.String, int, int) throws android.os.RemoteException
    {
        android.os.IPermissionController$Stub$Proxy r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.os.Parcel r2, r3;
        boolean z0, $z2;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.os.IPermissionController$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.os.IPermissionController");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<android.os.IPermissionController$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
