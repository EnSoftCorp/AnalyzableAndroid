public class android.filterfw.core.FilterFactory extends java.lang.Object
{
    private static android.filterfw.core.FilterFactory mSharedFactory;
    private java.util.HashSet mPackages;
    private static java.lang.ClassLoader mCurrentClassLoader;
    private static java.util.HashSet mLibraries;
    private static java.lang.Object mClassLoaderGuard;
    private static final java.lang.String TAG;
    private static boolean mLogVerbose;

    public void <init>()
    {
        android.filterfw.core.FilterFactory r0;
        java.util.HashSet $r1;

        r0 := @this: android.filterfw.core.FilterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages> = $r1;

        return;
    }

    public static android.filterfw.core.FilterFactory sharedFactory()
    {
        android.filterfw.core.FilterFactory $r0, $r1, $r2;

        $r0 = <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory>;

        if $r0 != null goto label1;

        $r2 = new android.filterfw.core.FilterFactory;

        specialinvoke $r2.<android.filterfw.core.FilterFactory: void <init>()>();

        <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory> = $r2;

     label1:
        $r1 = <android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory mSharedFactory>;

        return $r1;
    }

    public static void addFilterLibrary(java.lang.String)
    {
        java.lang.String r0, $r10;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r12;
        boolean $z0, $z1, $z3;
        java.util.HashSet $r4, $r5;
        dalvik.system.PathClassLoader $r6;
        java.lang.ClassLoader $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @parameter0: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding filter library ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r10);

     label1:
        $r3 = <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries>;

        $z1 = virtualinvoke $r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label5;

        $z3 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z3 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", "Library already added");

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r5 = <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

        $r6 = new dalvik.system.PathClassLoader;

        $r7 = <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader>;

        specialinvoke $r6.<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r0, $r7);

        <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader> = $r6;

        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label8:
        throw r2;

     label9:
        return;

        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void addPackage(java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.String r1, $r6;
        boolean $z0;
        java.util.HashSet $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: android.filterfw.core.FilterFactory;

        r1 := @parameter0: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding package ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r6);

     label1:
        $r2 = r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public android.filterfw.core.Filter createFilterByClassName(java.lang.String, java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.String r1, r2, r5, $r16, $r22, $r30, $r31;
        java.lang.Class r3;
        java.util.Iterator r4;
        java.lang.Object r6, $r15, $r17;
        java.lang.Throwable r7, $r35;
        boolean $z0, $z1, $z2;
        java.util.HashSet $r8;
        android.filterfw.core.Filter $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r32, $r33;
        java.lang.ClassLoader $r18;
        java.lang.ClassNotFoundException $r34;

        r0 := @this: android.filterfw.core.FilterFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z0 == 0 goto label01;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up class ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r31);

     label01:
        r3 = null;

        $r8 = r0.<android.filterfw.core.FilterFactory: java.util.HashSet mPackages>;

        r4 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r15;

     label03:
        $z2 = <android.filterfw.core.FilterFactory: boolean mLogVerbose>;

        if $z2 == 0 goto label04;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FilterFactory", $r30);

     label04:
        $r17 = <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard>;

        r6 = $r17;

        entermonitor $r17;

     label05:
        $r18 = <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke $r18.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r22);

        exitmonitor r6;

     label06:
        goto label09;

     label07:
        $r35 := @caughtexception;

        r7 = $r35;

        exitmonitor r6;

     label08:
        throw r7;

     label09:
        goto label11;

     label10:
        $r34 := @caughtexception;

        goto label02;

     label11:
        if r3 == null goto label12;

        goto label13;

     label12:
        goto label02;

     label13:
        if r3 != null goto label14;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown filter class \'");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label14:
        $r9 = virtualinvoke r0.<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClass(java.lang.Class,java.lang.String)>(r3, r2);

        return $r9;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.ClassNotFoundException from label03 to label09 with label10;
    }

    public android.filterfw.core.Filter createFilterByClass(java.lang.Class, java.lang.String)
    {
        android.filterfw.core.FilterFactory r0;
        java.lang.Class r1;
        java.lang.String r2, $r12, $r17, $r26;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.IllegalArgumentException $r6, $r14, $r19;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13, $r15, $r16, $r18, $r21, $r22, $r23, $r24;
        java.lang.NoSuchMethodException $r11;
        java.lang.ClassCastException $r20;
        java.lang.Throwable $r25;
        java.lang.reflect.Constructor r27;
        android.filterfw.core.Filter r28;

        r0 := @this: android.filterfw.core.FilterFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

     label01:
        virtualinvoke r1.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "android/filterfw/core/Filter");

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        $r19 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to allocate class \'");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' which is not a subclass of Filter!");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r19;

     label04:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/lang/String";

        r27 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r14 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The filter class \'");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not have a constructor of the form <init>(String name)!");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label07:
        r28 = null;

     label08:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r2;

        $r5 = virtualinvoke r27.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r28 = (android.filterfw.core.Filter) $r5;

     label09:
        goto label11;

     label10:
        $r25 := @caughtexception;

     label11:
        if r28 != null goto label12;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not construct the filter \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label12:
        return r28;

        catch java.lang.ClassCastException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    static void <clinit>()
    {
        java.lang.Thread $r0;
        java.lang.ClassLoader $r1;
        java.util.HashSet $r2;
        java.lang.Object $r3;
        boolean $z0;

        <android.filterfw.core.FilterFactory: java.lang.String TAG> = "FilterFactory";

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        <android.filterfw.core.FilterFactory: java.lang.ClassLoader mCurrentClassLoader> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <android.filterfw.core.FilterFactory: java.util.HashSet mLibraries> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <android.filterfw.core.FilterFactory: java.lang.Object mClassLoaderGuard> = $r3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("FilterFactory", 2);

        <android.filterfw.core.FilterFactory: boolean mLogVerbose> = $z0;

        return;
    }
}
