public class android.widget.TableRow extends android.widget.LinearLayout
{
    private int mNumColumns;
    private int[] mColumnWidths;
    private int[] mConstrainedColumnWidths;
    private android.util.SparseIntArray mColumnToChildIndex;
    private android.widget.TableRow$ChildrenTracker mChildrenTracker;

    public void <init>(android.content.Context)
    {
        android.widget.TableRow r0;
        android.content.Context r1;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>(r1);

        r0.<android.widget.TableRow: int mNumColumns> = 0;

        specialinvoke r0.<android.widget.TableRow: void initTableRow()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TableRow r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.widget.TableRow: int mNumColumns> = 0;

        specialinvoke r0.<android.widget.TableRow: void initTableRow()>();

        return;
    }

    private void initTableRow()
    {
        android.widget.TableRow r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;
        android.widget.TableRow$ChildrenTracker $r2, $r3, $r4;

        r0 := @this: android.widget.TableRow;

        r1 = r0.<android.widget.TableRow: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        $r2 = new android.widget.TableRow$ChildrenTracker;

        specialinvoke $r2.<android.widget.TableRow$ChildrenTracker: void <init>(android.widget.TableRow,android.widget.TableRow$1)>(r0, null);

        r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker> = $r2;

        if r1 == null goto label1;

        $r4 = r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        staticinvoke <android.widget.TableRow$ChildrenTracker: void access$100(android.widget.TableRow$ChildrenTracker,android.view.ViewGroup$OnHierarchyChangeListener)>($r4, r1);

     label1:
        $r3 = r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        specialinvoke r0.<android.widget.LinearLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r3);

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.widget.TableRow r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;
        android.widget.TableRow$ChildrenTracker $r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r2 = r0.<android.widget.TableRow: android.widget.TableRow$ChildrenTracker mChildrenTracker>;

        staticinvoke <android.widget.TableRow$ChildrenTracker: void access$100(android.widget.TableRow$ChildrenTracker,android.view.ViewGroup$OnHierarchyChangeListener)>($r2, r1);

        return;
    }

    void setColumnCollapsed(int, boolean)
    {
        android.widget.TableRow r0;
        int i0;
        boolean z0;
        android.view.View r1;
        byte $b1;

        r0 := @this: android.widget.TableRow;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<android.widget.TableRow: android.view.View getVirtualChildAt(int)>(i0);

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $b1 = 8;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r1.<android.view.View: void setVisibility(int)>($b1);

     label3:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TableRow r0;
        int i0, i1;

        r0 := @this: android.widget.TableRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TableRow: void measureHorizontal(int,int)>(i0, i1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TableRow r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.TableRow;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.widget.TableRow: void layoutHorizontal(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public android.view.View getVirtualChildAt(int)
    {
        android.widget.TableRow r0;
        int i0, i1;
        android.util.SparseIntArray $r1, $r2;
        android.view.View $r3;

        r0 := @this: android.widget.TableRow;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.TableRow: void mapIndexAndColumns()>();

     label1:
        $r2 = r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 == -1 goto label2;

        $r3 = virtualinvoke r0.<android.widget.TableRow: android.view.View getChildAt(int)>(i1);

        return $r3;

     label2:
        return null;
    }

    public int getVirtualChildCount()
    {
        android.widget.TableRow r0;
        android.util.SparseIntArray $r1;
        int $i0;

        r0 := @this: android.widget.TableRow;

        $r1 = r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.TableRow: void mapIndexAndColumns()>();

     label1:
        $i0 = r0.<android.widget.TableRow: int mNumColumns>;

        return $i0;
    }

    private void mapIndexAndColumns()
    {
        android.widget.TableRow r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.util.SparseIntArray r1, $r4, $r5;
        android.view.View r2;
        android.widget.TableRow$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.widget.TableRow;

        $r4 = r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        if $r4 != null goto label6;

        i0 = 0;

        i1 = virtualinvoke r0.<android.widget.TableRow: int getChildCount()>();

        $r5 = new android.util.SparseIntArray;

        specialinvoke $r5.<android.util.SparseIntArray: void <init>()>();

        r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex> = $r5;

        r1 = r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        r2 = virtualinvoke r0.<android.widget.TableRow: android.view.View getChildAt(int)>(i2);

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.TableRow$LayoutParams) $r6;

        $i4 = r3.<android.widget.TableRow$LayoutParams: int column>;

        if $i4 < i0 goto label2;

        i0 = r3.<android.widget.TableRow$LayoutParams: int column>;

     label2:
        i3 = 0;

     label3:
        $i5 = r3.<android.widget.TableRow$LayoutParams: int span>;

        if i3 >= $i5 goto label4;

        $i6 = i0;

        i0 = i0 + 1;

        virtualinvoke r1.<android.util.SparseIntArray: void put(int,int)>($i6, i2);

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        r0.<android.widget.TableRow: int mNumColumns> = i0;

     label6:
        return;
    }

    int measureNullChild(int)
    {
        android.widget.TableRow r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: android.widget.TableRow;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        $i1 = $r1[i0];

        return $i1;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.TableRow r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35;
        android.widget.TableRow$LayoutParams r2;
        int[] r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        boolean z0;
        android.view.ViewGroup$LayoutParams $r5;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r4 = r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        if $r4 == null goto label10;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.TableRow$LayoutParams) $r5;

        i5 = 1073741824;

        i6 = 0;

        i7 = r2.<android.widget.TableRow$LayoutParams: int span>;

        r3 = r0.<android.widget.TableRow: int[] mConstrainedColumnWidths>;

        i8 = 0;

     label01:
        if i8 >= i7 goto label02;

        $i34 = i0 + i8;

        $i33 = r3[$i34];

        i6 = i6 + $i33;

        i8 = i8 + 1;

        goto label01;

     label02:
        i35 = r2.<android.widget.TableRow$LayoutParams: int gravity>;

        z0 = staticinvoke <android.view.Gravity: boolean isHorizontal(int)>(i35);

        if z0 == 0 goto label03;

        i5 = -2147483648;

     label03:
        $i15 = r2.<android.widget.TableRow$LayoutParams: int leftMargin>;

        $i17 = i6 - $i15;

        $i14 = r2.<android.widget.TableRow$LayoutParams: int rightMargin>;

        $i16 = $i17 - $i14;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i16);

        i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i18, i5);

        $i19 = r0.<android.widget.TableRow: int mPaddingTop>;

        $i20 = r0.<android.widget.TableRow: int mPaddingBottom>;

        $i21 = $i19 + $i20;

        $i22 = r2.<android.widget.TableRow$LayoutParams: int topMargin>;

        $i26 = $i21 + $i22;

        $i25 = r2.<android.widget.TableRow$LayoutParams: int bottomMargin>;

        $i23 = $i26 + $i25;

        $i27 = $i23 + i4;

        $i24 = r2.<android.widget.TableRow$LayoutParams: int height>;

        i10 = staticinvoke <android.widget.TableRow: int getChildMeasureSpec(int,int,int)>(i3, $i27, $i24);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i9, i10);

        if z0 == 0 goto label08;

        i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $r7 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $i28 = i6 - i12;

        $r7[1] = $i28;

        i11 = virtualinvoke r0.<android.widget.TableRow: int getLayoutDirection()>();

        i13 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>(i35, i11);

        $i29 = i13 & 7;

        tableswitch($i29)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label04;
            case 4: goto label07;
            case 5: goto label05;
            default: goto label07;
        };

     label04:
        goto label07;

     label05:
        $r9 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $r11 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $i30 = $r11[1];

        $r9[0] = $i30;

        goto label07;

     label06:
        $r10 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $r12 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $i32 = $r12[1];

        $i31 = $i32 / 2;

        $r10[0] = $i31;

     label07:
        goto label09;

     label08:
        $r6 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $r8 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>(r2);

        $r8[1] = 0;

        $r6[0] = 0;

     label09:
        goto label11;

     label10:
        specialinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r1, i0, i1, i2, i3, i4);

     label11:
        return;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.widget.TableRow r0;
        android.view.View r1;
        int i0, $i1, $i2;
        android.widget.TableRow$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.TableRow$LayoutParams) $r3;

        $i1 = r2.<android.widget.TableRow$LayoutParams: int span>;

        $i2 = $i1 - 1;

        return $i2;
    }

    int getLocationOffset(android.view.View)
    {
        android.widget.TableRow r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.TableRow$LayoutParams $r3;
        int[] $r4;
        int $i0;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.TableRow$LayoutParams) $r2;

        $r4 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r3);

        $i0 = $r4[0];

        return $i0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.widget.TableRow r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.TableRow$LayoutParams $r3;
        int[] $r4;
        int $i0;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.TableRow$LayoutParams) $r2;

        $r4 = staticinvoke <android.widget.TableRow$LayoutParams: int[] access$200(android.widget.TableRow$LayoutParams)>($r3);

        $i0 = $r4[1];

        return $i0;
    }

    int[] getColumnsWidths(int)
    {
        android.widget.TableRow r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] r1, $r4, $r5, $r7;
        android.view.View r2;
        android.widget.TableRow$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.widget.TableRow;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.TableRow: int getVirtualChildCount()>();

        $r4 = r0.<android.widget.TableRow: int[] mColumnWidths>;

        if $r4 == null goto label01;

        $r7 = r0.<android.widget.TableRow: int[] mColumnWidths>;

        $i13 = lengthof $r7;

        if i1 == $i13 goto label02;

     label01:
        $r5 = newarray (int)[i1];

        r0.<android.widget.TableRow: int[] mColumnWidths> = $r5;

     label02:
        r1 = r0.<android.widget.TableRow: int[] mColumnWidths>;

        i2 = 0;

     label03:
        if i2 >= i1 goto label12;

        r2 = virtualinvoke r0.<android.widget.TableRow: android.view.View getVirtualChildAt(int)>(i2);

        if r2 == null goto label10;

        $i5 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label10;

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.TableRow$LayoutParams) $r6;

        $i6 = r3.<android.widget.TableRow$LayoutParams: int span>;

        if $i6 != 1 goto label08;

        $i7 = r3.<android.widget.TableRow$LayoutParams: int width>;

        lookupswitch($i7)
        {
            case -2: goto label04;
            case -1: goto label05;
            default: goto label06;
        };

     label04:
        i3 = staticinvoke <android.widget.TableRow: int getChildMeasureSpec(int,int,int)>(i0, 0, -2);

        goto label07;

     label05:
        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label07;

     label06:
        $i12 = r3.<android.widget.TableRow$LayoutParams: int width>;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i12, 1073741824);

     label07:
        virtualinvoke r2.<android.view.View: void measure(int,int)>(i3, i3);

        $i9 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i8 = r3.<android.widget.TableRow$LayoutParams: int leftMargin>;

        $i10 = $i9 + $i8;

        $i11 = r3.<android.widget.TableRow$LayoutParams: int rightMargin>;

        i4 = $i10 + $i11;

        r1[i2] = i4;

        goto label09;

     label08:
        r1[i2] = 0;

     label09:
        goto label11;

     label10:
        r1[i2] = 0;

     label11:
        i2 = i2 + 1;

        goto label03;

     label12:
        return r1;
    }

    void setColumnsWidthConstraints(int[])
    {
        android.widget.TableRow r0;
        int[] r1;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: int[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<android.widget.TableRow: int getVirtualChildCount()>();

        if $i0 >= $i1 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("columnWidths should be >= getVirtualChildCount()");

        throw $r2;

     label2:
        r0.<android.widget.TableRow: int[] mConstrainedColumnWidths> = r1;

        return;
    }

    public android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow r0;
        android.util.AttributeSet r1;
        android.widget.TableRow$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.TableRow$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.TableRow: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TableRow$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableRow r0;
        android.widget.TableRow$LayoutParams $r1;

        r0 := @this: android.widget.TableRow;

        $r1 = new android.widget.TableRow$LayoutParams;

        specialinvoke $r1.<android.widget.TableRow$LayoutParams: void <init>()>();

        return $r1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.TableRow$LayoutParams;

        return $z0;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.TableRow$LayoutParams $r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.TableRow$LayoutParams;

        specialinvoke $r2.<android.widget.TableRow$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TableRow r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TableRow";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TableRow r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TableRow";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow r0;
        android.util.AttributeSet r1;
        android.widget.TableRow$LayoutParams $r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableRow: android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableRow r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.TableRow;

        $r1 = virtualinvoke r0.<android.widget.TableRow: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableRow r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.TableRow: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableRow r0;
        android.util.AttributeSet r1;
        android.widget.TableRow$LayoutParams $r2;

        r0 := @this: android.widget.TableRow;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableRow: android.widget.TableRow$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    static android.util.SparseIntArray access$302(android.widget.TableRow, android.util.SparseIntArray)
    {
        android.widget.TableRow r0;
        android.util.SparseIntArray r1;

        r0 := @parameter0: android.widget.TableRow;

        r1 := @parameter1: android.util.SparseIntArray;

        r0.<android.widget.TableRow: android.util.SparseIntArray mColumnToChildIndex> = r1;

        return r1;
    }
}
