public class android.filterfw.core.FieldPort extends android.filterfw.core.InputPort
{
    protected java.lang.reflect.Field mField;
    protected boolean mHasFrame;
    protected boolean mValueWaiting;
    protected java.lang.Object mValue;

    public void <init>(android.filterfw.core.Filter, java.lang.String, java.lang.reflect.Field, boolean)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;
        java.lang.reflect.Field r3;
        boolean z0;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.reflect.Field;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

        r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField> = r3;

        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = z0;

        return;
    }

    public void clear()
    {
        android.filterfw.core.FieldPort r0;

        r0 := @this: android.filterfw.core.FieldPort;

        return;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 0);

        return;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 1);

        return;
    }

    public java.lang.Object getTarget()
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Filter $r2;
        java.lang.reflect.Field $r3;
        java.lang.Object $r4;
        java.lang.IllegalAccessException $r5;

        r0 := @this: android.filterfw.core.FieldPort;

     label1:
        $r3 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r2 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public synchronized void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.FilterContext r1;
        boolean $z0;
        java.lang.Object $r3;
        android.filterfw.core.Filter $r4, $r7;
        java.lang.reflect.Field $r5, $r12;
        java.lang.String $r6, $r13, $r15;
        java.lang.IllegalAccessException $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r11, $r14, $r16;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

        if $z0 == 0 goto label5;

     label1:
        $r5 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r4 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r3 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        virtualinvoke $r5.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r4, $r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to field \'");

        $r12 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r13 = virtualinvoke $r12.<java.lang.reflect.Field: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was denied!");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label4:
        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

        if r1 == null goto label5;

        $r7 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r6 = r0.<android.filterfw.core.FieldPort: java.lang.String mName>;

        virtualinvoke $r7.<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>($r6, r1);

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public synchronized android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.filterfw.core.FieldPort;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot pull frame on ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public synchronized boolean hasFrame()
    {
        android.filterfw.core.FieldPort r0;
        boolean $z0;

        r0 := @this: android.filterfw.core.FieldPort;

        $z0 = r0.<android.filterfw.core.FieldPort: boolean mHasFrame>;

        return $z0;
    }

    public synchronized boolean acceptsFrame()
    {
        android.filterfw.core.FieldPort r0;
        boolean $z0, $z1;

        r0 := @this: android.filterfw.core.FieldPort;

        $z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.filterfw.core.FieldPort;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r3 = specialinvoke r0.<android.filterfw.core.InputPort: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected synchronized void setFieldFrame(android.filterfw.core.Frame, boolean)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;
        boolean z0, $z1;
        java.lang.Object r2, $r3, $r4;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void assertPortIsOpen()>();

        virtualinvoke r0.<android.filterfw.core.FieldPort: void checkFrameType(android.filterfw.core.Frame,boolean)>(r1, z0);

        r2 = virtualinvoke r1.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

        if r2 != null goto label1;

        $r4 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        if $r4 != null goto label2;

     label1:
        $r3 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

     label2:
        r0.<android.filterfw.core.FieldPort: java.lang.Object mValue> = r2;

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 1;

     label3:
        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = 1;

        return;
    }
}
