public class android.transition.ChangeTransform extends android.transition.Transition
{
    private static final java.lang.String TAG;
    private static final java.lang.String PROPNAME_MATRIX;
    private static final java.lang.String PROPNAME_TRANSFORMS;
    private static final java.lang.String PROPNAME_PARENT;
    private static final java.lang.String PROPNAME_PARENT_MATRIX;
    private static final java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX;
    private static final java.lang.String PROPNAME_INTERMEDIATE_MATRIX;
    private static final java.lang.String[] sTransitionProperties;
    private static final android.util.Property ANIMATION_MATRIX_PROPERTY;
    private boolean mUseOverlay;
    private boolean mReparent;
    private android.graphics.Matrix mTempMatrix;

    public void <init>()
    {
        android.transition.ChangeTransform r0;
        android.graphics.Matrix $r1;

        r0 := @this: android.transition.ChangeTransform;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.transition.ChangeTransform: boolean mReparent> = 1;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.transition.ChangeTransform r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        android.graphics.Matrix $r4;
        int[] $r5;
        boolean $z0, $z1;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = 1;

        r0.<android.transition.ChangeTransform: boolean mReparent> = 1;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix> = $r4;

        $r5 = <com.android.internal.R$styleable: int[] ChangeTransform>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r5);

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 1);

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = $z0;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<android.transition.ChangeTransform: boolean mReparent> = $z1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public boolean getReparentWithOverlay()
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        return $z0;
    }

    public void setReparentWithOverlay(boolean)
    {
        android.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.transition.ChangeTransform;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeTransform: boolean mUseOverlay> = z0;

        return;
    }

    public boolean getReparent()
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @this: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        return $z0;
    }

    public void setReparent(boolean)
    {
        android.transition.ChangeTransform r0;
        boolean z0;

        r0 := @this: android.transition.ChangeTransform;

        z0 := @parameter0: boolean;

        r0.<android.transition.ChangeTransform: boolean mReparent> = z0;

        return;
    }

    public java.lang.String[] getTransitionProperties()
    {
        android.transition.ChangeTransform r0;
        java.lang.String[] $r1;

        r0 := @this: android.transition.ChangeTransform;

        $r1 = <android.transition.ChangeTransform: java.lang.String[] sTransitionProperties>;

        return $r1;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        android.transition.ChangeTransform$Transforms r3, $r10;
        android.graphics.Matrix r4, r5, $r15, $r23, r26;
        android.view.ViewGroup r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Map $r7, $r11, $r14, $r18, $r19, $r20;
        android.view.ViewParent $r8, $r16;
        boolean $z0, $z2;
        float $f0, $f1;
        java.lang.Object $r21, $r24;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $i0 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        return;

     label1:
        $r7 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r8 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parent", $r8);

        $r10 = new android.transition.ChangeTransform$Transforms;

        specialinvoke $r10.<android.transition.ChangeTransform$Transforms: void <init>(android.view.View)>(r2);

        r3 = $r10;

        $r11 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:transforms", r3);

        r4 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        if r4 == null goto label2;

        $z2 = virtualinvoke r4.<android.graphics.Matrix: boolean isIdentity()>();

        if $z2 == 0 goto label3;

     label2:
        r26 = null;

        goto label4;

     label3:
        $r23 = new android.graphics.Matrix;

        specialinvoke $r23.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r4);

        r26 = $r23;

     label4:
        $r14 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r26);

        $z0 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        if $z0 == 0 goto label5;

        $r15 = new android.graphics.Matrix;

        specialinvoke $r15.<android.graphics.Matrix: void <init>()>();

        r5 = $r15;

        $r16 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        r6 = (android.view.ViewGroup) $r16;

        virtualinvoke r6.<android.view.ViewGroup: void transformMatrixToGlobal(android.graphics.Matrix)>(r5);

        $i1 = virtualinvoke r6.<android.view.ViewGroup: int getScrollX()>();

        $i2 = neg $i1;

        $f0 = (float) $i2;

        $i4 = virtualinvoke r6.<android.view.ViewGroup: int getScrollY()>();

        $i3 = neg $i4;

        $f1 = (float) $i3;

        virtualinvoke r5.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        $r18 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", r5);

        $r19 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r21 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(16908358);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateMatrix", $r21);

        $r20 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r24 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(16908359);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:intermediateParentMatrix", $r24);

     label5:
        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.ChangeTransform: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.view.ViewGroup r1, r4, r5;
        android.transition.TransitionValues r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.graphics.Matrix r6, r7;
        android.animation.ObjectAnimator r8;
        java.util.Map $r9, $r10, $r11, $r14, $r15, $r16, $r19, $r20;
        java.lang.Object $r12, $r13, $r17, $r18;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        r3 := @parameter2: android.transition.TransitionValues;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r9 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z1 == 0 goto label1;

        $r10 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $z2 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>("android:changeTransform:parent");

        if $z2 != 0 goto label2;

     label1:
        return null;

     label2:
        $r11 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r4 = (android.view.ViewGroup) $r12;

        $r14 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parent");

        r5 = (android.view.ViewGroup) $r13;

        $z3 = r0.<android.transition.ChangeTransform: boolean mReparent>;

        if $z3 == 0 goto label3;

        $z5 = specialinvoke r0.<android.transition.ChangeTransform: boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup)>(r4, r5);

        if $z5 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z0 = $z6;

        $r15 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateMatrix");

        r6 = (android.graphics.Matrix) $r17;

        if r6 == null goto label5;

        $r20 = r2.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r6);

     label5:
        $r16 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:intermediateParentMatrix");

        r7 = (android.graphics.Matrix) $r18;

        if r7 == null goto label6;

        $r19 = r2.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:parentMatrix", r7);

     label6:
        if z0 == 0 goto label7;

        specialinvoke r0.<android.transition.ChangeTransform: void setMatricesForParent(android.transition.TransitionValues,android.transition.TransitionValues)>(r2, r3);

     label7:
        r8 = specialinvoke r0.<android.transition.ChangeTransform: android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues,android.transition.TransitionValues,boolean)>(r2, r3, z0);

        if z0 == 0 goto label8;

        if r8 == null goto label8;

        $z4 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        if $z4 == 0 goto label8;

        specialinvoke r0.<android.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>(r1, r2, r3);

     label8:
        return r8;
    }

    private android.animation.ObjectAnimator createTransformAnimator(android.transition.TransitionValues, android.transition.TransitionValues, boolean)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1, r2;
        boolean z0, $z1;
        android.graphics.Matrix r3, r4, r8;
        android.transition.ChangeTransform$Transforms r5;
        android.view.View r6;
        android.animation.ObjectAnimator r7;
        android.transition.ChangeTransform$2 r9, $r19;
        java.util.Map $r10, $r12, $r15;
        java.lang.Object $r11, $r13, $r14;
        android.util.Property $r16;
        android.transition.TransitionUtils$MatrixEvaluator $r17;
        android.graphics.Matrix[] $r18;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 := @parameter1: android.transition.TransitionValues;

        z0 := @parameter2: boolean;

        $r10 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r3 = (android.graphics.Matrix) $r11;

        $r12 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r4 = (android.graphics.Matrix) $r13;

        if r3 != null goto label1;

        r3 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

     label1:
        if r4 != null goto label2;

        r4 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

     label2:
        $z1 = virtualinvoke r3.<android.graphics.Matrix: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        return null;

     label3:
        $r15 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r14 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:transforms");

        r5 = (android.transition.ChangeTransform$Transforms) $r14;

        r6 = r2.<android.transition.TransitionValues: android.view.View view>;

        staticinvoke <android.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>(r6);

        $r16 = <android.transition.ChangeTransform: android.util.Property ANIMATION_MATRIX_PROPERTY>;

        $r17 = new android.transition.TransitionUtils$MatrixEvaluator;

        specialinvoke $r17.<android.transition.TransitionUtils$MatrixEvaluator: void <init>()>();

        $r18 = newarray (android.graphics.Matrix)[2];

        $r18[0] = r3;

        $r18[1] = r4;

        r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>(r6, $r16, $r17, $r18);

        r8 = r4;

        $r19 = new android.transition.ChangeTransform$2;

        specialinvoke $r19.<android.transition.ChangeTransform$2: void <init>(android.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,android.transition.ChangeTransform$Transforms)>(r0, z0, r8, r6, r5);

        r9 = $r19;

        virtualinvoke r7.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>(r9);

        virtualinvoke r7.<android.animation.ObjectAnimator: void addPauseListener(android.animation.Animator$AnimatorPauseListener)>(r9);

        return r7;
    }

    private boolean parentsMatch(android.view.ViewGroup, android.view.ViewGroup)
    {
        android.transition.ChangeTransform r0;
        android.view.ViewGroup r1, r2;
        boolean z0, $z1, $z2, $z3, $z4;
        android.transition.TransitionValues r3;
        android.view.View $r4;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.ViewGroup;

        z0 = 0;

        $z1 = virtualinvoke r0.<android.transition.ChangeTransform: boolean isValidTarget(android.view.View)>(r1);

        if $z1 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.transition.ChangeTransform: boolean isValidTarget(android.view.View)>(r2);

        if $z3 != 0 goto label4;

     label1:
        if r1 != r2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        goto label7;

     label4:
        r3 = virtualinvoke r0.<android.transition.ChangeTransform: android.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean)>(r1, 1);

        if r3 == null goto label7;

        $r4 = r3.<android.transition.TransitionValues: android.view.View view>;

        if r2 != $r4 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z0 = $z4;

     label7:
        return z0;
    }

    private void createGhostView(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.view.ViewGroup r1;
        android.transition.TransitionValues r2, r3;
        android.view.View r4, $r15, $r17, $r18;
        android.graphics.Matrix r5, r6, $r12;
        android.view.GhostView r7;
        android.transition.Transition r8;
        android.transition.ChangeTransform$GhostListener r9, $r14;
        java.util.Map $r10;
        java.lang.Object $r11;
        android.transition.TransitionSet $r13;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        r3 := @parameter2: android.transition.TransitionValues;

        r4 = r3.<android.transition.TransitionValues: android.view.View view>;

        $r10 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r5 = (android.graphics.Matrix) $r11;

        $r12 = new android.graphics.Matrix;

        specialinvoke $r12.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>(r5);

        r6 = $r12;

        virtualinvoke r1.<android.view.ViewGroup: void transformMatrixToLocal(android.graphics.Matrix)>(r6);

        r7 = staticinvoke <android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>(r4, r1, r6);

        r8 = r0;

     label1:
        $r13 = r8.<android.transition.Transition: android.transition.TransitionSet mParent>;

        if $r13 == null goto label2;

        r8 = r8.<android.transition.Transition: android.transition.TransitionSet mParent>;

        goto label1;

     label2:
        $r14 = new android.transition.ChangeTransform$GhostListener;

        specialinvoke $r14.<android.transition.ChangeTransform$GhostListener: void <init>(android.view.View,android.view.GhostView,android.graphics.Matrix)>(r4, r7, r5);

        r9 = $r14;

        virtualinvoke r8.<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition$TransitionListener)>(r9);

        $r18 = r2.<android.transition.TransitionValues: android.view.View view>;

        $r15 = r3.<android.transition.TransitionValues: android.view.View view>;

        if $r18 == $r15 goto label3;

        $r17 = r2.<android.transition.TransitionValues: android.view.View view>;

        virtualinvoke $r17.<android.view.View: void setTransitionAlpha(float)>(0.0F);

     label3:
        virtualinvoke r4.<android.view.View: void setTransitionAlpha(float)>(1.0F);

        return;
    }

    private void setMatricesForParent(android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.ChangeTransform r0;
        android.transition.TransitionValues r1, r2;
        android.graphics.Matrix r3, r4, r5, r6, $r14;
        java.util.Map $r7, $r10, $r12, $r16;
        java.lang.Object $r8, $r11, $r13;
        android.view.View $r9;

        r0 := @this: android.transition.ChangeTransform;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 := @parameter1: android.transition.TransitionValues;

        $r7 = r2.<android.transition.TransitionValues: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r3 = (android.graphics.Matrix) $r8;

        $r9 = r2.<android.transition.TransitionValues: android.view.View view>;

        virtualinvoke $r9.<android.view.View: void setTagInternal(int,java.lang.Object)>(16908359, r3);

        r4 = r0.<android.transition.ChangeTransform: android.graphics.Matrix mTempMatrix>;

        virtualinvoke r4.<android.graphics.Matrix: void reset()>();

        virtualinvoke r3.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>(r4);

        $r10 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:matrix");

        r5 = (android.graphics.Matrix) $r11;

        if r5 != null goto label1;

        $r14 = new android.graphics.Matrix;

        specialinvoke $r14.<android.graphics.Matrix: void <init>()>();

        r5 = $r14;

        $r16 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:changeTransform:matrix", r5);

     label1:
        $r12 = r1.<android.transition.TransitionValues: java.util.Map values>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:changeTransform:parentMatrix");

        r6 = (android.graphics.Matrix) $r13;

        virtualinvoke r5.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r6);

        virtualinvoke r5.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r4);

        return;
    }

    private static void setIdentityTransforms(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        staticinvoke <android.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>(r0, 0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        return;
    }

    private static void setTransforms(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View r0;
        float f0, f1, f2, f3, f4, f5, f6, f7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        f7 := @parameter8: float;

        virtualinvoke r0.<android.view.View: void setTranslationX(float)>(f0);

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>(f1);

        virtualinvoke r0.<android.view.View: void setTranslationZ(float)>(f2);

        virtualinvoke r0.<android.view.View: void setScaleX(float)>(f3);

        virtualinvoke r0.<android.view.View: void setScaleY(float)>(f4);

        virtualinvoke r0.<android.view.View: void setRotationX(float)>(f5);

        virtualinvoke r0.<android.view.View: void setRotationY(float)>(f6);

        virtualinvoke r0.<android.view.View: void setRotation(float)>(f7);

        return;
    }

    static boolean access$000(android.transition.ChangeTransform)
    {
        android.transition.ChangeTransform r0;
        boolean $z0;

        r0 := @parameter0: android.transition.ChangeTransform;

        $z0 = r0.<android.transition.ChangeTransform: boolean mUseOverlay>;

        return $z0;
    }

    static android.util.Property access$100()
    {
        android.util.Property $r0;

        $r0 = <android.transition.ChangeTransform: android.util.Property ANIMATION_MATRIX_PROPERTY>;

        return $r0;
    }

    static void access$200(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        staticinvoke <android.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>(r0);

        return;
    }

    static void access$300(android.view.View, float, float, float, float, float, float, float, float)
    {
        android.view.View r0;
        float f0, f1, f2, f3, f4, f5, f6, f7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        f5 := @parameter6: float;

        f6 := @parameter7: float;

        f7 := @parameter8: float;

        staticinvoke <android.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>(r0, f0, f1, f2, f3, f4, f5, f6, f7);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        android.transition.ChangeTransform$1 $r1;

        <android.transition.ChangeTransform: java.lang.String PROPNAME_INTERMEDIATE_MATRIX> = "android:changeTransform:intermediateMatrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX> = "android:changeTransform:intermediateParentMatrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_PARENT_MATRIX> = "android:changeTransform:parentMatrix";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_PARENT> = "android:changeTransform:parent";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_TRANSFORMS> = "android:changeTransform:transforms";

        <android.transition.ChangeTransform: java.lang.String PROPNAME_MATRIX> = "android:changeTransform:matrix";

        <android.transition.ChangeTransform: java.lang.String TAG> = "ChangeTransform";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "android:changeTransform:matrix";

        $r0[1] = "android:changeTransform:transforms";

        $r0[2] = "android:changeTransform:parentMatrix";

        <android.transition.ChangeTransform: java.lang.String[] sTransitionProperties> = $r0;

        $r1 = new android.transition.ChangeTransform$1;

        specialinvoke $r1.<android.transition.ChangeTransform$1: void <init>(java.lang.Class,java.lang.String)>(class "android/graphics/Matrix", "animationMatrix");

        <android.transition.ChangeTransform: android.util.Property ANIMATION_MATRIX_PROPERTY> = $r1;

        return;
    }
}
