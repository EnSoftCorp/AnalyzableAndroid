class android.speech.tts.TextToSpeech$Connection extends java.lang.Object implements android.content.ServiceConnection
{
    private android.speech.tts.ITextToSpeechService mService;
    private android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask;
    private boolean mEstablished;
    private final android.speech.tts.ITextToSpeechCallback$Stub mCallback;
    final android.speech.tts.TextToSpeech this$0;

    private void <init>(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech r1;
        android.speech.tts.TextToSpeech$Connection$1 $r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.speech.tts.TextToSpeech$Connection$1;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$Connection$1: void <init>(android.speech.tts.TextToSpeech$Connection)>(r0);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback> = $r2;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r22;
        android.speech.tts.TextToSpeech $r5, $r7, $r14;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r13, $r16, $r18, $r21;
        android.speech.tts.ITextToSpeechService $r15;
        java.lang.Void[] $r19;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r5 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r6 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>($r5);

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$1502(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r7, null);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r12);

        $r13 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        if $r13 == null goto label2;

        $r21 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        virtualinvoke $r21.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: boolean cancel(boolean)>(0);

     label2:
        $r15 = staticinvoke <android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService asInterface(android.os.IBinder)>(r2);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService> = $r15;

        $r14 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$202(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r14, r0);

        r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished> = 0;

        $r16 = new android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        specialinvoke $r16.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: void <init>(android.speech.tts.TextToSpeech$Connection,android.content.ComponentName)>(r0, r1);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = $r16;

        $r18 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        $r19 = newarray (java.lang.Void)[0];

        virtualinvoke $r18.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r19);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.os.IBinder getCallerIdentity()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechCallback$Stub $r1;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback>;

        return $r1;
    }

    private boolean clearServiceConnection()
    {
        android.speech.tts.TextToSpeech$Connection r0, $r7;
        java.lang.Object r1, $r4;
        boolean z0;
        java.lang.Throwable r2, $r11;
        android.speech.tts.TextToSpeech $r3, $r6, $r8;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r5, $r10;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r3 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r4 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>($r3);

        r1 = $r4;

        entermonitor $r4;

     label1:
        z0 = 0;

        $r5 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        if $r5 == null goto label2;

        $r10 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        z0 = virtualinvoke $r10.<android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask: boolean cancel(boolean)>(0);

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = null;

     label2:
        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService> = null;

        $r6 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r7 = staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$200(android.speech.tts.TextToSpeech)>($r6);

        if $r7 != r0 goto label3;

        $r8 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$202(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>($r8, null);

     label3:
        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.content.ComponentName r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;
        android.speech.tts.TextToSpeech $r6;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to disconnect from ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r5);

        $z0 = specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean clearServiceConnection()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: void access$1400(android.speech.tts.TextToSpeech,int)>($r6, -1);

     label1:
        return;
    }

    public void disconnect()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech $r1;
        android.content.Context $r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r2 = staticinvoke <android.speech.tts.TextToSpeech: android.content.Context access$1600(android.speech.tts.TextToSpeech)>($r1);

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean clearServiceConnection()>();

        return;
    }

    public boolean isEstablished()
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechService $r1;
        boolean $z0, $z1;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        if $r1 == null goto label1;

        $z0 = r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean, boolean)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, r4, $r8, $r11;
        java.lang.String r3, $r15, $r18, $r25;
        boolean z0, z1, $z2;
        android.os.RemoteException r5, $r22;
        java.lang.Throwable r6, $r20;
        android.speech.tts.TextToSpeech $r7, $r26;
        android.speech.tts.ITextToSpeechService $r9, $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r17, $r19, $r21, $r23, $r24;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r7 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        $r8 = staticinvoke <android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>($r7);

        r4 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        if $r9 != null goto label04;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: not connected to TTS engine");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r18);

     label02:
        exitmonitor r4;

     label03:
        return r2;

     label04:
        if z1 == 0 goto label07;

        $z2 = virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection: boolean isEstablished()>();

        if $z2 != 0 goto label07;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: TTS engine connection not fully set up");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r15);

     label05:
        exitmonitor r4;

     label06:
        return r2;

     label07:
        $r10 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        $r11 = interfaceinvoke r1.<android.speech.tts.TextToSpeech$Action: java.lang.Object run(android.speech.tts.ITextToSpeechService)>($r10);

     label08:
        exitmonitor r4;

     label09:
        return $r11;

     label10:
        $r22 := @caughtexception;

        r5 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r25, r5);

        if z0 == 0 goto label11;

        virtualinvoke r0.<android.speech.tts.TextToSpeech$Connection: void disconnect()>();

        $r26 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech this$0>;

        staticinvoke <android.speech.tts.TextToSpeech: int access$1700(android.speech.tts.TextToSpeech)>($r26);

     label11:
        exitmonitor r4;

     label12:
        return r2;

     label13:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r4;

     label14:
        throw r6;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Throwable from label04 to label06 with label13;
        catch java.lang.Throwable from label07 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    void <init>(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$1)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech r1;
        android.speech.tts.TextToSpeech$1 r2;

        r0 := @this: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r2 := @parameter1: android.speech.tts.TextToSpeech$1;

        specialinvoke r0.<android.speech.tts.TextToSpeech$Connection: void <init>(android.speech.tts.TextToSpeech)>(r1);

        return;
    }

    static android.speech.tts.ITextToSpeechCallback$Stub access$1000(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechCallback$Stub $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechCallback$Stub mCallback>;

        return $r1;
    }

    static android.speech.tts.ITextToSpeechService access$1100(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.ITextToSpeechService $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.ITextToSpeechService mService>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$1200(android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        $r1 = r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask access$1202(android.speech.tts.TextToSpeech$Connection, android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask;

        r0.<android.speech.tts.TextToSpeech$Connection: android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask mOnSetupConnectionAsyncTask> = r1;

        return r1;
    }

    static boolean access$1302(android.speech.tts.TextToSpeech$Connection, boolean)
    {
        android.speech.tts.TextToSpeech$Connection r0;
        boolean z0;

        r0 := @parameter0: android.speech.tts.TextToSpeech$Connection;

        z0 := @parameter1: boolean;

        r0.<android.speech.tts.TextToSpeech$Connection: boolean mEstablished> = z0;

        return z0;
    }
}
