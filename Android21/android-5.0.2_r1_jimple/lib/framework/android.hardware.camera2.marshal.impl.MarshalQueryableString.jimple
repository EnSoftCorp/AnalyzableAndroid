public class android.hardware.camera2.marshal.impl.MarshalQueryableString extends java.lang.Object implements android.hardware.camera2.marshal.MarshalQueryable
{
    private static final java.lang.String TAG;
    private static final boolean VERBOSE;
    private static final java.nio.charset.Charset UTF8_CHARSET;
    private static final byte NUL;

    public void <init>()
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableString r0;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableString r0;
        android.hardware.camera2.utils.TypeReference r1;
        int i0;
        android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString $r2;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableString;

        r1 := @parameter0: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter1: int;

        $r2 = new android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString;

        specialinvoke $r2.<android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString: void <init>(android.hardware.camera2.marshal.impl.MarshalQueryableString,android.hardware.camera2.utils.TypeReference,int)>(r0, r1, i0);

        return $r2;
    }

    public boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference, int)
    {
        android.hardware.camera2.marshal.impl.MarshalQueryableString r0;
        android.hardware.camera2.utils.TypeReference r1;
        int i0;
        java.lang.Class $r2;
        java.lang.reflect.Type $r3;
        boolean $z0, $z1;

        r0 := @this: android.hardware.camera2.marshal.impl.MarshalQueryableString;

        r1 := @parameter0: android.hardware.camera2.utils.TypeReference;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = class "java/lang/String";

        $r3 = virtualinvoke r1.<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static java.nio.charset.Charset access$000()
    {
        java.nio.charset.Charset $r0;

        $r0 = <android.hardware.camera2.marshal.impl.MarshalQueryableString: java.nio.charset.Charset UTF8_CHARSET>;

        return $r0;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <android.hardware.camera2.marshal.impl.MarshalQueryableString: boolean VERBOSE>;

        return $z0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <android.hardware.camera2.marshal.impl.MarshalQueryableString: java.lang.String TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.nio.charset.Charset $r3;

        <android.hardware.camera2.marshal.impl.MarshalQueryableString: byte NUL> = 0;

        $r0 = class "android/hardware/camera2/marshal/impl/MarshalQueryableString";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.hardware.camera2.marshal.impl.MarshalQueryableString: java.lang.String TAG> = $r1;

        $r2 = <android.hardware.camera2.marshal.impl.MarshalQueryableString: java.lang.String TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r2, 2);

        <android.hardware.camera2.marshal.impl.MarshalQueryableString: boolean VERBOSE> = $z0;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <android.hardware.camera2.marshal.impl.MarshalQueryableString: java.nio.charset.Charset UTF8_CHARSET> = $r3;

        return;
    }
}
