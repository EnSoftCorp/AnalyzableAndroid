public class android.location.Location extends java.lang.Object implements android.os.Parcelable
{
    public static final int FORMAT_DEGREES;
    public static final int FORMAT_MINUTES;
    public static final int FORMAT_SECONDS;
    public static final java.lang.String EXTRA_COARSE_LOCATION;
    public static final java.lang.String EXTRA_NO_GPS_LOCATION;
    private java.lang.String mProvider;
    private long mTime;
    private long mElapsedRealtimeNanos;
    private double mLatitude;
    private double mLongitude;
    private boolean mHasAltitude;
    private double mAltitude;
    private boolean mHasSpeed;
    private float mSpeed;
    private boolean mHasBearing;
    private float mBearing;
    private boolean mHasAccuracy;
    private float mAccuracy;
    private android.os.Bundle mExtras;
    private boolean mIsFromMockProvider;
    private double mLat1;
    private double mLon1;
    private double mLat2;
    private double mLon2;
    private float mDistance;
    private float mInitialBearing;
    private final float[] mResults;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(java.lang.String)
    {
        android.location.Location r0;
        java.lang.String r1;
        float[] $r2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        r0.<android.location.Location: double mLat1> = 0.0;

        r0.<android.location.Location: double mLon1> = 0.0;

        r0.<android.location.Location: double mLat2> = 0.0;

        r0.<android.location.Location: double mLon2> = 0.0;

        r0.<android.location.Location: float mDistance> = 0.0F;

        r0.<android.location.Location: float mInitialBearing> = 0.0F;

        $r2 = newarray (float)[2];

        r0.<android.location.Location: float[] mResults> = $r2;

        r0.<android.location.Location: java.lang.String mProvider> = r1;

        return;
    }

    public void <init>(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] $r2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        r0.<android.location.Location: double mLat1> = 0.0;

        r0.<android.location.Location: double mLon1> = 0.0;

        r0.<android.location.Location: double mLat2> = 0.0;

        r0.<android.location.Location: double mLon2> = 0.0;

        r0.<android.location.Location: float mDistance> = 0.0F;

        r0.<android.location.Location: float mInitialBearing> = 0.0F;

        $r2 = newarray (float)[2];

        r0.<android.location.Location: float[] mResults> = $r2;

        virtualinvoke r0.<android.location.Location: void set(android.location.Location)>(r1);

        return;
    }

    public void set(android.location.Location)
    {
        android.location.Location r0, r1;
        java.lang.String $r2;
        long $l0, $l1;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;
        android.os.Bundle $r3, $r4, $r5;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        $r2 = r1.<android.location.Location: java.lang.String mProvider>;

        r0.<android.location.Location: java.lang.String mProvider> = $r2;

        $l0 = r1.<android.location.Location: long mTime>;

        r0.<android.location.Location: long mTime> = $l0;

        $l1 = r1.<android.location.Location: long mElapsedRealtimeNanos>;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = $l1;

        $d0 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLatitude> = $d0;

        $d1 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLongitude> = $d1;

        $z0 = r1.<android.location.Location: boolean mHasAltitude>;

        r0.<android.location.Location: boolean mHasAltitude> = $z0;

        $d2 = r1.<android.location.Location: double mAltitude>;

        r0.<android.location.Location: double mAltitude> = $d2;

        $z1 = r1.<android.location.Location: boolean mHasSpeed>;

        r0.<android.location.Location: boolean mHasSpeed> = $z1;

        $f0 = r1.<android.location.Location: float mSpeed>;

        r0.<android.location.Location: float mSpeed> = $f0;

        $z2 = r1.<android.location.Location: boolean mHasBearing>;

        r0.<android.location.Location: boolean mHasBearing> = $z2;

        $f1 = r1.<android.location.Location: float mBearing>;

        r0.<android.location.Location: float mBearing> = $f1;

        $z3 = r1.<android.location.Location: boolean mHasAccuracy>;

        r0.<android.location.Location: boolean mHasAccuracy> = $z3;

        $f2 = r1.<android.location.Location: float mAccuracy>;

        r0.<android.location.Location: float mAccuracy> = $f2;

        $r3 = r1.<android.location.Location: android.os.Bundle mExtras>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = new android.os.Bundle;

        $r4 = r1.<android.location.Location: android.os.Bundle mExtras>;

        specialinvoke $r5.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

     label2:
        r0.<android.location.Location: android.os.Bundle mExtras> = $r5;

        $z4 = r1.<android.location.Location: boolean mIsFromMockProvider>;

        r0.<android.location.Location: boolean mIsFromMockProvider> = $z4;

        return;
    }

    public void reset()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: java.lang.String mProvider> = null;

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        return;
    }

    public static java.lang.String convert(double, int)
    {
        double d0, $d1, $d2, $d3, $d4, d5, d6;
        int i0, i1, i2;
        java.lang.StringBuilder r0, $r3, $r4, $r5, $r7, $r17, $r20, $r21;
        java.text.DecimalFormat r1, $r8;
        byte $b3, $b4, $b5;
        java.lang.IllegalArgumentException $r2, $r18;
        java.lang.String $r6, $r12, $r13, $r19;
        boolean $z0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $b3 = d0 cmpg -180.0;

        if $b3 < 0 goto label1;

        $b4 = d0 cmpl 180.0;

        if $b4 > 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        if i0 == 0 goto label3;

        if i0 == 1 goto label3;

        if i0 == 2 goto label3;

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("outputType=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r0 = $r7;

        $b5 = d0 cmpg 0.0;

        if $b5 >= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        d0 = neg d0;

     label4:
        $r8 = new java.text.DecimalFormat;

        specialinvoke $r8.<java.text.DecimalFormat: void <init>(java.lang.String)>("###.#####");

        r1 = $r8;

        if i0 == 1 goto label5;

        if i0 != 2 goto label6;

     label5:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        i1 = (int) $d1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $d2 = (double) i1;

        d5 = d0 - $d2;

        d0 = d5 * 60.0;

        if i0 != 2 goto label6;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        i2 = (int) $d3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $d4 = (double) i2;

        d6 = d0 - $d4;

        d0 = d6 * 60.0;

     label6:
        $r12 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>(d0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static double convert(java.lang.String)
    {
        java.lang.String r0, r2, r3, r4, $r10, $r13, $r20, $r27, $r28;
        boolean z0, $z1, $z2, z3;
        java.util.StringTokenizer r1, $r5;
        int i0, i1, $i8;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        char $c2;
        byte $b3, $b4, $b5, $b6, $b7, $b9, $b10;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r30, $r31, $r32;
        java.lang.IllegalArgumentException $r7, $r12, $r18, $r24, $r29;
        java.lang.NumberFormatException $r25;
        java.lang.NullPointerException $r26;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("coordinate");

        throw $r26;

     label01:
        z0 = 0;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c2 != 45 goto label02;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        z0 = 1;

     label02:
        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ":");

        r1 = $r5;

        i0 = virtualinvoke r1.<java.util.StringTokenizer: int countTokens()>();

        if i0 >= 1 goto label03;

        $r24 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r24;

     label03:
        r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if i0 != 1 goto label06;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

        if z0 == 0 goto label04;

        $d9 = neg d0;

        goto label05;

     label04:
        $d9 = d0;

     label05:
        return $d9;

     label06:
        r3 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        d2 = 0.0;

        $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label07;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        d1 = (double) $i8;

        r4 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r4);

        goto label08;

     label07:
        d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

     label08:
        if z0 == 0 goto label09;

        if i1 != 180 goto label09;

        $b10 = d1 cmpl 0.0;

        if $b10 != 0 goto label09;

        $b9 = d2 cmpl 0.0;

        if $b9 != 0 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z3 = $z2;

        $d3 = (double) i1;

        $b3 = $d3 cmpg 0.0;

        if $b3 < 0 goto label11;

        if i1 <= 179 goto label12;

        if z3 != 0 goto label12;

     label11:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label12:
        $b4 = d1 cmpg 0.0;

        if $b4 < 0 goto label13;

        $b5 = d1 cmpl 59.0;

        if $b5 <= 0 goto label14;

     label13:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label14:
        $b6 = d2 cmpg 0.0;

        if $b6 < 0 goto label15;

        $b7 = d2 cmpl 59.0;

        if $b7 <= 0 goto label16;

     label15:
        $r18 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label16:
        $d4 = (double) i1;

        $d8 = $d4 * 3600.0;

        $d7 = d1 * 60.0;

        $d5 = $d8 + $d7;

        d10 = $d5 + d2;

        d11 = d10 / 3600.0;

        if z0 == 0 goto label17;

        $d6 = neg d11;

        goto label18;

     label17:
        $d6 = d11;

     label18:
        return $d6;

     label19:
        $r25 := @caughtexception;

        $r29 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r29;

        catch java.lang.NumberFormatException from label03 to label05 with label19;
        catch java.lang.NumberFormatException from label06 to label18 with label19;
    }

    private static void computeDistanceAndBearing(double, double, double, double, float[])
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d20, d23, d25, d26, d27, d28, d29, d30, d31, d32, d33, d34, $d35, $d36, $d37, d38, d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, d133, d134, d135, d136, d137, d138, d139, d140;
        float[] r0;
        byte b0, $b4, $b5, $b6;
        float f0, f1, f2, f3, f4;
        int i1, $i2, $i3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r0 := @parameter4: float[];

        b0 = 20;

        d133 = d0 * 0.017453292519943295;

        d134 = d2 * 0.017453292519943295;

        d135 = d1 * 0.017453292519943295;

        d136 = d3 * 0.017453292519943295;

        d4 = 6378137.0;

        d5 = 6356752.3142;

        $d35 = d4 - d5;

        d6 = $d35 / d4;

        $d37 = d4 * d4;

        $d36 = d5 * d5;

        $d43 = $d37 - $d36;

        $d44 = d5 * d5;

        d7 = $d43 / $d44;

        d8 = d136 - d135;

        d9 = 0.0;

        $d46 = 1.0 - d6;

        $d45 = staticinvoke <java.lang.Math: double tan(double)>(d133);

        $d40 = $d46 * $d45;

        d10 = staticinvoke <java.lang.Math: double atan(double)>($d40);

        $d42 = 1.0 - d6;

        $d41 = staticinvoke <java.lang.Math: double tan(double)>(d134);

        $d49 = $d42 * $d41;

        d11 = staticinvoke <java.lang.Math: double atan(double)>($d49);

        d12 = staticinvoke <java.lang.Math: double cos(double)>(d10);

        d13 = staticinvoke <java.lang.Math: double cos(double)>(d11);

        d14 = staticinvoke <java.lang.Math: double sin(double)>(d10);

        d16 = staticinvoke <java.lang.Math: double sin(double)>(d11);

        d15 = d12 * d13;

        d18 = d14 * d16;

        d17 = 0.0;

        d20 = 0.0;

        d23 = 0.0;

        d26 = 0.0;

        d25 = d8;

        i1 = 0;

     label1:
        if i1 >= b0 goto label7;

        d28 = d25;

        d23 = staticinvoke <java.lang.Math: double cos(double)>(d25);

        d26 = staticinvoke <java.lang.Math: double sin(double)>(d25);

        d27 = d13 * d26;

        $d74 = d12 * d16;

        $d65 = d14 * d13;

        $d64 = $d65 * d23;

        d30 = $d74 - $d64;

        $d72 = d27 * d27;

        $d73 = d30 * d30;

        d29 = $d72 + $d73;

        d137 = staticinvoke <java.lang.Math: double sqrt(double)>(d29);

        $d71 = d15 * d23;

        d138 = d18 + $d71;

        d17 = staticinvoke <java.lang.Math: double atan2(double,double)>(d137, d138);

        $b4 = d137 cmpl 0.0;

        if $b4 != 0 goto label2;

        $d123 = 0.0;

        goto label3;

     label2:
        $d70 = d15 * d26;

        $d123 = $d70 / d137;

     label3:
        d33 = $d123;

        $d83 = d33 * d33;

        d139 = 1.0 - $d83;

        $b5 = d139 cmpl 0.0;

        if $b5 != 0 goto label4;

        $d122 = 0.0;

        goto label5;

     label4:
        $d85 = 2.0 * d18;

        $d84 = $d85 / d139;

        $d122 = d138 - $d84;

     label5:
        d140 = $d122;

        d34 = d139 * d7;

        $d78 = d34 / 16384.0;

        $d87 = 175.0 * d34;

        $d86 = 320.0 - $d87;

        $d89 = d34 * $d86;

        $d88 = -768.0 + $d89;

        $d76 = d34 * $d88;

        $d75 = 4096.0 + $d76;

        $d77 = $d78 * $d75;

        d9 = 1.0 + $d77;

        $d100 = d34 / 1024.0;

        $d80 = 47.0 * d34;

        $d79 = 74.0 - $d80;

        $d82 = d34 * $d79;

        $d81 = -128.0 + $d82;

        $d98 = d34 * $d81;

        $d99 = 256.0 + $d98;

        d31 = $d100 * $d99;

        $d101 = d6 / 16.0;

        $d90 = $d101 * d139;

        $d102 = 3.0 * d139;

        $d103 = 4.0 - $d102;

        $d104 = d6 * $d103;

        $d105 = 4.0 + $d104;

        d32 = $d90 * $d105;

        d38 = d140 * d140;

        $d108 = d31 * d137;

        $d119 = d31 / 4.0;

        $d91 = 2.0 * d38;

        $d92 = -1.0 + $d91;

        $d121 = d138 * $d92;

        $d93 = d31 / 6.0;

        $d97 = $d93 * d140;

        $d94 = 4.0 * d137;

        $d95 = $d94 * d137;

        $d96 = -3.0 + $d95;

        $d115 = $d97 * $d96;

        $d117 = 4.0 * d38;

        $d116 = -3.0 + $d117;

        $d114 = $d115 * $d116;

        $d120 = $d121 - $d114;

        $d118 = $d119 * $d120;

        $d109 = d140 + $d118;

        d20 = $d108 * $d109;

        $d107 = 1.0 - d32;

        $d106 = $d107 * d6;

        $d132 = $d106 * d33;

        $d125 = d32 * d137;

        $d110 = d32 * d138;

        $d113 = 2.0 * d140;

        $d112 = $d113 * d140;

        $d111 = -1.0 + $d112;

        $d127 = $d110 * $d111;

        $d128 = d140 + $d127;

        $d126 = $d125 * $d128;

        $d131 = d17 + $d126;

        $d129 = $d132 * $d131;

        d25 = d8 + $d129;

        $d130 = d25 - d28;

        d39 = $d130 / d25;

        $d124 = staticinvoke <java.lang.Math: double abs(double)>(d39);

        $b6 = $d124 cmpg 1.0E-12;

        if $b6 >= 0 goto label6;

        goto label7;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        $d47 = d5 * d9;

        $d48 = d17 - d20;

        $d56 = $d47 * $d48;

        f1 = (float) $d56;

        r0[0] = f1;

        $i2 = lengthof r0;

        if $i2 <= 1 goto label8;

        $d50 = d13 * d26;

        $d52 = d12 * d16;

        $d54 = d14 * d13;

        $d55 = $d54 * d23;

        $d53 = $d52 - $d55;

        $d51 = staticinvoke <java.lang.Math: double atan2(double,double)>($d50, $d53);

        f2 = (float) $d51;

        $d62 = (double) f2;

        $d63 = $d62 * 57.29577951308232;

        f3 = (float) $d63;

        r0[1] = f3;

        $i3 = lengthof r0;

        if $i3 <= 2 goto label8;

        $d69 = d12 * d26;

        $d61 = neg d14;

        $d57 = $d61 * d13;

        $d59 = d12 * d16;

        $d60 = $d59 * d23;

        $d58 = $d57 + $d60;

        $d68 = staticinvoke <java.lang.Math: double atan2(double,double)>($d69, $d58);

        f0 = (float) $d68;

        $d67 = (double) f0;

        $d66 = $d67 * 57.29577951308232;

        f4 = (float) $d66;

        r0[2] = f4;

     label8:
        return;
    }

    public static void distanceBetween(double, double, double, double, float[])
    {
        double d0, d1, d2, d3;
        float[] r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r0 := @parameter4: float[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 >= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("results is null or has length < 1");

        throw $r1;

     label2:
        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>(d0, d1, d2, d3, r0);

        return;
    }

    public float distanceTo(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] r2, $r4, $r5, $r6, $r7;
        java.lang.Throwable r3, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0, $b1, $b2, $b3;
        float $f0, $f1, $f2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        $r4 = r0.<android.location.Location: float[] mResults>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $d1 = r0.<android.location.Location: double mLatitude>;

        $d0 = r0.<android.location.Location: double mLat1>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $d11 = r0.<android.location.Location: double mLongitude>;

        $d10 = r0.<android.location.Location: double mLon1>;

        $b1 = $d11 cmpl $d10;

        if $b1 != 0 goto label2;

        $d12 = r1.<android.location.Location: double mLatitude>;

        $d13 = r0.<android.location.Location: double mLat2>;

        $b2 = $d12 cmpl $d13;

        if $b2 != 0 goto label2;

        $d15 = r1.<android.location.Location: double mLongitude>;

        $d14 = r0.<android.location.Location: double mLon2>;

        $b3 = $d15 cmpl $d14;

        if $b3 == 0 goto label3;

     label2:
        $d5 = r0.<android.location.Location: double mLatitude>;

        $d4 = r0.<android.location.Location: double mLongitude>;

        $d3 = r1.<android.location.Location: double mLatitude>;

        $d2 = r1.<android.location.Location: double mLongitude>;

        $r5 = r0.<android.location.Location: float[] mResults>;

        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>($d5, $d4, $d3, $d2, $r5);

        $d6 = r0.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat1> = $d6;

        $d7 = r0.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon1> = $d7;

        $d8 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat2> = $d8;

        $d9 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon2> = $d9;

        $r6 = r0.<android.location.Location: float[] mResults>;

        $f0 = $r6[0];

        r0.<android.location.Location: float mDistance> = $f0;

        $r7 = r0.<android.location.Location: float[] mResults>;

        $f1 = $r7[1];

        r0.<android.location.Location: float mInitialBearing> = $f1;

     label3:
        $f2 = r0.<android.location.Location: float mDistance>;

        exitmonitor r2;

     label4:
        return $f2;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public float bearingTo(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] r2, $r4, $r5, $r6, $r7;
        java.lang.Throwable r3, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0, $b1, $b2, $b3;
        float $f0, $f1, $f2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        $r4 = r0.<android.location.Location: float[] mResults>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $d1 = r0.<android.location.Location: double mLatitude>;

        $d0 = r0.<android.location.Location: double mLat1>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $d11 = r0.<android.location.Location: double mLongitude>;

        $d10 = r0.<android.location.Location: double mLon1>;

        $b1 = $d11 cmpl $d10;

        if $b1 != 0 goto label2;

        $d12 = r1.<android.location.Location: double mLatitude>;

        $d13 = r0.<android.location.Location: double mLat2>;

        $b2 = $d12 cmpl $d13;

        if $b2 != 0 goto label2;

        $d15 = r1.<android.location.Location: double mLongitude>;

        $d14 = r0.<android.location.Location: double mLon2>;

        $b3 = $d15 cmpl $d14;

        if $b3 == 0 goto label3;

     label2:
        $d5 = r0.<android.location.Location: double mLatitude>;

        $d4 = r0.<android.location.Location: double mLongitude>;

        $d3 = r1.<android.location.Location: double mLatitude>;

        $d2 = r1.<android.location.Location: double mLongitude>;

        $r5 = r0.<android.location.Location: float[] mResults>;

        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>($d5, $d4, $d3, $d2, $r5);

        $d6 = r0.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat1> = $d6;

        $d7 = r0.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon1> = $d7;

        $d8 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat2> = $d8;

        $d9 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon2> = $d9;

        $r6 = r0.<android.location.Location: float[] mResults>;

        $f0 = $r6[0];

        r0.<android.location.Location: float mDistance> = $f0;

        $r7 = r0.<android.location.Location: float[] mResults>;

        $f1 = $r7[1];

        r0.<android.location.Location: float mInitialBearing> = $f1;

     label3:
        $f2 = r0.<android.location.Location: float mInitialBearing>;

        exitmonitor r2;

     label4:
        return $f2;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String getProvider()
    {
        android.location.Location r0;
        java.lang.String $r1;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        return $r1;
    }

    public void setProvider(java.lang.String)
    {
        android.location.Location r0;
        java.lang.String r1;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        r0.<android.location.Location: java.lang.String mProvider> = r1;

        return;
    }

    public long getTime()
    {
        android.location.Location r0;
        long $l0;

        r0 := @this: android.location.Location;

        $l0 = r0.<android.location.Location: long mTime>;

        return $l0;
    }

    public void setTime(long)
    {
        android.location.Location r0;
        long l0;

        r0 := @this: android.location.Location;

        l0 := @parameter0: long;

        r0.<android.location.Location: long mTime> = l0;

        return;
    }

    public long getElapsedRealtimeNanos()
    {
        android.location.Location r0;
        long $l0;

        r0 := @this: android.location.Location;

        $l0 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        return $l0;
    }

    public void setElapsedRealtimeNanos(long)
    {
        android.location.Location r0;
        long l0;

        r0 := @this: android.location.Location;

        l0 := @parameter0: long;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = l0;

        return;
    }

    public double getLatitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mLatitude>;

        return $d0;
    }

    public void setLatitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mLatitude> = d0;

        return;
    }

    public double getLongitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mLongitude>;

        return $d0;
    }

    public void setLongitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mLongitude> = d0;

        return;
    }

    public boolean hasAltitude()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasAltitude>;

        return $z0;
    }

    public double getAltitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mAltitude>;

        return $d0;
    }

    public void setAltitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mAltitude> = d0;

        r0.<android.location.Location: boolean mHasAltitude> = 1;

        return;
    }

    public void removeAltitude()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        return;
    }

    public boolean hasSpeed()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasSpeed>;

        return $z0;
    }

    public float getSpeed()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mSpeed>;

        return $f0;
    }

    public void setSpeed(float)
    {
        android.location.Location r0;
        float f0;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

        r0.<android.location.Location: float mSpeed> = f0;

        r0.<android.location.Location: boolean mHasSpeed> = 1;

        return;
    }

    public void removeSpeed()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        return;
    }

    public boolean hasBearing()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasBearing>;

        return $z0;
    }

    public float getBearing()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mBearing>;

        return $f0;
    }

    public void setBearing(float)
    {
        android.location.Location r0;
        float f0;
        byte $b0, $b1;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

     label1:
        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label2;

        f0 = f0 + 360.0F;

        goto label1;

     label2:
        $b1 = f0 cmpl 360.0F;

        if $b1 < 0 goto label3;

        f0 = f0 - 360.0F;

        goto label2;

     label3:
        r0.<android.location.Location: float mBearing> = f0;

        r0.<android.location.Location: boolean mHasBearing> = 1;

        return;
    }

    public void removeBearing()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        return;
    }

    public boolean hasAccuracy()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        return $z0;
    }

    public float getAccuracy()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mAccuracy>;

        return $f0;
    }

    public void setAccuracy(float)
    {
        android.location.Location r0;
        float f0;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

        r0.<android.location.Location: float mAccuracy> = f0;

        r0.<android.location.Location: boolean mHasAccuracy> = 1;

        return;
    }

    public void removeAccuracy()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        return;
    }

    public boolean isComplete()
    {
        android.location.Location r0;
        java.lang.String $r1;
        boolean $z0;
        long $l0, $l2;
        byte $b1, $b3;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $l0 = r0.<android.location.Location: long mTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        return 0;

     label3:
        $l2 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void makeComplete()
    {
        android.location.Location r0;
        java.lang.String $r1;
        boolean $z0;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        if $r1 != null goto label1;

        r0.<android.location.Location: java.lang.String mProvider> = "?";

     label1:
        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 != 0 goto label2;

        r0.<android.location.Location: boolean mHasAccuracy> = 1;

        r0.<android.location.Location: float mAccuracy> = 100.0F;

     label2:
        $l0 = r0.<android.location.Location: long mTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.location.Location: long mTime> = $l5;

     label3:
        $l2 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label4;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r0.<android.location.Location: long mElapsedRealtimeNanos> = $l4;

     label4:
        return;
    }

    public android.os.Bundle getExtras()
    {
        android.location.Location r0;
        android.os.Bundle $r1;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: android.os.Bundle mExtras>;

        return $r1;
    }

    public void setExtras(android.os.Bundle)
    {
        android.location.Location r0;
        android.os.Bundle r1, $r2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

     label2:
        r0.<android.location.Location: android.os.Bundle mExtras> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        android.location.Location r0;
        java.lang.StringBuilder r1, $r2, $r16, $r18, $r22, $r24, $r25;
        java.lang.String $r4, $r9, $r14, $r31;
        java.lang.Object[] $r6, $r29;
        double $d0, $d1, $d2;
        java.lang.Double $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b0, $b2;
        long $l1, $l3, $l4, $l5;
        android.os.Bundle $r13, $r19;
        float $f0, $f1, $f2;
        java.lang.Float $r32;

        r0 := @this: android.location.Location;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location[");

        $r4 = r0.<android.location.Location: java.lang.String mProvider>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = newarray (java.lang.Object)[2];

        $d0 = r0.<android.location.Location: double mLatitude>;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6[0] = $r7;

        $d1 = r0.<android.location.Location: double mLongitude>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.6f,%.6f", $r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 == 0 goto label01;

        $r29 = newarray (java.lang.Object)[1];

        $f2 = r0.<android.location.Location: float mAccuracy>;

        $r32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r29[0] = $r32;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" acc=%.0f", $r29);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        goto label02;

     label01:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acc=???");

     label02:
        $l1 = r0.<android.location.Location: long mTime>;

        $b0 = $l1 cmp 0L;

        if $b0 != 0 goto label03;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t=?!?");

     label03:
        $l3 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b2 = $l3 cmp 0L;

        if $b2 != 0 goto label04;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" et=?!?");

        goto label05;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" et=");

        $l4 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $l5 = $l4 / 1000000L;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l5, r1);

     label05:
        $z1 = r0.<android.location.Location: boolean mHasAltitude>;

        if $z1 == 0 goto label06;

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alt=");

        $d2 = r0.<android.location.Location: double mAltitude>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

     label06:
        $z3 = r0.<android.location.Location: boolean mHasSpeed>;

        if $z3 == 0 goto label07;

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vel=");

        $f1 = r0.<android.location.Location: float mSpeed>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

     label07:
        $z2 = r0.<android.location.Location: boolean mHasBearing>;

        if $z2 == 0 goto label08;

        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bear=");

        $f0 = r0.<android.location.Location: float mBearing>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

     label08:
        $z4 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        if $z4 == 0 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mock");

     label09:
        $r13 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r13 == null goto label10;

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r19 = r0.<android.location.Location: android.os.Bundle mExtras>;

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.location.Location r0;
        android.util.Printer r1;
        java.lang.String r2, $r5, $r7;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<android.location.Location: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        return;
    }

    public int describeContents()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.Location r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        long $l1, $l2;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;
        android.os.Bundle $r3;
        byte $b3, $b4, $b5, $b6, $b7;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.location.Location: java.lang.String mProvider>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $l1 = r0.<android.location.Location: long mTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $d0 = r0.<android.location.Location: double mLatitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $d1 = r0.<android.location.Location: double mLongitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        $z0 = r0.<android.location.Location: boolean mHasAltitude>;

        if $z0 == 0 goto label01;

        $b7 = 1;

        goto label02;

     label01:
        $b7 = 0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b7);

        $d2 = r0.<android.location.Location: double mAltitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d2);

        $z1 = r0.<android.location.Location: boolean mHasSpeed>;

        if $z1 == 0 goto label03;

        $b5 = 1;

        goto label04;

     label03:
        $b5 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b5);

        $f0 = r0.<android.location.Location: float mSpeed>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $z2 = r0.<android.location.Location: boolean mHasBearing>;

        if $z2 == 0 goto label05;

        $b6 = 1;

        goto label06;

     label05:
        $b6 = 0;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b6);

        $f1 = r0.<android.location.Location: float mBearing>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $z3 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z3 == 0 goto label07;

        $b3 = 1;

        goto label08;

     label07:
        $b3 = 0;

     label08:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b3);

        $f2 = r0.<android.location.Location: float mAccuracy>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r3);

        $z4 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        if $z4 == 0 goto label09;

        $b4 = 1;

        goto label10;

     label09:
        $b4 = 0;

     label10:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b4);

        return;
    }

    public android.location.Location getExtraLocation(java.lang.String)
    {
        android.location.Location r0, $r5;
        java.lang.String r1;
        android.os.Parcelable r2;
        android.os.Bundle $r3, $r4;
        boolean $z0;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r3 == null goto label1;

        $r4 = r0.<android.location.Location: android.os.Bundle mExtras>;

        r2 = virtualinvoke $r4.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>(r1);

        $z0 = r2 instanceof android.location.Location;

        if $z0 == 0 goto label1;

        $r5 = (android.location.Location) r2;

        return $r5;

     label1:
        return null;
    }

    public void setExtraLocation(java.lang.String, android.location.Location)
    {
        android.location.Location r0, r2;
        java.lang.String r1;
        android.os.Bundle $r3, $r4, $r5;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.location.Location;

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r3 != null goto label1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r0.<android.location.Location: android.os.Bundle mExtras> = $r5;

     label1:
        $r4 = r0.<android.location.Location: android.os.Bundle mExtras>;

        virtualinvoke $r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>(r1, r2);

        return;
    }

    public boolean isFromMockProvider()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        return $z0;
    }

    public void setIsFromMockProvider(boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @this: android.location.Location;

        z0 := @parameter0: boolean;

        r0.<android.location.Location: boolean mIsFromMockProvider> = z0;

        return;
    }

    static long access$002(android.location.Location, long)
    {
        android.location.Location r0;
        long l0;

        r0 := @parameter0: android.location.Location;

        l0 := @parameter1: long;

        r0.<android.location.Location: long mTime> = l0;

        return l0;
    }

    static long access$102(android.location.Location, long)
    {
        android.location.Location r0;
        long l0;

        r0 := @parameter0: android.location.Location;

        l0 := @parameter1: long;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = l0;

        return l0;
    }

    static double access$202(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mLatitude> = d0;

        return d0;
    }

    static double access$302(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mLongitude> = d0;

        return d0;
    }

    static boolean access$402(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasAltitude> = z0;

        return z0;
    }

    static double access$502(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mAltitude> = d0;

        return d0;
    }

    static boolean access$602(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasSpeed> = z0;

        return z0;
    }

    static float access$702(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mSpeed> = f0;

        return f0;
    }

    static boolean access$802(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasBearing> = z0;

        return z0;
    }

    static float access$902(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mBearing> = f0;

        return f0;
    }

    static boolean access$1002(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasAccuracy> = z0;

        return z0;
    }

    static float access$1102(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mAccuracy> = f0;

        return f0;
    }

    static android.os.Bundle access$1202(android.location.Location, android.os.Bundle)
    {
        android.location.Location r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.os.Bundle;

        r0.<android.location.Location: android.os.Bundle mExtras> = r1;

        return r1;
    }

    static boolean access$1302(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mIsFromMockProvider> = z0;

        return z0;
    }

    static void <clinit>()
    {
        android.location.Location$1 $r0;

        <android.location.Location: java.lang.String EXTRA_NO_GPS_LOCATION> = "noGPSLocation";

        <android.location.Location: java.lang.String EXTRA_COARSE_LOCATION> = "coarseLocation";

        <android.location.Location: int FORMAT_SECONDS> = 2;

        <android.location.Location: int FORMAT_MINUTES> = 1;

        <android.location.Location: int FORMAT_DEGREES> = 0;

        $r0 = new android.location.Location$1;

        specialinvoke $r0.<android.location.Location$1: void <init>()>();

        <android.location.Location: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
