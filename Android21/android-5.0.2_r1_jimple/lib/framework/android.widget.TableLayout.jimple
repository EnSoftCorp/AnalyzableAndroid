public class android.widget.TableLayout extends android.widget.LinearLayout
{
    private int[] mMaxWidths;
    private android.util.SparseBooleanArray mStretchableColumns;
    private android.util.SparseBooleanArray mShrinkableColumns;
    private android.util.SparseBooleanArray mCollapsedColumns;
    private boolean mShrinkAllColumns;
    private boolean mStretchAllColumns;
    private android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener;
    private boolean mInitialized;

    public void <init>(android.content.Context)
    {
        android.widget.TableLayout r0;
        android.content.Context r1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<android.widget.TableLayout: void initTableLayout()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        java.lang.String r4, r5, r6;
        int[] $r7;
        android.util.SparseBooleanArray $r8, $r9, $r10;
        char $c0, $c1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r7 = <com.android.internal.R$styleable: int[] TableLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r7);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if r4 == null goto label2;

        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c1 != 42 goto label1;

        r0.<android.widget.TableLayout: boolean mStretchAllColumns> = 1;

        goto label2;

     label1:
        $r10 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r4);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns> = $r10;

     label2:
        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        if r5 == null goto label4;

        $c0 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        if $c0 != 42 goto label3;

        r0.<android.widget.TableLayout: boolean mShrinkAllColumns> = 1;

        goto label4;

     label3:
        $r9 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r5);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns> = $r9;

     label4:
        r6 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        if r6 == null goto label5;

        $r8 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r6);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns> = $r8;

     label5:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.TableLayout: void initTableLayout()>();

        return;
    }

    private static android.util.SparseBooleanArray parseColumns(java.lang.String)
    {
        java.lang.String r0, r5;
        android.util.SparseBooleanArray r1, $r6;
        java.util.regex.Pattern r2;
        java.lang.String[] r3, r4;
        int i0, i1, i2;
        java.lang.NumberFormatException $r7;

        r0 := @parameter0: java.lang.String;

        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r1 = $r6;

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*,\\s*");

        r3 = virtualinvoke r2.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r0);

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r5 = r4[i1];

     label2:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        if i2 < 0 goto label3;

        virtualinvoke r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i2, 1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return r1;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private void initTableLayout()
    {
        android.widget.TableLayout r0;
        android.util.SparseBooleanArray $r1, $r2, $r3, $r6, $r7, $r8;
        android.widget.TableLayout$PassThroughHierarchyChangeListener $r4, $r5;

        r0 := @this: android.widget.TableLayout;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        if $r1 != null goto label1;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns> = $r8;

     label1:
        $r2 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        if $r2 != null goto label2;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns> = $r7;

     label2:
        $r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        if $r3 != null goto label3;

        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns> = $r6;

     label3:
        virtualinvoke r0.<android.widget.TableLayout: void setOrientation(int)>(1);

        $r4 = new android.widget.TableLayout$PassThroughHierarchyChangeListener;

        specialinvoke $r4.<android.widget.TableLayout$PassThroughHierarchyChangeListener: void <init>(android.widget.TableLayout,android.widget.TableLayout$1)>(r0, null);

        r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener> = $r4;

        $r5 = r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener>;

        specialinvoke r0.<android.widget.LinearLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r5);

        r0.<android.widget.TableLayout: boolean mInitialized> = 1;

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;
        android.widget.TableLayout$PassThroughHierarchyChangeListener $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r2 = r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener>;

        staticinvoke <android.widget.TableLayout$PassThroughHierarchyChangeListener: android.view.ViewGroup$OnHierarchyChangeListener access$102(android.widget.TableLayout$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)>($r2, r1);

        return;
    }

    private void requestRowsLayout()
    {
        android.widget.TableLayout r0;
        int i0, i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mInitialized>;

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void requestLayout()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void requestLayout()
    {
        android.widget.TableLayout r0;
        int i0, i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mInitialized>;

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void forceLayout()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public boolean isShrinkAllColumns()
    {
        android.widget.TableLayout r0;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        return $z0;
    }

    public void setShrinkAllColumns(boolean)
    {
        android.widget.TableLayout r0;
        boolean z0;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.TableLayout: boolean mShrinkAllColumns> = z0;

        return;
    }

    public boolean isStretchAllColumns()
    {
        android.widget.TableLayout r0;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        return $z0;
    }

    public void setStretchAllColumns(boolean)
    {
        android.widget.TableLayout r0;
        boolean z0;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.TableLayout: boolean mStretchAllColumns> = z0;

        return;
    }

    public void setColumnCollapsed(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.view.View r1;
        android.util.SparseBooleanArray $r2;
        android.widget.TableRow $r3;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        i1 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i2);

        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label2;

        $r3 = (android.widget.TableRow) r1;

        virtualinvoke $r3.<android.widget.TableRow: void setColumnCollapsed(int,boolean)>(i0, z0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public boolean isColumnCollapsed(int)
    {
        android.widget.TableLayout r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;
    }

    public void setColumnStretchable(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean z0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public boolean isColumnStretchable(int)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean $z0, $z1, $z2;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void setColumnShrinkable(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean z0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public boolean isColumnShrinkable(int)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean $z0, $z1, $z2;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void trackCollapsedColumns(android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        android.widget.TableRow r2;
        android.util.SparseBooleanArray r3;
        int i0, i1, i2;
        boolean z0, $z1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label3;

        r2 = (android.widget.TableRow) r1;

        r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        i0 = virtualinvoke r3.<android.util.SparseBooleanArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = virtualinvoke r3.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        z0 = virtualinvoke r3.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        if z0 == 0 goto label2;

        virtualinvoke r2.<android.widget.TableRow: void setColumnCollapsed(int,boolean)>(i2, z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View)>(r1);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, int)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int)>(r1, i0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TableLayout r0;
        int i0, i1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TableLayout: void measureVertical(int,int)>(i0, i1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TableLayout r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.widget.TableLayout: void layoutVertical(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4;
        boolean $z0;
        int[] $r2;
        android.widget.TableRow $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $z0 = r1 instanceof android.widget.TableRow;

        if $z0 == 0 goto label1;

        $r3 = (android.widget.TableRow) r1;

        $r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        virtualinvoke $r3.<android.widget.TableRow: void setColumnsWidthConstraints(int[])>($r2);

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r1, i0, i1, i2, i3, i4);

        return;
    }

    void measureVertical(int, int)
    {
        android.widget.TableLayout r0;
        int i0, i1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.TableLayout: void findLargestCells(int)>(i0);

        specialinvoke r0.<android.widget.TableLayout: void shrinkAndStretchColumns(int)>(i0);

        specialinvoke r0.<android.widget.LinearLayout: void measureVertical(int,int)>(i0, i1);

        return;
    }

    private void findLargestCells(int)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        boolean z0, $z1;
        android.view.View r1;
        android.widget.TableRow r2;
        android.view.ViewGroup$LayoutParams r3;
        int[] r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r14;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 = 1;

        i1 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label9;

        r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i2);

        $i7 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i7 != 8 goto label2;

        goto label8;

     label2:
        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label8;

        r2 = (android.widget.TableRow) r1;

        r3 = virtualinvoke r2.<android.widget.TableRow: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3.<android.view.ViewGroup$LayoutParams: int height> = -2;

        r4 = virtualinvoke r2.<android.widget.TableRow: int[] getColumnsWidths(int)>(i0);

        i3 = lengthof r4;

        if z0 == 0 goto label5;

        $r10 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        if $r10 == null goto label3;

        $r11 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i14 = lengthof $r11;

        if $i14 == i3 goto label4;

     label3:
        $r12 = newarray (int)[i3];

        r0.<android.widget.TableLayout: int[] mMaxWidths> = $r12;

     label4:
        $r13 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r4, 0, $r13, 0, i3);

        z0 = 0;

        goto label8;

     label5:
        $r6 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i4 = lengthof $r6;

        i5 = i3 - i4;

        if i5 <= 0 goto label6;

        r5 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $r7 = newarray (int)[i3];

        r0.<android.widget.TableLayout: int[] mMaxWidths> = $r7;

        $r8 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i11 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r5, 0, $r8, 0, $i11);

        $i13 = lengthof r5;

        $r9 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i12 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r4, $i13, $r9, $i12, i5);

     label6:
        r14 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i15 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i3);

        i6 = 0;

     label7:
        if i6 >= i15 goto label8;

        $i8 = r14[i6];

        $i9 = r4[i6];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        r14[i6] = $i10;

        i6 = i6 + 1;

        goto label7;

     label8:
        i2 = i2 + 1;

        goto label1;

     label9:
        return;
    }

    private void shrinkAndStretchColumns(int)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        int[] r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseBooleanArray $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        if $r2 != null goto label1;

        return;

     label1:
        i1 = 0;

        r1 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i2 = lengthof r1;

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        i4 = r1[i3];

        i1 = i1 + i4;

        i3 = i3 + 1;

        goto label2;

     label3:
        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i6 = r0.<android.widget.TableLayout: int mPaddingLeft>;

        $i8 = $i5 - $i6;

        $i7 = r0.<android.widget.TableLayout: int mPaddingRight>;

        i11 = $i8 - $i7;

        if i1 <= i11 goto label5;

        $z2 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        if $z2 != 0 goto label4;

        $r6 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $i10 = virtualinvoke $r6.<android.util.SparseBooleanArray: int size()>();

        if $i10 <= 0 goto label5;

     label4:
        $r5 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $z3 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        specialinvoke r0.<android.widget.TableLayout: void mutateColumnsWidth(android.util.SparseBooleanArray,boolean,int,int)>($r5, $z3, i11, i1);

        goto label7;

     label5:
        if i1 >= i11 goto label7;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        if $z0 != 0 goto label6;

        $r4 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $i9 = virtualinvoke $r4.<android.util.SparseBooleanArray: int size()>();

        if $i9 <= 0 goto label7;

     label6:
        $r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $z1 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        specialinvoke r0.<android.widget.TableLayout: void mutateColumnsWidth(android.util.SparseBooleanArray,boolean,int,int)>($r3, $z1, i11, i1);

     label7:
        return;
    }

    private void mutateColumnsWidth(android.util.SparseBooleanArray, boolean, int, int)
    {
        android.widget.TableLayout r0;
        android.util.SparseBooleanArray r1;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24;
        int[] r2;
        android.view.View r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.SparseBooleanArray;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = 0;

        r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i3 = lengthof r2;

        if z0 == 0 goto label01;

        $i9 = i3;

        goto label02;

     label01:
        $i9 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

     label02:
        i4 = $i9;

        i5 = i0 - i1;

        i6 = i5 / i4;

        i7 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i8 = 0;

     label03:
        if i8 >= i7 goto label05;

        r3 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i8);

        $z3 = r3 instanceof android.widget.TableRow;

        if $z3 == 0 goto label04;

        virtualinvoke r3.<android.view.View: void forceLayout()>();

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        if z0 != 0 goto label10;

        i19 = 0;

     label06:
        if i19 >= i4 goto label09;

        i20 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i19);

        $z2 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i19);

        if $z2 == 0 goto label08;

        if i20 >= i3 goto label07;

        $i17 = r2[i20];

        $i18 = $i17 + i6;

        r2[i20] = $i18;

        goto label08;

     label07:
        i2 = i2 + 1;

     label08:
        i19 = i19 + 1;

        goto label06;

     label09:
        goto label13;

     label10:
        i21 = 0;

     label11:
        if i21 >= i4 goto label12;

        $i11 = r2[i21];

        $i10 = $i11 + i6;

        r2[i21] = $i10;

        i21 = i21 + 1;

        goto label11;

     label12:
        return;

     label13:
        if i2 <= 0 goto label17;

        if i2 >= i4 goto label17;

        $i12 = i2 * i6;

        $i13 = i4 - i2;

        i22 = $i12 / $i13;

        i23 = 0;

     label14:
        if i23 >= i4 goto label17;

        i24 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i23);

        $z1 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i23);

        if $z1 == 0 goto label16;

        if i24 >= i3 goto label16;

        $i15 = r2[i24];

        if i22 <= $i15 goto label15;

        r2[i24] = 0;

        goto label16;

     label15:
        $i14 = r2[i24];

        $i16 = $i14 + i22;

        r2[i24] = $i16;

     label16:
        i23 = i23 + 1;

        goto label14;

     label17:
        return;
    }

    public android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.TableLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.TableLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TableLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableLayout r0;
        android.widget.TableLayout$LayoutParams $r1;

        r0 := @this: android.widget.TableLayout;

        $r1 = new android.widget.TableLayout$LayoutParams;

        specialinvoke $r1.<android.widget.TableLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.TableLayout$LayoutParams;

        return $z0;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.TableLayout$LayoutParams;

        specialinvoke $r2.<android.widget.TableLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TableLayout r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TableLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TableLayout r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TableLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableLayout r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.TableLayout;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    static void access$200(android.widget.TableLayout, android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;

        r0 := @parameter0: android.widget.TableLayout;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<android.widget.TableLayout: void trackCollapsedColumns(android.view.View)>(r1);

        return;
    }
}
