public final class android.hardware.camera2.params.RggbChannelVector extends java.lang.Object
{
    public static final int COUNT;
    public static final int RED;
    public static final int GREEN_EVEN;
    public static final int GREEN_ODD;
    public static final int BLUE;
    private final float mRed;
    private final float mGreenEven;
    private final float mGreenOdd;
    private final float mBlue;

    public void <init>(float, float, float, float)
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f4 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>(f0, "red");

        r0.<android.hardware.camera2.params.RggbChannelVector: float mRed> = $f4;

        $f5 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>(f1, "greenEven");

        r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven> = $f5;

        $f6 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>(f2, "greenOdd");

        r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd> = $f6;

        $f7 = staticinvoke <com.android.internal.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>(f3, "blue");

        r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue> = $f7;

        return;
    }

    public final float getRed()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float $f0;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        return $f0;
    }

    public float getGreenEven()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float $f0;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        return $f0;
    }

    public float getGreenOdd()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float $f0;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        return $f0;
    }

    public float getBlue()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float $f0;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        return $f0;
    }

    public float getComponent(int)
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        float $f0, $f1, $f2, $f3;
        java.lang.AssertionError $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 < 4 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Color channel out of range");

        throw $r1;

     label2:
        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label3:
        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        return $f0;

     label4:
        $f3 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        return $f3;

     label5:
        $f2 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        return $f2;

     label6:
        $f1 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        return $f1;

     label7:
        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled case ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r2;
    }

    public void copyTo(float[], int)
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        r1 := @parameter0: float[];

        i0 := @parameter1: int;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "destination must not be null");

        $i1 = lengthof r1;

        $i2 = $i1 - i0;

        if $i2 >= 4 goto label1;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("destination too small to fit elements");

        throw $r3;

     label1:
        $i3 = i0 + 0;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        r1[$i3] = $f0;

        $i4 = i0 + 1;

        $f1 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        r1[$i4] = $f1;

        $i5 = i0 + 2;

        $f2 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        r1[$i5] = $f2;

        $i6 = i0 + 3;

        $f3 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        r1[$i6] = $f3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.params.RggbChannelVector r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof android.hardware.camera2.params.RggbChannelVector;

        if $z0 == 0 goto label5;

        r2 = (android.hardware.camera2.params.RggbChannelVector) r1;

        $f1 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        $f0 = r2.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label3;

        $f3 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        $f2 = r2.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        $b1 = $f3 cmpl $f2;

        if $b1 != 0 goto label3;

        $f5 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        $f4 = r2.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        $b2 = $f5 cmpl $f4;

        if $b2 != 0 goto label3;

        $f7 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        $f6 = r2.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        $b3 = $f7 cmpl $f6;

        if $b3 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public int hashCode()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $f1 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        $i2 = $i0 ^ $i1;

        $f2 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2);

        $i4 = $i2 ^ $i3;

        $f3 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3);

        $i6 = $i4 ^ $i5;

        return $i6;
    }

    public java.lang.String toString()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = specialinvoke r0.<android.hardware.camera2.params.RggbChannelVector: java.lang.String toShortString()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("RggbChannelVector%s", $r1);

        return $r3;
    }

    private java.lang.String toShortString()
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        java.lang.Object[] $r1;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.hardware.camera2.params.RggbChannelVector;

        $r1 = newarray (java.lang.Object)[4];

        $f0 = r0.<android.hardware.camera2.params.RggbChannelVector: float mRed>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1[0] = $r2;

        $f1 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenEven>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r1[1] = $r3;

        $f2 = r0.<android.hardware.camera2.params.RggbChannelVector: float mGreenOdd>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r1[2] = $r4;

        $f3 = r0.<android.hardware.camera2.params.RggbChannelVector: float mBlue>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{R:%f, G_even:%f, G_odd:%f, B:%f}", $r1);

        return $r6;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.params.RggbChannelVector: int BLUE> = 3;

        <android.hardware.camera2.params.RggbChannelVector: int GREEN_ODD> = 2;

        <android.hardware.camera2.params.RggbChannelVector: int GREEN_EVEN> = 1;

        <android.hardware.camera2.params.RggbChannelVector: int RED> = 0;

        <android.hardware.camera2.params.RggbChannelVector: int COUNT> = 4;

        return;
    }
}
