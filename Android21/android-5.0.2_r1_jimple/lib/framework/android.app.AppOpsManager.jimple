public class android.app.AppOpsManager extends java.lang.Object
{
    final android.content.Context mContext;
    final com.android.internal.app.IAppOpsService mService;
    final android.util.ArrayMap mModeWatchers;
    static android.os.IBinder sToken;
    public static final int MODE_ALLOWED;
    public static final int MODE_IGNORED;
    public static final int MODE_ERRORED;
    public static final int MODE_DEFAULT;
    public static final int OP_NONE;
    public static final int OP_COARSE_LOCATION;
    public static final int OP_FINE_LOCATION;
    public static final int OP_GPS;
    public static final int OP_VIBRATE;
    public static final int OP_READ_CONTACTS;
    public static final int OP_WRITE_CONTACTS;
    public static final int OP_READ_CALL_LOG;
    public static final int OP_WRITE_CALL_LOG;
    public static final int OP_READ_CALENDAR;
    public static final int OP_WRITE_CALENDAR;
    public static final int OP_WIFI_SCAN;
    public static final int OP_POST_NOTIFICATION;
    public static final int OP_NEIGHBORING_CELLS;
    public static final int OP_CALL_PHONE;
    public static final int OP_READ_SMS;
    public static final int OP_WRITE_SMS;
    public static final int OP_RECEIVE_SMS;
    public static final int OP_RECEIVE_EMERGECY_SMS;
    public static final int OP_RECEIVE_MMS;
    public static final int OP_RECEIVE_WAP_PUSH;
    public static final int OP_SEND_SMS;
    public static final int OP_READ_ICC_SMS;
    public static final int OP_WRITE_ICC_SMS;
    public static final int OP_WRITE_SETTINGS;
    public static final int OP_SYSTEM_ALERT_WINDOW;
    public static final int OP_ACCESS_NOTIFICATIONS;
    public static final int OP_CAMERA;
    public static final int OP_RECORD_AUDIO;
    public static final int OP_PLAY_AUDIO;
    public static final int OP_READ_CLIPBOARD;
    public static final int OP_WRITE_CLIPBOARD;
    public static final int OP_TAKE_MEDIA_BUTTONS;
    public static final int OP_TAKE_AUDIO_FOCUS;
    public static final int OP_AUDIO_MASTER_VOLUME;
    public static final int OP_AUDIO_VOICE_VOLUME;
    public static final int OP_AUDIO_RING_VOLUME;
    public static final int OP_AUDIO_MEDIA_VOLUME;
    public static final int OP_AUDIO_ALARM_VOLUME;
    public static final int OP_AUDIO_NOTIFICATION_VOLUME;
    public static final int OP_AUDIO_BLUETOOTH_VOLUME;
    public static final int OP_WAKE_LOCK;
    public static final int OP_MONITOR_LOCATION;
    public static final int OP_MONITOR_HIGH_POWER_LOCATION;
    public static final int OP_GET_USAGE_STATS;
    public static final int OP_MUTE_MICROPHONE;
    public static final int OP_TOAST_WINDOW;
    public static final int OP_PROJECT_MEDIA;
    public static final int OP_ACTIVATE_VPN;
    public static final int _NUM_OP;
    public static final java.lang.String OPSTR_COARSE_LOCATION;
    public static final java.lang.String OPSTR_FINE_LOCATION;
    public static final java.lang.String OPSTR_MONITOR_LOCATION;
    public static final java.lang.String OPSTR_MONITOR_HIGH_POWER_LOCATION;
    public static final java.lang.String OPSTR_GET_USAGE_STATS;
    public static final java.lang.String OPSTR_ACTIVATE_VPN;
    private static int[] sOpToSwitch;
    private static java.lang.String[] sOpToString;
    private static java.lang.String[] sOpNames;
    private static java.lang.String[] sOpPerms;
    private static java.lang.String[] sOpRestrictions;
    private static boolean[] sOpAllowSystemRestrictionBypass;
    private static int[] sOpDefaultMode;
    private static boolean[] sOpDisableReset;
    private static java.util.HashMap sOpStrToOp;

    public static int opToSwitch(int)
    {
        int i0, $i1;
        int[] $r0;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: int[] sOpToSwitch>;

        $i1 = $r0[i0];

        return $i1;
    }

    public static java.lang.String opToName(int)
    {
        int i0, $i1;
        java.lang.String[] $r0, $r6;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        return "NONE";

     label1:
        $r0 = <android.app.AppOpsManager: java.lang.String[] sOpNames>;

        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r6 = <android.app.AppOpsManager: java.lang.String[] sOpNames>;

        $r5 = $r6[i0];

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r5;
    }

    public static java.lang.String opToPermission(int)
    {
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: java.lang.String[] sOpPerms>;

        $r1 = $r0[i0];

        return $r1;
    }

    public static java.lang.String opToRestriction(int)
    {
        int i0;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: java.lang.String[] sOpRestrictions>;

        $r1 = $r0[i0];

        return $r1;
    }

    public static boolean opAllowSystemBypassRestriction(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: boolean[] sOpAllowSystemRestrictionBypass>;

        $z0 = $r0[i0];

        return $z0;
    }

    public static int opToDefaultMode(int)
    {
        int i0, $i1;
        int[] $r0;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: int[] sOpDefaultMode>;

        $i1 = $r0[i0];

        return $i1;
    }

    public static boolean opAllowsReset(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $r0 = <android.app.AppOpsManager: boolean[] sOpDisableReset>;

        $z0 = $r0[i0];

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void <init>(android.content.Context, com.android.internal.app.IAppOpsService)
    {
        android.app.AppOpsManager r0;
        android.content.Context r1;
        com.android.internal.app.IAppOpsService r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.app.IAppOpsService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers> = $r3;

        r0.<android.app.AppOpsManager: android.content.Context mContext> = r1;

        r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService> = r2;

        return;
    }

    public java.util.List getPackagesForOps(int[])
    {
        android.app.AppOpsManager r0;
        int[] r1;
        com.android.internal.app.IAppOpsService $r3;
        java.util.List $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: int[];

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r4 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: java.util.List getPackagesForOps(int[])>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getOpsForPackage(int, java.lang.String, int[])
    {
        android.app.AppOpsManager r0;
        int i0;
        java.lang.String r1;
        int[] r2;
        com.android.internal.app.IAppOpsService $r4;
        java.util.List $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

     label1:
        $r4 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r5 = interfaceinvoke $r4.<com.android.internal.app.IAppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>(i0, r1, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setMode(int, int, java.lang.String, int)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: void setMode(int,int,java.lang.String,int)>(i0, i1, r1, i2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setRestriction(int, int, int, java.lang.String[])
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2, i3;
        java.lang.String[] r1;
        com.android.internal.app.IAppOpsService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String[];

     label1:
        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>(i0, i1, i3, i2, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void resetAllModes()
    {
        android.app.AppOpsManager r0;
        com.android.internal.app.IAppOpsService $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.AppOpsManager;

     label1:
        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: void resetAllModes()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void startWatchingMode(java.lang.String, java.lang.String, android.app.AppOpsManager$OnOpChangedListener)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        android.app.AppOpsManager$OnOpChangedListener r3;
        int $i0;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.AppOpsManager$OnOpChangedListener;

        $i0 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        virtualinvoke r0.<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,android.app.AppOpsManager$OnOpChangedListener)>($i0, r2, r3);

        return;
    }

    public void startWatchingMode(int, java.lang.String, android.app.AppOpsManager$OnOpChangedListener)
    {
        android.app.AppOpsManager r0;
        int i0;
        java.lang.String r1;
        android.app.AppOpsManager$OnOpChangedListener r2;
        android.util.ArrayMap r3, $r7, $r8, $r12;
        com.android.internal.app.IAppOpsCallback r4;
        java.lang.Throwable r6, $r14;
        java.lang.Object $r9;
        com.android.internal.app.IAppOpsService $r10;
        android.app.AppOpsManager$1 $r11;
        android.os.RemoteException $r15;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.app.AppOpsManager$OnOpChangedListener;

        $r7 = r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.android.internal.app.IAppOpsCallback) $r9;

        if r4 != null goto label2;

        $r11 = new android.app.AppOpsManager$1;

        specialinvoke $r11.<android.app.AppOpsManager$1: void <init>(android.app.AppOpsManager,android.app.AppOpsManager$OnOpChangedListener)>(r0, r2);

        r4 = $r11;

        $r12 = r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

     label2:
        $r10 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        interfaceinvoke $r10.<com.android.internal.app.IAppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>(i0, r1, r4);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

     label5:
        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r3;

     label8:
        throw r6;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void stopWatchingMode(android.app.AppOpsManager$OnOpChangedListener)
    {
        android.app.AppOpsManager r0;
        android.app.AppOpsManager$OnOpChangedListener r1;
        android.util.ArrayMap r2, $r6, $r7;
        com.android.internal.app.IAppOpsCallback r3;
        java.lang.Throwable r5, $r11;
        java.lang.Object $r8;
        com.android.internal.app.IAppOpsService $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: android.app.AppOpsManager$OnOpChangedListener;

        $r6 = r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.app.AppOpsManager: android.util.ArrayMap mModeWatchers>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.internal.app.IAppOpsCallback) $r8;

        if r3 == null goto label5;

     label2:
        $r9 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        interfaceinvoke $r9.<com.android.internal.app.IAppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>(r3);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private java.lang.String buildSecurityExceptionMsg(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1;
        java.lang.String r1, $r8, $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r9;
        java.lang.String[] $r7;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from uid ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed to perform ");

        $r7 = <android.app.AppOpsManager: java.lang.String[] sOpNames>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static int strOpToOp(java.lang.String)
    {
        java.lang.String r0, $r8;
        java.lang.Integer r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = <android.app.AppOpsManager: java.util.HashMap sOpStrToOp>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.Integer) $r3;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown operation string: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int checkOp(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public int checkOpNoThrow(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public int noteOp(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public int noteOpNoThrow(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public int startOp(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int startOp(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public int startOpNoThrow(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>($i1, i0, r2);

        return $i2;
    }

    public void finishOp(java.lang.String, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @this: android.app.AppOpsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.app.AppOpsManager: int strOpToOp(java.lang.String)>(r1);

        virtualinvoke r0.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>($i1, i0, r2);

        return;
    }

    public int checkOp(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2;
        java.lang.String r1, $r4;
        com.android.internal.app.IAppOpsService $r2;
        java.lang.SecurityException $r3;
        android.os.RemoteException $r5;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        i2 = interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: int checkOperation(int,int,java.lang.String)>(i0, i1, r1);

        if i2 != 2 goto label2;

        $r3 = new java.lang.SecurityException;

        $r4 = specialinvoke r0.<android.app.AppOpsManager: java.lang.String buildSecurityExceptionMsg(int,int,java.lang.String)>(i0, i1, r1);

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        return i2;

     label3:
        $r5 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkOpNoThrow(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, $i2;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $i2 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int checkOperation(int,int,java.lang.String)>(i0, i1, r1);

     label2:
        return $i2;

     label3:
        $r4 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void checkPackage(int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, $i1;
        java.lang.String r1, $r10;
        android.os.RemoteException r2, $r11;
        com.android.internal.app.IAppOpsService $r3;
        java.lang.SecurityException $r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $i1 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int checkPackage(int,java.lang.String)>(i0, r1);

        if $i1 == 0 goto label2;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not belong to ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to verify package ownership", r2);

        throw $r12;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkAudioOp(int, int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2, i3;
        java.lang.String r1, $r4;
        com.android.internal.app.IAppOpsService $r2;
        java.lang.SecurityException $r3;
        android.os.RemoteException $r5;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

     label1:
        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        i3 = interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        if i3 != 2 goto label2;

        $r3 = new java.lang.SecurityException;

        $r4 = specialinvoke r0.<android.app.AppOpsManager: java.lang.String buildSecurityExceptionMsg(int,int,java.lang.String)>(i0, i2, r1);

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        return i3;

     label3:
        $r5 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkAudioOpNoThrow(int, int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2, $i3;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $i3 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>(i0, i1, i2, r1);

     label2:
        return $i3;

     label3:
        $r4 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int noteOp(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2;
        java.lang.String r1, $r4;
        com.android.internal.app.IAppOpsService $r2;
        java.lang.SecurityException $r3;
        android.os.RemoteException $r5;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        i2 = interfaceinvoke $r2.<com.android.internal.app.IAppOpsService: int noteOperation(int,int,java.lang.String)>(i0, i1, r1);

        if i2 != 2 goto label2;

        $r3 = new java.lang.SecurityException;

        $r4 = specialinvoke r0.<android.app.AppOpsManager: java.lang.String buildSecurityExceptionMsg(int,int,java.lang.String)>(i0, i1, r1);

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        return i2;

     label3:
        $r5 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int noteOpNoThrow(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, $i2;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $i2 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int noteOperation(int,int,java.lang.String)>(i0, i1, r1);

     label2:
        return $i2;

     label3:
        $r4 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int noteOp(int)
    {
        android.app.AppOpsManager r0;
        int i0, $i1, $i2;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = r0.<android.app.AppOpsManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(i0, $i1, $r2);

        return $i2;
    }

    public static android.os.IBinder getToken(com.android.internal.app.IAppOpsService)
    {
        com.android.internal.app.IAppOpsService r0;
        java.lang.Class r1;
        java.lang.Throwable r3, $r10;
        android.os.IBinder $r4, $r6, $r7, $r8;
        android.os.Binder $r5;
        android.os.RemoteException $r9;

        r0 := @parameter0: com.android.internal.app.IAppOpsService;

        r1 = class "android/app/AppOpsManager";

        entermonitor class "android/app/AppOpsManager";

     label1:
        $r4 = <android.app.AppOpsManager: android.os.IBinder sToken>;

        if $r4 == null goto label3;

        $r8 = <android.app.AppOpsManager: android.os.IBinder sToken>;

        exitmonitor r1;

     label2:
        return $r8;

     label3:
        $r5 = new android.os.Binder;

        specialinvoke $r5.<android.os.Binder: void <init>()>();

        $r6 = interfaceinvoke r0.<com.android.internal.app.IAppOpsService: android.os.IBinder getToken(android.os.IBinder)>($r5);

        <android.app.AppOpsManager: android.os.IBinder sToken> = $r6;

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

     label6:
        $r7 = <android.app.AppOpsManager: android.os.IBinder sToken>;

        exitmonitor r1;

     label7:
        return $r7;

     label8:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label9:
        throw r3;

        catch android.os.RemoteException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public int startOp(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, i2;
        java.lang.String r1, $r6;
        com.android.internal.app.IAppOpsService $r2, $r3;
        android.os.IBinder $r4;
        java.lang.SecurityException $r5;
        android.os.RemoteException $r7;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r2 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r4 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r2);

        i2 = interfaceinvoke $r3.<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>($r4, i0, i1, r1);

        if i2 != 2 goto label2;

        $r5 = new java.lang.SecurityException;

        $r6 = specialinvoke r0.<android.app.AppOpsManager: java.lang.String buildSecurityExceptionMsg(int,int,java.lang.String)>(i0, i1, r1);

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return i2;

     label3:
        $r7 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int startOpNoThrow(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1, $i2;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3, $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r4 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r5 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r3);

        $i2 = interfaceinvoke $r4.<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>($r5, i0, i1, r1);

     label2:
        return $i2;

     label3:
        $r6 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int startOp(int)
    {
        android.app.AppOpsManager r0;
        int i0, $i1, $i2;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = r0.<android.app.AppOpsManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        $i2 = virtualinvoke r0.<android.app.AppOpsManager: int startOp(int,int,java.lang.String)>(i0, $i1, $r2);

        return $i2;
    }

    public void finishOp(int, int, java.lang.String)
    {
        android.app.AppOpsManager r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.app.IAppOpsService $r3, $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r4 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r3 = r0.<android.app.AppOpsManager: com.android.internal.app.IAppOpsService mService>;

        $r5 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r3);

        interfaceinvoke $r4.<com.android.internal.app.IAppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>($r5, i0, i1, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void finishOp(int)
    {
        android.app.AppOpsManager r0;
        int i0, $i1;
        android.content.Context $r1;
        java.lang.String $r2;

        r0 := @this: android.app.AppOpsManager;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r1 = r0.<android.app.AppOpsManager: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getOpPackageName()>();

        virtualinvoke r0.<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>(i0, $i1, $r2);

        return;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $r0;

        $r0 = <android.app.AppOpsManager: java.lang.String[] sOpToString>;

        return $r0;
    }

    static void <clinit>()
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        int[] $r0, $r6, $r9, $r13, $r48, $r84;
        java.lang.String[] $r1, $r2, $r3, $r4, $r10, $r11, $r12, $r15, $r18, $r20, $r29, $r36, $r63, $r70, $r79;
        boolean[] $r5, $r7, $r14, $r16, $r41;
        java.util.HashMap $r8, $r19;
        java.lang.String $r17, $r22, $r33, $r38, $r44, $r52, $r60, $r69, $r75, $r87;
        java.lang.Integer $r21;
        java.lang.StringBuilder $r23, $r24, $r27, $r28, $r31, $r32, $r34, $r35, $r39, $r40, $r42, $r43, $r45, $r46, $r47, $r49, $r50, $r54, $r55, $r56, $r57, $r58, $r59, $r62, $r64, $r65, $r66, $r67, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r80, $r81, $r82, $r83, $r86;
        java.lang.IllegalStateException $r26, $r30, $r37, $r51, $r53, $r61, $r68, $r85;

        <android.app.AppOpsManager: java.lang.String OPSTR_ACTIVATE_VPN> = "android:activate_vpn";

        <android.app.AppOpsManager: java.lang.String OPSTR_GET_USAGE_STATS> = "android:get_usage_stats";

        <android.app.AppOpsManager: java.lang.String OPSTR_MONITOR_HIGH_POWER_LOCATION> = "android:monitor_location_high_power";

        <android.app.AppOpsManager: java.lang.String OPSTR_MONITOR_LOCATION> = "android:monitor_location";

        <android.app.AppOpsManager: java.lang.String OPSTR_FINE_LOCATION> = "android:fine_location";

        <android.app.AppOpsManager: java.lang.String OPSTR_COARSE_LOCATION> = "android:coarse_location";

        <android.app.AppOpsManager: int _NUM_OP> = 48;

        <android.app.AppOpsManager: int OP_ACTIVATE_VPN> = 47;

        <android.app.AppOpsManager: int OP_PROJECT_MEDIA> = 46;

        <android.app.AppOpsManager: int OP_TOAST_WINDOW> = 45;

        <android.app.AppOpsManager: int OP_MUTE_MICROPHONE> = 44;

        <android.app.AppOpsManager: int OP_GET_USAGE_STATS> = 43;

        <android.app.AppOpsManager: int OP_MONITOR_HIGH_POWER_LOCATION> = 42;

        <android.app.AppOpsManager: int OP_MONITOR_LOCATION> = 41;

        <android.app.AppOpsManager: int OP_WAKE_LOCK> = 40;

        <android.app.AppOpsManager: int OP_AUDIO_BLUETOOTH_VOLUME> = 39;

        <android.app.AppOpsManager: int OP_AUDIO_NOTIFICATION_VOLUME> = 38;

        <android.app.AppOpsManager: int OP_AUDIO_ALARM_VOLUME> = 37;

        <android.app.AppOpsManager: int OP_AUDIO_MEDIA_VOLUME> = 36;

        <android.app.AppOpsManager: int OP_AUDIO_RING_VOLUME> = 35;

        <android.app.AppOpsManager: int OP_AUDIO_VOICE_VOLUME> = 34;

        <android.app.AppOpsManager: int OP_AUDIO_MASTER_VOLUME> = 33;

        <android.app.AppOpsManager: int OP_TAKE_AUDIO_FOCUS> = 32;

        <android.app.AppOpsManager: int OP_TAKE_MEDIA_BUTTONS> = 31;

        <android.app.AppOpsManager: int OP_WRITE_CLIPBOARD> = 30;

        <android.app.AppOpsManager: int OP_READ_CLIPBOARD> = 29;

        <android.app.AppOpsManager: int OP_PLAY_AUDIO> = 28;

        <android.app.AppOpsManager: int OP_RECORD_AUDIO> = 27;

        <android.app.AppOpsManager: int OP_CAMERA> = 26;

        <android.app.AppOpsManager: int OP_ACCESS_NOTIFICATIONS> = 25;

        <android.app.AppOpsManager: int OP_SYSTEM_ALERT_WINDOW> = 24;

        <android.app.AppOpsManager: int OP_WRITE_SETTINGS> = 23;

        <android.app.AppOpsManager: int OP_WRITE_ICC_SMS> = 22;

        <android.app.AppOpsManager: int OP_READ_ICC_SMS> = 21;

        <android.app.AppOpsManager: int OP_SEND_SMS> = 20;

        <android.app.AppOpsManager: int OP_RECEIVE_WAP_PUSH> = 19;

        <android.app.AppOpsManager: int OP_RECEIVE_MMS> = 18;

        <android.app.AppOpsManager: int OP_RECEIVE_EMERGECY_SMS> = 17;

        <android.app.AppOpsManager: int OP_RECEIVE_SMS> = 16;

        <android.app.AppOpsManager: int OP_WRITE_SMS> = 15;

        <android.app.AppOpsManager: int OP_READ_SMS> = 14;

        <android.app.AppOpsManager: int OP_CALL_PHONE> = 13;

        <android.app.AppOpsManager: int OP_NEIGHBORING_CELLS> = 12;

        <android.app.AppOpsManager: int OP_POST_NOTIFICATION> = 11;

        <android.app.AppOpsManager: int OP_WIFI_SCAN> = 10;

        <android.app.AppOpsManager: int OP_WRITE_CALENDAR> = 9;

        <android.app.AppOpsManager: int OP_READ_CALENDAR> = 8;

        <android.app.AppOpsManager: int OP_WRITE_CALL_LOG> = 7;

        <android.app.AppOpsManager: int OP_READ_CALL_LOG> = 6;

        <android.app.AppOpsManager: int OP_WRITE_CONTACTS> = 5;

        <android.app.AppOpsManager: int OP_READ_CONTACTS> = 4;

        <android.app.AppOpsManager: int OP_VIBRATE> = 3;

        <android.app.AppOpsManager: int OP_GPS> = 2;

        <android.app.AppOpsManager: int OP_FINE_LOCATION> = 1;

        <android.app.AppOpsManager: int OP_COARSE_LOCATION> = 0;

        <android.app.AppOpsManager: int OP_NONE> = -1;

        <android.app.AppOpsManager: int MODE_DEFAULT> = 3;

        <android.app.AppOpsManager: int MODE_ERRORED> = 2;

        <android.app.AppOpsManager: int MODE_IGNORED> = 1;

        <android.app.AppOpsManager: int MODE_ALLOWED> = 0;

        $r0 = newarray (int)[48];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 3;

        $r0[4] = 4;

        $r0[5] = 5;

        $r0[6] = 6;

        $r0[7] = 7;

        $r0[8] = 8;

        $r0[9] = 9;

        $r0[10] = 0;

        $r0[11] = 11;

        $r0[12] = 0;

        $r0[13] = 13;

        $r0[14] = 14;

        $r0[15] = 15;

        $r0[16] = 16;

        $r0[17] = 16;

        $r0[18] = 16;

        $r0[19] = 16;

        $r0[20] = 20;

        $r0[21] = 14;

        $r0[22] = 15;

        $r0[23] = 23;

        $r0[24] = 24;

        $r0[25] = 25;

        $r0[26] = 26;

        $r0[27] = 27;

        $r0[28] = 28;

        $r0[29] = 29;

        $r0[30] = 30;

        $r0[31] = 31;

        $r0[32] = 32;

        $r0[33] = 33;

        $r0[34] = 34;

        $r0[35] = 35;

        $r0[36] = 36;

        $r0[37] = 37;

        $r0[38] = 38;

        $r0[39] = 39;

        $r0[40] = 40;

        $r0[41] = 0;

        $r0[42] = 0;

        $r0[43] = 43;

        $r0[44] = 44;

        $r0[45] = 45;

        $r0[46] = 46;

        $r0[47] = 47;

        <android.app.AppOpsManager: int[] sOpToSwitch> = $r0;

        $r1 = newarray (java.lang.String)[48];

        $r1[0] = "android:coarse_location";

        $r1[1] = "android:fine_location";

        $r1[2] = null;

        $r1[3] = null;

        $r1[4] = null;

        $r1[5] = null;

        $r1[6] = null;

        $r1[7] = null;

        $r1[8] = null;

        $r1[9] = null;

        $r1[10] = null;

        $r1[11] = null;

        $r1[12] = null;

        $r1[13] = null;

        $r1[14] = null;

        $r1[15] = null;

        $r1[16] = null;

        $r1[17] = null;

        $r1[18] = null;

        $r1[19] = null;

        $r1[20] = null;

        $r1[21] = null;

        $r1[22] = null;

        $r1[23] = null;

        $r1[24] = null;

        $r1[25] = null;

        $r1[26] = null;

        $r1[27] = null;

        $r1[28] = null;

        $r1[29] = null;

        $r1[30] = null;

        $r1[31] = null;

        $r1[32] = null;

        $r1[33] = null;

        $r1[34] = null;

        $r1[35] = null;

        $r1[36] = null;

        $r1[37] = null;

        $r1[38] = null;

        $r1[39] = null;

        $r1[40] = null;

        $r1[41] = "android:monitor_location";

        $r1[42] = "android:monitor_location_high_power";

        $r1[43] = "android:get_usage_stats";

        $r1[44] = null;

        $r1[45] = null;

        $r1[46] = null;

        $r1[47] = "android:activate_vpn";

        <android.app.AppOpsManager: java.lang.String[] sOpToString> = $r1;

        $r2 = newarray (java.lang.String)[48];

        $r2[0] = "COARSE_LOCATION";

        $r2[1] = "FINE_LOCATION";

        $r2[2] = "GPS";

        $r2[3] = "VIBRATE";

        $r2[4] = "READ_CONTACTS";

        $r2[5] = "WRITE_CONTACTS";

        $r2[6] = "READ_CALL_LOG";

        $r2[7] = "WRITE_CALL_LOG";

        $r2[8] = "READ_CALENDAR";

        $r2[9] = "WRITE_CALENDAR";

        $r2[10] = "WIFI_SCAN";

        $r2[11] = "POST_NOTIFICATION";

        $r2[12] = "NEIGHBORING_CELLS";

        $r2[13] = "CALL_PHONE";

        $r2[14] = "READ_SMS";

        $r2[15] = "WRITE_SMS";

        $r2[16] = "RECEIVE_SMS";

        $r2[17] = "RECEIVE_EMERGECY_SMS";

        $r2[18] = "RECEIVE_MMS";

        $r2[19] = "RECEIVE_WAP_PUSH";

        $r2[20] = "SEND_SMS";

        $r2[21] = "READ_ICC_SMS";

        $r2[22] = "WRITE_ICC_SMS";

        $r2[23] = "WRITE_SETTINGS";

        $r2[24] = "SYSTEM_ALERT_WINDOW";

        $r2[25] = "ACCESS_NOTIFICATIONS";

        $r2[26] = "CAMERA";

        $r2[27] = "RECORD_AUDIO";

        $r2[28] = "PLAY_AUDIO";

        $r2[29] = "READ_CLIPBOARD";

        $r2[30] = "WRITE_CLIPBOARD";

        $r2[31] = "TAKE_MEDIA_BUTTONS";

        $r2[32] = "TAKE_AUDIO_FOCUS";

        $r2[33] = "AUDIO_MASTER_VOLUME";

        $r2[34] = "AUDIO_VOICE_VOLUME";

        $r2[35] = "AUDIO_RING_VOLUME";

        $r2[36] = "AUDIO_MEDIA_VOLUME";

        $r2[37] = "AUDIO_ALARM_VOLUME";

        $r2[38] = "AUDIO_NOTIFICATION_VOLUME";

        $r2[39] = "AUDIO_BLUETOOTH_VOLUME";

        $r2[40] = "WAKE_LOCK";

        $r2[41] = "MONITOR_LOCATION";

        $r2[42] = "MONITOR_HIGH_POWER_LOCATION";

        $r2[43] = "GET_USAGE_STATS";

        $r2[44] = "MUTE_MICROPHONE";

        $r2[45] = "TOAST_WINDOW";

        $r2[46] = "PROJECT_MEDIA";

        $r2[47] = "ACTIVATE_VPN";

        <android.app.AppOpsManager: java.lang.String[] sOpNames> = $r2;

        $r3 = newarray (java.lang.String)[48];

        $r3[0] = "android.permission.ACCESS_COARSE_LOCATION";

        $r3[1] = "android.permission.ACCESS_FINE_LOCATION";

        $r3[2] = null;

        $r3[3] = "android.permission.VIBRATE";

        $r3[4] = "android.permission.READ_CONTACTS";

        $r3[5] = "android.permission.WRITE_CONTACTS";

        $r3[6] = "android.permission.READ_CALL_LOG";

        $r3[7] = "android.permission.WRITE_CALL_LOG";

        $r3[8] = "android.permission.READ_CALENDAR";

        $r3[9] = "android.permission.WRITE_CALENDAR";

        $r3[10] = "android.permission.ACCESS_WIFI_STATE";

        $r3[11] = null;

        $r3[12] = null;

        $r3[13] = "android.permission.CALL_PHONE";

        $r3[14] = "android.permission.READ_SMS";

        $r3[15] = "android.permission.WRITE_SMS";

        $r3[16] = "android.permission.RECEIVE_SMS";

        $r3[17] = "android.permission.RECEIVE_EMERGENCY_BROADCAST";

        $r3[18] = "android.permission.RECEIVE_MMS";

        $r3[19] = "android.permission.RECEIVE_WAP_PUSH";

        $r3[20] = "android.permission.SEND_SMS";

        $r3[21] = "android.permission.READ_SMS";

        $r3[22] = "android.permission.WRITE_SMS";

        $r3[23] = "android.permission.WRITE_SETTINGS";

        $r3[24] = "android.permission.SYSTEM_ALERT_WINDOW";

        $r3[25] = "android.permission.ACCESS_NOTIFICATIONS";

        $r3[26] = "android.permission.CAMERA";

        $r3[27] = "android.permission.RECORD_AUDIO";

        $r3[28] = null;

        $r3[29] = null;

        $r3[30] = null;

        $r3[31] = null;

        $r3[32] = null;

        $r3[33] = null;

        $r3[34] = null;

        $r3[35] = null;

        $r3[36] = null;

        $r3[37] = null;

        $r3[38] = null;

        $r3[39] = null;

        $r3[40] = "android.permission.WAKE_LOCK";

        $r3[41] = null;

        $r3[42] = null;

        $r3[43] = "android.permission.PACKAGE_USAGE_STATS";

        $r3[44] = null;

        $r3[45] = null;

        $r3[46] = null;

        $r3[47] = null;

        <android.app.AppOpsManager: java.lang.String[] sOpPerms> = $r3;

        $r4 = newarray (java.lang.String)[48];

        $r4[0] = "no_share_location";

        $r4[1] = "no_share_location";

        $r4[2] = "no_share_location";

        $r4[3] = null;

        $r4[4] = null;

        $r4[5] = null;

        $r4[6] = "no_outgoing_calls";

        $r4[7] = "no_outgoing_calls";

        $r4[8] = null;

        $r4[9] = null;

        $r4[10] = "no_share_location";

        $r4[11] = null;

        $r4[12] = null;

        $r4[13] = null;

        $r4[14] = "no_sms";

        $r4[15] = "no_sms";

        $r4[16] = "no_sms";

        $r4[17] = null;

        $r4[18] = "no_sms";

        $r4[19] = null;

        $r4[20] = "no_sms";

        $r4[21] = "no_sms";

        $r4[22] = "no_sms";

        $r4[23] = null;

        $r4[24] = "no_create_windows";

        $r4[25] = null;

        $r4[26] = null;

        $r4[27] = null;

        $r4[28] = null;

        $r4[29] = null;

        $r4[30] = null;

        $r4[31] = null;

        $r4[32] = null;

        $r4[33] = "no_adjust_volume";

        $r4[34] = "no_adjust_volume";

        $r4[35] = "no_adjust_volume";

        $r4[36] = "no_adjust_volume";

        $r4[37] = "no_adjust_volume";

        $r4[38] = "no_adjust_volume";

        $r4[39] = "no_adjust_volume";

        $r4[40] = null;

        $r4[41] = "no_share_location";

        $r4[42] = "no_share_location";

        $r4[43] = null;

        $r4[44] = "no_unmute_microphone";

        $r4[45] = "no_create_windows";

        $r4[46] = null;

        $r4[47] = "no_config_vpn";

        <android.app.AppOpsManager: java.lang.String[] sOpRestrictions> = $r4;

        $r5 = newarray (boolean)[48];

        $r5[0] = 0;

        $r5[1] = 0;

        $r5[2] = 0;

        $r5[3] = 0;

        $r5[4] = 0;

        $r5[5] = 0;

        $r5[6] = 0;

        $r5[7] = 0;

        $r5[8] = 0;

        $r5[9] = 0;

        $r5[10] = 1;

        $r5[11] = 0;

        $r5[12] = 0;

        $r5[13] = 0;

        $r5[14] = 0;

        $r5[15] = 0;

        $r5[16] = 0;

        $r5[17] = 0;

        $r5[18] = 0;

        $r5[19] = 0;

        $r5[20] = 0;

        $r5[21] = 0;

        $r5[22] = 0;

        $r5[23] = 0;

        $r5[24] = 1;

        $r5[25] = 0;

        $r5[26] = 0;

        $r5[27] = 0;

        $r5[28] = 0;

        $r5[29] = 0;

        $r5[30] = 0;

        $r5[31] = 0;

        $r5[32] = 0;

        $r5[33] = 0;

        $r5[34] = 0;

        $r5[35] = 0;

        $r5[36] = 0;

        $r5[37] = 0;

        $r5[38] = 0;

        $r5[39] = 0;

        $r5[40] = 0;

        $r5[41] = 0;

        $r5[42] = 0;

        $r5[43] = 0;

        $r5[44] = 0;

        $r5[45] = 1;

        $r5[46] = 0;

        $r5[47] = 0;

        <android.app.AppOpsManager: boolean[] sOpAllowSystemRestrictionBypass> = $r5;

        $r6 = newarray (int)[48];

        $r6[0] = 0;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r6[4] = 0;

        $r6[5] = 0;

        $r6[6] = 0;

        $r6[7] = 0;

        $r6[8] = 0;

        $r6[9] = 0;

        $r6[10] = 0;

        $r6[11] = 0;

        $r6[12] = 0;

        $r6[13] = 0;

        $r6[14] = 0;

        $r6[15] = 1;

        $r6[16] = 0;

        $r6[17] = 0;

        $r6[18] = 0;

        $r6[19] = 0;

        $r6[20] = 0;

        $r6[21] = 0;

        $r6[22] = 0;

        $r6[23] = 0;

        $r6[24] = 0;

        $r6[25] = 0;

        $r6[26] = 0;

        $r6[27] = 0;

        $r6[28] = 0;

        $r6[29] = 0;

        $r6[30] = 0;

        $r6[31] = 0;

        $r6[32] = 0;

        $r6[33] = 0;

        $r6[34] = 0;

        $r6[35] = 0;

        $r6[36] = 0;

        $r6[37] = 0;

        $r6[38] = 0;

        $r6[39] = 0;

        $r6[40] = 0;

        $r6[41] = 0;

        $r6[42] = 0;

        $r6[43] = 3;

        $r6[44] = 0;

        $r6[45] = 0;

        $r6[46] = 1;

        $r6[47] = 1;

        <android.app.AppOpsManager: int[] sOpDefaultMode> = $r6;

        $r7 = newarray (boolean)[48];

        $r7[0] = 0;

        $r7[1] = 0;

        $r7[2] = 0;

        $r7[3] = 0;

        $r7[4] = 0;

        $r7[5] = 0;

        $r7[6] = 0;

        $r7[7] = 0;

        $r7[8] = 0;

        $r7[9] = 0;

        $r7[10] = 0;

        $r7[11] = 0;

        $r7[12] = 0;

        $r7[13] = 0;

        $r7[14] = 0;

        $r7[15] = 1;

        $r7[16] = 0;

        $r7[17] = 0;

        $r7[18] = 0;

        $r7[19] = 0;

        $r7[20] = 0;

        $r7[21] = 0;

        $r7[22] = 0;

        $r7[23] = 0;

        $r7[24] = 0;

        $r7[25] = 0;

        $r7[26] = 0;

        $r7[27] = 0;

        $r7[28] = 0;

        $r7[29] = 0;

        $r7[30] = 0;

        $r7[31] = 0;

        $r7[32] = 0;

        $r7[33] = 0;

        $r7[34] = 0;

        $r7[35] = 0;

        $r7[36] = 0;

        $r7[37] = 0;

        $r7[38] = 0;

        $r7[39] = 0;

        $r7[40] = 0;

        $r7[41] = 0;

        $r7[42] = 0;

        $r7[43] = 0;

        $r7[44] = 0;

        $r7[45] = 0;

        $r7[46] = 0;

        $r7[47] = 0;

        <android.app.AppOpsManager: boolean[] sOpDisableReset> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        <android.app.AppOpsManager: java.util.HashMap sOpStrToOp> = $r8;

        $r9 = <android.app.AppOpsManager: int[] sOpToSwitch>;

        $i1 = lengthof $r9;

        if $i1 == 48 goto label01;

        $r85 = new java.lang.IllegalStateException;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpToSwitch length ");

        $r84 = <android.app.AppOpsManager: int[] sOpToSwitch>;

        $i16 = lengthof $r84;

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r80 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r87 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r85.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r87);

        throw $r85;

     label01:
        $r10 = <android.app.AppOpsManager: java.lang.String[] sOpToString>;

        $i2 = lengthof $r10;

        if $i2 == 48 goto label02;

        $r68 = new java.lang.IllegalStateException;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpToString length ");

        $r79 = <android.app.AppOpsManager: java.lang.String[] sOpToString>;

        $i15 = lengthof $r79;

        $r74 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r75);

        throw $r68;

     label02:
        $r11 = <android.app.AppOpsManager: java.lang.String[] sOpNames>;

        $i3 = lengthof $r11;

        if $i3 == 48 goto label03;

        $r61 = new java.lang.IllegalStateException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpNames length ");

        $r70 = <android.app.AppOpsManager: java.lang.String[] sOpNames>;

        $i14 = lengthof $r70;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r67 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r69);

        throw $r61;

     label03:
        $r12 = <android.app.AppOpsManager: java.lang.String[] sOpPerms>;

        $i4 = lengthof $r12;

        if $i4 == 48 goto label04;

        $r53 = new java.lang.IllegalStateException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpPerms length ");

        $r63 = <android.app.AppOpsManager: java.lang.String[] sOpPerms>;

        $i13 = lengthof $r63;

        $r64 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r59 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r60);

        throw $r53;

     label04:
        $r13 = <android.app.AppOpsManager: int[] sOpDefaultMode>;

        $i5 = lengthof $r13;

        if $i5 == 48 goto label05;

        $r51 = new java.lang.IllegalStateException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpDefaultMode length ");

        $r48 = <android.app.AppOpsManager: int[] sOpDefaultMode>;

        $i12 = lengthof $r48;

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r52 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r52);

        throw $r51;

     label05:
        $r14 = <android.app.AppOpsManager: boolean[] sOpDisableReset>;

        $i6 = lengthof $r14;

        if $i6 == 48 goto label06;

        $r37 = new java.lang.IllegalStateException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpDisableReset length ");

        $r41 = <android.app.AppOpsManager: boolean[] sOpDisableReset>;

        $i11 = lengthof $r41;

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        throw $r37;

     label06:
        $r15 = <android.app.AppOpsManager: java.lang.String[] sOpRestrictions>;

        $i7 = lengthof $r15;

        if $i7 == 48 goto label07;

        $r30 = new java.lang.IllegalStateException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpRestrictions length ");

        $r36 = <android.app.AppOpsManager: java.lang.String[] sOpRestrictions>;

        $i10 = lengthof $r36;

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r38);

        throw $r30;

     label07:
        $r16 = <android.app.AppOpsManager: boolean[] sOpAllowSystemRestrictionBypass>;

        $i8 = lengthof $r16;

        if $i8 == 48 goto label08;

        $r26 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sOpAllowSYstemRestrictionsBypass length ");

        $r29 = <android.app.AppOpsManager: java.lang.String[] sOpRestrictions>;

        $i9 = lengthof $r29;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be ");

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(48);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        throw $r26;

     label08:
        i0 = 0;

     label09:
        if i0 >= 48 goto label11;

        $r18 = <android.app.AppOpsManager: java.lang.String[] sOpToString>;

        $r17 = $r18[i0];

        if $r17 == null goto label10;

        $r19 = <android.app.AppOpsManager: java.util.HashMap sOpStrToOp>;

        $r20 = <android.app.AppOpsManager: java.lang.String[] sOpToString>;

        $r22 = $r20[i0];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r21);

     label10:
        i0 = i0 + 1;

        goto label09;

     label11:
        return;
    }
}
