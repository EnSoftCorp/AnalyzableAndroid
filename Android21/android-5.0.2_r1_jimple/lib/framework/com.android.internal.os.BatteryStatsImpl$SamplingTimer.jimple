public final class com.android.internal.os.BatteryStatsImpl$SamplingTimer extends com.android.internal.os.BatteryStatsImpl$Timer
{
    int mCurrentReportedCount;
    int mUnpluggedReportedCount;
    long mCurrentReportedTotalTime;
    long mUnpluggedReportedTotalTime;
    boolean mTimeBaseRunning;
    boolean mTrackingReportedValues;
    int mUpdateVersion;

    void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase, android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        android.os.Parcel r2;
        int $i0, $i1, $i4;
        long $l2, $l3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        r2 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)>(0, r1, r2);

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = $i0;

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i1;

        $l2 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = $l2;

        $l3 = virtualinvoke r2.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i4 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = $z1;

        $z0 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = $z0;

        return;
    }

    void <init>(com.android.internal.os.BatteryStatsImpl$TimeBase, boolean)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        com.android.internal.os.BatteryStatsImpl$TimeBase r1;
        boolean z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: com.android.internal.os.BatteryStatsImpl$TimeBase;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,com.android.internal.os.BatteryStatsImpl$TimeBase)>(0, r1);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = z0;

        $z1 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl$TimeBase: boolean isRunning()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = $z1;

        return;
    }

    public void setStale()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = 0L;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = 0;

        return;
    }

    public void setUpdateVersion(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion> = i0;

        return;
    }

    public int getUpdateVersion()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int $i0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUpdateVersion>;

        return $i0;
    }

    public void updateCurrentReportedCount(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        if $i1 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = i0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = i0;

        return;
    }

    public void addCurrentReportedCount(int)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $i2 = $i1 + i0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedCount(int)>($i2);

        return;
    }

    public void updateCurrentReportedTotalTime(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l1;
        boolean $z0;
        byte $b2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = 1;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = l0;

        return;
    }

    public void addCurrentReportedTotalTime(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l1, $l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $l2 = $l1 + l0;

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedTotalTime(long)>($l2);

        return;
    }

    public void onTimeStarted(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2, $l3;
        boolean $z0;
        int $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStarted(long,long,long)>(l0, l1, l2);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label1;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l3;

        $i4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i4;

     label1:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = 1;

        return;
    }

    public void onTimeStopped(long, long, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, l1, l2;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void onTimeStopped(long,long,long)>(l0, l1, l2);

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning> = 0;

        return;
    }

    public void logState(android.util.Printer, java.lang.String)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.util.Printer r1;
        java.lang.String r2, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurrentReportedCount=");

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedCount=");

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentReportedTotalTime=");

        $l2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUnpluggedReportedTotalTime=");

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r12);

        return;
    }

    protected long computeRunTimeLocked(long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        long l0, $l1, $l2, $l3, $l4, $l5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mTotalTime>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label1;

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        $l5 = $l4 - $l3;

        goto label2;

     label1:
        $l5 = 0L;

     label2:
        $l2 = $l1 + $l5;

        return $l2;
    }

    protected int computeCurrentCountLocked()
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        $i0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCount>;

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTimeBaseRunning>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z1 == 0 goto label1;

        $i3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        $i4 = $i3 - $i2;

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i1 = $i0 + $i4;

        return $i1;
    }

    public void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long l0, $l3, $l4;
        int $i1, $i2;
        boolean $z0;
        byte $b5;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>(r1, l0);

        $i1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $l3 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l3);

        $l4 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b5);

        return;
    }

    boolean reset(boolean)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        boolean z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(boolean)>(z0);

        virtualinvoke r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setStale()>();

        return 1;
    }

    void writeSummaryFromParcelLocked(android.os.Parcel, long)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long l0, $l1;
        int $i2;
        boolean $z0;
        byte $b3;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>(r1, l0);

        $l1 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $i2 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $z0 = r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues>;

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b3);

        return;
    }

    void readSummaryFromParcelLocked(android.os.Parcel)
    {
        com.android.internal.os.BatteryStatsImpl$SamplingTimer r0;
        android.os.Parcel r1;
        long $l0;
        int $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.os.BatteryStatsImpl$SamplingTimer;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>(r1);

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mCurrentReportedTotalTime> = $l0;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long mUnpluggedReportedTotalTime> = $l0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mCurrentReportedCount> = $i1;

        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int mUnpluggedReportedCount> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean mTrackingReportedValues> = $z0;

        return;
    }
}
